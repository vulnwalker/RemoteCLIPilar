{
    "namaFile": "lib\/PHPExcel\/Classes\/PHPExcel\/Shared\/JAMA\/SingularValueDecomposition.php",
    "lastUpdate": "2017-12-25+01:39:38.00",
    "contentFile": "PD9waHAKLyoqCiAqICAgIEBwYWNrYWdlIEpBTUEKICoKICogICAgRm9yIGFuIG0tYnktbiBtYXRyaXggQSB3aXRoIG0gPj0gbiwgdGhlIHNpbmd1bGFyIHZhbHVlIGRlY29tcG9zaXRpb24gaXMKICogICAgYW4gbS1ieS1uIG9ydGhvZ29uYWwgbWF0cml4IFUsIGFuIG4tYnktbiBkaWFnb25hbCBtYXRyaXggUywgYW5kCiAqICAgIGFuIG4tYnktbiBvcnRob2dvbmFsIG1hdHJpeCBWIHNvIHRoYXQgQSA9IFUqUypWJy4KICoKICogICAgVGhlIHNpbmd1bGFyIHZhbHVlcywgc2lnbWFbJGtdID0gU1ska11bJGtdLCBhcmUgb3JkZXJlZCBzbyB0aGF0CiAqICAgIHNpZ21hWzBdID49IHNpZ21hWzFdID49IC4uLiA+PSBzaWdtYVtuLTFdLgogKgogKiAgICBUaGUgc2luZ3VsYXIgdmFsdWUgZGVjb21wb3N0aW9uIGFsd2F5cyBleGlzdHMsIHNvIHRoZSBjb25zdHJ1Y3RvciB3aWxsCiAqICAgIG5ldmVyIGZhaWwuICBUaGUgbWF0cml4IGNvbmRpdGlvbiBudW1iZXIgYW5kIHRoZSBlZmZlY3RpdmUgbnVtZXJpY2FsCiAqICAgIHJhbmsgY2FuIGJlIGNvbXB1dGVkIGZyb20gdGhpcyBkZWNvbXBvc2l0aW9uLgogKgogKiAgICBAYXV0aG9yICBQYXVsIE1lYWdoZXIKICogICAgQGxpY2Vuc2UgUEhQIHYzLjAKICogICAgQHZlcnNpb24gMS4xCiAqLwpjbGFzcyBTaW5ndWxhclZhbHVlRGVjb21wb3NpdGlvbgp7CiAgICAvKioKICAgICAqICAgIEludGVybmFsIHN0b3JhZ2Ugb2YgVS4KICAgICAqICAgIEB2YXIgYXJyYXkKICAgICAqLwogICAgcHJpdmF0ZSAkVSA9IGFycmF5KCk7CgogICAgLyoqCiAgICAgKiAgICBJbnRlcm5hbCBzdG9yYWdlIG9mIFYuCiAgICAgKiAgICBAdmFyIGFycmF5CiAgICAgKi8KICAgIHByaXZhdGUgJFYgPSBhcnJheSgpOwoKICAgIC8qKgogICAgICogICAgSW50ZXJuYWwgc3RvcmFnZSBvZiBzaW5ndWxhciB2YWx1ZXMuCiAgICAgKiAgICBAdmFyIGFycmF5CiAgICAgKi8KICAgIHByaXZhdGUgJHMgPSBhcnJheSgpOwoKICAgIC8qKgogICAgICogICAgUm93IGRpbWVuc2lvbi4KICAgICAqICAgIEB2YXIgaW50CiAgICAgKi8KICAgIHByaXZhdGUgJG07CgogICAgLyoqCiAgICAgKiAgICBDb2x1bW4gZGltZW5zaW9uLgogICAgICogICAgQHZhciBpbnQKICAgICAqLwogICAgcHJpdmF0ZSAkbjsKCiAgICAvKioKICAgICAqICAgIENvbnN0cnVjdCB0aGUgc2luZ3VsYXIgdmFsdWUgZGVjb21wb3NpdGlvbgogICAgICoKICAgICAqICAgIERlcml2ZWQgZnJvbSBMSU5QQUNLIGNvZGUuCiAgICAgKgogICAgICogICAgQHBhcmFtICRBIFJlY3Rhbmd1bGFyIG1hdHJpeAogICAgICogICAgQHJldHVybiBTdHJ1Y3R1cmUgdG8gYWNjZXNzIFUsIFMgYW5kIFYuCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBfX2NvbnN0cnVjdCgkQXJnKQogICAgewogICAgICAgIC8vIEluaXRpYWxpemUuCiAgICAgICAgJEEgPSAkQXJnLT5nZXRBcnJheUNvcHkoKTsKICAgICAgICAkdGhpcy0+bSA9ICRBcmctPmdldFJvd0RpbWVuc2lvbigpOwogICAgICAgICR0aGlzLT5uID0gJEFyZy0+Z2V0Q29sdW1uRGltZW5zaW9uKCk7CiAgICAgICAgJG51ICAgICAgPSBtaW4oJHRoaXMtPm0sICR0aGlzLT5uKTsKICAgICAgICAkZSAgICAgICA9IGFycmF5KCk7CiAgICAgICAgJHdvcmsgICAgPSBhcnJheSgpOwogICAgICAgICR3YW50dSAgID0gdHJ1ZTsKICAgICAgICAkd2FudHYgICA9IHRydWU7CiAgICAgICAgJG5jdCA9IG1pbigkdGhpcy0+bSAtIDEsICR0aGlzLT5uKTsKICAgICAgICAkbnJ0ID0gbWF4KDAsIG1pbigkdGhpcy0+biAtIDIsICR0aGlzLT5tKSk7CgogICAgICAgIC8vIFJlZHVjZSBBIHRvIGJpZGlhZ29uYWwgZm9ybSwgc3RvcmluZyB0aGUgZGlhZ29uYWwgZWxlbWVudHMKICAgICAgICAvLyBpbiBzIGFuZCB0aGUgc3VwZXItZGlhZ29uYWwgZWxlbWVudHMgaW4gZS4KICAgICAgICBmb3IgKCRrID0gMDsgJGsgPCBtYXgoJG5jdCwgJG5ydCk7ICsrJGspIHsKICAgICAgICAgICAgaWYgKCRrIDwgJG5jdCkgewogICAgICAgICAgICAgICAgLy8gQ29tcHV0ZSB0aGUgdHJhbnNmb3JtYXRpb24gZm9yIHRoZSBrLXRoIGNvbHVtbiBhbmQKICAgICAgICAgICAgICAgIC8vIHBsYWNlIHRoZSBrLXRoIGRpYWdvbmFsIGluIHNbJGtdLgogICAgICAgICAgICAgICAgLy8gQ29tcHV0ZSAyLW5vcm0gb2Ygay10aCBjb2x1bW4gd2l0aG91dCB1bmRlci9vdmVyZmxvdy4KICAgICAgICAgICAgICAgICR0aGlzLT5zWyRrXSA9IDA7CiAgICAgICAgICAgICAgICBmb3IgKCRpID0gJGs7ICRpIDwgJHRoaXMtPm07ICsrJGkpIHsKICAgICAgICAgICAgICAgICAgICAkdGhpcy0+c1ska10gPSBoeXBvKCR0aGlzLT5zWyRrXSwgJEFbJGldWyRrXSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoJHRoaXMtPnNbJGtdICE9IDAuMCkgewogICAgICAgICAgICAgICAgICAgIGlmICgkQVska11bJGtdIDwgMC4wKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5zWyRrXSA9IC0kdGhpcy0+c1ska107CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGZvciAoJGkgPSAkazsgJGkgPCAkdGhpcy0+bTsgKyskaSkgewogICAgICAgICAgICAgICAgICAgICAgICAkQVskaV1bJGtdIC89ICR0aGlzLT5zWyRrXTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgJEFbJGtdWyRrXSArPSAxLjA7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAkdGhpcy0+c1ska10gPSAtJHRoaXMtPnNbJGtdOwogICAgICAgICAgICB9CgogICAgICAgICAgICBmb3IgKCRqID0gJGsgKyAxOyAkaiA8ICR0aGlzLT5uOyArKyRqKSB7CiAgICAgICAgICAgICAgICBpZiAoKCRrIDwgJG5jdCkgJiAoJHRoaXMtPnNbJGtdICE9IDAuMCkpIHsKICAgICAgICAgICAgICAgICAgICAvLyBBcHBseSB0aGUgdHJhbnNmb3JtYXRpb24uCiAgICAgICAgICAgICAgICAgICAgJHQgPSAwOwogICAgICAgICAgICAgICAgICAgIGZvciAoJGkgPSAkazsgJGkgPCAkdGhpcy0+bTsgKyskaSkgewogICAgICAgICAgICAgICAgICAgICAgICAkdCArPSAkQVskaV1bJGtdICogJEFbJGldWyRqXTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgJHQgPSAtJHQgLyAkQVska11bJGtdOwogICAgICAgICAgICAgICAgICAgIGZvciAoJGkgPSAkazsgJGkgPCAkdGhpcy0+bTsgKyskaSkgewogICAgICAgICAgICAgICAgICAgICAgICAkQVskaV1bJGpdICs9ICR0ICogJEFbJGldWyRrXTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgLy8gUGxhY2UgdGhlIGstdGggcm93IG9mIEEgaW50byBlIGZvciB0aGUKICAgICAgICAgICAgICAgICAgICAvLyBzdWJzZXF1ZW50IGNhbGN1bGF0aW9uIG9mIHRoZSByb3cgdHJhbnNmb3JtYXRpb24uCiAgICAgICAgICAgICAgICAgICAgJGVbJGpdID0gJEFbJGtdWyRqXTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCR3YW50dSBhbmQgKCRrIDwgJG5jdCkpIHsKICAgICAgICAgICAgICAgIC8vIFBsYWNlIHRoZSB0cmFuc2Zvcm1hdGlvbiBpbiBVIGZvciBzdWJzZXF1ZW50IGJhY2sKICAgICAgICAgICAgICAgIC8vIG11bHRpcGxpY2F0aW9uLgogICAgICAgICAgICAgICAgZm9yICgkaSA9ICRrOyAkaSA8ICR0aGlzLT5tOyArKyRpKSB7CiAgICAgICAgICAgICAgICAgICAgJHRoaXMtPlVbJGldWyRrXSA9ICRBWyRpXVska107CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICgkayA8ICRucnQpIHsKICAgICAgICAgICAgICAgIC8vIENvbXB1dGUgdGhlIGstdGggcm93IHRyYW5zZm9ybWF0aW9uIGFuZCBwbGFjZSB0aGUKICAgICAgICAgICAgICAgIC8vIGstdGggc3VwZXItZGlhZ29uYWwgaW4gZVska10uCiAgICAgICAgICAgICAgICAvLyBDb21wdXRlIDItbm9ybSB3aXRob3V0IHVuZGVyL292ZXJmbG93LgogICAgICAgICAgICAgICAgJGVbJGtdID0gMDsKICAgICAgICAgICAgICAgIGZvciAoJGkgPSAkayArIDE7ICRpIDwgJHRoaXMtPm47ICsrJGkpIHsKICAgICAgICAgICAgICAgICAgICAkZVska10gPSBoeXBvKCRlWyRrXSwgJGVbJGldKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmICgkZVska10gIT0gMC4wKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCRlWyRrKzFdIDwgMC4wKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRlWyRrXSA9IC0kZVska107CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGZvciAoJGkgPSAkayArIDE7ICRpIDwgJHRoaXMtPm47ICsrJGkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJGVbJGldIC89ICRlWyRrXTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgJGVbJGsrMV0gKz0gMS4wOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgJGVbJGtdID0gLSRlWyRrXTsKICAgICAgICAgICAgICAgIGlmICgoJGsrMSA8ICR0aGlzLT5tKSBhbmQgKCRlWyRrXSAhPSAwLjApKSB7CiAgICAgICAgICAgICAgICAgICAgLy8gQXBwbHkgdGhlIHRyYW5zZm9ybWF0aW9uLgogICAgICAgICAgICAgICAgICAgIGZvciAoJGkgPSAkaysxOyAkaSA8ICR0aGlzLT5tOyArKyRpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICR3b3JrWyRpXSA9IDAuMDsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZm9yICgkaiA9ICRrKzE7ICRqIDwgJHRoaXMtPm47ICsrJGopIHsKICAgICAgICAgICAgICAgICAgICAgICAgZm9yICgkaSA9ICRrKzE7ICRpIDwgJHRoaXMtPm07ICsrJGkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICR3b3JrWyRpXSArPSAkZVskal0gKiAkQVskaV1bJGpdOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGZvciAoJGogPSAkayArIDE7ICRqIDwgJHRoaXMtPm47ICsrJGopIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHQgPSAtJGVbJGpdIC8gJGVbJGsrMV07CiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoJGkgPSAkayArIDE7ICRpIDwgJHRoaXMtPm07ICsrJGkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRBWyRpXVskal0gKz0gJHQgKiAkd29ya1skaV07CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoJHdhbnR2KSB7CiAgICAgICAgICAgICAgICAgICAgLy8gUGxhY2UgdGhlIHRyYW5zZm9ybWF0aW9uIGluIFYgZm9yIHN1YnNlcXVlbnQKICAgICAgICAgICAgICAgICAgICAvLyBiYWNrIG11bHRpcGxpY2F0aW9uLgogICAgICAgICAgICAgICAgICAgIGZvciAoJGkgPSAkayArIDE7ICRpIDwgJHRoaXMtPm47ICsrJGkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPlZbJGldWyRrXSA9ICRlWyRpXTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIC8vIFNldCB1cCB0aGUgZmluYWwgYmlkaWFnb25hbCBtYXRyaXggb3Igb3JkZXIgcC4KICAgICAgICAkcCA9IG1pbigkdGhpcy0+biwgJHRoaXMtPm0gKyAxKTsKICAgICAgICBpZiAoJG5jdCA8ICR0aGlzLT5uKSB7CiAgICAgICAgICAgICR0aGlzLT5zWyRuY3RdID0gJEFbJG5jdF1bJG5jdF07CiAgICAgICAgfQogICAgICAgIGlmICgkdGhpcy0+bSA8ICRwKSB7CiAgICAgICAgICAgICR0aGlzLT5zWyRwLTFdID0gMC4wOwogICAgICAgIH0KICAgICAgICBpZiAoJG5ydCArIDEgPCAkcCkgewogICAgICAgICAgICAkZVskbnJ0XSA9ICRBWyRucnRdWyRwLTFdOwogICAgICAgIH0KICAgICAgICAkZVskcC0xXSA9IDAuMDsKICAgICAgICAvLyBJZiByZXF1aXJlZCwgZ2VuZXJhdGUgVS4KICAgICAgICBpZiAoJHdhbnR1KSB7CiAgICAgICAgICAgIGZvciAoJGogPSAkbmN0OyAkaiA8ICRudTsgKyskaikgewogICAgICAgICAgICAgICAgZm9yICgkaSA9IDA7ICRpIDwgJHRoaXMtPm07ICsrJGkpIHsKICAgICAgICAgICAgICAgICAgICAkdGhpcy0+VVskaV1bJGpdID0gMC4wOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgJHRoaXMtPlVbJGpdWyRqXSA9IDEuMDsKICAgICAgICAgICAgfQogICAgICAgICAgICBmb3IgKCRrID0gJG5jdCAtIDE7ICRrID49IDA7IC0tJGspIHsKICAgICAgICAgICAgICAgIGlmICgkdGhpcy0+c1ska10gIT0gMC4wKSB7CiAgICAgICAgICAgICAgICAgICAgZm9yICgkaiA9ICRrICsgMTsgJGogPCAkbnU7ICsrJGopIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHQgPSAwOwogICAgICAgICAgICAgICAgICAgICAgICBmb3IgKCRpID0gJGs7ICRpIDwgJHRoaXMtPm07ICsrJGkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0ICs9ICR0aGlzLT5VWyRpXVska10gKiAkdGhpcy0+VVskaV1bJGpdOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICR0ID0gLSR0IC8gJHRoaXMtPlVbJGtdWyRrXTsKICAgICAgICAgICAgICAgICAgICAgICAgZm9yICgkaSA9ICRrOyAkaSA8ICR0aGlzLT5tOyArKyRpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+VVskaV1bJGpdICs9ICR0ICogJHRoaXMtPlVbJGldWyRrXTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBmb3IgKCRpID0gJGs7ICRpIDwgJHRoaXMtPm07ICsrJGkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPlVbJGldWyRrXSA9IC0kdGhpcy0+VVskaV1bJGtdOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAkdGhpcy0+VVska11bJGtdID0gMS4wICsgJHRoaXMtPlVbJGtdWyRrXTsKICAgICAgICAgICAgICAgICAgICBmb3IgKCRpID0gMDsgJGkgPCAkayAtIDE7ICsrJGkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPlVbJGldWyRrXSA9IDAuMDsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGZvciAoJGkgPSAwOyAkaSA8ICR0aGlzLT5tOyArKyRpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5VWyRpXVska10gPSAwLjA7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICR0aGlzLT5VWyRrXVska10gPSAxLjA7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIC8vIElmIHJlcXVpcmVkLCBnZW5lcmF0ZSBWLgogICAgICAgIGlmICgkd2FudHYpIHsKICAgICAgICAgICAgZm9yICgkayA9ICR0aGlzLT5uIC0gMTsgJGsgPj0gMDsgLS0kaykgewogICAgICAgICAgICAgICAgaWYgKCgkayA8ICRucnQpIGFuZCAoJGVbJGtdICE9IDAuMCkpIHsKICAgICAgICAgICAgICAgICAgICBmb3IgKCRqID0gJGsgKyAxOyAkaiA8ICRudTsgKyskaikgewogICAgICAgICAgICAgICAgICAgICAgICAkdCA9IDA7CiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoJGkgPSAkayArIDE7ICRpIDwgJHRoaXMtPm47ICsrJGkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0ICs9ICR0aGlzLT5WWyRpXVska10qICR0aGlzLT5WWyRpXVskal07CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgJHQgPSAtJHQgLyAkdGhpcy0+VlskaysxXVska107CiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoJGkgPSAkayArIDE7ICRpIDwgJHRoaXMtPm47ICsrJGkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5WWyRpXVskal0gKz0gJHQgKiAkdGhpcy0+VlskaV1bJGtdOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZm9yICgkaSA9IDA7ICRpIDwgJHRoaXMtPm47ICsrJGkpIHsKICAgICAgICAgICAgICAgICAgICAkdGhpcy0+VlskaV1bJGtdID0gMC4wOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgJHRoaXMtPlZbJGtdWyRrXSA9IDEuMDsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLy8gTWFpbiBpdGVyYXRpb24gbG9vcCBmb3IgdGhlIHNpbmd1bGFyIHZhbHVlcy4KICAgICAgICAkcHAgICA9ICRwIC0gMTsKICAgICAgICAkaXRlciA9IDA7CiAgICAgICAgJGVwcyAgPSBwb3coMi4wLCAtNTIuMCk7CgogICAgICAgIHdoaWxlICgkcCA+IDApIHsKICAgICAgICAgICAgLy8gSGVyZSBpcyB3aGVyZSBhIHRlc3QgZm9yIHRvbyBtYW55IGl0ZXJhdGlvbnMgd291bGQgZ28uCiAgICAgICAgICAgIC8vIFRoaXMgc2VjdGlvbiBvZiB0aGUgcHJvZ3JhbSBpbnNwZWN0cyBmb3IgbmVnbGlnaWJsZQogICAgICAgICAgICAvLyBlbGVtZW50cyBpbiB0aGUgcyBhbmQgZSBhcnJheXMuICBPbiBjb21wbGV0aW9uIHRoZQogICAgICAgICAgICAvLyB2YXJpYWJsZXMga2FzZSBhbmQgayBhcmUgc2V0IGFzIGZvbGxvd3M6CiAgICAgICAgICAgIC8vIGthc2UgPSAxICBpZiBzKHApIGFuZCBlW2stMV0gYXJlIG5lZ2xpZ2libGUgYW5kIGs8cAogICAgICAgICAgICAvLyBrYXNlID0gMiAgaWYgcyhrKSBpcyBuZWdsaWdpYmxlIGFuZCBrPHAKICAgICAgICAgICAgLy8ga2FzZSA9IDMgIGlmIGVbay0xXSBpcyBuZWdsaWdpYmxlLCBrPHAsIGFuZAogICAgICAgICAgICAvLyAgICAgICAgICAgcyhrKSwgLi4uLCBzKHApIGFyZSBub3QgbmVnbGlnaWJsZSAocXIgc3RlcCkuCiAgICAgICAgICAgIC8vIGthc2UgPSA0ICBpZiBlKHAtMSkgaXMgbmVnbGlnaWJsZSAoY29udmVyZ2VuY2UpLgogICAgICAgICAgICBmb3IgKCRrID0gJHAgLSAyOyAkayA+PSAtMTsgLS0kaykgewogICAgICAgICAgICAgICAgaWYgKCRrID09IC0xKSB7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoYWJzKCRlWyRrXSkgPD0gJGVwcyAqIChhYnMoJHRoaXMtPnNbJGtdKSArIGFicygkdGhpcy0+c1skaysxXSkpKSB7CiAgICAgICAgICAgICAgICAgICAgJGVbJGtdID0gMC4wOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICgkayA9PSAkcCAtIDIpIHsKICAgICAgICAgICAgICAgICRrYXNlID0gNDsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGZvciAoJGtzID0gJHAgLSAxOyAka3MgPj0gJGs7IC0tJGtzKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCRrcyA9PSAkaykgewogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgJHQgPSAoJGtzICE9ICRwID8gYWJzKCRlWyRrc10pIDogMC4pICsgKCRrcyAhPSAkayArIDEgPyBhYnMoJGVbJGtzLTFdKSA6IDAuKTsKICAgICAgICAgICAgICAgICAgICBpZiAoYWJzKCR0aGlzLT5zWyRrc10pIDw9ICRlcHMgKiAkdCkgewogICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+c1ska3NdID0gMC4wOwogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoJGtzID09ICRrKSB7CiAgICAgICAgICAgICAgICAgICAgJGthc2UgPSAzOwogICAgICAgICAgICAgICAgfSBlbHNlaWYgKCRrcyA9PSAkcC0xKSB7CiAgICAgICAgICAgICAgICAgICAgJGthc2UgPSAxOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAka2FzZSA9IDI7CiAgICAgICAgICAgICAgICAgICAgJGsgPSAka3M7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgKyskazsKCiAgICAgICAgICAgIC8vIFBlcmZvcm0gdGhlIHRhc2sgaW5kaWNhdGVkIGJ5IGthc2UuCiAgICAgICAgICAgIHN3aXRjaCAoJGthc2UpIHsKICAgICAgICAgICAgICAgIC8vIERlZmxhdGUgbmVnbGlnaWJsZSBzKHApLgogICAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgICAgICRmID0gJGVbJHAtMl07CiAgICAgICAgICAgICAgICAgICAgJGVbJHAtMl0gPSAwLjA7CiAgICAgICAgICAgICAgICAgICAgZm9yICgkaiA9ICRwIC0gMjsgJGogPj0gJGs7IC0tJGopIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHQgID0gaHlwbygkdGhpcy0+c1skal0sICRmKTsKICAgICAgICAgICAgICAgICAgICAgICAgJGNzID0gJHRoaXMtPnNbJGpdIC8gJHQ7CiAgICAgICAgICAgICAgICAgICAgICAgICRzbiA9ICRmIC8gJHQ7CiAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5zWyRqXSA9ICR0OwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGogIT0gJGspIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRmID0gLSRzbiAqICRlWyRqLTFdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGVbJGotMV0gPSAkY3MgKiAkZVskai0xXTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHdhbnR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKCRpID0gMDsgJGkgPCAkdGhpcy0+bjsgKyskaSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0ID0gJGNzICogJHRoaXMtPlZbJGldWyRqXSArICRzbiAqICR0aGlzLT5WWyRpXVskcC0xXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+VlskaV1bJHAtMV0gPSAtJHNuICogJHRoaXMtPlZbJGldWyRqXSArICRjcyAqICR0aGlzLT5WWyRpXVskcC0xXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+VlskaV1bJGpdID0gJHQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAvLyBTcGxpdCBhdCBuZWdsaWdpYmxlIHMoaykuCiAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgICAgJGYgPSAkZVskay0xXTsKICAgICAgICAgICAgICAgICAgICAkZVskay0xXSA9IDAuMDsKICAgICAgICAgICAgICAgICAgICBmb3IgKCRqID0gJGs7ICRqIDwgJHA7ICsrJGopIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHQgPSBoeXBvKCR0aGlzLT5zWyRqXSwgJGYpOwogICAgICAgICAgICAgICAgICAgICAgICAkY3MgPSAkdGhpcy0+c1skal0gLyAkdDsKICAgICAgICAgICAgICAgICAgICAgICAgJHNuID0gJGYgLyAkdDsKICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPnNbJGpdID0gJHQ7CiAgICAgICAgICAgICAgICAgICAgICAgICRmID0gLSRzbiAqICRlWyRqXTsKICAgICAgICAgICAgICAgICAgICAgICAgJGVbJGpdID0gJGNzICogJGVbJGpdOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHdhbnR1KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKCRpID0gMDsgJGkgPCAkdGhpcy0+bTsgKyskaSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0ID0gJGNzICogJHRoaXMtPlVbJGldWyRqXSArICRzbiAqICR0aGlzLT5VWyRpXVskay0xXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+VVskaV1bJGstMV0gPSAtJHNuICogJHRoaXMtPlVbJGldWyRqXSArICRjcyAqICR0aGlzLT5VWyRpXVskay0xXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+VVskaV1bJGpdID0gJHQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAvLyBQZXJmb3JtIG9uZSBxciBzdGVwLgogICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgc2hpZnQuCiAgICAgICAgICAgICAgICAgICAgJHNjYWxlID0gbWF4KG1heChtYXgobWF4KGFicygkdGhpcy0+c1skcC0xXSksIGFicygkdGhpcy0+c1skcC0yXSkpLCBhYnMoJGVbJHAtMl0pKSwgYWJzKCR0aGlzLT5zWyRrXSkpLCBhYnMoJGVbJGtdKSk7CiAgICAgICAgICAgICAgICAgICAgJHNwICAgPSAkdGhpcy0+c1skcC0xXSAvICRzY2FsZTsKICAgICAgICAgICAgICAgICAgICAkc3BtMSA9ICR0aGlzLT5zWyRwLTJdIC8gJHNjYWxlOwogICAgICAgICAgICAgICAgICAgICRlcG0xID0gJGVbJHAtMl0gLyAkc2NhbGU7CiAgICAgICAgICAgICAgICAgICAgJHNrICAgPSAkdGhpcy0+c1ska10gLyAkc2NhbGU7CiAgICAgICAgICAgICAgICAgICAgJGVrICAgPSAkZVska10gLyAkc2NhbGU7CiAgICAgICAgICAgICAgICAgICAgJGIgICAgPSAoKCRzcG0xICsgJHNwKSAqICgkc3BtMSAtICRzcCkgKyAkZXBtMSAqICRlcG0xKSAvIDIuMDsKICAgICAgICAgICAgICAgICAgICAkYyAgICA9ICgkc3AgKiAkZXBtMSkgKiAoJHNwICogJGVwbTEpOwogICAgICAgICAgICAgICAgICAgICRzaGlmdCA9IDAuMDsKICAgICAgICAgICAgICAgICAgICBpZiAoKCRiICE9IDAuMCkgfHwgKCRjICE9IDAuMCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHNoaWZ0ID0gc3FydCgkYiAqICRiICsgJGMpOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGIgPCAwLjApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzaGlmdCA9IC0kc2hpZnQ7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgJHNoaWZ0ID0gJGMgLyAoJGIgKyAkc2hpZnQpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAkZiA9ICgkc2sgKyAkc3ApICogKCRzayAtICRzcCkgKyAkc2hpZnQ7CiAgICAgICAgICAgICAgICAgICAgJGcgPSAkc2sgKiAkZWs7CiAgICAgICAgICAgICAgICAgICAgLy8gQ2hhc2UgemVyb3MuCiAgICAgICAgICAgICAgICAgICAgZm9yICgkaiA9ICRrOyAkaiA8ICRwLTE7ICsrJGopIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHQgID0gaHlwbygkZiwgJGcpOwogICAgICAgICAgICAgICAgICAgICAgICAkY3MgPSAkZi8kdDsKICAgICAgICAgICAgICAgICAgICAgICAgJHNuID0gJGcvJHQ7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkaiAhPSAkaykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGVbJGotMV0gPSAkdDsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAkZiA9ICRjcyAqICR0aGlzLT5zWyRqXSArICRzbiAqICRlWyRqXTsKICAgICAgICAgICAgICAgICAgICAgICAgJGVbJGpdID0gJGNzICogJGVbJGpdIC0gJHNuICogJHRoaXMtPnNbJGpdOwogICAgICAgICAgICAgICAgICAgICAgICAkZyA9ICRzbiAqICR0aGlzLT5zWyRqKzFdOwogICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+c1skaisxXSA9ICRjcyAqICR0aGlzLT5zWyRqKzFdOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHdhbnR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKCRpID0gMDsgJGkgPCAkdGhpcy0+bjsgKyskaSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0ID0gJGNzICogJHRoaXMtPlZbJGldWyRqXSArICRzbiAqICR0aGlzLT5WWyRpXVskaisxXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+VlskaV1bJGorMV0gPSAtJHNuICogJHRoaXMtPlZbJGldWyRqXSArICRjcyAqICR0aGlzLT5WWyRpXVskaisxXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+VlskaV1bJGpdID0gJHQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgJHQgPSBoeXBvKCRmLCAkZyk7CiAgICAgICAgICAgICAgICAgICAgICAgICRjcyA9ICRmLyR0OwogICAgICAgICAgICAgICAgICAgICAgICAkc24gPSAkZy8kdDsKICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPnNbJGpdID0gJHQ7CiAgICAgICAgICAgICAgICAgICAgICAgICRmID0gJGNzICogJGVbJGpdICsgJHNuICogJHRoaXMtPnNbJGorMV07CiAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5zWyRqKzFdID0gLSRzbiAqICRlWyRqXSArICRjcyAqICR0aGlzLT5zWyRqKzFdOwogICAgICAgICAgICAgICAgICAgICAgICAkZyA9ICRzbiAqICRlWyRqKzFdOwogICAgICAgICAgICAgICAgICAgICAgICAkZVskaisxXSA9ICRjcyAqICRlWyRqKzFdOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHdhbnR1ICYmICgkaiA8ICR0aGlzLT5tIC0gMSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoJGkgPSAwOyAkaSA8ICR0aGlzLT5tOyArKyRpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHQgPSAkY3MgKiAkdGhpcy0+VVskaV1bJGpdICsgJHNuICogJHRoaXMtPlVbJGldWyRqKzFdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5VWyRpXVskaisxXSA9IC0kc24gKiAkdGhpcy0+VVskaV1bJGpdICsgJGNzICogJHRoaXMtPlVbJGldWyRqKzFdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5VWyRpXVskal0gPSAkdDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAkZVskcC0yXSA9ICRmOwogICAgICAgICAgICAgICAgICAgICRpdGVyID0gJGl0ZXIgKyAxOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgLy8gQ29udmVyZ2VuY2UuCiAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICAgICAgLy8gTWFrZSB0aGUgc2luZ3VsYXIgdmFsdWVzIHBvc2l0aXZlLgogICAgICAgICAgICAgICAgICAgIGlmICgkdGhpcy0+c1ska10gPD0gMC4wKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5zWyRrXSA9ICgkdGhpcy0+c1ska10gPCAwLjAgPyAtJHRoaXMtPnNbJGtdIDogMC4wKTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR3YW50dikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICgkaSA9IDA7ICRpIDw9ICRwcDsgKyskaSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5WWyRpXVska10gPSAtJHRoaXMtPlZbJGldWyRrXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAvLyBPcmRlciB0aGUgc2luZ3VsYXIgdmFsdWVzLgogICAgICAgICAgICAgICAgICAgIHdoaWxlICgkayA8ICRwcCkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHRoaXMtPnNbJGtdID49ICR0aGlzLT5zWyRrKzFdKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAkdCA9ICR0aGlzLT5zWyRrXTsKICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPnNbJGtdID0gJHRoaXMtPnNbJGsrMV07CiAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5zWyRrKzFdID0gJHQ7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkd2FudHYgYW5kICgkayA8ICR0aGlzLT5uIC0gMSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoJGkgPSAwOyAkaSA8ICR0aGlzLT5uOyArKyRpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHQgPSAkdGhpcy0+VlskaV1bJGsrMV07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPlZbJGldWyRrKzFdID0gJHRoaXMtPlZbJGldWyRrXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+VlskaV1bJGtdID0gJHQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR3YW50dSBhbmQgKCRrIDwgJHRoaXMtPm0tMSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoJGkgPSAwOyAkaSA8ICR0aGlzLT5tOyArKyRpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHQgPSAkdGhpcy0+VVskaV1bJGsrMV07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPlVbJGldWyRrKzFdID0gJHRoaXMtPlVbJGldWyRrXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+VVskaV1bJGtdID0gJHQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgKyskazsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgJGl0ZXIgPSAwOwogICAgICAgICAgICAgICAgICAgIC0tJHA7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0gLy8gZW5kIHN3aXRjaAogICAgICAgIH0gLy8gZW5kIHdoaWxlCgogICAgfSAvLyBlbmQgY29uc3RydWN0b3IKCgogICAgLyoqCiAgICAgKiAgICBSZXR1cm4gdGhlIGxlZnQgc2luZ3VsYXIgdmVjdG9ycwogICAgICoKICAgICAqICAgIEBhY2Nlc3MgcHVibGljCiAgICAgKiAgICBAcmV0dXJuIFUKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGdldFUoKQogICAgewogICAgICAgIHJldHVybiBuZXcgTWF0cml4KCR0aGlzLT5VLCAkdGhpcy0+bSwgbWluKCR0aGlzLT5tICsgMSwgJHRoaXMtPm4pKTsKICAgIH0KCgogICAgLyoqCiAgICAgKiAgICBSZXR1cm4gdGhlIHJpZ2h0IHNpbmd1bGFyIHZlY3RvcnMKICAgICAqCiAgICAgKiAgICBAYWNjZXNzIHB1YmxpYwogICAgICogICAgQHJldHVybiBWCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBnZXRWKCkKICAgIHsKICAgICAgICByZXR1cm4gbmV3IE1hdHJpeCgkdGhpcy0+Vik7CiAgICB9CgoKICAgIC8qKgogICAgICogICAgUmV0dXJuIHRoZSBvbmUtZGltZW5zaW9uYWwgYXJyYXkgb2Ygc2luZ3VsYXIgdmFsdWVzCiAgICAgKgogICAgICogICAgQGFjY2VzcyBwdWJsaWMKICAgICAqICAgIEByZXR1cm4gZGlhZ29uYWwgb2YgUy4KICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGdldFNpbmd1bGFyVmFsdWVzKCkKICAgIHsKICAgICAgICByZXR1cm4gJHRoaXMtPnM7CiAgICB9CgoKICAgIC8qKgogICAgICogICAgUmV0dXJuIHRoZSBkaWFnb25hbCBtYXRyaXggb2Ygc2luZ3VsYXIgdmFsdWVzCiAgICAgKgogICAgICogICAgQGFjY2VzcyBwdWJsaWMKICAgICAqICAgIEByZXR1cm4gUwogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gZ2V0UygpCiAgICB7CiAgICAgICAgZm9yICgkaSA9IDA7ICRpIDwgJHRoaXMtPm47ICsrJGkpIHsKICAgICAgICAgICAgZm9yICgkaiA9IDA7ICRqIDwgJHRoaXMtPm47ICsrJGopIHsKICAgICAgICAgICAgICAgICRTWyRpXVskal0gPSAwLjA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgJFNbJGldWyRpXSA9ICR0aGlzLT5zWyRpXTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIG5ldyBNYXRyaXgoJFMpOwogICAgfQoKCiAgICAvKioKICAgICAqICAgIFR3byBub3JtCiAgICAgKgogICAgICogICAgQGFjY2VzcyBwdWJsaWMKICAgICAqICAgIEByZXR1cm4gbWF4KFMpCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBub3JtMigpCiAgICB7CiAgICAgICAgcmV0dXJuICR0aGlzLT5zWzBdOwogICAgfQoKCiAgICAvKioKICAgICAqICAgIFR3byBub3JtIGNvbmRpdGlvbiBudW1iZXIKICAgICAqCiAgICAgKiAgICBAYWNjZXNzIHB1YmxpYwogICAgICogICAgQHJldHVybiBtYXgoUykvbWluKFMpCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBjb25kKCkKICAgIHsKICAgICAgICByZXR1cm4gJHRoaXMtPnNbMF0gLyAkdGhpcy0+c1ttaW4oJHRoaXMtPm0sICR0aGlzLT5uKSAtIDFdOwogICAgfQoKCiAgICAvKioKICAgICAqICAgIEVmZmVjdGl2ZSBudW1lcmljYWwgbWF0cml4IHJhbmsKICAgICAqCiAgICAgKiAgICBAYWNjZXNzIHB1YmxpYwogICAgICogICAgQHJldHVybiBOdW1iZXIgb2Ygbm9ubmVnbGlnaWJsZSBzaW5ndWxhciB2YWx1ZXMuCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiByYW5rKCkKICAgIHsKICAgICAgICAkZXBzID0gcG93KDIuMCwgLTUyLjApOwogICAgICAgICR0b2wgPSBtYXgoJHRoaXMtPm0sICR0aGlzLT5uKSAqICR0aGlzLT5zWzBdICogJGVwczsKICAgICAgICAkciA9IDA7CiAgICAgICAgZm9yICgkaSA9IDA7ICRpIDwgY291bnQoJHRoaXMtPnMpOyArKyRpKSB7CiAgICAgICAgICAgIGlmICgkdGhpcy0+c1skaV0gPiAkdG9sKSB7CiAgICAgICAgICAgICAgICArKyRyOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiAkcjsKICAgIH0KfQo=",
    "size": "18638"
}