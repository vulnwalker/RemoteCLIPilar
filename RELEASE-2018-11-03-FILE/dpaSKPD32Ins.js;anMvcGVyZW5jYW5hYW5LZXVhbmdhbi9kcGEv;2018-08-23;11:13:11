{
    "namaFile": "js\/perencanaanKeuangan\/dpa\/dpaSKPD32Ins.js",
    "lastUpdate": "2018-08-23+11:13:11.97",
    "contentFile": "var dpaSKPD32Ins = new DaftarObj2({
  prefix: "dpaSKPD32Ins",
  url: "pgKeu.php?Pg=dpaSKPD32Ins",
  formName: "dpaSKPD32InsForm",
  satuan_form: "0",
  loading: function() {
    this.topBarRender();
    this.filterRender();
  },
  filterRenderAfter: function() {
    if ($("#newBlankPage").val() == "1") {
      this.findRekeningRka();
    }
  },
  closeTab: function() {
    if (document.getElementById("q").disabled == true) {
      $.ajax({
        type: "POST",
        url: this.url + "&tipe=clear",
        success: function(data) {
          $("#bk").val("");
          $("#ck").val("");
          $("#dk").val("");
          $("#p").val("");
          $("#q").val("");
          $("#concatProgramKegiatan").val("");
          $("#program").val("");
          dpaSKPD32Ins.refreshList(true);
        }
      });
    } else {
      window.opener.location.reload();
      var ww = window.open(window.location, "_self");
      ww.close();
    }
  },

  formatCurrency: function(num) {
    num = num.toString().replace(/\$|\,/g, "");
    if (isNaN(num)) num = "0";
    sign = num == (num = Math.abs(num));
    num = Math.floor(num * 100 + 0.50000000001);
    cents = num % 100;
    num = Math.floor(num / 100).toString();
    if (cents < 10) cents = "0" + cents;
    for (var i = 0; i < Math.floor((num.length - (1 + i)) / 3); i++)
      num =
        num.substring(0, num.length - (4 * i + 3)) +
        "." +
        num.substring(num.length - (4 * i + 3));
    return (sign ? "" : "-") + "" + num + "," + cents;
  },

  isNumberKey: function(evt) {
    var charCode = evt.which ? evt.which : event.keyCode;
    if (charCode > 32 && (charCode < 48 || charCode > 57)) return false;
    return true;
  },

  saveRka: function() {
    var cover = this.prefix + "_cover";
    addCoverPage2(cover, 99, true, false);
    $.ajax({
      type: "POST",
      data: $("#" + this.formName).serialize(),
      url: this.url + "&tipe=saveRka",
      success: function(data) {
        delElem(cover);
        var resp = eval("(" + data + ")");
        if (resp.err == "") {
          window.opener.location.reload();
          var ww = window.open(window.location, "_self");
          ww.close();
        } else {
          alert(resp.err);
        }
      }
    });
  },
  addRekening: function() {
    var me = this;
    var cover = this.prefix + "_coverLoading";
    addCoverPage2(cover, 99, true, false);
    $.ajax({
      type: "POST",
      url: this.url + "&tipe=addRekening",
      success: function(data) {
        delElem(cover);
        var resp = eval("(" + data + ")");
        if (resp.err == "") {

          document.getElementById("tabelSubRincianBelanja").innerHTML =
            resp.content.tabelSubRincianBelanja;
          $("#currentRincianRekening").val("");
          $("#currentRincianRekening").val("");
          $("#nameSelectedRekening").text("");
          $("#nameSelectedRincianBelanja").text("");
          me.findRekeningRka();
        } else {
          alert(resp.err);
        }
      }
    });
  },
  findRekening: function() {
    var me = this;
    var filterRek = "";
    filterRek = "DPA 3.2";

    popupRekening.el_kode_rekening = "kodeRekening";
    popupRekening.el_nama_rekening = "namaRekening";
    popupRekening.spanRekening = "spanNamaRekening";
    popupRekening.windowSaveAfter = function() {};
    popupRekening.filterAkun = filterRek;
    popupRekening.windowShow();
  },
  findRekeningRka: function(jenisRka) {
    var me = this;
    var filterRek = "";
    filterRek = "DPA 3.2";
    var kodeSKPD = $("#c1").val() + "." + $("#c").val() + "." + $("#d").val();
    popupRekeningRka.kodeSKPD = "&kodeSKPD=" + kodeSKPD;
    popupRekeningRka.el_kode_rekening = "kodeRekening";
    popupRekeningRka.el_nama_rekening = "namaRekening";
    popupRekeningRka.spanRekening = "spanNamaRekening";
    popupRekeningRka.windowSaveAfter = function() {};
    popupRekeningRka.filterAkun = filterRek;
    popupRekeningRka.windowShow();
  },
  editRekening: function(id) {
    var me = this;
    var cover = this.prefix + "_coverLoading";
    addCoverPage2(cover, 99, true, false);
    $.ajax({
      type: "POST",
      data: { id: id },
      url: this.url + "&tipe=editRekening",
      success: function(data) {
        delElem(cover);
        var resp = eval("(" + data + ")");
        if (resp.err == "") {
          document.getElementById("tabelRekening").innerHTML =
            resp.content.tabelRekening;
          document.getElementById("tabelSubRincianBelanja").innerHTML =
            resp.content.tabelSubRincianBelanja;
          $("#currentRincianRekening").val("");
          $("#currentRincianRekening").val("");
          $("#nameSelectedRekening").text("");
          $("#nameSelectedRincianBelanja").text("");
        } else {
          alert(resp.err);
        }
      }
    });
  },

  cancelRekening: function() {
    var me = this;
    var cover = this.prefix + "_coverLoading";
    addCoverPage2(cover, 99, true, false);
    $.ajax({
      type: "POST",
      url: this.url + "&tipe=cancelRekening",
      success: function(data) {
        delElem(cover);
        var resp = eval("(" + data + ")");
        if (resp.err == "") {
          document.getElementById("tabelRekening").innerHTML = resp.content;
        } else {
          alert(resp.err);
        }
      }
    });
  },
  saveEditRekening: function(id) {
    var me = this;
    var cover = this.prefix + "_coverLoading";
    addCoverPage2(cover, 99, true, false);
    $.ajax({
      type: "POST",
      data: {
        kodeRekening: $("#kodeRekening").val(),
        sumberDana: $("#cmbSumberDana").val(),
        id: id
      },
      url: this.url + "&tipe=saveEditRekening",
      success: function(data) {
        delElem(cover);
        var resp = eval("(" + data + ")");
        if (resp.err == "") {
          document.getElementById("tabelRekening").innerHTML = resp.content;
        } else {
          alert(resp.err);
        }
      }
    });
  },
  deleteRekening: function(id) {
    var me = this;

    if (confirm("Yakin hapus rekening ( data rincian pendapatan akan hilang) ? ")) {
      var cover = this.prefix + "_coverLoading";
      addCoverPage2(cover, 99, true, false);
      $.ajax({
        type: "POST",
        data: {
          id: id
        },
        url: this.url + "&tipe=deleteRekening",
        success: function(data) {
          delElem(cover);
          var resp = eval("(" + data + ")");
          if (resp.err == "") {
            document.getElementById("tabelRekening").innerHTML =
              resp.content.tabelRekening;
            document.getElementById("tabelSubRincianBelanja").innerHTML =
              resp.content.tabelSubRincianBelanja;
            $("#currentRincianRekening").val("");
            $("#currentRincianRekening").val("");
            $("#nameSelectedRekening").text("");
            $("#nameSelectedRincianBelanja").text("");
          } else {
            alert(resp.err);
          }
        }
      });
    } else {
    }
  },
  rincianBelanja: function (id) {
        var me = this;
        var cover = this.prefix + "_coverLoading";
        addCoverPage2(cover, 99, true, false);
        $.ajax({
            type: "POST",
            data: { id: id },
            url: this.url + "&tipe=rincianBelanja",
            success: function (data) {
                delElem(cover);
                var resp = eval("(" + data + ")");
                if (resp.err == "") {
                    // document.getElementById("tabelRincianBelanja").innerHTML =
                    //   resp.content.tabelRincianBelanja;
                    document.getElementById("tabelRekening").innerHTML =
                        resp.content.tabelRekening;
                    document.getElementById("tabelSubRincianBelanja").innerHTML =
                        resp.content.tabelSubRincianBelanja;
                    $("#currentRincianRekening").val(id);
                    $("#nameSelectedRekening").html(resp.content.nameSelectedRekening);
                    me.subRincianBelanja(id);
                    // $("#currentRincianRekening").val("");
                    // $("#kalimatRincianBelanja").html(resp.content.kalimatRincianBelanja);
                    // $("#kalimatSubRincianBelanja").html(
                    //   resp.content.kalimatSubRincianBelanja
                    // );
                } else {
                    alert(resp.err);
                }
            }
        });
  },
  addRincianBelanja: function() {
    var me = this;
    var err = "";
    if ($("#currentRincianRekening").val() == "") {
      err = "Pilih Rekening !";
    }
    if (err == "") {
      var cover = this.prefix + "_coverLoading";
      addCoverPage2(cover, 99, true, false);
      $.ajax({
        type: "POST",
        url: this.url + "&tipe=addRincianBelanja",
        data: { id: $("#currentRincianRekening").val() },
        success: function(data) {
          delElem(cover);
          var resp = eval("(" + data + ")");
          if (resp.err == "") {
            document.getElementById("tabelSubRincianBelanja").innerHTML =
              resp.content.tabelSubRincianBelanja;
            $("#currentRincianRekening").val("");
            $("#nameSelectedRincianBelanja").text("");
          } else {
            alert(resp.err);
          }
        }
      });
    } else {
      alert(err);
    }
  },
  saveNewRincianBelanja: function() {
    var me = this;
    var cover = this.prefix + "_coverLoading";
    addCoverPage2(cover, 99, true, false);
    $.ajax({
      type: "POST",
      data: {
        uraianBelanja: $("#uraianBelanja").val(),
        idRekening: $("#currentRincianRekening").val()
      },
      url: this.url + "&tipe=saveNewRincianBelanja",
      success: function(data) {
        delElem(cover);
        var resp = eval("(" + data + ")");
        if (resp.err == "") {

        } else {
          alert(resp.err);
        }
      }
    });
  },
  editRincianBelanja: function(id) {
    var me = this;
    var cover = this.prefix + "_coverLoading";
    addCoverPage2(cover, 99, true, false);
    $.ajax({
      type: "POST",
      data: {
        idEdit: id,
        idRekening: $("#currentRincianRekening").val()
      },
      url: this.url + "&tipe=editRincianBelanja",
      success: function(data) {
        delElem(cover);
        var resp = eval("(" + data + ")");
        if (resp.err == "") {

          document.getElementById("tabelSubRincianBelanja").innerHTML =
            resp.content.tabelSubRincianBelanja;
          $("#currentRincianRekening").val("");
          $("#nameSelectedRincianBelanja").text("");
        } else {
          alert(resp.err);
        }
      }
    });
  },
  saveEditRincianBelanja: function(id) {
    var me = this;
    var cover = this.prefix + "_coverLoading";
    addCoverPage2(cover, 99, true, false);
    $.ajax({
      type: "POST",
      data: {
        idEdit: id,
        idRekening: $("#currentRincianRekening").val(),
        uraianBelanja: $("#uraianBelanja").val()
      },
      url: this.url + "&tipe=saveEditRincianBelanja",
      success: function(data) {
        delElem(cover);
        var resp = eval("(" + data + ")");
        if (resp.err == "") {

        } else {
          alert(resp.err);
        }
      }
    });
  },
  deleteRincianBelanja: function(id) {
    var me = this;
    if (confirm("Yakin hapus rincian belanja (data rincian belanja akan hilang) ?")) {
      var cover = this.prefix + "_coverLoading";
      addCoverPage2(cover, 99, true, false);
      $.ajax({
        type: "POST",
        data: {
          id: id,
          idRekening: $("#currentRincianRekening").val()
        },
        url: this.url + "&tipe=deleteRincianBelanja",
        success: function(data) {
          delElem(cover);
          var resp = eval("(" + data + ")");
          if (resp.err == "") {

              document.getElementById("tabelSubRincianBelanja").innerHTML =
                resp.content.tabelSubRincianBelanja;
              $("#currentRincianRekening").val("");
              $("#nameSelectedRincianBelanja").text("");
          } else {
            alert(resp.err);
          }
        }
      });
    }
  },
  subRincianBelanja: function (id) {
        var me = this;
        var cover = this.prefix + "_coverLoading";
        addCoverPage2(cover, 99, true, false);
        $.ajax({
            type: "POST",
            data: {
                id: id,
                idRekening: $("#currentRincianRekening").val()
            },
            url: this.url + "&tipe=subRincianBelanja",
            success: function (data) {
                delElem(cover);
                var resp = eval("(" + data + ")");
                if (resp.err == "") {

                    document.getElementById("tabelSubRincianBelanja").innerHTML =
                        resp.content.tabelSubRincianBelanja;
                    $("#currentRincianRekening").val(id);
                    $("#kalimatSubRincianBelanja").html(
                        resp.content.kalimatSubRincianBelanja
                    );
                } else {
                    alert(resp.err);
                }
            }
        });
    },
  addSubRincianBelanja: function() {
    var me = this;
    var err = "";
    if ($("#currentRincianRekening").val() == "") {
      err = "Pilih Rekening !";
    }
    if (err == "") {
      var cover = this.prefix + "_coverLoading";
      addCoverPage2(cover, 99, true, false);
      $.ajax({
        type: "POST",
        url: this.url + "&tipe=addSubRincianBelanja",
        data: {
          id: $("#currentRincianRekening").val(),
          idRekening: $("#currentRincianRekening").val()
        },
        success: function(data) {
          delElem(cover);
          var resp = eval("(" + data + ")");
          if (resp.err == "") {
            document.getElementById("tabelSubRincianBelanja").innerHTML =
              resp.content.tabelSubRincianBelanja;
          } else {
            alert(resp.err);
          }
        }
      });
    } else {
      alert(err);
    }
  },
  formRincianVolume: function() {
    var me = this;
    var cover = this.prefix + "_formcover";
    $.ajax({
      type: "POST",
      data: {
        volumeRek: $("#volumeBarang").val(),
        jumlah1 : $("#volume1Temp").val(),
        jumlah2 : $("#volume2Temp").val(),
        jumlah3 : $("#volume3Temp").val(),
      },
      url: this.url + "&tipe=formRincianVolume",
      success: function(data) {
        var resp = eval("(" + data + ")");
        if (resp.err == "") {
          document.body.style.overflow = "hidden";
          addCoverPage2(cover, 2, true, false);
          document.getElementById(cover).innerHTML = resp.content;
          $("#jumlah1").val($("#volume1Temp").val());
          // $("#jumlah2").val($("#volume2Temp").val());
          // $("#jumlah3").val($("#volume3Temp").val());
          $("#jumlah4").val($("#volumeBarang").val());
          $("#satuan1").val($("#satuan1Temp").val());
          $("#satuan2").val($("#satuan2Temp").val());
          $("#satuan3").val($("#satuan3Temp").val());
          $("#detailVolumeRincian").text($("#detailVolumeTemp").text());
          $("#rincianVolumeTemp").val($("#rincianVolume").val());

          if ($("#satuan3Temp").val() != "") {
            $("#satuanVolume").val(
              $("#satuan1Temp").val() +
                " / " +
                $("#satuan2Temp").val() +
                " / " +
                $("#satuan3Temp").val()
            );
          } else if ($("#satuan2Temp").val() != "") {
            $("#satuanVolume").val(
              $("#satuan1Temp").val() + " / " + $("#satuan2Temp").val()
            );
          } else {
            $("#satuanVolume").val($("#satuan1Temp").val());
          }
        } else {
          alert(resp.err);
        }
      }
    });
  },
  setTotalRincian: function(obj) {
    var jumlah1 = Number($("#jumlah1").val());
    var jumlah2 = Number($("#jumlah2").val());
    var jumlah3 = Number($("#jumlah3").val());
    if ($("#jumlah2").val() == "") {
      var jumlahTotal = Number(jumlah1);
    } else if ($("#jumlah3").val() == "") {
      var jumlahTotal = Number(jumlah1 * jumlah2);
    } else {
      var jumlahTotal = Number(jumlah1 * jumlah2 * jumlah3);
    }
    var idSatuan = "satuan" + obj.id.replace("jumlah", "");
    if ($("#" + obj.id).val() != "") {
      $("#" + idSatuan).removeAttr("readonly");
    } else {
      $("#" + idSatuan).attr("readonly", true);
      $("#" + idSatuan).val("");
    }

    $("#jumlah4").val(jumlahTotal);
  },
  SaveRincianVolume: function() {
    var err = "";
    var me = this;
    this.OnErrorClose = false;
    document.body.style.overflow = "hidden";
    var cover = this.prefix + "_formsimpan";
    addCoverPage2(cover, 1, true, false);
    delElem(cover);

    if ($("#jumlah1").val() != "" && $("#satuan1").val() == "") {
      err = "Isi Satuan Kesatu !";
    } else if ($("#jumlah2").val() != "" && $("#satuan2").val() == "") {
      err = "Isi Satuan Kedua !";
    } else if ($("#jumlah3").val() != "" && $("#satuan3").val() == "") {
      err = "Isi Satuan Kedua !";
    } else if ($("#jumlah3").val() != "" && $("#jumlah2").val() == "") {
      err = "Isi Volume Kedua !";
    } else if ($("#jumlah3").val() != "" && $("#jumlah1").val() == "") {
      err = "Isi Volume Kesatu !";
    }

    if (err == "") {
      $("#volume1Temp").val($("#jumlah1").val());
      $("#volume2Temp").val($("#jumlah2").val());
      $("#volume3Temp").val($("#jumlah3").val());
      $("#satuan1Temp").val($("#satuan1").val());
      $("#satuan2Temp").val($("#satuan2").val());
      $("#satuan3Temp").val($("#satuan3").val());
      $("#volumeBarang").val($("#jumlah4").val());
      $("#rincianVolume").val($("#rincianVolumeTemp").val());
      $("#spanRincianVolume").text($("#rincianVolumeTemp").val());
      me.bantu();
      var satuan = "";
      if ($("#jumlah3").val() != "") {
        satuan =
          $("#satuan1").val() +
          " / " +
          $("#satuan2").val() +
          " / " +
          $("#satuan3").val();
        $("#detailVolumeTemp").text(satuan);
      } else if ($("#jumlah2").val() != "") {
        satuan = $("#satuan1").val() + " / " + $("#satuan2").val();
        $("#detailVolumeTemp").text(satuan);
      } else {
        satuan = $("#satuan1").val();
        $("#detailVolumeTemp").text(satuan);
      }

      me.Close();
    } else {
      alert(err);
    }
  },
  bantu: function() {
    var me = this;
    $("#bantuSatuanHarga").text(
      "Rp. " + me.formatCurrency($("#hargaSatuan").val())
    );
    $("#jumlahHarga").val(
      me.formatCurrency($("#hargaSatuan").val() * $("#volumeBarang").val())
    );
    $("#bantuJumlahHarga").text(
      "Rp. " + me.formatCurrency($("#jumlahHarga").val())
    );
    $("#teralokasi").val("");
  },
  CariBarang: function() {
    var me = this;
    $("#uraianBelanja").val("");
    $("#kodeBarang").val("");
    $("#jenisAtribusi").val("");
    $("#checkboxAtribusi").attr("checked", false);

    popupBarangBelanjaModal.kodeRekening = $("#currentRincianRekening").val();
    popupBarangBelanjaModal.windowShow();
  },
  CariBarangPersediaan: function() {
    var me = this;
    $("#uraianBelanja").val("");
    $("#kodeBarang").val("");
    $("#jenisAtribusi").val("");
    $("#checkboxAtribusi").attr("checked", false);

    popupBarangPersediaan.kodeRekening = $("#currentRincianRekening").val();
    popupBarangPersediaan.windowShow();
  },
  atribusi: function() {
    $("#kodeBarang").val("");
    $("#uraianBelanja").val("");
    $("#namaBarang").val("");
    $("#uraianBelanja").attr("readonly", false);
    $("#jenisAtribusi").val("ya");
  },

  clearBarang: function() {
    $("#kodeBarang").val("");
    $("#namaBarang").val("");
  },

  saveNewSubRincianBelanja: function() {
    var me = this;
    var cover = this.prefix + "_coverLoading";
    addCoverPage2(cover, 99, true, false);
    $.ajax({
      type: "POST",
      data: {
        uraianBelanja: $("#uraianBelanja").val(),
        idRekening: $("#currentRincianRekening").val(),
        rincianVolume: $("#rincianVolume").val(),
        hargaSatuan: $("#hargaSatuan").val(),
        volumeBarang: $("#volumeBarang").val(),
        kodeBarang: $("#kodeBarang").val(),
        volume1: $("#volume1Temp").val(),
        volume2: $("#volume2Temp").val(),
        volume3: $("#volume3Temp").val(),
        satuan1: $("#satuan1Temp").val(),
        satuan2: $("#satuan2Temp").val(),
        satuan3: $("#satuan3Temp").val(),
        jenisAtribusi: $("#jenisAtribusi").val()
      },
      url: this.url + "&tipe=saveNewSubRincianBelanja",
      success: function(data) {
        delElem(cover);
        var resp = eval("(" + data + ")");
        if (resp.err == "") {
          document.getElementById("tabelSubRincianBelanja").innerHTML =
            resp.content;
        } else {
          alert(resp.err);
        }
      }
    });
  },
  findSSH: function(id) {
    var me = this;
    $.ajax({
      type: "POST",
      url: this.url + "&tipe=getDataSSH",
      data: {
        id: id,
        kodeBarang: $("#kodeBarang").val(),
        idRekening: $("#currentRincianRekening").val()
      },
      success: function(data) {
        var resp = eval("(" + data + ")");
        if (resp.err == "") {
          popupSSH.kodeRekening = resp.content.kodeRekening;
          popupSSH.kodeBarang = resp.content.kodeBarang;
          popupSSH.dari = me;
          popupSSH.windowShow();
        } else {
          alert(resp.err);
        }
      }
    });
  },
  setSatuanHarga: function() {
    var arrayKodeBarang = $("#kodeBarang")
      .val()
      .split(".");

    var f = arrayKodeBarang[2];
    var g = arrayKodeBarang[3];
    var h = arrayKodeBarang[4];
    var i = arrayKodeBarang[5];
    var j = arrayKodeBarang[6];
    var cover = this.prefix + "_coverLoading";
    addCoverPage2(cover, 99, true, false);
    $.ajax({
      type: "POST",
      url: this.url + "&tipe=setSatuanHarga",
      data: {
        f: f,
        g: g,
        h: h,
        i: i,
        j: j
      },
      success: function(data) {
        delElem(cover);
        var resp = eval("(" + data + ")");
        if (resp.err == "") {
          $("#hargaSatuan").val(resp.content.harga);
          $("#bantuSatuanHarga").text(resp.content.bantu);
          $("#jumlahHarga").val(
            $("#hargaSatuan").val() * $("#volumeBarang").val()
          );
          $("#bantuJumlahHarga").text(
            "Rp. " + dpaSKPD32Ins.formatCurrency($("#jumlahHarga").val())
          );
        } else {
          alert(resp.err);
        }
      }
    });
  },
  editSubRincianBelanja: function(id) {
    var me = this;
    var cover = this.prefix + "_coverLoading";
    addCoverPage2(cover, 99, true, false);
    $.ajax({
      type: "POST",
      data: {
        idEdit: id,
        idRekening: $("#currentRincianRekening").val(),
      },
      url: this.url + "&tipe=editSubRincianBelanja",
      success: function(data) {
        delElem(cover);
        var resp = eval("(" + data + ")");
        if (resp.err == "") {
          document.getElementById("tabelSubRincianBelanja").innerHTML =
            resp.content.tabelSubRincianBelanja;
        } else {
          alert(resp.err);
        }
      }
    });
  },
  saveEditSubRincianBelanja: function(id) {
    var me = this;
    var cover = this.prefix + "_coverLoading";
    addCoverPage2(cover, 99, true, false);
    $.ajax({
      type: "POST",
      data: {
        uraianBelanja: $("#uraianBelanja").val(),
        idRekening: $("#currentRincianRekening").val(),
        rincianVolume: $("#rincianVolume").val(),
        hargaSatuan: $("#hargaSatuan").val(),
        volumeBarang: $("#volumeBarang").val(),
        kodeBarang: $("#kodeBarang").val(),
        volume1: $("#volume1Temp").val(),
        volume2: $("#volume2Temp").val(),
        volume3: $("#volume3Temp").val(),
        satuan1: $("#satuan1Temp").val(),
        satuan2: $("#satuan2Temp").val(),
        satuan3: $("#satuan3Temp").val(),
        idEdit: id,
        jenisAtribusi: $("#jenisAtribusi").val()
      },
      url: this.url + "&tipe=saveEditSubRincianBelanja",
      success: function(data) {
        delElem(cover);
        var resp = eval("(" + data + ")");
        if (resp.err == "") {
          document.getElementById("tabelSubRincianBelanja").innerHTML =
            resp.content;
        } else {
          alert(resp.err);
        }
      }
    });
  },
  deleteSubRincianBelanja: function(id) {
    var me = this;
    if (confirm("Yakin hapus rincian belanja ?")) {
      var cover = this.prefix + "_coverLoading";
      addCoverPage2(cover, 99, true, false);
      $.ajax({
        type: "POST",
        data: {
          id: id,
          idRekening: $("#currentRincianRekening").val()
        },
        url: this.url + "&tipe=deleteSubRincianBelanja",
        success: function(data) {
          delElem(cover);
          var resp = eval("(" + data + ")");
          if (resp.err == "") {
            document.getElementById("tabelSubRincianBelanja").innerHTML =
              resp.content;
          } else {
            alert(resp.err);
          }
        }
      });
    }
  },
  cancelSubRincianBelanja: function(id) {
    var me = this;
    $.ajax({
      type: "POST",
      data: { id: id },
      url: this.url + "&tipe=cancelSubRincianBelanja",
      success: function(data) {
        var resp = eval("(" + data + ")");
        if (resp.err == "") {
          document.getElementById("tabelSubRincianBelanja").innerHTML =
            resp.content;
        } else {
          alert(resp.err);
        }
      }
    });
  },
  cancelRincianBelanja: function(id) {
    var me = this;
    $.ajax({
      type: "POST",
      data: { id: id },
      url: this.url + "&tipe=cancelRincianBelanja",
      success: function(data) {
        var resp = eval("(" + data + ")");
        if (resp.err == "") {

        } else {
          alert(resp.err);
        }
      }
    });
  },
  saveNewSatuan: function(namaKolom) {
    var me = this;
    $.ajax({
      type: "POST",
      data: {
        satuan: $("#"+namaKolom).val() ,
        kodeSKPD: $("#kodeSKPD").val(),
       },
      url: this.url + "&tipe=saveNewSatuan",
      success: function(data) {
        var resp = eval("(" + data + ")");
        if (resp.err == "") {
          alert("Satuan Ditambahkan");
        } else {
          alert(resp.err);
        }
      }
    });
  },
  cariSatuan: function(namaKolom) {
    popupSatuan.namaKolom = namaKolom;
    popupSatuan.kodeSKPD = "&kodeSKPD="+$("#kodeSKPD").val();
    popupSatuan.windowShow();
  }
});
",
    "size": "27520"
}