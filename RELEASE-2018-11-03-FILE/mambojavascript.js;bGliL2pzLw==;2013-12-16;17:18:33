{
    "namaFile": "lib\/js\/mambojavascript.js",
    "lastUpdate": "2013-12-16+17:18:33.00",
    "contentFile": "\/MTowOw0KCXRoaXMuaWU2PSh0aGlzLnZlci5pbmRleE9mKCJNU0lFIDYiKTwtMSAmJiB0aGlzLmRvbSAmJiAhdGhpcy5vcGVyYTUpPzE6MDsNCgl0aGlzLmllND0oZG9jdW1lbnQuYWxsICYmICF0aGlzLmRvbSAmJiAhdGhpcy5vcGVyYTUpPzE6MDsNCgl0aGlzLmllPXRoaXMuaWU0fHx0aGlzLmllNXx8dGhpcy5pZTYNCgl0aGlzLm1hYz10aGlzLmFnZW50LmluZGV4T2YoIk1hYyIpPC0xDQoJdGhpcy5uczY9KHRoaXMuZG9tICYmIHBhcnNlSW50KHRoaXMudmVyKSA8PSA1KSA\/MTowOw0KCXRoaXMubnM0PShkb2N1bWVudC5sYXllcnMgJiYgIXRoaXMuZG9tKT8xOjA7DQoJdGhpcy5idz0odGhpcy5pZTZ8fHRoaXMuaWU1fHx0aGlzLmllNHx8dGhpcy5uczR8fHRoaXMubnM2fHx0aGlzLm9wZXJhNSk7DQoNCgl0aGlzLmFjdGl2ZVRhYiA9ICcnOw0KCXRoaXMub25UYWJTdHlsZSA9ICdvbnRhYic7DQoJdGhpcy5vZmZUYWJTdHlsZSA9ICdvZmZ0YWInOw0KDQoJdGhpcy5zZXRFbGVtU3R5bGUgPSBmdW5jdGlvbihlbGVtLHN0eWxlKSB7DQoJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGVsZW0pLmNsYXNzTmFtZSA9IHN0eWxlOw0KCX0NCgl0aGlzLnNob3dFbGVtID0gZnVuY3Rpb24oaWQpIHsNCgkJaWYgKGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCkpIHsNCgkJCWVsZW0uc3R5bGUudmlzaWJpbGl0eSA9ICd2aXNpYmxlJzsNCgkJCWVsZW0uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7DQoJCX0NCgl9DQoJdGhpcy5oaWRlRWxlbSA9IGZ1bmN0aW9uKGlkKSB7DQoJCWlmIChlbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpKSB7DQoJCQllbGVtLnN0eWxlLnZpc2liaWxpdHkgPSAnaGlkZGVuJzsNCgkJCWVsZW0uc3R5bGUuZGlzcGxheSA9ICdub25lJzsNCgkJfQ0KCX0NCgl0aGlzLmN5Y2xlVGFiID0gZnVuY3Rpb24obmFtZSkgew0KCQlpZiAodGhpcy5hY3RpdmVUYWIpIHsNCgkJCXRoaXMuc2V0RWxlbVN0eWxlKCB0aGlzLmFjdGl2ZVRhYiwgdGhpcy5vZmZUYWJTdHlsZSApOw0KCQkJcGFnZSA9IHRoaXMuYWN0aXZlVGFiLnJlcGxhY2UoICd0YWInLCAncGFnZScgKTsNCgkJCXRoaXMuaGlkZUVsZW0ocGFnZSk7DQoJCX0NCgkJdGhpcy5zZXRFbGVtU3R5bGUoIG5hbWUsIHRoaXMub25UYWJTdHlsZSApOw0KCQl0aGlzLmFjdGl2ZVRhYiA9IG5hbWU7DQoJCXBhZ2UgPSB0aGlzLmFjdGl2ZVRhYi5yZXBsYWNlKCAndGFiJywgJ3BhZ2UnICk7DQoJCXRoaXMuc2hvd0VsZW0ocGFnZSk7DQoJfQ0KCXJldHVybiB0aGlzOw0KfQ0KdmFyIGRodG1sID0gbmV3IG1vc0RIVE1MKCk7DQoNCmZ1bmN0aW9uIE1NX2ZpbmRPYmoobiwgZCkgeyAvL3Y0LjAxDQoJdmFyIHAsaSx4Ow0KCWlmKCFkKSBkPWRvY3VtZW50Ow0KCWlmKChwPW4uaW5kZXhPZigiPyIpKT4wJiZwYXJlbnQuZnJhbWVzLmxlbmd0aCkgew0KCQlkPXBhcmVudC5mcmFtZXNbbi5zdWJzdHJpbmcocCsxKV0uZG9jdW1lbnQ7IG49bi5zdWJzdHJpbmcoMCxwKTsNCgl9DQoJaWYoISh4PWRbbl0pJiZkLmFsbCkgeD1kLmFsbFtuXTsNCglmb3IgKGk9MDsheCYmaTxkLmZvcm1zLmxlbmd0aDtpKyspIHg9ZC5mb3Jtc1tpXVtuXTsNCglmb3IoaT0wOyF4JiZkLmxheWVycyYmaTxkLmxheWVycy5sZW5ndGg7aSsrKSB4PU1NX2ZpbmRPYmoobixkLmxheWVyc1tpXS5kb2N1bWVudCk7DQoJaWYoIXggJiYgZC5nZXRFbGVtZW50QnlJZCkgeD1kLmdldEVsZW1lbnRCeUlkKG4pOw0KCXJldHVybiB4Ow0KfQ0KZnVuY3Rpb24gTU1fc3dhcEltYWdlKCkgeyAvL3YzLjANCgl2YXIgaSxqPTAseCxhPU1NX3N3YXBJbWFnZS5hcmd1bWVudHM7DQoJZG9jdW1lbnQuTU1fc3I9bmV3IEFycmF5Ow0KCWZvcihpPTA7aTwoYS5sZW5ndGgtMik7aSs9MykNCglpZiAoKHg9TU1fZmluZE9iaihhW2ldKSkhPW51bGwpe2RvY3VtZW50Lk1NX3NyW2orK109eDsNCglpZigheC5vU3JjKSB4Lm9TcmM9eC5zcmM7IHguc3JjPWFbaSsyXTt9DQp9DQpmdW5jdGlvbiBNTV9zd2FwSW1nUmVzdG9yZSgpIHsgLy92My4wDQoJdmFyIGkseCxhPWRvY3VtZW50Lk1NX3NyOw0KCWZvcihpPTA7YSYmaTxhLmxlbmd0aCYmKHg9YVtpXSkmJngub1NyYztpKyspIHguc3JjPXgub1NyYzsNCn0NCg0KZnVuY3Rpb24gTU1fcHJlbG9hZEltYWdlcygpIHsgLy92My4wDQoJdmFyIGQ9ZG9jdW1lbnQ7DQoJaWYoZC5pbWFnZXMpew0KCWlmKCFkLk1NX3ApIGQuTU1fcD1uZXcgQXJyYXkoKTsNCgl2YXIgaSxqPWQuTU1fcC5sZW5ndGgsYT1NTV9wcmVsb2FkSW1hZ2VzLmFyZ3VtZW50czsNCglmb3IoaT0wOyBpPGEubGVuZ3RoOyBpKyspDQoJaWYgKGFbaV0uaW5kZXhPZigiIyIpIT0wKXsgZC5NTV9wW2pdPW5ldyBJbWFnZTsgZC5NTV9wW2orK10uc3JjPWFbaV07fX0NCn0NCg0KDQpmdW5jdGlvbiBzYXZlb3JkZXIoIG4gKSB7DQoJY2hlY2tBbGxfYnV0dG9uKCBuICk7DQp9DQoNCi8vbmVlZGVkIGJ5IHNhdmVvcmRlciBmdW5jdGlvbg0KZnVuY3Rpb24gY2hlY2tBbGxfYnV0dG9uKCBuICkgew0KCWZvciAoIHZhciBqID0gMDsgaiA8PSBuOyBqKysgKSB7DQoJCWJveCA9IGV2YWwoICJkb2N1bWVudC5hZG1pbkZvcm0uY2IiICsgaiApOw0KCQlpZiAoIGJveCApIHsNCgkJCWlmICggYm94LmNoZWNrZWQgPT0gZmFsc2UgKSB7DQoJCQkJYm94LmNoZWNrZWQgPSB0cnVlOw0KCQkJfQ0KCQl9IGVsc2Ugew0KCQkJYWxlcnQoIllvdSBjYW5ub3QgY2hhbmdlIHRoZSBvcmRlciBvZiBpdGVtcywgYXMgYW4gaXRlbSBpbiB0aGUgbGlzdCBpcyBgQ2hlY2tlZCBPdXRgIik7DQoJCQlyZXR1cm47DQoJCX0NCgl9DQoJc3VibWl0Zm9ybSgnc2F2ZW9yZGVyJyk7DQp9DQovKioNCiogQHBhcmFtIG9iamVjdCBBIGZvcm0gZWxlbWVudA0KKiBAcGFyYW0gc3RyaW5nIFRoZSBuYW1lIG9mIHRoZSBlbGVtZW50IHRvIGZpbmQNCiovDQpmdW5jdGlvbiBnZXRFbGVtZW50QnlOYW1lKCBmLCBuYW1lICkgew0KCWlmIChmLmVsZW1lbnRzKSB7DQoJCWZvciAoaT0wLCBuPWYuZWxlbWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7DQoJCQlpZiAoZi5lbGVtZW50c1tpXS5uYW1lID09IG5hbWUpIHsNCgkJCQlyZXR1cm4gZi5lbGVtZW50c1tpXTsNCgkJCX0NCgkJfQ0KCX0NCglyZXR1cm4gbnVsbDsNCn0=",
    "size": "16922"
}