{
    "namaFile": "pages\/admin\/menu\/assets\/js\/libs\/flot\/jquery.flot.stack.js",
    "lastUpdate": "2018-03-22+14:21:24.15",
    "contentFile": "LyogRmxvdCBwbHVnaW4gZm9yIHN0YWNraW5nIGRhdGEgc2V0cyByYXRoZXIgdGhhbiBvdmVybHlhaW5nIHRoZW0uCgpDb3B5cmlnaHQgKGMpIDIwMDctMjAxNCBJT0xBIGFuZCBPbGUgTGF1cnNlbi4KTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgoKVGhlIHBsdWdpbiBhc3N1bWVzIHRoZSBkYXRhIGlzIHNvcnRlZCBvbiB4IChvciB5IGlmIHN0YWNraW5nIGhvcml6b250YWxseSkuCkZvciBsaW5lIGNoYXJ0cywgaXQgaXMgYXNzdW1lZCB0aGF0IGlmIGEgbGluZSBoYXMgYW4gdW5kZWZpbmVkIGdhcCAoZnJvbSBhCm51bGwgcG9pbnQpLCB0aGVuIHRoZSBsaW5lIGFib3ZlIGl0IHNob3VsZCBoYXZlIHRoZSBzYW1lIGdhcCAtIGluc2VydCB6ZXJvcwppbnN0ZWFkIG9mICJudWxsIiBpZiB5b3Ugd2FudCBhbm90aGVyIGJlaGF2aW91ci4gVGhpcyBhbHNvIGhvbGRzIGZvciB0aGUgc3RhcnQKYW5kIGVuZCBvZiB0aGUgY2hhcnQuIE5vdGUgdGhhdCBzdGFja2luZyBhIG1peCBvZiBwb3NpdGl2ZSBhbmQgbmVnYXRpdmUgdmFsdWVzCmluIG1vc3QgaW5zdGFuY2VzIGRvZXNuJ3QgbWFrZSBzZW5zZSAoc28gaXQgbG9va3Mgd2VpcmQpLgoKVHdvIG9yIG1vcmUgc2VyaWVzIGFyZSBzdGFja2VkIHdoZW4gdGhlaXIgInN0YWNrIiBhdHRyaWJ1dGUgaXMgc2V0IHRvIHRoZSBzYW1lCmtleSAod2hpY2ggY2FuIGJlIGFueSBudW1iZXIgb3Igc3RyaW5nIG9yIGp1c3QgInRydWUiKS4gVG8gc3BlY2lmeSB0aGUgZGVmYXVsdApzdGFjaywgeW91IGNhbiBzZXQgdGhlIHN0YWNrIG9wdGlvbiBsaWtlIHRoaXM6CgoJc2VyaWVzOiB7CgkJc3RhY2s6IG51bGwvZmFsc2UsIHRydWUsIG9yIGEga2V5IChudW1iZXIvc3RyaW5nKQoJfQoKWW91IGNhbiBhbHNvIHNwZWNpZnkgaXQgZm9yIGEgc2luZ2xlIHNlcmllcywgbGlrZSB0aGlzOgoKCSQucGxvdCggJCgiI3BsYWNlaG9sZGVyIiksIFt7CgkJZGF0YTogWyAuLi4gXSwKCQlzdGFjazogdHJ1ZQoJfV0pCgpUaGUgc3RhY2tpbmcgb3JkZXIgaXMgZGV0ZXJtaW5lZCBieSB0aGUgb3JkZXIgb2YgdGhlIGRhdGEgc2VyaWVzIGluIHRoZSBhcnJheQoobGF0ZXIgc2VyaWVzIGVuZCB1cCBvbiB0b3Agb2YgdGhlIHByZXZpb3VzKS4KCkludGVybmFsbHksIHRoZSBwbHVnaW4gbW9kaWZpZXMgdGhlIGRhdGFwb2ludHMgaW4gZWFjaCBzZXJpZXMsIGFkZGluZyBhbgpvZmZzZXQgdG8gdGhlIHkgdmFsdWUuIEZvciBsaW5lIHNlcmllcywgZXh0cmEgZGF0YSBwb2ludHMgYXJlIGluc2VydGVkIHRocm91Z2gKaW50ZXJwb2xhdGlvbi4gSWYgdGhlcmUncyBhIHNlY29uZCB5IHZhbHVlLCBpdCdzIGFsc28gYWRqdXN0ZWQgKGUuZyBmb3IgYmFyCmNoYXJ0cyBvciBmaWxsZWQgYXJlYXMpLgoKKi8KCihmdW5jdGlvbiAoJCkgewogICAgdmFyIG9wdGlvbnMgPSB7CiAgICAgICAgc2VyaWVzOiB7IHN0YWNrOiBudWxsIH0gLy8gb3IgbnVtYmVyL3N0cmluZwogICAgfTsKICAgIAogICAgZnVuY3Rpb24gaW5pdChwbG90KSB7CiAgICAgICAgZnVuY3Rpb24gZmluZE1hdGNoaW5nU2VyaWVzKHMsIGFsbHNlcmllcykgewogICAgICAgICAgICB2YXIgcmVzID0gbnVsbDsKICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhbGxzZXJpZXMubGVuZ3RoOyArK2kpIHsKICAgICAgICAgICAgICAgIGlmIChzID09IGFsbHNlcmllc1tpXSkKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgaWYgKGFsbHNlcmllc1tpXS5zdGFjayA9PSBzLnN0YWNrKQogICAgICAgICAgICAgICAgICAgIHJlcyA9IGFsbHNlcmllc1tpXTsKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgcmV0dXJuIHJlczsKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgZnVuY3Rpb24gc3RhY2tEYXRhKHBsb3QsIHMsIGRhdGFwb2ludHMpIHsKICAgICAgICAgICAgaWYgKHMuc3RhY2sgPT0gbnVsbCB8fCBzLnN0YWNrID09PSBmYWxzZSkKICAgICAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgICAgIHZhciBvdGhlciA9IGZpbmRNYXRjaGluZ1NlcmllcyhzLCBwbG90LmdldERhdGEoKSk7CiAgICAgICAgICAgIGlmICghb3RoZXIpCiAgICAgICAgICAgICAgICByZXR1cm47CgogICAgICAgICAgICB2YXIgcHMgPSBkYXRhcG9pbnRzLnBvaW50c2l6ZSwKICAgICAgICAgICAgICAgIHBvaW50cyA9IGRhdGFwb2ludHMucG9pbnRzLAogICAgICAgICAgICAgICAgb3RoZXJwcyA9IG90aGVyLmRhdGFwb2ludHMucG9pbnRzaXplLAogICAgICAgICAgICAgICAgb3RoZXJwb2ludHMgPSBvdGhlci5kYXRhcG9pbnRzLnBvaW50cywKICAgICAgICAgICAgICAgIG5ld3BvaW50cyA9IFtdLAogICAgICAgICAgICAgICAgcHgsIHB5LCBpbnRlcnksIHF4LCBxeSwgYm90dG9tLAogICAgICAgICAgICAgICAgd2l0aGxpbmVzID0gcy5saW5lcy5zaG93LAogICAgICAgICAgICAgICAgaG9yaXpvbnRhbCA9IHMuYmFycy5ob3Jpem9udGFsLAogICAgICAgICAgICAgICAgd2l0aGJvdHRvbSA9IHBzID4gMiAmJiAoaG9yaXpvbnRhbCA\/IGRhdGFwb2ludHMuZm9ybWF0WzJdLnggOiBkYXRhcG9pbnRzLmZvcm1hdFsyXS55KSwKICAgICAgICAgICAgICAgIHdpdGhzdGVwcyA9IHdpdGhsaW5lcyAmJiBzLmxpbmVzLnN0ZXBzLAogICAgICAgICAgICAgICAgZnJvbWdhcCA9IHRydWUsCiAgICAgICAgICAgICAgICBrZXlPZmZzZXQgPSBob3Jpem9udGFsID8gMSA6IDAsCiAgICAgICAgICAgICAgICBhY2N1bXVsYXRlT2Zmc2V0ID0gaG9yaXpvbnRhbCA\/IDAgOiAxLAogICAgICAgICAgICAgICAgaSA9IDAsIGogPSAwLCBsLCBtOwoKICAgICAgICAgICAgd2hpbGUgKHRydWUpIHsKICAgICAgICAgICAgICAgIGlmIChpID49IHBvaW50cy5sZW5ndGgpCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgICAgbCA9IG5ld3BvaW50cy5sZW5ndGg7CgogICAgICAgICAgICAgICAgaWYgKHBvaW50c1tpXSA9PSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgLy8gY29weSBnYXBzCiAgICAgICAgICAgICAgICAgICAgZm9yIChtID0gMDsgbSA8IHBzOyArK20pCiAgICAgICAgICAgICAgICAgICAgICAgIG5ld3BvaW50cy5wdXNoKHBvaW50c1tpICsgbV0pOwogICAgICAgICAgICAgICAgICAgIGkgKz0gcHM7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIGlmIChqID49IG90aGVycG9pbnRzLmxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgIC8vIGZvciBsaW5lcywgd2UgY2FuJ3QgdXNlIHRoZSByZXN0IG9mIHRoZSBwb2ludHMKICAgICAgICAgICAgICAgICAgICBpZiAoIXdpdGhsaW5lcykgewogICAgICAgICAgICAgICAgICAgICAgICBmb3IgKG0gPSAwOyBtIDwgcHM7ICsrbSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld3BvaW50cy5wdXNoKHBvaW50c1tpICsgbV0pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBpICs9IHBzOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSBpZiAob3RoZXJwb2ludHNbal0gPT0gbnVsbCkgewogICAgICAgICAgICAgICAgICAgIC8vIG9vcHMsIGdvdCBhIGdhcAogICAgICAgICAgICAgICAgICAgIGZvciAobSA9IDA7IG0gPCBwczsgKyttKQogICAgICAgICAgICAgICAgICAgICAgICBuZXdwb2ludHMucHVzaChudWxsKTsKICAgICAgICAgICAgICAgICAgICBmcm9tZ2FwID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICBqICs9IG90aGVycHM7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAvLyBjYXNlcyB3aGVyZSB3ZSBhY3R1YWxseSBnb3QgdHdvIHBvaW50cwogICAgICAgICAgICAgICAgICAgIHB4ID0gcG9pbnRzW2kgKyBrZXlPZmZzZXRdOwogICAgICAgICAgICAgICAgICAgIHB5ID0gcG9pbnRzW2kgKyBhY2N1bXVsYXRlT2Zmc2V0XTsKICAgICAgICAgICAgICAgICAgICBxeCA9IG90aGVycG9pbnRzW2ogKyBrZXlPZmZzZXRdOwogICAgICAgICAgICAgICAgICAgIHF5ID0gb3RoZXJwb2ludHNbaiArIGFjY3VtdWxhdGVPZmZzZXRdOwogICAgICAgICAgICAgICAgICAgIGJvdHRvbSA9IDA7CgogICAgICAgICAgICAgICAgICAgIGlmIChweCA9PSBxeCkgewogICAgICAgICAgICAgICAgICAgICAgICBmb3IgKG0gPSAwOyBtIDwgcHM7ICsrbSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld3BvaW50cy5wdXNoKHBvaW50c1tpICsgbV0pOwoKICAgICAgICAgICAgICAgICAgICAgICAgbmV3cG9pbnRzW2wgKyBhY2N1bXVsYXRlT2Zmc2V0XSArPSBxeTsKICAgICAgICAgICAgICAgICAgICAgICAgYm90dG9tID0gcXk7CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICBpICs9IHBzOwogICAgICAgICAgICAgICAgICAgICAgICBqICs9IG90aGVycHM7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHB4ID4gcXgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgLy8gd2UgZ290IHBhc3QgcG9pbnQgYmVsb3csIG1pZ2h0IG5lZWQgdG8KICAgICAgICAgICAgICAgICAgICAgICAgLy8gaW5zZXJ0IGludGVycG9sYXRlZCBleHRyYSBwb2ludAogICAgICAgICAgICAgICAgICAgICAgICBpZiAod2l0aGxpbmVzICYmIGkgPiAwICYmIHBvaW50c1tpIC0gcHNdICE9IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludGVyeSA9IHB5ICsgKHBvaW50c1tpIC0gcHMgKyBhY2N1bXVsYXRlT2Zmc2V0XSAtIHB5KSAqIChxeCAtIHB4KSAvIChwb2ludHNbaSAtIHBzICsga2V5T2Zmc2V0XSAtIHB4KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld3BvaW50cy5wdXNoKHF4KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld3BvaW50cy5wdXNoKGludGVyeSArIHF5KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAobSA9IDI7IG0gPCBwczsgKyttKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld3BvaW50cy5wdXNoKHBvaW50c1tpICsgbV0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgYm90dG9tID0gcXk7IAogICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICBqICs9IG90aGVycHM7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgeyAvLyBweCA8IHF4CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmcm9tZ2FwICYmIHdpdGhsaW5lcykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gaWYgd2UgY29tZSBmcm9tIGEgZ2FwLCB3ZSBqdXN0IHNraXAgdGhpcyBwb2ludAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaSArPSBwczsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChtID0gMDsgbSA8IHBzOyArK20pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdwb2ludHMucHVzaChwb2ludHNbaSArIG1dKTsKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHdlIG1pZ2h0IGJlIGFibGUgdG8gaW50ZXJwb2xhdGUgYSBwb2ludCBiZWxvdywKICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyBjYW4gZ2l2ZSB1cyBhIGJldHRlciB5CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh3aXRobGluZXMgJiYgaiA+IDAgJiYgb3RoZXJwb2ludHNbaiAtIG90aGVycHNdICE9IG51bGwpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3R0b20gPSBxeSArIChvdGhlcnBvaW50c1tqIC0gb3RoZXJwcyArIGFjY3VtdWxhdGVPZmZzZXRdIC0gcXkpICogKHB4IC0gcXgpIC8gKG90aGVycG9pbnRzW2ogLSBvdGhlcnBzICsga2V5T2Zmc2V0XSAtIHF4KTsKCiAgICAgICAgICAgICAgICAgICAgICAgIG5ld3BvaW50c1tsICsgYWNjdW11bGF0ZU9mZnNldF0gKz0gYm90dG9tOwogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgaSArPSBwczsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIGZyb21nYXAgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBpZiAobCAhPSBuZXdwb2ludHMubGVuZ3RoICYmIHdpdGhib3R0b20pCiAgICAgICAgICAgICAgICAgICAgICAgIG5ld3BvaW50c1tsICsgMl0gKz0gYm90dG9tOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC8vIG1haW50YWluIHRoZSBsaW5lIHN0ZXBzIGludmFyaWFudAogICAgICAgICAgICAgICAgaWYgKHdpdGhzdGVwcyAmJiBsICE9IG5ld3BvaW50cy5sZW5ndGggJiYgbCA+IDAKICAgICAgICAgICAgICAgICAgICAmJiBuZXdwb2ludHNbbF0gIT0gbnVsbAogICAgICAgICAgICAgICAgICAgICYmIG5ld3BvaW50c1tsXSAhPSBuZXdwb2ludHNbbCAtIHBzXQogICAgICAgICAgICAgICAgICAgICYmIG5ld3BvaW50c1tsICsgMV0gIT0gbmV3cG9pbnRzW2wgLSBwcyArIDFdKSB7CiAgICAgICAgICAgICAgICAgICAgZm9yIChtID0gMDsgbSA8IHBzOyArK20pCiAgICAgICAgICAgICAgICAgICAgICAgIG5ld3BvaW50c1tsICsgcHMgKyBtXSA9IG5ld3BvaW50c1tsICsgbV07CiAgICAgICAgICAgICAgICAgICAgbmV3cG9pbnRzW2wgKyAxXSA9IG5ld3BvaW50c1tsIC0gcHMgKyAxXTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgZGF0YXBvaW50cy5wb2ludHMgPSBuZXdwb2ludHM7CiAgICAgICAgfQogICAgICAgIAogICAgICAgIHBsb3QuaG9va3MucHJvY2Vzc0RhdGFwb2ludHMucHVzaChzdGFja0RhdGEpOwogICAgfQogICAgCiAgICAkLnBsb3QucGx1Z2lucy5wdXNoKHsKICAgICAgICBpbml0OiBpbml0LAogICAgICAgIG9wdGlvbnM6IG9wdGlvbnMsCiAgICAgICAgbmFtZTogJ3N0YWNrJywKICAgICAgICB2ZXJzaW9uOiAnMS4yJwogICAgfSk7Cn0pKGpRdWVyeSk7Cg==",
    "size": "7090"
}