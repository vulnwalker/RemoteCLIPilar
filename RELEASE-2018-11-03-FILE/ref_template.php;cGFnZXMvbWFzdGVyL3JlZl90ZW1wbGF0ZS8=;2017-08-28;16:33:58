{
    "namaFile": "pages\/master\/ref_template\/ref_template.php",
    "lastUpdate": "2017-08-28+16:33:58.79",
    "contentFile": "\/IDI6IDE7DQoJICRoZWFkZXJUYWJsZSA9DQoJICAiPHRoZWFkPg0KCSAgIDx0cj4NCiAgCSAgIDx0aCBjbGFzcz0ndGgwMScgd2lkdGg9JzUnID5Oby48L3RoPg0KICAJICAgJENoZWNrYm94CQ0KICAJICAgPHRoIGNsYXNzPSd0aDAxJyB3aWR0aD0nMTAwMCc+TkFNQSBURU1QTEFURTwvdGg+CQ0KCSAgIDx0aCBjbGFzcz0ndGgwMScgd2lkdGg9JzIwMCc+SlVNTEFIPC90aD4JDQoJICAgPHRoIGNsYXNzPSd0aDAxJyB3aWR0aD0nMjUwJz5UQU5HR0FMPC90aD4JDQoJICAgPHRoIGNsYXNzPSd0aDAxJyB3aWR0aD0nNDAwJz5OT01PUjwvdGg+CQ0KCSAgIDwvdHI+DQoJICAgPC90aGVhZD4iOw0KCSANCgkJcmV0dXJuICRoZWFkZXJUYWJsZTsNCgl9CQ0KCQ0KCWZ1bmN0aW9uIGdlbkZvcm0yKCR3aXRoRm9ybT1UUlVFKXsJDQoJCSRmb3JtX25hbWUgPSAkdGhpcy0+UHJlZml4LidfZm9ybSc7CQ0KCQkJCQ0KCQlpZigkd2l0aEZvcm0pew0KCQkJJHBhcmFtcy0+dGlwZT0xOw0KCQkJJGZvcm09ICI8Zm9ybSBuYW1lPSckZm9ybV9uYW1lJyBpZD0nJGZvcm1fbmFtZScgbWV0aG9kPSdwb3N0JyBhY3Rpb249Jyc+Ii4NCgkJCQljcmVhdGVEaWFsb2coDQoJCQkJCSRmb3JtX25hbWUuJ19kaXYnLCANCgkJCQkJJHRoaXMtPnNldEZvcm1fY29udGVudCgpLA0KCQkJCQkkdGhpcy0+Zm9ybV93aWR0aCwNCgkJCQkJJHRoaXMtPmZvcm1faGVpZ2h0LA0KCQkJCQkkdGhpcy0+Zm9ybV9jYXB0aW9uLA0KCQkJCQknJywNCgkJCQkJJHRoaXMtPmZvcm1fbWVudWJhd2FoLg0KCQkJCQkiPGlucHV0IHR5cGU9J2hpZGRlbicgaWQ9JyIuJHRoaXMtPlByZWZpeC4iX2lkcGxoJyBuYW1lPSciLiR0aGlzLT5QcmVmaXguIl9pZHBsaCcgdmFsdWU9JyR0aGlzLT5mb3JtX2lkcGxoJyA+DQoJCQkJCTxpbnB1dCB0eXBlPSdoaWRkZW4nIGlkPSciLiR0aGlzLT5QcmVmaXguIl9mbVNUJyBuYW1lPSciLiR0aGlzLT5QcmVmaXguIl9mbVNUJyB2YWx1ZT0nJHRoaXMtPmZvcm1fZm1TVCcgPiINCgkJCQkJLC8vJHRoaXMtPnNldEZvcm1fbWVudWJhd2FoX2NvbnRlbnQoKSwNCgkJCQkJJHRoaXMtPmZvcm1fbWVudV9iYXdhaF9oZWlnaHQsDQoJCQkJCScnLCRwYXJhbXMNCgkJCQkJKS4NCgkJCQkiPC9mb3JtPiI7DQoJCQkJDQoJCX1lbHNlew0KCQkJJGZvcm09IA0KCQkJCWNyZWF0ZURpYWxvZygNCgkJCQkJJGZvcm1fbmFtZS4nX2RpdicsIA0KCQkJCQkkdGhpcy0+c2V0Rm9ybV9jb250ZW50KCksDQoJCQkJCSR0aGlzLT5mb3JtX3dpZHRoLA0KCQkJCQkkdGhpcy0+Zm9ybV9oZWlnaHQsDQoJCQkJCSR0aGlzLT5mb3JtX2NhcHRpb24sDQoJCQkJCScnLA0KCQkJCQkkdGhpcy0+Zm9ybV9tZW51YmF3YWguDQoJCQkJCSI8aW5wdXQgdHlwZT0naGlkZGVuJyBpZD0nIi4kdGhpcy0+UHJlZml4LiJfaWRwbGgnIG5hbWU9JyIuJHRoaXMtPlByZWZpeC4iX2lkcGxoJyB2YWx1ZT0nJHRoaXMtPmZvcm1faWRwbGgnID4NCgkJCQkJPGlucHV0IHR5cGU9J2hpZGRlbicgaWQ9JyIuJHRoaXMtPlByZWZpeC4iX2ZtU1QnIG5hbWU9JyIuJHRoaXMtPlByZWZpeC4iX2ZtU1QnIHZhbHVlPSckdGhpcy0+Zm9ybV9mbVNUJyA+Ig0KCQkJCQksLy8kdGhpcy0+c2V0Rm9ybV9tZW51YmF3YWhfY29udGVudCgpLA0KCQkJCQkkdGhpcy0+Zm9ybV9tZW51X2Jhd2FoX2hlaWdodA0KCQkJCSk7DQoJCQkNCgkJCQ0KCQl9DQoJCXJldHVybiAkZm9ybTsNCgl9CQ0KCQ0KCWZ1bmN0aW9uIHNldEtvbG9tRGF0YSgkbm8sICRpc2ksICRNb2RlLCAkVGFtcGlsQ2hlY2tCb3gpew0KCSBnbG9iYWwgJFJlZjsNCgkgDQoJICRLb2xvbXMgPSBhcnJheSgpOw0KCSAkS29sb21zW10gPSBhcnJheSgnYWxpZ249ImNlbnRlciInLCAkbm8uJy4nICk7DQoJICBpZiAoJE1vZGUgPT0gMSkgJEtvbG9tc1tdID0gYXJyYXkoIiBhbGlnbj0nY2VudGVyJyAgIiwgJFRhbXBpbENoZWNrQm94KTsNCgkgJEtvbG9tc1tdID0gYXJyYXkoJ2FsaWduPSJsZWZ0IicsJGlzaVsnbmFtYSddKTsgDQoJICRLb2xvbXNbXSA9IGFycmF5KCdhbGlnbj0icmlnaHQiJyxudW1iZXJfZm9ybWF0KCRpc2lbJ2p1bWxhaCddLDAsIiwiLCIuIikpOw0KCSAkZ2V0VGFuZ2dhbCA9ICRpc2lbJ3RnbCddOw0KCSAkcGVjYWhUYW5nZ2FsID0gZXhwbG9kZSgiLSIsJGdldFRhbmdnYWwpOw0KCSAkS29sb21zW10gPSBhcnJheSgnYWxpZ249ImNlbnRlciInLCRwZWNhaFRhbmdnYWxbMl0uIi0iLiRwZWNhaFRhbmdnYWxbMV0uIi0iLiRwZWNhaFRhbmdnYWxbMF0pOw0KCSAkS29sb21zW10gPSBhcnJheSgnYWxpZ249ImxlZnQiJywkaXNpWydub21vciddKTsgDQoJIHJldHVybiAkS29sb21zOw0KCX0NCgkNCg0KDQoJZnVuY3Rpb24gZ2VuRGFmdGFyT3BzaSgpew0KDQoJZ2xvYmFsICRSZWYsICRNYWluOw0KCSBHbG9iYWwgJGZtU0tQREJpZGFuZywkZm1TS1BEc2twZCwgJGZtU0tQRFVydXNhbjsNCgkgJGZtU0tQREJpZGFuZyA9IGlzc2V0KCRIVFRQX0NPT0tJRV9WQVJTWydjb2ZtU0tQRCddKT8gJEhUVFBfQ09PS0lFX1ZBUlNbJ2NvZm1TS1BEJ106IGNla1BPU1QoJ2ZtU0tQREJpZGFuZycpOw0KCSAkZm1TS1BEc2twZCA9IGlzc2V0KCRIVFRQX0NPT0tJRV9WQVJTWydjb2ZtVU5JVCddKT8gJEhUVFBfQ09PS0lFX1ZBUlNbJ2NvZm1VTklUJ106IGNla1BPU1QoJ2ZtU0tQRHNrcGQnKTsNCgkkZm1UYWh1bj0gIGNla1BPU1QoJ2ZtVGFodW4nKT09Jyc\/JF9DT09LSUVbJ2NvVGhuQW5nZ2FyYW4nXTpjZWtQT1NUKCdmbVRhaHVuJyk7DQoJJGZtQklEQU5HID0gY2VrUE9TVCgnZm1CSURBTkcnKTsNCgkJJGJhcmlzID0gJF9SRVFVRVNUWydiYXJpcyddOw0KCWlmICgkYmFyaXMgPT0gJycpew0KCQkkYmFyaXMgPSAiMjUiOwkJDQoJfQ0KDQoJICRhcnIgPSBhcnJheSgJDQoJCQlhcnJheSgnbmFtYScsJ05BTUEgVEVNUExBVEUnKSwJCQ0KCQkJYXJyYXkoJ2p1bWxhaCcsJ0pVTUxBSCcpLAkNCgkJCWFycmF5KCd0Z2wnLCdUQU5HR0FMJyksCQ0KCQkJYXJyYXkoJ25vbW9yJywnTk9NT1InKQkJDQoJCQkpOw0KCQkNCgkgJGFyck9yZGVyID0gYXJyYXkoDQoJCQkgICAgIAlhcnJheSgnMScsJ05BTUEgVEVNUExBVEUnKSwNCgkJCQkJYXJyYXkoJzInLCdKVU1MQUgnKSwJCQ0KCQkJCQlhcnJheSgnMycsJ1RBTkdHQUwnKSwJDQoJCQkJCWFycmF5KCc0JywnTk9NT1InKQkJCQ0KCQkJCQkpOw0KCSANCgkkZm1QSUxDQVJJID0gJF9SRVFVRVNUWydmbVBJTENBUkknXTsJDQoJJGZtUElMQ0FSSXZhbHVlID0gJF9SRVFVRVNUWydmbVBJTENBUkl2YWx1ZSddOwkJDQoJLy90Z2wgYnVsYW4gZGFuIHRhaHVuDQoJJGZtRmlsdFRnbEJ0dyA9ICRfUkVRVUVTVFsnZm1GaWx0VGdsQnR3J107DQoJJGZtRmlsdFRnbEJ0d190Z2wxID0gJF9SRVFVRVNUWydmbUZpbHRUZ2xCdHdfdGdsMSddOw0KCSRmbUZpbHRUZ2xCdHdfdGdsMiA9ICRfUkVRVUVTVFsnZm1GaWx0VGdsQnR3X3RnbDInXTsNCgkkZm1PUkRFUjEgPSBjZWtQT1NUKCdmbU9SREVSMScpOw0KCSRmbURFU0MxID0gY2VrUE9TVCgnZm1ERVNDMScpOw0KJFRhbXBpbE9wdCA9IA0KCSI8ZGl2IGNsYXNzPSdGaWx0ZXJCYXInIHN0eWxlPSdtYXJnaW4tdG9wOjEwcHg7Jz48dGFibGUgc3R5bGU9J3dpZHRoOjEwMCUnPiIuDQoJCQlDbWJVcnVzYW5CaWRhbmdTa3BkKCd0ZW1wbGF0ZScpLg0KIjwvdGFibGU+PC9kaXY+Ii4iPGRpdiBjbGFzcz0nRmlsdGVyQmFyJyBzdHlsZT0nbWFyZ2luLXRvcDo1cHg7Jz4iLg0KCQkJIjx0YWJsZSBzdHlsZT0nd2lkdGg6MTAwJSc+DQoJCQk8dHI+DQoJCQk8dGQgc3R5bGU9J3dpZHRoOjE0MHB4Oyc+ICIuY21iQXJyYXkoJ2ZtUElMQ0FSSScsJGZtUElMQ0FSSSwkYXJyLCctLSBDYXJpIERhdGEgLS0nLCcnKS4iICA8L3RkPjx0ZD48aW5wdXQgdHlwZT0ndGV4dCcgdmFsdWU9JyIuJGZtUElMQ0FSSXZhbHVlLiInIG5hbWU9J2ZtUElMQ0FSSXZhbHVlJyBpZD0nZm1QSUxDQVJJdmFsdWUnPiAgJm5ic3AgPGlucHV0IHR5cGU9J2J1dHRvbicgaWQ9J2J0VGFtcGlsJyB2YWx1ZT0nQ2FyaScgb25jbGljaz0nIi4kdGhpcy0+UHJlZml4LiIucmVmcmVzaExpc3QodHJ1ZSknPjwvdGQ+DQoJCQkgPC90cj4NCgkJCTwvdGFibGU+Ii4NCgkJCSI8L2Rpdj4iLiI8ZGl2IGNsYXNzPSdGaWx0ZXJCYXInIHN0eWxlPSdtYXJnaW4tdG9wOjVweDsnPiIuDQoJCQkiPHRhYmxlIHN0eWxlPSd3aWR0aDoxMDAlJz4NCgkJCTx0cj4NCgkJCTx0ZCBzdHlsZT0nd2lkdGg6MTUwcHg7Jz4gIi5jbWJBcnJheSgnZm1PUkRFUjEnLCRmbU9SREVSMSwkYXJyT3JkZXIsJy0tVXJ1dGthbi0tJywnJykuIiAgPC90ZD4NCgkJCTx0ZCBzdHlsZT0nd2lkdGg6MjAwcHg7JyA+PGlucHV0ICRmbURFU0MxIHR5cGU9J2NoZWNrYm94JyBpZD0nZm1ERVNDMScgbmFtZT0nZm1ERVNDMScgdmFsdWU9J2NoZWNrZWQnPiBtZW51cnVuICZuYnNwIEp1bWxhaCBEYXRhIDogPGlucHV0IHR5cGU9J3RleHQnIG5hbWU9J2JhcmlzJyB2YWx1ZT0nJGJhcmlzJyBpZD0nYmFyaXMnIHN0eWxlPSd3aWR0aDozMHB4Oyc+ICA8L3RkPjx0ZCBhbGlnbj0nbGVmdCcgPjxpbnB1dCB0eXBlPSdidXR0b24nIGlkPSdidFRhbXBpbCcgdmFsdWU9J1RhbXBpbGthbicgb25jbGljaz0nIi4kdGhpcy0+UHJlZml4LiIucmVmcmVzaExpc3QodHJ1ZSknPjwvdGQ+DQoJCQkgPC90cj4NCgkJCTwvdGFibGU+Ii4NCgkJCSI8L2Rpdj4iOw0KCQkJDQoJCXJldHVybiBhcnJheSgnVGFtcGlsT3B0Jz0+JFRhbXBpbE9wdCk7DQoJfQkJCQ0KCQ0KCWZ1bmN0aW9uIGdldERhZnRhck9wc2koJE1vZGU9MSl7DQoJCWdsb2JhbCAkTWFpbiwgJEhUVFBfQ09PS0lFX1ZBUlM7DQoJCSRVSUQgPSAkX0NPT0tJRVsnY29JRCddOyANCg0KCQkJCQ0KCQkkYXJyS29uZGlzaSA9IGFycmF5KCk7CQkNCgkJDQoJCSRmbVBJTENBUkkgPSAkX1JFUVVFU1RbJ2ZtUElMQ0FSSSddOwkNCgkJJGZtUElMQ0FSSXZhbHVlID0gJF9SRVFVRVNUWydmbVBJTENBUkl2YWx1ZSddOw0KCQkkZm1GaWx0VGdsQnR3ID0gJF9SRVFVRVNUWydmbUZpbHRUZ2xCdHcnXTsJCQkNCgkJJGZtRmlsdFRnbEJ0d190Z2wxID0gJF9SRVFVRVNUWydmbUZpbHRUZ2xCdHdfdGdsMSddOw0KCQkkZm1GaWx0VGdsQnR3X3RnbDIgPSAkX1JFUVVFU1RbJ2ZtRmlsdFRnbEJ0d190Z2wyJ107DQoNCgkJJGt1ZUJpZGFuZyA9ICRfQ09PS0lFWydjb2ZtU0tQRCddOw0KCQkka3VlU0tQRCA9ICAkX0NPT0tJRVsnY29mbVVOSVQnXTsNCgkJJHJlZl9za3BkU2twZGZtVXJ1c2FuID0gJF9SRVFVRVNUWydmbVNLUERVcnVzYW4nXTsNCgkJJHJlZl9za3BkU2twZGZtU0tQRCA9ICRfUkVRVUVTVFsnZm1TS1BEQmlkYW5nJ107DQoJCSRyZWZfc2twZFNrcGRmbVVOSVQgPSAkX1JFUVVFU1RbJ2ZtU0tQRHNrcGQnXTsNCg0KCQkkZm1MaW1pdCA9ICRfUkVRVUVTVFsnYmFyaXMnXTsNCgkJJHRoaXMtPnBhZ2VQZXJIYWw9JGZtTGltaXQ7DQoNCgkJc3dpdGNoKCRmbVBJTENBUkkpewkJCQ0KCQkJY2FzZSAnbmFtYSc6ICRhcnJLb25kaXNpW10gPSAiIG5hbWEgbGlrZSAnJSRmbVBJTENBUkl2YWx1ZSUnIjsgYnJlYWs7CQ0KCQkJY2FzZSAnanVtbGFoJzogJGFycktvbmRpc2lbXSA9ICIganVtbGFoIGxpa2UgJyUkZm1QSUxDQVJJdmFsdWUlJyI7IGJyZWFrOwkNCgkJCWNhc2UgJ3RnbCc6ICRhcnJLb25kaXNpW10gPSAiIHRnbCBsaWtlICclJGZtUElMQ0FSSXZhbHVlJSciOyBicmVhazsJDQoJCQljYXNlICdub21vcic6ICRhcnJLb25kaXNpW10gPSAiIG5hbWEgbGlrZSAnJSRmbVBJTENBUkl2YWx1ZSUnIjsgYnJlYWs7CQkJCQkJIAkJCQ0KCQl9DQoJCQ0KDQoJCQ0KCQkNCgkJaWYoJHJlZl9za3BkU2twZGZtVXJ1c2FuIT0nMCcgYW5kICRyZWZfc2twZFNrcGRmbVVydXNhbiAhPScnICApJGFycktvbmRpc2lbXT0gImMxPSckcmVmX3NrcGRTa3BkZm1VcnVzYW4nIjsNCgkJDQoJCWlmKCRyZWZfc2twZFNrcGRmbVVydXNhbiE9JzAnICYmICRyZWZfc2twZFNrcGRmbVVydXNhbiE9JzAnKXsNCgkJCWlmKCRyZWZfc2twZFNrcGRmbVNLUEQhPScwMCcgYW5kICRyZWZfc2twZFNrcGRmbVNLUEQgIT0nJyAgKSRhcnJLb25kaXNpW109ICJjPSckcmVmX3NrcGRTa3BkZm1TS1BEJyI7DQoJCX0NCgkJaWYoJHJlZl9za3BkU2twZGZtU0tQRCE9JzAwJyl7DQoJCWlmKCRyZWZfc2twZFNrcGRmbVVOSVQhPScwMCcgYW5kICRyZWZfc2twZFNrcGRmbVVOSVQgIT0nJyApJGFycktvbmRpc2lbXT0gImQ9JyRyZWZfc2twZFNrcGRmbVVOSVQnIjsNCgkJfQ0KCQkNCgkJDQoNCg0KCQkkS29uZGlzaT0gam9pbignIGFuZCAnLCRhcnJLb25kaXNpKTsJCQ0KCQkkS29uZGlzaSA9ICRLb25kaXNpID09JycgPyAnJzonIFdoZXJlICcuJEtvbmRpc2k7DQoJCQ0KCQkvL09yZGVyIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCgkJJGZtT1JERVIxID0gY2VrUE9TVCgnZm1PUkRFUjEnKTsNCgkJJGZtREVTQzEgPSBjZWtQT1NUKCdmbURFU0MxJyk7CQkJDQoJCSRBc2MxID0gJGZtREVTQzEgPT0nJz8gJyc6ICdkZXNjJzsJCQ0KCQkkYXJyT3JkZXJzID0gYXJyYXkoKTsNCgkJc3dpdGNoKCRmbU9SREVSMSl7DQoJCQljYXNlICcxJzogJGFyck9yZGVyc1tdID0gIiBuYW1hICRBc2MxICIgO2JyZWFrOw0KCQkJY2FzZSAnMic6ICRhcnJPcmRlcnNbXSA9ICIganVtbGFoICRBc2MxICIgO2JyZWFrOw0KCQkJY2FzZSAnMyc6ICRhcnJPcmRlcnNbXSA9ICIgdGdsICRBc2MxICIgO2JyZWFrOw0KCQkJY2FzZSAnNCc6ICRhcnJPcmRlcnNbXSA9ICIgbm9tb3IgJEFzYzEgIiA7YnJlYWs7DQoJCX0JDQoJCSRPcmRlcj0gam9pbignLCcsJGFyck9yZGVycyk7CQ0KCQkkT3JkZXJEZWZhdWx0ID0gJyc7DQoNCgkJJHBhZ2VQZXJIYWwgPSAkdGhpcy0+cGFnZVBlckhhbCA9PScnID8gJE1haW4tPlBhZ2VQZXJIYWw6ICR0aGlzLT5wYWdlUGVySGFsOyANCgkJJEhhbERlZmF1bHQ9Y2VrUE9TVCgkdGhpcy0+UHJlZml4LidfaGFsJywxKTsJCQkJCQ0KCQkkTGltaXQgPSAiIGxpbWl0ICIuKCgkSGFsRGVmYXVsdAkqMSkgLSAxKSAqICRwYWdlUGVySGFsLiIsIi4kcGFnZVBlckhhbDsgDQoJCSRMaW1pdCA9ICRNb2RlID09IDMgPyAnJzogJExpbWl0Ow0KCQkkTm9Bd2FsPSAkcGFnZVBlckhhbCAqICgoJEhhbERlZmF1bHQqMSkgLSAxKTsJCQkJCQkJDQoJCSROb0F3YWwgPSAkTW9kZSA9PSAzID8gMDogJE5vQXdhbDsJDQoJCQ0KCQlyZXR1cm4gYXJyYXkoJ0tvbmRpc2knPT4kS29uZGlzaSwgJ09yZGVyJz0+JE9yZGVyICwnTGltaXQnPT4kTGltaXQsICdOb0F3YWwnPT4kTm9Bd2FsKTsNCgkJDQoJfQ0KCQ0KDQoJZnVuY3Rpb24gSGFwdXMoJGlkcyl7DQoJCSAkZXJyPScnOyAkY2VrPScnOw0KCQlmb3IoJGkgPSAwOyAkaTxjb3VudCgkaWRzKTsgJGkrKykJew0KCQkNCgkJCSRhID0gIlNFTEVDVCBjb3VudCgqKSBhcyBjbnQsIGFhLnRlbXBsYXRlX3RlcmJlc2FyLCBhYS50ZW1wbGF0ZV90ZXJrZWNpbCwgYmIubmFtYSwgYWEuZiwgYWEuZywgYWEuaCwgYWEuaSwgYWEuaiBGUk9NIHJlZl9iYXJhbmcgYWEgSU5ORVIgSk9JTiByZWZfdGVtcGxhdGUgYmIgT04gYWEudGVtcGxhdGVfdGVyYmVzYXIgPSBiYi5uYW1hIE9SIGFhLnRlbXBsYXRlX3RlcmtlY2lsID0gYmIubmFtYSBXSEVSRSBiYi5uYW1hPSciLiRpZHNbJGldLiInICI7ICRjZWsgLj0gJGE7DQoJCSRhcSA9IG15c3FsX3F1ZXJ5KCRhKTsNCgkJJGNudCA9IG15c3FsX2ZldGNoX2FycmF5KCRhcSk7DQoJCQ0KCQlpZigkY250WydjbnQnXSA+IDApICRlcnIgPSAidGVtcGxhdGUgIi4kaWRzWyRpXS4iIFRpZGFrIEJpc2EgRGlIYXB1cyAhIFN1ZGFoIERpZ3VuYWthbiBEaSBSZWYgQmFyYW5nLiI7DQoJCQ0KCQkJaWYoJGVycj09JycgKXsNCgkJCQkJJHF5ID0gIkRFTEVURSBGUk9NICR0aGlzLT5UYmxOYW1lX0hhcHVzIFdIRVJFIGlkPSciLiRpZHNbJGldLiInICI7JGNlay49JHF5Ow0KCQkJCQkkcXJ5ID0gbXlzcWxfcXVlcnkoJHF5KTsNCgkJCQkJJHF5ID0gIkRFTEVURSBGUk9NIHJlZl9yaW5jaWFuX3RlbXBsYXRlIFdIRVJFIHJlZmlkX3RlbXBsYXRlPSciLiRpZHNbJGldLiInICI7JGNlay49JHF5Ow0KCQkJCQkkcXJ5ID0gbXlzcWxfcXVlcnkoJHF5KTsNCgkJCQkJCQ0KCQkJfWVsc2V7DQoJCQkJYnJlYWs7DQoJCQl9CQkJDQoJCX0NCgkJcmV0dXJuIGFycmF5KCdlcnInPT4kZXJyLCdjZWsnPT4kY2VrKTsNCgl9DQp9DQokdGVtcGxhdGUgPSBuZXcgdGVtcGxhdGVPYmooKTsNCj8+",
    "size": "27192"
}