{
    "namaFile": "lib\/PHPExcel\/Classes\/PHPExcel\/Cell\/DataValidation.php",
    "lastUpdate": "2017-12-25+01:39:38.00",
    "contentFile": "\/ICd0JyA6ICdmJykgLgogICAgICAgICAgICAkdGhpcy0+ZXJyb3JUaXRsZSAuCiAgICAgICAgICAgICR0aGlzLT5lcnJvciAuCiAgICAgICAgICAgICR0aGlzLT5wcm9tcHRUaXRsZSAuCiAgICAgICAgICAgICR0aGlzLT5wcm9tcHQgLgogICAgICAgICAgICBfX0NMQVNTX18KICAgICAgICApOwogICAgfQoKICAgIC8qKgogICAgICogSW1wbGVtZW50IFBIUCBfX2Nsb25lIHRvIGNyZWF0ZSBhIGRlZXAgY2xvbmUsIG5vdCBqdXN0IGEgc2hhbGxvdyBjb3B5LgogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gX19jbG9uZSgpCiAgICB7CiAgICAgICAgJHZhcnMgPSBnZXRfb2JqZWN0X3ZhcnMoJHRoaXMpOwogICAgICAgIGZvcmVhY2ggKCR2YXJzIGFzICRrZXkgPT4gJHZhbHVlKSB7CiAgICAgICAgICAgIGlmIChpc19vYmplY3QoJHZhbHVlKSkgewogICAgICAgICAgICAgICAgJHRoaXMtPiRrZXkgPSBjbG9uZSAkdmFsdWU7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAkdGhpcy0+JGtleSA9ICR2YWx1ZTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQo=",
    "size": "10310"
}