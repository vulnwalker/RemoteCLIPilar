{
    "namaFile": "lib\/PHPExcel\/Classes\/PHPExcel\/CachedObjectStorage\/SQLite.php",
    "lastUpdate": "2017-12-25+01:39:38.00",
    "contentFile": "PD9waHAKCi8qKgogKiBQSFBFeGNlbF9DYWNoZWRPYmplY3RTdG9yYWdlX1NRTGl0ZQogKgogKiBDb3B5cmlnaHQgKGMpIDIwMDYgLSAyMDE1IFBIUEV4Y2VsCiAqCiAqIFRoaXMgbGlicmFyeSBpcyBmcmVlIHNvZnR3YXJlOyB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IKICogbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYwogKiBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIKICogdmVyc2lvbiAyLjEgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCiAqCiAqIFRoaXMgbGlicmFyeSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAogKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZgogKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlIEdOVQogKiBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgogKgogKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCiAqIExpY2Vuc2UgYWxvbmcgd2l0aCB0aGlzIGxpYnJhcnk7IGlmIG5vdCwgd3JpdGUgdG8gdGhlIEZyZWUgU29mdHdhcmUKICogRm91bmRhdGlvbiwgSW5jLiwgNTEgRnJhbmtsaW4gU3RyZWV0LCBGaWZ0aCBGbG9vciwgQm9zdG9uLCBNQSAgMDIxMTAtMTMwMSAgVVNBCiAqCiAqIEBjYXRlZ29yeSAgIFBIUEV4Y2VsCiAqIEBwYWNrYWdlICAgIFBIUEV4Y2VsX0NhY2hlZE9iamVjdFN0b3JhZ2UKICogQGNvcHlyaWdodCAgQ29weXJpZ2h0IChjKSAyMDA2IC0gMjAxNSBQSFBFeGNlbCAoaHR0cDovL3d3dy5jb2RlcGxleC5jb20vUEhQRXhjZWwpCiAqIEBsaWNlbnNlICAgIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9vbGQtbGljZW5zZXMvbGdwbC0yLjEudHh0ICAgIExHUEwKICogQHZlcnNpb24gICAgIyNWRVJTSU9OIyMsICMjREFURSMjCiAqLwpjbGFzcyBQSFBFeGNlbF9DYWNoZWRPYmplY3RTdG9yYWdlX1NRTGl0ZSBleHRlbmRzIFBIUEV4Y2VsX0NhY2hlZE9iamVjdFN0b3JhZ2VfQ2FjaGVCYXNlIGltcGxlbWVudHMgUEhQRXhjZWxfQ2FjaGVkT2JqZWN0U3RvcmFnZV9JQ2FjaGUKewogICAgLyoqCiAgICAgKiBEYXRhYmFzZSB0YWJsZSBuYW1lCiAgICAgKgogICAgICogQHZhciBzdHJpbmcKICAgICAqLwogICAgcHJpdmF0ZSAkVGFibGVOYW1lID0gbnVsbDsKCiAgICAvKioKICAgICAqIERhdGFiYXNlIGhhbmRsZQogICAgICoKICAgICAqIEB2YXIgcmVzb3VyY2UKICAgICAqLwogICAgcHJpdmF0ZSAkREJIYW5kbGUgPSBudWxsOwoKICAgIC8qKgogICAgICogU3RvcmUgY2VsbCBkYXRhIGluIGNhY2hlIGZvciB0aGUgY3VycmVudCBjZWxsIG9iamVjdCBpZiBpdCdzICJkaXJ0eSIsCiAgICAgKiAgICAgYW5kIHRoZSAnbnVsbGlmeScgdGhlIGN1cnJlbnQgY2VsbCBvYmplY3QKICAgICAqCiAgICAgKiBAcmV0dXJuICAgIHZvaWQKICAgICAqIEB0aHJvd3MgICAgUEhQRXhjZWxfRXhjZXB0aW9uCiAgICAgKi8KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBzdG9yZURhdGEoKQogICAgewogICAgICAgIGlmICgkdGhpcy0+Y3VycmVudENlbGxJc0RpcnR5ICYmICFlbXB0eSgkdGhpcy0+Y3VycmVudE9iamVjdElEKSkgewogICAgICAgICAgICAkdGhpcy0+Y3VycmVudE9iamVjdC0+ZGV0YWNoKCk7CgogICAgICAgICAgICBpZiAoISR0aGlzLT5EQkhhbmRsZS0+cXVlcnlFeGVjKCJJTlNFUlQgT1IgUkVQTEFDRSBJTlRPIGt2cF8iLiR0aGlzLT5UYWJsZU5hbWUuIiBWQUxVRVMoJyIuJHRoaXMtPmN1cnJlbnRPYmplY3RJRC4iJywnIi5zcWxpdGVfZXNjYXBlX3N0cmluZyhzZXJpYWxpemUoJHRoaXMtPmN1cnJlbnRPYmplY3QpKS4iJykiKSkgewogICAgICAgICAgICAgICAgdGhyb3cgbmV3IFBIUEV4Y2VsX0V4Y2VwdGlvbihzcWxpdGVfZXJyb3Jfc3RyaW5nKCR0aGlzLT5EQkhhbmRsZS0+bGFzdEVycm9yKCkpKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAkdGhpcy0+Y3VycmVudENlbGxJc0RpcnR5ID0gZmFsc2U7CiAgICAgICAgfQogICAgICAgICR0aGlzLT5jdXJyZW50T2JqZWN0SUQgPSAkdGhpcy0+Y3VycmVudE9iamVjdCA9IG51bGw7CiAgICB9CgogICAgLyoqCiAgICAgKiBBZGQgb3IgVXBkYXRlIGEgY2VsbCBpbiBjYWNoZSBpZGVudGlmaWVkIGJ5IGNvb3JkaW5hdGUgYWRkcmVzcwogICAgICoKICAgICAqIEBwYXJhbSAgICBzdHJpbmcgICAgICAgICAgICAkcENvb3JkICAgICAgICBDb29yZGluYXRlIGFkZHJlc3Mgb2YgdGhlIGNlbGwgdG8gdXBkYXRlCiAgICAgKiBAcGFyYW0gICAgUEhQRXhjZWxfQ2VsbCAgICAkY2VsbCAgICAgICAgQ2VsbCB0byB1cGRhdGUKICAgICAqIEByZXR1cm4gICAgUEhQRXhjZWxfQ2VsbAogICAgICogQHRocm93cyAgICBQSFBFeGNlbF9FeGNlcHRpb24KICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGFkZENhY2hlRGF0YSgkcENvb3JkLCBQSFBFeGNlbF9DZWxsICRjZWxsKQogICAgewogICAgICAgIGlmICgoJHBDb29yZCAhPT0gJHRoaXMtPmN1cnJlbnRPYmplY3RJRCkgJiYgKCR0aGlzLT5jdXJyZW50T2JqZWN0SUQgIT09IG51bGwpKSB7CiAgICAgICAgICAgICR0aGlzLT5zdG9yZURhdGEoKTsKICAgICAgICB9CgogICAgICAgICR0aGlzLT5jdXJyZW50T2JqZWN0SUQgPSAkcENvb3JkOwogICAgICAgICR0aGlzLT5jdXJyZW50T2JqZWN0ID0gJGNlbGw7CiAgICAgICAgJHRoaXMtPmN1cnJlbnRDZWxsSXNEaXJ0eSA9IHRydWU7CgogICAgICAgIHJldHVybiAkY2VsbDsKICAgIH0KCiAgICAvKioKICAgICAqIEdldCBjZWxsIGF0IGEgc3BlY2lmaWMgY29vcmRpbmF0ZQogICAgICoKICAgICAqIEBwYXJhbSAgICAgc3RyaW5nICAgICAgICAgICAgICRwQ29vcmQgICAgICAgIENvb3JkaW5hdGUgb2YgdGhlIGNlbGwKICAgICAqIEB0aHJvd3MgICAgIFBIUEV4Y2VsX0V4Y2VwdGlvbgogICAgICogQHJldHVybiAgICAgUEhQRXhjZWxfQ2VsbCAgICAgQ2VsbCB0aGF0IHdhcyBmb3VuZCwgb3IgbnVsbCBpZiBub3QgZm91bmQKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGdldENhY2hlRGF0YSgkcENvb3JkKQogICAgewogICAgICAgIGlmICgkcENvb3JkID09PSAkdGhpcy0+Y3VycmVudE9iamVjdElEKSB7CiAgICAgICAgICAgIHJldHVybiAkdGhpcy0+Y3VycmVudE9iamVjdDsKICAgICAgICB9CiAgICAgICAgJHRoaXMtPnN0b3JlRGF0YSgpOwoKICAgICAgICAkcXVlcnkgPSAiU0VMRUNUIHZhbHVlIEZST00ga3ZwXyIuJHRoaXMtPlRhYmxlTmFtZS4iIFdIRVJFIGlkPSciLiRwQ29vcmQuIiciOwogICAgICAgICRjZWxsUmVzdWx0U2V0ID0gJHRoaXMtPkRCSGFuZGxlLT5xdWVyeSgkcXVlcnksIFNRTElURV9BU1NPQyk7CiAgICAgICAgaWYgKCRjZWxsUmVzdWx0U2V0ID09PSBmYWxzZSkgewogICAgICAgICAgICB0aHJvdyBuZXcgUEhQRXhjZWxfRXhjZXB0aW9uKHNxbGl0ZV9lcnJvcl9zdHJpbmcoJHRoaXMtPkRCSGFuZGxlLT5sYXN0RXJyb3IoKSkpOwogICAgICAgIH0gZWxzZWlmICgkY2VsbFJlc3VsdFNldC0+bnVtUm93cygpID09IDApIHsKICAgICAgICAgICAgLy8gICAgUmV0dXJuIG51bGwgaWYgcmVxdWVzdGVkIGVudHJ5IGRvZXNuJ3QgZXhpc3QgaW4gY2FjaGUKICAgICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgfQoKICAgICAgICAvLyAgICBTZXQgY3VycmVudCBlbnRyeSB0byB0aGUgcmVxdWVzdGVkIGVudHJ5CiAgICAgICAgJHRoaXMtPmN1cnJlbnRPYmplY3RJRCA9ICRwQ29vcmQ7CgogICAgICAgICRjZWxsUmVzdWx0ID0gJGNlbGxSZXN1bHRTZXQtPmZldGNoU2luZ2xlKCk7CiAgICAgICAgJHRoaXMtPmN1cnJlbnRPYmplY3QgPSB1bnNlcmlhbGl6ZSgkY2VsbFJlc3VsdCk7CiAgICAgICAgLy8gICAgUmUtYXR0YWNoIHRoaXMgYXMgdGhlIGNlbGwncyBwYXJlbnQKICAgICAgICAkdGhpcy0+Y3VycmVudE9iamVjdC0+YXR0YWNoKCR0aGlzKTsKCiAgICAgICAgLy8gICAgUmV0dXJuIHJlcXVlc3RlZCBlbnRyeQogICAgICAgIHJldHVybiAkdGhpcy0+Y3VycmVudE9iamVjdDsKICAgIH0KCiAgICAvKioKICAgICAqIElzIGEgdmFsdWUgc2V0IGZvciBhbiBpbmRleGVkIGNlbGw\",
    "size": "10363"
}