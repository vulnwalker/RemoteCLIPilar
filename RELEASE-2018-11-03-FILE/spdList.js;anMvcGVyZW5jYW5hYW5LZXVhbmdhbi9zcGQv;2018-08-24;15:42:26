{
    "namaFile": "js\/perencanaanKeuangan\/spd\/spdList.js",
    "lastUpdate": "2018-08-24+15:42:26.99",
    "contentFile": "\/ICIpKSB7CiAgICAgIHZhciBjb3ZlciA9IHRoaXMucHJlZml4ICsgIl9jb3ZlckxvYWRpbmciOwogICAgICBhZGRDb3ZlclBhZ2UyKGNvdmVyLCA5OSwgdHJ1ZSwgZmFsc2UpOwogICAgICAkLmFqYXgoewogICAgICAgIHR5cGU6ICJQT1NUIiwKICAgICAgICBkYXRhOiB7CiAgICAgICAgICBpZFNQRDogaWRTUEQsCiAgICAgICAgICBpZERldGFpbFNQRDogaWREZXRhaWxTUEQsCiAgICAgICAgfSwKICAgICAgICB1cmw6IHRoaXMudXJsICsgIiZ0aXBlPWRlbGV0ZVJla2VuaW5nIiwKICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICBkZWxFbGVtKGNvdmVyKTsKICAgICAgICAgIHZhciByZXNwID0gZXZhbCgiKCIgKyBkYXRhICsgIikiKTsKICAgICAgICAgIGlmIChyZXNwLmVyciA9PSAiIikgewogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidGVtcGF0RGV0YWlsU1BEIikuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50LmRldGFpbFNQRDsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGFsZXJ0KHJlc3AuZXJyKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgfSBlbHNlIHsKICAgIH0KICB9LAogIHNhdmVFZGl0U1BEIDogZnVuY3Rpb24oaWRTUEQpewoJCQl2YXIgbWU9IHRoaXM7CgkJCXRoaXMuT25FcnJvckNsb3NlID0gZmFsc2U7CgkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7CgkJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybXNpbXBhbic7CgkJCWFkZENvdmVyUGFnZTIoY292ZXIsOTksdHJ1ZSxmYWxzZSk7CgkJCSQuYWpheCh7CgkJCQl0eXBlOidQT1NUJywKICAgICAgICBkYXRhOiQoJyNsaXN0UmVnaXN0ZXJCdWt1SW5kdWtGb3JtJykuc2VyaWFsaXplKCkrIiZpZFNQRD0iK2lkU1BELAoJCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9c2F2ZUVkaXRTUEQnLAoJCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CgkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwoJCQkJCWRlbEVsZW0oY292ZXIpOwoJCQkJCWlmKHJlc3AuZXJyID09ICcnKXsKCQkJCQkJbWUuQ2xvc2UoKTsKCQkJCQkJbWUucmVmcmVzaExpc3QodHJ1ZSk7CgkJCQkJfWVsc2V7CgkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsKCQkJCQl9CgoJCQkJIH0KCQkJfSk7CgoKCX0sCiAgU2ltcGFuOiBmdW5jdGlvbigpewoJCXZhciBtZT0gdGhpczsKCQl0aGlzLk9uRXJyb3JDbG9zZSA9IGZhbHNlCgkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsKCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1zaW1wYW4nOwoJCWFkZENvdmVyUGFnZTIoY292ZXIsOTk5OTksdHJ1ZSxmYWxzZSk7CgkJJC5hamF4KHsKCQkJdHlwZTonUE9TVCcsCgkJCWRhdGE6JCgnIycrdGhpcy5wcmVmaXgrJ19mb3JtJykuc2VyaWFsaXplKCksCgkJCXVybDogdGhpcy51cmwrJyZ0aXBlPVNpbXBhbicsCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwoJCQkJZGVsRWxlbShjb3Zlcik7CgkJCQlpZihyZXNwLmVycj09JycpewoJCQkJCWFsZXJ0KCdEYXRhIGJlcmhhc2lsIGRpc2ltcGFuJyk7CgkJCQkJbWUuQ2xvc2UoKTsKCQkJCQltZS5yZWZyZXNoTGlzdCh0cnVlKTsKCQkJCQltZS5BZnRlclNpbXBhbigpOwoJCQkJfQoJCQkJZWxzZXsKCQkJCQlhbGVydChyZXNwLmVycik7CgkJCQl9CgkJICAJfQoJCX0pOwoJfSwKICBzYXZlVmFsaWRhc2kgOiBmdW5jdGlvbihpZFNQRCl7CgkJCXZhciBtZT0gdGhpczsKCQkJdGhpcy5PbkVycm9yQ2xvc2UgPSBmYWxzZTsKCQkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsKCQkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3Jtc2ltcGFuJzsKCQkJYWRkQ292ZXJQYWdlMihjb3Zlciw5OSx0cnVlLGZhbHNlKTsKCQkJJC5hamF4KHsKCQkJCXR5cGU6J1BPU1QnLAogICAgICAgIGRhdGE6JCgnIycrdGhpcy5wcmVmaXgrJ19mb3JtJykuc2VyaWFsaXplKCkrIiZpZFNQRD0iK2lkU1BELAoJCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9c2F2ZVZhbGlkYXNpJywKCQkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewoJCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsKCQkJCQlkZWxFbGVtKGNvdmVyKTsKCQkJCQlpZihyZXNwLmVyciA9PSAnJyl7CgkJCQkJCW1lLkNsb3NlKCk7CgkJCQkJCW1lLnJlZnJlc2hMaXN0KHRydWUpOwoJCQkJCX1lbHNlewoJCQkJCQlhbGVydChyZXNwLmVycik7CgkJCQkJfQoKCQkJCSB9CgkJCX0pOwoKCgl9LAp9KTsK",
    "size": "10341"
}