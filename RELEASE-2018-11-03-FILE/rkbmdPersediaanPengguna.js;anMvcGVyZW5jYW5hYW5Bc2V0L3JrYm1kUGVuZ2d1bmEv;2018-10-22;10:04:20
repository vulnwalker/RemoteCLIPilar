{
    "namaFile": "js\/perencanaanAset\/rkbmdPengguna\/rkbmdPersediaanPengguna.js",
    "lastUpdate": "2018-10-22+10:04:20.20",
    "contentFile": "dmFyIHJrYm1kUGVyc2VkaWFhblBlbmdndW5hRmlsdGVyU0tQRCA9IG5ldyBTa3BkQ2xzKHsKCXByZWZpeCA6ICdya2JtZFBlcnNlZGlhYW5QZW5nZ3VuYScsCglmb3JtTmFtZTogJ3JrYm1kUGVyc2VkaWFhblBlbmdndW5hRm9ybScsCgoJcGlsaWhVcnVzYW5mdGVyIDogZnVuY3Rpb24oKXtya2JtZFBlcnNlZGlhYW5QZW5nZ3VuYS5maWx0ZXJSZW5kZXIodHJ1ZSk7fSwKCXBpbGloQmlkYW5nQWZ0ZXIgOiBmdW5jdGlvbigpe3JrYm1kUGVyc2VkaWFhblBlbmdndW5hLmZpbHRlclJlbmRlcih0cnVlKTt9LAoJcGlsaWhVbml0QWZ0ZXIgOiBmdW5jdGlvbigpe3JrYm1kUGVyc2VkaWFhblBlbmdndW5hLmZpbHRlclJlbmRlcih0cnVlKTt9LAoJcGlsaWhTdWJVbml0QWZ0ZXIgOiBmdW5jdGlvbigpe3JrYm1kUGVyc2VkaWFhblBlbmdndW5hLmZpbHRlclJlbmRlcih0cnVlKTt9LAoJcGlsaWhTZWtzaUFmdGVyIDogZnVuY3Rpb24oKXtya2JtZFBlcnNlZGlhYW5QZW5nZ3VuYS5maWx0ZXJSZW5kZXIodHJ1ZSk7fQp9KTsKdmFyIHJrYm1kUGVyc2VkaWFhblBlbmdndW5hID0gbmV3IERhZnRhck9iajIoewoJcHJlZml4IDogJ3JrYm1kUGVyc2VkaWFhblBlbmdndW5hJywKCXVybCA6ICdwYWdlcy5waHA\",
    "size": "12711"
}