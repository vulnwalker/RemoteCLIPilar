{
    "namaFile": "pages\/persediaan\/configClass.php",
    "lastUpdate": "2018-09-20+13:36:44.34",
    "contentFile": "PD9waHAKCmNsYXNzIGNvbmZpZ0NsYXNzIGV4dGVuZHMgRGFmdGFyT2JqMiB7CiAgZnVuY3Rpb24gX19jb25zdHJ1Y3QoKSAgewogICAgZ2xvYmFsICRNYWluOwogICAgJHRoaXMtPnVzZXJuYW1lID0gJF9DT09LSUVbJ2NvSUQnXTsKICAgICRnZXREYXRhVXNlciA9ICR0aGlzLT5zcWxBcnJheSgkdGhpcy0+c3FsUXVlcnkoInNlbGVjdCAqIGZyb20gZnJvbSBhZG1pbiB3aGVyZSB1aWQgPSckdGhpcy0+dXNlcm5hbWUnIikpOwoKCiAgICAkZGF0YVBlbmdhdHVyYW4gPSAkdGhpcy0+Z2V0U2V0dGluZ1BlcnNlZGlhYW4oKTsKICAgICR0aGlzLT50YWh1bkFuZ2dhcmFuID0gJGRhdGFQZW5nYXR1cmFuWyd0YWh1biddOwogICAgJGV4cGxvZGVUYW5nZ2FsU2FsZG9Bd2FsID0gZXhwbG9kZSgiLSIsJGRhdGFQZW5nYXR1cmFuWyd0YW5nZ2FsJ10pOwogICAgJHRoaXMtPmJ1bGFuVGFuZ2dhbFNhbGRvQXdhbCA9ICRleHBsb2RlVGFuZ2dhbFNhbGRvQXdhbFsxXS4iLSIuJGV4cGxvZGVUYW5nZ2FsU2FsZG9Bd2FsWzJdOwogIH0KICBmdW5jdGlvbiBnZXRQYWdlSGVhZGVyKCRmaWxlTmFtZSl7CiAgICBzd2l0Y2ggKCRmaWxlTmFtZSkgewogICAgICBjYXNlICdzYWxkb0F3YWwnOnsKICAgICAgICAgICRoZWFkZXIgPQogICAgICAgICAgICAgICI8dGFibGUgd2lkdGg9XCIxMDAlXCIgY2xhc3M9XCJtZW51YmFyXCIgY2VsbHBhZGRpbmc9XCIwXCIgY2VsbHNwYWNpbmc9XCIwXCIgYm9yZGVyPVwiMFwiIHN0eWxlPSdtYXJnaW46MCAwIDAgMCc+CgogICAgICAgICAgICAgIDx0cj48dGQgY2xhc3M9XCJtZW51ZG90dGVkbGluZVwiIHdpZHRoPVwiNDAlXCIgaGVpZ2h0PVwiMjBcIiBzdHlsZT0ndGV4dC1hbGlnbjpyaWdodCc+PEI+CgogICAgICAgICAgICAgIDxBIGhyZWY9XCJwZ1BlcnNlZGlhYW4ucGhwP1BnPXNhbGRvQXdhbFwiIHRpdGxlPSdTQUxETyBBV0FMJyBzdHlsZT0nY29sb3IgOiBibHVlOycgPiBTQUxETyBBV0FMIDwvYT4gfAogICAgICAgICAgICAgIDxBIGhyZWY9XCJwZ1BlcnNlZGlhYW4ucGhwP1BnPXBlbmdhdHVyYW5QZXJzZWRpYWFuXCIgdGl0bGU9J1BFTkdBVFVSQU4nICA+IFBFTkdBVFVSQU4gPC9hPgoKICAgICAgICAgICAgICAmbmJzcCZuYnNwJm5ic3AKICAgICAgICAgICAgICA8L3RkPjwvdHI+CiAgICAgICAgICAgICAgPC90YWJsZT4iOwogICAgICAgIGJyZWFrOwogICAgICB9CiAgICAgIGNhc2UgJ3BlbmdhdHVyYW5QZXJzZWRpYWFuJzp7CiAgICAgICAgICAkaGVhZGVyID0KICAgICAgICAgICAgICAiPHRhYmxlIHdpZHRoPVwiMTAwJVwiIGNsYXNzPVwibWVudWJhclwiIGNlbGxwYWRkaW5nPVwiMFwiIGNlbGxzcGFjaW5nPVwiMFwiIGJvcmRlcj1cIjBcIiBzdHlsZT0nbWFyZ2luOjAgMCAwIDAnPgoKICAgICAgICAgICAgICA8dHI+PHRkIGNsYXNzPVwibWVudWRvdHRlZGxpbmVcIiB3aWR0aD1cIjQwJVwiIGhlaWdodD1cIjIwXCIgc3R5bGU9J3RleHQtYWxpZ246cmlnaHQnPjxCPgoKICAgICAgICAgICAgICA8QSBocmVmPVwicGdQZXJzZWRpYWFuLnBocD9QZz1zYWxkb0F3YWxcIiB0aXRsZT0nU0FMRE8gQVdBTCcgPiBTQUxETyBBV0FMIDwvYT4gfAogICAgICAgICAgICAgIDxBIGhyZWY9XCJwZ1BlcnNlZGlhYW4ucGhwP1BnPXBlbmdhdHVyYW5QZXJzZWRpYWFuXCIgdGl0bGU9J1BFTkdBVFVSQU4nIHN0eWxlPSdjb2xvciA6IGJsdWU7JyAgPiBQRU5HQVRVUkFOIDwvYT4KCiAgICAgICAgICAgICAgJm5ic3AmbmJzcCZuYnNwCiAgICAgICAgICAgICAgPC90ZD48L3RyPgogICAgICAgICAgICAgIDwvdGFibGU+IjsKICAgICAgICBicmVhazsKICAgICAgfQogICAgICBjYXNlICdwZW11c25haGFuUGVyc2VkaWFhbic6ewogICAgICAgICRoZWFkZXIgPQogICAgICAgICAgICI8dGFibGUgd2lkdGg9JzEwMCUnIGNsYXNzPSdtZW51YmFyJyBjZWxscGFkZGluZz0nMCcgY2VsbHNwYWNpbmc9JzAnIGJvcmRlcj0nMCcgc3R5bGU9J21hcmdpbjowIDAgMCAwJz4KICAgICAgICAgIDx0cj48dGQgY2xhc3M9J21lbnVkb3R0ZWRsaW5lJyB3aWR0aD0nNDAlJyBoZWlnaHQ9JzIwJyBzdHlsZT0ndGV4dC1hbGlnbjpyaWdodCc+PEI+CiAgICAgICAgICA8QSBocmVmPSdwZ1BlcnNlZGlhYW4ucGhwP1BnPXBlbXVzbmFoYW5QZXJzZWRpYWFuJyB0aXRsZT0nUEVNVVNOQUhBTicgc3R5bGU9J2NvbG9yIDogYmx1ZTsnID4gUEVNVVNOQUhBTiA8L2E+IHwKICAgICAgICAgIDxBIGhyZWY9J3BnUGVyc2VkaWFhbi5waHA\/UGc9ZGFmdGFyUGVtdXNuYWhhblBlcnNlZGlhYW4nIHRpdGxlPSdEQUZUQVIgUEVNVVNOQUhBTiAnICA+IERBRlRBUiBQRU1VU05BSEFOIDwvYT4KICAgICAgICAgICZuYnNwJm5ic3AKICAgICAgICAgIDwvdGQ+PC90cj4KICAgICAgICAgIDwvdGFibGU+IjsKICAgICAgICBicmVhazsKICAgICAgfQogICAgICBjYXNlICdkYWZ0YXJQZW11c25haGFuUGVyc2VkaWFhbic6ewogICAgICAgICRoZWFkZXIgPQogICAgICAgICAgICI8dGFibGUgd2lkdGg9JzEwMCUnIGNsYXNzPSdtZW51YmFyJyBjZWxscGFkZGluZz0nMCcgY2VsbHNwYWNpbmc9JzAnIGJvcmRlcj0nMCcgc3R5bGU9J21hcmdpbjowIDAgMCAwJz4KICAgICAgICAgIDx0cj48dGQgY2xhc3M9J21lbnVkb3R0ZWRsaW5lJyB3aWR0aD0nNDAlJyBoZWlnaHQ9JzIwJyBzdHlsZT0ndGV4dC1hbGlnbjpyaWdodCc+PEI+CiAgICAgICAgICA8QSBocmVmPSdwZ1BlcnNlZGlhYW4ucGhwP1BnPXBlbXVzbmFoYW5QZXJzZWRpYWFuJyB0aXRsZT0nUEVNVVNOQUhBTicgID4gUEVNVVNOQUhBTiA8L2E+IHwKICAgICAgICAgIDxBIGhyZWY9J3BnUGVyc2VkaWFhbi5waHA\/UGc9ZGFmdGFyUGVtdXNuYWhhblBlcnNlZGlhYW4nIHRpdGxlPSdEQUZUQVIgUEVNVVNOQUhBTiAnIHN0eWxlPSdjb2xvciA6IGJsdWU7JyAgPiBEQUZUQVIgUEVNVVNOQUhBTiA8L2E+CiAgICAgICAgICAmbmJzcCZuYnNwCiAgICAgICAgICA8L3RkPjwvdHI+CiAgICAgICAgICA8L3RhYmxlPiI7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0KICAgIHJldHVybiAkaGVhZGVyOwogIH0KICBmdW5jdGlvbiBnZW5GaWx0ZXJTS1BEKCRwcmVmaXg9JycsJHByZWZpeENoYW5nZWQsICR0Ymx3aWR0aD0nMTAwJScsICRrb2wxX3dpZHRoPTEwMCwkbW9kZT0nJykgewogICAgZ2xvYmFsICRNYWluLCAkZmlsdGVyVXJ1c2FuLCAkZm1XSUwsICRmaWx0ZXJCaWRhbmcsICRmaWx0ZXJTS1BELCAkZmlsdGVyVW5pdCwkZmlsdGVyU3ViVW5pdCwgJGZtVEFIVU5BTkdHQVJBTiwgJGZtS0VQRU1JTElLQU4sICRNYWluLCAkX0NPT0tJRSwgJFBnLCAkU1BnOwogICAgJGRpc2FibGVVcnVzYW4gPSAgJERpc0FibGVkOwogICAgJGRpc2FibGVCaWRhbmcgPSAkRGlzQWJsZWQ7CiAgICAkZGlzYWJsZVNLUEQgPSAkRGlzQWJsZWQ7CiAgICAkZGlzYWJsZVVuaXQgPSAkRGlzQWJsZWQ7CiAgICAkZGlzYWJsZVN1YlVuaXQgPSAkRGlzQWJsZWQ7CiAgCSRrZFN1YlVuaXQwID0gZ2VuTnVtYmVyKDAsICRNYWluLT5TVUJVTklUX0RJR0lUICk7CiAgICAkS29uZGlzaVVSVVNBTiA9ICIiOwogIAkkS29uZGlzaUJpZGFuZyA9ICIiOwogICAgJEtvbmRpc2lTS1BEID0gIiI7CgoKICAgICRQaWxpaFVSVVNBTiA9ICI8b3B0aW9uIHZhbHVlPScwMCc+LS0tIFNlbXVhIFVSVVNBTiAtLS08L29wdGlvbj4iOwogICAgJFBpbGloU0tQRCA9ICI8b3B0aW9uIHZhbHVlPScwMCc+LS0tIFNlbXVhIEJJREFORyAtLS08L29wdGlvbj4iOwogICAgJFBpbGloVU5JVCA9ICI8b3B0aW9uIHZhbHVlPScwMCc+LS0tIFNlbXVhIFNLUEQgLS0tPC9vcHRpb24+IjsKCgoKICAgIGlmKGlzc2V0KCRfUkVRVUVTVFsnZmlsdGVyVXJ1c2FuJ10pICYmICRfUkVRVUVTVFsnZmlsdGVyVXJ1c2FuJ10gIT0gJzAwJyAmJiAkX0NPT0tJRVsiY29mbVVSVVNBTiJdICE9ICRfUkVRVUVTVFsnZmlsdGVyVXJ1c2FuJ10gKXsKICAgICAgLy8gJF9DT09LSUVbImNvZm1VUlVTQU4iXSA9ICRfUkVRVUVTVFsnZmlsdGVyVXJ1c2FuJ107CiAgICAgICRmaWx0ZXJVcnVzYW4gPSAkX1JFUVVFU1RbJ2ZpbHRlclVydXNhbiddOwogICAgfWVsc2V7CiAgICAgICRmaWx0ZXJVcnVzYW4gPSAkX0NPT0tJRVsiY29mbVVSVVNBTiJdOwogICAgfQogICAgaWYoaXNzZXQoJF9SRVFVRVNUWydmaWx0ZXJCaWRhbmcnXSkgJiYgJF9SRVFVRVNUWydmaWx0ZXJCaWRhbmcnXSAhPSAnMDAnICYmICRfQ09PS0lFWyJjb2ZtU0tQRCJdICE9ICRfUkVRVUVTVFsnZmlsdGVyQmlkYW5nJ10gKXsKICAgICAgLy8gJF9DT09LSUVbImNvZm1TS1BEIl0gPSAkX1JFUVVFU1RbJ2ZpbHRlckJpZGFuZyddOwogICAgICAkZmlsdGVyQmlkYW5nID0gJF9SRVFVRVNUWydjb2ZtU0tQRCddOwogICAgfWVsc2V7CiAgICAgICRmaWx0ZXJCaWRhbmcgPSAkX0NPT0tJRVsiY29mbVNLUEQiXTsKICAgIH0KICAgIGlmKGlzc2V0KCRfUkVRVUVTVFsnZmlsdGVyU0tQRCddKSAmJiAkX1JFUVVFU1RbJ2ZpbHRlclNLUEQnXSAhPSAnMDAnICYmICRfQ09PS0lFWyJjb2ZtVU5JVCJdICE9ICRfUkVRVUVTVFsnZmlsdGVyU0tQRCddICl7CiAgICAgIC8vICRfQ09PS0lFWyJjb2ZtVU5JVCJdID0gJF9SRVFVRVNUWydmaWx0ZXJTS1BEJ107CiAgICAgICRmaWx0ZXJTS1BEID0gJF9SRVFVRVNUWydmaWx0ZXJTS1BEJ107CiAgICB9ZWxzZXsKICAgICAgJGZpbHRlclNLUEQgPSAkX0NPT0tJRVsiY29mbVVOSVQiXTsKCiAgICB9CgoKCiAgCWlmICgkX0NPT0tJRVsiY29VUlVTQU4iXSAhPT0gIjAiKSB7CiAgICAgICAgICAkZmlsdGVyVXJ1c2FuID0gJF9DT09LSUVbImNvVVJVU0FOIl07CiAgICAgICAgICAvLyAkX0NPT0tJRVsiY29mbVVSVVNBTiJdID0gJGZpbHRlclVydXNhbjsKICAgICAgICAgICRLb25kaXNpVVJVU0FOID0gIiBhbmQgYzE9JyRmaWx0ZXJVcnVzYW4nIjsKICAgICAgICAgICRQaWxpaFVSVVNBTiA9ICIiOwogICAgICB9CiAgCWVsc2V7CiAgCQlpZiAoaXNzZXQoJF9DT09LSUVbJ2NvZm1VUlVTQU4nXSkpIHsKICAJICAgICAgICRmaWx0ZXJVcnVzYW4gPSAkX0NPT0tJRVsnY29mbVVSVVNBTiddOwogIAkgICAgfQogIAkJaWYoISgkZmlsdGVyVXJ1c2FuID09ICcwMCcgfHwgJGZpbHRlclVydXNhbj09JycpKXsKICAJCX0KICAJfQogIAlpZiAoJF9DT09LSUVbImNvU0tQRCJdICE9PSAiMDAiKSB7CiAgICAgICAgICAkZmlsdGVyQmlkYW5nID0gJF9DT09LSUVbImNvU0tQRCJdOwogICAgICAgICAgJF9DT09LSUVbImNvZm1TS1BEIl0gPSAkZmlsdGVyQmlkYW5nOwogICAgICAgICAgJEtvbmRpc2lCaWRhbmcgPSAiIGFuZCBjPSckZmlsdGVyQmlkYW5nJyI7CiAgICAgICAgICAkUGlsaWhTS1BEID0gIiI7CiAgICAgIH0KICAJZWxzZXsKICAJCWlmIChpc3NldCgkX0NPT0tJRVsnY29mbVNLUEQnXSkpIHsKICAJICAgICAgICRmaWx0ZXJCaWRhbmcgPSAkX0NPT0tJRVsnY29mbVNLUEQnXTsKICAJICAgIH0KICAJCWlmKCEoJGZpbHRlckJpZGFuZyA9PSAnMDAnIHx8ICRmaWx0ZXJCaWRhbmc9PScnKSl7CiAgCQl9CiAgCX0KICAJaWYgKCRfQ09PS0lFWyJjb1VOSVQiXSAhPT0gIjAwIikgewogICAgICAgICAgJGZpbHRlclNLUEQgPSAkX0NPT0tJRVsiY29VTklUIl07CiAgICAgICAgICAkX0NPT0tJRVsiY29mbVVOSVQiXSA9ICRmaWx0ZXJTS1BEOwogICAgICAgICAgJEtvbmRpc2lTS1BEID0gIiBhbmQgZD0nJGZpbHRlclNLUEQnIjsKICAgICAgICAgICRQaWxpaFVOSVQgPSAiIjsKICAgICAgfQogIAllbHNlewogIAkJaWYgKGlzc2V0KCRfQ09PS0lFWydjb2ZtVU5JVCddKSkgewogIAkgICAgICAgJGZpbHRlclNLUEQgPSAkX0NPT0tJRVsnY29mbVVOSVQnXTsKICAJICAgIH0KICAJCWlmKCEoJGZpbHRlclNLUEQgPT0gJzAwJyB8fCAkZmlsdGVyU0tQRD09JycpKXsKICAJCX0KICAJfQoKCgoKICAJLy91cnVzYW4gLS0tLS0tLS0tLS0tLS0tLS0tLQogIAlpZigkTWFpbi0+VVJVU0FOPT0xKXsKICAJICAgICRhcXJ5ID0gInNlbGVjdCAqIGZyb20gcmVmX3NrcGQgd2hlcmUgMT0xICRLb25kaXNpVVJVU0FOIGFuZCBjMTw+JzAnIGFuZCBjPScwMCcgb3JkZXIgYnkgYzEiOwogIAkgICAgJFFyeSA9IG15c3FsX3F1ZXJ5KCRhcXJ5KTsKICAJICAgICRPcHMgPSAiIjsKICAJICAgIHdoaWxlICgkaXNpID0gbXlzcWxfZmV0Y2hfYXJyYXkoJFFyeSkpIHsKICAJICAgICAgICAkc2VsID0gJGZpbHRlclVydXNhbiA9PSAkaXNpWydjMSddID8gInNlbGVjdGVkIiA6ICIiOwogIAkgICAgICAgICRPcHMgLj0gIjxvcHRpb24gJHNlbCB2YWx1ZT0neyRpc2lbJ2MxJ119Jz57JGlzaVsnYzEnXX0uIHskaXNpWydubV9za3BkJ119IDwvb3B0aW9uPlxuIjsKICAJCQlpZiAoJGZpbHRlclVydXNhbiA9PSAkaXNpWydjMSddKSAkbm1VUlVTQU49JGlzaVsnbm1fc2twZCddOwogIAkgICAgfQogIAkJJExpc3RVUlVTQU4gPQogIAkJCS8vJGNla3NrcGQgLiAncHJlZj0nLiRwcmVmaXguCiAgCQkJIjxkaXYgaWQ9JyIuJHByZWZpeC4iQ2J4VXJ1c2FuJz4KICAJCQkJPHNlbGVjdCAkZGlzYWJsZVVydXNhbiBuYW1lPSdmaWx0ZXJVcnVzYW4nIGlkPSdmaWx0ZXJVcnVzYW4nCiAgCQkJCQlvbkNoYW5nZT1cIiIuJHByZWZpeENoYW5nZWQuIi5waWxpaFVydXNhbigpXCIKICAJCQkJPiAkUGlsaWhVUlVTQU4gJE9wczwvc2VsZWN0PjxkaXYgc3R5bGU9J2Rpc3BsYXk6bm9uZSc+JGFxcnk8L2Rpdj48L2Rpdj4iOwoKICAgICB9CgogICAgIAkvL3NrcGQgLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgICAvLyRhcXJ5ID0gInNlbGVjdCAqIGZyb20gcmVmX3NrcGQgd2hlcmUgZD0nMDAnICBvcmRlciBieSBjIjsKICAJaWYoJE1haW4tPlVSVVNBTj09MSl7CiAgCQkkYXFyeSA9ICJzZWxlY3QgKiBmcm9tIHJlZl9za3BkIHdoZXJlICAgYzE9JyRmaWx0ZXJVcnVzYW4nICBhbmQgYzw+JzAwJyBhbmQgZD0nMDAnIG9yZGVyIGJ5IGMiOwogIAl9ZWxzZXsKICAJCSRhcXJ5ID0gInNlbGVjdCAqIGZyb20gcmVmX3NrcGQgd2hlcmUgMT0xICRLb25kaXNpQmlkYW5nIGFuZCBjPD4nMDAnIGFuZCBkPScwMCcgb3JkZXIgYnkgYyI7CiAgCX0KICAgICAgJFFyeSA9IG15c3FsX3F1ZXJ5KCRhcXJ5KTsKICAgICAgJE9wcyA9ICIiOwogICAgICB3aGlsZSAoJGlzaSA9IG15c3FsX2ZldGNoX2FycmF5KCRRcnkpKSB7CiAgICAgICAgICAkc2VsID0gJGZpbHRlckJpZGFuZyA9PSAkaXNpWydjJ10gPyAic2VsZWN0ZWQiIDogIiI7CiAgICAgICAgICAkT3BzIC49ICI8b3B0aW9uICRzZWwgdmFsdWU9J3skaXNpWydjJ119Jz57JGlzaVsnYyddfS4geyRpc2lbJ25tX3NrcGQnXX08L29wdGlvbj5cbiI7CiAgCQlpZiAoJGZpbHRlckJpZGFuZyA9PSAkaXNpWydjJ10pICRubXNrcGQ9JGlzaVsnbm1fc2twZCddOwogICAgICB9CiAgCSRMaXN0U0tQRCA9CiAgCQkvLyRjZWtza3BkIC4gJ3ByZWY9Jy4kcHJlZml4LgogIAkJIjxkaXYgaWQ9JyIuJHByZWZpeC4iQ2J4QmlkYW5nJz4KICAJCQk8c2VsZWN0ICRkaXNhYmxlQmlkYW5nIG5hbWU9J2ZpbHRlckJpZGFuZycgaWQ9J2ZpbHRlckJpZGFuZycKICAJCQkJb25DaGFuZ2U9XCIiLiRwcmVmaXhDaGFuZ2VkLiIucGlsaWhCaWRhbmcoKVwiCiAgCQkJPiAkUGlsaWhTS1BEICRPcHM8L3NlbGVjdD48ZGl2IHN0eWxlPSdkaXNwbGF5Om5vbmUnPiRhcXJ5PC9kaXY+PC9kaXY+IjsKCiAgCS8vdW5pdCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAJaWYoJE1haW4tPlVSVVNBTil7CiAgCQkkYXFyeSA9InNlbGVjdCAqIGZyb20gcmVmX3NrcGQgd2hlcmUgYzE9JyRmaWx0ZXJVcnVzYW4nIGFuZCAgYz0nJGZpbHRlckJpZGFuZycgYW5kIGQgPD4gJzAwJyBhbmQgZSA9ICcwMCcgJEtvbmRpc2lTS1BEIG9yZGVyIGJ5IGQiOwogIAl9ZWxzZXsKICAJCSRhcXJ5ID0ic2VsZWN0ICogZnJvbSByZWZfc2twZCB3aGVyZSBjPSckZmlsdGVyQmlkYW5nJyBhbmQgZCA8PiAnMDAnIGFuZCBlID0gJzAwJyAkS29uZGlzaVNLUEQgb3JkZXIgYnkgZCI7CiAgCX0KICAJJFFyeSA9IG15c3FsX3F1ZXJ5KCRhcXJ5KTsKICAgICAgJE9wcyA9ICIiOwogICAgICB3aGlsZSAoJGlzaSA9IG15c3FsX2ZldGNoX2FycmF5KCRRcnkpKSB7CiAgICAgICAgICAkc2VsID0gJGZpbHRlclNLUEQgPT0gJGlzaVsnZCddID8gInNlbGVjdGVkIiA6ICIiOwogICAgICAgICAgJE9wcyAuPSAiPG9wdGlvbiAkc2VsIHZhbHVlPSd7JGlzaVsnZCddfSc+eyRpc2lbJ2QnXX0uIHskaXNpWydubV9za3BkJ119PC9vcHRpb24+XG4iOwogIAkJaWYgKCRmaWx0ZXJTS1BEID09ICRpc2lbJ2QnXSkgJG5tdW5pdD0kaXNpWydubV9za3BkJ107CgogICAgICB9CiAgICAgICRMaXN0VU5JVCA9CiAgCQkiPGRpdiBpZD0nIi4kcHJlZml4LiJDYnhVbml0Jz4KICAJCQk8c2VsZWN0ICRkaXNhYmxlU0tQRCBuYW1lPSdmaWx0ZXJTS1BEJyBpZD0nZmlsdGVyU0tQRCcKICAJCQkJb25DaGFuZ2U9XCIiLiRwcmVmaXhDaGFuZ2VkLiIucGlsaWhVbml0KClcIj4KICAJCQkJJFBpbGloVU5JVCAkT3BzCiAgCQkJPC9zZWxlY3Q+PGRpdiBzdHlsZT0nZGlzcGxheTpub25lJz4kYXFyeTwvZGl2PjwvZGl2PiI7CgoKCgogIAlpZigkTWFpbi0+VVJVU0FOKXsKICAJCWlmICgkbW9kZT09JzEnKXsKICAJCQkkdlVSVVNBTiA9ICI8dHIgdmFsaWduPVwidG9wXCI+IDx0ZCB3aWR0aD0nJGtvbDFfd2lkdGgnPlVSVVNBTjwvdGQ+IDx0ZCB3aWR0aD0nMTAnPjo8L3RkPiA8dGQ+CiAgCQkJCTxpbnB1dCB0eXBlPXRleHQgPiBuYW1lPSciLiRwcmVmaXguIm5tVVJVU0FOJyBpZD0nIi4kcHJlZml4LiJubVNLUEQnIHZhbHVlPSckbm1VUlVTQU4nID4KICAJCQkJPGlucHV0IHR5cGU9aGlkZGVuID4gbmFtZT0nZmlsdGVyVXJ1c2FuJyBpZD0nZmlsdGVyVXJ1c2FuJyB2YWx1ZT0nJGZpbHRlclVydXNhbicgPgogIAkJCQk8L3RkPiA8L3RyPiI7CiAgCQl9CiAgCQllbHNlewogIAkJCSR2VVJVU0FOID0gIjx0ciB2YWxpZ249XCJ0b3BcIj4gPHRkIHdpZHRoPScka29sMV93aWR0aCc+VVJVU0FOPC90ZD4gPHRkIHdpZHRoPScxMCc+OjwvdGQ+IDx0ZD4kTGlzdFVSVVNBTjwvdGQ+IDwvdHI+ICI7CiAgCQl9CgogIAl9CgogICAgICAkSHNsID0gIgogIAkJPCEtLTxzY3JpcHQgc3JjPSdqcy9za3BkLmpzJyB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPjwvc2NyaXB0Pi0tPgogIAkJPGRpdiBzdHlsZT0nZmxvYXQ6IGxlZnQ7IHdpZHRoOiA5MCU7IGhlaWdodDogYXV0bzsgcGFkZGluZzogNHB4Oyc+CiAgCQkJPHRhYmxlIHdpZHRoPVwiMTAwJVwiICAgPgogIAkJCQkkdlVSVVNBTgogIAkJCQk8dHIgdmFsaWduPVwidG9wXCI+IDx0ZCB3aWR0aD0nJGtvbDFfd2lkdGgnPkJJREFORzwvdGQ+IDx0ZCB3aWR0aD0nMTAnPjo8L3RkPiA8dGQ+JExpc3RTS1BEPC90ZD4gPC90cj4KICAJCQkJPHRyIHZhbGlnbj1cInRvcFwiPiA8dGQ+U0tQRDwvdGQ+IDx0ZD46PC90ZD4gPHRkPiRMaXN0VU5JVDwvdGQ+IDwvdHI+CgogIAkJCTwvdGFibGU+CiAgCQk8L2Rpdj4KICAJIjsKICAgICAgcmV0dXJuICRIc2w7CiAgfQogIGZ1bmN0aW9uIGdlbkZpbHRlclN1YlVuaXQoJHByZWZpeD0nJywkcHJlZml4Q2hhbmdlZCwgJHRibHdpZHRoPScxMDAlJywgJGtvbDFfd2lkdGg9MTAwLCRtb2RlPScnKSB7CiAgICBnbG9iYWwgJE1haW4sICRmaWx0ZXJVcnVzYW4sICRmbVdJTCwgJGZpbHRlckJpZGFuZywgJGZpbHRlclNLUEQsICRmaWx0ZXJVbml0LCRmaWx0ZXJTdWJVbml0LCAkZm1UQUhVTkFOR0dBUkFOLCAkZm1LRVBFTUlMSUtBTiwgJE1haW4sICRfQ09PS0lFLCAkUGcsICRTUGc7CiAgICAkZGlzYWJsZVVydXNhbiA9ICAkRGlzQWJsZWQ7CiAgICAkZGlzYWJsZUJpZGFuZyA9ICREaXNBYmxlZDsKICAgICRkaXNhYmxlU0tQRCA9ICREaXNBYmxlZDsKICAgICRkaXNhYmxlVW5pdCA9ICREaXNBYmxlZDsKICAgICRkaXNhYmxlU3ViVW5pdCA9ICREaXNBYmxlZDsKICAJJGtkU3ViVW5pdDAgPSBnZW5OdW1iZXIoMCwgJE1haW4tPlNVQlVOSVRfRElHSVQgKTsKICAgICRLb25kaXNpVVJVU0FOID0gIiI7CiAgCSRLb25kaXNpQmlkYW5nID0gIiI7CiAgICAkS29uZGlzaVNLUEQgPSAiIjsKICAgICRLb25kaXNpVW5pdCA9ICIiOwogICAgJEtvbmRpc2lTdWJVbml0ID0gIiI7CgogICAgJFBpbGloVVJVU0FOID0gIjxvcHRpb24gdmFsdWU9JzAwJz4tLS0gU2VtdWEgVVJVU0FOIC0tLTwvb3B0aW9uPiI7CiAgICAkUGlsaWhTS1BEID0gIjxvcHRpb24gdmFsdWU9JzAwJz4tLS0gU2VtdWEgQklEQU5HIC0tLTwvb3B0aW9uPiI7CiAgICAkUGlsaWhVTklUID0gIjxvcHRpb24gdmFsdWU9JzAwJz4tLS0gU2VtdWEgU0tQRCAtLS08L29wdGlvbj4iOwogICAgJFBpbGloU1VCVU5JVCA9ICI8b3B0aW9uIHZhbHVlPScwMCc+LS0tIFNlbXVhIFVOSVQgLS0tPC9vcHRpb24+IjsKICAgICRQaWxpaFNFS1NJID0gIjxvcHRpb24gdmFsdWU9JyRrZFN1YlVuaXQwJz4tLS0gU2VtdWEgU1VCIFVOSVQgLS0tPC9vcHRpb24+IjsKCgogICAgaWYoaXNzZXQoJF9SRVFVRVNUWydmaWx0ZXJVcnVzYW4nXSkgJiYgJF9SRVFVRVNUWydmaWx0ZXJVcnVzYW4nXSAhPSAnMDAnICYmICRfQ09PS0lFWyJjb2ZtVVJVU0FOIl0gIT0gJF9SRVFVRVNUWydmaWx0ZXJVcnVzYW4nXSApewogICAgICAvLyAkX0NPT0tJRVsiY29mbVVSVVNBTiJdID0gJF9SRVFVRVNUWydmaWx0ZXJVcnVzYW4nXTsKICAgICAgJGZpbHRlclVydXNhbiA9ICRfUkVRVUVTVFsnZmlsdGVyVXJ1c2FuJ107CiAgICB9ZWxzZXsKICAgICAgJGZpbHRlclVydXNhbiA9ICRfQ09PS0lFWyJjb2ZtVVJVU0FOIl07CiAgICB9CiAgICBpZihpc3NldCgkX1JFUVVFU1RbJ2ZpbHRlckJpZGFuZyddKSAmJiAkX1JFUVVFU1RbJ2ZpbHRlckJpZGFuZyddICE9ICcwMCcgJiYgJF9DT09LSUVbImNvZm1TS1BEIl0gIT0gJF9SRVFVRVNUWydmaWx0ZXJCaWRhbmcnXSApewogICAgICAvLyAkX0NPT0tJRVsiY29mbVNLUEQiXSA9ICRfUkVRVUVTVFsnZmlsdGVyQmlkYW5nJ107CiAgICAgICRmaWx0ZXJCaWRhbmcgPSAkX1JFUVVFU1RbJ2NvZm1TS1BEJ107CiAgICB9ZWxzZXsKICAgICAgJGZpbHRlckJpZGFuZyA9ICRfQ09PS0lFWyJjb2ZtU0tQRCJdOwogICAgfQogICAgaWYoaXNzZXQoJF9SRVFVRVNUWydmaWx0ZXJTS1BEJ10pICYmICRfUkVRVUVTVFsnZmlsdGVyU0tQRCddICE9ICcwMCcgJiYgJF9DT09LSUVbImNvZm1VTklUIl0gIT0gJF9SRVFVRVNUWydmaWx0ZXJTS1BEJ10gKXsKICAgICAgLy8gJF9DT09LSUVbImNvZm1VTklUIl0gPSAkX1JFUVVFU1RbJ2ZpbHRlclNLUEQnXTsKICAgICAgJGZpbHRlclNLUEQgPSAkX1JFUVVFU1RbJ2ZpbHRlclNLUEQnXTsKICAgIH1lbHNlewogICAgICAkZmlsdGVyU0tQRCA9ICRfQ09PS0lFWyJjb2ZtVU5JVCJdOwoKICAgIH0KICAgIGlmKGlzc2V0KCRfUkVRVUVTVFsnZmlsdGVyVW5pdCddKSAmJiAkX1JFUVVFU1RbJ2ZpbHRlclVuaXQnXSAhPSAnMDAnICYmICRfQ09PS0lFWyJjb2ZtU1VCVU5JVCJdICE9ICRfUkVRVUVTVFsnZmlsdGVyVW5pdCddICl7CiAgICAgIC8vICRfQ09PS0lFWyJjb2ZtU1VCVU5JVCJdID0gJF9SRVFVRVNUWydmaWx0ZXJVbml0J107CiAgICAgICRmaWx0ZXJVbml0ID0gJF9SRVFVRVNUWydmaWx0ZXJVbml0J107CiAgICB9ZWxzZXsKICAgICAgJGZpbHRlclVuaXQgPSAkX0NPT0tJRVsiY29mbVNVQlVOSVQiXTsKICAgIH0KICAgIGlmKGlzc2V0KCRfUkVRVUVTVFsnZmlsdGVyU3ViVW5pdCddKSAmJiAkX1JFUVVFU1RbJ2ZpbHRlclN1YlVuaXQnXSAhPSAnMDAwJyAmJiAkX0NPT0tJRVsiY29mbVNFS1NJIl0gIT0gJF9SRVFVRVNUWydmaWx0ZXJTdWJVbml0J10gKXsKICAgICAgLy8gJF9DT09LSUVbImNvZm1TRUtTSSJdID0gJF9SRVFVRVNUWydmaWx0ZXJTdWJVbml0J107CiAgICAgICRmaWx0ZXJTdWJVbml0ID0gJF9SRVFVRVNUWydmaWx0ZXJTdWJVbml0J107CiAgICB9ZWxzZXsKICAgICAgJGZpbHRlclN1YlVuaXQgPSAkX0NPT0tJRVsiY29mbVNFS1NJIl07CiAgICB9CgoKICAJaWYgKCRfQ09PS0lFWyJjb1VSVVNBTiJdICE9PSAiMCIpIHsKICAgICAgICAgICRmaWx0ZXJVcnVzYW4gPSAkX0NPT0tJRVsiY29VUlVTQU4iXTsKICAgICAgICAgIC8vICRfQ09PS0lFWyJjb2ZtVVJVU0FOIl0gPSAkZmlsdGVyVXJ1c2FuOwogICAgICAgICAgJEtvbmRpc2lVUlVTQU4gPSAiIGFuZCBjMT0nJGZpbHRlclVydXNhbiciOwogICAgICAgICAgJFBpbGloVVJVU0FOID0gIiI7CiAgICAgIH0KICAJZWxzZXsKICAJCWlmIChpc3NldCgkX0NPT0tJRVsnY29mbVVSVVNBTiddKSkgewogIAkgICAgICAgJGZpbHRlclVydXNhbiA9ICRfQ09PS0lFWydjb2ZtVVJVU0FOJ107CiAgCSAgICB9CiAgCQlpZighKCRmaWx0ZXJVcnVzYW4gPT0gJzAwJyB8fCAkZmlsdGVyVXJ1c2FuPT0nJykpewogIAkJfQogIAl9CiAgCWlmICgkX0NPT0tJRVsiY29TS1BEIl0gIT09ICIwMCIpIHsKICAgICAgICAgICRmaWx0ZXJCaWRhbmcgPSAkX0NPT0tJRVsiY29TS1BEIl07CiAgICAgICAgICAkX0NPT0tJRVsiY29mbVNLUEQiXSA9ICRmaWx0ZXJCaWRhbmc7CiAgICAgICAgICAkS29uZGlzaUJpZGFuZyA9ICIgYW5kIGM9JyRmaWx0ZXJCaWRhbmcnIjsKICAgICAgICAgICRQaWxpaFNLUEQgPSAiIjsKICAgICAgfQogIAllbHNlewogIAkJaWYgKGlzc2V0KCRfQ09PS0lFWydjb2ZtU0tQRCddKSkgewogIAkgICAgICAgJGZpbHRlckJpZGFuZyA9ICRfQ09PS0lFWydjb2ZtU0tQRCddOwogIAkgICAgfQogIAkJaWYoISgkZmlsdGVyQmlkYW5nID09ICcwMCcgfHwgJGZpbHRlckJpZGFuZz09JycpKXsKICAJCX0KICAJfQogIAlpZiAoJF9DT09LSUVbImNvVU5JVCJdICE9PSAiMDAiKSB7CiAgICAgICAgICAkZmlsdGVyU0tQRCA9ICRfQ09PS0lFWyJjb1VOSVQiXTsKICAgICAgICAgICRfQ09PS0lFWyJjb2ZtVU5JVCJdID0gJGZpbHRlclNLUEQ7CiAgICAgICAgICAkS29uZGlzaVNLUEQgPSAiIGFuZCBkPSckZmlsdGVyU0tQRCciOwogICAgICAgICAgJFBpbGloVU5JVCA9ICIiOwogICAgICB9CiAgCWVsc2V7CiAgCQlpZiAoaXNzZXQoJF9DT09LSUVbJ2NvZm1VTklUJ10pKSB7CiAgCSAgICAgICAkZmlsdGVyU0tQRCA9ICRfQ09PS0lFWydjb2ZtVU5JVCddOwogIAkgICAgfQogIAkJaWYoISgkZmlsdGVyU0tQRCA9PSAnMDAnIHx8ICRmaWx0ZXJTS1BEPT0nJykpewogIAkJfQogIAl9CiAgCWlmICgkX0NPT0tJRVsiY29TVUJVTklUIl0gIT09ICIwMCIpIHsKICAgICAgICAgICRmaWx0ZXJVbml0ID0gJF9DT09LSUVbImNvU1VCVU5JVCJdOwogICAgICAgICAgJF9DT09LSUVbImNvU1VCVU5JVCJdID0gJGZpbHRlclVuaXQ7CiAgICAgICAgICAkS29uZGlzaVVuaXQgPSAiIGFuZCBlPSckZmlsdGVyVW5pdCciOwogICAgICAgICAgJFBpbGloU1VCVU5JVCA9ICIiOwogICAgICB9CiAgCWVsc2V7CiAgCQlpZiAoaXNzZXQoJF9DT09LSUVbJ2NvU1VCVU5JVCddKSAmJiAkX0NPT0tJRVsiY29TVUJVTklUIl0gIT09ICIwMCIpIHsKICAJICAgICAgICRmaWx0ZXJVbml0ID0gJF9DT09LSUVbJ2NvU1VCVU5JVCddOwogIAkgICAgfQogIAkJaWYoISgkZmlsdGVyVW5pdCA9PSAnMDAnIHx8ICRmaWx0ZXJVbml0PT0nJykpewogIAkJfQogIAl9CgogIAlpZiAoKCRfQ09PS0lFWyJjb1NFS1NJIl0gIT09ICIwMCIpICYmICgkX0NPT0tJRVsiY29TRUtTSSJdICE9PSAiMDAwIikpIHsKICAgICAgICAgICRmaWx0ZXJTdWJVbml0ID0gJF9DT09LSUVbImNvU0VLU0kiXTsKICAgICAgICAgICRfQ09PS0lFWyJjb2ZtU0VLU0kiXSA9ICRmaWx0ZXJTdWJVbml0OwogICAgICAgICAgJEtvbmRpc2lTdWJVbml0ID0gIiBhbmQgZTE9JyRmaWx0ZXJTdWJVbml0JyI7CiAgICAgICAgICAkUGlsaWhTRUtTSSA9ICIiOwogICAgICB9CiAgCWVsc2V7CiAgCQlpZiAoaXNzZXQoJF9DT09LSUVbJ2NvZm1TRUtTSSddKSkgewogIAkgICAgICAgJGZpbHRlclN1YlVuaXQgPSAkX0NPT0tJRVsnY29mbVNFS1NJJ107CiAgCSAgICB9CiAgCQlpZighKCRmaWx0ZXJTdWJVbml0ID09ICcwMCcgfHwgJGZpbHRlclN1YlVuaXQ9PScnIHx8ICRmaWx0ZXJTdWJVbml0PT0nMDAwJykpewogIAkJfQogIAl9CgoKCiAgCS8vdXJ1c2FuIC0tLS0tLS0tLS0tLS0tLS0tLS0KICAJaWYoJE1haW4tPlVSVVNBTj09MSl7CiAgCSAgICAkYXFyeSA9ICJzZWxlY3QgKiBmcm9tIHJlZl9za3BkIHdoZXJlIDE9MSAkS29uZGlzaVVSVVNBTiBhbmQgYzE8PicwJyBhbmQgYz0nMDAnIG9yZGVyIGJ5IGMxIjsKICAJICAgICRRcnkgPSBteXNxbF9xdWVyeSgkYXFyeSk7CiAgCSAgICAkT3BzID0gIiI7CiAgCSAgICB3aGlsZSAoJGlzaSA9IG15c3FsX2ZldGNoX2FycmF5KCRRcnkpKSB7CiAgCSAgICAgICAgJHNlbCA9ICRmaWx0ZXJVcnVzYW4gPT0gJGlzaVsnYzEnXSA\/ICJzZWxlY3RlZCIgOiAiIjsKICAJICAgICAgICAkT3BzIC49ICI8b3B0aW9uICRzZWwgdmFsdWU9J3skaXNpWydjMSddfSc+eyRpc2lbJ2MxJ119LiB7JGlzaVsnbm1fc2twZCddfSA8L29wdGlvbj5cbiI7CiAgCQkJaWYgKCRmaWx0ZXJVcnVzYW4gPT0gJGlzaVsnYzEnXSkgJG5tVVJVU0FOPSRpc2lbJ25tX3NrcGQnXTsKICAJICAgIH0KICAJCSRMaXN0VVJVU0FOID0KICAJCQkvLyRjZWtza3BkIC4gJ3ByZWY9Jy4kcHJlZml4LgogIAkJCSI8ZGl2IGlkPSciLiRwcmVmaXguIkNieFVydXNhbic+CiAgCQkJCTxzZWxlY3QgJGRpc2FibGVVcnVzYW4gbmFtZT0nZmlsdGVyVXJ1c2FuJyBpZD0nZmlsdGVyVXJ1c2FuJwogIAkJCQkJb25DaGFuZ2U9XCIiLiRwcmVmaXhDaGFuZ2VkLiIucGlsaWhVcnVzYW4oKVwiCiAgCQkJCT4gJFBpbGloVVJVU0FOICRPcHM8L3NlbGVjdD48ZGl2IHN0eWxlPSdkaXNwbGF5Om5vbmUnPiRhcXJ5PC9kaXY+PC9kaXY+IjsKCiAgICAgfQoKICAgICAJLy9za3BkIC0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICAgLy8kYXFyeSA9ICJzZWxlY3QgKiBmcm9tIHJlZl9za3BkIHdoZXJlIGQ9JzAwJyAgb3JkZXIgYnkgYyI7CiAgCWlmKCRNYWluLT5VUlVTQU49PTEpewogIAkJJGFxcnkgPSAic2VsZWN0ICogZnJvbSByZWZfc2twZCB3aGVyZSAgIGMxPSckZmlsdGVyVXJ1c2FuJyAgYW5kIGM8PicwMCcgYW5kIGQ9JzAwJyBvcmRlciBieSBjIjsKICAJfWVsc2V7CiAgCQkkYXFyeSA9ICJzZWxlY3QgKiBmcm9tIHJlZl9za3BkIHdoZXJlIDE9MSAkS29uZGlzaUJpZGFuZyBhbmQgYzw+JzAwJyBhbmQgZD0nMDAnIG9yZGVyIGJ5IGMiOwogIAl9CiAgICAgICRRcnkgPSBteXNxbF9xdWVyeSgkYXFyeSk7CiAgICAgICRPcHMgPSAiIjsKICAgICAgd2hpbGUgKCRpc2kgPSBteXNxbF9mZXRjaF9hcnJheSgkUXJ5KSkgewogICAgICAgICAgJHNlbCA9ICRmaWx0ZXJCaWRhbmcgPT0gJGlzaVsnYyddID8gInNlbGVjdGVkIiA6ICIiOwogICAgICAgICAgJE9wcyAuPSAiPG9wdGlvbiAkc2VsIHZhbHVlPSd7JGlzaVsnYyddfSc+eyRpc2lbJ2MnXX0uIHskaXNpWydubV9za3BkJ119PC9vcHRpb24+XG4iOwogIAkJaWYgKCRmaWx0ZXJCaWRhbmcgPT0gJGlzaVsnYyddKSAkbm1za3BkPSRpc2lbJ25tX3NrcGQnXTsKICAgICAgfQogIAkkTGlzdFNLUEQgPQogIAkJLy8kY2Vrc2twZCAuICdwcmVmPScuJHByZWZpeC4KICAJCSI8ZGl2IGlkPSciLiRwcmVmaXguIkNieEJpZGFuZyc+CiAgCQkJPHNlbGVjdCAkZGlzYWJsZUJpZGFuZyBuYW1lPSdmaWx0ZXJCaWRhbmcnIGlkPSdmaWx0ZXJCaWRhbmcnCiAgCQkJCW9uQ2hhbmdlPVwiIi4kcHJlZml4Q2hhbmdlZC4iLnBpbGloQmlkYW5nKClcIgogIAkJCT4gJFBpbGloU0tQRCAkT3BzPC9zZWxlY3Q+PGRpdiBzdHlsZT0nZGlzcGxheTpub25lJz4kYXFyeTwvZGl2PjwvZGl2PiI7CgogIAkvL3VuaXQgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgCWlmKCRNYWluLT5VUlVTQU4pewogIAkJJGFxcnkgPSJzZWxlY3QgKiBmcm9tIHJlZl9za3BkIHdoZXJlIGMxPSckZmlsdGVyVXJ1c2FuJyBhbmQgIGM9JyRmaWx0ZXJCaWRhbmcnIGFuZCBkIDw+ICcwMCcgYW5kIGUgPSAnMDAnICRLb25kaXNpU0tQRCBvcmRlciBieSBkIjsKICAJfWVsc2V7CiAgCQkkYXFyeSA9InNlbGVjdCAqIGZyb20gcmVmX3NrcGQgd2hlcmUgYz0nJGZpbHRlckJpZGFuZycgYW5kIGQgPD4gJzAwJyBhbmQgZSA9ICcwMCcgJEtvbmRpc2lTS1BEIG9yZGVyIGJ5IGQiOwogIAl9CiAgCSRRcnkgPSBteXNxbF9xdWVyeSgkYXFyeSk7CiAgICAgICRPcHMgPSAiIjsKICAgICAgd2hpbGUgKCRpc2kgPSBteXNxbF9mZXRjaF9hcnJheSgkUXJ5KSkgewogICAgICAgICAgJHNlbCA9ICRmaWx0ZXJTS1BEID09ICRpc2lbJ2QnXSA\/ICJzZWxlY3RlZCIgOiAiIjsKICAgICAgICAgICRPcHMgLj0gIjxvcHRpb24gJHNlbCB2YWx1ZT0neyRpc2lbJ2QnXX0nPnskaXNpWydkJ119LiB7JGlzaVsnbm1fc2twZCddfTwvb3B0aW9uPlxuIjsKICAJCWlmICgkZmlsdGVyU0tQRCA9PSAkaXNpWydkJ10pICRubXVuaXQ9JGlzaVsnbm1fc2twZCddOwoKICAgICAgfQogICAgICAkTGlzdFVOSVQgPQogIAkJIjxkaXYgaWQ9JyIuJHByZWZpeC4iQ2J4VW5pdCc+CiAgCQkJPHNlbGVjdCAkZGlzYWJsZVNLUEQgbmFtZT0nZmlsdGVyU0tQRCcgaWQ9J2ZpbHRlclNLUEQnCiAgCQkJCW9uQ2hhbmdlPVwiIi4kcHJlZml4Q2hhbmdlZC4iLnBpbGloVW5pdCgpXCI+CiAgCQkJCSRQaWxpaFVOSVQgJE9wcwogIAkJCTwvc2VsZWN0PjxkaXYgc3R5bGU9J2Rpc3BsYXk6bm9uZSc+JGFxcnk8L2Rpdj48L2Rpdj4iOwoKICAJLy9zdWIgdW5pdCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgCSRrZFN1YlVuaXQwID0gZ2VuTnVtYmVyKDAsICRNYWluLT5TVUJVTklUX0RJR0lUICk7CiAgCWlmKCRNYWluLT5VUlVTQU4pewogIAkJJGFxcnkgPSAic2VsZWN0ICogZnJvbSByZWZfc2twZCB3aGVyZSBjMT0nJGZpbHRlclVydXNhbicgYW5kICBjPSckZmlsdGVyQmlkYW5nJyBhbmQgZCA9ICckZmlsdGVyU0tQRCcgYW5kIGUgPD4gJzAwJyBhbmQgZTE9JyRrZFN1YlVuaXQwJyAkS29uZGlzaVVuaXQgb3JkZXIgYnkgZSI7CiAgCX1lbHNlewogIAkJJGFxcnkgPSAic2VsZWN0ICogZnJvbSByZWZfc2twZCB3aGVyZSBjPSckZmlsdGVyQmlkYW5nJyBhbmQgZCA9ICckZmlsdGVyU0tQRCcgYW5kIGUgPD4gJzAwJyBhbmQgZTE9JyRrZFN1YlVuaXQwJyAkS29uZGlzaVVuaXQgb3JkZXIgYnkgZSI7CiAgCX0KICAJJFFyeSA9IG15c3FsX3F1ZXJ5KCRhcXJ5KTsKICAgICAgJE9wcyA9ICIiOwogICAgICAvLyBpZihlbXB0eSgkZmlsdGVyVW5pdCkpJGZpbHRlclVuaXQgPSAkX1JFUVVFU1RbJ2ZpbHRlclVuaXQnXTsKICAgICAgLy8gJGZpbHRlclVuaXQgPSAkX1JFUVVFU1RbJ3JlbmNhbmFLZXJqYWZpbHRlclVuaXQnXTsKICAgICAgd2hpbGUgKCRpc2kgPSBteXNxbF9mZXRjaF9hcnJheSgkUXJ5KSkgewogICAgICAgICAgJHNlbCA9ICRmaWx0ZXJVbml0ID09ICRpc2lbJ2UnXSA\\\/Pgo=",
    "size": "34721"
}