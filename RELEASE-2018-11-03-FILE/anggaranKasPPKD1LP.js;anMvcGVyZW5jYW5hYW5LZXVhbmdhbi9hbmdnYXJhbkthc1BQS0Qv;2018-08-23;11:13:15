{
    "namaFile": "js\/perencanaanKeuangan\/anggaranKasPPKD\/anggaranKasPPKD1LP.js",
    "lastUpdate": "2018-08-23+11:13:15.69",
    "contentFile": "dmFyIGFuZ2dhcmFuS2FzUFBLRDFMUEZpbHRlclNLUEQgPSBuZXcgU2twZENscyh7CiAgcHJlZml4OiAiYW5nZ2FyYW5LYXNQUEtEMUxQIiwKICBmb3JtTmFtZTogImFuZ2dhcmFuS2FzUFBLRDFMUEZvcm0iLAoKICBwaWxpaFVydXNhbmZ0ZXI6IGZ1bmN0aW9uKCkgewogICAgYW5nZ2FyYW5LYXNQUEtEMUxQLnJlZnJlc2hMaXN0KHRydWUpOwogIH0sCiAgcGlsaWhCaWRhbmdBZnRlcjogZnVuY3Rpb24oKSB7CiAgICBhbmdnYXJhbkthc1BQS0QxTFAucmVmcmVzaExpc3QodHJ1ZSk7CiAgfSwKICBwaWxpaFVuaXRBZnRlcjogZnVuY3Rpb24oKSB7CiAgICBhbmdnYXJhbkthc1BQS0QxTFAucmVmcmVzaExpc3QodHJ1ZSk7CiAgfSwKICBwaWxpaFN1YlVuaXRBZnRlcjogZnVuY3Rpb24oKSB7CiAgICBhbmdnYXJhbkthc1BQS0QxTFAucmVmcmVzaExpc3QodHJ1ZSk7CiAgfSwKICBwaWxpaFNla3NpQWZ0ZXI6IGZ1bmN0aW9uKCkgewogICAgYW5nZ2FyYW5LYXNQUEtEMUxQLnJlZnJlc2hMaXN0KHRydWUpOwogIH0KfSk7CnZhciBhbmdnYXJhbkthc1BQS0QxTFAgPSBuZXcgRGFmdGFyT2JqMih7CiAgcHJlZml4OiAiYW5nZ2FyYW5LYXNQUEtEMUxQIiwKICB1cmw6ICJwZ0tldS5waHA\/UGc9YW5nZ2FyYW5LYXNQUEtEMUxQIiwKICBmb3JtTmFtZTogImFuZ2dhcmFuS2FzUFBLRDFMUEZvcm0iLAogIGFuZ2dhcmFuS2FzUFBLRDFMUF9mb3JtOiAiMCIsIC8vZGVmYXVsdCBqcyBhbmdnYXJhbkthc1BQS0QxTFAKICBsb2FkaW5nOiBmdW5jdGlvbigpIHsKICAgIC8vYWxlcnQoJ2xvYWRpbmcnKTsKICAgIHRoaXMudG9wQmFyUmVuZGVyKCk7CiAgICB0aGlzLmZpbHRlclJlbmRlcigpOwogICAgdGhpcy5kYWZ0YXJSZW5kZXIoKTsKICAgIHRoaXMuc3VtSGFsUmVuZGVyKCk7CiAgfSwKICB0b3BCYXJSZW5kZXI6IGZ1bmN0aW9uKCkgewogICAgdmFyIG1lID0gdGhpczsKICAgIC8vcmVuZGVyIHN1YnRpdGxlCiAgICAkLmFqYXgoewogICAgICB1cmw6IHRoaXMudXJsICsgIiZ0aXBlPXN1YnRpdGxlIiwKICAgICAgdHlwZTogIlBPU1QiLAogICAgICBkYXRhOiAkKCIjIiArIHRoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLAogICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgdmFyIHJlc3AgPSBldmFsKCIoIiArIGRhdGEgKyAiKSIpOwogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG1lLnByZWZpeCArICJfY29udF90aXRsZSIpLmlubmVySFRNTCA9CiAgICAgICAgICByZXNwLmNvbnRlbnQ7CiAgICAgICAgbWUudG9wQmFyUmVuZGVyQWZ0ZXIoKTsKICAgICAgfQogICAgfSk7CiAgfSwKICBmaWx0ZXJDaGVja0FsbDogZnVuY3Rpb24oKSB7CiAgICB2YXIgaXNDaGVja2VkID0gJCgiI2ZpbHRlclNlbXVhIikuYXR0cigiY2hlY2tlZCIpOwogICAgaWYgKGlzQ2hlY2tlZCA9PSAiY2hlY2tlZCIpIHsKICAgICAgJCgiI2ZpbHRlckphbnVhcmkiKS5yZW1vdmVBdHRyKCJjaGVja2VkIik7CiAgICAgICQoIiNmaWx0ZXJGZWJydWFyaSIpLnJlbW92ZUF0dHIoImNoZWNrZWQiKTsKICAgICAgJCgiI2ZpbHRlck1hcmV0IikucmVtb3ZlQXR0cigiY2hlY2tlZCIpOwogICAgICAkKCIjZmlsdGVyQXByaWwiKS5yZW1vdmVBdHRyKCJjaGVja2VkIik7CiAgICAgICQoIiNmaWx0ZXJNZWkiKS5yZW1vdmVBdHRyKCJjaGVja2VkIik7CiAgICAgICQoIiNmaWx0ZXJKdW5pIikucmVtb3ZlQXR0cigiY2hlY2tlZCIpOwogICAgICAkKCIjZmlsdGVySnVsaSIpLnJlbW92ZUF0dHIoImNoZWNrZWQiKTsKICAgICAgJCgiI2ZpbHRlckFndXN0dXMiKS5yZW1vdmVBdHRyKCJjaGVja2VkIik7CiAgICAgICQoIiNmaWx0ZXJTZXB0ZW1iZXIiKS5yZW1vdmVBdHRyKCJjaGVja2VkIik7CiAgICAgICQoIiNmaWx0ZXJPa3RvYmVyIikucmVtb3ZlQXR0cigiY2hlY2tlZCIpOwogICAgICAkKCIjZmlsdGVyTm9wZW1iZXIiKS5yZW1vdmVBdHRyKCJjaGVja2VkIik7CiAgICAgICQoIiNmaWx0ZXJEZXNlbWJlciIpLnJlbW92ZUF0dHIoImNoZWNrZWQiKTsKICAgIH0gZWxzZSB7CiAgICAgICQoIiNmaWx0ZXJKYW51YXJpIikuYXR0cigiY2hlY2tlZCIsIHRydWUpOwogICAgICAkKCIjZmlsdGVyRmVicnVhcmkiKS5hdHRyKCJjaGVja2VkIiwgdHJ1ZSk7CiAgICAgICQoIiNmaWx0ZXJNYXJldCIpLmF0dHIoImNoZWNrZWQiLCB0cnVlKTsKICAgICAgJCgiI2ZpbHRlckFwcmlsIikuYXR0cigiY2hlY2tlZCIsIHRydWUpOwogICAgICAkKCIjZmlsdGVyTWVpIikuYXR0cigiY2hlY2tlZCIsIHRydWUpOwogICAgICAkKCIjZmlsdGVySnVuaSIpLmF0dHIoImNoZWNrZWQiLCB0cnVlKTsKICAgICAgJCgiI2ZpbHRlckp1bGkiKS5hdHRyKCJjaGVja2VkIiwgdHJ1ZSk7CiAgICAgICQoIiNmaWx0ZXJBZ3VzdHVzIikuYXR0cigiY2hlY2tlZCIsIHRydWUpOwogICAgICAkKCIjZmlsdGVyU2VwdGVtYmVyIikuYXR0cigiY2hlY2tlZCIsIHRydWUpOwogICAgICAkKCIjZmlsdGVyT2t0b2JlciIpLmF0dHIoImNoZWNrZWQiLCB0cnVlKTsKICAgICAgJCgiI2ZpbHRlck5vcGVtYmVyIikuYXR0cigiY2hlY2tlZCIsIHRydWUpOwogICAgICAkKCIjZmlsdGVyRGVzZW1iZXIiKS5hdHRyKCJjaGVja2VkIiwgdHJ1ZSk7CiAgICB9CiAgICB0aGlzLnJlZnJlc2hMaXN0KHRydWUpOwogIH0sCiAgZmlsdGVyUmVuZGVyQWZ0ZXI6IGZ1bmN0aW9uKCkgewogICAgdGhpcy5kYWZ0YXJSZW5kZXIoKTsKICB9LAogIGRldGFpbDogZnVuY3Rpb24oKSB7CiAgICB2YXIgbWUgPSB0aGlzOwogICAgZXJybXNnID0gdGhpcy5DZWtDaGVja2JveCgpOwogICAgaWYgKGVycm1zZyA9PSAiIikgewogICAgICB2YXIgYm94ID0gdGhpcy5HZXRDYnhDaGVja2VkKCk7CiAgICB9IGVsc2UgewogICAgICBhbGVydChlcnJtc2cpOwogICAgfQogIH0sCiAgZGFmdGFyUmVuZGVyOiBmdW5jdGlvbigpIHsKICAgIHZhciBtZSA9IHRoaXM7IC8vcmVuZGVyIGRhZnRhcgogICAgYWRkQ292ZXJQYWdlMigiZGFmdGFyX2NvdmVyIiwgMSwgdHJ1ZSwgdHJ1ZSwgewogICAgICByZW5kZXJUbzogdGhpcy5wcmVmaXggKyAiX2NvbnRfZGFmdGFyIiwKICAgICAgaW1nc3JjOiAiaW1hZ2VzL3dhaXQuZ2lmIiwKICAgICAgc3R5bGU6IHsgcG9zaXRpb246ICJhYnNvbHV0ZSIsIHRvcDogIjUiLCBsZWZ0OiAiNSIgfQogICAgfSk7CiAgICAkLmFqYXgoewogICAgICB1cmw6IHRoaXMudXJsICsgIiZ0aXBlPWRhZnRhciIsCiAgICAgIHR5cGU6ICJQT1NUIiwKICAgICAgZGF0YTogJCgiIyIgKyB0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwKICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewogICAgICAgIHZhciByZXNwID0gZXZhbCgiKCIgKyBkYXRhICsgIikiKTsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChtZS5wcmVmaXggKyAiX2NvbnRfZGFmdGFyIikuaW5uZXJIVE1MID0KICAgICAgICAgIHJlc3AuY29udGVudDsKICAgICAgICBtZS5zdW1IYWxSZW5kZXIoKTsKICAgICAgfQogICAgfSk7CiAgfSwKICBCYXJ1OiBmdW5jdGlvbigpIHsKICAgIHZhciBtZSA9IHRoaXM7CgogICAgZXJybXNnID0gIiI7CgogICAgaWYgKCQoIiNmaWx0ZXJVcnVzYW4iKS52YWwoKSA9PSAiMDAiKSB7CiAgICAgIGVycm1zZyA9ICJQaWxpaCBVcnVzYW4iOwogICAgfSBlbHNlIGlmICgkKCIjZmlsdGVyU0tQRCIpLnZhbCgpID09ICIwMCIpIHsKICAgICAgZXJybXNnID0gIlBpbGloIEJpZGFuZyI7CiAgICB9IGVsc2UgaWYgKCQoIiNmaWx0ZXJTS1BEIikudmFsKCkgPT0gIjAwIikgewogICAgICBlcnJtc2cgPSAiUGlsaWggU0tQRCI7CiAgICB9IGVsc2UgaWYgKCQoIiNmaWx0ZXJDb25jYXRQcm9ncmFtIikudmFsKCkgPT0gIiIpIHsKICAgICAgZXJybXNnID0gIlBpbGloIFByb2dyYW0iOwogICAgfSBlbHNlIGlmICgkKCIjZmlsdGVyUSIpLnZhbCgpID09ICIiKSB7CiAgICAgIGVycm1zZyA9ICJQaWxpaCBLZWdpYXRhbiI7CiAgICB9CiAgICBpZiAoZXJybXNnID09ICIiKSB7CiAgICAgIHZhciBtZSA9IHRoaXM7CiAgICAgIHZhciBhRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuZm9ybU5hbWUpOwogICAgICAkLmFqYXgoewogICAgICAgIHVybDogdGhpcy51cmwgKyAiJnRpcGU9QmFydSIsCiAgICAgICAgdHlwZTogIlBPU1QiLAogICAgICAgIGRhdGE6ICQoIiMiICsgdGhpcy5mb3JtTmFtZSkuc2VyaWFsaXplKCksCiAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewogICAgICAgICAgdmFyIHJlc3AgPSBldmFsKCIoIiArIGRhdGEgKyAiKSIpOwogICAgICAgICAgaWYgKHJlc3AuZXJyID09ICIiKSB7CiAgICAgICAgICAgIGFGb3JtLmFjdGlvbiA9ICJwZ0tldS5waHA\",
    "size": "15806"
}