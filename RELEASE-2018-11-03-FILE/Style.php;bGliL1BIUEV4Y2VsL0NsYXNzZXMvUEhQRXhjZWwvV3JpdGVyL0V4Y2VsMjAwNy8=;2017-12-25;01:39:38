{
    "namaFile": "lib\/PHPExcel\/Classes\/PHPExcel\/Writer\/Excel2007\/Style.php",
    "lastUpdate": "2017-12-25+01:39:38.00",
    "contentFile": "\/ICcxJyA6ICcwJyk7CiAgICAgICAgICAgICRvYmpXcml0ZXItPmVuZEVsZW1lbnQoKTsKICAgICAgICB9CgogICAgICAgIC8vIEl0YWxpYwogICAgICAgIGlmICgkcEZvbnQtPmdldEl0YWxpYygpICE9PSBudWxsKSB7CiAgICAgICAgICAgICRvYmpXcml0ZXItPnN0YXJ0RWxlbWVudCgnaScpOwogICAgICAgICAgICAkb2JqV3JpdGVyLT53cml0ZUF0dHJpYnV0ZSgndmFsJywgJHBGb250LT5nZXRJdGFsaWMoKSA\/ICcxJyA6ICcwJyk7CiAgICAgICAgICAgICRvYmpXcml0ZXItPmVuZEVsZW1lbnQoKTsKICAgICAgICB9CgogICAgICAgIC8vIFN0cmlrZXRocm91Z2gKICAgICAgICBpZiAoJHBGb250LT5nZXRTdHJpa2V0aHJvdWdoKCkgIT09IG51bGwpIHsKICAgICAgICAgICAgJG9ialdyaXRlci0+c3RhcnRFbGVtZW50KCdzdHJpa2UnKTsKICAgICAgICAgICAgJG9ialdyaXRlci0+d3JpdGVBdHRyaWJ1dGUoJ3ZhbCcsICRwRm9udC0+Z2V0U3RyaWtldGhyb3VnaCgpID8gJzEnIDogJzAnKTsKICAgICAgICAgICAgJG9ialdyaXRlci0+ZW5kRWxlbWVudCgpOwogICAgICAgIH0KCiAgICAgICAgLy8gVW5kZXJsaW5lCiAgICAgICAgaWYgKCRwRm9udC0+Z2V0VW5kZXJsaW5lKCkgIT09IG51bGwpIHsKICAgICAgICAgICAgJG9ialdyaXRlci0+c3RhcnRFbGVtZW50KCd1Jyk7CiAgICAgICAgICAgICRvYmpXcml0ZXItPndyaXRlQXR0cmlidXRlKCd2YWwnLCAkcEZvbnQtPmdldFVuZGVybGluZSgpKTsKICAgICAgICAgICAgJG9ialdyaXRlci0+ZW5kRWxlbWVudCgpOwogICAgICAgIH0KCiAgICAgICAgLy8gU3VwZXJzY3JpcHQgLyBzdWJzY3JpcHQKICAgICAgICBpZiAoJHBGb250LT5nZXRTdXBlclNjcmlwdCgpID09PSB0cnVlIHx8ICRwRm9udC0+Z2V0U3ViU2NyaXB0KCkgPT09IHRydWUpIHsKICAgICAgICAgICAgJG9ialdyaXRlci0+c3RhcnRFbGVtZW50KCd2ZXJ0QWxpZ24nKTsKICAgICAgICAgICAgaWYgKCRwRm9udC0+Z2V0U3VwZXJTY3JpcHQoKSA9PT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgJG9ialdyaXRlci0+d3JpdGVBdHRyaWJ1dGUoJ3ZhbCcsICdzdXBlcnNjcmlwdCcpOwogICAgICAgICAgICB9IGVsc2VpZiAoJHBGb250LT5nZXRTdWJTY3JpcHQoKSA9PT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgJG9ialdyaXRlci0+d3JpdGVBdHRyaWJ1dGUoJ3ZhbCcsICdzdWJzY3JpcHQnKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAkb2JqV3JpdGVyLT5lbmRFbGVtZW50KCk7CiAgICAgICAgfQoKICAgICAgICAvLyBTaXplCiAgICAgICAgaWYgKCRwRm9udC0+Z2V0U2l6ZSgpICE9PSBudWxsKSB7CiAgICAgICAgICAgICRvYmpXcml0ZXItPnN0YXJ0RWxlbWVudCgnc3onKTsKICAgICAgICAgICAgJG9ialdyaXRlci0+d3JpdGVBdHRyaWJ1dGUoJ3ZhbCcsICRwRm9udC0+Z2V0U2l6ZSgpKTsKICAgICAgICAgICAgJG9ialdyaXRlci0+ZW5kRWxlbWVudCgpOwogICAgICAgIH0KCiAgICAgICAgLy8gRm9yZWdyb3VuZCBjb2xvcgogICAgICAgIGlmICgkcEZvbnQtPmdldENvbG9yKCktPmdldEFSR0IoKSAhPT0gbnVsbCkgewogICAgICAgICAgICAkb2JqV3JpdGVyLT5zdGFydEVsZW1lbnQoJ2NvbG9yJyk7CiAgICAgICAgICAgICRvYmpXcml0ZXItPndyaXRlQXR0cmlidXRlKCdyZ2InLCAkcEZvbnQtPmdldENvbG9yKCktPmdldEFSR0IoKSk7CiAgICAgICAgICAgICRvYmpXcml0ZXItPmVuZEVsZW1lbnQoKTsKICAgICAgICB9CgogICAgICAgIC8vIE5hbWUKICAgICAgICBpZiAoJHBGb250LT5nZXROYW1lKCkgIT09IG51bGwpIHsKICAgICAgICAgICAgJG9ialdyaXRlci0+c3RhcnRFbGVtZW50KCduYW1lJyk7CiAgICAgICAgICAgICRvYmpXcml0ZXItPndyaXRlQXR0cmlidXRlKCd2YWwnLCAkcEZvbnQtPmdldE5hbWUoKSk7CiAgICAgICAgICAgICRvYmpXcml0ZXItPmVuZEVsZW1lbnQoKTsKICAgICAgICB9CgogICAgICAgICRvYmpXcml0ZXItPmVuZEVsZW1lbnQoKTsKICAgIH0KCiAgICAvKioKICAgICAqIFdyaXRlIEJvcmRlcgogICAgICoKICAgICAqIEBwYXJhbSAgICAgUEhQRXhjZWxfU2hhcmVkX1hNTFdyaXRlciAgICAgICAgICAgICRvYmpXcml0ZXIgICAgICAgICBYTUwgV3JpdGVyCiAgICAgKiBAcGFyYW0gICAgIFBIUEV4Y2VsX1N0eWxlX0JvcmRlcnMgICAgICAgICAgICAgICAgJHBCb3JkZXJzICAgICAgICBCb3JkZXJzIHN0eWxlCiAgICAgKiBAdGhyb3dzICAgICBQSFBFeGNlbF9Xcml0ZXJfRXhjZXB0aW9uCiAgICAgKi8KICAgIHByaXZhdGUgZnVuY3Rpb24gd3JpdGVCb3JkZXIoUEhQRXhjZWxfU2hhcmVkX1hNTFdyaXRlciAkb2JqV3JpdGVyID0gbnVsbCwgUEhQRXhjZWxfU3R5bGVfQm9yZGVycyAkcEJvcmRlcnMgPSBudWxsKQogICAgewogICAgICAgIC8vIFdyaXRlIGJvcmRlcgogICAgICAgICRvYmpXcml0ZXItPnN0YXJ0RWxlbWVudCgnYm9yZGVyJyk7CiAgICAgICAgLy8gRGlhZ29uYWw\/CiAgICAgICAgc3dpdGNoICgkcEJvcmRlcnMtPmdldERpYWdvbmFsRGlyZWN0aW9uKCkpIHsKICAgICAgICAgICAgY2FzZSBQSFBFeGNlbF9TdHlsZV9Cb3JkZXJzOjpESUFHT05BTF9VUDoKICAgICAgICAgICAgICAgICRvYmpXcml0ZXItPndyaXRlQXR0cmlidXRlKCdkaWFnb25hbFVwJywgJ3RydWUnKTsKICAgICAgICAgICAgICAgICRvYmpXcml0ZXItPndyaXRlQXR0cmlidXRlKCdkaWFnb25hbERvd24nLCAnZmFsc2UnKTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIFBIUEV4Y2VsX1N0eWxlX0JvcmRlcnM6OkRJQUdPTkFMX0RPV046CiAgICAgICAgICAgICAgICAkb2JqV3JpdGVyLT53cml0ZUF0dHJpYnV0ZSgnZGlhZ29uYWxVcCcsICdmYWxzZScpOwogICAgICAgICAgICAgICAgJG9ialdyaXRlci0+d3JpdGVBdHRyaWJ1dGUoJ2RpYWdvbmFsRG93bicsICd0cnVlJyk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSBQSFBFeGNlbF9TdHlsZV9Cb3JkZXJzOjpESUFHT05BTF9CT1RIOgogICAgICAgICAgICAgICAgJG9ialdyaXRlci0+d3JpdGVBdHRyaWJ1dGUoJ2RpYWdvbmFsVXAnLCAndHJ1ZScpOwogICAgICAgICAgICAgICAgJG9ialdyaXRlci0+d3JpdGVBdHRyaWJ1dGUoJ2RpYWdvbmFsRG93bicsICd0cnVlJyk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICB9CgogICAgICAgIC8vIEJvcmRlclByCiAgICAgICAgJHRoaXMtPndyaXRlQm9yZGVyUHIoJG9ialdyaXRlciwgJ2xlZnQnLCAkcEJvcmRlcnMtPmdldExlZnQoKSk7CiAgICAgICAgJHRoaXMtPndyaXRlQm9yZGVyUHIoJG9ialdyaXRlciwgJ3JpZ2h0JywgJHBCb3JkZXJzLT5nZXRSaWdodCgpKTsKICAgICAgICAkdGhpcy0+d3JpdGVCb3JkZXJQcigkb2JqV3JpdGVyLCAndG9wJywgJHBCb3JkZXJzLT5nZXRUb3AoKSk7CiAgICAgICAgJHRoaXMtPndyaXRlQm9yZGVyUHIoJG9ialdyaXRlciwgJ2JvdHRvbScsICRwQm9yZGVycy0+Z2V0Qm90dG9tKCkpOwogICAgICAgICR0aGlzLT53cml0ZUJvcmRlclByKCRvYmpXcml0ZXIsICdkaWFnb25hbCcsICRwQm9yZGVycy0+Z2V0RGlhZ29uYWwoKSk7CiAgICAgICAgJG9ialdyaXRlci0+ZW5kRWxlbWVudCgpOwogICAgfQoKICAgIC8qKgogICAgICogV3JpdGUgQ2VsbCBTdHlsZSBYZgogICAgICoKICAgICAqIEBwYXJhbSAgICAgUEhQRXhjZWxfU2hhcmVkX1hNTFdyaXRlciAgICAgICAgICAgICRvYmpXcml0ZXIgICAgICAgICBYTUwgV3JpdGVyCiAgICAgKiBAcGFyYW0gICAgIFBIUEV4Y2VsX1N0eWxlICAgICAgICAgICAgICAgICAgICAgICAgJHBTdHlsZSAgICAgICAgICAgIFN0eWxlCiAgICAgKiBAcGFyYW0gICAgIFBIUEV4Y2VsICAgICAgICAgICAgICAgICAgICAgICAgICAgICRwUEhQRXhjZWwgICAgICAgIFdvcmtib29rCiAgICAgKiBAdGhyb3dzICAgICBQSFBFeGNlbF9Xcml0ZXJfRXhjZXB0aW9uCiAgICAgKi8KICAgIHByaXZhdGUgZnVuY3Rpb24gd3JpdGVDZWxsU3R5bGVYZihQSFBFeGNlbF9TaGFyZWRfWE1MV3JpdGVyICRvYmpXcml0ZXIgPSBudWxsLCBQSFBFeGNlbF9TdHlsZSAkcFN0eWxlID0gbnVsbCwgUEhQRXhjZWwgJHBQSFBFeGNlbCA9IG51bGwpCiAgICB7CiAgICAgICAgLy8geGYKICAgICAgICAkb2JqV3JpdGVyLT5zdGFydEVsZW1lbnQoJ3hmJyk7CiAgICAgICAgJG9ialdyaXRlci0+d3JpdGVBdHRyaWJ1dGUoJ3hmSWQnLCAwKTsKICAgICAgICAkb2JqV3JpdGVyLT53cml0ZUF0dHJpYnV0ZSgnZm9udElkJywgKGludCkkdGhpcy0+Z2V0UGFyZW50V3JpdGVyKCktPmdldEZvbnRIYXNoVGFibGUoKS0+Z2V0SW5kZXhGb3JIYXNoQ29kZSgkcFN0eWxlLT5nZXRGb250KCktPmdldEhhc2hDb2RlKCkpKTsKICAgICAgICBpZiAoJHBTdHlsZS0+Z2V0UXVvdGVQcmVmaXgoKSkgewogICAgICAgICAgICAkb2JqV3JpdGVyLT53cml0ZUF0dHJpYnV0ZSgncXVvdGVQcmVmaXgnLCAxKTsKICAgICAgICB9CgogICAgICAgIGlmICgkcFN0eWxlLT5nZXROdW1iZXJGb3JtYXQoKS0+Z2V0QnVpbHRJbkZvcm1hdENvZGUoKSA9PT0gZmFsc2UpIHsKICAgICAgICAgICAgJG9ialdyaXRlci0+d3JpdGVBdHRyaWJ1dGUoJ251bUZtdElkJywgKGludCkoJHRoaXMtPmdldFBhcmVudFdyaXRlcigpLT5nZXROdW1GbXRIYXNoVGFibGUoKS0+Z2V0SW5kZXhGb3JIYXNoQ29kZSgkcFN0eWxlLT5nZXROdW1iZXJGb3JtYXQoKS0+Z2V0SGFzaENvZGUoKSkgKyAxNjQpKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAkb2JqV3JpdGVyLT53cml0ZUF0dHJpYnV0ZSgnbnVtRm10SWQnLCAoaW50KSRwU3R5bGUtPmdldE51bWJlckZvcm1hdCgpLT5nZXRCdWlsdEluRm9ybWF0Q29kZSgpKTsKICAgICAgICB9CgogICAgICAgICRvYmpXcml0ZXItPndyaXRlQXR0cmlidXRlKCdmaWxsSWQnLCAoaW50KSR0aGlzLT5nZXRQYXJlbnRXcml0ZXIoKS0+Z2V0RmlsbEhhc2hUYWJsZSgpLT5nZXRJbmRleEZvckhhc2hDb2RlKCRwU3R5bGUtPmdldEZpbGwoKS0+Z2V0SGFzaENvZGUoKSkpOwogICAgICAgICRvYmpXcml0ZXItPndyaXRlQXR0cmlidXRlKCdib3JkZXJJZCcsIChpbnQpJHRoaXMtPmdldFBhcmVudFdyaXRlcigpLT5nZXRCb3JkZXJzSGFzaFRhYmxlKCktPmdldEluZGV4Rm9ySGFzaENvZGUoJHBTdHlsZS0+Z2V0Qm9yZGVycygpLT5nZXRIYXNoQ29kZSgpKSk7CgogICAgICAgIC8vIEFwcGx5IHN0eWxlcz8KICAgICAgICAkb2JqV3JpdGVyLT53cml0ZUF0dHJpYnV0ZSgnYXBwbHlGb250JywgKCRwUEhQRXhjZWwtPmdldERlZmF1bHRTdHlsZSgpLT5nZXRGb250KCktPmdldEhhc2hDb2RlKCkgIT0gJHBTdHlsZS0+Z2V0Rm9udCgpLT5nZXRIYXNoQ29kZSgpKSA\/ICcxJyA6ICcwJyk7CiAgICAgICAgJG9ialdyaXRlci0+d3JpdGVBdHRyaWJ1dGUoJ2FwcGx5TnVtYmVyRm9ybWF0JywgKCRwUEhQRXhjZWwtPmdldERlZmF1bHRTdHlsZSgpLT5nZXROdW1iZXJGb3JtYXQoKS0+Z2V0SGFzaENvZGUoKSAhPSAkcFN0eWxlLT5nZXROdW1iZXJGb3JtYXQoKS0+Z2V0SGFzaENvZGUoKSkgPyAnMScgOiAnMCcpOwogICAgICAgICRvYmpXcml0ZXItPndyaXRlQXR0cmlidXRlKCdhcHBseUZpbGwnLCAoJHBQSFBFeGNlbC0+Z2V0RGVmYXVsdFN0eWxlKCktPmdldEZpbGwoKS0+Z2V0SGFzaENvZGUoKSAhPSAkcFN0eWxlLT5nZXRGaWxsKCktPmdldEhhc2hDb2RlKCkpID8gJzEnIDogJzAnKTsKICAgICAgICAkb2JqV3JpdGVyLT53cml0ZUF0dHJpYnV0ZSgnYXBwbHlCb3JkZXInLCAoJHBQSFBFeGNlbC0+Z2V0RGVmYXVsdFN0eWxlKCktPmdldEJvcmRlcnMoKS0+Z2V0SGFzaENvZGUoKSAhPSAkcFN0eWxlLT5nZXRCb3JkZXJzKCktPmdldEhhc2hDb2RlKCkpID8gJzEnIDogJzAnKTsKICAgICAgICAkb2JqV3JpdGVyLT53cml0ZUF0dHJpYnV0ZSgnYXBwbHlBbGlnbm1lbnQnLCAoJHBQSFBFeGNlbC0+Z2V0RGVmYXVsdFN0eWxlKCktPmdldEFsaWdubWVudCgpLT5nZXRIYXNoQ29kZSgpICE9ICRwU3R5bGUtPmdldEFsaWdubWVudCgpLT5nZXRIYXNoQ29kZSgpKSA\/ICcxJyA6ICcwJyk7CiAgICAgICAgaWYgKCRwU3R5bGUtPmdldFByb3RlY3Rpb24oKS0+Z2V0TG9ja2VkKCkgIT0gUEhQRXhjZWxfU3R5bGVfUHJvdGVjdGlvbjo6UFJPVEVDVElPTl9JTkhFUklUIHx8ICRwU3R5bGUtPmdldFByb3RlY3Rpb24oKS0+Z2V0SGlkZGVuKCkgIT0gUEhQRXhjZWxfU3R5bGVfUHJvdGVjdGlvbjo6UFJPVEVDVElPTl9JTkhFUklUKSB7CiAgICAgICAgICAgICRvYmpXcml0ZXItPndyaXRlQXR0cmlidXRlKCdhcHBseVByb3RlY3Rpb24nLCAndHJ1ZScpOwogICAgICAgIH0KCiAgICAgICAgLy8gYWxpZ25tZW50CiAgICAgICAgJG9ialdyaXRlci0+c3RhcnRFbGVtZW50KCdhbGlnbm1lbnQnKTsKICAgICAgICAkb2JqV3JpdGVyLT53cml0ZUF0dHJpYnV0ZSgnaG9yaXpvbnRhbCcsICRwU3R5bGUtPmdldEFsaWdubWVudCgpLT5nZXRIb3Jpem9udGFsKCkpOwogICAgICAgICRvYmpXcml0ZXItPndyaXRlQXR0cmlidXRlKCd2ZXJ0aWNhbCcsICRwU3R5bGUtPmdldEFsaWdubWVudCgpLT5nZXRWZXJ0aWNhbCgpKTsKCiAgICAgICAgJHRleHRSb3RhdGlvbiA9IDA7CiAgICAgICAgaWYgKCRwU3R5bGUtPmdldEFsaWdubWVudCgpLT5nZXRUZXh0Um90YXRpb24oKSA+PSAwKSB7CiAgICAgICAgICAgICR0ZXh0Um90YXRpb24gPSAkcFN0eWxlLT5nZXRBbGlnbm1lbnQoKS0+Z2V0VGV4dFJvdGF0aW9uKCk7CiAgICAgICAgfSBlbHNlaWYgKCRwU3R5bGUtPmdldEFsaWdubWVudCgpLT5nZXRUZXh0Um90YXRpb24oKSA8IDApIHsKICAgICAgICAgICAgJHRleHRSb3RhdGlvbiA9IDkwIC0gJHBTdHlsZS0+Z2V0QWxpZ25tZW50KCktPmdldFRleHRSb3RhdGlvbigpOwogICAgICAgIH0KICAgICAgICAkb2JqV3JpdGVyLT53cml0ZUF0dHJpYnV0ZSgndGV4dFJvdGF0aW9uJywgJHRleHRSb3RhdGlvbik7CgogICAgICAgICRvYmpXcml0ZXItPndyaXRlQXR0cmlidXRlKCd3cmFwVGV4dCcsICgkcFN0eWxlLT5nZXRBbGlnbm1lbnQoKS0+Z2V0V3JhcFRleHQoKSA\/ICd0cnVlJyA6ICdmYWxzZScpKTsKICAgICAgICAkb2JqV3JpdGVyLT53cml0ZUF0dHJpYnV0ZSgnc2hyaW5rVG9GaXQnLCAoJHBTdHlsZS0+Z2V0QWxpZ25tZW50KCktPmdldFNocmlua1RvRml0KCkgPyAndHJ1ZScgOiAnZmFsc2UnKSk7CgogICAgICAgIGlmICgkcFN0eWxlLT5nZXRBbGlnbm1lbnQoKS0+Z2V0SW5kZW50KCkgPiAwKSB7CiAgICAgICAgICAgICRvYmpXcml0ZXItPndyaXRlQXR0cmlidXRlKCdpbmRlbnQnLCAkcFN0eWxlLT5nZXRBbGlnbm1lbnQoKS0+Z2V0SW5kZW50KCkpOwogICAgICAgIH0KICAgICAgICBpZiAoJHBTdHlsZS0+Z2V0QWxpZ25tZW50KCktPmdldFJlYWRvcmRlcigpID4gMCkgewogICAgICAgICAgICAkb2JqV3JpdGVyLT53cml0ZUF0dHJpYnV0ZSgncmVhZGluZ09yZGVyJywgJHBTdHlsZS0+Z2V0QWxpZ25tZW50KCktPmdldFJlYWRvcmRlcigpKTsKICAgICAgICB9CiAgICAgICAgJG9ialdyaXRlci0+ZW5kRWxlbWVudCgpOwoKICAgICAgICAvLyBwcm90ZWN0aW9uCiAgICAgICAgaWYgKCRwU3R5bGUtPmdldFByb3RlY3Rpb24oKS0+Z2V0TG9ja2VkKCkgIT0gUEhQRXhjZWxfU3R5bGVfUHJvdGVjdGlvbjo6UFJPVEVDVElPTl9JTkhFUklUIHx8ICRwU3R5bGUtPmdldFByb3RlY3Rpb24oKS0+Z2V0SGlkZGVuKCkgIT0gUEhQRXhjZWxfU3R5bGVfUHJvdGVjdGlvbjo6UFJPVEVDVElPTl9JTkhFUklUKSB7CiAgICAgICAgICAgICRvYmpXcml0ZXItPnN0YXJ0RWxlbWVudCgncHJvdGVjdGlvbicpOwogICAgICAgICAgICBpZiAoJHBTdHlsZS0+Z2V0UHJvdGVjdGlvbigpLT5nZXRMb2NrZWQoKSAhPSBQSFBFeGNlbF9TdHlsZV9Qcm90ZWN0aW9uOjpQUk9URUNUSU9OX0lOSEVSSVQpIHsKICAgICAgICAgICAgICAgICRvYmpXcml0ZXItPndyaXRlQXR0cmlidXRlKCdsb2NrZWQnLCAoJHBTdHlsZS0+Z2V0UHJvdGVjdGlvbigpLT5nZXRMb2NrZWQoKSA9PSBQSFBFeGNlbF9TdHlsZV9Qcm90ZWN0aW9uOjpQUk9URUNUSU9OX1BST1RFQ1RFRCA\/ICd0cnVlJyA6ICdmYWxzZScpKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoJHBTdHlsZS0+Z2V0UHJvdGVjdGlvbigpLT5nZXRIaWRkZW4oKSAhPSBQSFBFeGNlbF9TdHlsZV9Qcm90ZWN0aW9uOjpQUk9URUNUSU9OX0lOSEVSSVQpIHsKICAgICAgICAgICAgICAgICRvYmpXcml0ZXItPndyaXRlQXR0cmlidXRlKCdoaWRkZW4nLCAoJHBTdHlsZS0+Z2V0UHJvdGVjdGlvbigpLT5nZXRIaWRkZW4oKSA9PSBQSFBFeGNlbF9TdHlsZV9Qcm90ZWN0aW9uOjpQUk9URUNUSU9OX1BST1RFQ1RFRCA\/ICd0cnVlJyA6ICdmYWxzZScpKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAkb2JqV3JpdGVyLT5lbmRFbGVtZW50KCk7CiAgICAgICAgfQoKICAgICAgICAkb2JqV3JpdGVyLT5lbmRFbGVtZW50KCk7CiAgICB9CgogICAgLyoqCiAgICAgKiBXcml0ZSBDZWxsIFN0eWxlIER4ZgogICAgICoKICAgICAqIEBwYXJhbSAgICAgUEhQRXhjZWxfU2hhcmVkX1hNTFdyaXRlciAgICAgICAgICRvYmpXcml0ZXIgICAgICAgICBYTUwgV3JpdGVyCiAgICAgKiBAcGFyYW0gICAgIFBIUEV4Y2VsX1N0eWxlICAgICAgICAgICAgICAgICAgICAkcFN0eWxlICAgICAgICAgICAgU3R5bGUKICAgICAqIEB0aHJvd3MgICAgIFBIUEV4Y2VsX1dyaXRlcl9FeGNlcHRpb24KICAgICAqLwogICAgcHJpdmF0ZSBmdW5jdGlvbiB3cml0ZUNlbGxTdHlsZUR4ZihQSFBFeGNlbF9TaGFyZWRfWE1MV3JpdGVyICRvYmpXcml0ZXIgPSBudWxsLCBQSFBFeGNlbF9TdHlsZSAkcFN0eWxlID0gbnVsbCkKICAgIHsKICAgICAgICAvLyBkeGYKICAgICAgICAkb2JqV3JpdGVyLT5zdGFydEVsZW1lbnQoJ2R4ZicpOwoKICAgICAgICAvLyBmb250CiAgICAgICAgJHRoaXMtPndyaXRlRm9udCgkb2JqV3JpdGVyLCAkcFN0eWxlLT5nZXRGb250KCkpOwoKICAgICAgICAvLyBudW1GbXQKICAgICAgICAkdGhpcy0+d3JpdGVOdW1GbXQoJG9ialdyaXRlciwgJHBTdHlsZS0+Z2V0TnVtYmVyRm9ybWF0KCkpOwoKICAgICAgICAvLyBmaWxsCiAgICAgICAgJHRoaXMtPndyaXRlRmlsbCgkb2JqV3JpdGVyLCAkcFN0eWxlLT5nZXRGaWxsKCkpOwoKICAgICAgICAvLyBhbGlnbm1lbnQKICAgICAgICAkb2JqV3JpdGVyLT5zdGFydEVsZW1lbnQoJ2FsaWdubWVudCcpOwogICAgICAgIGlmICgkcFN0eWxlLT5nZXRBbGlnbm1lbnQoKS0+Z2V0SG9yaXpvbnRhbCgpICE9PSBudWxsKSB7CiAgICAgICAgICAgICRvYmpXcml0ZXItPndyaXRlQXR0cmlidXRlKCdob3Jpem9udGFsJywgJHBTdHlsZS0+Z2V0QWxpZ25tZW50KCktPmdldEhvcml6b250YWwoKSk7CiAgICAgICAgfQogICAgICAgIGlmICgkcFN0eWxlLT5nZXRBbGlnbm1lbnQoKS0+Z2V0VmVydGljYWwoKSAhPT0gbnVsbCkgewogICAgICAgICAgICAkb2JqV3JpdGVyLT53cml0ZUF0dHJpYnV0ZSgndmVydGljYWwnLCAkcFN0eWxlLT5nZXRBbGlnbm1lbnQoKS0+Z2V0VmVydGljYWwoKSk7CiAgICAgICAgfQoKICAgICAgICBpZiAoJHBTdHlsZS0+Z2V0QWxpZ25tZW50KCktPmdldFRleHRSb3RhdGlvbigpICE9PSBudWxsKSB7CiAgICAgICAgICAgICR0ZXh0Um90YXRpb24gPSAwOwogICAgICAgICAgICBpZiAoJHBTdHlsZS0+Z2V0QWxpZ25tZW50KCktPmdldFRleHRSb3RhdGlvbigpID49IDApIHsKICAgICAgICAgICAgICAgICR0ZXh0Um90YXRpb24gPSAkcFN0eWxlLT5nZXRBbGlnbm1lbnQoKS0+Z2V0VGV4dFJvdGF0aW9uKCk7CiAgICAgICAgICAgIH0gZWxzZWlmICgkcFN0eWxlLT5nZXRBbGlnbm1lbnQoKS0+Z2V0VGV4dFJvdGF0aW9uKCkgPCAwKSB7CiAgICAgICAgICAgICAgICAkdGV4dFJvdGF0aW9uID0gOTAgLSAkcFN0eWxlLT5nZXRBbGlnbm1lbnQoKS0+Z2V0VGV4dFJvdGF0aW9uKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgJG9ialdyaXRlci0+d3JpdGVBdHRyaWJ1dGUoJ3RleHRSb3RhdGlvbicsICR0ZXh0Um90YXRpb24pOwogICAgICAgIH0KICAgICAgICAkb2JqV3JpdGVyLT5lbmRFbGVtZW50KCk7CgogICAgICAgIC8vIGJvcmRlcgogICAgICAgICR0aGlzLT53cml0ZUJvcmRlcigkb2JqV3JpdGVyLCAkcFN0eWxlLT5nZXRCb3JkZXJzKCkpOwoKICAgICAgICAvLyBwcm90ZWN0aW9uCiAgICAgICAgaWYgKCgkcFN0eWxlLT5nZXRQcm90ZWN0aW9uKCktPmdldExvY2tlZCgpICE9PSBudWxsKSB8fCAoJHBTdHlsZS0+Z2V0UHJvdGVjdGlvbigpLT5nZXRIaWRkZW4oKSAhPT0gbnVsbCkpIHsKICAgICAgICAgICAgaWYgKCRwU3R5bGUtPmdldFByb3RlY3Rpb24oKS0+Z2V0TG9ja2VkKCkgIT09IFBIUEV4Y2VsX1N0eWxlX1Byb3RlY3Rpb246OlBST1RFQ1RJT05fSU5IRVJJVCB8fAogICAgICAgICAgICAgICAgJHBTdHlsZS0+Z2V0UHJvdGVjdGlvbigpLT5nZXRIaWRkZW4oKSAhPT0gUEhQRXhjZWxfU3R5bGVfUHJvdGVjdGlvbjo6UFJPVEVDVElPTl9JTkhFUklUKSB7CiAgICAgICAgICAgICAgICAkb2JqV3JpdGVyLT5zdGFydEVsZW1lbnQoJ3Byb3RlY3Rpb24nKTsKICAgICAgICAgICAgICAgIGlmICgoJHBTdHlsZS0+Z2V0UHJvdGVjdGlvbigpLT5nZXRMb2NrZWQoKSAhPT0gbnVsbCkgJiYKICAgICAgICAgICAgICAgICAgICAoJHBTdHlsZS0+Z2V0UHJvdGVjdGlvbigpLT5nZXRMb2NrZWQoKSAhPT0gUEhQRXhjZWxfU3R5bGVfUHJvdGVjdGlvbjo6UFJPVEVDVElPTl9JTkhFUklUKSkgewogICAgICAgICAgICAgICAgICAgICRvYmpXcml0ZXItPndyaXRlQXR0cmlidXRlKCdsb2NrZWQnLCAoJHBTdHlsZS0+Z2V0UHJvdGVjdGlvbigpLT5nZXRMb2NrZWQoKSA9PSBQSFBFeGNlbF9TdHlsZV9Qcm90ZWN0aW9uOjpQUk9URUNUSU9OX1BST1RFQ1RFRCA\/ICd0cnVlJyA6ICdmYWxzZScpKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmICgoJHBTdHlsZS0+Z2V0UHJvdGVjdGlvbigpLT5nZXRIaWRkZW4oKSAhPT0gbnVsbCkgJiYKICAgICAgICAgICAgICAgICAgICAoJHBTdHlsZS0+Z2V0UHJvdGVjdGlvbigpLT5nZXRIaWRkZW4oKSAhPT0gUEhQRXhjZWxfU3R5bGVfUHJvdGVjdGlvbjo6UFJPVEVDVElPTl9JTkhFUklUKSkgewogICAgICAgICAgICAgICAgICAgICRvYmpXcml0ZXItPndyaXRlQXR0cmlidXRlKCdoaWRkZW4nLCAoJHBTdHlsZS0+Z2V0UHJvdGVjdGlvbigpLT5nZXRIaWRkZW4oKSA9PSBQSFBFeGNlbF9TdHlsZV9Qcm90ZWN0aW9uOjpQUk9URUNUSU9OX1BST1RFQ1RFRCA\",
    "size": "28059"
}