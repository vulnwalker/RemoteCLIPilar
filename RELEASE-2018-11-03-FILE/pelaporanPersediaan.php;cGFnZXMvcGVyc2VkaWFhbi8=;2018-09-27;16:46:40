{
    "namaFile": "pages\/persediaan\/pelaporanPersediaan.php",
    "lastUpdate": "2018-09-27+16:46:40.68",
    "contentFile": "<?php

class pelaporanPersediaanObj  extends configClass{
	var $Prefix = 'pelaporanPersediaan';
	var $elCurrPage="HalDefault";
	var $SHOW_CEK = TRUE;
	var $TblName = 'ref_barang'; //bonus
	var $TblName_Hapus = 't_kartu_persediaan';
	var $MaxFlush = 10;
	var $TblStyle = array( 'koptable', 'cetak','cetak'); //berdasar mode
	var $ColStyle = array( 'GarisDaftar', 'GarisCetak','GarisCetak');
	var $KeyFields = array('f','g','h','i','j','j1');
	var $FieldSum = array();//array('jml_harga');
	var $SumValue = array();
	var $FieldSum_Cp1 = array( 14, 13, 13);//berdasar mode
	var $FieldSum_Cp2 = array( 1, 1, 1);
	var $checkbox_rowspan = 2;
	var $PageTitle = 'PELAPORAN PERSEDIAAN BARANG';
	var $PageIcon = 'images/masterData_01.gif';
	var $pagePerHal ='';
	//var $cetak_xls=TRUE ;
	var $fileNameExcel='pelaporanPersediaan.xls';
	var $namaModulCetak='PELAPORAN PERSEDIAAN BARANG';
	var $Cetak_Judul = 'PELAPORAN PERSEDIAAN BARANG';
	var $Cetak_Mode=2;
	var $Cetak_WIDTH = '30cm';
	var $Cetak_OtherHTMLHead;
	var $FormName = 'pelaporanPersediaanForm';
	var $modul = "PELAPORAN PERSEDIAAN BARANG";
	var $jenisForm = "";
	var $tahun = "";
	var $nomorUrut = 1;
	var $jenisAnggaran = "";
	var $idTahap = "";
	var $currentTahap = "";
	var $namaTahapTerakhir = "";
	var $masaTerakhir = "";
	//buatview
	var $urutTerakhir = "";
	var $urutSebelumnya = "";
	var $jenisFormTerakhir = "";

	var $username = "";
	var $wajibValidasi = "";

	var $sqlValidasi = "";
	//buatview
	var $TampilFilterColapse = 0; //0

	var $provinsi = "";
	var $kota = "";
	var $pengelolaBarang = "";
	var $pejabatPengelolaBarang = "";
	var $pengurusPengelolaBarang = "";
	var $nipPengelola = "";
	var $nipPejabat = "";
	var $nipPengurus ="";

	var $arrEselon = array(
    array('1','ESELON I'),
    array('2','ESELON II'),
    array('3','ESELON III'),
    array('4','ESELON IV'),
    array('5','ESELON V')
    );

	var $stringConcatSubUnit = "concat(c1,'.',c,'.',d,'.',e,'.',e1)";
	var $stringConcatKodeBarang = "concat(f,'.',g,'.',h,'.',i,'.',j,'.',j1)";
	function setCekBox2($cb, $KeyValueStr, $isi){
 		$hsl = '';
 		/*if($KeyValueStr!=''){*/
 			$hsl = "<input type='checkbox' $isi id='".$this->Prefix."_cb$cb' name='".$this->Prefix."_cb[]'
 					value='".$KeyValueStr."' onclick = isChecked2(this.checked,'pelaporanPersediaan_jmlcek');pelaporanPersediaan.cbxPilih(this); >";
 		/*}*/
 		return $hsl;
 	}
 function Hitung($dt){
	global $SensusTmp,$Main,$HTTP_COOKIE_VARS;
	foreach ($_REQUEST as $key => $value) {
		 $$key = $value;
	}
	$cek = ''; $err=''; $content='';
	$json = TRUE;	//$ErrMsg = 'tes';
	$form_name = $this->Prefix.'_form';
	$this->form_width = 800;
	$this->form_height = 280;
	$this->form_caption = 'Hitung Ulang';
	$kodeSKPD = $filterUrusan.".".$filterBidang.".".$filterSKPD.".".$filterUnit.".".$filterSubUnit;
	$getDataBarang = $this->sqlQuery("select * from view_daftar_persediaan where concat(c1,'.',c,'.',d,'.',e,'.',e1) = '$kodeSKPD' and year(tanggal_buku) = '$this->tahunAnggaran'");
	while ($dataBarang = $this->sqlArray($getDataBarang)) {
		$arrayKodeBarang[] = $dataBarang['f'].".".$dataBarang['g'].".".$dataBarang['h'].".".$dataBarang['i'].".".$dataBarang['j'].".".$dataBarang['j1'];
	}
	//items ----------------------
	$this->form_fields = array(
		'progress' => array(
			'label'=>'',
			'labelWidth'=>1,
			'pemisah'=>' ',
			'value'=>
				"<div id='progressbox' style='background:#fffbf0;border-radius:5px;border:1px solid;height:10px;margin-left:-20px;'>
					<div id='progressbar'></div >
					<div id='statustxt' style='width:0%;background:green;height:10px;text-align:right;color:white;font-size:8px;'>0%</div>
					<div id='output'></div>
				</div>	"
			),
		'peringatan' => array(
					'label'=>'',
					'labelWidth'=>1,
					'pemisah'=>' ',
					'value'=>"<div id='pemisah' style='color:red;font-size:11px;'></div>",
			),
		'log' => array(
					'label'=>'',
					'labelWidth'=>'0',
					'pemisah'=>' ',
					'value'=>"

					<textarea id='logHitung' name='logHitung' readonly style='width:790px;height:220px;margin-left:-20px;'>Jumlah Kode Barang  = ".sizeof($arrayKodeBarang)."\n</textarea>",
			),
		);
	 //tombol
	 $this->form_menubawah =
	 	 "<input type='hidden' value='".json_encode($arrayKodeBarang)."'  id='arrayKodeBarang' name='arrayKodeBarang' v > ".
	 	 "<input type='hidden' value='".sizeof($arrayKodeBarang)."'  id='lengthProccess'  name='lengthProccess' > ".
	 	 "<input type='hidden' value='".$kodeSKPD."'  id='kodeSKPD' name='kodeSKPD' > ".
	 	 "<input type='hidden' value='".$filterPeriode."'  id='filterPeriode' name='filterPeriode' > ".
	 	 "<input type='hidden' value=''  id='idPengeluaranDistribusi' name='idPengeluaranDistribusi' > ".
		 "<input type='button' value='Hitung' onclick ='".$this->Prefix.".executeHitung()' title='Hitung' > &nbsp".
		 "<input type='button' value='Tutup' onclick ='".$this->Prefix.".Close()' >";

	 $form = $this->genForm();
	 $content = $form;//$content = 'content';
	 return	array ('cek'=>$cek, 'err'=>$err, 'content'=>$content);
 }
 function Closing($dt){
  global $SensusTmp,$Main,$HTTP_COOKIE_VARS;
  foreach ($_REQUEST as $key => $value) {
     $$key = $value;
  }
  $cek = ''; $err=''; $content='';
  $json = TRUE;	//$ErrMsg = 'tes';
  $form_name = $this->Prefix.'_form';
  $this->form_width = 820;
  $this->form_height = 500;
  $this->form_caption = 'Closing';
  $kodeSKPD = $filterUrusan.".".$filterBidang.".".$filterSKPD.".".$filterUnit.".".$filterSubUnit;
	if(empty($err)){
		if($this->sqlNumRow($this->sqlQuery("select * from tutup_buku_persediaan where tahun_anggaran = '$this->tahunAnggaran' and $this->stringConcatSubUnit = '$kodeSKPD' ")) !=0){
			$err = "Data sudah di tutup buku !";
		}
	}
	if(empty($err)){
		if($filterPeriode == 1){
			$tanggal = "31-06-".$this->tahunAnggaran;
			$statusClosing = $this->getStatusClosing($kodeSKPD,$this->generateDate($tanggal));
			if($statusClosing != 0){
				$err = "Data semester satu sudah di closing, batalkan closing ?";
			}
			$namaSemester = "SATU";
		}else{
			$tanggal = "31-12-".$this->tahunAnggaran;
			$statusClosing = $this->getStatusClosing($kodeSKPD,$this->generateDate($tanggal));
			if($statusClosing != 0){
				$err = "Data semester dua sudah di closing, batalkan closing \\/ICRPcmRlckRlZmF1bHQgOiAnIE9yZGVyIEJ5ICcuJE9yZGVyOwoKCQlpZihlbXB0eSgkanVtbGFoRGF0YSkpJGp1bWxhaERhdGEgPTUwOwoJCSR0aGlzLT5wYWdlUGVySGFsID0gJGp1bWxhaERhdGE7CgkJJHBhZ2VQZXJIYWwgPSAkdGhpcy0+cGFnZVBlckhhbCA9PScnID8gJE1haW4tPlBhZ2VQZXJIYWw6ICR0aGlzLT5wYWdlUGVySGFsOwoJCSRIYWxEZWZhdWx0PWNla1BPU1QoJHRoaXMtPlByZWZpeC4nX2hhbCcsMSk7CgkJLy8kTGltaXQgPSAiIGxpbWl0ICIuKCgkSGFsRGVmYXVsdAkqMSkgLSAxKSAqICRNYWluLT5QYWdlUGVySGFsLiIsIi4kTWFpbi0+UGFnZVBlckhhbDsgLy8kTGltaXRIYWwgPSAnJzsKCQkkTGltaXQgPSAiIGxpbWl0ICIuKCgkSGFsRGVmYXVsdAkqMSkgLSAxKSAqICRwYWdlUGVySGFsLiIsIi4kcGFnZVBlckhhbDsgLy8kTGltaXRIYWwgPSAnJzsKCQkkTGltaXQgPSAkTW9kZSA9PSAzID8gJyc6ICRMaW1pdDsKCQkvL25vYXdhbCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCQkkTm9Bd2FsPSAkcGFnZVBlckhhbCAqICgoJEhhbERlZmF1bHQqMSkgLSAxKTsKCQkkTm9Bd2FsID0gJE1vZGUgPT0gMyA\/IDA6ICROb0F3YWw7CgoJCXJldHVybiBhcnJheSgnS29uZGlzaSc9PiRLb25kaXNpLCAnT3JkZXInPT4kT3JkZXIgLCdMaW1pdCc9PiRMaW1pdCwgJ05vQXdhbCc9PiROb0F3YWwgKTsKCgl9CgoJZnVuY3Rpb24gSGFwdXMoJGlkcyl7IC8vdmFsaWRhc2kgaGFwdXMgcmVmX2tvdGEKCQkgJGVycj0nJzsgJGNlaz0nJzsKCQlmb3IoJGkgPSAwOyAkaTxjb3VudCgkaWRzKTsgJGkrKykJewoKCgkJCSRxeSA9ICJERUxFVEUgRlJPTSAkdGhpcy0+VGJsTmFtZV9IYXB1cyBXSEVSRSBpZD0nIi4kaWRzWyRpXS4iJyAiOyRjZWsuPSRxeTsKCQkJJHFyeSA9ICR0aGlzLT5zcWxRdWVyeSgkcXkpOwoKCQl9CgkJcmV0dXJuIGFycmF5KCdlcnInPT4kZXJyLCdjZWsnPT4kY2VrKTsKCX0KCglmdW5jdGlvbiBwYWdlU2hvdygpewoJCWdsb2JhbCAkYXBwLCAkTWFpbjsKCgkJJG5hdmF0YXNfID0gJHRoaXMtPnNldE5hdkF0YXMoKTsKCQkkbmF2YXRhcyA9ICRuYXZhdGFzXz09Jyc\\/Pgo=",
    "size": "138173"
}