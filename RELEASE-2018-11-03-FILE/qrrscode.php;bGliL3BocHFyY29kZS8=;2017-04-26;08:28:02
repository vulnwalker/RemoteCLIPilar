{
    "namaFile": "lib\/phpqrcode\/qrrscode.php",
    "lastUpdate": "2017-04-26+08:28:02.23",
    "contentFile": "",
    "size": "8485"
}