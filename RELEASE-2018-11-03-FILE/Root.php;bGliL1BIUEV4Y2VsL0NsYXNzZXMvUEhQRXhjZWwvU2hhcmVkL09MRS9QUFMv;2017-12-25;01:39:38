{
    "namaFile": "lib\/PHPExcel\/Classes\/PHPExcel\/Shared\/OLE\/PPS\/Root.php",
    "lastUpdate": "2017-12-25+01:39:38.00",
    "contentFile": "PD9waHAKLyogdmltOiBzZXQgZXhwYW5kdGFiIHRhYnN0b3A9NCBzaGlmdHdpZHRoPTQ6ICovCi8vICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKwovLyB8IFBIUCBWZXJzaW9uIDQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKLy8gKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rCi8vIHwgQ29weXJpZ2h0IChjKSAxOTk3LTIwMDIgVGhlIFBIUCBHcm91cCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAovLyArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsKLy8gfCBUaGlzIHNvdXJjZSBmaWxlIGlzIHN1YmplY3QgdG8gdmVyc2lvbiAyLjAyIG9mIHRoZSBQSFAgbGljZW5zZSwgICAgICB8Ci8vIHwgdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UsIGFuZCBpcyAgICAgICAgfAovLyB8IGF2YWlsYWJsZSBhdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKLy8gfCBodHRwOi8vd3d3LnBocC5uZXQvbGljZW5zZS8yXzAyLnR4dC4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8Ci8vIHwgSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIFBIUCBsaWNlbnNlIGFuZCBhcmUgdW5hYmxlIHRvICAgfAovLyB8IG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYSBub3RlIHRvICAgICAgICAgIHwKLy8gfCBsaWNlbnNlQHBocC5uZXQgc28gd2UgY2FuIG1haWwgeW91IGEgY29weSBpbW1lZGlhdGVseS4gICAgICAgICAgICAgICB8Ci8vICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKwovLyB8IEF1dGhvcjogWGF2aWVyIE5vZ3VlciA8eG5vZ3VlckBwaHAubmV0PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKLy8gfCBCYXNlZCBvbiBPTEU6OlN0b3JhZ2VfTGl0ZSBieSBLYXdhaSwgVGFrYW5vcmkgICAgICAgICAgICAgICAgICAgICAgICB8Ci8vICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKwovLwovLyAkSWQ6IFJvb3QucGhwLHYgMS45IDIwMDUvMDQvMjMgMjE6NTM6NDkgZHVmdXogRXhwICQKCgovKioKKiBDbGFzcyBmb3IgY3JlYXRpbmcgUm9vdCBQUFMncyBmb3IgT0xFIGNvbnRhaW5lcnMKKgoqIEBhdXRob3IgICBYYXZpZXIgTm9ndWVyIDx4bm9ndWVyQHBocC5uZXQ+CiogQGNhdGVnb3J5IFBIUEV4Y2VsCiogQHBhY2thZ2UgIFBIUEV4Y2VsX1NoYXJlZF9PTEUKKi8KY2xhc3MgUEhQRXhjZWxfU2hhcmVkX09MRV9QUFNfUm9vdCBleHRlbmRzIFBIUEV4Y2VsX1NoYXJlZF9PTEVfUFBTCnsKCiAgICAvKioKICAgICAqIERpcmVjdG9yeSBmb3IgdGVtcG9yYXJ5IGZpbGVzCiAgICAgKiBAdmFyIHN0cmluZwogICAgICovCiAgICBwcm90ZWN0ZWQgJHRlbXBEaXJlY3RvcnkgPSBudWxsOwoKICAgIC8qKgogICAgICogQHBhcmFtIGludGVnZXIgJHRpbWVfMXN0IEEgdGltZXN0YW1wCiAgICAgKiBAcGFyYW0gaW50ZWdlciAkdGltZV8ybmQgQSB0aW1lc3RhbXAKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIF9fY29uc3RydWN0KCR0aW1lXzFzdCwgJHRpbWVfMm5kLCAkcmFDaGlsZCkKICAgIHsKICAgICAgICAkdGhpcy0+X3RlbXBEaXIgPSBQSFBFeGNlbF9TaGFyZWRfRmlsZTo6c3lzX2dldF90ZW1wX2RpcigpOwoKICAgICAgICBwYXJlbnQ6Ol9fY29uc3RydWN0KG51bGwsIFBIUEV4Y2VsX1NoYXJlZF9PTEU6OkFzYzJVY3MoJ1Jvb3QgRW50cnknKSwgUEhQRXhjZWxfU2hhcmVkX09MRTo6T0xFX1BQU19UWVBFX1JPT1QsIG51bGwsIG51bGwsIG51bGwsICR0aW1lXzFzdCwgJHRpbWVfMm5kLCBudWxsLCAkcmFDaGlsZCk7CiAgICB9CgogICAgLyoqCiAgICAqIE1ldGhvZCBmb3Igc2F2aW5nIHRoZSB3aG9sZSBPTEUgY29udGFpbmVyIChpbmNsdWRpbmcgZmlsZXMpLgogICAgKiBJbiBmYWN0LCBpZiBjYWxsZWQgd2l0aCBhbiBlbXB0eSBhcmd1bWVudCAob3IgJy0nKSwgaXQgc2F2ZXMgdG8gYQogICAgKiB0ZW1wb3JhcnkgZmlsZSBhbmQgdGhlbiBvdXRwdXRzIGl0J3MgY29udGVudHMgdG8gc3Rkb3V0LgogICAgKiBJZiBhIHJlc291cmNlIHBvaW50ZXIgdG8gYSBzdHJlYW0gY3JlYXRlZCBieSBmb3BlbigpIGlzIHBhc3NlZAogICAgKiBpdCB3aWxsIGJlIHVzZWQsIGJ1dCB5b3UgaGF2ZSB0byBjbG9zZSBzdWNoIHN0cmVhbSBieSB5b3Vyc2VsZi4KICAgICoKICAgICogQHBhcmFtIHN0cmluZ3xyZXNvdXJjZSAkZmlsZW5hbWUgVGhlIG5hbWUgb2YgdGhlIGZpbGUgb3Igc3RyZWFtIHdoZXJlIHRvIHNhdmUgdGhlIE9MRSBjb250YWluZXIuCiAgICAqIEBhY2Nlc3MgcHVibGljCiAgICAqIEByZXR1cm4gbWl4ZWQgdHJ1ZSBvbiBzdWNjZXNzCiAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIHNhdmUoJGZpbGVuYW1lKQogICAgewogICAgICAgIC8vIEluaXRpYWwgU2V0dGluZyBmb3Igc2F2aW5nCiAgICAgICAgJHRoaXMtPl9CSUdfQkxPQ0tfU0laRSAgPSBwb3coCiAgICAgICAgICAgIDIsCiAgICAgICAgICAgIChpc3NldCgkdGhpcy0+X0JJR19CTE9DS19TSVpFKSk\/IHNlbGY6OmFkanVzdDIoJHRoaXMtPl9CSUdfQkxPQ0tfU0laRSkgOiA5CiAgICAgICAgKTsKICAgICAgICAkdGhpcy0+X1NNQUxMX0JMT0NLX1NJWkU9IHBvdygKICAgICAgICAgICAgMiwKICAgICAgICAgICAgKGlzc2V0KCR0aGlzLT5fU01BTExfQkxPQ0tfU0laRSkpPyAgc2VsZjo6YWRqdXN0MigkdGhpcy0+X1NNQUxMX0JMT0NLX1NJWkUpIDogNgogICAgICAgICk7CgogICAgICAgIGlmIChpc19yZXNvdXJjZSgkZmlsZW5hbWUpKSB7CiAgICAgICAgICAgICR0aGlzLT5fRklMRUhfID0gJGZpbGVuYW1lOwogICAgICAgIH0gZWxzZWlmICgkZmlsZW5hbWUgPT0gJy0nIHx8ICRmaWxlbmFtZSA9PSAnJykgewogICAgICAgICAgICBpZiAoJHRoaXMtPnRlbXBEaXJlY3RvcnkgPT09IG51bGwpIHsKICAgICAgICAgICAgICAgICR0aGlzLT50ZW1wRGlyZWN0b3J5ID0gUEhQRXhjZWxfU2hhcmVkX0ZpbGU6OnN5c19nZXRfdGVtcF9kaXIoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAkdGhpcy0+X3RtcF9maWxlbmFtZSA9IHRlbXBuYW0oJHRoaXMtPnRlbXBEaXJlY3RvcnksICJPTEVfUFBTX1Jvb3QiKTsKICAgICAgICAgICAgJHRoaXMtPl9GSUxFSF8gPSBmb3BlbigkdGhpcy0+X3RtcF9maWxlbmFtZSwgIncrYiIpOwogICAgICAgICAgICBpZiAoJHRoaXMtPl9GSUxFSF8gPT0gZmFsc2UpIHsKICAgICAgICAgICAgICAgIHRocm93IG5ldyBQSFBFeGNlbF9Xcml0ZXJfRXhjZXB0aW9uKCJDYW4ndCBjcmVhdGUgdGVtcG9yYXJ5IGZpbGUuIik7CiAgICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAkdGhpcy0+X0ZJTEVIXyA9IGZvcGVuKCRmaWxlbmFtZSwgIndiIik7CiAgICAgICAgfQogICAgICAgIGlmICgkdGhpcy0+X0ZJTEVIXyA9PSBmYWxzZSkgewogICAgICAgICAgICB0aHJvdyBuZXcgUEhQRXhjZWxfV3JpdGVyX0V4Y2VwdGlvbigiQ2FuJ3Qgb3BlbiAkZmlsZW5hbWUuIEl0IG1heSBiZSBpbiB1c2Ugb3IgcHJvdGVjdGVkLiIpOwogICAgICAgIH0KICAgICAgICAvLyBNYWtlIGFuIGFycmF5IG9mIFBQUydzIChmb3IgU2F2ZSkKICAgICAgICAkYUxpc3QgPSBhcnJheSgpOwogICAgICAgIFBIUEV4Y2VsX1NoYXJlZF9PTEVfUFBTOjpfc2F2ZVBwc1NldFBudCgkYUxpc3QsIGFycmF5KCR0aGlzKSk7CiAgICAgICAgLy8gY2FsY3VsYXRlIHZhbHVlcyBmb3IgaGVhZGVyCiAgICAgICAgbGlzdCgkaVNCRGNudCwgJGlCQmNudCwgJGlQUFNjbnQpID0gJHRoaXMtPl9jYWxjU2l6ZSgkYUxpc3QpOyAvLywgJHJoSW5mbyk7CiAgICAgICAgLy8gU2F2ZSBIZWFkZXIKICAgICAgICAkdGhpcy0+X3NhdmVIZWFkZXIoJGlTQkRjbnQsICRpQkJjbnQsICRpUFBTY250KTsKCiAgICAgICAgLy8gTWFrZSBTbWFsbCBEYXRhIHN0cmluZyAod3JpdGUgU0JEKQogICAgICAgICR0aGlzLT5fZGF0YSA9ICR0aGlzLT5fbWFrZVNtYWxsRGF0YSgkYUxpc3QpOwoKICAgICAgICAvLyBXcml0ZSBCQgogICAgICAgICR0aGlzLT5fc2F2ZUJpZ0RhdGEoJGlTQkRjbnQsICRhTGlzdCk7CiAgICAgICAgLy8gV3JpdGUgUFBTCiAgICAgICAgJHRoaXMtPl9zYXZlUHBzKCRhTGlzdCk7CiAgICAgICAgLy8gV3JpdGUgQmlnIEJsb2NrIERlcG90IGFuZCBCRExpc3QgYW5kIEFkZGluZyBIZWFkZXIgaW5mb3JtYXRpb25zCiAgICAgICAgJHRoaXMtPl9zYXZlQmJkKCRpU0JEY250LCAkaUJCY250LCAkaVBQU2NudCk7CgogICAgICAgIGlmICghaXNfcmVzb3VyY2UoJGZpbGVuYW1lKSkgewogICAgICAgICAgICBmY2xvc2UoJHRoaXMtPl9GSUxFSF8pOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgLyoqCiAgICAqIENhbGN1bGF0ZSBzb21lIG51bWJlcnMKICAgICoKICAgICogQGFjY2VzcyBwdWJsaWMKICAgICogQHBhcmFtIGFycmF5ICRyYUxpc3QgUmVmZXJlbmNlIHRvIGFuIGFycmF5IG9mIFBQUydzCiAgICAqIEByZXR1cm4gYXJyYXkgVGhlIGFycmF5IG9mIG51bWJlcnMKICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gX2NhbGNTaXplKCYkcmFMaXN0KQogICAgewogICAgICAgIC8vIENhbGN1bGF0ZSBCYXNpYyBTZXR0aW5nCiAgICAgICAgbGlzdCgkaVNCRGNudCwgJGlCQmNudCwgJGlQUFNjbnQpID0gYXJyYXkoMCwwLDApOwogICAgICAgICRpU21hbGxMZW4gPSAwOwogICAgICAgICRpU0JjbnQgPSAwOwogICAgICAgICRpQ291bnQgPSBjb3VudCgkcmFMaXN0KTsKICAgICAgICBmb3IgKCRpID0gMDsgJGkgPCAkaUNvdW50OyArKyRpKSB7CiAgICAgICAgICAgIGlmICgkcmFMaXN0WyRpXS0+VHlwZSA9PSBQSFBFeGNlbF9TaGFyZWRfT0xFOjpPTEVfUFBTX1RZUEVfRklMRSkgewogICAgICAgICAgICAgICAgJHJhTGlzdFskaV0tPlNpemUgPSAkcmFMaXN0WyRpXS0+X0RhdGFMZW4oKTsKICAgICAgICAgICAgICAgIGlmICgkcmFMaXN0WyRpXS0+U2l6ZSA8IFBIUEV4Y2VsX1NoYXJlZF9PTEU6Ok9MRV9EQVRBX1NJWkVfU01BTEwpIHsKICAgICAgICAgICAgICAgICAgICAkaVNCY250ICs9IGZsb29yKCRyYUxpc3RbJGldLT5TaXplIC8gJHRoaXMtPl9TTUFMTF9CTE9DS19TSVpFKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyAoKCRyYUxpc3RbJGldLT5TaXplICUgJHRoaXMtPl9TTUFMTF9CTE9DS19TSVpFKT8gMTogMCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICRpQkJjbnQgKz0gKGZsb29yKCRyYUxpc3RbJGldLT5TaXplIC8gJHRoaXMtPl9CSUdfQkxPQ0tfU0laRSkgKwogICAgICAgICAgICAgICAgICAgICAgICAoKCRyYUxpc3RbJGldLT5TaXplICUgJHRoaXMtPl9CSUdfQkxPQ0tfU0laRSk\/IDE6IDApKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAkaVNtYWxsTGVuID0gJGlTQmNudCAqICR0aGlzLT5fU01BTExfQkxPQ0tfU0laRTsKICAgICAgICAkaVNsQ250ID0gZmxvb3IoJHRoaXMtPl9CSUdfQkxPQ0tfU0laRSAvIFBIUEV4Y2VsX1NoYXJlZF9PTEU6Ok9MRV9MT05HX0lOVF9TSVpFKTsKICAgICAgICAkaVNCRGNudCA9IGZsb29yKCRpU0JjbnQgLyAkaVNsQ250KSArICgoJGlTQmNudCAlICRpU2xDbnQpPyAxOjApOwogICAgICAgICRpQkJjbnQgKz0gIChmbG9vcigkaVNtYWxsTGVuIC8gJHRoaXMtPl9CSUdfQkxPQ0tfU0laRSkgKwogICAgICAgICAgICAgICAgICAgICAgKCggJGlTbWFsbExlbiAlICR0aGlzLT5fQklHX0JMT0NLX1NJWkUpPyAxOiAwKSk7CiAgICAgICAgJGlDbnQgPSBjb3VudCgkcmFMaXN0KTsKICAgICAgICAkaUJkQ250ID0gJHRoaXMtPl9CSUdfQkxPQ0tfU0laRSAvIFBIUEV4Y2VsX1NoYXJlZF9PTEU6Ok9MRV9QUFNfU0laRTsKICAgICAgICAkaVBQU2NudCA9IChmbG9vcigkaUNudC8kaUJkQ250KSArICgoJGlDbnQgJSAkaUJkQ250KT8gMTogMCkpOwoKICAgICAgICByZXR1cm4gYXJyYXkoJGlTQkRjbnQsICRpQkJjbnQsICRpUFBTY250KTsKICAgIH0KCiAgICAvKioKICAgICogSGVscGVyIGZ1bmN0aW9uIGZvciBjYWN1bGF0aW5nIGEgbWFnaWMgdmFsdWUgZm9yIGJsb2NrIHNpemVzCiAgICAqCiAgICAqIEBhY2Nlc3MgcHVibGljCiAgICAqIEBwYXJhbSBpbnRlZ2VyICRpMiBUaGUgYXJndW1lbnQKICAgICogQHNlZSBzYXZlKCkKICAgICogQHJldHVybiBpbnRlZ2VyCiAgICAqLwogICAgcHJpdmF0ZSBzdGF0aWMgZnVuY3Rpb24gYWRqdXN0MigkaTIpCiAgICB7CiAgICAgICAgJGlXayA9IGxvZygkaTIpL2xvZygyKTsKICAgICAgICByZXR1cm4gKCRpV2sgPiBmbG9vcigkaVdrKSk\/IGZsb29yKCRpV2spKzE6JGlXazsKICAgIH0KCiAgICAvKioKICAgICogU2F2ZSBPTEUgaGVhZGVyCiAgICAqCiAgICAqIEBhY2Nlc3MgcHVibGljCiAgICAqIEBwYXJhbSBpbnRlZ2VyICRpU0JEY250CiAgICAqIEBwYXJhbSBpbnRlZ2VyICRpQkJjbnQKICAgICogQHBhcmFtIGludGVnZXIgJGlQUFNjbnQKICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gX3NhdmVIZWFkZXIoJGlTQkRjbnQsICRpQkJjbnQsICRpUFBTY250KQogICAgewogICAgICAgICRGSUxFID0gJHRoaXMtPl9GSUxFSF87CgogICAgICAgIC8vIENhbGN1bGF0ZSBCYXNpYyBTZXR0aW5nCiAgICAgICAgJGlCbENudCA9ICR0aGlzLT5fQklHX0JMT0NLX1NJWkUgLyBQSFBFeGNlbF9TaGFyZWRfT0xFOjpPTEVfTE9OR19JTlRfU0laRTsKICAgICAgICAkaTFzdEJkTCA9ICgkdGhpcy0+X0JJR19CTE9DS19TSVpFIC0gMHg0QykgLyBQSFBFeGNlbF9TaGFyZWRfT0xFOjpPTEVfTE9OR19JTlRfU0laRTsKCiAgICAgICAgJGlCZEV4TCA9IDA7CiAgICAgICAgJGlBbGwgPSAkaUJCY250ICsgJGlQUFNjbnQgKyAkaVNCRGNudDsKICAgICAgICAkaUFsbFcgPSAkaUFsbDsKICAgICAgICAkaUJkQ250VyA9IGZsb29yKCRpQWxsVyAvICRpQmxDbnQpICsgKCgkaUFsbFcgJSAkaUJsQ250KT8gMTogMCk7CiAgICAgICAgJGlCZENudCA9IGZsb29yKCgkaUFsbCArICRpQmRDbnRXKSAvICRpQmxDbnQpICsgKCgoJGlBbGxXKyRpQmRDbnRXKSAlICRpQmxDbnQpPyAxOiAwKTsKCiAgICAgICAgLy8gQ2FsY3VsYXRlIEJEIGNvdW50CiAgICAgICAgaWYgKCRpQmRDbnQgPiAkaTFzdEJkTCkgewogICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgKyskaUJkRXhMOwogICAgICAgICAgICAgICAgKyskaUFsbFc7CiAgICAgICAgICAgICAgICAkaUJkQ250VyA9IGZsb29yKCRpQWxsVyAvICRpQmxDbnQpICsgKCgkaUFsbFcgJSAkaUJsQ250KT8gMTogMCk7CiAgICAgICAgICAgICAgICAkaUJkQ250ID0gZmxvb3IoKCRpQWxsVyArICRpQmRDbnRXKSAvICRpQmxDbnQpICsgKCgoJGlBbGxXKyRpQmRDbnRXKSAlICRpQmxDbnQpPyAxOiAwKTsKICAgICAgICAgICAgICAgIGlmICgkaUJkQ250IDw9ICgkaUJkRXhMKiRpQmxDbnQrICRpMXN0QmRMKSkgewogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAvLyBTYXZlIEhlYWRlcgogICAgICAgIGZ3cml0ZSgKICAgICAgICAgICAgJEZJTEUsCiAgICAgICAgICAgICJceEQwXHhDRlx4MTFceEUwXHhBMVx4QjFceDFBXHhFMSIKICAgICAgICAgICAgLiAiXHgwMFx4MDBceDAwXHgwMCIKICAgICAgICAgICAgLiAiXHgwMFx4MDBceDAwXHgwMCIKICAgICAgICAgICAgLiAiXHgwMFx4MDBceDAwXHgwMCIKICAgICAgICAgICAgLiAiXHgwMFx4MDBceDAwXHgwMCIKICAgICAgICAgICAgLiBwYWNrKCJ2IiwgMHgzYikKICAgICAgICAgICAgLiBwYWNrKCJ2IiwgMHgwMykKICAgICAgICAgICAgLiBwYWNrKCJ2IiwgLTIpCiAgICAgICAgICAgIC4gcGFjaygidiIsIDkpCiAgICAgICAgICAgIC4gcGFjaygidiIsIDYpCiAgICAgICAgICAgIC4gcGFjaygidiIsIDApCiAgICAgICAgICAgIC4gIlx4MDBceDAwXHgwMFx4MDAiCiAgICAgICAgICAgIC4gIlx4MDBceDAwXHgwMFx4MDAiCiAgICAgICAgICAgIC4gcGFjaygiViIsICRpQmRDbnQpCiAgICAgICAgICAgIC4gcGFjaygiViIsICRpQkJjbnQrJGlTQkRjbnQpIC8vUk9PVCBTVEFSVAogICAgICAgICAgICAuIHBhY2soIlYiLCAwKQogICAgICAgICAgICAuIHBhY2soIlYiLCAweDEwMDApCiAgICAgICAgICAgIC4gcGFjaygiViIsICRpU0JEY250ID8gMCA6IC0yKSAvL1NtYWxsIEJsb2NrIERlcG90CiAgICAgICAgICAgIC4gcGFjaygiViIsICRpU0JEY250KQogICAgICAgICk7CiAgICAgICAgLy8gRXh0cmEgQkRMaXN0IFN0YXJ0LCBDb3VudAogICAgICAgIGlmICgkaUJkQ250IDwgJGkxc3RCZEwpIHsKICAgICAgICAgICAgZndyaXRlKAogICAgICAgICAgICAgICAgJEZJTEUsCiAgICAgICAgICAgICAgICBwYWNrKCJWIiwgLTIpIC8vIEV4dHJhIEJETGlzdCBTdGFydAogICAgICAgICAgICAgICAgLiBwYWNrKCJWIiwgMCkvLyBFeHRyYSBCRExpc3QgQ291bnQKICAgICAgICAgICAgKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBmd3JpdGUoJEZJTEUsIHBhY2soIlYiLCAkaUFsbCskaUJkQ250KSAuIHBhY2soIlYiLCAkaUJkRXhMKSk7CiAgICAgICAgfQoKICAgICAgICAvLyBCRExpc3QKICAgICAgICBmb3IgKCRpID0gMDsgJGkgPCAkaTFzdEJkTCAmJiAkaSA8ICRpQmRDbnQ7ICsrJGkpIHsKICAgICAgICAgICAgZndyaXRlKCRGSUxFLCBwYWNrKCJWIiwgJGlBbGwrJGkpKTsKICAgICAgICB9CiAgICAgICAgaWYgKCRpIDwgJGkxc3RCZEwpIHsKICAgICAgICAgICAgJGpCID0gJGkxc3RCZEwgLSAkaTsKICAgICAgICAgICAgZm9yICgkaiA9IDA7ICRqIDwgJGpCOyArKyRqKSB7CiAgICAgICAgICAgICAgICBmd3JpdGUoJEZJTEUsIChwYWNrKCJWIiwgLTEpKSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgogICAgLyoqCiAgICAqIFNhdmluZyBiaWcgZGF0YSAoUFBTJ3Mgd2l0aCBkYXRhIGJpZ2dlciB0aGFuIFBIUEV4Y2VsX1NoYXJlZF9PTEU6Ok9MRV9EQVRBX1NJWkVfU01BTEwpCiAgICAqCiAgICAqIEBhY2Nlc3MgcHVibGljCiAgICAqIEBwYXJhbSBpbnRlZ2VyICRpU3RCbGsKICAgICogQHBhcmFtIGFycmF5ICYkcmFMaXN0IFJlZmVyZW5jZSB0byBhcnJheSBvZiBQUFMncwogICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBfc2F2ZUJpZ0RhdGEoJGlTdEJsaywgJiRyYUxpc3QpCiAgICB7CiAgICAgICAgJEZJTEUgPSAkdGhpcy0+X0ZJTEVIXzsKCiAgICAgICAgLy8gY3ljbGUgdGhyb3VnaCBQUFMncwogICAgICAgICRpQ291bnQgPSBjb3VudCgkcmFMaXN0KTsKICAgICAgICBmb3IgKCRpID0gMDsgJGkgPCAkaUNvdW50OyArKyRpKSB7CiAgICAgICAgICAgIGlmICgkcmFMaXN0WyRpXS0+VHlwZSAhPSBQSFBFeGNlbF9TaGFyZWRfT0xFOjpPTEVfUFBTX1RZUEVfRElSKSB7CiAgICAgICAgICAgICAgICAkcmFMaXN0WyRpXS0+U2l6ZSA9ICRyYUxpc3RbJGldLT5fRGF0YUxlbigpOwogICAgICAgICAgICAgICAgaWYgKCgkcmFMaXN0WyRpXS0+U2l6ZSA+PSBQSFBFeGNlbF9TaGFyZWRfT0xFOjpPTEVfREFUQV9TSVpFX1NNQUxMKSB8fCAoKCRyYUxpc3RbJGldLT5UeXBlID09IFBIUEV4Y2VsX1NoYXJlZF9PTEU6Ok9MRV9QUFNfVFlQRV9ST09UKSAmJiBpc3NldCgkcmFMaXN0WyRpXS0+X2RhdGEpKSkgewogICAgICAgICAgICAgICAgICAgIC8vIFdyaXRlIERhdGEKICAgICAgICAgICAgICAgICAgICAvL2lmIChpc3NldCgkcmFMaXN0WyRpXS0+X1BQU19GSUxFKSkgewogICAgICAgICAgICAgICAgICAgIC8vICAgICRpTGVuID0gMDsKICAgICAgICAgICAgICAgICAgICAvLyAgICBmc2VlaygkcmFMaXN0WyRpXS0+X1BQU19GSUxFLCAwKTsgLy8gVG8gVGhlIFRvcAogICAgICAgICAgICAgICAgICAgIC8vICAgIHdoaWxlICgkc0J1ZmYgPSBmcmVhZCgkcmFMaXN0WyRpXS0+X1BQU19GSUxFLCA0MDk2KSkgewogICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAkaUxlbiArPSBzdHJsZW4oJHNCdWZmKTsKICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgZndyaXRlKCRGSUxFLCAkc0J1ZmYpOwogICAgICAgICAgICAgICAgICAgIC8vICAgIH0KICAgICAgICAgICAgICAgICAgICAvL30gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZ3cml0ZSgkRklMRSwgJHJhTGlzdFskaV0tPl9kYXRhKTsKICAgICAgICAgICAgICAgICAgICAvL30KCiAgICAgICAgICAgICAgICAgICAgaWYgKCRyYUxpc3RbJGldLT5TaXplICUgJHRoaXMtPl9CSUdfQkxPQ0tfU0laRSkgewogICAgICAgICAgICAgICAgICAgICAgICBmd3JpdGUoJEZJTEUsIHN0cl9yZXBlYXQoIlx4MDAiLCAkdGhpcy0+X0JJR19CTE9DS19TSVpFIC0gKCRyYUxpc3RbJGldLT5TaXplICUgJHRoaXMtPl9CSUdfQkxPQ0tfU0laRSkpKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgLy8gU2V0IEZvciBQUFMKICAgICAgICAgICAgICAgICAgICAkcmFMaXN0WyRpXS0+X1N0YXJ0QmxvY2sgPSAkaVN0QmxrOwogICAgICAgICAgICAgICAgICAgICRpU3RCbGsgKz0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIChmbG9vcigkcmFMaXN0WyRpXS0+U2l6ZSAvICR0aGlzLT5fQklHX0JMT0NLX1NJWkUpICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoKCRyYUxpc3RbJGldLT5TaXplICUgJHRoaXMtPl9CSUdfQkxPQ0tfU0laRSk\/IDE6IDApKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8vIENsb3NlIGZpbGUgZm9yIGVhY2ggUFBTLCBhbmQgdW5saW5rIGl0CiAgICAgICAgICAgICAgICAvL2lmIChpc3NldCgkcmFMaXN0WyRpXS0+X1BQU19GSUxFKSkgewogICAgICAgICAgICAgICAgLy8gICAgZmNsb3NlKCRyYUxpc3RbJGldLT5fUFBTX0ZJTEUpOwogICAgICAgICAgICAgICAgLy8gICAgJHJhTGlzdFskaV0tPl9QUFNfRklMRSA9IG51bGw7CiAgICAgICAgICAgICAgICAvLyAgICB1bmxpbmsoJHJhTGlzdFskaV0tPl90bXBfZmlsZW5hbWUpOwogICAgICAgICAgICAgICAgLy99CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgogICAgLyoqCiAgICAqIGdldCBzbWFsbCBkYXRhIChQUFMncyB3aXRoIGRhdGEgc21hbGxlciB0aGFuIFBIUEV4Y2VsX1NoYXJlZF9PTEU6Ok9MRV9EQVRBX1NJWkVfU01BTEwpCiAgICAqCiAgICAqIEBhY2Nlc3MgcHVibGljCiAgICAqIEBwYXJhbSBhcnJheSAmJHJhTGlzdCBSZWZlcmVuY2UgdG8gYXJyYXkgb2YgUFBTJ3MKICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gX21ha2VTbWFsbERhdGEoJiRyYUxpc3QpCiAgICB7CiAgICAgICAgJHNSZXMgPSAnJzsKICAgICAgICAkRklMRSA9ICR0aGlzLT5fRklMRUhfOwogICAgICAgICRpU21CbGsgPSAwOwoKICAgICAgICAkaUNvdW50ID0gY291bnQoJHJhTGlzdCk7CiAgICAgICAgZm9yICgkaSA9IDA7ICRpIDwgJGlDb3VudDsgKyskaSkgewogICAgICAgICAgICAvLyBNYWtlIFNCRCwgc21hbGwgZGF0YSBzdHJpbmcKICAgICAgICAgICAgaWYgKCRyYUxpc3RbJGldLT5UeXBlID09IFBIUEV4Y2VsX1NoYXJlZF9PTEU6Ok9MRV9QUFNfVFlQRV9GSUxFKSB7CiAgICAgICAgICAgICAgICBpZiAoJHJhTGlzdFskaV0tPlNpemUgPD0gMCkgewogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYgKCRyYUxpc3RbJGldLT5TaXplIDwgUEhQRXhjZWxfU2hhcmVkX09MRTo6T0xFX0RBVEFfU0laRV9TTUFMTCkgewogICAgICAgICAgICAgICAgICAgICRpU21iQ250ID0gZmxvb3IoJHJhTGlzdFskaV0tPlNpemUgLyAkdGhpcy0+X1NNQUxMX0JMT0NLX1NJWkUpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICgoJHJhTGlzdFskaV0tPlNpemUgJSAkdGhpcy0+X1NNQUxMX0JMT0NLX1NJWkUpPyAxOiAwKTsKICAgICAgICAgICAgICAgICAgICAvLyBBZGQgdG8gU0JECiAgICAgICAgICAgICAgICAgICAgJGpCID0gJGlTbWJDbnQgLSAxOwogICAgICAgICAgICAgICAgICAgIGZvciAoJGogPSAwOyAkaiA8ICRqQjsgKyskaikgewogICAgICAgICAgICAgICAgICAgICAgICBmd3JpdGUoJEZJTEUsIHBhY2soIlYiLCAkaiskaVNtQmxrKzEpKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZndyaXRlKCRGSUxFLCBwYWNrKCJWIiwgLTIpKTsKCiAgICAgICAgICAgICAgICAgICAgLy8vLyBBZGQgdG8gRGF0YSBTdHJpbmcodGhpcyB3aWxsIGJlIHdyaXR0ZW4gZm9yIFJvb3RFbnRyeSkKICAgICAgICAgICAgICAgICAgICAvL2lmICgkcmFMaXN0WyRpXS0+X1BQU19GSUxFKSB7CiAgICAgICAgICAgICAgICAgICAgLy8gICAgZnNlZWsoJHJhTGlzdFskaV0tPl9QUFNfRklMRSwgMCk7IC8vIFRvIFRoZSBUb3AKICAgICAgICAgICAgICAgICAgICAvLyAgICB3aGlsZSAoJHNCdWZmID0gZnJlYWQoJHJhTGlzdFskaV0tPl9QUFNfRklMRSwgNDA5NikpIHsKICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgJHNSZXMgLj0gJHNCdWZmOwogICAgICAgICAgICAgICAgICAgIC8vICAgIH0KICAgICAgICAgICAgICAgICAgICAvL30gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRzUmVzIC49ICRyYUxpc3RbJGldLT5fZGF0YTsKICAgICAgICAgICAgICAgICAgICAvL30KICAgICAgICAgICAgICAgICAgICBpZiAoJHJhTGlzdFskaV0tPlNpemUgJSAkdGhpcy0+X1NNQUxMX0JMT0NLX1NJWkUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHNSZXMgLj0gc3RyX3JlcGVhdCgiXHgwMCIsICR0aGlzLT5fU01BTExfQkxPQ0tfU0laRSAtICgkcmFMaXN0WyRpXS0+U2l6ZSAlICR0aGlzLT5fU01BTExfQkxPQ0tfU0laRSkpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAvLyBTZXQgZm9yIFBQUwogICAgICAgICAgICAgICAgICAgICRyYUxpc3RbJGldLT5fU3RhcnRCbG9jayA9ICRpU21CbGs7CiAgICAgICAgICAgICAgICAgICAgJGlTbUJsayArPSAkaVNtYkNudDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAkaVNiQ250ID0gZmxvb3IoJHRoaXMtPl9CSUdfQkxPQ0tfU0laRSAvIFBIUEV4Y2VsX1NoYXJlZF9PTEU6Ok9MRV9MT05HX0lOVF9TSVpFKTsKICAgICAgICBpZiAoJGlTbUJsayAlICRpU2JDbnQpIHsKICAgICAgICAgICAgJGlCID0gJGlTYkNudCAtICgkaVNtQmxrICUgJGlTYkNudCk7CiAgICAgICAgICAgIGZvciAoJGkgPSAwOyAkaSA8ICRpQjsgKyskaSkgewogICAgICAgICAgICAgICAgZndyaXRlKCRGSUxFLCBwYWNrKCJWIiwgLTEpKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gJHNSZXM7CiAgICB9CgogICAgLyoqCiAgICAqIFNhdmVzIGFsbCB0aGUgUFBTJ3MgV0tzCiAgICAqCiAgICAqIEBhY2Nlc3MgcHVibGljCiAgICAqIEBwYXJhbSBhcnJheSAkcmFMaXN0IFJlZmVyZW5jZSB0byBhbiBhcnJheSB3aXRoIGFsbCBQUFMncwogICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBfc2F2ZVBwcygmJHJhTGlzdCkKICAgIHsKICAgICAgICAvLyBTYXZlIGVhY2ggUFBTIFdLCiAgICAgICAgJGlDID0gY291bnQoJHJhTGlzdCk7CiAgICAgICAgZm9yICgkaSA9IDA7ICRpIDwgJGlDOyArKyRpKSB7CiAgICAgICAgICAgIGZ3cml0ZSgkdGhpcy0+X0ZJTEVIXywgJHJhTGlzdFskaV0tPl9nZXRQcHNXaygpKTsKICAgICAgICB9CiAgICAgICAgLy8gQWRqdXN0IGZvciBCbG9jawogICAgICAgICRpQ250ID0gY291bnQoJHJhTGlzdCk7CiAgICAgICAgJGlCQ250ID0gJHRoaXMtPl9CSUdfQkxPQ0tfU0laRSAvIFBIUEV4Y2VsX1NoYXJlZF9PTEU6Ok9MRV9QUFNfU0laRTsKICAgICAgICBpZiAoJGlDbnQgJSAkaUJDbnQpIHsKICAgICAgICAgICAgZndyaXRlKCR0aGlzLT5fRklMRUhfLCBzdHJfcmVwZWF0KCJceDAwIiwgKCRpQkNudCAtICgkaUNudCAlICRpQkNudCkpICogUEhQRXhjZWxfU2hhcmVkX09MRTo6T0xFX1BQU19TSVpFKSk7CiAgICAgICAgfQogICAgfQoKICAgIC8qKgogICAgKiBTYXZpbmcgQmlnIEJsb2NrIERlcG90CiAgICAqCiAgICAqIEBhY2Nlc3MgcHVibGljCiAgICAqIEBwYXJhbSBpbnRlZ2VyICRpU2JkU2l6ZQogICAgKiBAcGFyYW0gaW50ZWdlciAkaUJzaXplCiAgICAqIEBwYXJhbSBpbnRlZ2VyICRpUHBzQ250CiAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIF9zYXZlQmJkKCRpU2JkU2l6ZSwgJGlCc2l6ZSwgJGlQcHNDbnQpCiAgICB7CiAgICAgICAgJEZJTEUgPSAkdGhpcy0+X0ZJTEVIXzsKICAgICAgICAvLyBDYWxjdWxhdGUgQmFzaWMgU2V0dGluZwogICAgICAgICRpQmJDbnQgPSAkdGhpcy0+X0JJR19CTE9DS19TSVpFIC8gUEhQRXhjZWxfU2hhcmVkX09MRTo6T0xFX0xPTkdfSU5UX1NJWkU7CiAgICAgICAgJGkxc3RCZEwgPSAoJHRoaXMtPl9CSUdfQkxPQ0tfU0laRSAtIDB4NEMpIC8gUEhQRXhjZWxfU2hhcmVkX09MRTo6T0xFX0xPTkdfSU5UX1NJWkU7CgogICAgICAgICRpQmRFeEwgPSAwOwogICAgICAgICRpQWxsID0gJGlCc2l6ZSArICRpUHBzQ250ICsgJGlTYmRTaXplOwogICAgICAgICRpQWxsVyA9ICRpQWxsOwogICAgICAgICRpQmRDbnRXID0gZmxvb3IoJGlBbGxXIC8gJGlCYkNudCkgKyAoKCRpQWxsVyAlICRpQmJDbnQpPyAxOiAwKTsKICAgICAgICAkaUJkQ250ID0gZmxvb3IoKCRpQWxsICsgJGlCZENudFcpIC8gJGlCYkNudCkgKyAoKCgkaUFsbFcrJGlCZENudFcpICUgJGlCYkNudCk\/IDE6IDApOwogICAgICAgIC8vIENhbGN1bGF0ZSBCRCBjb3VudAogICAgICAgIGlmICgkaUJkQ250ID4kaTFzdEJkTCkgewogICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgKyskaUJkRXhMOwogICAgICAgICAgICAgICAgKyskaUFsbFc7CiAgICAgICAgICAgICAgICAkaUJkQ250VyA9IGZsb29yKCRpQWxsVyAvICRpQmJDbnQpICsgKCgkaUFsbFcgJSAkaUJiQ250KT8gMTogMCk7CiAgICAgICAgICAgICAgICAkaUJkQ250ID0gZmxvb3IoKCRpQWxsVyArICRpQmRDbnRXKSAvICRpQmJDbnQpICsgKCgoJGlBbGxXKyRpQmRDbnRXKSAlICRpQmJDbnQpPyAxOiAwKTsKICAgICAgICAgICAgICAgIGlmICgkaUJkQ250IDw9ICgkaUJkRXhMKiRpQmJDbnQrICRpMXN0QmRMKSkgewogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAvLyBNYWtpbmcgQkQKICAgICAgICAvLyBTZXQgZm9yIFNCRAogICAgICAgIGlmICgkaVNiZFNpemUgPiAwKSB7CiAgICAgICAgICAgIGZvciAoJGkgPSAwOyAkaSA8ICgkaVNiZFNpemUgLSAxKTsgKyskaSkgewogICAgICAgICAgICAgICAgZndyaXRlKCRGSUxFLCBwYWNrKCJWIiwgJGkrMSkpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGZ3cml0ZSgkRklMRSwgcGFjaygiViIsIC0yKSk7CiAgICAgICAgfQogICAgICAgIC8vIFNldCBmb3IgQgogICAgICAgIGZvciAoJGkgPSAwOyAkaSA8ICgkaUJzaXplIC0gMSk7ICsrJGkpIHsKICAgICAgICAgICAgZndyaXRlKCRGSUxFLCBwYWNrKCJWIiwgJGkrJGlTYmRTaXplKzEpKTsKICAgICAgICB9CiAgICAgICAgZndyaXRlKCRGSUxFLCBwYWNrKCJWIiwgLTIpKTsKCiAgICAgICAgLy8gU2V0IGZvciBQUFMKICAgICAgICBmb3IgKCRpID0gMDsgJGkgPCAoJGlQcHNDbnQgLSAxKTsgKyskaSkgewogICAgICAgICAgICBmd3JpdGUoJEZJTEUsIHBhY2soIlYiLCAkaSskaVNiZFNpemUrJGlCc2l6ZSsxKSk7CiAgICAgICAgfQogICAgICAgIGZ3cml0ZSgkRklMRSwgcGFjaygiViIsIC0yKSk7CiAgICAgICAgLy8gU2V0IGZvciBCQkQgaXRzZWxmICggMHhGRkZGRkZGRCA6IEJCRCkKICAgICAgICBmb3IgKCRpID0gMDsgJGkgPCAkaUJkQ250OyArKyRpKSB7CiAgICAgICAgICAgIGZ3cml0ZSgkRklMRSwgcGFjaygiViIsIDB4RkZGRkZGRkQpKTsKICAgICAgICB9CiAgICAgICAgLy8gU2V0IGZvciBFeHRyYUJETGlzdAogICAgICAgIGZvciAoJGkgPSAwOyAkaSA8ICRpQmRFeEw7ICsrJGkpIHsKICAgICAgICAgICAgZndyaXRlKCRGSUxFLCBwYWNrKCJWIiwgMHhGRkZGRkZGQykpOwogICAgICAgIH0KICAgICAgICAvLyBBZGp1c3QgZm9yIEJsb2NrCiAgICAgICAgaWYgKCgkaUFsbFcgKyAkaUJkQ250KSAlICRpQmJDbnQpIHsKICAgICAgICAgICAgJGlCbG9jayA9ICgkaUJiQ250IC0gKCgkaUFsbFcgKyAkaUJkQ250KSAlICRpQmJDbnQpKTsKICAgICAgICAgICAgZm9yICgkaSA9IDA7ICRpIDwgJGlCbG9jazsgKyskaSkgewogICAgICAgICAgICAgICAgZndyaXRlKCRGSUxFLCBwYWNrKCJWIiwgLTEpKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAvLyBFeHRyYSBCRExpc3QKICAgICAgICBpZiAoJGlCZENudCA+ICRpMXN0QmRMKSB7CiAgICAgICAgICAgICRpTj0wOwogICAgICAgICAgICAkaU5iPTA7CiAgICAgICAgICAgIGZvciAoJGkgPSAkaTFzdEJkTDsgJGkgPCAkaUJkQ250OyAkaSsrLCArKyRpTikgewogICAgICAgICAgICAgICAgaWYgKCRpTiA+PSAoJGlCYkNudCAtIDEpKSB7CiAgICAgICAgICAgICAgICAgICAgJGlOID0gMDsKICAgICAgICAgICAgICAgICAgICArKyRpTmI7CiAgICAgICAgICAgICAgICAgICAgZndyaXRlKCRGSUxFLCBwYWNrKCJWIiwgJGlBbGwrJGlCZENudCskaU5iKSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBmd3JpdGUoJEZJTEUsIHBhY2soIlYiLCAkaUJzaXplKyRpU2JkU2l6ZSskaVBwc0NudCskaSkpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICgoJGlCZENudC0kaTFzdEJkTCkgJSAoJGlCYkNudC0xKSkgewogICAgICAgICAgICAgICAgJGlCID0gKCRpQmJDbnQgLSAxKSAtICgoJGlCZENudCAtICRpMXN0QmRMKSAlICgkaUJiQ250IC0gMSkpOwogICAgICAgICAgICAgICAgZm9yICgkaSA9IDA7ICRpIDwgJGlCOyArKyRpKSB7CiAgICAgICAgICAgICAgICAgICAgZndyaXRlKCRGSUxFLCBwYWNrKCJWIiwgLTEpKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBmd3JpdGUoJEZJTEUsIHBhY2soIlYiLCAtMikpOwogICAgICAgIH0KICAgIH0KfQo=",
    "size": "17351"
}