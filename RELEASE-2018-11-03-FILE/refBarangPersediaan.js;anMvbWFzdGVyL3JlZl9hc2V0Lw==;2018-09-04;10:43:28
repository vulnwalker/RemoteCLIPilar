{
    "namaFile": "js\/master\/ref_aset\/refBarangPersediaan.js",
    "lastUpdate": "2018-09-04+10:43:28.06",
    "contentFile": "dmFyIHJlZkJhcmFuZ1BlcnNlZGlhYW4gPSBuZXcgRGFmdGFyT2JqMih7DQogIHByZWZpeDogInJlZkJhcmFuZ1BlcnNlZGlhYW4iLA0KICB1cmw6ICJwYWdlcy5waHA\",
    "size": "25500"
}