{
    "namaFile": "js\/pengadaanpenerimaan\/Persediaan\/pemasukan.js",
    "lastUpdate": "2018-08-16+14:38:14.73",
    "contentFile": "\/IHl5ICsgMTkwMCA6IHl5Ow0KCSAgYnVsYW4gPSBidWxhbiArIDE7DQoJICBibG4gPSBidWxhbi50b1N0cmluZygpDQoJICBpZihibG4ubGVuZ3RoID09IDEpYmxuID0gIjAiK2JsbjsNCgkNCgkgIGUudmFsdWUgPSBoYXJpICsgJy0nKyBibG4gKyAnLScrIFRhaHVuICsiICIrIGggKyc6JysgbSArJzonKyBzOw0KCQ0KCSAgDQoJICBzZXRUaW1lb3V0KGZ1bmN0aW9uIG15RnVuY3Rpb24oKSB7cGVtYXN1a2FuLmphbSgpfSwxMDAwKTsNCgkgfSwNCgkNCgkgc2V0SmFtOiBmdW5jdGlvbiAoZSkgew0KCSAgCWUgPSBlIDwgMTAgPyAnMCcrIGUgOiBlOw0KCSAgCXJldHVybiBlOw0KCSB9LA0KCQ0KCUVkaXQ6ZnVuY3Rpb24oKXsNCgkJdmFyIG1lID0gdGhpczsNCgkJZXJybXNnID0gdGhpcy5DZWtDaGVja2JveCgpOw0KCQlpZihlcnJtc2cgPT0nJyl7IA0KCQkJdmFyIGJveCA9IHRoaXMuR2V0Q2J4Q2hlY2tlZCgpOw0KCQkJdmFyIGNvdmVyMSA9IHRoaXMucHJlZml4KydfZm9ybVViYWhjb3ZlcjInOw0KCQkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsNCgkJCWFkZENvdmVyUGFnZTIoY292ZXIxLDEsdHJ1ZSxmYWxzZSk7DQoJCQkkLmFqYXgoew0KCQkJCXR5cGU6J1BPU1QnLCANCgkJCQlkYXRhOiQoJyMnK3RoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLA0KCQkJCXVybDogdGhpcy51cmwrJyZ0aXBlPVBlbmdlY2VrYW5VYmFoJkNla1ViYWg9MScsDQoJCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CQkNCgkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkNCgkJCQkJZGVsRWxlbShjb3ZlcjEpOw0KCQkJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdhdXRvJzsNCgkJCQkJLy9kb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcikuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50Ow0KCQkJCQlpZihyZXNwLmVycj09Jycpew0KCQkJCQkJdmFyIGFGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocGVtYXN1a2FuLmZvcm1OYW1lKTsJCQ0KCQkJCQkJYUZvcm0uYWN0aW9uPSBwZW1hc3VrYW4udXJsKydfaW5zJllOPTInOy8vJz9PcD0nK29wKycmUGc9MiZpZHBycz1jZXRha19oYWwnOwkJDQoJCQkJCQlhRm9ybS50YXJnZXQ9J19ibGFuayc7DQoJCQkJCQlhRm9ybS5zdWJtaXQoKTsJDQoJCQkJCQlhRm9ybS50YXJnZXQ9Jyc7DQoJCQkJCX1lbHNlew0KCQkJCQkJYWxlcnQocmVzcC5lcnIpOw0KCQkJCQl9DQoJCQkgIAl9DQoJCQl9KTsNCgkJCQ0KCQkJDQoJCX1lbHNlew0KCQkJYWxlcnQoZXJybXNnKTsNCgkJfQ0KCQkNCgl9LA0KCQkNCglTaW1wYW46IGZ1bmN0aW9uKCl7DQoJCXZhciBtZT0gdGhpczsJDQoJCXRoaXMuT25FcnJvckNsb3NlID0gZmFsc2UJDQoJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7DQoJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyX3NpbXBhbnZhbGlkYXNpJzsNCgkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOwkNCgkJLyp0aGlzLnNlbmRSZXEoDQoJCQl0aGlzLnVybCwNCgkJCXsgaWRwcnM6IDAsIGRhZnRhclByb3NlczogbmV3IEFycmF5KCdzaW1wYW4nKX0sDQoJCQl0aGlzLmZvcm1EaWFsb2cpOyovDQoJCSQuYWpheCh7DQoJCQl0eXBlOidQT1NUJywgDQoJCQlkYXRhOiQoJyMnK3RoaXMucHJlZml4KydfZm9ybScpLnNlcmlhbGl6ZSgpLA0KCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9c2ltcGFuJywNCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJDQoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkJCQ0KCQkJCS8vZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsNCgkJCQlkZWxFbGVtKGNvdmVyKTsNCgkJCQlpZihyZXNwLmVycj09JycpewkJCQkJDQoJCQkJCWFsZXJ0KHJlc3AuY29udGVudC5hbGVydCk7CQ0KCQkJCQltZS5DbG9zZVZhbGlkYXNpKCk7DQoJCQkJCXBlbWFzdWthbi5yZWZyZXNoTGlzdCgpOw0KCQkJCX1lbHNlew0KCQkJCQlhbGVydChyZXNwLmVycik7DQoJCQkJfQ0KCQkgIAl9DQoJCX0pOw0KCX0sDQoJDQoJQ2V0YWtQZXJtb2hvbmFuOiBmdW5jdGlvbihpZG55YSwgRm9ybW55YT0ncGVtYXN1a2FuX2luc0Zvcm0nKXsNCgkNCgkJCQkNCgkJCXZhciBhRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKEZvcm1ueWEpOwkJDQoJCQlhRm9ybS5hY3Rpb249IHRoaXMudXJsKycmdGlwZT1DZXRha1Blcm1vaG9uYW4maWRueWE9JytpZG55YTsvLyc\\\",
    "size": "51742"
}