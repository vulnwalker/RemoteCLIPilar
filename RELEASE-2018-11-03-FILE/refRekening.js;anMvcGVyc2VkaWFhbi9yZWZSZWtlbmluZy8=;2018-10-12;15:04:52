{
    "namaFile": "js\/persediaan\/refRekening\/refRekening.js",
    "lastUpdate": "2018-10-12+15:04:52.70",
    "contentFile": "Ly8gdmFyIHJlZlJla2VuaW5nU2twZCA9IG5ldyBTa3BkQ2xzKHsKLy8gCXByZWZpeCA6ICdyZWZSZWtlbmluZ1NrcGQnLCBmb3JtTmFtZToncmVmUmVrZW5pbmdGb3JtJywKLy8KLy8gCXBpbGloQmlkYW5nQWZ0ZXIgOiBmdW5jdGlvbigpe3JlZlJla2VuaW5nLnJlZnJlc2hMaXN0KHRydWUpO30sCi8vIAlwaWxpaEtlbG9tcG9rQWZ0ZXIgOiBmdW5jdGlvbigpe3JlZlJla2VuaW5nLnJlZnJlc2hMaXN0KHRydWUpO30sCi8vIAlwaWxpaFN1YktlbG9tcG9rQWZ0ZXIgOiBmdW5jdGlvbigpe3JlZlJla2VuaW5nLnJlZnJlc2hMaXN0KHRydWUpO30sCi8vIAlwaWxpaFNla1N1YktlbG9tcG9rQWZ0ZXIgOiBmdW5jdGlvbigpe3JlZlJla2VuaW5nLnJlZnJlc2hMaXN0KHRydWUpO30KLy8gfSk7Cgp2YXIgcmVmUmVrZW5pbmcgPSBuZXcgRGFmdGFyT2JqMih7CglwcmVmaXggOiAncmVmUmVrZW5pbmcnLAoJdXJsIDogJ3BhZ2VzLnBocD9QZz1yZWZSZWtlbmluZycsCglmb3JtTmFtZSA6ICdyZWZSZWtlbmluZ0Zvcm0nLAoJbG9hZGluZzogZnVuY3Rpb24oKXsKCQkvL2FsZXJ0KCdsb2FkaW5nJyk7CgkJdGhpcy50b3BCYXJSZW5kZXIoKTsKCQl0aGlzLmZpbHRlclJlbmRlcigpOwoJCXRoaXMuZGFmdGFyUmVuZGVyKCk7CgkJdGhpcy5zdW1IYWxSZW5kZXIoKTsKCgl9LAoKCXdpbmRvd1Nob3c6IGZ1bmN0aW9uKCl7CgkJdmFyIG1lID0gdGhpczsKCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2NvdmVyJzsKCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOwoJCWFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsKCQkkLmFqYXgoewoJCQl0eXBlOidQT1NUJywKCQkJZGF0YTokKCcjJyt0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwKCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9d2luZG93c2hvdycsCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwoJCQkJaWYocmVzcC5lcnI9PScnKXsKCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcikuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50OwoJCQkJCW1lLmxvYWRpbmcoKTsKCQkJCX1lbHNlewoJCQkJCWFsZXJ0KHJlc3AuZXJyKTsKCQkJCQlkZWxFbGVtKGNvdmVyKTsKCQkJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdhdXRvJzsKCQkJCX0KCQkgIAl9CgkJfSk7Cgl9LAoKCVNpbXBhbl9rOiBmdW5jdGlvbigpewoJCXZhciBtZT0gdGhpczsKCQl2YXIgZXJyPScnOwoKCQl0aGlzLk9uRXJyb3JDbG9zZSA9IGZhbHNlCgkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsKCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1zaW1wYW5LQSc7CgkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOwoKCQkkLmFqYXgoewoJCQl0eXBlOidQT1NUJywKCQkJZGF0YTokKCcjJyt0aGlzLnByZWZpeCsnX2Zvcm0nKS5zZXJpYWxpemUoKSwKCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9c2ltcGFuX2snLAoJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsKCQkJCWRlbEVsZW0oY292ZXIpOwoKCQkJCWlmKHJlc3AuZXJyPT0nJyl7CgkJCQkJbWUuQ2xvc2UoKTsKCQkJCQltZS5yZWZyZXNoTGlzdCh0cnVlKQoJCQkJfWVsc2V7CgkJCQkJYWxlcnQocmVzcC5lcnIpOwoJCQkJfQoJCSAgCX0KCQl9KTsKCX0sCgoJU2ltcGFuX2w6IGZ1bmN0aW9uKCl7CgkJdmFyIG1lPSB0aGlzOwoJCXZhciBlcnI9Jyc7CgoJCXRoaXMuT25FcnJvckNsb3NlID0gZmFsc2UKCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOwoJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybXNpbXBhbktBJzsKCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CgoJCSQuYWpheCh7CgkJCXR5cGU6J1BPU1QnLAoJCQlkYXRhOiQoJyMnK3RoaXMucHJlZml4KydfZm9ybScpLnNlcmlhbGl6ZSgpLAoJCQl1cmw6IHRoaXMudXJsKycmdGlwZT1zaW1wYW5fbCcsCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwoJCQkJZGVsRWxlbShjb3Zlcik7CgoJCQkJaWYocmVzcC5lcnI9PScnKXsKCQkJCQltZS5DbG9zZSgpOwoJCQkJCW1lLnJlZnJlc2hMaXN0KHRydWUpCgkJCQl9ZWxzZXsKCQkJCQlhbGVydChyZXNwLmVycik7CgkJCQl9CgkJICAJfQoJCX0pOwoJfSwKCglTaW1wYW5fbTogZnVuY3Rpb24oKXsKCQl2YXIgbWU9IHRoaXM7CgkJdmFyIGVycj0nJzsKCgkJdGhpcy5PbkVycm9yQ2xvc2UgPSBmYWxzZQoJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7CgkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3Jtc2ltcGFuS0EnOwoJCWFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsKCgkJJC5hamF4KHsKCQkJdHlwZTonUE9TVCcsCgkJCWRhdGE6JCgnIycrdGhpcy5wcmVmaXgrJ19mb3JtJykuc2VyaWFsaXplKCksCgkJCXVybDogdGhpcy51cmwrJyZ0aXBlPXNpbXBhbl9tJywKCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CgkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CgkJCQlkZWxFbGVtKGNvdmVyKTsKCgkJCQlpZihyZXNwLmVycj09JycpewoJCQkJCW1lLkNsb3NlKCk7CgkJCQkJbWUucmVmcmVzaExpc3QodHJ1ZSkKCQkJCX1lbHNlewoJCQkJCWFsZXJ0KHJlc3AuZXJyKTsKCQkJCX0KCQkgIAl9CgkJfSk7Cgl9LAoKCglTaW1wYW5fbjogZnVuY3Rpb24oKXsKCQl2YXIgbWU9IHRoaXM7CgkJdmFyIGVycj0nJzsKCgkJdGhpcy5PbkVycm9yQ2xvc2UgPSBmYWxzZQoJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7CgkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3Jtc2ltcGFuS0EnOwoJCWFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsKCgkJJC5hamF4KHsKCQkJdHlwZTonUE9TVCcsCgkJCWRhdGE6JCgnIycrdGhpcy5wcmVmaXgrJ19mb3JtJykuc2VyaWFsaXplKCksCgkJCXVybDogdGhpcy51cmwrJyZ0aXBlPXNpbXBhbl9uJywKCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CgkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CgkJCQlkZWxFbGVtKGNvdmVyKTsKCgkJCQlpZihyZXNwLmVycj09JycpewoJCQkJCW1lLkNsb3NlKCk7CgkJCQkJbWUucmVmcmVzaExpc3QodHJ1ZSkKCQkJCX1lbHNlewoJCQkJCWFsZXJ0KHJlc3AuZXJyKTsKCQkJCX0KCQkgIAl9CgkJfSk7Cgl9LAoKCVNpbXBhbl9vOiBmdW5jdGlvbigpewoJCXZhciBtZT0gdGhpczsKCQl2YXIgZXJyPScnOwoKCQl0aGlzLk9uRXJyb3JDbG9zZSA9IGZhbHNlCgkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsKCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1zaW1wYW5LQSc7CgkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOwoKCQkkLmFqYXgoewoJCQl0eXBlOidQT1NUJywKCQkJZGF0YTokKCcjJyt0aGlzLnByZWZpeCsnX2Zvcm0nKS5zZXJpYWxpemUoKSwKCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9c2ltcGFuX24nLAoJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsKCQkJCWRlbEVsZW0oY292ZXIpOwoKCQkJCWlmKHJlc3AuZXJyPT0nJyl7CgkJCQkJbWUuQ2xvc2UoKTsKCQkJCQltZS5yZWZyZXNoTGlzdCh0cnVlKQoJCQkJfWVsc2V7CgkJCQkJYWxlcnQocmVzcC5lcnIpOwoJCQkJfQoJCSAgCX0KCQl9KTsKCX0sCgoJd2luZG93U2F2ZTogZnVuY3Rpb24oKXsKCQl2YXIgbWU9IHRoaXM7CgkJdmFyIGVycm1zZyA9IHRoaXMuQ2VrQ2hlY2tib3goKTsKCQlpZihlcnJtc2cgPT0nJyl7CgkJCXZhciBib3ggPSB0aGlzLkdldENieENoZWNrZWQoKTsKCQkJdGhpcy5pZHBpbGloID0gYm94LnZhbHVlOwoKCQkJdmFyIGNvdmVyID0gJ3JlZlJla2VuaW5nX2dldGRhdGEnOwoJCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CgkJCSQuYWpheCh7CgkJCQl1cmw6ICdwYWdlcy5waHA\/UGc9cmVmUmVrZW5pbmcmdGlwZT1nZXRkYXRhJmlkPScrdGhpcy5pZHBpbGloLAoJCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CgkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwoJCQkJCWRlbEVsZW0oY292ZXIpOwoJCQkJCWlmKHJlc3AuZXJyPT0nJyl7CgoJCQkJCQlpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna29kZV9yZWtlbmluZycpKWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdrb2RlX3Jla2VuaW5nJykudmFsdWU9cmVzcC5jb250ZW50LmtvZGVfcmVrZW5pbmc7CgkJCQkJCWlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdubV9yZWtlbmluZycpKWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdubV9yZWtlbmluZycpLnZhbHVlPXJlc3AuY29udGVudC5ubV9yZWtlbmluZzsKCgkJCQkJCW1lLndpbmRvd0Nsb3NlKCk7CgkJCQkJCW1lLndpbmRvd1NhdmVBZnRlcigpOwoJCQkJCX1lbHNlewoJCQkJCQlhbGVydChyZXNwLmVycikKCQkJCQl9CgkJCSAgCX0KCQkJfSk7CgkJfWVsc2V7CgkJCWFsZXJ0KGVycm1zZyk7CgkJfQoJfSwKCXdpbmRvd0Nsb3NlOiBmdW5jdGlvbigpewoJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2F1dG8nOwoJCWRlbEVsZW0odGhpcy5wcmVmaXgrJ19jb3ZlcicpOwoJfSwKCXdpbmRvd1NhdmVBZnRlcjogZnVuY3Rpb24oKXsKCgl9LAoKCUhhcHVzOmZ1bmN0aW9uKCl7CgoJCXZhciBtZSA9dGhpczsKCQlpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLnByZWZpeCsnX2ptbGNlaycpKXsKCQkJdmFyIGptbGNlayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMucHJlZml4Kydfam1sY2VrJykudmFsdWUgOwoJCX1lbHNlewoJCQl2YXIgam1sY2VrID0gJyc7CgkJfQoKCQlpZihqbWxjZWsgPT0wKXsKCQkJYWxlcnQoJ0RhdGEgQmVsdW0gRGlwaWxpaCEnKTsKCQl9ZWxzZXsKCQkJaWYoY29uZmlybSgnSGFwdXMgJytqbWxjZWsrJyBEYXRhID8nKSl7CgkJCQkvL2RvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7CgkJCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2hhcHVzY292ZXInOwoJCQkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOwoJCQkJJC5hamF4KHsKCQkJCQl0eXBlOidQT1NUJywKCQkJCQkvL2RhdGE6JCgnIycrdGhpcy5mb3JtTmFtZSkuc2VyaWFsaXplKCksCgkJCQkJZGF0YTokKCcjcmVmUmVrZW5pbmdfZm9ybScpLnNlcmlhbGl6ZSgpLAoJCQkJCXVybDogdGhpcy51cmwrJyZ0aXBlPWhhcHVzJywKCQkJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKCQkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwoJCQkJCQlkZWxFbGVtKGNvdmVyKTsKCQkJCQkJaWYocmVzcC5lcnI9PScnKXsKCQkJCQkJCW1lLkNsb3NlKCk7CgkJCQkJCQltZS5yZWZyZXNoTGlzdCh0cnVlKQoJCQkJCQl9ZWxzZXsKCQkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsKCQkJCQkJfQoKCQkJCSAgCX0KCQkJCX0pOwoKCQkJfQoJCX0KCX0sCgoJcGlsaWhLQSA6IGZ1bmN0aW9uKCl7Cgl2YXIgbWUgPSB0aGlzOwoJCSQuYWpheCh7CgkJICB1cmw6ICdwYWdlcy5waHA\/UGc9cmVmUmVrZW5pbmcmdGlwZT1waWxpaEtBJywKCQkgIHR5cGUgOiAnUE9TVCcsCgkJICBkYXRhOiQoJyNyZWZSZWtlbmluZ19mb3JtJykuc2VyaWFsaXplKCksCgkJICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CgkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsKCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRfa2InKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQua2I7CgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250X2tjJykuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50LmtjOwoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udF9rZCcpLmlubmVySFRNTCA9IHJlc3AuY29udGVudC5rZDsKCQkgIH0KCQl9KTsKCX0sCgoJcGlsaWhLQiA6IGZ1bmN0aW9uKCl7Cgl2YXIgbWUgPSB0aGlzOwoJCSQuYWpheCh7CgkJICB1cmw6ICdwYWdlcy5waHA\\/JykpewoJCQkJLy9kb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOwoJCQkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19oYXB1c2NvdmVyJzsKCQkJCWFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsKCQkJCSQuYWpheCh7CgkJCQkJdHlwZTonUE9TVCcsCgkJCQkJZGF0YTokKCcjJyt0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwKCQkJCQl1cmw6IHRoaXMudXJsKycmdGlwZT1oYXB1cycsCgkJCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CgkJCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsKCQkJCQkJZGVsRWxlbShjb3Zlcik7CgkJCQkJCWlmKHJlc3AuZXJyPT0nJyl7CgkJCQkJCQltZS5DbG9zZSgpOwoJCQkJCQkJbWUucmVmcmVzaExpc3QodHJ1ZSkKCQkJCQkJfWVsc2V7CgkJCQkJCQlhbGVydChyZXNwLmVycik7CgkJCQkJCX0KCgkJCQkgIAl9CgkJCQl9KTsKCgkJCX0KCQl9Cgl9LAoKCXJlZnJlc2hLQiA6IGZ1bmN0aW9uKGlkX0tCQmFydSl7Cgl2YXIgbWUgPSB0aGlzOyAvL2FsZXJ0KCd0ZXMnKTsJLy9hbGVydCh0aGlzLnByZWZpeCk7CgkJJC5hamF4KHsKCQkgIHVybDogJ3BhZ2VzLnBocD9QZz1yZWZSZWtlbmluZyZ0aXBlPXJlZnJlc2hLQiZpZF9LQkJhcnU9JytpZF9LQkJhcnUsCgkJICB0eXBlIDogJ1BPU1QnLAoJCSAgZGF0YTokKCcjcmVmUmVrZW5pbmdfZm9ybScpLnNlcmlhbGl6ZSgpLAoJCSAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewoJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250X2tiJykuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50LmtiOwoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udF9rYycpLmlubmVySFRNTCA9IHJlc3AuY29udGVudC5rYzsKCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRfa2QnKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQua2Q7CgkJLy8JbWUuZ2V0S29kZUIoKTsKCQkgIH0KCQl9KTsKCX0sCgoJcmVmcmVzaEtDIDogZnVuY3Rpb24oaWRfS0NCYXJ1KXsKCXZhciBtZSA9IHRoaXM7IC8vYWxlcnQoJ3RlcycpOwkvL2FsZXJ0KHRoaXMucHJlZml4KTsKCQkkLmFqYXgoewoJCSAgdXJsOiAncGFnZXMucGhwP1BnPXJlZlJla2VuaW5nJnRpcGU9cmVmcmVzaEtDJmlkX0tDQmFydT0nK2lkX0tDQmFydSwKCQkgIHR5cGUgOiAnUE9TVCcsCgkJICBkYXRhOiQoJyNyZWZSZWtlbmluZ19mb3JtJykuc2VyaWFsaXplKCksCgkJICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CgkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsKCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRfa2MnKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQudW5pdDsKCQkvLwltZS5nZXRLb2RlQigpOwoJCSAgfQoJCX0pOwoJfSwKCglyZWZyZXNoS0QgOiBmdW5jdGlvbihpZF9LREJhcnUpewoJdmFyIG1lID0gdGhpczsgLy9hbGVydCgndGVzJyk7CS8vYWxlcnQodGhpcy5wcmVmaXgpOwoJCSQuYWpheCh7CgkJICB1cmw6ICdwYWdlcy5waHA\/UGc9cmVmUmVrZW5pbmcmdGlwZT1yZWZyZXNoS0QmaWRfS0RCYXJ1PScraWRfS0RCYXJ1LAoJCSAgdHlwZSA6ICdQT1NUJywKCQkgIGRhdGE6JCgnI3JlZlJla2VuaW5nX2Zvcm0nKS5zZXJpYWxpemUoKSwKCQkgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udF9rZCcpLmlubmVySFRNTCA9IHJlc3AuY29udGVudC51bml0OwoJCW1lLmdldEtvZGVfbygpOwoJCSAgfQoJCX0pOwoJfSwKCglnZXRLb2RlX28gOiBmdW5jdGlvbigpewoJdmFyIG1lID0gdGhpczsgLy9hbGVydCgndGVzJyk7CS8vYWxlcnQodGhpcy5wcmVmaXgpOwoKCQkkLmFqYXgoewoJCSAgdXJsOiAncGFnZXMucGhwP1BnPXJlZlJla2VuaW5nJnRpcGU9Z2V0S29kZV9vJywKCQkgIHR5cGUgOiAnUE9TVCcsCgkJICAvL2RhdGE6JCgnI2FkbWluRm9ybScpLnNlcmlhbGl6ZSgpLAoJCSAgZGF0YTokKCcjcmVmUmVrZW5pbmdfZm9ybScpLnNlcmlhbGl6ZSgpLAoJCSAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewoJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdrZScpLnZhbHVlID0gcmVzcC5jb250ZW50LmtlOwoJCSAgfQoJCX0pOwoKCX0sCgoJQ2xvc2UyOmZ1bmN0aW9uKCl7Ly9hbGVydCh0aGlzLmVsQ292ZXIpOwoJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyS0InOwoJCWlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKSkgZGVsRWxlbShjb3Zlcik7CgkJaWYodGlwZT09bnVsbCl7CgkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2F1dG8nOwoJCX0KCX0sCgoJQ2xvc2UzOmZ1bmN0aW9uKCl7Ly9hbGVydCh0aGlzLmVsQ292ZXIpOwoJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyS0MnOwoJCWlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKSkgZGVsRWxlbShjb3Zlcik7CgkJaWYodGlwZT09bnVsbCl7CgkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2F1dG8nOwoJCX0KCX0sCgoJQ2xvc2U0OmZ1bmN0aW9uKCl7Ly9hbGVydCh0aGlzLmVsQ292ZXIpOwoJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyS0QnOwoJCWlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKSkgZGVsRWxlbShjb3Zlcik7CgkJaWYodGlwZT09bnVsbCl7CgkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2F1dG8nOwoJCX0KCX0sCgoJQ2xvc2U1OmZ1bmN0aW9uKCl7Ly9hbGVydCh0aGlzLmVsQ292ZXIpOwoJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyS0UnOwoJCWlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKSkgZGVsRWxlbShjb3Zlcik7CgkJaWYodGlwZT09bnVsbCl7CgkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2F1dG8nOwoJCX0KCX0sCgoJU2ltcGFuS0I6IGZ1bmN0aW9uKCl7CgkJdmFyIG1lPSB0aGlzOwoJCXZhciBlcnI9Jyc7CgoJCXRoaXMuT25FcnJvckNsb3NlID0gZmFsc2UKCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOwoJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybXNpbXBhbktCJzsKCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CgoJCSQuYWpheCh7CgkJCXR5cGU6J1BPU1QnLAoJCQlkYXRhOiQoJyMnK3RoaXMucHJlZml4KydfS0Jmb3JtJykuc2VyaWFsaXplKCksCgkJCXVybDogdGhpcy51cmwrJyZ0aXBlPXNpbXBhbktCJywKCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CgkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CgkJCQlkZWxFbGVtKGNvdmVyKTsKCgkJCQlpZihyZXNwLmVycj09JycpewoJCQkJCW1lLnJlZnJlc2hLQihyZXNwLmNvbnRlbnQpOwoJCQkJCW1lLkNsb3NlMigpOwoJCQkJfWVsc2V7CgkJCQkJYWxlcnQocmVzcC5lcnIpOwoJCQkJfQoJCSAgCX0KCQl9KTsKCgl9LAoKCVNpbXBhbktDOiBmdW5jdGlvbigpewoJCXZhciBtZT0gdGhpczsKCQl2YXIgZXJyPScnOwoKCQl0aGlzLk9uRXJyb3JDbG9zZSA9IGZhbHNlCgkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsKCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1zaW1wYW5LQyc7CgkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOwoKCQkkLmFqYXgoewoJCQl0eXBlOidQT1NUJywKCQkJZGF0YTokKCcjJyt0aGlzLnByZWZpeCsnX0tDZm9ybScpLnNlcmlhbGl6ZSgpLAoJCQl1cmw6IHRoaXMudXJsKycmdGlwZT1zaW1wYW5LQycsCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwoJCQkJZGVsRWxlbShjb3Zlcik7CgoJCQkJaWYocmVzcC5lcnI9PScnKXsKCQkJCQltZS5yZWZyZXNoS0MocmVzcC5jb250ZW50KTsKCQkJCQltZS5DbG9zZTMoKTsKCQkJCX1lbHNlewoJCQkJCWFsZXJ0KHJlc3AuZXJyKTsKCQkJCX0KCQkgIAl9CgkJfSk7Cgl9LAoKCVNpbXBhbktEOiBmdW5jdGlvbigpewoJCXZhciBtZT0gdGhpczsKCQl2YXIgZXJyPScnOwoKCQl0aGlzLk9uRXJyb3JDbG9zZSA9IGZhbHNlCgkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsKCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1zaW1wYW5LRCc7CgkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOwoKCQkkLmFqYXgoewoJCQl0eXBlOidQT1NUJywKCQkJZGF0YTokKCcjJyt0aGlzLnByZWZpeCsnX0tEZm9ybScpLnNlcmlhbGl6ZSgpLAoJCQl1cmw6IHRoaXMudXJsKycmdGlwZT1zaW1wYW5LRCcsCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwoJCQkJZGVsRWxlbShjb3Zlcik7CgoJCQkJaWYocmVzcC5lcnI9PScnKXsKCQkJCQltZS5yZWZyZXNoS0QocmVzcC5jb250ZW50KTsKCQkJCQltZS5DbG9zZTQoKTsKCQkJCX1lbHNlewoJCQkJCWFsZXJ0KHJlc3AuZXJyKTsKCQkJCX0KCQkgIAl9CgkJfSk7Cgl9LAoKCVNpbXBhbkVkaXQ6IGZ1bmN0aW9uKCl7CgkJdmFyIG1lPSB0aGlzOwoJCXRoaXMuT25FcnJvckNsb3NlID0gZmFsc2UKCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOwoJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybXNpbXBhbic7CgkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOwoJCS8qdGhpcy5zZW5kUmVxKAoJCQl0aGlzLnVybCwKCQkJeyBpZHByczogMCwgZGFmdGFyUHJvc2VzOiBuZXcgQXJyYXkoJ3NpbXBhbicpfSwKCQkJdGhpcy5mb3JtRGlhbG9nKTsqLwoJCSQuYWpheCh7CgkJCXR5cGU6J1BPU1QnLAoJCQlkYXRhOiQoJyNyZWZSZWtlbmluZ19mb3JtJykuc2VyaWFsaXplKCksCgkJCXVybDogdGhpcy51cmwrJyZ0aXBlPXNpbXBhbkVkaXQnLAoJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsKCQkJCWRlbEVsZW0oY292ZXIpOwoJCQkJLy9kb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcikuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50OwoJCQkJaWYocmVzcC5lcnI9PScnKXsKCQkJCQlhbGVydCgnRGF0YSBiZXJoYXNpbCBkaXNpbXBhbicpOwoJCQkJCW1lLkNsb3NlKCk7CgkJCQkJbWUucmVmcmVzaExpc3QodHJ1ZSk7CgkJCQkJbWUuQWZ0ZXJTaW1wYW4oKTsKCQkJCX0KCQkJCWVsc2V7CgkJCQkJYWxlcnQocmVzcC5lcnIpOwoJCQkJfQoJCSAgCX0KCQl9KTsKCX0sCgoJU2ltcGFuOiBmdW5jdGlvbigpewoJCXZhciBtZT0gdGhpczsKCQl0aGlzLk9uRXJyb3JDbG9zZSA9IGZhbHNlCgkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsKCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1zaW1wYW4nOwoJCWFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsKCQkvKnRoaXMuc2VuZFJlcSgKCQkJdGhpcy51cmwsCgkJCXsgaWRwcnM6IDAsIGRhZnRhclByb3NlczogbmV3IEFycmF5KCdzaW1wYW4nKX0sCgkJCXRoaXMuZm9ybURpYWxvZyk7Ki8KCQkkLmFqYXgoewoJCQl0eXBlOidQT1NUJywKCQkJZGF0YTokKCcjJyt0aGlzLnByZWZpeCsnX2Zvcm0nKS5zZXJpYWxpemUoKSwKCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9c2ltcGFuJywKCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CgkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CgkJCQlkZWxFbGVtKGNvdmVyKTsKCQkJCS8vZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsKCQkJCWlmKHJlc3AuZXJyPT0nJyl7CgkJCQkJbWUuQ2xvc2UoKTsKCQkJCQltZS5BZnRlclNpbXBhbigpOwoJCQkJfWVsc2V7CgkJCQkJYWxlcnQocmVzcC5lcnIpOwoJCQkJfQoJCSAgCX0KCQl9KTsKCX0sCgoJU2ltcGFuTWFwcGluZzogZnVuY3Rpb24oKXsKCQl2YXIgbWU9IHRoaXM7CgkJdGhpcy5PbkVycm9yQ2xvc2UgPSBmYWxzZQoJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7CgkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3Jtc2ltcGFuJzsKCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CgoJCSQuYWpheCh7CgkJCXR5cGU6J1BPU1QnLAoJCQlkYXRhOiQoJyMnK3RoaXMucHJlZml4KydfZm9ybScpLnNlcmlhbGl6ZSgpLAoJCQl1cmw6IHRoaXMudXJsKycmdGlwZT1zaW1wYW5NYXBwaW5nJywKCQkvLwl1cmw6IHRoaXMudXJsKycmdGlwZT1zaW1wYW5NYXBwaW5nJnRhbWJhaF9tYXBwaW5nPTAnLAoJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsKCgoKCQkJCWlmKHJlc3AuZXJyPT0nJyl7CgkJCQlhbGVydCgiRGF0YSBUZXJzaW1wYW4iKTsKCgkJCQlpZiAoY29uZmlybSgnSW5wdXQgTGFnaSA\/JykpIHsKCQkJCQkkLmFqYXgoewoJCQkJCXR5cGU6J1BPU1QnLAoJCQkJCWRhdGE6JCgnI3JlZlJla2VuaW5nRm9ybScpLnNlcmlhbGl6ZSgpLAoJCQkJCXVybDogdGhpcy51cmwrJyZ0aXBlPWZvcm1NYXBwaW5nJywKCQkJICAJCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKCQkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwoJCQkJCQlkZWxFbGVtKGNvdmVyKTsKCQkJCQkJaWYgKHJlc3AuZXJyID09JycpewoJCQkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2tvZGVfcmVrZW5pbmcnKS52YWx1ZSA9JycgOwoJCQkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25tX3Jla2VuaW5nJykudmFsdWUgPScnIDsKCQkJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdrb2RlX2FrdW4nKS52YWx1ZSA9JycgOwoJCQkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25hbWFfYWt1bicpLnZhbHVlID0nJyA7CgkJCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna29kZV9tYXBwaW5nMScpLnZhbHVlID0nJyA7CgkJCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbm1fbWFwcGluZzEnKS52YWx1ZSA9JycgOwoJCQkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2tvZGVfbWFwcGluZzInKS52YWx1ZSA9JycgOwoJCQkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25tX21hcHBpbmcyJykudmFsdWUgPScnIDsKCQkJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQ7CgoJCQkJCX1lbHNlewoJCQkJCQlhbGVydChyZXNwLmVycik7CgkJCQkJCWRlbEVsZW0oY292ZXIpOwoJCQkJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdhdXRvJzsKCQkJCQl9CgkJCSAgCX0KCQkJfSk7CgoKCQkJCX1lbHNlewoJCQkJCWRlbEVsZW0oY292ZXIpOwoJCQkJCW1lLkNsb3NlKCk7CgkJCQkJbWUuQWZ0ZXJTaW1wYW4oKTsKCQkJCX0KCgoJCQkJfS8qZWxzZXsKCQkJCQltZS5DbG9zZSgpOwoJCQkJCW1lLkFmdGVyU2ltcGFuKCk7CgkJCQl9Ki8KCQkgIAl9CgkJfSk7Cgl9CgoKCn0pOwo=",
    "size": "20783"
}