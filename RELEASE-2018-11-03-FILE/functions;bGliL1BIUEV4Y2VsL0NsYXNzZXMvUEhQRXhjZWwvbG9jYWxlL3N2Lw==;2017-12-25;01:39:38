{
    "namaFile": "lib\/PHPExcel\/Classes\/PHPExcel\/locale\/sv\/functions",
    "lastUpdate": "2017-12-25+01:39:38.00",
    "contentFile": "IyMNCiMjCUFkZC1pbiBhbmQgQXV0b21hdGlvbiBmdW5jdGlvbnMJCQlUaWxsw6RnZ3MtIG9jaCBhdXRvbWF0aXNlcmluZ3NmdW5rdGlvbmVyDQojIw0KR0VUUElWT1REQVRBCQk9IEjDhE1UQS5QSVZPVERBVEEJCSMjCVJldHVybmVyYXIgZGF0YSBzb20gbGFncmF0cyBpIGVuIHBpdm90dGFiZWxscmFwcG9ydA0KDQoNCiMjDQojIwlDdWJlIGZ1bmN0aW9ucwkJCQkJS3ViZnVua3Rpb25lcg0KIyMNCkNVQkVLUElNRU1CRVIJCT0gS1VCS1BJTUVETEVNCQkJIyMJUmV0dXJuZXJhciBuYW1uLCBlZ2Vuc2thcCBvY2ggbcOldHQgZsO2ciBlbiBLUEkgb2NoIHZpc2FyIG5hbW5ldCBvY2ggZWdlbnNrYXBlbiBpIGNlbGxlbi4gRW4gS1BJLCBlbGxlciBwcmVzdGFuZGFpbmRpa2F0b3IsIMOkciBldHQga3ZhbnRpZmllcmJhcnQgbcOldHQsIHQuZXguIG3DpW5hdGxpZyBicnV0dG92aW5zdCBlbGxlciBwZXJzb25hbG9tc8OkdHRuaW5nIHBlciBrdmFydGFsLCBzb20gYW52w6RuZHMgZsO2ciBhdHQgYW5hbHlzZXJhIGV0dCBmw7ZyZXRhZ3MgcmVzdWx0YXQuDQpDVUJFTUVNQkVSCQk9IEtVQk1FRExFTQkJCSMjCVJldHVybmVyYXIgZW4gbWVkbGVtIGVsbGVyIGV0dCBwYXIgaSBlbiBrdWJoaWVyYXJraS4gQW52w6RuZHMgZsO2ciBhdHQgdmVyaWZpZXJhIGF0dCBtZWRsZW1tZW4gZWxsZXIgcGFyZXQgZmlubnMgaSBrdWJlbi4NCkNVQkVNRU1CRVJQUk9QRVJUWQk9IEtVQk1FRExFTVNFR0VOU0tBUAkJIyMJUmV0dXJuZXJhciB2w6RyZGV0IGbDtnIgZW4gbWVkbGVtc2VnZW5za2FwIGkga3ViZW4uIEFudsOkbmRzIGbDtnIgYXR0IHZlcmlmaWVyYSBhdHQgZXR0IG1lZGxlbXNuYW1uIGZpbm5zIGkga3ViZW4sIHNhbXQgZsO2ciBhdHQgcmV0dXJuZXJhIGRlbiBhbmdpdm5hIGVnZW5za2FwZW4gZsO2ciBtZWRsZW1tZW4uDQpDVUJFUkFOS0VETUVNQkVSCT0gS1VCUkFOR09SRE5BRE1FRExFTQkJIyMJUmV0dXJuZXJhciBkZW4gbjp0ZSwgZWxsZXIgcmFuZ29yZG5hZGUsIG1lZGxlbW1lbiBpIGVuIHVwcHPDpHR0bmluZy4gQW52w6RuZHMgZsO2ciBhdHQgcmV0dXJuZXJhIGV0dCBlbGxlciBmbGVyYSBlbGVtZW50IGkgZW4gdXBwc8OkdHRuaW5nLCB0aWxsIGV4ZW1wZWx2aXMgZGVuIGLDpHN0YSBmw7Zyc8OkbGphcmVuIGVsbGVyIGRlIHRpbyBiw6RzdGEgZWxldmVybmEuDQpDVUJFU0VUCQkJPSBLVUJJTlNUw4RMTE5JTkcJCSMjCURlZmluaWVyYXIgZW4gYmVyw6RrbmFkIHVwcHPDpHR0bmluZyBtZWRsZW1tYXIgZWxsZXIgcGFyIGdlbm9tIGF0dCBza2lja2EgZXR0IGJlc3TDpG10IHV0dHJ5Y2sgdGlsbCBrdWJlbiBww6Ugc2VydmVybiwgc29tIHNrYXBhciB1cHBzw6R0dG5pbmdlbiBvY2ggc2VkYW4gcmV0dXJuZXJhciBkZW4gdGlsbCBNaWNyb3NvZnQgT2ZmaWNlIEV4Y2VsLg0KQ1VCRVNFVENPVU5UCQk9IEtVQklOU1TDhExMTklOR0FOVEFMCQkjIwlSZXR1cm5lcmFyIGFudGFsZXQgb2JqZWt0IGkgZW4gdXBwc8OkdHRuaW5nLg0KQ1VCRVZBTFVFCQk9IEtVQlbDhFJERQkJCSMjCVJldHVybmVyYXIgZXR0IG3DpG5nZHbDpHJkZSBmcsOlbiBlbiBrdWIuDQoNCg0KIyMNCiMjCURhdGFiYXNlIGZ1bmN0aW9ucwkJCQlEYXRhYmFzZnVua3Rpb25lcg0KIyMNCkRBVkVSQUdFCQk9IERNRURFTAkJCSMjCVJldHVybmVyYXIgbWVkZWx2w6RyZGV0IGF2IGRhdGFiYXNwb3N0ZXJuYQ0KRENPVU5UCQkJPSBEQU5UQUwJCQkjIwlSw6RrbmFyIGFudGFsZXQgY2VsbGVyIHNvbSBpbm5laMOlbGxlciB0YWwgaSBlbiBkYXRhYmFzDQpEQ09VTlRBCQkJPSBEQU5UQUxWCQkJIyMJUsOka25hciBpZnlsbGRhIGNlbGxlciBpIGVuIGRhdGFiYXMNCkRHRVQJCQk9IERIw4RNVEEJCQkjIwlIw6RtdGFyIGVuIGVuc3Rha2EgcG9zdCBmcsOlbiBlbiBkYXRhYmFzIHNvbSB1cHBmeWxsZXIgZGUgYW5naXZuYSB2aWxsa29yZW4NCkRNQVgJCQk9IERNQVgJCQkJIyMJUmV0dXJuZXJhciBkZXQgc3TDtnJzdGEgdsOkcmRldCBmcsOlbiBkYXRhYmFzcG9zdGVybmENCkRNSU4JCQk9IERNSU4JCQkJIyMJUmV0dXJuZXJhciBkZXQgbWluc3RhIHbDpHJkZXQgZnLDpW4gZGF0YWJhc3Bvc3Rlcm5hDQpEUFJPRFVDVAkJPSBEUFJPRFVLVAkJCSMjCU11bHRpcGxpY2VyYXIgdsOkcmRlbmEgaSBldHQgdmlzc3QgZsOkbHQgaSBwb3N0ZXIgc29tIHVwcGZ5bGxlciB2aWxsa29yZXQNCkRTVERFVgkJCT0gRFNUREFWCQkJIyMJVXBwc2thdHRhciBzdGFuZGFyZGF2dmlrZWxzZW4gYmFzZXJhdCBww6UgZXR0IHVydmFsIGF2IGRhdGFiYXNwb3N0ZXJuYQ0KRFNUREVWUAkJCT0gRFNUREFWUAkJCSMjCUJlcsOka25hciBzdGFuZGFyZGF2dmlrZWxzZW4gdXRpZnLDpW4gaGVsYSBwb3B1bGF0aW9uZW4gYXYgdmFsZGEgZGF0YWJhc3Bvc3Rlcg0KRFNVTQkJCT0gRFNVTU1BCQkJIyMJU3VtbWVyYXIgdGFsZW4gaSBrb2x1bW5mw6RsdCBpIGRhdGFiYXNwb3N0ZXIgc29tIHVwcGZ5bGxlciB2aWxsa29yZXQNCkRWQVIJCQk9IERWQVJJQU5TCQkJIyMJVXBwc2thdHRhciB2YXJpYW5zZW4gYmFzZXJhdCBww6UgZXR0IHVydmFsIGF2IGRhdGFiYXNwb3N0ZXJuYQ0KRFZBUlAJCQk9IERWQVJJQU5TUAkJCSMjCUJlcsOka25hciB2YXJpYW5zZW4gdXRpZnLDpW4gaGVsYSBwb3B1bGF0aW9uZW4gYXYgdmFsZGEgZGF0YWJhc3Bvc3Rlcg0KDQoNCiMjDQojIwlEYXRlIGFuZCB0aW1lIGZ1bmN0aW9ucwkJCQlUaWQtIG9jaCBkYXR1bWZ1bmt0aW9uZXINCiMjDQpEQVRFCQkJPSBEQVRVTQkJCQkjIwlSZXR1cm5lcmFyIGV0dCBzZXJpZW51bW1lciBmw7ZyIGV0dCB2aXNzdCBkYXR1bQ0KREFURVZBTFVFCQk9IERBVFVNVsOEUkRFCQkJIyMJS29udmVydGVyYXIgZXR0IGRhdHVtIGkgdGV4dGZvcm1hdCB0aWxsIGV0dCBzZXJpZW51bW1lcg0KREFZCQkJPSBEQUcJCQkJIyMJS29udmVydGVyYXIgZXR0IHNlcmllbnVtbWVyIHRpbGwgZGFnIGkgbcOlbmFkZW4NCkRBWVMzNjAJCQk9IERBR0FSMzYwCQkJIyMJQmVyw6RrbmFyIGFudGFsZXQgZGFnYXIgbWVsbGFuIHR2w6UgZGF0dW0gYmFzZXJhdCBww6UgZXR0IDM2MC1kYWdhcnPDpXINCkVEQVRFCQkJPSBFREFUVU0JCQkjIwlSZXR1cm5lcmFyIHNlcmllbnVtcmV0IGbDtnIgZXR0IGRhdHVtIHNvbSBpbmZhbGxlciBldHQgdmlzc3QgYW50YWwgbcOlbmFkZXIgZsO2cmUgZWxsZXIgZWZ0ZXIgc3RhcnRkYXR1bWV0DQpFT01PTlRICQkJPSBTTFVUTcOFTkFECQkJIyMJUmV0dXJuZXJhciBzZXJpZW51bXJldCBmw7ZyIHNpc3RhIGRhZ2VuIGkgbcOlbmFkZW4gZXR0IHZpc3N0IGFudGFsIG3DpW5hZGVyIHRpZGlnYXJlIGVsbGVyIHNlbmFyZQ0KSE9VUgkJCT0gVElNTUUJCQkJIyMJS29udmVydGVyYXIgZXR0IHNlcmllbnVtbWVyIHRpbGwgZW4gdGltbWUNCk1JTlVURQkJCT0gTUlOVVQJCQkJIyMJS29udmVydGVyYXIgZXR0IHNlcmllbnVtbWVyIHRpbGwgZW4gbWludXQNCk1PTlRICQkJPSBNw4VOQUQJCQkJIyMJS29udmVydGVyYXIgZXR0IHNlcmllbnVtbWVyIHRpbGwgZW4gbcOlbmFkDQpORVRXT1JLREFZUwkJPSBORVRUT0FSQkVUU0RBR0FSCQkjIwlSZXR1cm5lcmFyIGFudGFsZXQgaGVsYSBhcmJldHNkYWdhciBtZWxsYW4gdHbDpSBkYXR1bQ0KTk9XCQkJPSBOVQkJCQkjIwlSZXR1cm5lcmFyIHNlcmllbnVtcmV0IGbDtnIgZGFnZW5zIGRhdHVtIG9jaCBha3R1ZWxsIHRpZA0KU0VDT05ECQkJPSBTRUtVTkQJCQkjIwlLb252ZXJ0ZXJhciBldHQgc2VyaWVudW1tZXIgdGlsbCBlbiBzZWt1bmQNClRJTUUJCQk9IEtMT0NLU0xBRwkJCSMjCVJldHVybmVyYXIgc2VyaWVudW1yZXQgZsO2ciBlbiB2aXNzIHRpZA0KVElNRVZBTFVFCQk9IFRJRFbDhFJERQkJCSMjCUtvbnZlcnRlcmFyIGVuIHRpZCBpIHRleHRmb3JtYXQgdGlsbCBldHQgc2VyaWVudW1tZXINClRPREFZCQkJPSBJREFHCQkJCSMjCVJldHVybmVyYXIgc2VyaWVudW1yZXQgZsO2ciBkYWdlbnMgZGF0dW0NCldFRUtEQVkJCQk9IFZFQ0tPREFHCQkJIyMJS29udmVydGVyYXIgZXR0IHNlcmllbnVtbWVyIHRpbGwgZW4gZGFnIGkgdmVja2FuDQpXRUVLTlVNCQkJPSBWRUNLT05SCQkJIyMJS29udmVydGVyYXIgZXR0IHNlcmllbnVtbWVyIHRpbGwgZXR0IHZlY2tvbnVtbWVyDQpXT1JLREFZCQkJPSBBUkJFVFNEQUdBUgkJCSMjCVJldHVybmVyYXIgc2VyaWVudW1yZXQgZsO2ciBldHQgZGF0dW0gZXR0IHZpc3N0IGFudGFsIGFyYmV0c2RhZ2FyIHRpZGlnYXJlIGVsbGVyIHNlbmFyZQ0KWUVBUgkJCT0gw4VSCQkJCSMjCUtvbnZlcnRlcmFyIGV0dCBzZXJpZW51bW1lciB0aWxsIGV0dCDDpXINCllFQVJGUkFDCQk9IMOFUkRFTAkJCQkjIwlSZXR1cm5lcmFyIGVuIGRlbCBhdiBldHQgw6VyIHNvbSByZXByZXNlbnRlcmFyIGFudGFsZXQgaGVsYSBkYWdhciBtZWxsYW4gc3RhcnQtIG9jaCBzbHV0ZGF0dW0NCg0KDQojIw0KIyMJRW5naW5lZXJpbmcgZnVuY3Rpb25zCQkJCVRla25pc2thIGZ1bmt0aW9uZXINCiMjDQpCRVNTRUxJCQkJPSBCRVNTRUxJCQkJIyMJUmV0dXJuZXJhciBkZW4gbW9kaWZpZXJhZGUgQmVzc2VsLWZ1bmt0aW9uZW4gSW4oeCkNCkJFU1NFTEoJCQk9IEJFU1NFTEoJCQkjIwlSZXR1cm5lcmFyIEJlc3NlbC1mdW5rdGlvbmVuIEpuKHgpDQpCRVNTRUxLCQkJPSBCRVNTRUxLCQkJIyMJUmV0dXJuZXJhciBkZW4gbW9kaWZpZXJhZGUgQmVzc2VsLWZ1bmt0aW9uZW4gS24oeCkNCkJFU1NFTFkJCQk9IEJFU1NFTFkJCQkjIwlSZXR1cm5lcmFyIEJlc3NlbC1mdW5rdGlvbmVuIFluKHgpDQpCSU4yREVDCQkJPSBCSU4uVElMTC5ERUMJCQkjIwlPbXZhbmRsYXIgZXR0IGJpbsOkcnQgdGFsIHRpbGwgZGVjaW1hbHQNCkJJTjJIRVgJCQk9IEJJTi5USUxMLkhFWAkJCSMjCU9tdmFuZGxhciBldHQgYmluw6RydCB0YWwgdGlsbCBoZXhhZGVjaW1hbHQNCkJJTjJPQ1QJCQk9IEJJTi5USUxMLk9LVAkJCSMjCU9tdmFuZGxhciBldHQgYmluw6RydCB0YWwgdGlsbCBva3RhbHQNCkNPTVBMRVgJCQk9IEtPTVBMRVgJCQkjIwlPbXZhbmRsYXIgcmVlbGxhIG9jaCBpbWFnaW7DpHJhIGtvZWZmaWNpZW50ZXIgdGlsbCBldHQga29tcGxleHQgdGFsDQpDT05WRVJUCQkJPSBLT05WRVJURVJBCQkJIyMJT212YW5kbGFyIGV0dCB0YWwgZnLDpW4gZXR0IG3DpXR0c3lzdGVtIHRpbGwgZXR0IGFubmF0DQpERUMyQklOCQkJPSBERUMuVElMTC5CSU4JCQkjIwlPbXZhbmRsYXIgZXR0IGRlY2ltYWx0IHRhbCB0aWxsIGJpbsOkcnQNCkRFQzJIRVgJCQk9IERFQy5USUxMLkhFWAkJCSMjCU9tdmFuZGxhciBldHQgZGVjaW1hbHQgdGFsIHRpbGwgaGV4YWRlY2ltYWx0DQpERUMyT0NUCQkJPSBERUMuVElMTC5PS1QJCQkjIwlPbXZhbmRsYXIgZXR0IGRlY2ltYWx0IHRhbCB0aWxsIG9rdGFsdA0KREVMVEEJCQk9IERFTFRBCQkJCSMjCVRlc3RhciBvbSB0dsOlIHbDpHJkZW4gw6RyIGxpa2ENCkVSRgkJCT0gRkVMRgkJCQkjIwlSZXR1cm5lcmFyIGZlbGZ1bmt0aW9uZW4NCkVSRkMJCQk9IEZFTEZLCQkJCSMjCVJldHVybmVyYXIgZGVuIGtvbXBsZW1lbnTDpHJhIGZlbGZ1bmt0aW9uZW4NCkdFU1RFUAkJCT0gU0xTVEVHCQkJIyMJVGVzdGFyIG9tIGV0dCB0YWwgw6RyIHN0w7ZycmUgw6RuIGV0dCB0csO2c2tlbHbDpHJkZQ0KSEVYMkJJTgkJCT0gSEVYLlRJTEwuQklOCQkJIyMJT212YW5kbGFyIGV0dCBoZXhhZGVjaW1hbHQgdGFsIHRpbGwgYmluw6RydA0KSEVYMkRFQwkJCT0gSEVYLlRJTEwuREVDCQkJIyMJT212YW5kbGFyIGV0dCBoZXhhZGVjaW1hbHQgdGFsIHRpbGwgZGVjaW1hbHQNCkhFWDJPQ1QJCQk9IEhFWC5USUxMLk9LVAkJCSMjCU9tdmFuZGxhciBldHQgaGV4YWRlY2ltYWx0IHRhbCB0aWxsIG9rdGFsdA0KSU1BQlMJCQk9IElNQUJTCQkJCSMjCVJldHVybmVyYXIgYWJzb2x1dHbDpHJkZXQgKG1vZHVsdXMpIGbDtnIgZXR0IGtvbXBsZXh0IHRhbA0KSU1BR0lOQVJZCQk9IElNQUdJTsOEUgkJCSMjCVJldHVybmVyYXIgZGVuIGltYWdpbsOkcmEga29lZmZpY2llbnRlbiBmw7ZyIGV0dCBrb21wbGV4dCB0YWwNCklNQVJHVU1FTlQJCT0gSU1BUkdVTUVOVAkJCSMjCVJldHVybmVyYXIgZGV0IGtvbXBsZXhhIHRhbGV0cyBhcmd1bWVudCwgZW4gdmlua2VsIHV0dHJ5Y2t0IGkgcmFkaWFuZXINCklNQ09OSlVHQVRFCQk9IElNS09OSlVHQVQJCQkjIwlSZXR1cm5lcmFyIGRldCBrb21wbGV4YSB0YWxldHMga29uanVnYXQNCklNQ09TCQkJPSBJTUNPUwkJCQkjIwlSZXR1cm5lcmFyIGNvc2ludXMgZsO2ciBldHQga29tcGxleHQgdGFsDQpJTURJVgkJCT0gSU1ESVYJCQkJIyMJUmV0dXJuZXJhciBrdm90ZW4gZsO2ciB0dsOlIGtvbXBsZXhhIHRhbA0KSU1FWFAJCQk9IElNRVVQUEjDlkpUCQkJIyMJUmV0dXJuZXJhciBleHBvbmVudGVuIGbDtnIgZXR0IGtvbXBsZXh0IHRhbA0KSU1MTgkJCT0gSU1MTgkJCQkjIwlSZXR1cm5lcmFyIGRlbiBuYXR1cmxpZ2EgbG9nYXJpdG1lbiBmw7ZyIGV0dCBrb21wbGV4dCB0YWwNCklNTE9HMTAJCQk9IElNTE9HMTAJCQkjIwlSZXR1cm5lcmFyIDEwLWxvZ2FyaXRtZW4gZsO2ciBldHQga29tcGxleHQgdGFsDQpJTUxPRzIJCQk9IElNTE9HMgkJCSMjCVJldHVybmVyYXIgMi1sb2dhcml0bWVuIGbDtnIgZXR0IGtvbXBsZXh0IHRhbA0KSU1QT1dFUgkJCT0gSU1VUFBIw5ZKVAkJCSMjCVJldHVybmVyYXIgZXR0IGtvbXBsZXh0IHRhbCB1cHBow7ZqdCB0aWxsIGVuIGV4cG9uZW50DQpJTVBST0RVQ1QJCT0gSU1QUk9EVUtUCQkJIyMJUmV0dXJuZXJhciBwcm9kdWt0ZW4gYXYga29tcGxleGEgdGFsDQpJTVJFQUwJCQk9IElNUkVBTAkJCSMjCVJldHVybmVyYXIgZGVuIHJlZWxsYSBrb2VmZmljaWVudGVuIGbDtnIgZXR0IGtvbXBsZXh0IHRhbA0KSU1TSU4JCQk9IElNU0lOCQkJCSMjCVJldHVybmVyYXIgc2ludXMgZsO2ciBldHQga29tcGxleHQgdGFsDQpJTVNRUlQJCQk9IElNUk9UCQkJCSMjCVJldHVybmVyYXIga3ZhZHJhdHJvdGVuIGF2IGV0dCBrb21wbGV4dCB0YWwNCklNU1VCCQkJPSBJTURJRkYJCQkjIwlSZXR1cm5lcmFyIGRpZmZlcmVuc2VuIG1lbGxhbiB0dsOlIGtvbXBsZXhhIHRhbA0KSU1TVU0JCQk9IElNU1VNCQkJCSMjCVJldHVybmVyYXIgc3VtbWFuIGF2IGtvbXBsZXhhIHRhbA0KT0NUMkJJTgkJCT0gT0tULlRJTEwuQklOCQkJIyMJT212YW5kbGFyIGV0dCBva3RhbHQgdGFsIHRpbGwgYmluw6RydA0KT0NUMkRFQwkJCT0gT0tULlRJTEwuREVDCQkJIyMJT212YW5kbGFyIGV0dCBva3RhbHQgdGFsIHRpbGwgZGVjaW1hbHQNCk9DVDJIRVgJCQk9IE9LVC5USUxMLkhFWAkJCSMjCU9tdmFuZGxhciBldHQgb2t0YWx0IHRhbCB0aWxsIGhleGFkZWNpbWFsdA0KDQoNCiMjDQojIwlGaW5hbmNpYWwgZnVuY3Rpb25zCQkJCUZpbmFuc2llbGxhIGZ1bmt0aW9uZXINCiMjDQpBQ0NSSU5UCQkJPSBVUFBMUsOETlRBCQkJIyMJUmV0dXJuZXJhciBkZW4gdXBwbHVwbmEgcsOkbnRhbiBmw7ZyIHbDpHJkZXBhcHBlciBtZWQgcGVyaW9kaXNrIHLDpG50YQ0KQUNDUklOVE0JCT0gVVBQTE9CTFLDhE5UQQkJCSMjCVJldHVybmVyYXIgZGVuIHVwcGx1cG5hIHLDpG50YW4gZsO2ciBldHQgdsOkcmRlcGFwcGVyIHNvbSBnZXIgYXZrYXN0bmluZyBww6UgZsO2cmZhbGxvZGFnZW4NCkFNT1JERUdSQwkJPSBBTU9SREVHUkMJCQkjIwlSZXR1cm5lcmFyIGF2c2tyaXZuaW5nZW4gZsO2ciB2YXJqZSByZWRvdmlzbmluZ3NwZXJpb2QgbWVkIGhqw6RscCBhdiBlbiBhdnNrcml2bmluZ3Nrb2VmZmljaWVudA0KQU1PUkxJTkMJCT0gQU1PUkxJTkMJCQkjIwlSZXR1cm5lcmFyIGF2c2tyaXZuaW5nZW4gZsO2ciB2YXJqZSByZWRvdmlzbmluZ3NwZXJpb2QNCkNPVVBEQVlCUwkJPSBLVVBEQUdCQgkJCSMjCVJldHVybmVyYXIgYW50YWwgZGFnYXIgZnLDpW4gYsO2cmphbiBhdiBrdXBvbmdwZXJpb2RlbiB0aWxsIGxpa3ZpZGRhZ2VuDQpDT1VQREFZUwkJPSBLVVBEQUdBUlMJCQkjIwlSZXR1cm5lcmFyIGFudGFsZXQgZGFnYXIgaSBrdXBvbmdwZXJpb2RlbiBzb20gaW5uZWjDpWxsZXIgYmV0YWxuaW5nc2RhdHVtZXQNCkNPVVBEQVlTTkMJCT0gS1VQREFHTksJCQkjIwlSZXR1cm5lcmFyIGFudGFsZXQgZGFnYXIgZnLDpW4gYmV0YWxuaW5nc2RhdHVtZXQgdGlsbCBuw6RzdGEga3Vwb25nZGF0dW0NCkNPVVBOQ0QJCQk9IEtVUE5LRAkJCSMjCVJldHVybmVyYXIgbsOkc3RhIGt1cG9uZ2RhdHVtIGVmdGVyIGxpa3ZpZGRhZ2VuDQpDT1VQTlVNCQkJPSBLVVBBTlQJCQkjIwlSZXR1cm5lcmFyIGt1cG9uZ2VyIHNvbSBmw7ZyZmFsbGVyIHRpbGwgYmV0YWxuaW5nIG1lbGxhbiBsaWt2aWRkYWdlbiBvY2ggZsO2cmZhbGxvZGFnZW4NCkNPVVBQQ0QJCQk9IEtVUEZLRAkJCSMjCVJldHVybmVyYXIgZsO2cmVnw6VlbmRlIGt1cG9uZ2RhdHVtIGbDtnJlIGxpa3ZpZGRhZ2VuDQpDVU1JUE1UCQkJPSBLVU1Sw4ROVEEJCQkjIwlSZXR1cm5lcmFyIGRlbiBhY2t1bXVsZXJhZGUgcsOkbnRhbiBzb20gYmV0YWxhdHMgbWVsbGFuIHR2w6UgcGVyaW9kZXINCkNVTVBSSU5DCQk9IEtVTVBSSVMJCQkjIwlSZXR1cm5lcmFyIGRldCBhY2t1bXVsZXJhZGUga2FwaXRhbGJlbG9wcGV0IHNvbSBiZXRhbGF0cyBww6UgZXR0IGzDpW4gbWVsbGFuIHR2w6UgcGVyaW9kZXINCkRCCQkJPSBEQgkJCQkjIwlSZXR1cm5lcmFyIGF2c2tyaXZuaW5nZW4gZsO2ciBlbiB0aWxsZ8OlbmcgdW5kZXIgZW4gYW5naXZlbiB0aWQgZW5saWd0IG1ldG9kZW4gZsO2ciBmYXN0IGRlZ3Jlc3NpdiBhdnNrcml2bmluZw0KRERCCQkJPSBERUdBVlNLUgkJCSMjCVJldHVybmVyYXIgZW4gdGlsbGfDpW5ncyB2w6RyZGVtaW5za25pbmcgdW5kZXIgZW4gdmlzcyBwZXJpb2QgbWVkIGhqw6RscCBhdiBkdWJiZWwgZGVncmVzc2l2IGF2c2tyaXZuaW5nIGVsbGVyIG7DpWdvbiBhbm5hbiBtZXRvZCBzb20gZHUgYW5nZXINCkRJU0MJCQk9IERJU0sJCQkJIyMJUmV0dXJuZXJhciBkaXNrb250ZXJpbmdzcsOkbnRhbiBmw7ZyIGV0dCB2w6RyZGVwYXBwZXINCkRPTExBUkRFCQk9IERFQ1RBTAkJCSMjCU9tdmFuZGxhciBldHQgcHJpcyB1dHRyeWNrdCBzb20gZXR0IGJyw6VrIHRpbGwgZXR0IGRlY2ltYWx0YWwNCkRPTExBUkZSCQk9IEJSw4VLCQkJCSMjCU9tdmFuZGxhciBldHQgcHJpcyBpIGtyb25vciB1dHRyeWNrdCBzb20gZXR0IGRlY2ltYWx0YWwgdGlsbCBldHQgYnLDpWsNCkRVUkFUSU9OCQk9IEzDllBUSUQJCQkjIwlSZXR1cm5lcmFyIGRlbiDDpXJsaWdhIGzDtnB0aWRlbiBmw7ZyIGVuIHPDpGtlcmhldCBtZWQgcGVyaW9kaXNrYSByw6RudGViZXRhbG5pbmdhcg0KRUZGRUNUCQkJPSBFRkZSw4ROVEEJCQkjIwlSZXR1cm5lcmFyIGRlbiDDpXJsaWdhIGVmZmVrdGl2YSByw6RudGVzYXRzZW4NCkZWCQkJPSBTTFVUVsOEUkRFCQkJIyMJUmV0dXJuZXJhciBkZXQgZnJhbXRpZGEgdsOkcmRldCBww6UgZW4gaW52ZXN0ZXJpbmcNCkZWU0NIRURVTEUJCT0gRsOWUlLDhE5UTklORwkJCSMjCVJldHVybmVyYXIgZGV0IGZyYW10aWRhIHbDpHJkZXQgYXYgZXR0IGJlZ3lubmVsc2VrYXBpdGFsIGJlcsOka25hdCBww6Ugb2xpa2EgcsOkbnRlbml2w6Vlcg0KSU5UUkFURQkJCT0gw4VSU1LDhE5UQQkJCSMjCVJldHVybmVyYXIgcsOkbnRlc2F0c2VuIGbDtnIgZXR0IGJldGFsdCB2w6RyZGVwYXBwZXINCklQTVQJCQk9IFJCRVRBTE5JTkcJCQkjIwlSZXR1cm5lcmFyIHLDpG50ZWRlbGVuIGF2IGVuIGJldGFsbmluZyBmw7ZyIGVuIGdpdmVuIHBlcmlvZA0KSVJSCQkJPSBJUgkJCQkjIwlSZXR1cm5lcmFyIGludGVybnLDpG50YW4gZsO2ciBlbiBzZXJpZSBiZXRhbG5pbmdhcg0KSVNQTVQJCQk9IFJBTMOFTgkJCQkjIwlCZXLDpGtuYXIgcsOkbnRhbiBzb20gaGFyIGJldGFsYXRzIHVuZGVyIGVuIHNwZWNpZmlrIGJldGFsbmluZ3NwZXJpb2QNCk1EVVJBVElPTgkJPSBNTMOWUFRJRAkJCSMjCVJldHVybmVyYXIgZGVuIG1vZGlmaWVyYWRlIE1hY2F1bGV5LWzDtnB0aWRlbiBmw7ZyIGV0dCB2w6RyZGVwYXBwZXIgbWVkIGRldCBhbnRhZ25hIG5vbWluZWxsYSB2w6RyZGV0IDEwMCBrcg0KTUlSUgkJCT0gTU9ESVIJCQkJIyMJUmV0dXJuZXJhciBpbnRlcm5yw6RudGFuIGTDpHIgcG9zaXRpdmEgb2NoIG5lZ2F0aXZhIGJldGFsbmluZ2FyIGZpbmFuc2llcmFzIG1lZCBvbGlrYSByw6RudG9yDQpOT01JTkFMCQkJPSBOT01Sw4ROVEEJCQkjIwlSZXR1cm5lcmFyIGRlbiDDpXJsaWdhIG5vbWluZWxsYSByw6RudGVzYXRzZW4NCk5QRVIJCQk9IFBFUklPREVSCQkJIyMJUmV0dXJuZXJhciBhbnRhbGV0IHBlcmlvZGVyIGbDtnIgZW4gaW52ZXN0ZXJpbmcNCk5QVgkJCT0gTkVUTlVWw4RSREUJCQkjIwlSZXR1cm5lcmFyIG51dsOkcmRldCBhdiBlbiBzZXJpZSBwZXJpb2Rpc2thIGJldGFsbmluZ2FyIHZpZCBlbiBnaXZlbiBkaXNrb250ZXJpbmdzcsOkbnRhDQpPRERGUFJJQ0UJCT0gVUREQUZQUklTCQkJIyMJUmV0dXJuZXJhciBwcmlzZXQgcGVyIDEwMCBrciBub21pbmVsbHQgdsOkcmRlIGbDtnIgZXR0IHbDpHJkZXBhcHBlciBtZWQgZW4gdWRkYSBmw7Zyc3RhIHBlcmlvZA0KT0RERllJRUxECQk9IFVEREFGQVZLQVNUTklORwkJIyMJUmV0dXJuZXJhciBhdmthc3RuaW5nZW4gZsO2ciBlbiBzw6RrZXJoZXQgbWVkIGVuIHVkZGEgZsO2cnN0YSBwZXJpb2QNCk9ERExQUklDRQkJPSBVRERBU1BSSVMJCQkjIwlSZXR1cm5lcmFyIHByaXNldCBwZXIgMTAwIGtyIG5vbWluZWxsdCB2w6RyZGUgZsO2ciBldHQgdsOkcmRlcGFwcGVyIG1lZCBlbiB1ZGRhIHNpc3RhIHBlcmlvZA0KT0RETFlJRUxECQk9IFVEREFTQVZLQVNUTklORwkJIyMJUmV0dXJuZXJhciBhdmthc3RuaW5nZW4gZsO2ciBlbiBzw6RrZXJoZXQgbWVkIGVuIHVkZGEgc2lzdGEgcGVyaW9kDQpQTVQJCQk9IEJFVEFMTklORwkJCSMjCVJldHVybmVyYXIgZGVuIHBlcmlvZGlza2EgYmV0YWxuaW5nZW4gZsO2ciBlbiBhbm51aXRldA0KUFBNVAkJCT0gQU1PUlQJCQkJIyMJUmV0dXJuZXJhciBhbW9ydGVyaW5nc2RlbGVuIGF2IGVuIGFubnVpdGV0c2JldGFsbmluZyBmw7ZyIGVuIGdpdmVuIHBlcmlvZA0KUFJJQ0UJCQk9IFBSSVMJCQkJIyMJUmV0dXJuZXJhciBwcmlzZXQgcGVyIDEwMCBrciBub21pbmVsbHQgdsOkcmRlIGbDtnIgZXR0IHbDpHJkZXBhcHBlciBzb20gZ2VyIHBlcmlvZGlzayByw6RudGENClBSSUNFRElTQwkJPSBQUklTRElTSwkJCSMjCVJldHVybmVyYXIgcHJpc2V0IHBlciAxMDAga3Igbm9taW5lbGx0IHbDpHJkZSBmw7ZyIGV0dCBkaXNrb250ZXJhdCB2w6RyZGVwYXBwZXINClBSSUNFTUFUCQk9IFBSSVNGw5ZSRgkJCSMjCVJldHVybmVyYXIgcHJpc2V0IHBlciAxMDAga3Igbm9taW5lbGx0IHbDpHJkZSBmw7ZyIGV0dCB2w6RyZGVwYXBwZXIgc29tIGdlciByw6RudGEgcMOlIGbDtnJmYWxsb2RhZ2VuDQpQVgkJCT0gUFYJCQkJIyMJUmV0dXJuZXJhciBudXbDpHJkZXQgYXYgZW4gc2VyaWUgbGlrYSBzdG9yYSBwZXJpb2Rpc2thIGJldGFsbmluZ2FyDQpSQVRFCQkJPSBSw4ROVEEJCQkJIyMJUmV0dXJuZXJhciByw6RudGVzYXRzZW4gcGVyIHBlcmlvZCBpIGVuIGFubnVpdGV0DQpSRUNFSVZFRAkJPSBCRUxPUFAJCQkjIwlSZXR1cm5lcmFyIGJlbG9wcGV0IHNvbSB1dGRlbGFzIHDDpSBmw7ZyZmFsbG9kYWdlbiBmw7ZyIGV0dCBiZXRhbGF0IHbDpHJkZXBhcHBlcg0KU0xOCQkJPSBMSU5BVlNLUgkJCSMjCVJldHVybmVyYXIgZGVuIGxpbmrDpHJhIGF2c2tyaXZuaW5nZW4gZsO2ciBlbiB0aWxsZ8OlbmcgdW5kZXIgZW4gcGVyaW9kDQpTWUQJCQk9IMOFUlNBVlNLUgkJCSMjCVJldHVybmVyYXIgZGVuIMOlcmxpZ2EgYXZza3Jpdm5pbmdzc3VtbWFuIGbDtnIgZW4gdGlsbGfDpW5nIHVuZGVyIGVuIGFuZ2l2ZW4gcGVyaW9kDQpUQklMTEVRCQkJPSBTU1ZYRUtWCQkJIyMJUmV0dXJuZXJhciBhdmthc3RuaW5nZW4gbW90c3ZhcmFuZGUgZW4gb2JsaWdhdGlvbiBmw7ZyIGVuIHN0YXRzc2t1bGR2w6R4ZWwNClRCSUxMUFJJQ0UJCT0gU1NWWFBSSVMJCQkjIwlSZXR1cm5lcmFyIHByaXNldCBwZXIgMTAwIGtyIG5vbWluZWxsdCB2w6RyZGUgZsO2ciBlbiBzdGF0c3NrdWxkdsOkeGVsDQpUQklMTFlJRUxECQk9IFNTVlhSw4ROVEEJCQkjIwlSZXR1cm5lcmFyIGF2a2FzdG5pbmdlbiBmw7ZyIGVuIHN0YXRzc2t1bGR2w6R4ZWwNClZEQgkJCT0gVkRFR1JBVlNLUgkJCSMjCVJldHVybmVyYXIgYXZza3Jpdm5pbmdlbiBmw7ZyIGVuIHRpbGxnw6VuZyB1bmRlciBlbiBhbmdpdmVuIHBlcmlvZCAobWVkIGRlZ3Jlc3NpdiBhdnNrcml2bmluZykNClhJUlIJCQk9IFhJUlIJCQkJIyMJUmV0dXJuZXJhciBpbnRlcm5yw6RudGFuIGbDtnIgZW4gc2VyaWUgYmV0YWxuaW5nYXIgc29tIGludGUgbsO2ZHbDpG5kaWd0dmlzIMOkciBwZXJpb2Rpc2thDQpYTlBWCQkJPSBYTlVWw4RSREUJCQkjIwlSZXR1cm5lcmFyIGRldCBudXZhcmFuZGUgbmV0dG92w6RyZGV0IGbDtnIgZW4gc2VyaWUgYmV0YWxuaW5nYXIgc29tIGludGUgbsO2ZHbDpG5kaWd0dmlzIMOkciBwZXJpb2Rpc2thDQpZSUVMRAkJCT0gTk9NQVZLCQkJIyMJUmV0dXJuZXJhciBhdmthc3RuaW5nZW4gZsO2ciBldHQgdsOkcmRlcGFwcGVyIHNvbSBnZXIgcGVyaW9kaXNrIHLDpG50YQ0KWUlFTERESVNDCQk9IE5PTUFWS0RJU0sJCQkjIwlSZXR1cm5lcmFyIGRlbiDDpXJsaWdhIGF2a2FzdG5pbmdlbiBmw7ZyIGRpc2tvbnRlcmFkZSB2w6RyZGVwYXBwZXIsIGV4ZW1wZWx2aXMgZW4gc3RhdHNza3VsZHbDpHhlbA0KWUlFTERNQVQJCT0gTk9NQVZLRsOWUkYJCQkjIwlSZXR1cm5lcmFyIGRlbiDDpXJsaWdhIGF2a2FzdG5pbmdlbiBmw7ZyIGV0dCB2w6RyZGVwYXBwZXIgc29tIGdlciByw6RudGEgcMOlIGbDtnJmYWxsb2RhZ2VuDQoNCg0KIyMNCiMjCUluZm9ybWF0aW9uIGZ1bmN0aW9ucwkJCQlJbmZvcm1hdGlvbnNmdW5rdGlvbmVyDQojIw0KQ0VMTAkJCT0gQ0VMTAkJCQkjIwlSZXR1cm5lcmFyIGluZm9ybWF0aW9uIG9tIGZvcm1hdGVyaW5nLCBwbGF0cyBvY2ggaW5uZWjDpWxsIGkgZW4gY2VsbA0KRVJST1IuVFlQRQkJPSBGRUwuVFlQCQkJIyMJUmV0dXJuZXJhciBldHQgdGFsIHNvbSBtb3RzdmFyYXIgZXR0IGZlbHbDpHJkZQ0KSU5GTwkJCT0gSU5GTwkJCQkjIwlSZXR1cm5lcmFyIGluZm9ybWF0aW9uIG9tIG9wZXJhdGl2c3lzdGVtZXQNCklTQkxBTksJCQk9IMOEUlJFRgkJCQkjIwlSZXR1cm5lcmFyIFNBTlQgb20gdsOkcmRldCDDpHIgdG9tdA0KSVNFUlIJCQk9IMOECQkJCSMjCVJldHVybmVyYXIgU0FOVCBvbSB2w6RyZGV0IMOkciBldHQgZmVsdsOkcmRlIGFubmF0IMOkbiAjU0FLTkFTIQ0KSVNFUlJPUgkJCT0gw4RSRkVMCQkJCSMjCVJldHVybmVyYXIgU0FOVCBvbSB2w6RyZGV0IMOkciBldHQgZmVsdsOkcmRlDQpJU0VWRU4JCQk9IMOEUkrDhE1OCQkJIyMJUmV0dXJuZXJhciBTQU5UIG9tIHRhbGV0IMOkciBqw6RtbnQNCklTTE9HSUNBTAkJPSDDhFJFSlRFWFQJCQkjIwlSZXR1cm5lcmFyIFNBTlQgb20gdsOkcmRldCDDpHIgZXR0IGxvZ2lza3QgdsOkcmRlDQpJU05BCQkJPSDDhFJMT0dJU0sJCQkjIwlSZXR1cm5lcmFyIFNBTlQgb20gdsOkcmRldCDDpHIgZmVsdsOkcmRldCAjU0FLTkFTIQ0KSVNOT05URVhUCQk9IMOEUlNBS05BRAkJCSMjCVJldHVybmVyYXIgU0FOVCBvbSB2w6RyZGV0IGludGUgw6RyIHRleHQNCklTTlVNQkVSCQk9IMOEUlRBTAkJCQkjIwlSZXR1cm5lcmFyIFNBTlQgb20gdsOkcmRldCDDpHIgZXR0IHRhbA0KSVNPREQJCQk9IMOEUlVEREEJCQkjIwlSZXR1cm5lcmFyIFNBTlQgb20gdGFsZXQgw6RyIHVkZGENCklTUkVGCQkJPSDDhFJUT00JCQkJIyMJUmV0dXJuZXJhciBTQU5UIG9tIHbDpHJkZXQgw6RyIGVuIHJlZmVyZW5zDQpJU1RFWFQJCQk9IMOEUlRFWFQJCQkjIwlSZXR1cm5lcmFyIFNBTlQgb20gdsOkcmRldCDDpHIgdGV4dA0KTgkJCT0gTgkJCQkjIwlSZXR1cm5lcmFyIGV0dCB2w6RyZGUgb212YW5kbGF0IHRpbGwgZXR0IHRhbA0KTkEJCQk9IFNBS05BUwkJCSMjCVJldHVybmVyYXIgZmVsdsOkcmRldCAjU0FLTkFTIQ0KVFlQRQkJCT0gVsOEUkRFVFlQCQkJIyMJUmV0dXJuZXJhciBldHQgdGFsIHNvbSBhbmdlciB2w6RyZGV0cyBkYXRhdHlwDQoNCg0KIyMNCiMjCUxvZ2ljYWwgZnVuY3Rpb25zCQkJCUxvZ2lza2EgZnVua3Rpb25lcg0KIyMNCkFORAkJCT0gT0NICQkJCSMjCVJldHVybmVyYXIgU0FOVCBvbSBhbGxhIGFyZ3VtZW50IMOkciBzYW5uYQ0KRkFMU0UJCQk9IEZBTFNLVAkJCSMjCVJldHVybmVyYXIgZGV0IGxvZ2lza2EgdsOkcmRldCBGQUxTS1QNCklGCQkJPSBPTQkJCQkjIwlBbmdlciB2aWxrZXQgbG9naXNrdCB0ZXN0IHNvbSBza2EgdXRmw7ZyYXMNCklGRVJST1IJCQk9IE9NRkVMCQkJCSMjCVJldHVybmVyYXIgZXR0IHbDpHJkZSBzb20gZHUgYW5nZXIgb20gZW4gZm9ybWVsIHV0dsOkcmRlcmFyIHRpbGwgZXR0IGZlbDsgYW5uYXJzIHJldHVybmVyYXMgcmVzdWx0YXRldCBhdiBmb3JtZWxuDQpOT1QJCQk9IElDS0UJCQkJIyMJSW52ZXJ0ZXJhciBsb2dpa2VuIGbDtnIgYXJndW1lbnRlbg0KT1IJCQk9IEVMTEVSCQkJCSMjCVJldHVybmVyYXIgU0FOVCBvbSBuw6Vnb3QgYXJndW1lbnQgw6RyIFNBTlQNClRSVUUJCQk9IFNBTlQJCQkJIyMJUmV0dXJuZXJhciBkZXQgbG9naXNrYSB2w6RyZGV0IFNBTlQNCg0KDQojIw0KIyMJTG9va3VwIGFuZCByZWZlcmVuY2UgZnVuY3Rpb25zCQkJU8O2ay0gb2NoIHJlZmVyZW5zZnVua3Rpb25lcg0KIyMNCkFERFJFU1MJCQk9IEFEUkVTUwkJCSMjCVJldHVybmVyYXIgZW4gcmVmZXJlbnMgc29tIHRleHQgdGlsbCBlbiBlbnN0YWthIGNlbGwgaSBldHQga2Fsa3lsYmxhZA0KQVJFQVMJCQk9IE9NUsOFREVOCQkJIyMJUmV0dXJuZXJhciBhbnRhbGV0IG9tcsOlZGVuIGkgZW4gcmVmZXJlbnMNCkNIT09TRQkJCT0gVsOETEoJCQkJIyMJVsOkbGplciBldHQgdsOkcmRlIGkgZW4gbGlzdGEgw7Z2ZXIgdsOkcmRlbg0KQ09MVU1OCQkJPSBLT0xVTU4JCQkjIwlSZXR1cm5lcmFyIGtvbHVtbm51bXJldCBmw7ZyIGVuIHJlZmVyZW5zDQpDT0xVTU5TCQkJPSBLT0xVTU5FUgkJCSMjCVJldHVybmVyYXIgYW50YWxldCBrb2x1bW5lciBpIGVuIHJlZmVyZW5zDQpITE9PS1VQCQkJPSBMRVRBS09MVU1OCQkJIyMJU8O2a2VyIGkgZGVuIMO2dmVyc3RhIHJhZGVuIGkgZW4gbWF0cmlzIG9jaCByZXR1cm5lcmFyIHbDpHJkZXQgZsO2ciBhbmdpdmVuIGNlbGwNCkhZUEVSTElOSwkJPSBIWVBFUkzDhE5LCQkJIyMJU2thcGFyIGVuIGdlbnbDpGcgZWxsZXIgZXR0IGhvcHAgdGlsbCBldHQgZG9rdW1lbnQgaSBuw6R0dmVya2V0LCBpIGV0dCBpbnRyYW7DpHQgZWxsZXIgcMOlIEludGVybmV0DQpJTkRFWAkJCT0gSU5ERVgJCQkJIyMJQW52w6RuZGVyIGV0dCBpbmRleCBmw7ZyIGV0dCB2w6RsamEgZXR0IHbDpHJkZSBpIGVuIHJlZmVyZW5zIGVsbGVyIG1hdHJpcw0KSU5ESVJFQ1QJCT0gSU5ESVJFS1QJCQkjIwlSZXR1cm5lcmFyIGVuIHJlZmVyZW5zIHNvbSBhbmdlcyBhdiBldHQgdGV4dHbDpHJkZQ0KTE9PS1VQCQkJPSBMRVRBVVBQCQkJIyMJTGV0YXIgdXBwIHbDpHJkZW4gaSBlbiB2ZWt0b3IgZWxsZXIgbWF0cmlzDQpNQVRDSAkJCT0gUEFTU0EJCQkJIyMJTGV0YXIgdXBwIHbDpHJkZW4gaSBlbiByZWZlcmVucyBlbGxlciBtYXRyaXMNCk9GRlNFVAkJCT0gRsOWUlNLSlVUTklORwkJCSMjCVJldHVybmVyYXIgZW4gcmVmZXJlbnMgZsO2cnNranV0ZW4gaSBmw7ZyaMOlbGxhbmRlIHRpbGwgZW4gZ2l2ZW4gcmVmZXJlbnMNClJPVwkJCT0gUkFECQkJCSMjCVJldHVybmVyYXIgcmFkbnVtcmV0IGbDtnIgZW4gcmVmZXJlbnMNClJPV1MJCQk9IFJBREVSCQkJCSMjCVJldHVybmVyYXIgYW50YWxldCByYWRlciBpIGVuIHJlZmVyZW5zDQpSVEQJCQk9IFJURAkJCQkjIwlIw6RtdGFyIHJlYWx0aWRzZGF0YSBmcsOlbiBldHQgcHJvZ3JhbSBzb20gc3TDtmRlciBDT00tYXV0b21hdGlvbiAoQXV0b21hdGlvbjogRXR0IHPDpHR0IGF0dCBhcmJldGEgbWVkIGV0dCBwcm9ncmFtcyBvYmpla3QgZnLDpW4gZXR0IGFubmF0IHByb2dyYW0gZWxsZXIgdXR2ZWNrbGluZ3N2ZXJrdHlnLiBEZXR0YSBrYWxsYWRlcyB0aWRpZ2FyZSBmw7ZyIE9MRSBBdXRvbWF0aW9uLCBvY2ggw6RyIGVuIGJyYW5zY2hzdGFuZGFyZCBvY2ggaW5nw6VyIGkgQ29tcG9uZW50IE9iamVjdCBNb2RlbCAoQ09NKS4pDQpUUkFOU1BPU0UJCT0gVFJBTlNQT05FUkEJCQkjIwlUcmFuc3BvbmVyYXIgZW4gbWF0cmlzDQpWTE9PS1VQCQkJPSBMRVRBUkFECQkJIyMJTGV0YXIgaSBkZW4gZsO2cnN0YSBrb2x1bW5lbiBpIGVuIG1hdHJpcyBvY2ggZmx5dHRhciDDtnZlciByYWRlbiBmw7ZyIGF0dCByZXR1cm5lcmEgdsOkcmRldCBmw7ZyIGVuIGNlbGwNCg0KDQojIw0KIyMJTWF0aCBhbmQgdHJpZ29ub21ldHJ5IGZ1bmN0aW9ucwkJCU1hdGVtYXRpc2thIG9jaCB0cmlnb25vbWV0cmlza2EgZnVua3Rpb25lcg0KIyMNCkFCUwkJCT0gQUJTCQkJCSMjCVJldHVybmVyYXIgYWJzb2x1dHbDpHJkZXQgYXYgZXR0IHRhbA0KQUNPUwkJCT0gQVJDQ09TCQkJIyMJUmV0dXJuZXJhciBhcmN1cyBjb3NpbnVzIGbDtnIgZXR0IHRhbA0KQUNPU0gJCQk9IEFSQ0NPU0gJCQkjIwlSZXR1cm5lcmFyIGludmVydGVyYWQgaHlwZXJib2xpc2sgY29zaW51cyBmw7ZyIGV0dCB0YWwNCkFTSU4JCQk9IEFSQ1NJTgkJCSMjCVJldHVybmVyYXIgYXJjdXMgY29zaW51cyBmw7ZyIGV0dCB0YWwNCkFTSU5ICQkJPSBBUkNTSU5ICQkJIyMJUmV0dXJuZXJhciBoeXBlcmJvbGlzayBhcmN1cyBzaW51cyBmw7ZyIGV0dCB0YWwNCkFUQU4JCQk9IEFSQ1RBTgkJCSMjCVJldHVybmVyYXIgYXJjdXMgdGFuZ2VucyBmw7ZyIGV0dCB0YWwNCkFUQU4yCQkJPSBBUkNUQU4yCQkJIyMJUmV0dXJuZXJhciBhcmN1cyB0YW5nZW5zIGbDtnIgZW4geC0gb2NoIGVuIHktIGtvb3JkaW5hdA0KQVRBTkgJCQk9IEFSQ1RBTkgJCQkjIwlSZXR1cm5lcmFyIGh5cGVyYm9saXNrIGFyY3VzIHRhbmdlbnMgZsO2ciBldHQgdGFsDQpDRUlMSU5HCQkJPSBSVU5EQS5VUFAJCQkjIwlBdnJ1bmRhciBldHQgdGFsIHRpbGwgbsOkcm1hc3RlIGhlbHRhbCBlbGxlciBuw6RybWFzdGUgc2lnbmlmaWthbnRhIG11bHRpcGVsDQpDT01CSU4JCQk9IEtPTUJJTgkJCSMjCVJldHVybmVyYXIgYW50YWxldCBrb21iaW5hdGlvbmVyIGbDtnIgZXR0IGdpdmV0IGFudGFsIG9iamVrdA0KQ09TCQkJPSBDT1MJCQkJIyMJUmV0dXJuZXJhciBjb3NpbnVzIGbDtnIgZXR0IHRhbA0KQ09TSAkJCT0gQ09TSAkJCQkjIwlSZXR1cm5lcmFyIGh5cGVyYm9saXNrdCBjb3NpbnVzIGbDtnIgZXR0IHRhbA0KREVHUkVFUwkJCT0gR1JBREVSCQkJIyMJT212YW5kbGFyIHJhZGlhbmVyIHRpbGwgZ3JhZGVyDQpFVkVOCQkJPSBKw4RNTgkJCQkjIwlBdnJ1bmRhciBldHQgdGFsIHVwcMOldCB0aWxsIG7DpHJtYXN0ZSBoZWx0YWwNCkVYUAkJCT0gRVhQCQkJCSMjCVJldHVybmVyYXIgZSB1cHBow7ZqdCB0aWxsIGV0dCBnaXZldCB0YWwNCkZBQ1QJCQk9IEZBS1VMVEVUCQkJIyMJUmV0dXJuZXJhciBmYWt1bHRldGVuIGbDtnIgZXR0IHRhbA0KRkFDVERPVUJMRQkJPSBEVUJCRUxGQUtVTFRFVAkJIyMJUmV0dXJuZXJhciBkdWJiZWxmYWt1bHRldGVuIGbDtnIgZXR0IHRhbA0KRkxPT1IJCQk9IFJVTkRBLk5FRAkJCSMjCUF2cnVuZGFyIGV0dCB0YWwgbmVkw6V0IG1vdCBub2xsDQpHQ0QJCQk9IFNHRAkJCQkjIwlSZXR1cm5lcmFyIGRlbiBzdMO2cnN0YSBnZW1lbnNhbW1hIG7DpG1uYXJlbg0KSU5UCQkJPSBIRUxUQUwJCQkjIwlBdnJ1bmRhciBldHQgdGFsIG5lZMOldCB0aWxsIG7DpHJtYXN0ZSBoZWx0YWwNCkxDTQkJCT0gTUdNCQkJCSMjCVJldHVybmVyYXIgZGVuIG1pbnN0YSBnZW1lbnNhbW1hIG11bHRpcGVsbg0KTE4JCQk9IExOCQkJCSMjCVJldHVybmVyYXIgZGVuIG5hdHVybGlnYSBsb2dhcml0bWVuIGbDtnIgZXR0IHRhbA0KTE9HCQkJPSBMT0cJCQkJIyMJUmV0dXJuZXJhciBsb2dhcml0bWVuIGbDtnIgZXR0IHRhbCBmw7ZyIGVuIGdpdmVuIGJhcw0KTE9HMTAJCQk9IExPRzEwCQkJCSMjCVJldHVybmVyYXIgMTAtbG9nYXJpdG1lbiBmw7ZyIGV0dCB0YWwNCk1ERVRFUk0JCQk9IE1ERVRFUk0JCQkjIwlSZXR1cm5lcmFyIG1hdHJpc2VuIHNvbSDDpHIgYXZnw7ZyYW5kZXQgYXYgZW4gbWF0cmlzDQpNSU5WRVJTRQkJPSBNSU5WRVJUCQkJIyMJUmV0dXJuZXJhciBtYXRyaXNpbnZlcnNlbiBhdiBlbiBtYXRyaXMNCk1NVUxUCQkJPSBNTVVMVAkJCQkjIwlSZXR1cm5lcmFyIG1hdHJpc3Byb2R1a3RlbiBhdiB0dsOlIG1hdHJpc2VyDQpNT0QJCQk9IFJFU1QJCQkJIyMJUmV0dXJuZXJhciByZXN0ZW4gdmlkIGVuIGRpdmlzaW9uDQpNUk9VTkQJCQk9IE1BVlJVTkRBCQkJIyMJUmV0dXJuZXJhciBldHQgdGFsIGF2cnVuZGF0IHRpbGwgZW4gZ2l2ZW4gbXVsdGlwZWwNCk1VTFRJTk9NSUFMCQk9IE1VTFRJTk9NSUFMCQkJIyMJUmV0dXJuZXJhciBtdWx0aW5vbWlhbGVuIGbDtnIgZW4gdXBwc8OkdHRuaW5nIHRhbA0KT0RECQkJPSBVRERBCQkJCSMjCUF2cnVuZGFyIGV0dCB0YWwgdXBww6V0IHRpbGwgbsOkcm1hc3RlIHVkZGEgaGVsdGFsDQpQSQkJCT0gUEkJCQkJIyMJUmV0dXJuZXJhciB2w6RyZGV0IHBpDQpQT1dFUgkJCT0gVVBQSMOWSlQuVElMTAkJCSMjCVJldHVybmVyYXIgcmVzdWx0YXRldCBhdiBldHQgdGFsIHVwcGjDtmp0IHRpbGwgZW4gZXhwb25lbnQNClBST0RVQ1QJCQk9IFBST0RVS1QJCQkjIwlNdWx0aXBsaWNlcmFyIGFyZ3VtZW50ZW4NClFVT1RJRU5UCQk9IEtWT1QJCQkJIyMJUmV0dXJuZXJhciBoZWx0YWxzZGVsZW4gYXYgZW4gZGl2aXNpb24NClJBRElBTlMJCQk9IFJBRElBTkVSCQkJIyMJT212YW5kbGFyIGdyYWRlciB0aWxsIHJhZGlhbmVyDQpSQU5ECQkJPSBTTFVNUAkJCQkjIwlSZXR1cm5lcmFyIGV0dCBzbHVtcHRhbCBtZWxsYW4gMCBvY2ggMQ0KUkFOREJFVFdFRU4JCT0gU0xVTVAuTUVMTEFOCQkJIyMJUmV0dXJuZXJhciBldHQgc2x1bXB0YWwgbWVsbGFuIGRlIHRhbCBzb20gZHUgYW5nZXINClJPTUFOCQkJPSBST01FUlNLCQkJIyMJT212YW5kbGFyIHZhbmxpZ2EgKGFyYWJpc2thKSBzaWZmcm9yIHRpbGwgcm9tZXJza2Egc29tIHRleHQNClJPVU5ECQkJPSBBVlJVTkRBCQkJIyMJQXZydW5kYXIgZXR0IHRhbCB0aWxsIGV0dCBhbmdpdmV0IGFudGFsIHNpZmZyb3INClJPVU5ERE9XTgkJPSBBVlJVTkRBLk5FRMOFVAkJCSMjCUF2cnVuZGFyIGV0dCB0YWwgbmVkw6V0IG1vdCBub2xsDQpST1VORFVQCQkJPSBBVlJVTkRBLlVQUMOFVAkJCSMjCUF2cnVuZGFyIGV0dCB0YWwgdXBww6V0LCBmcsOlbiBub2xsDQpTRVJJRVNTVU0JCT0gU0VSSUVTVU1NQQkJCSMjCVJldHVybmVyYXIgc3VtbWFuIGF2IGVuIHBvdGVuc3NlcmllIGJhc2VyYXQgcMOlIGZvcm1lbG4NClNJR04JCQk9IFRFQ0tFTgkJCSMjCVJldHVybmVyYXIgdGVja25ldCBmw7ZyIGV0dCB0YWwNClNJTgkJCT0gU0lOCQkJCSMjCVJldHVybmVyYXIgc2ludXMgZsO2ciBlbiBnaXZlbiB2aW5rZWwNClNJTkgJCQk9IFNJTkgJCQkJIyMJUmV0dXJuZXJhciBoeXBlcmJvbGlzayBzaW51cyBmw7ZyIGV0dCB0YWwNClNRUlQJCQk9IFJPVAkJCQkjIwlSZXR1cm5lcmFyIGRlbiBwb3NpdGl2YSBrdmFkcmF0cm90ZW4NClNRUlRQSQkJCT0gUk9UUEkJCQkJIyMJUmV0dXJuZXJhciBrdmFkcmF0cm90ZW4gZsO2ciAodGFsICogcGkpDQpTVUJUT1RBTAkJPSBERUxTVU1NQQkJCSMjCVJldHVybmVyYXIgZW4gZGVsc3VtbWEgaSBlbiBsaXN0YSBlbGxlciBkYXRhYmFzDQpTVU0JCQk9IFNVTU1BCQkJCSMjCVN1bW1lcmFyIGFyZ3VtZW50ZW4NClNVTUlGCQkJPSBTVU1NQS5PTQkJCSMjCVN1bW1lcmFyIGNlbGxlciBlbmxpZ3QgZXR0IGFuZ2l2ZXQgdmlsbGtvcg0KU1VNSUZTCQkJPSBTVU1NQS5PTUYJCQkjIwlMw6RnZ2VyIHRpbGwgY2VsbGVybmEgaSBldHQgb21yw6VkZSBzb20gdXBwZnlsbGVyIGZsZXJhIGtyaXRlcmllcg0KU1VNUFJPRFVDVAkJPSBQUk9EVUtUU1VNTUEJCQkjIwlSZXR1cm5lcmFyIHN1bW1hbiBhdiBwcm9kdWt0ZXJuYSBpIG1vdHN2YXJhbmRlIG1hdHJpc2tvbXBvbmVudGVyDQpTVU1TUQkJCT0gS1ZBRFJBVFNVTU1BCQkJIyMJUmV0dXJuZXJhciBzdW1tYW4gYXYgYXJndW1lbnRlbnMga3ZhZHJhdGVyDQpTVU1YMk1ZMgkJPSBTVU1NQVgyTVkyCQkJIyMJUmV0dXJuZXJhciBzdW1tYW4gYXYgZGlmZmVyZW5zZW4gbWVsbGFuIGt2YWRyYXRlcm5hIGbDtnIgbW90c3ZhcmFuZGUgdsOkcmRlbiBpIHR2w6UgbWF0cmlzZXINClNVTVgyUFkyCQk9IFNVTU1BWDJQWTIJCQkjIwlSZXR1cm5lcmFyIHN1bW1hbiBhdiBzdW1tYW4gYXYga3ZhZHJhdGVybmEgYXYgbW90c3ZhcmFuZGUgdsOkcmRlbiBpIHR2w6UgbWF0cmlzZXINClNVTVhNWTIJCQk9IFNVTU1BWE1ZMgkJCSMjCVJldHVybmVyYXIgc3VtbWFuIGF2IGt2YWRyYXRlbiBhdiBza2lsbG5hZGVuIG1lbGxhbiBtb3RzdmFyYW5kZSB2w6RyZGVuIGkgdHbDpSBtYXRyaXNlcg0KVEFOCQkJPSBUQU4JCQkJIyMJUmV0dXJuZXJhciB0YW5nZW5zIGbDtnIgZXR0IHRhbA0KVEFOSAkJCT0gVEFOSAkJCQkjIwlSZXR1cm5lcmFyIGh5cGVyYm9saXNrIHRhbmdlbnMgZsO2ciBldHQgdGFsDQpUUlVOQwkJCT0gQVZLT1JUQQkJCSMjCUF2a29ydGFyIGV0dCB0YWwgdGlsbCBldHQgaGVsdGFsDQoNCg0KIyMNCiMjCVN0YXRpc3RpY2FsIGZ1bmN0aW9ucwkJCQlTdGF0aXN0aXNrYSBmdW5rdGlvbmVyDQojIw0KQVZFREVWCQkJPSBNRURFTEFWVgkJCSMjCVJldHVybmVyYXIgbWVkZWx2w6RyZGV0IGbDtnIgZGF0YXB1bmt0ZXJzIGFic29sdXRhIGF2dmlrZWxzZSBmcsOlbiBkZXJhcyBtZWRlbHbDpHJkZQ0KQVZFUkFHRQkJCT0gTUVERUwJCQkJIyMJUmV0dXJuZXJhciBtZWRlbHbDpHJkZXQgYXYgYXJndW1lbnRlbg0KQVZFUkFHRUEJCT0gQVZFUkFHRUEJCQkjIwlSZXR1cm5lcmFyIG1lZGVsdsOkcmRldCBhdiBhcmd1bWVudGVuLCBpbmtsdXNpdmUgdGFsLCB0ZXh0IG9jaCBsb2dpc2thIHbDpHJkZW4NCkFWRVJBR0VJRgkJPSBNRURFTE9NCQkJIyMJUmV0dXJuZXJhciBtZWRlbHbDpHJkZXQgKGFyaXRtZXRpc2t0IG1lZGVsdsOkcmRlKSBmw7ZyIGFsbGEgY2VsbGVyIGkgZXR0IG9tcsOlZGUgc29tIHVwcGZ5bGxlciBldHQgZ2l2ZXQga3JpdGVyaXVtDQpBVkVSQUdFSUZTCQk9IE1FREVMT01GCQkJIyMJUmV0dXJuZXJhciBtZWRlbHbDpHJkZXQgKGRldCBhcml0bWV0aXNrYSBtZWRlbHbDpHJkZXQpIGbDtnIgYWxsYSBjZWxsZXIgc29tIHVwcGZ5bGxlciBmbGVyYSB2aWxsa29yLg0KQkVUQURJU1QJCT0gQkVUQUbDllJECQkJIyMJUmV0dXJuZXJhciBkZW4ga3VtdWxhdGl2YSBiZXRhZsO2cmRlbG5pbmdzZnVua3Rpb25lbg0KQkVUQUlOVgkJCT0gQkVUQUlOVgkJCSMjCVJldHVybmVyYXIgaW52ZXJzZW4gdGlsbCBkZW4ga3VtdWxhdGl2YSBmw7ZyZGVsbmluZ3NmdW5rdGlvbmVuIGbDtnIgZW4gdmlzcyBiZXRhZsO2cmRlbG5pbmcNCkJJTk9NRElTVAkJPSBCSU5PTUbDllJECQkJIyMJUmV0dXJuZXJhciBkZW4gaW5kaXZpZHVlbGxhIGJpbm9taWFsZsO2cmRlbG5pbmdlbg0KQ0hJRElTVAkJCT0gQ0hJMkbDllJECQkJIyMJUmV0dXJuZXJhciBkZW4gZW5zaWRpZ2Egc2Fubm9saWtoZXRlbiBhdiBjMi1mw7ZyZGVsbmluZ2VuDQpDSElJTlYJCQk9IENISTJJTlYJCQkjIwlSZXR1cm5lcmFyIGludmVyc2VuIGF2IGNoaTItZsO2cmRlbG5pbmdlbg0KQ0hJVEVTVAkJCT0gQ0hJMlRFU1QJCQkjIwlSZXR1cm5lcmFyIG9iZXJvZW5kZXRlc3Rlbg0KQ09ORklERU5DRQkJPSBLT05GSURFTlMJCQkjIwlSZXR1cm5lcmFyIGtvbmZpZGVuc2ludGVydmFsbGV0IGbDtnIgZW4gcG9wdWxhdGlvbnMgbWVkZWx2w6RyZGUNCkNPUlJFTAkJCT0gS09SUkVMCQkJIyMJUmV0dXJuZXJhciBrb3JyZWxhdGlvbnNrb2VmZmljaWVudGVuIG1lbGxhbiB0dsOlIGRhdGFtw6RuZ2Rlcg0KQ09VTlQJCQk9IEFOVEFMCQkJCSMjCVLDpGtuYXIgaHVyIG3DpW5nYSB0YWwgc29tIGZpbm5zIGJsYW5kIGFyZ3VtZW50ZW4NCkNPVU5UQQkJCT0gQU5UQUxWCQkJIyMJUsOka25hciBodXIgbcOlbmdhIHbDpHJkZW4gc29tIGZpbm5zIGJsYW5kIGFyZ3VtZW50ZW4NCkNPVU5UQkxBTksJCT0gQU5UQUwuVE9NTUEJCQkjIwlSw6RrbmFyIGFudGFsZXQgdG9tbWEgY2VsbGVyIGkgZXR0IG9tcsOlZGUNCkNPVU5USUYJCQk9IEFOVEFMLk9NCQkJIyMJUsOka25hciBhbnRhbGV0IGNlbGxlciBpIGV0dCBvbXLDpWRlIHNvbSB1cHBmeWxsZXIgYW5naXZuYSB2aWxsa29yLg0KQ09VTlRJRlMJCT0gQU5UQUwuT01GCQkJIyMJUsOka25hciBhbnRhbGV0IGNlbGxlciBpIGV0dCBvbXLDpWRlIHNvbSB1cHBmeWxsZXIgZmxlcmEgdmlsbGtvci4NCkNPVkFSCQkJPSBLT1ZBUgkJCQkjIwlSZXR1cm5lcmFyIGtvdmFyaWFuc2VuLCBkLnYucy4gbWVkZWx2w6RyZGV0IGF2IHByb2R1a3Rlcm5hIGbDtnIgcGFyYWRlIGF2dmlrZWxzZXINCkNSSVRCSU5PTQkJPSBLUklUQklOT00JCQkjIwlSZXR1cm5lcmFyIGRldCBtaW5zdGEgdsOkcmRldCBmw7ZyIHZpbGtldCBkZW4ga3VtdWxhdGl2YSBiaW5vbWlhbGbDtnJkZWxuaW5nZW4gw6RyIG1pbmRyZSDDpG4gZWxsZXIgbGlrYSBtZWQgZXR0IHZpbGxrb3JzdsOkcmRlDQpERVZTUQkJCT0gS1ZBREFWVgkJCSMjCVJldHVybmVyYXIgc3VtbWFuIGF2IGt2YWRyYXRlciBww6UgYXZ2aWtlbHNlcg0KRVhQT05ESVNUCQk9IEVYUE9ORsOWUkQJCQkjIwlSZXR1cm5lcmFyIGV4cG9uZW50aWFsZsO2cmRlbG5pbmdlbg0KRkRJU1QJCQk9IEZGw5ZSRAkJCQkjIwlSZXR1cm5lcmFyIEYtc2Fubm9saWtoZXRzZsO2cmRlbG5pbmdlbg0KRklOVgkJCT0gRklOVgkJCQkjIwlSZXR1cm5lcmFyIGludmVyc2VuIHRpbGwgRi1zYW5ub2xpa2hldHNmw7ZyZGVsbmluZ2VuDQpGSVNIRVIJCQk9IEZJU0hFUgkJCSMjCVJldHVybmVyYXIgRmlzaGVyLXRyYW5zZm9ybWF0aW9uZW4NCkZJU0hFUklOVgkJPSBGSVNIRVJJTlYJCQkjIwlSZXR1cm5lcmFyIGludmVyc2VuIHRpbGwgRmlzaGVyLXRyYW5zZm9ybWF0aW9uZW4NCkZPUkVDQVNUCQk9IFBSRURJS1RJT04JCQkjIwlSZXR1cm5lcmFyIGV0dCB2w6RyZGUgbMOkbmdzIGVuIGxpbmrDpHIgdHJlbmRsaW5qZQ0KRlJFUVVFTkNZCQk9IEZSRUtWRU5TCQkJIyMJUmV0dXJuZXJhciBlbiBmcmVrdmVuc2bDtnJkZWxuaW5nIHNvbSBlbiBsb2Ryw6R0IG1hdHJpcw0KRlRFU1QJCQk9IEZURVNUCQkJCSMjCVJldHVybmVyYXIgcmVzdWx0YXRldCBhdiBlbiBGLXRlc3QNCkdBTU1BRElTVAkJPSBHQU1NQUbDllJECQkJIyMJUmV0dXJuZXJhciBnYW1tYWbDtnJkZWxuaW5nZW4NCkdBTU1BSU5WCQk9IEdBTU1BSU5WCQkJIyMJUmV0dXJuZXJhciBpbnZlcnNlbiB0aWxsIGRlbiBrdW11bGF0aXZhIGdhbW1hZsO2cmRlbG5pbmdlbg0KR0FNTUFMTgkJCT0gR0FNTUFMTgkJCSMjCVJldHVybmVyYXIgZGVuIG5hdHVybGlnYSBsb2dhcml0bWVuIGbDtnIgZ2FtbWFmdW5rdGlvbmVuLCBHKHgpDQpHRU9NRUFOCQkJPSBHRU9NRURFTAkJCSMjCVJldHVybmVyYXIgZGV0IGdlb21ldHJpc2thIG1lZGVsdsOkcmRldA0KR1JPV1RICQkJPSBFWFBUUkVORAkJCSMjCVJldHVybmVyYXIgdsOkcmRlbiBsw6RuZ3MgZW4gZXhwb25lbnRpZWxsIHRyZW5kDQpIQVJNRUFOCQkJPSBIQVJNTUVERUwJCQkjIwlSZXR1cm5lcmFyIGRldCBoYXJtb25pc2thIG1lZGVsdsOkcmRldA0KSFlQR0VPTURJU1QJCT0gSFlQR0VPTUbDllJECQkJIyMJUmV0dXJuZXJhciBkZW4gaHlwZXJnZW9tZXRyaXNrYSBmw7ZyZGVsbmluZ2VuDQpJTlRFUkNFUFQJCT0gU0vDhFJOSU5HU1BVTktUCQkjIwlSZXR1cm5lcmFyIHNrw6RybmluZ3NwdW5rdGVuIGbDtnIgZW4gbGluasOkciByZWdyZXNzaW9uc2xpbmplDQpLVVJUCQkJPSBUT1BQSUdIRVQJCQkjIwlSZXR1cm5lcmFyIHRvcHBpZ2hldGVuIGF2IGVuIG3DpG5nZCBkYXRhDQpMQVJHRQkJCT0gU1TDllJTVEEJCQkjIwlSZXR1cm5lcmFyIGRldCBuOnRlIHN0w7Zyc3RhIHbDpHJkZXQgaSBlbiBtw6RuZ2QgZGF0YQ0KTElORVNUCQkJPSBSRUdSCQkJCSMjCVJldHVybmVyYXIgcGFyYW1ldHJhciB0aWxsIGVuIGxpbmrDpHIgdHJlbmRsaW5qZQ0KTE9HRVNUCQkJPSBFWFBSRUdSCQkJIyMJUmV0dXJuZXJhciBwYXJhbWV0cmFybmEgaSBlbiBleHBvbmVudGllbGwgdHJlbmQNCkxPR0lOVgkJCT0gTE9HSU5WCQkJIyMJUmV0dXJuZXJhciBpbnZlcnNlbiB0aWxsIGRlbiBsb2dub3JtYWxhIGbDtnJkZWxuaW5nZW4NCkxPR05PUk1ESVNUCQk9IExPR05PUk1Gw5ZSRAkJCSMjCVJldHVybmVyYXIgZGVuIGt1bXVsYXRpdmEgbG9nbm9ybWFsYSBmw7ZyZGVsbmluZ2VuDQpNQVgJCQk9IE1BWAkJCQkjIwlSZXR1cm5lcmFyIGRldCBzdMO2cnN0YSB2w6RyZGV0IGkgZW4gbGlzdGEgYXYgYXJndW1lbnQNCk1BWEEJCQk9IE1BWEEJCQkJIyMJUmV0dXJuZXJhciBkZXQgc3TDtnJzdGEgdsOkcmRldCBpIGVuIGxpc3RhIGF2IGFyZ3VtZW50LCBpbmtsdXNpdmUgdGFsLCB0ZXh0IG9jaCBsb2dpc2thIHbDpHJkZW4NCk1FRElBTgkJCT0gTUVESUFOCQkJIyMJUmV0dXJuZXJhciBtZWRpYW5lbiBmw7ZyIGFuZ2l2bmEgdGFsDQpNSU4JCQk9IE1JTgkJCQkjIwlSZXR1cm5lcmFyIGRldCBtaW5zdGEgdsOkcmRldCBpIGVuIGxpc3RhIG1lZCBhcmd1bWVudA0KTUlOQQkJCT0gTUlOQQkJCQkjIwlSZXR1cm5lcmFyIGRldCBtaW5zdGEgdsOkcmRldCBpIGVuIGxpc3RhIMO2dmVyIGFyZ3VtZW50LCBpbmtsdXNpdmUgdGFsLCB0ZXh0IG9jaCBsb2dpc2thIHbDpHJkZW4NCk1PREUJCQk9IFRZUFbDhFJERQkJCSMjCVJldHVybmVyYXIgZGV0IHZhbmxpZ2FzdGUgdsOkcmRldCBpIGVuIGRhdGFtw6RuZ2QNCk5FR0JJTk9NRElTVAkJPSBORUdCSU5PTUbDllJECQkJIyMJUmV0dXJuZXJhciBkZW4gbmVnYXRpdmEgYmlub21pYWxmw7ZyZGVsbmluZ2VuDQpOT1JNRElTVAkJPSBOT1JNRsOWUkQJCQkjIwlSZXR1cm5lcmFyIGRlbiBrdW11bGF0aXZhIG5vcm1hbGbDtnJkZWxuaW5nZW4NCk5PUk1JTlYJCQk9IE5PUk1JTlYJCQkjIwlSZXR1cm5lcmFyIGludmVyc2VuIHRpbGwgZGVuIGt1bXVsYXRpdmEgbm9ybWFsZsO2cmRlbG5pbmdlbg0KTk9STVNESVNUCQk9IE5PUk1TRsOWUkQJCQkjIwlSZXR1cm5lcmFyIGRlbiBrdW11bGF0aXZhIHN0YW5kYXJkbm9ybWFsZsO2cmRlbG5pbmdlbg0KTk9STVNJTlYJCT0gTk9STVNJTlYJCQkjIwlSZXR1cm5lcmFyIGludmVyc2VuIHRpbGwgZGVuIGt1bXVsYXRpdmEgc3RhbmRhcmRub3JtYWxmw7ZyZGVsbmluZ2VuDQpQRUFSU09OCQkJPSBQRUFSU09OCQkJIyMJUmV0dXJuZXJhciBrb3JyZWxhdGlvbnNrb2VmZmljaWVudGVuIHRpbGwgUGVhcnNvbnMgbW9tZW50cHJvZHVrdA0KUEVSQ0VOVElMRQkJPSBQRVJDRU5USUwJCQkjIwlSZXR1cm5lcmFyIGRlbiBuOnRlIHBlcmNlbnRpbGVuIGF2IHbDpHJkZW4gaSBldHQgb21yw6VkZQ0KUEVSQ0VOVFJBTksJCT0gUFJPQ0VOVFJBTkcJCQkjIwlSZXR1cm5lcmFyIHByb2NlbnRyYW5nZW4gZsO2ciBldHQgdsOkcmRlIGkgZW4gZGF0YW3DpG5nZA0KUEVSTVVUCQkJPSBQRVJNVVQJCQkjIwlSZXR1cm5lcmFyIGFudGFsIHBlcm11dGF0aW9uZXIgZsO2ciBldHQgZ2l2ZXQgYW50YWwgb2JqZWt0DQpQT0lTU09OCQkJPSBQT0lTU09OCQkJIyMJUmV0dXJuZXJhciBQb2lzc29uLWbDtnJkZWxuaW5nZW4NClBST0IJCQk9IFNBTk5PTElLSEVUCQkJIyMJUmV0dXJuZXJhciBzYW5ub2xpa2hldGVuIGF0dCB2w6RyZGVuIGkgZXR0IG9tcsOlZGUgbGlnZ2VyIG1lbGxhbiB0dsOlIGdyw6Ruc2VyDQpRVUFSVElMRQkJPSBLVkFSVElMCQkJIyMJUmV0dXJuZXJhciBrdmFydGlsZW4gYXYgZW4gbcOkbmdkIGRhdGENClJBTksJCQk9IFJBTkcJCQkJIyMJUmV0dXJuZXJhciByYW5nb3JkbmluZ2VuIGbDtnIgZXR0IHRhbCBpIGVuIGxpc3RhIG1lZCB0YWwNClJTUQkJCT0gUktWCQkJCSMjCVJldHVybmVyYXIga3ZhZHJhdGVuIGF2IFBlYXJzb25zIHByb2R1a3Rtb21lbnRrb3JyZWxhdGlvbnNrb2VmZmljaWVudA0KU0tFVwkJCT0gU05FREhFVAkJCSMjCVJldHVybmVyYXIgc25lZGhldGVuIGbDtnIgZW4gZsO2cmRlbG5pbmcNClNMT1BFCQkJPSBMVVROSU5HCQkJIyMJUmV0dXJuZXJhciBsdXRuaW5nZW4gcMOlIGVuIGxpbmrDpHIgcmVncmVzc2lvbnNsaW5qZQ0KU01BTEwJCQk9IE1JTlNUQQkJCSMjCVJldHVybmVyYXIgZGV0IG46dGUgbWluc3RhIHbDpHJkZXQgaSBlbiBtw6RuZ2QgZGF0YQ0KU1RBTkRBUkRJWkUJCT0gU1RBTkRBUkRJU0VSQQkJCSMjCVJldHVybmVyYXIgZXR0IG5vcm1hbGlzZXJhdCB2w6RyZGUNClNUREVWCQkJPSBTVERBVgkJCQkjIwlVcHBza2F0dGFyIHN0YW5kYXJkYXZ2aWtlbHNlbiBiYXNlcmF0IHDDpSBldHQgdXJ2YWwNClNUREVWQQkJCT0gU1RERVZBCQkJIyMJVXBwc2thdHRhciBzdGFuZGFyZGF2dmlrZWxzZW4gYmFzZXJhdCBww6UgZXR0IHVydmFsLCBpbmtsdXNpdmUgdGFsLCB0ZXh0IG9jaCBsb2dpc2thIHbDpHJkZW4NClNUREVWUAkJCT0gU1REQVZQCQkJIyMJQmVyw6RrbmFyIHN0YW5kYXJkYXZ2aWtlbHNlbiBiYXNlcmF0IHDDpSBoZWxhIHBvcHVsYXRpb25lbg0KU1RERVZQQQkJCT0gU1RERVZQQQkJCSMjCUJlcsOka25hciBzdGFuZGFyZGF2dmlrZWxzZW4gYmFzZXJhdCBww6UgaGVsYSBwb3B1bGF0aW9uZW4sIGlua2x1c2l2ZSB0YWwsIHRleHQgb2NoIGxvZ2lza2EgdsOkcmRlbg0KU1RFWVgJCQk9IFNUREZFTFlYCQkJIyMJUmV0dXJuZXJhciBzdGFuZGFyZGZlbGV0IGbDtnIgZXR0IGbDtnJ1dHNww6V0dCB5LXbDpHJkZSBmw7ZyIHZhcmplIHgtdsOkcmRlIGkgcmVncmVzc2lvbmVuDQpURElTVAkJCT0gVEbDllJECQkJCSMjCVJldHVybmVyYXIgU3R1ZGVudHMgdC1mw7ZyZGVsbmluZw0KVElOVgkJCT0gVElOVgkJCQkjIwlSZXR1cm5lcmFyIGludmVyc2VuIHRpbGwgU3R1ZGVudHMgdC1mw7ZyZGVsbmluZw0KVFJFTkQJCQk9IFRSRU5ECQkJCSMjCVJldHVybmVyYXIgdsOkcmRlbiBsw6RuZ3MgZW4gbGluasOkciB0cmVuZA0KVFJJTU1FQU4JCT0gVFJJTU1FREVMCQkJIyMJUmV0dXJuZXJhciBtZWRlbHbDpHJkZXQgYXYgbWl0dHB1bmt0ZXJuYSBpIGVuIGRhdGFtw6RuZ2QNClRURVNUCQkJPSBUVEVTVAkJCQkjIwlSZXR1cm5lcmFyIHNhbm5vbGlraGV0ZW4gYmVyw6RrbmFkIHVyIFN0dWRlbnRzIHQtdGVzdA0KVkFSCQkJPSBWQVJJQU5TCQkJIyMJVXBwc2thdHRhciB2YXJpYW5zZW4gYmFzZXJhdCBww6UgZXR0IHVydmFsDQpWQVJBCQkJPSBWQVJBCQkJCSMjCVVwcHNrYXR0YXIgdmFyaWFuc2VuIGJhc2VyYXQgcMOlIGV0dCB1cnZhbCwgaW5rbHVzaXZlIHRhbCwgdGV4dCBvY2ggbG9naXNrYSB2w6RyZGVuDQpWQVJQCQkJPSBWQVJJQU5TUAkJCSMjCUJlcsOka25hciB2YXJpYW5zZW4gYmFzZXJhdCBww6UgaGVsYSBwb3B1bGF0aW9uZW4NClZBUlBBCQkJPSBWQVJQQQkJCQkjIwlCZXLDpGtuYXIgdmFyaWFuc2VuIGJhc2VyYXQgcMOlIGhlbGEgcG9wdWxhdGlvbmVuLCBpbmtsdXNpdmUgdGFsLCB0ZXh0IG9jaCBsb2dpc2thIHbDpHJkZW4NCldFSUJVTEwJCQk9IFdFSUJVTEwJCQkjIwlSZXR1cm5lcmFyIFdlaWJ1bGwtZsO2cmRlbG5pbmdlbg0KWlRFU1QJCQk9IFpURVNUCQkJCSMjCVJldHVybmVyYXIgZGV0IGVuc2lkaWdhIHNhbm5vbGlraGV0c3bDpHJkZXQgYXYgZXR0IHotdGVzdA0KDQoNCiMjDQojIwlUZXh0IGZ1bmN0aW9ucwkJCQkJVGV4dGZ1bmt0aW9uZXINCiMjDQpBU0MJCQk9IEFTQwkJCQkjIwnDhG5kcmFyIGhlbGJyZWRkcyAoZHViYmVsIGJ5dGUpIGVuZ2Vsc2thIGJva3N0w6R2ZXIgZWxsZXIga2F0YWthbmEgaW5vbSBlbiB0ZWNrZW5zdHLDpG5nIHRpbGwgdGVja2VuIG1lZCBoYWx2dCBicmVkZHN0ZWcgKGVua2VsIGJ5dGUpDQpCQUhUVEVYVAkJPSBCQUhUVEVYVAkJCSMjCU9tdmFuZGxhciBldHQgdGFsIHRpbGwgdGV4dCBtZWQgdmFsdXRhZm9ybWF0ZXQgw58gKGJhaHQpDQpDSEFSCQkJPSBURUNLRU5LT0QJCQkjIwlSZXR1cm5lcmFyIHRlY2tuZXQgc29tIGFuZ2VzIGF2IGtvZA0KQ0xFQU4JCQk9IFNUw4REQQkJCQkjIwlUYXIgYm9ydCBhbGxhIGlja2UgdXRza3JpdmJhcmEgdGVja2VuIGkgZW4gdGV4dA0KQ09ERQkJCT0gS09ECQkJCSMjCVJldHVybmVyYXIgZW4gbnVtZXJpc2sga29kIGbDtnIgZGV0IGbDtnJzdGEgdGVja25ldCBpIGVuIHRleHRzdHLDpG5nDQpDT05DQVRFTkFURQkJPSBTQU1NQU5GT0dBCQkJIyMJU2FtbWFuZm9nYXIgZmxlcmEgdGV4dGRlbGFyIHRpbGwgZW4gdGV4dHN0csOkbmcNCkRPTExBUgkJCT0gVkFMVVRBCQkJIyMJT212YW5kbGFyIGV0dCB0YWwgdGlsbCB0ZXh0IG1lZCB2YWx1dGFmb3JtYXQNCkVYQUNUCQkJPSBFWEFLVAkJCQkjIwlLb250cm9sbGVyYXIgb20gdHbDpSB0ZXh0dsOkcmRlbiDDpHIgaWRlbnRpc2thDQpGSU5ECQkJPSBISVRUQQkJCQkjIwlIaXR0YXIgZW4gdGV4dCBpIGVuIGFubmFuIChza2lsamVyIHDDpSBnZW1lbmVyIG9jaCB2ZXJzYWxlcikNCkZJTkRCCQkJPSBISVRUQUIJCQkjIwlIaXR0YXIgZW4gdGV4dCBpIGVuIGFubmFuIChza2lsamVyIHDDpSBnZW1lbmVyIG9jaCB2ZXJzYWxlcikNCkZJWEVECQkJPSBGQVNUVEFMCQkJIyMJRm9ybWF0ZXJhciBldHQgdGFsIHNvbSB0ZXh0IG1lZCBldHQgZmFzdCBhbnRhbCBkZWNpbWFsZXINCkpJUwkJCT0gSklTCQkJCSMjCcOEbmRyYXIgaGFsdmJyZWRkcyAoZW5rZWwgYnl0ZSkgZW5nZWxza2EgYm9rc3TDpHZlciBlbGxlciBrYXRha2FuYSBpbm9tIGVuIHRlY2tlbnN0csOkbmcgdGlsbCB0ZWNrZW4gbWVkIGhlbHQgYnJlZGRzdGVnIChkdWJiZWwgYnl0ZSkNCkxFRlQJCQk9IFbDhE5TVEVSCQkJIyMJUmV0dXJuZXJhciB0ZWNrZW4gbMOkbmdzdCB0aWxsIHbDpG5zdGVyIGkgZW4gc3Ryw6RuZw0KTEVGVEIJCQk9IFbDhE5TVEVSQgkJCSMjCVJldHVybmVyYXIgdGVja2VuIGzDpG5nc3QgdGlsbCB2w6Ruc3RlciBpIGVuIHN0csOkbmcNCkxFTgkJCT0gTMOETkdECQkJCSMjCVJldHVybmVyYXIgYW50YWxldCB0ZWNrZW4gaSBlbiB0ZXh0c3Ryw6RuZw0KTEVOQgkJCT0gTMOETkdEQgkJCSMjCVJldHVybmVyYXIgYW50YWxldCB0ZWNrZW4gaSBlbiB0ZXh0c3Ryw6RuZw0KTE9XRVIJCQk9IEdFTUVORVIJCQkjIwlPbXZhbmRsYXIgdGV4dCB0aWxsIGdlbWVuZXINCk1JRAkJCT0gRVhURVhUCQkJIyMJUmV0dXJuZXJhciBhbmdpdmV0IGFudGFsIHRlY2tlbiBmcsOlbiBlbiB0ZXh0IG1lZCBiw7ZyamFuIHZpZCBkZW4gcG9zaXRpb24gc29tIGR1IGFuZ2VyDQpNSURCCQkJPSBFWFRFWFRCCQkJIyMJUmV0dXJuZXJhciBhbmdpdmV0IGFudGFsIHRlY2tlbiBmcsOlbiBlbiB0ZXh0IG1lZCBiw7ZyamFuIHZpZCBkZW4gcG9zaXRpb24gc29tIGR1IGFuZ2VyDQpQSE9ORVRJQwkJPSBQSE9ORVRJQwkJCSMjCVJldHVybmVyYXIgZGUgZm9uZXRpc2thIChmdXJpZ2FuYSkgdGVja25lbiBpIGVuIHRleHRzdHLDpG5nDQpQUk9QRVIJCQk9IElOSVRJQUwJCQkjIwnDhG5kcmFyIGbDtnJzdGEgYm9rc3RhdmVuIGkgdmFyamUgb3JkIGkgZXR0IHRleHR2w6RyZGUgdGlsbCB2ZXJzYWwNClJFUExBQ0UJCQk9IEVSU8OEVFQJCQkjIwlFcnPDpHR0ZXIgdGVja2VuIGkgdGV4dA0KUkVQTEFDRUIJCT0gRVJTw4RUVEIJCQkjIwlFcnPDpHR0ZXIgdGVja2VuIGkgdGV4dA0KUkVQVAkJCT0gUkVQCQkJCSMjCVVwcHJlcGFyIGVuIHRleHQgZXR0IGJlc3TDpG10IGFudGFsIGfDpW5nZXINClJJR0hUCQkJPSBIw5ZHRVIJCQkJIyMJUmV0dXJuZXJhciB0ZWNrZW4gbMOkbmdzdCB0aWxsIGjDtmdlciBpIGVuIHN0csOkbmcNClJJR0hUQgkJCT0gSMOWR0VSQgkJCSMjCVJldHVybmVyYXIgdGVja2VuIGzDpG5nc3QgdGlsbCBow7ZnZXIgaSBlbiBzdHLDpG5nDQpTRUFSQ0gJCQk9IFPDlksJCQkJIyMJSGl0dGFyIGV0dCB0ZXh0dsOkcmRlIGkgZXR0IGFubmF0IChza2lsamVyIGludGUgcMOlIGdlbWVuZXIgb2NoIHZlcnNhbGVyKQ0KU0VBUkNIQgkJCT0gU8OWS0IJCQkJIyMJSGl0dGFyIGV0dCB0ZXh0dsOkcmRlIGkgZXR0IGFubmF0IChza2lsamVyIGludGUgcMOlIGdlbWVuZXIgb2NoIHZlcnNhbGVyKQ0KU1VCU1RJVFVURQkJPSBCWVQuVVQJCQkjIwlFcnPDpHR0ZXIgZ2FtbWFsIHRleHQgbWVkIG55IHRleHQgaSBlbiB0ZXh0c3Ryw6RuZw0KVAkJCT0gVAkJCQkjIwlPbXZhbmRsYXIgYXJndW1lbnRlbiB0aWxsIHRleHQNClRFWFQJCQk9IFRFWFQJCQkJIyMJRm9ybWF0ZXJhciBldHQgdGFsIG9jaCBvbXZhbmRsYXIgZGV0IHRpbGwgdGV4dA0KVFJJTQkJCT0gUkVOU0EJCQkJIyMJVGFyIGJvcnQgYmxhbmtzdGVnIGZyw6VuIHRleHQNClVQUEVSCQkJPSBWRVJTQUxFUgkJCSMjCU9tdmFuZGxhciB0ZXh0IHRpbGwgdmVyc2FsZXINClZBTFVFCQkJPSBURVhUTlVNCQkJIyMJT212YW5kbGFyIGV0dCB0ZXh0YXJndW1lbnQgdGlsbCBldHQgdGFsDQo=",
    "size": "30293"
}