{
    "namaFile": "lib\/PHPExcel\/Classes\/PHPExcel\/Style\/Font.php",
    "lastUpdate": "2017-12-25+01:39:38.00",
    "contentFile": "\/IHNlbGY6OlVOREVSTElORV9TSU5HTEUgOiBzZWxmOjpVTkRFUkxJTkVfTk9ORTsKICAgICAgICB9IGVsc2VpZiAoJHBWYWx1ZSA9PSAnJykgewogICAgICAgICAgICAkcFZhbHVlID0gc2VsZjo6VU5ERVJMSU5FX05PTkU7CiAgICAgICAgfQogICAgICAgIGlmICgkdGhpcy0+aXNTdXBlcnZpc29yKSB7CiAgICAgICAgICAgICRzdHlsZUFycmF5ID0gJHRoaXMtPmdldFN0eWxlQXJyYXkoYXJyYXkoJ3VuZGVybGluZScgPT4gJHBWYWx1ZSkpOwogICAgICAgICAgICAkdGhpcy0+Z2V0QWN0aXZlU2hlZXQoKS0+Z2V0U3R5bGUoJHRoaXMtPmdldFNlbGVjdGVkQ2VsbHMoKSktPmFwcGx5RnJvbUFycmF5KCRzdHlsZUFycmF5KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAkdGhpcy0+dW5kZXJsaW5lID0gJHBWYWx1ZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuICR0aGlzOwogICAgfQoKICAgIC8qKgogICAgICogR2V0IFN0cmlrZXRocm91Z2gKICAgICAqCiAgICAgKiBAcmV0dXJuIGJvb2xlYW4KICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGdldFN0cmlrZXRocm91Z2goKQogICAgewogICAgICAgIGlmICgkdGhpcy0+aXNTdXBlcnZpc29yKSB7CiAgICAgICAgICAgIHJldHVybiAkdGhpcy0+Z2V0U2hhcmVkQ29tcG9uZW50KCktPmdldFN0cmlrZXRocm91Z2goKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuICR0aGlzLT5zdHJpa2V0aHJvdWdoOwogICAgfQoKICAgIC8qKgogICAgICogU2V0IFN0cmlrZXRocm91Z2gKICAgICAqCiAgICAgKiBAcGFyYW0gYm9vbGVhbiAkcFZhbHVlCiAgICAgKiBAcmV0dXJuIFBIUEV4Y2VsX1N0eWxlX0ZvbnQKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIHNldFN0cmlrZXRocm91Z2goJHBWYWx1ZSA9IGZhbHNlKQogICAgewogICAgICAgIGlmICgkcFZhbHVlID09ICcnKSB7CiAgICAgICAgICAgICRwVmFsdWUgPSBmYWxzZTsKICAgICAgICB9CiAgICAgICAgaWYgKCR0aGlzLT5pc1N1cGVydmlzb3IpIHsKICAgICAgICAgICAgJHN0eWxlQXJyYXkgPSAkdGhpcy0+Z2V0U3R5bGVBcnJheShhcnJheSgnc3RyaWtlJyA9PiAkcFZhbHVlKSk7CiAgICAgICAgICAgICR0aGlzLT5nZXRBY3RpdmVTaGVldCgpLT5nZXRTdHlsZSgkdGhpcy0+Z2V0U2VsZWN0ZWRDZWxscygpKS0+YXBwbHlGcm9tQXJyYXkoJHN0eWxlQXJyYXkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICR0aGlzLT5zdHJpa2V0aHJvdWdoID0gJHBWYWx1ZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuICR0aGlzOwogICAgfQoKICAgIC8qKgogICAgICogR2V0IENvbG9yCiAgICAgKgogICAgICogQHJldHVybiBQSFBFeGNlbF9TdHlsZV9Db2xvcgogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gZ2V0Q29sb3IoKQogICAgewogICAgICAgIHJldHVybiAkdGhpcy0+Y29sb3I7CiAgICB9CgogICAgLyoqCiAgICAgKiBTZXQgQ29sb3IKICAgICAqCiAgICAgKiBAcGFyYW0gICAgUEhQRXhjZWxfU3R5bGVfQ29sb3IgJHBWYWx1ZQogICAgICogQHRocm93cyAgICBQSFBFeGNlbF9FeGNlcHRpb24KICAgICAqIEByZXR1cm4gUEhQRXhjZWxfU3R5bGVfRm9udAogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gc2V0Q29sb3IoUEhQRXhjZWxfU3R5bGVfQ29sb3IgJHBWYWx1ZSA9IG51bGwpCiAgICB7CiAgICAgICAgLy8gbWFrZSBzdXJlIHBhcmFtZXRlciBpcyBhIHJlYWwgY29sb3IgYW5kIG5vdCBhIHN1cGVydmlzb3IKICAgICAgICAkY29sb3IgPSAkcFZhbHVlLT5nZXRJc1N1cGVydmlzb3IoKSA\/ICRwVmFsdWUtPmdldFNoYXJlZENvbXBvbmVudCgpIDogJHBWYWx1ZTsKCiAgICAgICAgaWYgKCR0aGlzLT5pc1N1cGVydmlzb3IpIHsKICAgICAgICAgICAgJHN0eWxlQXJyYXkgPSAkdGhpcy0+Z2V0Q29sb3IoKS0+Z2V0U3R5bGVBcnJheShhcnJheSgnYXJnYicgPT4gJGNvbG9yLT5nZXRBUkdCKCkpKTsKICAgICAgICAgICAgJHRoaXMtPmdldEFjdGl2ZVNoZWV0KCktPmdldFN0eWxlKCR0aGlzLT5nZXRTZWxlY3RlZENlbGxzKCkpLT5hcHBseUZyb21BcnJheSgkc3R5bGVBcnJheSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgJHRoaXMtPmNvbG9yID0gJGNvbG9yOwogICAgICAgIH0KICAgICAgICByZXR1cm4gJHRoaXM7CiAgICB9CgogICAgLyoqCiAgICAgKiBHZXQgaGFzaCBjb2RlCiAgICAgKgogICAgICogQHJldHVybiBzdHJpbmcgICAgSGFzaCBjb2RlCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBnZXRIYXNoQ29kZSgpCiAgICB7CiAgICAgICAgaWYgKCR0aGlzLT5pc1N1cGVydmlzb3IpIHsKICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5nZXRTaGFyZWRDb21wb25lbnQoKS0+Z2V0SGFzaENvZGUoKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIG1kNSgKICAgICAgICAgICAgJHRoaXMtPm5hbWUgLgogICAgICAgICAgICAkdGhpcy0+c2l6ZSAuCiAgICAgICAgICAgICgkdGhpcy0+Ym9sZCA\/ICd0JyA6ICdmJykgLgogICAgICAgICAgICAoJHRoaXMtPml0YWxpYyA\/ICd0JyA6ICdmJykgLgogICAgICAgICAgICAoJHRoaXMtPnN1cGVyU2NyaXB0ID8gJ3QnIDogJ2YnKSAuCiAgICAgICAgICAgICgkdGhpcy0+c3ViU2NyaXB0ID8gJ3QnIDogJ2YnKSAuCiAgICAgICAgICAgICR0aGlzLT51bmRlcmxpbmUgLgogICAgICAgICAgICAoJHRoaXMtPnN0cmlrZXRocm91Z2ggPyAndCcgOiAnZicpIC4KICAgICAgICAgICAgJHRoaXMtPmNvbG9yLT5nZXRIYXNoQ29kZSgpIC4KICAgICAgICAgICAgX19DTEFTU19fCiAgICAgICAgKTsKICAgIH0KfQo=",
    "size": "14999"
}