{
    "namaFile": "lib\/jpgraph\/jpgraph_imgtrans.php",
    "lastUpdate": "2013-12-16+17:18:12.00",
    "contentFile": "",
    "size": "8224"
}