{
    "namaFile": "js\/persediaan\/daftarPersediaanBarang.js",
    "lastUpdate": "2018-09-25+08:41:16.83",
    "contentFile": "dmFyIGRhZnRhclBlcnNlZGlhYW5CYXJhbmdGaWx0ZXJTS1BEID0gbmV3IFNrcGRDbHMoewogIHByZWZpeDogImRhZnRhclBlcnNlZGlhYW5CYXJhbmciLAogIGZvcm1OYW1lOiAiZGFmdGFyUGVyc2VkaWFhbkJhcmFuZ0Zvcm0iLAogIHBpbGloVXJ1c2FuZnRlcjogZnVuY3Rpb24oKSB7CiAgICBkYWZ0YXJQZXJzZWRpYWFuQmFyYW5nLmZpbHRlclJlbmRlcih0cnVlKTsKICB9LAogIHBpbGloQmlkYW5nQWZ0ZXI6IGZ1bmN0aW9uKCkgewogICAgZGFmdGFyUGVyc2VkaWFhbkJhcmFuZy5maWx0ZXJSZW5kZXIodHJ1ZSk7CiAgfSwKICBwaWxpaFVuaXRBZnRlcjogZnVuY3Rpb24oKSB7CiAgICBkYWZ0YXJQZXJzZWRpYWFuQmFyYW5nLmZpbHRlclJlbmRlcih0cnVlKTsKICB9LAogIHBpbGloU3ViVW5pdEFmdGVyOiBmdW5jdGlvbigpIHsKICAgIGRhZnRhclBlcnNlZGlhYW5CYXJhbmcuZmlsdGVyUmVuZGVyKHRydWUpOwogIH0sCiAgcGlsaWhTZWtzaUFmdGVyOiBmdW5jdGlvbigpIHsKICAgIGRhZnRhclBlcnNlZGlhYW5CYXJhbmcuZmlsdGVyUmVuZGVyKHRydWUpOwogIH0KfSk7CnZhciBkYWZ0YXJQZXJzZWRpYWFuQmFyYW5nID0gbmV3IERhZnRhck9iajIoewoJcHJlZml4IDogJ2RhZnRhclBlcnNlZGlhYW5CYXJhbmcnLAoJdXJsIDogJ3BnUGVyc2VkaWFhbi5waHA\\",
    "size": "21426"
}