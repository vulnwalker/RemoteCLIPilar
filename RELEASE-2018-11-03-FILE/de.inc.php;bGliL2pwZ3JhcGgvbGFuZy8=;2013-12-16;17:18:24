{
    "namaFile": "lib\/jpgraph\/lang\/de.inc.php",
    "lastUpdate": "2013-12-16+17:18:24.00",
    "contentFile": "PD9waHAKLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQovLyBGaWxlOiAgICAgICAgREUuSU5DLlBIUAovLyBEZXNjcmlwdGlvbjogR2VybWFuIGxhbmd1YWdlIGZpbGUgZm9yIGVycm9yIG1lc3NhZ2VzCi8vIENyZWF0ZWQ6ICAgICAyMDA2LTAzLTA2Ci8vIEF1dGhvcjogICAgICBUaW1vIExlb3BvbGQgKHRpbW9AbGVvcG9sZC1oaC5kZSkKLy8gICAgICAgICAgICAgIEpvaGFuIFBlcnNzb24gKGxqcEBsb2NhbGhvc3QubmlsKQovLyBWZXI6ICAgICAgICAgJElkOiBkZS5pbmMucGhwIDE4ODYgMjAwOS0xMC0wMSAyMzozMDoxNlogbGpwICQKLy8KLy8gQ29weXJpZ2h0IChjKQovLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoqLwoKLy8gTm90aXo6IERhcyBGb3JtYXQgZnVlciBqZWRlIEZlaGxlcm1lbGR1bmcgaXN0IGFycmF5KDxGZWhsZXJtZWxkdW5nPiw8QW56YWhsIGRlciBBcmd1bWVudGU+KQokX2pwZ19tZXNzYWdlcyA9IGFycmF5KAoKLyoKKiogSGVhZGVycyB3dXJkZW4gYmVyZWl0cyBnZXNlbmRldCAtIEZlaGxlci4gRGllcyB3aXJkIGFscyBIVE1MIGZvcm1hdGllcnQsIHdlaWwgZXMgZGlyZWt0IGFscyB0ZXh0IHp1cnVlY2tnZXNlbmRldCB3aXJkCiovCjEwICA9PiBhcnJheSgnPHRhYmxlIGJvcmRlcj0iMSI+PHRyPjx0ZCBzdHlsZT0iY29sb3I6ZGFya3JlZDtmb250LXNpemU6MS4yZW07Ij48Yj5KcEdyYXBoIEZlaGxlcjo8L2I+CkhUVFAgaGVhZGVyIHd1cmRlbiBiZXJlaXRzIGdlc2VuZGV0Ljxicj5GZWhsZXIgaW4gZGVyIERhdGVpIDxiPiVzPC9iPiBpbiBkZXIgWmVpbGUgPGI+JWQ8L2I+LjwvdGQ+PC90cj48dHI+PHRkPjxiPkVya2zDpHJ1bmc6PC9iPjxicj5IVFRQIGhlYWRlciB3dXJkZW4gYmVyZWl0cyB6dW0gQnJvd3NlciBnZXNlbmRldCwgd29iZWkgZGllIERhdGVuIGFscyBUZXh0IGdla2VubnplaWNobmV0IHd1cmRlbiwgYmV2b3IgZGllIEJpYmxpb3RoZWsgZGllIENoYW5jZSBoYXR0ZSwgc2VpbmVuIEJpbGQtSFRUUC1IZWFkZXIgenVtIEJyb3dzZXIgenUgc2NoaWNrZW4uIERpZXMgdmVyaGluZGVydCwgZGFzcyBkaWUgQmlibGlvdGhlayBCaWxkZGF0ZW4genVtIEJyb3dzZXIgc2NoaWNrZW4ga2FubiAod2VpbCBzaWUgdm9tIEJyb3dzZXIgYWxzIFRleHQgaW50ZXJwcmV0aWVydCB3w7xyZGVuIHVuZCBkYWhlciBudXIgTWlzdCBkYXJnZXN0ZWxsdCB3w7xyZGUpLjxwPldhaHJzY2hlaW5saWNoIHN0ZWh0IFRleHQgaW0gU2tyaXB0IGJldm9yIDxpPkdyYXBoOjpTdHJva2UoKTwvaT4gYXVmZ2VydWZlbiB3aXJkLiBXZW5uIGRpZXNlciBUZXh0IHp1bSBCcm93c2VyIGdlc2VuZGV0IHdpcmQsIG5pbW10IGRpZXNlciBhbiwgZGFzcyBkaWUgZ2VzYW10ZW4gRGF0ZW4gYXVzIFRleHQgYmVzdGVoZW4uIFN1Y2ggbmFjaCBpcmdlbmR3ZWxjaGVtIFRleHQsIGF1Y2ggbmFjaCBMZWVyemVpY2hlbiB1bmQgWmVpbGVudW1icsO8Y2hlbiwgZGllIGV2ZW50dWVsbCBiZXJlaXRzIHp1bSBCcm93c2VyIGdlc2VuZGV0IHd1cmRlbi4gPHA+WnVtIEJlaXNwaWVsIGlzdCBlaW4gb2Z0IGF1ZnRyZXRlbmRlciBGZWhsZXIsIGVpbmUgTGVlcnplaWxlIGFtIEFuZmFuZyBkZXIgRGF0ZWkgb2RlciB2b3IgPGk+R3JhcGg6OlN0cm9rZSgpPC9pPiB6dSBsYXNzZW4uIjxiPiZsdDs\\/JywxKSwKMjUxMTQgPT4gYXJyYXkoJ1BIUCBoYXQgbmljaHQgZGllIGVyZm9yZGVybGljaGVuIFJlY2h0ZSwgdW0gaW4gZGllIENhY2hlLURhdGVpICVzIHp1IHNjaHJlaWJlbi4gQml0dGUgdmVyc2ljaGVyZSBEaWNoLCBkYXNzIGRlciBCZW51dHplciwgZGVyIFBIUCBhbndlbmRldCwgZGllIGVudHNwcmVjaGVuZGVuIFNjaHJlaWJyZWNodGUgZsO8ciBkaWUgRGF0ZWkgaGF0LCB3ZW5uIER1IGRhcyBDYWNoZS1TeXN0ZW0gaW4gSlBHcmFwaCB2ZXJ3ZW5kZW4gd2lsbHN0LicsMSksCjI1MTE1ID0+IGFycmF5KCdCZXJlY2h0aWd1bmcgZsO8ciBnZWNhY2hldGVzIEJpbGQgJXMga2FubiBuaWNodCBnZXNldHp0IHdlcmRlbi4gUHJvYmxlbSBtaXQgZGVuIFJlY2h0ZW4\",
    "size": "43884"
}