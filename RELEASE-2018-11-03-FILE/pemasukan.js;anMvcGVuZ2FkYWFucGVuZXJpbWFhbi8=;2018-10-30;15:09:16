{
    "namaFile": "js\/pengadaanpenerimaan\/pemasukan.js",
    "lastUpdate": "2018-10-30+15:09:16.06",
    "contentFile": "ZnVuY3Rpb24gUGVyYmFydWlfRGF0YSgpew0KCXBlbWFzdWthbi5yZWZyZXNoTGlzdCh0cnVlKTsNCn0NCg0KdmFyIHBlbWFzdWthblNLUEQgPSBuZXcgU2twZENscyh7DQoJcHJlZml4IDogJ3BlbWFzdWthblNLUEQnLCBmb3JtTmFtZToncGVtYXN1a2FuRm9ybScsIGtvbG9tV2lkdGg6MTIwLA0KCQ0KCS8qcGlsaWhCaWRhbmdBZnRlciA6IGZ1bmN0aW9uKCl7cGVtYXN1a2FuLnJlZnJlc2hMaXN0KHRydWUpO30sDQoJcGlsaWhVbml0QWZ0ZXIgOiBmdW5jdGlvbigpe3BlbWFzdWthbi5yZWZyZXNoTGlzdCh0cnVlKTt9LA0KCXBpbGloU3ViVW5pdEFmdGVyIDogZnVuY3Rpb24oKXtwZW1hc3VrYW4ucmVmcmVzaExpc3QodHJ1ZSk7fSwNCglwaWxpaFNla3NpQWZ0ZXIgOiBmdW5jdGlvbigpe3BlbWFzdWthbi5yZWZyZXNoTGlzdCh0cnVlKTt9Ki8NCn0pOw0KDQp2YXIgcGVtYXN1a2FuU0tQRDIgPSBuZXcgU2twZENscyh7DQoJcHJlZml4IDogJ3BlbWFzdWthblNLUEQyJywgDQoJZm9ybU5hbWU6ICdwZW1hc3VrYW5Gb3JtJywNCgkNCgkvKnBpbGloVXJ1c2FuZnRlciA6IGZ1bmN0aW9uKCl7cGVtYXN1a2FuLnJlZnJlc2hMaXN0KHRydWUpO30sDQoJcGlsaWhCaWRhbmdBZnRlciA6IGZ1bmN0aW9uKCl7cGVtYXN1a2FuLnJlZnJlc2hMaXN0KHRydWUpO30sDQoJcGlsaWhVbml0QWZ0ZXIgOiBmdW5jdGlvbigpe3BlbWFzdWthbi5yZWZyZXNoTGlzdCh0cnVlKTt9LA0KCXBpbGloU3ViVW5pdEFmdGVyIDogZnVuY3Rpb24oKXtwZW1hc3VrYW4ucmVmcmVzaExpc3QodHJ1ZSk7fSwNCglwaWxpaFNla3NpQWZ0ZXIgOiBmdW5jdGlvbigpe3BlbWFzdWthbi5yZWZyZXNoTGlzdCh0cnVlKTt9Ki8NCn0pOw0KDQp2YXIgcGVtYXN1a2FuID0gbmV3IERhZnRhck9iajIoew0KCXByZWZpeCA6ICdwZW1hc3VrYW4nLA0KCXVybCA6ICdwYWdlcy5waHA\/UGc9cGVtYXN1a2FuJywgDQoJZm9ybU5hbWUgOiAncGVtYXN1a2FuRm9ybScsDQoJc2F0dWFuX2Zvcm0gOiAnMCcsLy9kZWZhdWx0IGpzIHNhdHVhbg0KCUpNTF9QT1NUSU5HIDogMCwNCglCVExfUE9TVElORyA6IDAsDQoJam1sU2V0UE9TVCAJOiAwLA0KCURhcmlWYWxpZGFzaSA6IDAsDQoJU3RhdHVzUG9zdGluZyA6IDAsDQoJUE9TVF9UcmFjazEgOiAwLA0KCVBPU1RfVHJhY2syIDogMCwNCglQT1NUX1RyYWNrMyA6IDAsDQoJUE9TVF9UcmFjazQgOiAwLA0KCUFkYVlhbmdUYW55YSA6IDAsDQoJQWpheFRpbWVfVHJhY2sxIDogIiIsDQoJQWpheFRpbWVfVHJhY2syIDogIiIsDQoJQWpheFRpbWVfVHJhY2szIDogIiIsDQoJQWpheFRpbWVfVHJhY2s0IDogIiIsDQoJV2FrdHVUZXJha2hpciA6IDAsDQoJRXN0aW1hc2lXYWt0dW55YSA6IDAsDQoJQmFuZGluZ1dha3R1IDogMCwNCglsb2FkaW5nOiBmdW5jdGlvbigpew0KCQkvL2FsZXJ0KCdsb2FkaW5nJyk7DQoJCXRoaXMudG9wQmFyUmVuZGVyKCk7DQoJCXRoaXMuZmlsdGVyUmVuZGVyKCk7DQoJCXRoaXMuZGFmdGFyUmVuZGVyKCk7DQoJCXRoaXMuc3VtSGFsUmVuZGVyKCk7DQoJDQoJfSwNCgkNCglTZXRfUG9zdFRyYWNrIDogZnVuY3Rpb24oKXsNCgkJaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImptbF9icmdfbmV4dFBPU1QiKSl7DQoJCQlKbWxCcmcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiam1sX2JyZ19uZXh0UE9TVCIpLnZhbHVlOw0KCQkJSm1sQnJnID0gcGFyc2VJbnQoSm1sQnJnKTsNCgkJCWlmKEptbEJyZyA+IDEwMCAmJiBKbWxCcmcgPD01MDApew0KCQkJCWRhdGEgPSAyOw0KCQkJfWVsc2UgaWYoSm1sQnJnID4gNTAwICYmIEptbEJyZyA8PTEwMDApew0KCQkJCWRhdGEgPSAzOw0KCQkJfWVsc2UgaWYoSm1sQnJnID4gMTAwMCl7DQoJCQkJZGF0YSA9IDQ7DQoJCQl9ZWxzZXsNCgkJCQlkYXRhID0gMTsNCgkJCX0NCgkJfWVsc2V7DQoJCQlkYXRhID0gMTsNCgkJfQ0KCQkJDQoJCQ0KCQlyZXR1cm4gZGF0YTsNCgl9LA0KCQ0KCUNla19QT1NUX1RyYWNrIDogZnVuY3Rpb24oKXsNCgkJdmFyIG1lPXRoaXM7DQoJCXZhciBwb3N0ID0gMDsNCgkJaWYocG9zdCA9PSAwICYmIG1lLlBPU1RfVHJhY2sxPT0xKXBvc3Q9MTsNCgkJaWYocG9zdCA9PSAwICYmIG1lLlBPU1RfVHJhY2syPT0xKXBvc3Q9MTsNCgkJaWYocG9zdCA9PSAwICYmIG1lLlBPU1RfVHJhY2szPT0xKXBvc3Q9MTsNCgkJaWYocG9zdCA9PSAwICYmIG1lLlBPU1RfVHJhY2s0PT0xKXBvc3Q9MTsNCgkJDQoJCXJldHVybiBwb3N0OwkJDQoJfSwNCgkNCglTZXRfUE9TVF9UcmFjayA6IGZ1bmN0aW9uKHRyYWNrLCBpc2kpew0KCQl2YXIgbWU9dGhpczsNCgkJc3dpdGNoKHRyYWNrKXsNCgkJCWNhc2UgMiA6IG1lLlBPU1RfVHJhY2syPWlzaTticmVhazsNCgkJCWNhc2UgMyA6IG1lLlBPU1RfVHJhY2szPWlzaTticmVhazsNCgkJCWNhc2UgNCA6IG1lLlBPU1RfVHJhY2s0PWlzaTticmVhazsNCgkJCWRlZmF1bHQ6IG1lLlBPU1RfVHJhY2sxPWlzaTticmVhazsNCgkJfQkNCgl9LA0KCQ0KCWZpbHRlclJlbmRlckFmdGVyIDogZnVuY3Rpb24oKXsNCgkJdmFyIG1lID0gdGhpczsNCgkJRGF0YVBlbmdhdHVyYW4ubnlhbGFrYW5kYXRlcGlja2VyMigpOwkJDQoJfSwNCgkNCglTZXROYW1hOiBmdW5jdGlvbihwaWxpaGFuKXsNCgkJCXZhciBtZT10aGlzOw0KCQkJJC5hamF4KHsNCgkJCQl0eXBlOidQT1NUJywgDQoJCQkJZGF0YTokKCcjJyt0aGlzLnByZWZpeCsnX2Zvcm1fVFREJykuc2VyaWFsaXplKCksDQoJCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9U2V0TmFtYSZwaWxpaGFuPScrcGlsaWhhbiwNCgkJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJCQ0KCQkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7DQoJCQkJCWlmKHJlc3AuZXJyPT0nJyl7DQoJCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmlwXycrcGlsaWhhbikudmFsdWU9cmVzcC5jb250ZW50Lm5pcDsNCgkJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwYW5na2F0XycrcGlsaWhhbikudmFsdWU9cmVzcC5jb250ZW50LnBhbmdrYXQ7DQoJCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZXNlbG9uXycrcGlsaWhhbikudmFsdWU9cmVzcC5jb250ZW50LmVzZWxvbjsNCgkJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqYWJhdGFuXycrcGlsaWhhbikudmFsdWU9cmVzcC5jb250ZW50LmphYmF0YW47DQoJCQkJCX1lbHNlew0KCQkJCQkJYWxlcnQocmVzcC5lcnIpOw0KCQkJCQl9DQoJCQkgIAl9LA0KCQkJCWVycm9yOiBmdW5jdGlvbiAoeGhyLCBhamF4T3B0aW9ucywgdGhyb3duRXJyb3IpIHsNCgkJCQkJbWUuU2V0TmFtYShwaWxpaGFuKTsNCgkJICAgIAl9DQoJCQl9KTsJDQoJfSwJDQoJDQoJZGV0YWlsOiBmdW5jdGlvbigpew0KCQkvL2FsZXJ0KCdkZXRhaWwnKTsNCgkJdmFyIG1lID0gdGhpczsNCgkJZXJybXNnID0gdGhpcy5DZWtDaGVja2JveCgpOw0KCQlpZihlcnJtc2cgPT0nJyl7IA0KCQkJdmFyIGJveCA9IHRoaXMuR2V0Q2J4Q2hlY2tlZCgpOwkJCQ0KCQkJLy9Vc2VyQWt0aXZpdGFzRGV0LmdlbkRldGFpbCgpOwkJCQ0KCQkJDQoJCX1lbHNlew0KCQkNCgkJCWFsZXJ0KGVycm1zZyk7DQoJCX0NCgkJDQoJfSwNCgkNCglJbnB1dEJhcnU6IGZ1bmN0aW9uKCl7DQoJCXZhciBtZSA9IHRoaXM7DQoJCXZhciBjb3ZlcjEgPSB0aGlzLnByZWZpeCsnX2Zvcm1jb3Zlcic7DQoJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7DQoJCWFkZENvdmVyUGFnZTIoY292ZXIxLDEsdHJ1ZSxmYWxzZSk7DQoJCSQuYWpheCh7DQoJCQl0eXBlOidQT1NUJywgDQoJCQlkYXRhOiQoJyMnK3RoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLA0KCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9Zm9ybUJhcnUnLA0KCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CQkNCgkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CQ0KCQkJCWRlbEVsZW0oY292ZXIxKTsNCgkJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdhdXRvJzsNCgkJCQkvL2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQ7DQoJCQkJaWYocmVzcC5lcnI9PScnKXsNCgkJCQkJdmFyIGFGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocGVtYXN1a2FuLmZvcm1OYW1lKTsJCQ0KCQkJCQlhRm9ybS5hY3Rpb249IG1lLnVybCsnX2lucyZZTj0xJzsvLyc\\/ICcwJysgZSA6IGU7DQoJICAJcmV0dXJuIGU7DQoJIH0sDQoJDQoJRWRpdDpmdW5jdGlvbigpew0KCQl2YXIgbWUgPSB0aGlzOw0KCQllcnJtc2cgPSB0aGlzLkNla0NoZWNrYm94KCk7DQoJCWlmKGVycm1zZyA9PScnKXsgDQoJCQl2YXIgYm94ID0gdGhpcy5HZXRDYnhDaGVja2VkKCk7DQoJCQl2YXIgY292ZXIxID0gdGhpcy5wcmVmaXgrJ19mb3JtVWJhaGNvdmVyMic7DQoJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOw0KCQkJYWRkQ292ZXJQYWdlMihjb3ZlcjEsMSx0cnVlLGZhbHNlKTsNCgkJCSQuYWpheCh7DQoJCQkJdHlwZTonUE9TVCcsIA0KCQkJCWRhdGE6JCgnIycrdGhpcy5mb3JtTmFtZSkuc2VyaWFsaXplKCksDQoJCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9UGVuZ2VjZWthblViYWgmQ2VrVWJhaD0xJywNCgkJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJCQ0KCQkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CQ0KCQkJCQlkZWxFbGVtKGNvdmVyMSk7DQoJCQkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2F1dG8nOw0KCQkJCQkvL2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQ7DQoJCQkJCWlmKHJlc3AuZXJyPT0nJyl7DQoJCQkJCQl2YXIgYUZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChwZW1hc3VrYW4uZm9ybU5hbWUpOwkJDQoJCQkJCQlhRm9ybS5hY3Rpb249IHBlbWFzdWthbi51cmwrJ19pbnMmWU49Mic7Ly8nP09wPScrb3ArJyZQZz0yJmlkcHJzPWNldGFrX2hhbCc7CQkNCgkJCQkJCWFGb3JtLnRhcmdldD0nX2JsYW5rJzsNCgkJCQkJCWFGb3JtLnN1Ym1pdCgpOwkNCgkJCQkJCWFGb3JtLnRhcmdldD0nJzsNCgkJCQkJfWVsc2V7DQoJCQkJCQlhbGVydChyZXNwLmVycik7DQoJCQkJCX0NCgkJCSAgCX0NCgkJCX0pOw0KCQkJDQoJCQkNCgkJfWVsc2V7DQoJCQlhbGVydChlcnJtc2cpOw0KCQl9DQoJCQ0KCX0sDQoJU2ltcGFuU0lQS0Q6IGZ1bmN0aW9uKCl7DQoJCXZhciBtZT0gdGhpczsJDQoJCXRoaXMuT25FcnJvckNsb3NlID0gZmFsc2UJDQoJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7DQoJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyX3NpbXBhbnZhbGlkYXNpJzsNCgkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOw0KCQkNCgkJdmFyIGlkcGVuZXJpbWFhbj1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCggdGhpcy5wcmVmaXgrJ19pZHBsaCcpLnZhbHVlOw0KCQkkLmFqYXgoew0KCQkJdHlwZTonUE9TVCcsIA0KCQkJZGF0YTokKCcjJyt0aGlzLnByZWZpeCsnX2Zvcm0nKS5zZXJpYWxpemUoKSwNCgkJCXVybDogJ2FwaS5waHA\\/bWUuSk1MX1BPU1RJTkc6bWUuQlRMX1BPU1RJTkc7DQoJCXZhciBqbWxfYnJnX25leHRQT1NUID0gMTsNCgkJaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImptbF9icmdfbmV4dFBPU1QiKSlqbWxfYnJnX25leHRQT1NUID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImptbF9icmdfbmV4dFBPU1QiKS52YWx1ZTsNCgkJDQoJCXZhciBLZXQgPSBKbnMgPT0gMT8iUE9TVElORyI6IkJBVEFMIFBPU1RJTkciOw0KCQkNCgkJRGF0YVBlbmdhdHVyYW4uU2V0X2Nla0RjSURfSU5ORVIoIktldF9FbGFwc2VkIiwgIjxocj5QUk9TRVMgIitLZXQrIiA6ICIrU3VkYWhQb3N0aW5nKyIvIitqbWxfYnJnX25leHRQT1NUKTsNCgl9LA0KCQ0KCVByb3Nlc1Bvc3RpbmdfUGVuZ2FkYWFuX0FmdGVyOiBmdW5jdGlvbih1cnV0YW4sIGtvbnRlbiwgSmFsdXIpew0KCQl2YXIgbWU9dGhpczsNCgkJam1sU2V0UE9TVCA9IG1lLmptbFNldFBPU1Q7DQoJCW1lLkpNTF9QT1NUSU5HID0gTnVtYmVyKG1lLkpNTF9QT1NUSU5HKSArIE51bWJlcihrb250ZW4uam1sX3Byb3Nlcyk7CQ0KCQkNCgkJaWYoa29udGVuLkxhbmdzdW5nID09ICIxIil1cnV0YW4rPTE7CQkNCgkJbWUuZnVuY3Rpb25fcGVyc2VuYW4oa29udGVuLnBlcnNlbik7DQoJCSQoIiNrZXRfdG90X2ptbF9wb3N0IikuaHRtbChrb250ZW4uam1sX2JhcmFuZyk7DQoJCQ0KCQltZS5HZXRUaW1lUG9zdGluZyhKYWx1cik7CQ0KCQltZS5TZXRfRGV0YWlsRGF0YVBvc3RpbmcoKTsJCQ0KCQkJCQ0KCQlpZihrb250ZW4uc2VsZXNhaSA9PSAxKXsNCgkJCXN0b3B3YXRjaC5TdG9wKCk7DQoJCQljbGVhclRpbWVvdXQobWUuQmFuZGluZ1dha3R1KTsJDQoJCQlpZihtZS5DZWtfUE9TVF9UcmFjaygpID09IDApbWUuVXBkYXRlUG9zdGluZ0Jlcmhhc2lsKCk7CQkJDQoJCX1lbHNlewkJDQoJCQlpZihtZS5KTUxfUE9TVElORyA+PSBqbWxTZXRQT1NUKXsNCgkJCQlpZihtZS5DZWtfUE9TVF9UcmFjaygpID09IDAgJiYgbWUuQWRhWWFuZ1RhbnlhID09IDApew0KCQkJCQltZS5BZGFZYW5nVGFueWEgPSAxOw0KCQkJCQkvKnZhciB0YW55YSA9IGNvbmZpcm0oIkRhdGEgU3Vrc2VzIERpIFBvc3RpbmcgISBNYXUgZGkgTGFuanV0a2FuID8iKTsNCgkJCQkJaWYodGFueWEpew0KCQkJCQkJbWUuSk1MX1BPU1RJTkc9MDsNCgkJCQkJCW1lLlN0YXR1c1Bvc3RpbmcgPSAxOw0KCQkJCQkJbWUuQWRhWWFuZ1RhbnlhID0gMA0KCQkJCQkJbWUuUHJvc2VzUG9zdGluZ19QZW5nYWRhYW4oMCwgSmFsdXIpOw0KCQkJCQl9ZWxzZXsNCgkJCQkJCW1lLlN0YXR1c1Bvc3RpbmcgPSAwOw0KCQkJCQkJbWUuTG9hZGluZ1Bvc3RpbmdfRW5kKCk7DQoJCQkJCX0qLw0KCQkJCQlpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicGVtYXN1a2FuX2Zvcm1jb3Zlcl9sb2FkIikpZGVsRWxlbSgicGVtYXN1a2FuX2Zvcm1jb3Zlcl9sb2FkIik7DQoJCQkJCWFsZXJ0KCJEYXRhIFN1a3NlcyBEaSBQb3N0aW5nICEiKTsNCgkJCQkJc3RvcHdhdGNoLlN0b3AoKTsNCgkJCQkJY2xlYXJUaW1lb3V0KG1lLkJhbmRpbmdXYWt0dSk7CQ0KCQkJCQltZS5TdGF0dXNQb3N0aW5nID0gMDsNCgkJCQkJbWUuTG9hZGluZ1Bvc3RpbmdfRW5kKCk7DQoJCQkJfQkJCQkJCQkJCQ0KCQkJfWVsc2V7CQkJCQ0KCQkJCW1lLlByb3Nlc1Bvc3RpbmdfUGVuZ2FkYWFuKHVydXRhbiwgSmFsdXIpOw0KCQkJfQ0KCQl9CQkNCgkJDQoJCQ0KCX0sDQoJDQoJTG9hZGluZ1Bvc3Rpbmc6IGZ1bmN0aW9uKGtvbnRlbil7DQoJCXZhciBtZSA9IHRoaXM7DQoJCWlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJqbWxfYnJnX25leHRQT1NUIikpZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImptbF9icmdfbmV4dFBPU1QiKS5yZWFkT25seT10cnVlOw0KCQlpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicG9zdGluZyIpKWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJwb3N0aW5nIikuZGlzYWJsZWQ9dHJ1ZTsNCgl9LAkJDQoJDQoJTXVsYWlQb3N0aW5nX1BlbmdhZGFhbjpmdW5jdGlvbigpewkNCgkJdmFyIG1lPXRoaXM7DQoJCWlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJCdG5fRm9yUG9zdGluZyIpKXsNCgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJCdG5fRm9yUG9zdGluZyIpLmlubmVySFRNTD0iPHRhYmxlIHdpZHRoPScxMDAlJz48dHI+PHRkPjxpbWcgc3JjPSdpbWFnZXMvYWRtaW5pc3RyYXRvci9pbWFnZXMvbG9hZGVyLmdpZicgd2lkdGg9JzM1cHgnIC8+PC90ZD48dGQgd2lkdGg9JzEwJSc+PGlucHV0IHR5cGU9J2J1dHRvbicgbmFtZT0nQnRuX1N0b3BQb3N0aW5nJyB2YWx1ZT0nQkVSSEVOVEknIG9uY2xpY2s9J3BlbWFzdWthbi5CZXJoZW50aVBvc3RpbmdfUGVuZ2FkYWFuKCk7JyAvPjwvdGQ+PC90cj48L3RhYmxlPiI7DQoJCX0NCgl9LA0KCQ0KCUJlcmhlbnRpUG9zdGluZ19QZW5nYWRhYW46ZnVuY3Rpb24oKXsJDQoJCXZhciBtZT10aGlzOw0KCQltZS5TdGF0dXNQb3N0aW5nID0wOw0KCQlpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiQnRuX0ZvclBvc3RpbmciKSl7DQoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiQnRuX0ZvclBvc3RpbmciKS5pbm5lckhUTUw9IjxpbWcgc3JjPSdpbWFnZXMvYWRtaW5pc3RyYXRvci9pbWFnZXMvbG9hZGVyZW5kLmdpZicgd2lkdGg9JzMwcHgnIC8+IjsNCgkJCWNsZWFyVGltZW91dChtZS5CYW5kaW5nV2FrdHUpOwkNCgkJCXN0b3B3YXRjaC5TdG9wKCk7DQoJCQkNCgkJfQ0KCX0sDQoJCQ0KCUxvYWRpbmdQb3N0aW5nX0VuZDogZnVuY3Rpb24oKXsNCgkJdmFyIG1lPXRoaXM7DQoJCWlmKG1lLkNla19QT1NUX1RyYWNrKCkgPT0gMCl7DQoJCQljbGVhclRpbWVvdXQobWUuQmFuZGluZ1dha3R1KTsNCgkJCWlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJwZW1hc3VrYW5fZm9ybWNvdmVyIikpZGVsRWxlbSgicGVtYXN1a2FuX2Zvcm1jb3ZlciIpOw0KCQkJbWUuUG9zdGluZygpOw0KCQl9CQkNCgl9LA0KCQ0KCVNldEFqYXhUaW1lOmZ1bmN0aW9uKEphbHVyPTEpew0KCQl2YXIgbWU9dGhpczsNCgkJdmFyIFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsNCgkJaWYoSmFsdXIgPT0gMSltZS5BamF4VGltZV9UcmFjazE9VGltZTsNCgkJaWYoSmFsdXIgPT0gMiltZS5BamF4VGltZV9UcmFjazI9VGltZTsNCgkJaWYoSmFsdXIgPT0gMyltZS5BamF4VGltZV9UcmFjazM9VGltZTsNCgkJaWYoSmFsdXIgPT0gNCltZS5BamF4VGltZV9UcmFjazQ9VGltZTsNCgl9LA0KCQ0KCUdldEFqYXhUaW1lOmZ1bmN0aW9uKEphbHVyPTEpew0KCQl2YXIgbWU9dGhpczsNCgkJaWYoSmFsdXIgPT0gMSlBamF4VGltZSA9IG1lLkFqYXhUaW1lX1RyYWNrMTsNCgkJaWYoSmFsdXIgPT0gMilBamF4VGltZSA9IG1lLkFqYXhUaW1lX1RyYWNrMjsNCgkJaWYoSmFsdXIgPT0gMylBamF4VGltZSA9IG1lLkFqYXhUaW1lX1RyYWNrMzsNCgkJaWYoSmFsdXIgPT0gNClBamF4VGltZSA9IG1lLkFqYXhUaW1lX1RyYWNrNDsNCgkJDQoJCXJldHVybiBBamF4VGltZTsNCgl9LA0KCQ0KCVNldFdha3R1OmZ1bmN0aW9uKFdha3R1KXsNCgkJdmFyIG1lPXRoaXM7CQ0KCQlpZihXYWt0dSA+IDEwMDApew0KCQkJVGltZSA9IG1zVG9UaW1lKFdha3R1KTsNCgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJFbGFwc2VkIikuaW5uZXJIVE1MID0gIkVTVElNQVNJIFdBS1RVIDogIitUaW1lOw0KCQkJLy8kKCIjRWxhcHNlZCIpLmh0bWwoIkVTVElNQVNJIFdBS1RVIDogIitUaW1lKTsNCgkJCVdha3R1ID0gV2FrdHUgLSAxMDAwOw0KCQkJbWUuQmFuZGluZ1dha3R1ID0gDQoJCQkJc2V0VGltZW91dCgNCgkJCQkJZnVuY3Rpb24gbXlGdW5jdGlvbigpIHsNCgkJCQkJCW1lLlNldFdha3R1KFdha3R1KTsNCgkJCQkJfSwxMDAwKTsNCgkJfWVsc2V7DQoJCQltZS5XYWt0dVRlcmFraGlyID0gMDsNCgkJCWNsZWFyVGltZW91dChtZS5CYW5kaW5nV2FrdHUpOw0KCQl9DQoJCQ0KCX0sDQoJDQoJR2V0VGltZVBvc3Rpbmc6IGZ1bmN0aW9uKEphbHVyPTEsIEpucz0xKXsNCgkJdmFyIG1lPXRoaXM7DQoJCQ0KCQlpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiam1sX2JyZ19uZXh0UE9TVCIpKXsNCgkJCVRvdGFsUG9zdCA9IHBhcnNlSW50KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJqbWxfYnJnX25leHRQT1NUIikudmFsdWUpOw0KCQkJU3VkYWhQb3N0aW5nID0gSm5zID09IDE\/bWUuSk1MX1BPU1RJTkc6bWUuQlRMX1BPU1RJTkc7DQoJCQlQcmFraXJhYW4gPSBUb3RhbFBvc3QgLSBTdWRhaFBvc3Rpbmc7DQoJCQlpZihQcmFraXJhYW4gPCAxKVByYWtpcmFhbiA9IDA7DQoJCQlQaWxpaCA9ICBKbnMgPT0gMT8iTWF4RGF0YVBvc3RpbmciOiJNYXhEYXRhUG9zdGluZ19EZWwiOw0KCQkJUGVyUG9zdCA9IHBhcnNlSW50KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFBpbGloKS52YWx1ZSk7DQoJCQlEYXRhUG9zdCA9IChQcmFraXJhYW4vUGVyUG9zdCk7DQoJCQlpZihKbnMgPT0gMSlEYXRhUG9zdCA9IERhdGFQb3N0L21lLlNldF9Qb3N0VHJhY2soKTsNCgkJCQ0KCQkJdmFyIHRvdGFsVGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpLW1lLkdldEFqYXhUaW1lKEphbHVyKTsNCgkJCVdha3R1ID0gdG90YWxUaW1lICogRGF0YVBvc3Q7Ly9XYWt0dSBQZXIgbXMJDQoJCQkNCgkJCUhpdHVuZyA9IEpucyA9PSAxP21lLkpNTF9QT1NUSU5HICsgUGVyUG9zdDptZS5CVExfUE9TVElORyArIFBlclBvc3Q7CQ0KCQkJDQoJCQlpZihTdWRhaFBvc3RpbmcgPT0gMCB8fCAoV2FrdHUgPiBtZS5XYWt0dVRlcmFraGlyICYmIEhpdHVuZyArIFBlclBvc3QgPD0gVG90YWxQb3N0KSl7DQoJCQkJbWUuV2FrdHVUZXJha2hpciA9IFdha3R1Ow0KCQkJCWNsZWFyVGltZW91dChtZS5CYW5kaW5nV2FrdHUpOw0KCQkJCW1lLlNldFdha3R1KFdha3R1KTsNCgkJCX1lbHNlewkJCQkNCgkJCQlpZihIaXR1bmcgKyBQZXJQb3N0ID49IFRvdGFsUG9zdCl7DQoJCQkJCWNsZWFyVGltZW91dChtZS5CYW5kaW5nV2FrdHUpOw0KCQkJCQltZS5TZXRXYWt0dShXYWt0dSk7CQ0KCQkJCX0NCgkJCX0JCQkJCQ0KCQl9DQoJCQ0KCX0sDQoJDQoJUHJvc2VzUG9zdGluZ19QZW5nYWRhYW46IGZ1bmN0aW9uKHVydXRhbiwgSmFsdXI9MSl7DQoJCXZhciBtZSA9IHRoaXM7CQkJDQoJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyX3Bvc3RpbmcnOw0KCQkNCgkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsNCgkJDQoJCUlkRGV0ID0gJCgiI2lkYmFyYW5nbnlhXyIrdXJ1dGFuKS52YWwoKTsNCgkJU3RhdElkRGV0ID0gJCgiI3N0YXRfcG9zdF8iK0lkRGV0KS52YWwoKTsNCgkJDQoJCWlmKFN0YXRJZERldCA9PSAiMCIpew0KCQkJbWUuU2V0QWpheFRpbWUoSmFsdXIpOw0KCQkJaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInBlbWFzdWthbl9mb3JtY292ZXJfbG9hZCIpKWRlbEVsZW0oInBlbWFzdWthbl9mb3JtY292ZXJfbG9hZCIpOw0KCQkJaWYobWUuU3RhdHVzUG9zdGluZyA9PSAxKXsNCgkJCQltZS5NdWxhaVBvc3RpbmdfUGVuZ2FkYWFuKCk7DQoJCQkJbWUuU2V0X1BPU1RfVHJhY2soSmFsdXIsIDEpOw0KCQkJCSQuYWpheCh7DQoJCQkJCXR5cGU6J1BPU1QnLCANCgkJCQkJZGF0YTokKCcjJyt0aGlzLnByZWZpeCsiX2Zvcm0iKS5zZXJpYWxpemUoKSwNCgkJCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9UHJvc2VzUG9zdGluZ19QZW5nYWRhYW4mVFJBQ0s9JytKYWx1cisnJklkUGVuRGV0PScrSWREZXQrIiZUb3RhbFN1ZGFoUG9zdGluZz0iK21lLkpNTF9QT1NUSU5HLA0KCQkJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJCQ0KCQkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkJCQkJDQoJCQkJCQkvL2RlbEVsZW0oY292ZXIpOwkJCQkJDQoJCQkJCQltZS5TZXRfUE9TVF9UcmFjayhKYWx1ciwgMCk7DQoJCQkJCQlpZiAocmVzcC5lcnIgPT0nJyl7DQoJCQkJCQkJbWUuUHJvc2VzUG9zdGluZ19QZW5nYWRhYW5fQWZ0ZXIodXJ1dGFuLCByZXNwLmNvbnRlbnQpOw0KCQkJCQkJCW1lLkxvYWRpbmdQb3N0aW5nKHJlc3AuY29udGVudCk7DQoJCQkJCQl9ZWxzZXsNCgkJCQkJCQltZS5TdGF0dXNQb3N0aW5nID0gMDsNCgkJCQkJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdhdXRvJzsNCgkJCQkJCQlzZXRUaW1lb3V0KGZ1bmN0aW9uIG15RnVuY3Rpb24oKSB7DQoJCQkJCQkJCWlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJwZW1hc3VrYW5fZm9ybWNvdmVyX2xvYWQiKSlkZWxFbGVtKCJwZW1hc3VrYW5fZm9ybWNvdmVyX2xvYWQiKTsJDQoJCQkJCQkJCWlmKEphbHVyID09IDEgJiYgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInBlbWFzdWthbl9mb3JtY292ZXIiKSl7CQkJCQkJCQ0KCQkJCQkJCQkJYWxlcnQocmVzcC5lcnIpOwkNCgkJCQkJCQkJCXN0b3B3YXRjaC5TdG9wKCk7DQoJCQkJCQkJCQlkZWxFbGVtKCJwZW1hc3VrYW5fZm9ybWNvdmVyIik7CQkJCQkNCgkJCQkJCQkJCW1lLlBvc3RpbmcoKTsNCgkJCQkJCQkJfQ0KCQkJCQkJCQkNCgkJCQkJCQl9LDEwMCk7DQoJCQkJCQl9DQoJCQkJICAJfSwNCgkJCQkJZXJyb3I6IGZ1bmN0aW9uICh4aHIsIGFqYXhPcHRpb25zLCB0aHJvd25FcnJvcikgew0KCQkJCSAgICAgICAgLy9kZWxFbGVtKGNvdmVyKTsNCgkJCQkJCW1lLlByb3Nlc1Bvc3RpbmdfUGVuZ2FkYWFuKHVydXRhbik7DQoJCQkJCQltZS5TZXRfUE9TVF9UcmFjayhKYWx1ciwgMCk7DQoJCQkgICAgCX0NCgkJCQl9KTsNCgkJCX1lbHNlew0KCQkJCW1lLkxvYWRpbmdQb3N0aW5nX0VuZCgpOw0KCQkJfQ0KCQl9ZWxzZXsNCgkJCXVydXRhbiArPTE7DQoJCQlpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiaWRiYXJhbmdueWFfIit1cnV0YW4pKXsNCgkJCQltZS5Qcm9zZXNQb3N0aW5nX1BlbmdhZGFhbih1cnV0YW4sSmFsdXIpOw0KCQkJfWVsc2V7DQoJCQkJbWUuTG9hZGluZ1Bvc3RpbmdfRW5kKCk7DQoJCQl9DQoJCX0NCgkJDQoJCQ0KCQkNCgl9LA0KCQ0KCVVwZGF0ZVBvc3RpbmdCZXJoYXNpbDogZnVuY3Rpb24oKXsNCgkJdmFyIG1lID0gdGhpczsNCgkJJC5hamF4KHsNCgkJCXR5cGU6J1BPU1QnLCANCgkJCWRhdGE6JCgnIycrdGhpcy5wcmVmaXgrIl9mb3JtIikuc2VyaWFsaXplKCksDQoJCQl1cmw6IHRoaXMudXJsKycmdGlwZT1CZXJoYXNpbFBvc3RpbmcnLA0KCQkJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJDQoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOw0KCQkJCWlmKHJlc3AuZXJyPT0nJyl7DQoJCQkJCWFsZXJ0KCJCZXJoYXNpbCBNZW1wb3N0aW5nIERhdGEgISIpOw0KCQkJCQkNCgkJCQkJc2V0VGltZW91dChmdW5jdGlvbiBteUZ1bmN0aW9uUGVyc2VuKCkge21lLkNsb3NlKCk7cGVtYXN1a2FuLnJlZnJlc2hMaXN0KCk7fSwxMTEpOw0KCQkJCQlpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicGVtYXN1a2FuX2Zvcm1jb3Zlcl9sb2FkIikpc2V0VGltZW91dChmdW5jdGlvbiBteUZ1bmN0aW9uUGVyc2VuKCkge2RlbEVsZW0oJ3BlbWFzdWthbl9mb3JtY292ZXJfbG9hZCcpO30sNTAwKTsNCgkJCQl9ZWxzZXsNCgkJCQkJYWxlcnQocmVzcC5lcnIpOw0KCQkJCX0NCgkJCX0NCgkJfSk7DQoJfSwNCgkJDQoJU2ltcGFuVFREOiBmdW5jdGlvbigpew0KCQl2YXIgbWU9IHRoaXM7DQoJCQ0KCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1jb3Zlcl9UVERfbG9hZCc7DQoJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7DQoJCWFkZENvdmVyUGFnZTIoY292ZXIsMix0cnVlLGZhbHNlKTsJDQoJCQ0KCQkNCgkJJC5hamF4KHsNCgkJCXR5cGU6J1BPU1QnLCANCgkJCWRhdGE6JCgnIycrdGhpcy5wcmVmaXgrJ19mb3JtX1RURCcpLnNlcmlhbGl6ZSgpLA0KCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9U2ltcGFuVFREJywNCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJDQoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkNCgkJCQlkZWxFbGVtKGNvdmVyKTsJCQ0KCQkJCS8vZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsNCgkJCQlpZihyZXNwLmVycj09Jycpew0KCQkJCQlhbGVydChyZXNwLmNvbnRlbnQpOw0KCQkJCQltZS5UdXR1cEZvcm0oInBlbWFzdWthbl9mb3JtY292ZXJfVFREIik7DQoJCQkJfWVsc2V7DQoJCQkJCWFsZXJ0KHJlc3AuZXJyKTsNCgkJCQl9DQoJCSAgCX0NCgkJfSk7DQoJfSwNCgkNCglQcmludExhcG9yYW46IGZ1bmN0aW9uKCl7DQoJCXZhciBtZT10aGlzOw0KCQkNCgkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3JtY292ZXJfUHJpbnRMYXBvcmFuJzsNCgkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsNCgkJYWRkQ292ZXJQYWdlMihjb3ZlciwyLHRydWUsZmFsc2UpOwkJCQ0KCQkkLmFqYXgoew0KCQkJdHlwZTonUE9TVCcsIA0KCQkJZGF0YTokKCcjJyt0aGlzLnByZWZpeCsnX2Zvcm0nKS5zZXJpYWxpemUoKSwNCgkJCXVybDogdGhpcy51cmwrJyZ0aXBlPVByaW50TGFwb3Jhbl9DZWsnLA0KCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CQkNCgkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CQ0KCQkJCWRlbEVsZW0oY292ZXIpOwkJDQoJCQkJaWYocmVzcC5lcnI9PScnKXsNCgkJCQkJaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIlBERl9TQVZFIikudmFsdWU9PSIwIil7DQoJCQkJCQkvKnZhciB1cmxOeWEgPSB0aGlzLnVybCsnJnRpcGU9UHJpbnRMYXBvcmFuJzsNCgkJCQkJCXZhciBuYW1hX2xhcG9yYW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibmFtYV9sYXBvcmFuIikudmFsdWU7DQoJCQkJCQl2YXIgUGlsTHBybiA9IHBhcnNlSW50KG5hbWFfbGFwb3Jhbik7Ki8JCQkJCQ0KCQkJCQkJdmFyIHVybE55YSA9ICdwYWdlcy5waHA\",
    "size": "62124"
}