{
    "namaFile": "js\/perencanaanAset\/rkbmdKuasaPengguna\/rkbmdPengadaanPenetapan.js",
    "lastUpdate": "2018-10-02+15:51:21.77",
    "contentFile": "dmFyIHJrYm1kUGVuZ2FkYWFuUGVuZXRhcGFuRmlsdGVyU0tQRCA9IG5ldyBTa3BkQ2xzKHsKICBwcmVmaXg6ICJya2JtZFBlbmdhZGFhblBlbmV0YXBhbiIsCiAgZm9ybU5hbWU6ICJya2JtZFBlbmdhZGFhblBlbmV0YXBhbkZvcm0iLAoKICBwaWxpaFVydXNhbmZ0ZXI6IGZ1bmN0aW9uKCkgewogICAgcmtibWRQZW5nYWRhYW5QZW5ldGFwYW4uZmlsdGVyUmVuZGVyKHRydWUpOwogIH0sCiAgcGlsaWhCaWRhbmdBZnRlcjogZnVuY3Rpb24oKSB7CiAgICBya2JtZFBlbmdhZGFhblBlbmV0YXBhbi5maWx0ZXJSZW5kZXIodHJ1ZSk7CiAgfSwKICBwaWxpaFVuaXRBZnRlcjogZnVuY3Rpb24oKSB7CiAgICBya2JtZFBlbmdhZGFhblBlbmV0YXBhbi5maWx0ZXJSZW5kZXIodHJ1ZSk7CiAgfSwKICBwaWxpaFN1YlVuaXRBZnRlcjogZnVuY3Rpb24oKSB7CiAgICBya2JtZFBlbmdhZGFhblBlbmV0YXBhbi5maWx0ZXJSZW5kZXIodHJ1ZSk7CiAgfSwKICBwaWxpaFNla3NpQWZ0ZXI6IGZ1bmN0aW9uKCkgewogICAgcmtibWRQZW5nYWRhYW5QZW5ldGFwYW4uZmlsdGVyUmVuZGVyKHRydWUpOwogIH0KfSk7CnZhciBya2JtZFBlbmdhZGFhblBlbmV0YXBhbiA9IG5ldyBEYWZ0YXJPYmoyKHsKICBwcmVmaXg6ICJya2JtZFBlbmdhZGFhblBlbmV0YXBhbiIsCiAgdXJsOiAicGFnZXMucGhwP1BnPXJrYm1kUGVuZ2FkYWFuUGVuZXRhcGFuIiwKICBmb3JtTmFtZTogInJrYm1kUGVuZ2FkYWFuUGVuZXRhcGFuRm9ybSIsCiAgcmtibWRQZW5nYWRhYW5QZW5ldGFwYW5fZm9ybTogIjAiLCAvL2RlZmF1bHQganMgcmtibWRQZW5nYWRhYW5QZW5ldGFwYW4KICBsb2FkaW5nOiBmdW5jdGlvbigpIHsKICAgIC8vYWxlcnQoJ2xvYWRpbmcnKTsKICAgIHRoaXMudG9wQmFyUmVuZGVyKCk7CiAgICB0aGlzLmZpbHRlclJlbmRlcigpOwogICAgdGhpcy5kYWZ0YXJSZW5kZXIoKTsKICAgIHRoaXMuc3VtSGFsUmVuZGVyKCk7CiAgfSwKICBmaWx0ZXJSZW5kZXJBZnRlcjogZnVuY3Rpb24oKSB7CiAgICAvLyB0aGlzLmRhZnRhclJlbmRlcigpOwogIH0sCiAgcHJvZ3JhbUNoYW5nZWQ6IGZ1bmN0aW9uKCkgewogICAgdmFyIGFycmF5UCA9ICQoIiNwIikKICAgICAgLnZhbCgpCiAgICAgIC5zcGxpdCgiLiIpOwogICAgdmFyIGJrID0gYXJyYXlQWzBdOwogICAgdmFyIGNrID0gYXJyYXlQWzFdOwogICAgdmFyIGhpZGRlblAgPSBhcnJheVBbMl07CgogICAgJCgiI2JrIikudmFsKGJrKTsKICAgICQoIiNjayIpLnZhbChjayk7CiAgICAkKCIjaGlkZGVuUCIpLnZhbChoaWRkZW5QKTsKICAgICQoIiNxIikudmFsKCIiKTsKICAgIHJrYm1kUGVuZ2FkYWFuUGVuZXRhcGFuLnJlZnJlc2hMaXN0KHRydWUpOwogIH0sCiAgZGV0YWlsOiBmdW5jdGlvbigpIHsKICAgIC8vYWxlcnQoJ2RldGFpbCcpOwogICAgdmFyIG1lID0gdGhpczsKICAgIGVycm1zZyA9IHRoaXMuQ2VrQ2hlY2tib3goKTsKICAgIGlmIChlcnJtc2cgPT0gIiIpIHsKICAgICAgdmFyIGJveCA9IHRoaXMuR2V0Q2J4Q2hlY2tlZCgpOwogICAgICAvL1VzZXJBa3Rpdml0YXNEZXQuZ2VuRGV0YWlsKCk7CiAgICB9IGVsc2UgewogICAgICBhbGVydChlcnJtc2cpOwogICAgfQogIH0sCiAgcGlsaWhCaWRhbmc6IGZ1bmN0aW9uKCkgewogICAgcmtibWRQZW5nYWRhYW5QZW5ldGFwYW4ucmVmcmVzaExpc3QodHJ1ZSk7CiAgfSwKICBCaWRhbmdBZnRlcjI6IGZ1bmN0aW9uKCkgewogICAgcmtibWRQZW5nYWRhYW5QZW5ldGFwYW4ucmVmcmVzaExpc3QodHJ1ZSk7CiAgfSwKICBjb21ib1NLUERDaGFuZ2VkOiBmdW5jdGlvbigpIHsKICAgIHJrYm1kUGVuZ2FkYWFuUGVuZXRhcGFuLnJlZnJlc2hMaXN0KHRydWUpOwogIH0sCiAgQ2FyaU1vZHVsOiBmdW5jdGlvbigpIHsKICAgIHZhciBtZSA9IHRoaXM7CgogICAgcG9wdXBNb2R1bC5lbF9uYW1hTW9kdWwgPSAibmFtYU1vZHVsIjsKICAgIHBvcHVwTW9kdWwuZWxfaWRNb2R1bCA9ICJpZE1vZHVsIjsKICAgIC8qCQlSZWZCYXJhbmdCdXR1aC5lbF9uYW1hX2JhcmFuZz0gJ25hbWFfYmFyYW5nJzsJCSovCiAgICBwb3B1cE1vZHVsLndpbmRvd1NhdmVBZnRlciA9IGZ1bmN0aW9uKCkge307CiAgICBwb3B1cE1vZHVsLndpbmRvd1Nob3coKTsKICB9LAoKICBoaXN0b3JpOiBmdW5jdGlvbihpZCkgewogICAgdmFyIG1lID0gdGhpczsKCiAgICBwb3B1cEhpc3RvcmkuZWxfbmFtYUhpc3RvcmkgPSAibmFtYUhpc3RvcmkiOwogICAgcG9wdXBIaXN0b3JpLmVsX2lkSGlzdG9yaSA9ICJpZEhpc3RvcmkiOwogICAgcG9wdXBIaXN0b3JpLndpbmRvd1NhdmVBZnRlciA9IGZ1bmN0aW9uKCkge307CiAgICBwb3B1cEhpc3Rvcmkud2luZG93U2hvdyhpZCk7CiAgfSwKICBkYWZ0YXJSZW5kZXI6IGZ1bmN0aW9uKCkgewogICAgdmFyIG1lID0gdGhpczsgLy9yZW5kZXIgZGFmdGFyCiAgICBhZGRDb3ZlclBhZ2UyKCJkYWZ0YXJfY292ZXIiLCAxLCB0cnVlLCB0cnVlLCB7CiAgICAgIHJlbmRlclRvOiB0aGlzLnByZWZpeCArICJfY29udF9kYWZ0YXIiLAogICAgICBpbWdzcmM6ICJpbWFnZXMvd2FpdC5naWYiLAogICAgICBzdHlsZTogeyBwb3NpdGlvbjogImFic29sdXRlIiwgdG9wOiAiNSIsIGxlZnQ6ICI1IiB9CiAgICB9KTsKCiAgICAkLmFqYXgoewogICAgICB1cmw6IHRoaXMudXJsICsgIiZ0aXBlPWRhZnRhciIsCiAgICAgIHR5cGU6ICJQT1NUIiwKICAgICAgZGF0YTogJCgiIyIgKyB0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwKICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewogICAgICAgIHZhciByZXNwID0gZXZhbCgiKCIgKyBkYXRhICsgIikiKTsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChtZS5wcmVmaXggKyAiX2NvbnRfZGFmdGFyIikuaW5uZXJIVE1MID0KICAgICAgICAgIHJlc3AuY29udGVudDsKICAgICAgICBtZS5zdW1IYWxSZW5kZXIoKTsKICAgICAgfQogICAgfSk7CiAgfSwKCiAgSW5mbzogZnVuY3Rpb24oKSB7CiAgICB2YXIgbWUgPSB0aGlzOwogICAgdmFyIGNvdmVyID0gdGhpcy5wcmVmaXggKyAiX2Zvcm1jb3ZlciI7CiAgICAkLmFqYXgoewogICAgICB0eXBlOiAiUE9TVCIsCiAgICAgIHVybDogdGhpcy51cmwgKyAiJnRpcGU9SW5mbyIsCiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKICAgICAgICB2YXIgcmVzcCA9IGV2YWwoIigiICsgZGF0YSArICIpIik7CiAgICAgICAgaWYgKHJlc3AuZXJyID09ICIiKSB7CiAgICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gImhpZGRlbiI7CiAgICAgICAgICBhZGRDb3ZlclBhZ2UyKGNvdmVyLCA5OTksIHRydWUsIGZhbHNlKTsKICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQ7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGFsZXJ0KHJlc3AuZXJyKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogIH0sCgogIENhcmk6IGZ1bmN0aW9uKCkgewogICAgcG9wdXBCYXJhbmcua29kZUJhcmFuZyA9ICJrb2RlQmFyYW5nIjsKICAgIHBvcHVwQmFyYW5nLm5hbWFCYXJhbmcgPSAibmFtYUJhcmFuZyI7CiAgICBwb3B1cEJhcmFuZy5zYXR1YW5CYXJhbmcgPSAic2F0dWFuIjsKICAgIHBvcHVwQmFyYW5nLndpbmRvd1Nob3coKTsKICB9LAogIEVkaXQ6IGZ1bmN0aW9uKCkgewogICAgdmFyIG1lID0gdGhpczsKICAgIGVycm1zZyA9IHRoaXMuQ2VrQ2hlY2tib3goKTsKICAgIGlmIChlcnJtc2cgPT0gIiIpIHsKICAgICAgdmFyIGJveCA9IHRoaXMuR2V0Q2J4Q2hlY2tlZCgpOwoKICAgICAgdmFyIGFGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5mb3JtTmFtZSk7CiAgICAgICQuYWpheCh7CiAgICAgICAgdXJsOiB0aGlzLnVybCArICImdGlwZT1lZGl0VGFiIiwKICAgICAgICB0eXBlOiAiUE9TVCIsCiAgICAgICAgZGF0YTogJCgiIyIgKyB0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwKICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICB2YXIgcmVzcCA9IGV2YWwoIigiICsgZGF0YSArICIpIik7CiAgICAgICAgICBpZiAocmVzcC5lcnIgPT0gIiIpIHsKICAgICAgICAgICAgdmFyIElEcmVuamEgPSBOdW1iZXIocmVzcC5jb250ZW50LmlkcmVuamEpOwogICAgICAgICAgICBhRm9ybS5hY3Rpb24gPQogICAgICAgICAgICAgICJwYWdlcy5waHA\",
    "size": "20250"
}