{
    "namaFile": "js\/jscalendar-1.0\/calendar.js",
    "lastUpdate": "2015-09-12+15:26:35.09",
    "contentFile": "\/ICJtb3VzZW1vdmUiIDogIm1vdXNlb3ZlciIsIHRhYmxlTW91c2VPdmVyKTsNCgkJYWRkQ2xhc3MoZWwsICJoaWxpdGUgYWN0aXZlIik7DQoJCWFkZEV2ZW50KGRvY3VtZW50LCAibW91c2V1cCIsIHRhYmxlTW91c2VVcCk7DQoJfSBlbHNlIGlmIChjYWwuaXNQb3B1cCkgew0KCQljYWwuX2RyYWdTdGFydChldik7DQoJfQ0KCWlmIChlbC5uYXZ0eXBlID09IC0xIHx8IGVsLm5hdnR5cGUgPT0gMSkgew0KCQlpZiAoY2FsLnRpbWVvdXQpIGNsZWFyVGltZW91dChjYWwudGltZW91dCk7DQoJCWNhbC50aW1lb3V0ID0gc2V0VGltZW91dCgiQ2FsZW5kYXIuc2hvd01vbnRoc0NvbWJvKCkiLCAyNTApOw0KCX0gZWxzZSBpZiAoZWwubmF2dHlwZSA9PSAtMiB8fCBlbC5uYXZ0eXBlID09IDIpIHsNCgkJaWYgKGNhbC50aW1lb3V0KSBjbGVhclRpbWVvdXQoY2FsLnRpbWVvdXQpOw0KCQljYWwudGltZW91dCA9IHNldFRpbWVvdXQoKGVsLm5hdnR5cGUgPiAwKSA\\/IHJvdy5maXJzdENoaWxkLm5leHRTaWJsaW5nIDogcm93LmZpcnN0Q2hpbGQ7DQoJdGhpcy5fZGlzcGxheVdlZWtkYXlzKCk7DQoNCgl2YXIgdGJvZHkgPSBDYWxlbmRhci5jcmVhdGVFbGVtZW50KCJ0Ym9keSIsIHRhYmxlKTsNCgl0aGlzLnRib2R5ID0gdGJvZHk7DQoNCglmb3IgKGkgPSA2OyBpID4gMDsgLS1pKSB7DQoJCXJvdyA9IENhbGVuZGFyLmNyZWF0ZUVsZW1lbnQoInRyIiwgdGJvZHkpOw0KCQlpZiAodGhpcy53ZWVrTnVtYmVycykgew0KCQkJY2VsbCA9IENhbGVuZGFyLmNyZWF0ZUVsZW1lbnQoInRkIiwgcm93KTsNCgkJfQ0KCQlmb3IgKHZhciBqID0gNzsgaiA+IDA7IC0taikgew0KCQkJY2VsbCA9IENhbGVuZGFyLmNyZWF0ZUVsZW1lbnQoInRkIiwgcm93KTsNCgkJCWNlbGwuY2FsZW5kYXIgPSB0aGlzOw0KCQkJQ2FsZW5kYXIuX2FkZF9ldnMoY2VsbCk7DQoJCX0NCgl9DQoNCglpZiAodGhpcy5zaG93c1RpbWUpIHsNCgkJcm93ID0gQ2FsZW5kYXIuY3JlYXRlRWxlbWVudCgidHIiLCB0Ym9keSk7DQoJCXJvdy5jbGFzc05hbWUgPSAidGltZSI7DQoNCgkJY2VsbCA9IENhbGVuZGFyLmNyZWF0ZUVsZW1lbnQoInRkIiwgcm93KTsNCgkJY2VsbC5jbGFzc05hbWUgPSAidGltZSI7DQoJCWNlbGwuY29sU3BhbiA9IDI7DQoJCWNlbGwuaW5uZXJIVE1MID0gQ2FsZW5kYXIuX1RUWyJUSU1FIl0gfHwgIiZuYnNwOyI7DQoNCgkJY2VsbCA9IENhbGVuZGFyLmNyZWF0ZUVsZW1lbnQoInRkIiwgcm93KTsNCgkJY2VsbC5jbGFzc05hbWUgPSAidGltZSI7DQoJCWNlbGwuY29sU3BhbiA9IHRoaXMud2Vla051bWJlcnMgPyA0IDogMzsNCg0KCQkoZnVuY3Rpb24oKXsNCgkJCWZ1bmN0aW9uIG1ha2VUaW1lUGFydChjbGFzc05hbWUsIGluaXQsIHJhbmdlX3N0YXJ0LCByYW5nZV9lbmQpIHsNCgkJCQl2YXIgcGFydCA9IENhbGVuZGFyLmNyZWF0ZUVsZW1lbnQoInNwYW4iLCBjZWxsKTsNCgkJCQlwYXJ0LmNsYXNzTmFtZSA9IGNsYXNzTmFtZTsNCgkJCQlwYXJ0LmlubmVySFRNTCA9IGluaXQ7DQoJCQkJcGFydC5jYWxlbmRhciA9IGNhbDsNCgkJCQlwYXJ0LnR0aXAgPSBDYWxlbmRhci5fVFRbIlRJTUVfUEFSVCJdOw0KCQkJCXBhcnQubmF2dHlwZSA9IDUwOw0KCQkJCXBhcnQuX3JhbmdlID0gW107DQoJCQkJaWYgKHR5cGVvZiByYW5nZV9zdGFydCAhPSAibnVtYmVyIikNCgkJCQkJcGFydC5fcmFuZ2UgPSByYW5nZV9zdGFydDsNCgkJCQllbHNlIHsNCgkJCQkJZm9yICh2YXIgaSA9IHJhbmdlX3N0YXJ0OyBpIDw9IHJhbmdlX2VuZDsgKytpKSB7DQoJCQkJCQl2YXIgdHh0Ow0KCQkJCQkJaWYgKGkgPCAxMCAmJiByYW5nZV9lbmQgPj0gMTApIHR4dCA9ICcwJyArIGk7DQoJCQkJCQllbHNlIHR4dCA9ICcnICsgaTsNCgkJCQkJCXBhcnQuX3JhbmdlW3BhcnQuX3JhbmdlLmxlbmd0aF0gPSB0eHQ7DQoJCQkJCX0NCgkJCQl9DQoJCQkJQ2FsZW5kYXIuX2FkZF9ldnMocGFydCk7DQoJCQkJcmV0dXJuIHBhcnQ7DQoJCQl9Ow0KCQkJdmFyIGhycyA9IGNhbC5kYXRlLmdldEhvdXJzKCk7DQoJCQl2YXIgbWlucyA9IGNhbC5kYXRlLmdldE1pbnV0ZXMoKTsNCgkJCXZhciB0MTIgPSAhY2FsLnRpbWUyNDsNCgkJCXZhciBwbSA9IChocnMgPiAxMik7DQoJCQlpZiAodDEyICYmIHBtKSBocnMgLT0gMTI7DQoJCQl2YXIgSCA9IG1ha2VUaW1lUGFydCgiaG91ciIsIGhycywgdDEyID8gMSA6IDAsIHQxMiA\/IDEyIDogMjMpOw0KCQkJdmFyIHNwYW4gPSBDYWxlbmRhci5jcmVhdGVFbGVtZW50KCJzcGFuIiwgY2VsbCk7DQoJCQlzcGFuLmlubmVySFRNTCA9ICI6IjsNCgkJCXNwYW4uY2xhc3NOYW1lID0gImNvbG9uIjsNCgkJCXZhciBNID0gbWFrZVRpbWVQYXJ0KCJtaW51dGUiLCBtaW5zLCAwLCA1OSk7DQoJCQl2YXIgQVAgPSBudWxsOw0KCQkJY2VsbCA9IENhbGVuZGFyLmNyZWF0ZUVsZW1lbnQoInRkIiwgcm93KTsNCgkJCWNlbGwuY2xhc3NOYW1lID0gInRpbWUiOw0KCQkJY2VsbC5jb2xTcGFuID0gMjsNCgkJCWlmICh0MTIpDQoJCQkJQVAgPSBtYWtlVGltZVBhcnQoImFtcG0iLCBwbSA\/ICJwbSIgOiAiYW0iLCBbImFtIiwgInBtIl0pOw0KCQkJZWxzZQ0KCQkJCWNlbGwuaW5uZXJIVE1MID0gIiZuYnNwOyI7DQoNCgkJCWNhbC5vblNldFRpbWUgPSBmdW5jdGlvbigpIHsNCgkJCQl2YXIgcG0sIGhycyA9IHRoaXMuZGF0ZS5nZXRIb3VycygpLA0KCQkJCQltaW5zID0gdGhpcy5kYXRlLmdldE1pbnV0ZXMoKTsNCgkJCQlpZiAodDEyKSB7DQoJCQkJCXBtID0gKGhycyA+PSAxMik7DQoJCQkJCWlmIChwbSkgaHJzIC09IDEyOw0KCQkJCQlpZiAoaHJzID09IDApIGhycyA9IDEyOw0KCQkJCQlBUC5pbm5lckhUTUwgPSBwbSA\/ICJwbSIgOiAiYW0iOw0KCQkJCX0NCgkJCQlILmlubmVySFRNTCA9IChocnMgPCAxMCkgPyAoIjAiICsgaHJzKSA6IGhyczsNCgkJCQlNLmlubmVySFRNTCA9IChtaW5zIDwgMTApID8gKCIwIiArIG1pbnMpIDogbWluczsNCgkJCX07DQoNCgkJCWNhbC5vblVwZGF0ZVRpbWUgPSBmdW5jdGlvbigpIHsNCgkJCQl2YXIgZGF0ZSA9IHRoaXMuZGF0ZTsNCgkJCQl2YXIgaCA9IHBhcnNlSW50KEguaW5uZXJIVE1MLCAxMCk7DQoJCQkJaWYgKHQxMikgew0KCQkJCQlpZiAoL3BtL2kudGVzdChBUC5pbm5lckhUTUwpICYmIGggPCAxMikNCgkJCQkJCWggKz0gMTI7DQoJCQkJCWVsc2UgaWYgKC9hbS9pLnRlc3QoQVAuaW5uZXJIVE1MKSAmJiBoID09IDEyKQ0KCQkJCQkJaCA9IDA7DQoJCQkJfQ0KCQkJCXZhciBkID0gZGF0ZS5nZXREYXRlKCk7DQoJCQkJdmFyIG0gPSBkYXRlLmdldE1vbnRoKCk7DQoJCQkJdmFyIHkgPSBkYXRlLmdldEZ1bGxZZWFyKCk7DQoJCQkJZGF0ZS5zZXRIb3VycyhoKTsNCgkJCQlkYXRlLnNldE1pbnV0ZXMocGFyc2VJbnQoTS5pbm5lckhUTUwsIDEwKSk7DQoJCQkJZGF0ZS5zZXRGdWxsWWVhcih5KTsNCgkJCQlkYXRlLnNldE1vbnRoKG0pOw0KCQkJCWRhdGUuc2V0RGF0ZShkKTsNCgkJCQl0aGlzLmRhdGVDbGlja2VkID0gZmFsc2U7DQoJCQkJdGhpcy5jYWxsSGFuZGxlcigpOw0KCQkJfTsNCgkJfSkoKTsNCgl9IGVsc2Ugew0KCQl0aGlzLm9uU2V0VGltZSA9IHRoaXMub25VcGRhdGVUaW1lID0gZnVuY3Rpb24oKSB7fTsNCgl9DQoNCgl2YXIgdGZvb3QgPSBDYWxlbmRhci5jcmVhdGVFbGVtZW50KCJ0Zm9vdCIsIHRhYmxlKTsNCg0KCXJvdyA9IENhbGVuZGFyLmNyZWF0ZUVsZW1lbnQoInRyIiwgdGZvb3QpOw0KCXJvdy5jbGFzc05hbWUgPSAiZm9vdHJvdyI7DQoNCgljZWxsID0gaGgoQ2FsZW5kYXIuX1RUWyJTRUxfREFURSJdLCB0aGlzLndlZWtOdW1iZXJzID8gOCA6IDcsIDMwMCk7DQoJY2VsbC5jbGFzc05hbWUgPSAidHRpcCI7DQoJaWYgKHRoaXMuaXNQb3B1cCkgew0KCQljZWxsLnR0aXAgPSBDYWxlbmRhci5fVFRbIkRSQUdfVE9fTU9WRSJdOw0KCQljZWxsLnN0eWxlLmN1cnNvciA9ICJtb3ZlIjsNCgl9DQoJdGhpcy50b29sdGlwcyA9IGNlbGw7DQoNCglkaXYgPSBDYWxlbmRhci5jcmVhdGVFbGVtZW50KCJkaXYiLCB0aGlzLmVsZW1lbnQpOw0KCXRoaXMubW9udGhzQ29tYm8gPSBkaXY7DQoJZGl2LmNsYXNzTmFtZSA9ICJjb21ibyI7DQoJZm9yIChpID0gMDsgaSA8IENhbGVuZGFyLl9NTi5sZW5ndGg7ICsraSkgew0KCQl2YXIgbW4gPSBDYWxlbmRhci5jcmVhdGVFbGVtZW50KCJkaXYiKTsNCgkJbW4uY2xhc3NOYW1lID0gQ2FsZW5kYXIuaXNfaWUgPyAibGFiZWwtSUVmaXgiIDogImxhYmVsIjsNCgkJbW4ubW9udGggPSBpOw0KCQltbi5pbm5lckhUTUwgPSBDYWxlbmRhci5fU01OW2ldOw0KCQlkaXYuYXBwZW5kQ2hpbGQobW4pOw0KCX0NCg0KCWRpdiA9IENhbGVuZGFyLmNyZWF0ZUVsZW1lbnQoImRpdiIsIHRoaXMuZWxlbWVudCk7DQoJdGhpcy55ZWFyc0NvbWJvID0gZGl2Ow0KCWRpdi5jbGFzc05hbWUgPSAiY29tYm8iOw0KCWZvciAoaSA9IDEyOyBpID4gMDsgLS1pKSB7DQoJCXZhciB5ciA9IENhbGVuZGFyLmNyZWF0ZUVsZW1lbnQoImRpdiIpOw0KCQl5ci5jbGFzc05hbWUgPSBDYWxlbmRhci5pc19pZSA\/ICJsYWJlbC1JRWZpeCIgOiAibGFiZWwiOw0KCQlkaXYuYXBwZW5kQ2hpbGQoeXIpOw0KCX0NCg0KCXRoaXMuX2luaXQodGhpcy5maXJzdERheU9mV2VlaywgdGhpcy5kYXRlKTsNCglwYXJlbnQuYXBwZW5kQ2hpbGQodGhpcy5lbGVtZW50KTsNCn07DQoNCi8qKiBrZXlib2FyZCBuYXZpZ2F0aW9uLCBvbmx5IGZvciBwb3B1cCBjYWxlbmRhcnMgKi8NCkNhbGVuZGFyLl9rZXlFdmVudCA9IGZ1bmN0aW9uKGV2KSB7DQoJdmFyIGNhbCA9IHdpbmRvdy5fZHluYXJjaF9wb3B1cENhbGVuZGFyOw0KCWlmICghY2FsIHx8IGNhbC5tdWx0aXBsZSkNCgkJcmV0dXJuIGZhbHNlOw0KCShDYWxlbmRhci5pc19pZSkgJiYgKGV2ID0gd2luZG93LmV2ZW50KTsNCgl2YXIgYWN0ID0gKENhbGVuZGFyLmlzX2llIHx8IGV2LnR5cGUgPT0gImtleXByZXNzIiksDQoJCUsgPSBldi5rZXlDb2RlOw0KCWlmIChldi5jdHJsS2V5KSB7DQoJCXN3aXRjaCAoSykgew0KCQkgICAgY2FzZSAzNzogLy8gS0VZIGxlZnQNCgkJCWFjdCAmJiBDYWxlbmRhci5jZWxsQ2xpY2soY2FsLl9uYXZfcG0pOw0KCQkJYnJlYWs7DQoJCSAgICBjYXNlIDM4OiAvLyBLRVkgdXANCgkJCWFjdCAmJiBDYWxlbmRhci5jZWxsQ2xpY2soY2FsLl9uYXZfcHkpOw0KCQkJYnJlYWs7DQoJCSAgICBjYXNlIDM5OiAvLyBLRVkgcmlnaHQNCgkJCWFjdCAmJiBDYWxlbmRhci5jZWxsQ2xpY2soY2FsLl9uYXZfbm0pOw0KCQkJYnJlYWs7DQoJCSAgICBjYXNlIDQwOiAvLyBLRVkgZG93bg0KCQkJYWN0ICYmIENhbGVuZGFyLmNlbGxDbGljayhjYWwuX25hdl9ueSk7DQoJCQlicmVhazsNCgkJICAgIGRlZmF1bHQ6DQoJCQlyZXR1cm4gZmFsc2U7DQoJCX0NCgl9IGVsc2Ugc3dpdGNoIChLKSB7DQoJICAgIGNhc2UgMzI6IC8vIEtFWSBzcGFjZSAobm93KQ0KCQlDYWxlbmRhci5jZWxsQ2xpY2soY2FsLl9uYXZfbm93KTsNCgkJYnJlYWs7DQoJICAgIGNhc2UgMjc6IC8vIEtFWSBlc2MNCgkJYWN0ICYmIGNhbC5jYWxsQ2xvc2VIYW5kbGVyKCk7DQoJCWJyZWFrOw0KCSAgICBjYXNlIDM3OiAvLyBLRVkgbGVmdA0KCSAgICBjYXNlIDM4OiAvLyBLRVkgdXANCgkgICAgY2FzZSAzOTogLy8gS0VZIHJpZ2h0DQoJICAgIGNhc2UgNDA6IC8vIEtFWSBkb3duDQoJCWlmIChhY3QpIHsNCgkJCXZhciBwcmV2LCB4LCB5LCBuZSwgZWwsIHN0ZXA7DQoJCQlwcmV2ID0gSyA9PSAzNyB8fCBLID09IDM4Ow0KCQkJc3RlcCA9IChLID09IDM3IHx8IEsgPT0gMzkpID8gMSA6IDc7DQoJCQlmdW5jdGlvbiBzZXRWYXJzKCkgew0KCQkJCWVsID0gY2FsLmN1cnJlbnREYXRlRWw7DQoJCQkJdmFyIHAgPSBlbC5wb3M7DQoJCQkJeCA9IHAgJiAxNTsNCgkJCQl5ID0gcCA+PiA0Ow0KCQkJCW5lID0gY2FsLmFyX2RheXNbeV1beF07DQoJCQl9O3NldFZhcnMoKTsNCgkJCWZ1bmN0aW9uIHByZXZNb250aCgpIHsNCgkJCQl2YXIgZGF0ZSA9IG5ldyBEYXRlKGNhbC5kYXRlKTsNCgkJCQlkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgLSBzdGVwKTsNCgkJCQljYWwuc2V0RGF0ZShkYXRlKTsNCgkJCX07DQoJCQlmdW5jdGlvbiBuZXh0TW9udGgoKSB7DQoJCQkJdmFyIGRhdGUgPSBuZXcgRGF0ZShjYWwuZGF0ZSk7DQoJCQkJZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpICsgc3RlcCk7DQoJCQkJY2FsLnNldERhdGUoZGF0ZSk7DQoJCQl9Ow0KCQkJd2hpbGUgKDEpIHsNCgkJCQlzd2l0Y2ggKEspIHsNCgkJCQkgICAgY2FzZSAzNzogLy8gS0VZIGxlZnQNCgkJCQkJaWYgKC0teCA+PSAwKQ0KCQkJCQkJbmUgPSBjYWwuYXJfZGF5c1t5XVt4XTsNCgkJCQkJZWxzZSB7DQoJCQkJCQl4ID0gNjsNCgkJCQkJCUsgPSAzODsNCgkJCQkJCWNvbnRpbnVlOw0KCQkJCQl9DQoJCQkJCWJyZWFrOw0KCQkJCSAgICBjYXNlIDM4OiAvLyBLRVkgdXANCgkJCQkJaWYgKC0teSA+PSAwKQ0KCQkJCQkJbmUgPSBjYWwuYXJfZGF5c1t5XVt4XTsNCgkJCQkJZWxzZSB7DQoJCQkJCQlwcmV2TW9udGgoKTsNCgkJCQkJCXNldFZhcnMoKTsNCgkJCQkJfQ0KCQkJCQlicmVhazsNCgkJCQkgICAgY2FzZSAzOTogLy8gS0VZIHJpZ2h0DQoJCQkJCWlmICgrK3ggPCA3KQ0KCQkJCQkJbmUgPSBjYWwuYXJfZGF5c1t5XVt4XTsNCgkJCQkJZWxzZSB7DQoJCQkJCQl4ID0gMDsNCgkJCQkJCUsgPSA0MDsNCgkJCQkJCWNvbnRpbnVlOw0KCQkJCQl9DQoJCQkJCWJyZWFrOw0KCQkJCSAgICBjYXNlIDQwOiAvLyBLRVkgZG93bg0KCQkJCQlpZiAoKyt5IDwgY2FsLmFyX2RheXMubGVuZ3RoKQ0KCQkJCQkJbmUgPSBjYWwuYXJfZGF5c1t5XVt4XTsNCgkJCQkJZWxzZSB7DQoJCQkJCQluZXh0TW9udGgoKTsNCgkJCQkJCXNldFZhcnMoKTsNCgkJCQkJfQ0KCQkJCQlicmVhazsNCgkJCQl9DQoJCQkJYnJlYWs7DQoJCQl9DQoJCQlpZiAobmUpIHsNCgkJCQlpZiAoIW5lLmRpc2FibGVkKQ0KCQkJCQlDYWxlbmRhci5jZWxsQ2xpY2sobmUpOw0KCQkJCWVsc2UgaWYgKHByZXYpDQoJCQkJCXByZXZNb250aCgpOw0KCQkJCWVsc2UNCgkJCQkJbmV4dE1vbnRoKCk7DQoJCQl9DQoJCX0NCgkJYnJlYWs7DQoJICAgIGNhc2UgMTM6IC8vIEtFWSBlbnRlcg0KCQlpZiAoYWN0KQ0KCQkJQ2FsZW5kYXIuY2VsbENsaWNrKGNhbC5jdXJyZW50RGF0ZUVsLCBldik7DQoJCWJyZWFrOw0KCSAgICBkZWZhdWx0Og0KCQlyZXR1cm4gZmFsc2U7DQoJfQ0KCXJldHVybiBDYWxlbmRhci5zdG9wRXZlbnQoZXYpOw0KfTsNCg0KLyoqDQogKiAgKFJFKUluaXRpYWxpemVzIHRoZSBjYWxlbmRhciB0byB0aGUgZ2l2ZW4gZGF0ZSBhbmQgZmlyc3REYXlPZldlZWsNCiAqLw0KQ2FsZW5kYXIucHJvdG90eXBlLl9pbml0ID0gZnVuY3Rpb24gKGZpcnN0RGF5T2ZXZWVrLCBkYXRlKSB7DQoJdmFyIHRvZGF5ID0gbmV3IERhdGUoKSwNCgkJVFkgPSB0b2RheS5nZXRGdWxsWWVhcigpLA0KCQlUTSA9IHRvZGF5LmdldE1vbnRoKCksDQoJCVREID0gdG9kYXkuZ2V0RGF0ZSgpOw0KCXRoaXMudGFibGUuc3R5bGUudmlzaWJpbGl0eSA9ICJoaWRkZW4iOw0KCXZhciB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpOw0KCWlmICh5ZWFyIDwgdGhpcy5taW5ZZWFyKSB7DQoJCXllYXIgPSB0aGlzLm1pblllYXI7DQoJCWRhdGUuc2V0RnVsbFllYXIoeWVhcik7DQoJfSBlbHNlIGlmICh5ZWFyID4gdGhpcy5tYXhZZWFyKSB7DQoJCXllYXIgPSB0aGlzLm1heFllYXI7DQoJCWRhdGUuc2V0RnVsbFllYXIoeWVhcik7DQoJfQ0KCXRoaXMuZmlyc3REYXlPZldlZWsgPSBmaXJzdERheU9mV2VlazsNCgl0aGlzLmRhdGUgPSBuZXcgRGF0ZShkYXRlKTsNCgl2YXIgbW9udGggPSBkYXRlLmdldE1vbnRoKCk7DQoJdmFyIG1kYXkgPSBkYXRlLmdldERhdGUoKTsNCgl2YXIgbm9fZGF5cyA9IGRhdGUuZ2V0TW9udGhEYXlzKCk7DQoNCgkvLyBjYWxlbmRhciB2b29kb28gZm9yIGNvbXB1dGluZyB0aGUgZmlyc3QgZGF5IHRoYXQgd291bGQgYWN0dWFsbHkgYmUNCgkvLyBkaXNwbGF5ZWQgaW4gdGhlIGNhbGVuZGFyLCBldmVuIGlmIGl0J3MgZnJvbSB0aGUgcHJldmlvdXMgbW9udGguDQoJLy8gV0FSTklORzogdGhpcyBpcyBtYWdpYy4gOy0pDQoJZGF0ZS5zZXREYXRlKDEpOw0KCXZhciBkYXkxID0gKGRhdGUuZ2V0RGF5KCkgLSB0aGlzLmZpcnN0RGF5T2ZXZWVrKSAlIDc7DQoJaWYgKGRheTEgPCAwKQ0KCQlkYXkxICs9IDc7DQoJZGF0ZS5zZXREYXRlKC1kYXkxKTsNCglkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgKyAxKTsNCg0KCXZhciByb3cgPSB0aGlzLnRib2R5LmZpcnN0Q2hpbGQ7DQoJdmFyIE1OID0gQ2FsZW5kYXIuX1NNTlttb250aF07DQoJdmFyIGFyX2RheXMgPSB0aGlzLmFyX2RheXMgPSBuZXcgQXJyYXkoKTsNCgl2YXIgd2Vla2VuZCA9IENhbGVuZGFyLl9UVFsiV0VFS0VORCJdOw0KCXZhciBkYXRlcyA9IHRoaXMubXVsdGlwbGUgPyAodGhpcy5kYXRlc0NlbGxzID0ge30pIDogbnVsbDsNCglmb3IgKHZhciBpID0gMDsgaSA8IDY7ICsraSwgcm93ID0gcm93Lm5leHRTaWJsaW5nKSB7DQoJCXZhciBjZWxsID0gcm93LmZpcnN0Q2hpbGQ7DQoJCWlmICh0aGlzLndlZWtOdW1iZXJzKSB7DQoJCQljZWxsLmNsYXNzTmFtZSA9ICJkYXkgd24iOw0KCQkJY2VsbC5pbm5lckhUTUwgPSBkYXRlLmdldFdlZWtOdW1iZXIoKTsNCgkJCWNlbGwgPSBjZWxsLm5leHRTaWJsaW5nOw0KCQl9DQoJCXJvdy5jbGFzc05hbWUgPSAiZGF5c3JvdyI7DQoJCXZhciBoYXNkYXlzID0gZmFsc2UsIGlkYXksIGRwb3MgPSBhcl9kYXlzW2ldID0gW107DQoJCWZvciAodmFyIGogPSAwOyBqIDwgNzsgKytqLCBjZWxsID0gY2VsbC5uZXh0U2libGluZywgZGF0ZS5zZXREYXRlKGlkYXkgKyAxKSkgew0KCQkJaWRheSA9IGRhdGUuZ2V0RGF0ZSgpOw0KCQkJdmFyIHdkYXkgPSBkYXRlLmdldERheSgpOw0KCQkJY2VsbC5jbGFzc05hbWUgPSAiZGF5IjsNCgkJCWNlbGwucG9zID0gaSA8PCA0IHwgajsNCgkJCWRwb3Nbal0gPSBjZWxsOw0KCQkJdmFyIGN1cnJlbnRfbW9udGggPSAoZGF0ZS5nZXRNb250aCgpID09IG1vbnRoKTsNCgkJCWlmICghY3VycmVudF9tb250aCkgew0KCQkJCWlmICh0aGlzLnNob3dzT3RoZXJNb250aHMpIHsNCgkJCQkJY2VsbC5jbGFzc05hbWUgKz0gIiBvdGhlcm1vbnRoIjsNCgkJCQkJY2VsbC5vdGhlck1vbnRoID0gdHJ1ZTsNCgkJCQl9IGVsc2Ugew0KCQkJCQljZWxsLmNsYXNzTmFtZSA9ICJlbXB0eWNlbGwiOw0KCQkJCQljZWxsLmlubmVySFRNTCA9ICImbmJzcDsiOw0KCQkJCQljZWxsLmRpc2FibGVkID0gdHJ1ZTsNCgkJCQkJY29udGludWU7DQoJCQkJfQ0KCQkJfSBlbHNlIHsNCgkJCQljZWxsLm90aGVyTW9udGggPSBmYWxzZTsNCgkJCQloYXNkYXlzID0gdHJ1ZTsNCgkJCX0NCgkJCWNlbGwuZGlzYWJsZWQgPSBmYWxzZTsNCgkJCWNlbGwuaW5uZXJIVE1MID0gdGhpcy5nZXREYXRlVGV4dCA\\/ICgiMCIgKyBkKSA6IGQ7IC8vIHRoZSBkYXkgb2YgdGhlIG1vbnRoIChyYW5nZSAwMSB0byAzMSkNCglzWyIlZSJdID0gZDsgLy8gdGhlIGRheSBvZiB0aGUgbW9udGggKHJhbmdlIDEgdG8gMzEpDQoJLy8gRklYTUU6ICVEIDogYW1lcmljYW4gZGF0ZSBzdHlsZTogJW0vJWQvJXkNCgkvLyBGSVhNRTogJUUsICVGLCAlRywgJWcsICVoIChtYW4gc3RyZnRpbWUpDQoJc1siJUgiXSA9IChociA8IDEwKSA\/ICgiMCIgKyBocikgOiBocjsgLy8gaG91ciwgcmFuZ2UgMDAgdG8gMjMgKDI0aCBmb3JtYXQpDQoJc1siJUkiXSA9IChpciA8IDEwKSA\/ICgiMCIgKyBpcikgOiBpcjsgLy8gaG91ciwgcmFuZ2UgMDEgdG8gMTIgKDEyaCBmb3JtYXQpDQoJc1siJWoiXSA9IChkeSA8IDEwMCkgPyAoKGR5IDwgMTApID8gKCIwMCIgKyBkeSkgOiAoIjAiICsgZHkpKSA6IGR5OyAvLyBkYXkgb2YgdGhlIHllYXIgKHJhbmdlIDAwMSB0byAzNjYpDQoJc1siJWsiXSA9IGhyOwkJLy8gaG91ciwgcmFuZ2UgMCB0byAyMyAoMjRoIGZvcm1hdCkNCglzWyIlbCJdID0gaXI7CQkvLyBob3VyLCByYW5nZSAxIHRvIDEyICgxMmggZm9ybWF0KQ0KCXNbIiVtIl0gPSAobSA8IDkpID8gKCIwIiArICgxK20pKSA6ICgxK20pOyAvLyBtb250aCwgcmFuZ2UgMDEgdG8gMTINCglzWyIlTSJdID0gKG1pbiA8IDEwKSA\/ICgiMCIgKyBtaW4pIDogbWluOyAvLyBtaW51dGUsIHJhbmdlIDAwIHRvIDU5DQoJc1siJW4iXSA9ICJcbiI7CQkvLyBhIG5ld2xpbmUgY2hhcmFjdGVyDQoJc1siJXAiXSA9IHBtID8gIlBNIiA6ICJBTSI7DQoJc1siJVAiXSA9IHBtID8gInBtIiA6ICJhbSI7DQoJLy8gRklYTUU6ICVyIDogdGhlIHRpbWUgaW4gYW0vcG0gbm90YXRpb24gJUk6JU06JVMgJXANCgkvLyBGSVhNRTogJVIgOiB0aGUgdGltZSBpbiAyNC1ob3VyIG5vdGF0aW9uICVIOiVNDQoJc1siJXMiXSA9IE1hdGguZmxvb3IodGhpcy5nZXRUaW1lKCkgLyAxMDAwKTsNCglzWyIlUyJdID0gKHNlYyA8IDEwKSA\/ICgiMCIgKyBzZWMpIDogc2VjOyAvLyBzZWNvbmRzLCByYW5nZSAwMCB0byA1OQ0KCXNbIiV0Il0gPSAiXHQiOwkJLy8gYSB0YWIgY2hhcmFjdGVyDQoJLy8gRklYTUU6ICVUIDogdGhlIHRpbWUgaW4gMjQtaG91ciBub3RhdGlvbiAoJUg6JU06JVMpDQoJc1siJVUiXSA9IHNbIiVXIl0gPSBzWyIlViJdID0gKHduIDwgMTApID8gKCIwIiArIHduKSA6IHduOw0KCXNbIiV1Il0gPSB3ICsgMTsJLy8gdGhlIGRheSBvZiB0aGUgd2VlayAocmFuZ2UgMSB0byA3LCAxID0gTU9OKQ0KCXNbIiV3Il0gPSB3OwkJLy8gdGhlIGRheSBvZiB0aGUgd2VlayAocmFuZ2UgMCB0byA2LCAwID0gU1VOKQ0KCS8vIEZJWE1FOiAleCA6IHByZWZlcnJlZCBkYXRlIHJlcHJlc2VudGF0aW9uIGZvciB0aGUgY3VycmVudCBsb2NhbGUgd2l0aG91dCB0aGUgdGltZQ0KCS8vIEZJWE1FOiAlWCA6IHByZWZlcnJlZCB0aW1lIHJlcHJlc2VudGF0aW9uIGZvciB0aGUgY3VycmVudCBsb2NhbGUgd2l0aG91dCB0aGUgZGF0ZQ0KCXNbIiV5Il0gPSAoJycgKyB5KS5zdWJzdHIoMiwgMik7IC8vIHllYXIgd2l0aG91dCB0aGUgY2VudHVyeSAocmFuZ2UgMDAgdG8gOTkpDQoJc1siJVkiXSA9IHk7CQkvLyB5ZWFyIHdpdGggdGhlIGNlbnR1cnkNCglzWyIlJSJdID0gIiUiOwkJLy8gYSBsaXRlcmFsICclJyBjaGFyYWN0ZXINCg0KCXZhciByZSA9IC8lLi9nOw0KCWlmICghQ2FsZW5kYXIuaXNfaWU1ICYmICFDYWxlbmRhci5pc19raHRtbCkNCgkJcmV0dXJuIHN0ci5yZXBsYWNlKHJlLCBmdW5jdGlvbiAocGFyKSB7IHJldHVybiBzW3Bhcl0gfHwgcGFyOyB9KTsNCg0KCXZhciBhID0gc3RyLm1hdGNoKHJlKTsNCglmb3IgKHZhciBpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspIHsNCgkJdmFyIHRtcCA9IHNbYVtpXV07DQoJCWlmICh0bXApIHsNCgkJCXJlID0gbmV3IFJlZ0V4cChhW2ldLCAnZycpOw0KCQkJc3RyID0gc3RyLnJlcGxhY2UocmUsIHRtcCk7DQoJCX0NCgl9DQoNCglyZXR1cm4gc3RyOw0KfTsNCg0KRGF0ZS5wcm90b3R5cGUuX19tc2hfb2xkU2V0RnVsbFllYXIgPSBEYXRlLnByb3RvdHlwZS5zZXRGdWxsWWVhcjsNCkRhdGUucHJvdG90eXBlLnNldEZ1bGxZZWFyID0gZnVuY3Rpb24oeSkgew0KCXZhciBkID0gbmV3IERhdGUodGhpcyk7DQoJZC5fX21zaF9vbGRTZXRGdWxsWWVhcih5KTsNCglpZiAoZC5nZXRNb250aCgpICE9IHRoaXMuZ2V0TW9udGgoKSkNCgkJdGhpcy5zZXREYXRlKDI4KTsNCgl0aGlzLl9fbXNoX29sZFNldEZ1bGxZZWFyKHkpOw0KfTsNCg0KLy8gRU5EOiBEQVRFIE9CSkVDVCBQQVRDSEVTDQoNCg0KLy8gZ2xvYmFsIG9iamVjdCB0aGF0IHJlbWVtYmVycyB0aGUgY2FsZW5kYXINCndpbmRvdy5fZHluYXJjaF9wb3B1cENhbGVuZGFyID0gbnVsbDsNCg==",
    "size": "51043"
}