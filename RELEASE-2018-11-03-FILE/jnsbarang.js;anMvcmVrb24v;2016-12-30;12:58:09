{
    "namaFile": "js\/rekon\/jnsbarang.js",
    "lastUpdate": "2016-12-30+12:58:09.54",
    "contentFile": "dmFyIEpuc0JhcmFuZyA9IG5ldyBEYWZ0YXJPYmoyKHsNCglwcmVmaXggOiAnSm5zQmFyYW5nJywNCgl1cmwgOiAncGFnZXMucGhwP1BnPUpuc0JhcmFuZycsIA0KCWZvcm1OYW1lIDogJ0puc0JhcmFuZ0Zvcm0nLA0KCWVsX2lkX3N0YXR1c19icmdfdGVtcCA6ICcnLA0KCWVsX25tX3N0YXR1c19icmdfdGVtcCA6ICcnLA0KCS8vZWxfaWRfc2F0dWFuX3RlbXAgOiAnJywNCgkvL2VsX25tX3NhdHVhbl90ZW1wIDogJycsCQ0KCQ0KCWxvYWRpbmc6IGZ1bmN0aW9uKCl7DQoJCS8vYWxlcnQoJ2xvYWRpbmcnKTsNCgkJdGhpcy50b3BCYXJSZW5kZXIoKTsNCgkJdGhpcy5maWx0ZXJSZW5kZXIoKTsNCgkJdGhpcy5kYWZ0YXJSZW5kZXIoKTsNCgkJdGhpcy5zdW1IYWxSZW5kZXIoKTsNCgkNCgl9LA0KCQ0KCXRvcEJhclJlbmRlcjogZnVuY3Rpb24oKXsNCgkJdmFyIG1lPXRoaXM7DQoJCS8vcmVuZGVyIHN1YnRpdGxlDQoJCSQuYWpheCh7DQoJCSAgdXJsOiB0aGlzLnVybCsnJnRpcGU9c3VidGl0bGUnLA0KCQkgIHR5cGU6J1BPU1QnLA0KCQkgIGRhdGE6JCgnIycrdGhpcy5mb3JtTmFtZSkuc2VyaWFsaXplKCksIA0KCQkgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJCQ0KCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOw0KCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobWUucHJlZml4KydfY29udF90aXRsZScpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsNCgkJICB9DQoJCX0pOw0KCX0sDQoJDQoJZGV0YWlsOiBmdW5jdGlvbigpew0KCQkvL2FsZXJ0KCdkZXRhaWwnKTsNCgkJdmFyIG1lID0gdGhpczsNCgkJZXJybXNnID0gdGhpcy5DZWtDaGVja2JveCgpOw0KCQlpZihlcnJtc2cgPT0nJyl7IA0KCQkJdmFyIGJveCA9IHRoaXMuR2V0Q2J4Q2hlY2tlZCgpOwkJCQ0KCQkJLy9Vc2VyQWt0aXZpdGFzRGV0LmdlbkRldGFpbCgpOwkJCQ0KCQkJDQoJCX1lbHNlew0KCQkNCgkJCWFsZXJ0KGVycm1zZyk7DQoJCX0NCgkJDQoJfSwNCgkNCglkYWZ0YXJSZW5kZXI6ZnVuY3Rpb24oKXsNCgkJdmFyIG1lID10aGlzOyAvL3JlbmRlciBkYWZ0YXIgDQoJCWFkZENvdmVyUGFnZTIoDQoJCQknZGFmdGFyX2NvdmVyJywJMSwgCXRydWUsIHRydWUsCXtyZW5kZXJUbzogdGhpcy5wcmVmaXgrJ19jb250X2RhZnRhcicsDQoJCQlpbWdzcmM6ICdpbWFnZXMvd2FpdC5naWYnLA0KCQkJc3R5bGU6IHtwb3NpdGlvbjonYWJzb2x1dGUnLCB0b3A6JzUnLCBsZWZ0Oic1J30NCgkJCX0NCgkJKTsNCgkJJC5hamF4KHsNCgkJICAJdXJsOiB0aGlzLnVybCsnJnRpcGU9ZGFmdGFyJywNCgkJIAl0eXBlOidQT1NUJywgDQoJCQlkYXRhOiQoJyMnK3RoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLCANCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJDQoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOw0KCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG1lLnByZWZpeCsnX2NvbnRfZGFmdGFyJykuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50Ow0KCQkJCW1lLnN1bUhhbFJlbmRlcigpOw0KCQkgIAl9DQoJCX0pOw0KCX0sDQoJDQoJYXV0b2NvbXBsZXRlX2luaXRpYWw6ZnVuY3Rpb24gKCl7DQoJIAkJCQl2YXIgbWU9dGhpczsNCgkJCQkJCSQoZnVuY3Rpb24oKSB7CQkJCQkJCQ0KCQkJCQkJCSQoICcjc3RhdHVzX2JhcmFuZycgKS5hdXRvY29tcGxldGUoew0KCQkJCQkJICAgICAgc291cmNlOiBmdW5jdGlvbiggcmVxdWVzdCwgcmVzcG9uc2UgKSB7DQoJCQkJCQkJICAvL3ZhciB3YWt0dV9rbGluaWsgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd2FrdHVfa2xpbmlrJykudmFsdWU7DQoJCQkJCQkgICAgICAgICQuYWpheCh7DQoJCQkJCQkJCSAgdXJsOiAncGFnZXMucGhwP1BnPVJlZlN0YXR1c0JhcmFuZyZ0aXBlPWF1dG9jb21wbGV0ZV9zdHN1cnZleV9nZXRkYXRhJywNCgkJCQkJCSAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLA0KCQkJCQkJICAgICAgICAgIGRhdGE6IHsNCgkJCQkJCSAgICAgICAgICAgIC8vZmVhdHVyZUNsYXNzOiAnUCcsDQoJCQkJCQkgICAgICAgICAgICBzdHlsZTogJ2Z1bGwnLA0KCQkJCQkJICAgICAgICAgICAgbWF4Um93czogMTIsDQoJCQkJCQkJCQluYW1lX3N0YXJ0c1dpdGg6IHJlcXVlc3QudGVybQkNCgkJCQkJCQkNCgkJCQkJCSAgICAgICAgICB9LA0KCQkJCQkJCQkgIHN1Y2Nlc3M6IGZ1bmN0aW9uKCBkYXRhICkgewkJCQkJCSAgICAgICAgIA0KCQkJCQkJCQkJICByZXNwb25zZSggJC5tYXAoIGRhdGEsIGZ1bmN0aW9uKCBpdGVtICkgew0KCQkJCQkJCQkJCSAgICByZXR1cm4gew0KCQkJCQkJCQkJCQkJaWQ6IGl0ZW0uaWQsDQoJCQkJCQkJCQkJICAgICAgICBsYWJlbDogaXRlbS5sYWJlbCwNCgkJCQkJCQkJCQkJCXZhbHVlOiBpdGVtLnZhbHVlDQoJCQkJCQkJCQkJICAgIH0NCgkJCQkJCQkJCQl9KSk7DQoJCQkJCQkJCQl9DQoJCQkJCQkgICAgICAgIH0pOw0KCQkJCQkJICAgICAgfSwNCgkJCQkJCSAgICAgIG1pbkxlbmd0aDogMSwNCgkJCQkJCSAgICAgIHNlbGVjdDogZnVuY3Rpb24oIGV2ZW50LCB1aSApIHsNCgkJCQkJCSAgICAgICAgY29uc29sZS5sb2coIHVpLml0ZW0gPw0KCQkJCQkJICAgICAgICAgICdTZWxlY3RlZDogaWQ9JyArIHVpLml0ZW0uaWQrJyBsYWJlbD0nICsgdWkuaXRlbS5sYWJlbCAgOg0KCQkJCQkJICAgICAgICAgICdOb3RoaW5nIHNlbGVjdGVkLCBpbnB1dCB3YXMgJyArIHRoaXMudmFsdWUpOw0KCQkJCQkJCQkgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2lkX3N0YXR1c19iYXJhbmcnKS52YWx1ZT11aS5pdGVtLmlkOw0KCQkJCQkJCQkgLy9tZS5ZYW5nTWVuZXJpbWEoKTsNCgkJCQkJCSAgICAgIH0sDQoJCQkJCQkgICAgICBvcGVuOiBmdW5jdGlvbigpIHsNCgkJCQkJCSAgICAgICAgJCggdGhpcyApLnJlbW92ZUNsYXNzKCAndWktY29ybmVyLWFsbCcgKS5hZGRDbGFzcyggJ3VpLWNvcm5lci10b3AnICk7DQoJCQkJCQkgICAgICB9LA0KCQkJCQkJICAgICAgY2xvc2U6IGZ1bmN0aW9uKCkgew0KCQkJCQkJICAgICAgICAkKCB0aGlzICkucmVtb3ZlQ2xhc3MoICd1aS1jb3JuZXItdG9wJyApLmFkZENsYXNzKCAndWktY29ybmVyLWFsbCcgKTsNCgkJCQkJCQkJLy9tZS50YXJpZigpOw0KCQkJCQkJICAgICAgfQ0KCQkJCQkJICAgIH0pOw0KCQkJCQkJfSk7DQoJfSwNCgkNCglhdXRvY29tcGxldGVfaW5pdGlhbHN1cnZleTpmdW5jdGlvbiAoKXsNCgkgCQkJCXZhciBtZT10aGlzOw0KCQkJCQkJJChmdW5jdGlvbigpIHsJCQkJCQkJDQoJCQkJCQkJJCggJyNmbU5BTUFTVVJWRVknICkuYXV0b2NvbXBsZXRlKHsNCgkJCQkJCSAgICAgIHNvdXJjZTogZnVuY3Rpb24oIHJlcXVlc3QsIHJlc3BvbnNlICkgew0KCQkJCQkJCSAgLy92YXIgd2FrdHVfa2xpbmlrID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3dha3R1X2tsaW5paycpLnZhbHVlOw0KCQkJCQkJICAgICAgICAkLmFqYXgoew0KCQkJCQkJCQkgIHVybDogJ3BhZ2VzLnBocD9QZz1SZWZTdGF0dXNCYXJhbmcmdGlwZT1hdXRvY29tcGxldGVfc3RzdXJ2ZXkyX2dldGRhdGEnLA0KCQkJCQkJICAgICAgICAgIGRhdGFUeXBlOiAnanNvbicsDQoJCQkJCQkgICAgICAgICAgZGF0YTogew0KCQkJCQkJICAgICAgICAgICAgLy9mZWF0dXJlQ2xhc3M6ICdQJywNCgkJCQkJCSAgICAgICAgICAgIHN0eWxlOiAnZnVsbCcsDQoJCQkJCQkgICAgICAgICAgICBtYXhSb3dzOiAxMiwNCgkJCQkJCQkJCW5hbWVfc3RhcnRzV2l0aDogcmVxdWVzdC50ZXJtCQ0KCQkJCQkJCQ0KCQkJCQkJICAgICAgICAgIH0sDQoJCQkJCQkJCSAgc3VjY2VzczogZnVuY3Rpb24oIGRhdGEgKSB7CQkJCQkJICAgICAgICAgDQoJCQkJCQkJCQkgIHJlc3BvbnNlKCAkLm1hcCggZGF0YSwgZnVuY3Rpb24oIGl0ZW0gKSB7DQoJCQkJCQkJCQkJICAgIHJldHVybiB7DQoJCQkJCQkJCQkJCQlpZDogaXRlbS5pZCwNCgkJCQkJCQkJCQkgICAgICAgIGxhYmVsOiBpdGVtLmxhYmVsLA0KCQkJCQkJCQkJCQkJdmFsdWU6IGl0ZW0udmFsdWUNCgkJCQkJCQkJCQkgICAgfQ0KCQkJCQkJCQkJCX0pKTsNCgkJCQkJCQkJCX0NCgkJCQkJCSAgICAgICAgfSk7DQoJCQkJCQkgICAgICB9LA0KCQkJCQkJICAgICAgbWluTGVuZ3RoOiAxLA0KCQkJCQkJICAgICAgc2VsZWN0OiBmdW5jdGlvbiggZXZlbnQsIHVpICkgew0KCQkJCQkJICAgICAgICBjb25zb2xlLmxvZyggdWkuaXRlbSA\/DQoJCQkJCQkgICAgICAgICAgJ1NlbGVjdGVkOiBpZD0nICsgdWkuaXRlbS5pZCsnIGxhYmVsPScgKyB1aS5pdGVtLmxhYmVsICA6DQoJCQkJCQkgICAgICAgICAgJ05vdGhpbmcgc2VsZWN0ZWQsIGlucHV0IHdhcyAnICsgdGhpcy52YWx1ZSk7DQoJCQkJCQkJCSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1TVFNVUlZFWScpLnZhbHVlPXVpLml0ZW0uaWQ7DQoJCQkJCQkJCSAvL21lLllhbmdNZW5lcmltYSgpOw0KCQkJCQkJICAgICAgfSwNCgkJCQkJCSAgICAgIG9wZW46IGZ1bmN0aW9uKCkgew0KCQkJCQkJICAgICAgICAkKCB0aGlzICkucmVtb3ZlQ2xhc3MoICd1aS1jb3JuZXItYWxsJyApLmFkZENsYXNzKCAndWktY29ybmVyLXRvcCcgKTsNCgkJCQkJCSAgICAgIH0sDQoJCQkJCQkgICAgICBjbG9zZTogZnVuY3Rpb24oKSB7DQoJCQkJCQkgICAgICAgICQoIHRoaXMgKS5yZW1vdmVDbGFzcyggJ3VpLWNvcm5lci10b3AnICkuYWRkQ2xhc3MoICd1aS1jb3JuZXItYWxsJyApOw0KCQkJCQkJCQkvL21lLnRhcmlmKCk7DQoJCQkJCQkgICAgICB9DQoJCQkJCQkgICAgfSk7DQoJCQkJCQl9KTsNCgl9LAkJCQkJCQ0KCQ0KCUJhcnU6IGZ1bmN0aW9uKG1vZGUpewkNCgkJDQoJCXZhciBtZSA9IHRoaXM7DQoJCXZhciBlcnI9Jyc7DQoJCQ0KCQlpZiAoZXJyID09JycgKXsJCQ0KCQkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3JtY292ZXInOw0KCQkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsNCgkJCWFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsJDQoJCQkkLmFqYXgoew0KCQkJCXR5cGU6J1BPU1QnLCANCgkJCQlkYXRhOiQoJyMnK3RoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpKycmbW9kZT0nK21vZGUsDQoJCQkgIAl1cmw6IHRoaXMudXJsKycmdGlwZT1mb3JtQmFydScsDQoJCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CQkNCgkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkJCQ0KCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcikuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50OwkJCQ0KCQkJCQltZS5BZnRlckZvcm1CYXJ1KCk7DQoJCQkgIAl9DQoJCQl9KTsNCgkJDQoJCX1lbHNlew0KCQkgCWFsZXJ0KGVycik7DQoJCX0NCgl9LA0KCQ0KCWplbmlzRWtzdHJhOiBmdW5jdGlvbigpew0KCQl2YXIgbWUgPSB0aGlzOw0KCQlpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYm94Y2hlY2tlZCcpKXsNCgkJCXZhciBqbWxjZWsgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYm94Y2hlY2tlZCcpLnZhbHVlIDsJDQoJCX1lbHNlew0KCQkJdmFyIGptbGNlayA9ICcnOw0KCQl9DQoJCQ0KCQlpZihqbWxjZWsgPT0wKXsNCgkJCWFsZXJ0KCdEYXRhIEJlbHVtIERpcGlsaWghJyk7DQoJCX1lbHNlew0KCQkJaWYoY29uZmlybSgnUGlsaWggJytqbWxjZWsrJyBEYXRhID8nKSl7DQoJCQkNCgkJCS8vdGhpcy5TaG93ICgnZm9ybWVkaXQnLHtpZHBsaDpib3gudmFsdWV9LCBmYWxzZSwgdHJ1ZSk7CQkJDQoJCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1jb3ZlclN0U3VydmV5JzsNCgkJCWFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsJDQoJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOw0KCQkJJC5hamF4KHsNCgkJCQl0eXBlOidQT1NUJywgDQoJCQkJZGF0YTokKCcjYWRtaW5Gb3JtJykuc2VyaWFsaXplKCksDQoJCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9Zm9ybUpuc0Vrc3RyYScsDQoJCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CQkNCgkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkNCgkJCQkJaWYgKHJlc3AuZXJyID09JycpewkJDQoJCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcikuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50Ow0KCQkJCQkJLy9tZS5hdXRvY29tcGxldGVfaW5pdGlhbCgpOw0KCQkJCQl9ZWxzZXsNCgkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsNCgkJCQkJCWRlbEVsZW0oY292ZXIpOw0KCQkJCQkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0nYXV0byc7DQoJCQkJCX0NCgkJCSAgCX0NCgkJCX0pOw0KCQkJfWVsc2V7DQoJCQkJYWxlcnQoZXJybXNnKTsNCgkJCX0NCgkJfQ0KCX0sDQoJDQoJamVuaXNMYWluOiBmdW5jdGlvbigpew0KCQl2YXIgbWUgPSB0aGlzOw0KCQlpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYm94Y2hlY2tlZCcpKXsNCgkJCXZhciBqbWxjZWsgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYm94Y2hlY2tlZCcpLnZhbHVlIDsJDQoJCX1lbHNlew0KCQkJdmFyIGptbGNlayA9ICcnOw0KCQl9DQoJCQ0KCQlpZihqbWxjZWsgPT0wKXsNCgkJCWFsZXJ0KCdEYXRhIEJlbHVtIERpcGlsaWghJyk7DQoJCX1lbHNlew0KCQkJaWYoY29uZmlybSgnUGlsaWggJytqbWxjZWsrJyBEYXRhID8nKSl7DQoJCQkNCgkJCS8vdGhpcy5TaG93ICgnZm9ybWVkaXQnLHtpZHBsaDpib3gudmFsdWV9LCBmYWxzZSwgdHJ1ZSk7CQkJDQoJCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1jb3ZlclN0U3VydmV5JzsNCgkJCWFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsJDQoJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOw0KCQkJJC5hamF4KHsNCgkJCQl0eXBlOidQT1NUJywgDQoJCQkJZGF0YTokKCcjYWRtaW5Gb3JtJykuc2VyaWFsaXplKCksDQoJCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9Zm9ybUpuc0xhaW4nLA0KCQkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJDQoJCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsJDQoJCQkJCWlmIChyZXNwLmVyciA9PScnKXsJCQ0KCQkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsNCgkJCQkJCS8vbWUuYXV0b2NvbXBsZXRlX2luaXRpYWwoKTsNCgkJCQkJfWVsc2V7DQoJCQkJCQlhbGVydChyZXNwLmVycik7DQoJCQkJCQlkZWxFbGVtKGNvdmVyKTsNCgkJCQkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2F1dG8nOw0KCQkJCQl9DQoJCQkgIAl9DQoJCQl9KTsNCgkJCX1lbHNlew0KCQkJCWFsZXJ0KGVycm1zZyk7DQoJCQl9DQoJCX0NCgl9LA0KCQ0KCS8qDQoJU3RTdXJ2ZXk6IGZ1bmN0aW9uKCl7DQoJCXZhciBtZSA9IHRoaXM7DQoJCWlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdib3hjaGVja2VkJykpew0KCQkJdmFyIGptbGNlayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdib3hjaGVja2VkJykudmFsdWUgOwkNCgkJfWVsc2V7DQoJCQl2YXIgam1sY2VrID0gJyc7DQoJCX0NCgkJDQoJCWlmKGptbGNlayA9PTApew0KCQkJYWxlcnQoJ0RhdGEgQmVsdW0gRGlwaWxpaCEnKTsNCgkJfWVsc2V7DQoJCQlpZihjb25maXJtKCdQaWxpaCAnK2ptbGNlaysnIERhdGEgPycpKXsNCgkJCQ0KCQkJLy90aGlzLlNob3cgKCdmb3JtZWRpdCcse2lkcGxoOmJveC52YWx1ZX0sIGZhbHNlLCB0cnVlKTsJCQkNCgkJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyU3RTdXJ2ZXknOw0KCQkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOwkNCgkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7DQoJCQkkLmFqYXgoew0KCQkJCXR5cGU6J1BPU1QnLCANCgkJCQlkYXRhOiQoJyNhZG1pbkZvcm0nKS5zZXJpYWxpemUoKSwNCgkJCQl1cmw6IHRoaXMudXJsKycmdGlwZT1mb3JtU3RTdXJ2ZXknLA0KCQkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJDQoJCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsJDQoJCQkJCWlmIChyZXNwLmVyciA9PScnKXsJCQ0KCQkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsNCgkJCQkJCW1lLmF1dG9jb21wbGV0ZV9pbml0aWFsKCk7DQoJCQkJCX1lbHNlew0KCQkJCQkJYWxlcnQocmVzcC5lcnIpOw0KCQkJCQkJZGVsRWxlbShjb3Zlcik7DQoJCQkJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdhdXRvJzsNCgkJCQkJfQ0KCQkJICAJfQ0KCQkJfSk7DQoJCQl9ZWxzZXsNCgkJCQlhbGVydChlcnJtc2cpOw0KCQkJfQ0KCQl9DQoJfSwqLw0KCQ0KCVRlc3Q6IGZ1bmN0aW9uKCl7CQ0KCQkJdmFyIGFGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5mb3JtTmFtZSk7CQkNCgkJCQlhRm9ybS5hY3Rpb249IHRoaXMudXJsKycmdGlwZT10ZXN0JzsvLyc\/T3A9JytvcCsnJlBnPTImaWRwcnM9Y2V0YWtfaGFsJzsJCQ0KCQkJCWFGb3JtLnRhcmdldD0nX2JsYW5rJzsNCgkJCQlhRm9ybS5zdWJtaXQoKTsJDQoJCQkJYUZvcm0udGFyZ2V0PScnOwkNCgl9LAkJCQkNCgkNCglFZGl0OmZ1bmN0aW9uKCl7DQoJCXZhciBtZSA9IHRoaXM7DQoJCWVycm1zZyA9IHRoaXMuQ2VrQ2hlY2tib3goKTsNCgkJaWYoZXJybXNnID09JycpeyANCgkJCXZhciBib3ggPSB0aGlzLkdldENieENoZWNrZWQoKTsNCgkJCQ0KCQkJLy90aGlzLlNob3cgKCdmb3JtZWRpdCcse2lkcGxoOmJveC52YWx1ZX0sIGZhbHNlLCB0cnVlKTsJCQkNCgkJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyJzsNCgkJCWFkZENvdmVyUGFnZTIoY292ZXIsOTk5LHRydWUsZmFsc2UpOwkNCgkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7DQoJCQkkLmFqYXgoew0KCQkJCXR5cGU6J1BPU1QnLCANCgkJCQlkYXRhOiQoJyMnK3RoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLA0KCQkJCXVybDogdGhpcy51cmwrJyZ0aXBlPWZvcm1FZGl0JywNCgkJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJCQ0KCQkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CQ0KCQkJCQlpZiAocmVzcC5lcnIgPT0nJyl7CQkNCgkJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQ7DQoJCQkJCQltZS5BZnRlckZvcm1FZGl0KHJlc3ApOw0KCQkJCQl9ZWxzZXsNCgkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsNCgkJCQkJCWRlbEVsZW0oY292ZXIpOw0KCQkJCQkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0nYXV0byc7DQoJCQkJCX0NCgkJCSAgCX0NCgkJCX0pOw0KCQl9ZWxzZXsNCgkJCWFsZXJ0KGVycm1zZyk7DQoJCX0NCgkJDQoJfSwNCgkJDQoJU2ltcGFuOiBmdW5jdGlvbihtb2RlKXsNCgkJdmFyIG1lPSB0aGlzOwkNCgkJdGhpcy5PbkVycm9yQ2xvc2UgPSBmYWxzZQkNCgkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsNCgkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3Jtc2ltcGFuJzsNCgkJaWYobW9kZT09MSl7DQoJCQl2YXIgZm9ybU5hbWVfID0gdGhpcy5wcmVmaXg7IAkJCQ0KCQl9ZWxzZXsNCgkJCXZhciBmb3JtTmFtZV8gPSB0aGlzLnByZWZpeCsnU3VydmV5JzsgCQkNCgkJfQ0KCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CQ0KCQkvKnRoaXMuc2VuZFJlcSgNCgkJCXRoaXMudXJsLA0KCQkJeyBpZHByczogMCwgZGFmdGFyUHJvc2VzOiBuZXcgQXJyYXkoJ3NpbXBhbicpfSwNCgkJCXRoaXMuZm9ybURpYWxvZyk7Ki8NCgkJJC5hamF4KHsNCgkJCXR5cGU6J1BPU1QnLCANCgkJCWRhdGE6JCgnIycrZm9ybU5hbWVfKydfZm9ybScpLnNlcmlhbGl6ZSgpLA0KCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9c2ltcGFuJywNCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJDQoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkNCgkJCQlkZWxFbGVtKGNvdmVyKTsJCQ0KCQkJCS8vZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsNCgkJCQlpZihyZXNwLmVycj09JycpewkJCQ0KCQkJCQlpZihtb2RlPT0xKXsNCgkJCQkJCW1lLkNsb3NlKCk7DQoJCQkJCQltZS5BZnRlclNpbXBhbigpOwkJCQkJCQ0KCQkJCQl9ZWxzZXsNCgkJCQkJCW1lLkNsb3NlQ2FyaSgpOw0KCQkJCQkJUGVuYXRhdXNhaGEucmVmcmVzaExpc3QodHJ1ZSk7CQkJCQkJDQoJCQkJCX0NCgkJCQl9ZWxzZXsNCgkJCQkJYWxlcnQocmVzcC5lcnIpOw0KCQkJCX0NCgkJICAJfQ0KCQl9KTsNCgl9LA0KCQ0KCQ0KCVNpbXBhbkpuc0xhaW46IGZ1bmN0aW9uKG1vZGUpew0KCQl2YXIgbWU9IHRoaXM7CQ0KCQl0aGlzLk9uRXJyb3JDbG9zZSA9IGZhbHNlCQ0KCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOw0KCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1zaW1wYW4nOw0KCQlpZihtb2RlPT0xKXsNCgkJCXZhciBmb3JtTmFtZV8gPSB0aGlzLnByZWZpeDsgCQkJDQoJCX1lbHNlew0KCQkJdmFyIGZvcm1OYW1lXyA9IHRoaXMucHJlZml4KydTdXJ2ZXknOyAJCQ0KCQl9DQoJCWFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsJCQkNCgkJJC5hamF4KHsNCgkJCXR5cGU6J1BPU1QnLCANCgkJCWRhdGE6JCgnIycrZm9ybU5hbWVfKydfZm9ybScpLnNlcmlhbGl6ZSgpLA0KCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9c2ltcGFuSm5zTGFpbicsDQoJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJCQ0KCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsJDQoJCQkJZGVsRWxlbShjb3Zlcik7CQkJCQkJDQoJCQkJaWYocmVzcC5lcnI9PScnKXsJCQkNCgkJCQkJaWYobW9kZT09MSl7DQoJCQkJCQltZS5DbG9zZSgpOw0KCQkJCQkJbWUuQWZ0ZXJTaW1wYW4oKTsJCQkJCQkNCgkJCQkJfWVsc2V7DQoJCQkJCQltZS5DbG9zZUNhcmkoKTsNCgkJCQkJCVBlbmF0YXVzYWhhLnJlZnJlc2hMaXN0KHRydWUpOwkJCQkJCQ0KCQkJCQl9DQoJCQkJfWVsc2V7DQoJCQkJCWFsZXJ0KHJlc3AuZXJyKTsNCgkJCQl9DQoJCSAgCX0NCgkJfSk7DQoJfSwNCgkNCglDYXJpOiBmdW5jdGlvbigpew0KCQl2YXIgbWUgPSB0aGlzOw0KCQlSZWZTdGF0dXNCYXJhbmcuZWxfaWRfc3RhdHVzX2JyZ190ZW1wID0gJ2lkX3N0YXR1c19iYXJhbmcnOw0KCQlSZWZTdGF0dXNCYXJhbmcuZWxfbm1fc3RhdHVzX2JyZ190ZW1wID0gJ3N0YXR1c19iYXJhbmcnOwkJDQoJCVJlZlN0YXR1c0JhcmFuZy53aW5kb3dTYXZlQWZ0ZXI9IGZ1bmN0aW9uKCl7fTsNCgkJUmVmU3RhdHVzQmFyYW5nLndpbmRvd1Nob3coKTsJDQoJfSwJDQoJDQoJQ2xvc2VDYXJpOiBmdW5jdGlvbigpew0KCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdhdXRvJzsNCgkJZGVsRWxlbSh0aGlzLnByZWZpeCsnX2Zvcm1jb3ZlclN0U3VydmV5Jyk7DQoJfSwJCQkJDQoJDQoJd2luZG93U2hvdzogZnVuY3Rpb24oKXsNCgkJdmFyIG1lID0gdGhpczsNCgkJDQoJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfY292ZXInOw0KCQkNCgkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsNCgkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOwkNCgkJJC5hamF4KHsNCgkJCXR5cGU6J1BPU1QnLCANCgkJCWRhdGE6JCgnIycrdGhpcy5mb3JtTmFtZSkuc2VyaWFsaXplKCksDQoJCQl1cmw6IHRoaXMudXJsKycmdGlwZT13aW5kb3dzaG93JywNCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJDQoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkNCgkJCQlpZihyZXNwLmVycj09Jycpew0KCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcikuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50OwkJCQkNCgkJCQkJbWUubG9hZGluZygpOw0KCQkJCX1lbHNlew0KCQkJCQlhbGVydChyZXNwLmVycik7DQoJCQkJCWRlbEVsZW0oY292ZXIpOw0KCQkJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdhdXRvJzsNCgkJCQl9DQoJCSAgCX0NCgkJfSk7DQoJfSwNCgkNCgl3aW5kb3dDbG9zZTogZnVuY3Rpb24oKXsNCgkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0nYXV0byc7DQoJCWRlbEVsZW0odGhpcy5wcmVmaXgrJ19jb3ZlcicpOw0KCX0sDQoJDQoJd2luZG93U2F2ZTogZnVuY3Rpb24oKXsNCgkJdmFyIG1lPSB0aGlzOw0KCQkvL2FsZXJ0KCdzYXZlJyk7DQoJCXZhciBlcnJtc2cgPSB0aGlzLkNla0NoZWNrYm94KCk7DQoJCWlmKGVycm1zZyA9PScnKXsgDQoJCQl2YXIgYm94ID0gdGhpcy5HZXRDYnhDaGVja2VkKCk7DQoJCQkvL2FsZXJ0KGJveC52YWx1ZSk7DQoJCQl0aGlzLmlkcGlsaWggPSBib3gudmFsdWU7CQkJDQoJCQkNCgkJCXZhciBjb3ZlciA9ICdSZWZTdGF0dXNCYXJhbmdfZ2V0ZGF0YSc7DQoJCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CQkJCQ0KCQkJJC5hamF4KHsNCgkJCQl1cmw6ICdwYWdlcy5waHA\/UGc9UmVmU3RhdHVzQmFyYW5nJnRpcGU9Z2V0ZGF0YSZpZD0nK3RoaXMuaWRwaWxpaCwNCgkJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJCQ0KCQkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CQkJDQoJCQkJCWRlbEVsZW0oY292ZXIpOw0KCQkJCQlpZihyZXNwLmVycj09Jycpew0KCQkJCQkJaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobWUuZWxfaWRfc3RhdHVzX2JyZ190ZW1wKSkgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobWUuZWxfaWRfc3RhdHVzX2JyZ190ZW1wKS52YWx1ZT0gcmVzcC5jb250ZW50LmVsX2lkX3N0YXR1c19icmdfdGVtcDsNCgkJCQkJCWlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG1lLmVsX25tX3N0YXR1c19icmdfdGVtcCkpIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG1lLmVsX25tX3N0YXR1c19icmdfdGVtcCkudmFsdWU9IHJlc3AuY29udGVudC5lbF9ubV9zdGF0dXNfYnJnX3RlbXA7DQoJCQkJCQkvL2lmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG1lLmVsX2lkX3NhdHVhbl90ZW1wKSkgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobWUuZWxfaWRfc2F0dWFuX3RlbXApLnZhbHVlPSByZXNwLmNvbnRlbnQuZWxfaWRfc2F0dWFuX3RlbXA7DQoJCQkJCQkvL2lmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG1lLmVsX25tX3NhdHVhbl90ZW1wKSkgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobWUuZWxfbm1fc2F0dWFuX3RlbXApLnZhbHVlPSByZXNwLmNvbnRlbnQuZWxfbm1fc2F0dWFuX3RlbXA7DQoNCgkJCQkJCW1lLndpbmRvd0Nsb3NlKCk7DQoJCQkJCX1lbHNlew0KCQkJCQkJYWxlcnQocmVzcC5lcnIpCQ0KCQkJCQl9DQoJCQkgIAl9DQoJCQl9KTsJCQ0KCQl9ZWxzZXsNCgkJCWFsZXJ0KGVycm1zZyk7DQoJCX0NCgl9LA0KCQ0KCXdpbmRvd1NhdmVBZnRlcjogZnVuY3Rpb24oKXsNCgkJYWxlcnQoJ3RlczInKTsJDQoJfSwNCgkNCn0pOw0K",
    "size": "13512"
}