{
    "namaFile": "pages\/admin\/menu\/assets\/js\/libs\/inputmask\/inputmask\/jquery.inputmask.date.extensions.js",
    "lastUpdate": "2018-03-22+14:25:51.84",
    "contentFile": "LyohCioganF1ZXJ5LmlucHV0bWFzay5kYXRlLmV4dGVuc2lvbnMuanMKKiBodHRwOi8vZ2l0aHViLmNvbS9Sb2JpbkhlcmJvdHMvanF1ZXJ5LmlucHV0bWFzawoqIENvcHlyaWdodCAoYykgMjAxMCAtIDIwMTQgUm9iaW4gSGVyYm90cwoqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSAoaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHApCiogVmVyc2lvbjogMy4xLjQ5CiovCiFmdW5jdGlvbihmYWN0b3J5KSB7CiAgICAiZnVuY3Rpb24iID09IHR5cGVvZiBkZWZpbmUgJiYgZGVmaW5lLmFtZCA\/IGRlZmluZShbICJqcXVlcnkiLCAiLi9qcXVlcnkuaW5wdXRtYXNrIiBdLCBmYWN0b3J5KSA6IGZhY3RvcnkoalF1ZXJ5KTsKfShmdW5jdGlvbigkKSB7CiAgICByZXR1cm4gJC5leHRlbmQoJC5pbnB1dG1hc2suZGVmYXVsdHMuZGVmaW5pdGlvbnMsIHsKICAgICAgICBoOiB7CiAgICAgICAgICAgIHZhbGlkYXRvcjogIlswMV1bMC05XXwyWzAtM10iLAogICAgICAgICAgICBjYXJkaW5hbGl0eTogMiwKICAgICAgICAgICAgcHJldmFsaWRhdG9yOiBbIHsKICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogIlswLTJdIiwKICAgICAgICAgICAgICAgIGNhcmRpbmFsaXR5OiAxCiAgICAgICAgICAgIH0gXQogICAgICAgIH0sCiAgICAgICAgczogewogICAgICAgICAgICB2YWxpZGF0b3I6ICJbMC01XVswLTldIiwKICAgICAgICAgICAgY2FyZGluYWxpdHk6IDIsCiAgICAgICAgICAgIHByZXZhbGlkYXRvcjogWyB7CiAgICAgICAgICAgICAgICB2YWxpZGF0b3I6ICJbMC01XSIsCiAgICAgICAgICAgICAgICBjYXJkaW5hbGl0eTogMQogICAgICAgICAgICB9IF0KICAgICAgICB9LAogICAgICAgIGQ6IHsKICAgICAgICAgICAgdmFsaWRhdG9yOiAiMFsxLTldfFsxMl1bMC05XXwzWzAxXSIsCiAgICAgICAgICAgIGNhcmRpbmFsaXR5OiAyLAogICAgICAgICAgICBwcmV2YWxpZGF0b3I6IFsgewogICAgICAgICAgICAgICAgdmFsaWRhdG9yOiAiWzAtM10iLAogICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDEKICAgICAgICAgICAgfSBdCiAgICAgICAgfSwKICAgICAgICBtOiB7CiAgICAgICAgICAgIHZhbGlkYXRvcjogIjBbMS05XXwxWzAxMl0iLAogICAgICAgICAgICBjYXJkaW5hbGl0eTogMiwKICAgICAgICAgICAgcHJldmFsaWRhdG9yOiBbIHsKICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogIlswMV0iLAogICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDEKICAgICAgICAgICAgfSBdCiAgICAgICAgfSwKICAgICAgICB5OiB7CiAgICAgICAgICAgIHZhbGlkYXRvcjogIigxOXwyMClcXGR7Mn0iLAogICAgICAgICAgICBjYXJkaW5hbGl0eTogNCwKICAgICAgICAgICAgcHJldmFsaWRhdG9yOiBbIHsKICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogIlsxMl0iLAogICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDEKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgdmFsaWRhdG9yOiAiKDE5fDIwKSIsCiAgICAgICAgICAgICAgICBjYXJkaW5hbGl0eTogMgogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICB2YWxpZGF0b3I6ICIoMTl8MjApXFxkIiwKICAgICAgICAgICAgICAgIGNhcmRpbmFsaXR5OiAzCiAgICAgICAgICAgIH0gXQogICAgICAgIH0KICAgIH0pLCAkLmV4dGVuZCgkLmlucHV0bWFzay5kZWZhdWx0cy5hbGlhc2VzLCB7CiAgICAgICAgImRkL21tL3l5eXkiOiB7CiAgICAgICAgICAgIG1hc2s6ICIxLzIveSIsCiAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAiZGQvbW0veXl5eSIsCiAgICAgICAgICAgIHJlZ2V4OiB7CiAgICAgICAgICAgICAgICB2YWwxcHJlOiBuZXcgUmVnRXhwKCJbMC0zXSIpLAogICAgICAgICAgICAgICAgdmFsMTogbmV3IFJlZ0V4cCgiMFsxLTldfFsxMl1bMC05XXwzWzAxXSIpLAogICAgICAgICAgICAgICAgdmFsMnByZTogZnVuY3Rpb24oc2VwYXJhdG9yKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGVzY2FwZWRTZXBhcmF0b3IgPSAkLmlucHV0bWFzay5lc2NhcGVSZWdleC5jYWxsKHRoaXMsIHNlcGFyYXRvcik7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBSZWdFeHAoIigoMFsxLTldfFsxMl1bMC05XXwzWzAxXSkiICsgZXNjYXBlZFNlcGFyYXRvciArICJbMDFdKSIpOwogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHZhbDI6IGZ1bmN0aW9uKHNlcGFyYXRvcikgewogICAgICAgICAgICAgICAgICAgIHZhciBlc2NhcGVkU2VwYXJhdG9yID0gJC5pbnB1dG1hc2suZXNjYXBlUmVnZXguY2FsbCh0aGlzLCBzZXBhcmF0b3IpOwogICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUmVnRXhwKCIoKDBbMS05XXxbMTJdWzAtOV0pIiArIGVzY2FwZWRTZXBhcmF0b3IgKyAiKDBbMS05XXwxWzAxMl0pKXwoMzAiICsgZXNjYXBlZFNlcGFyYXRvciArICIoMFsxMy05XXwxWzAxMl0pKXwoMzEiICsgZXNjYXBlZFNlcGFyYXRvciArICIoMFsxMzU3OF18MVswMl0pKSIpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBsZWFwZGF5OiAiMjkvMDIvIiwKICAgICAgICAgICAgc2VwYXJhdG9yOiAiLyIsCiAgICAgICAgICAgIHllYXJyYW5nZTogewogICAgICAgICAgICAgICAgbWlueWVhcjogMTkwMCwKICAgICAgICAgICAgICAgIG1heHllYXI6IDIwOTkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgaXNJblllYXJSYW5nZTogZnVuY3Rpb24oY2hycywgbWlueWVhciwgbWF4eWVhcikgewogICAgICAgICAgICAgICAgaWYgKGlzTmFOKGNocnMpKSByZXR1cm4gITE7CiAgICAgICAgICAgICAgICB2YXIgZW50ZXJlZHllYXIgPSBwYXJzZUludChjaHJzLmNvbmNhdChtaW55ZWFyLnRvU3RyaW5nKCkuc2xpY2UoY2hycy5sZW5ndGgpKSksIGVudGVyZWR5ZWFyMiA9IHBhcnNlSW50KGNocnMuY29uY2F0KG1heHllYXIudG9TdHJpbmcoKS5zbGljZShjaHJzLmxlbmd0aCkpKTsKICAgICAgICAgICAgICAgIHJldHVybiAoaXNOYU4oZW50ZXJlZHllYXIpID8gITEgOiBlbnRlcmVkeWVhciA+PSBtaW55ZWFyICYmIG1heHllYXIgPj0gZW50ZXJlZHllYXIpIHx8IChpc05hTihlbnRlcmVkeWVhcjIpID8gITEgOiBlbnRlcmVkeWVhcjIgPj0gbWlueWVhciAmJiBtYXh5ZWFyID49IGVudGVyZWR5ZWFyMik7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRldGVybWluZWJhc2V5ZWFyOiBmdW5jdGlvbihtaW55ZWFyLCBtYXh5ZWFyLCBoaW50KSB7CiAgICAgICAgICAgICAgICB2YXIgY3VycmVudHllYXIgPSBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCk7CiAgICAgICAgICAgICAgICBpZiAobWlueWVhciA+IGN1cnJlbnR5ZWFyKSByZXR1cm4gbWlueWVhcjsKICAgICAgICAgICAgICAgIGlmIChjdXJyZW50eWVhciA+IG1heHllYXIpIHsKICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBtYXhZZWFyUHJlZml4ID0gbWF4eWVhci50b1N0cmluZygpLnNsaWNlKDAsIDIpLCBtYXhZZWFyUG9zdGZpeCA9IG1heHllYXIudG9TdHJpbmcoKS5zbGljZSgyLCA0KTsgbWF4WWVhclByZWZpeCArIGhpbnQgPiBtYXh5ZWFyOyApIG1heFllYXJQcmVmaXgtLTsKICAgICAgICAgICAgICAgICAgICB2YXIgbWF4eFllYXIgPSBtYXhZZWFyUHJlZml4ICsgbWF4WWVhclBvc3RmaXg7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1pbnllYXIgPiBtYXh4WWVhciA\/IG1pbnllYXIgOiBtYXh4WWVhcjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHJldHVybiBjdXJyZW50eWVhcjsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgb25LZXlVcDogZnVuY3Rpb24oZSkgewogICAgICAgICAgICAgICAgdmFyICRpbnB1dCA9ICQodGhpcyk7CiAgICAgICAgICAgICAgICBpZiAoZS5jdHJsS2V5ICYmIGUua2V5Q29kZSA9PSAkLmlucHV0bWFzay5rZXlDb2RlLlJJR0hUKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHRvZGF5ID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgICAgICAgICAkaW5wdXQudmFsKHRvZGF5LmdldERhdGUoKS50b1N0cmluZygpICsgKHRvZGF5LmdldE1vbnRoKCkgKyAxKS50b1N0cmluZygpICsgdG9kYXkuZ2V0RnVsbFllYXIoKS50b1N0cmluZygpKSwgCiAgICAgICAgICAgICAgICAgICAgJGlucHV0LnRyaWdnZXJIYW5kbGVyKCJzZXR2YWx1ZS5pbnB1dG1hc2siKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgZ2V0RnJvbnRWYWx1ZTogZnVuY3Rpb24obWFzaywgYnVmZmVyLCBvcHRzKSB7CiAgICAgICAgICAgICAgICBmb3IgKHZhciBzdGFydCA9IDAsIGxlbmd0aCA9IDAsIGkgPSAwOyBpIDwgbWFzay5sZW5ndGggJiYgIjIiICE9IG1hc2suY2hhckF0KGkpOyBpKyspIHsKICAgICAgICAgICAgICAgICAgICB2YXIgZGVmaW5pdGlvbiA9IG9wdHMuZGVmaW5pdGlvbnNbbWFzay5jaGFyQXQoaSldOwogICAgICAgICAgICAgICAgICAgIGRlZmluaXRpb24gPyAoc3RhcnQgKz0gbGVuZ3RoLCBsZW5ndGggPSBkZWZpbml0aW9uLmNhcmRpbmFsaXR5KSA6IGxlbmd0aCsrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIGJ1ZmZlci5qb2luKCIiKS5zdWJzdHIoc3RhcnQsIGxlbmd0aCk7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRlZmluaXRpb25zOiB7CiAgICAgICAgICAgICAgICAiMSI6IHsKICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uKGNocnMsIG1hc2tzZXQsIHBvcywgc3RyaWN0LCBvcHRzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpc1ZhbGlkID0gb3B0cy5yZWdleC52YWwxLnRlc3QoY2hycyk7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzdHJpY3QgfHwgaXNWYWxpZCB8fCBjaHJzLmNoYXJBdCgxKSAhPSBvcHRzLnNlcGFyYXRvciAmJiAtMSA9PSAiLS4vIi5pbmRleE9mKGNocnMuY2hhckF0KDEpKSB8fCAhKGlzVmFsaWQgPSBvcHRzLnJlZ2V4LnZhbDEudGVzdCgiMCIgKyBjaHJzLmNoYXJBdCgwKSkpID8gaXNWYWxpZCA6IChtYXNrc2V0LmJ1ZmZlcltwb3MgLSAxXSA9ICIwIiwgCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZnJlc2hGcm9tQnVmZmVyOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQ6IHBvcyAtIDEsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kOiBwb3MKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3M6IHBvcywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGM6IGNocnMuY2hhckF0KDApCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDIsCiAgICAgICAgICAgICAgICAgICAgcHJldmFsaWRhdG9yOiBbIHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbihjaHJzLCBtYXNrc2V0LCBwb3MsIHN0cmljdCwgb3B0cykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNOYU4obWFza3NldC5idWZmZXJbcG9zICsgMV0pIHx8IChjaHJzICs9IG1hc2tzZXQuYnVmZmVyW3BvcyArIDFdKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpc1ZhbGlkID0gMSA9PSBjaHJzLmxlbmd0aCA\/IG9wdHMucmVnZXgudmFsMXByZS50ZXN0KGNocnMpIDogb3B0cy5yZWdleC52YWwxLnRlc3QoY2hycyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc3RyaWN0IHx8IGlzVmFsaWQgfHwgIShpc1ZhbGlkID0gb3B0cy5yZWdleC52YWwxLnRlc3QoIjAiICsgY2hycykpID8gaXNWYWxpZCA6IChtYXNrc2V0LmJ1ZmZlcltwb3NdID0gIjAiLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvcysrLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zOiBwb3MKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBjYXJkaW5hbGl0eTogMQogICAgICAgICAgICAgICAgICAgIH0gXQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICIyIjogewogICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24oY2hycywgbWFza3NldCwgcG9zLCBzdHJpY3QsIG9wdHMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZyb250VmFsdWUgPSBvcHRzLmdldEZyb250VmFsdWUobWFza3NldC5tYXNrLCBtYXNrc2V0LmJ1ZmZlciwgb3B0cyk7CiAgICAgICAgICAgICAgICAgICAgICAgIC0xICE9IGZyb250VmFsdWUuaW5kZXhPZihvcHRzLnBsYWNlaG9sZGVyWzBdKSAmJiAoZnJvbnRWYWx1ZSA9ICIwMSIgKyBvcHRzLnNlcGFyYXRvcik7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpc1ZhbGlkID0gb3B0cy5yZWdleC52YWwyKG9wdHMuc2VwYXJhdG9yKS50ZXN0KGZyb250VmFsdWUgKyBjaHJzKTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFzdHJpY3QgJiYgIWlzVmFsaWQgJiYgKGNocnMuY2hhckF0KDEpID09IG9wdHMuc2VwYXJhdG9yIHx8IC0xICE9ICItLi8iLmluZGV4T2YoY2hycy5jaGFyQXQoMSkpKSAmJiAoaXNWYWxpZCA9IG9wdHMucmVnZXgudmFsMihvcHRzLnNlcGFyYXRvcikudGVzdChmcm9udFZhbHVlICsgIjAiICsgY2hycy5jaGFyQXQoMCkpKSkgcmV0dXJuIG1hc2tzZXQuYnVmZmVyW3BvcyAtIDFdID0gIjAiLCAKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmcmVzaEZyb21CdWZmZXI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydDogcG9zIC0gMSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQ6IHBvcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvczogcG9zLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgYzogY2hycy5jaGFyQXQoMCkKICAgICAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9wdHMubWFzay5pbmRleE9mKCIyIikgPT0gb3B0cy5tYXNrLmxlbmd0aCAtIDEgJiYgaXNWYWxpZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRheU1vbnRoVmFsdWUgPSBtYXNrc2V0LmJ1ZmZlci5qb2luKCIiKS5zdWJzdHIoNCwgNCkgKyBjaHJzOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRheU1vbnRoVmFsdWUgIT0gb3B0cy5sZWFwZGF5KSByZXR1cm4gITA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgeWVhciA9IHBhcnNlSW50KG1hc2tzZXQuYnVmZmVyLmpvaW4oIiIpLnN1YnN0cigwLCA0KSwgMTApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHllYXIgJSA0ID09PSAwID8geWVhciAlIDEwMCA9PT0gMCA\/IHllYXIgJSA0MDAgPT09IDAgPyAhMCA6ICExIDogITAgOiAhMTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNWYWxpZDsKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGNhcmRpbmFsaXR5OiAyLAogICAgICAgICAgICAgICAgICAgIHByZXZhbGlkYXRvcjogWyB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24oY2hycywgbWFza3NldCwgcG9zLCBzdHJpY3QsIG9wdHMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzTmFOKG1hc2tzZXQuYnVmZmVyW3BvcyArIDFdKSB8fCAoY2hycyArPSBtYXNrc2V0LmJ1ZmZlcltwb3MgKyAxXSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZnJvbnRWYWx1ZSA9IG9wdHMuZ2V0RnJvbnRWYWx1ZShtYXNrc2V0Lm1hc2ssIG1hc2tzZXQuYnVmZmVyLCBvcHRzKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0xICE9IGZyb250VmFsdWUuaW5kZXhPZihvcHRzLnBsYWNlaG9sZGVyWzBdKSAmJiAoZnJvbnRWYWx1ZSA9ICIwMSIgKyBvcHRzLnNlcGFyYXRvcik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXNWYWxpZCA9IDEgPT0gY2hycy5sZW5ndGggPyBvcHRzLnJlZ2V4LnZhbDJwcmUob3B0cy5zZXBhcmF0b3IpLnRlc3QoZnJvbnRWYWx1ZSArIGNocnMpIDogb3B0cy5yZWdleC52YWwyKG9wdHMuc2VwYXJhdG9yKS50ZXN0KGZyb250VmFsdWUgKyBjaHJzKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzdHJpY3QgfHwgaXNWYWxpZCB8fCAhKGlzVmFsaWQgPSBvcHRzLnJlZ2V4LnZhbDIob3B0cy5zZXBhcmF0b3IpLnRlc3QoZnJvbnRWYWx1ZSArICIwIiArIGNocnMpKSA\/IGlzVmFsaWQgOiAobWFza3NldC5idWZmZXJbcG9zXSA9ICIwIiwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3MrKywgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvczogcG9zCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDEKICAgICAgICAgICAgICAgICAgICB9IF0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB5OiB7CiAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbihjaHJzLCBtYXNrc2V0LCBwb3MsIHN0cmljdCwgb3B0cykgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAob3B0cy5pc0luWWVhclJhbmdlKGNocnMsIG9wdHMueWVhcnJhbmdlLm1pbnllYXIsIG9wdHMueWVhcnJhbmdlLm1heHllYXIpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF5TW9udGhWYWx1ZSA9IG1hc2tzZXQuYnVmZmVyLmpvaW4oIiIpLnN1YnN0cigwLCA2KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXlNb250aFZhbHVlICE9IG9wdHMubGVhcGRheSkgcmV0dXJuICEwOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHllYXIgPSBwYXJzZUludChjaHJzLCAxMCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4geWVhciAlIDQgPT09IDAgPyB5ZWFyICUgMTAwID09PSAwID8geWVhciAlIDQwMCA9PT0gMCA\/ICEwIDogITEgOiAhMCA6ICExOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAhMTsKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGNhcmRpbmFsaXR5OiA0LAogICAgICAgICAgICAgICAgICAgIHByZXZhbGlkYXRvcjogWyB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24oY2hycywgbWFza3NldCwgcG9zLCBzdHJpY3QsIG9wdHMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpc1ZhbGlkID0gb3B0cy5pc0luWWVhclJhbmdlKGNocnMsIG9wdHMueWVhcnJhbmdlLm1pbnllYXIsIG9wdHMueWVhcnJhbmdlLm1heHllYXIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFzdHJpY3QgJiYgIWlzVmFsaWQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgeWVhclByZWZpeCA9IG9wdHMuZGV0ZXJtaW5lYmFzZXllYXIob3B0cy55ZWFycmFuZ2UubWlueWVhciwgb3B0cy55ZWFycmFuZ2UubWF4eWVhciwgY2hycyArICIwIikudG9TdHJpbmcoKS5zbGljZSgwLCAxKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNWYWxpZCA9IG9wdHMuaXNJblllYXJSYW5nZSh5ZWFyUHJlZml4ICsgY2hycywgb3B0cy55ZWFycmFuZ2UubWlueWVhciwgb3B0cy55ZWFycmFuZ2UubWF4eWVhcikpIHJldHVybiBtYXNrc2V0LmJ1ZmZlcltwb3MrK10gPSB5ZWFyUHJlZml4LmNoYXJBdCgwKSwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3M6IHBvcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHllYXJQcmVmaXggPSBvcHRzLmRldGVybWluZWJhc2V5ZWFyKG9wdHMueWVhcnJhbmdlLm1pbnllYXIsIG9wdHMueWVhcnJhbmdlLm1heHllYXIsIGNocnMgKyAiMCIpLnRvU3RyaW5nKCkuc2xpY2UoMCwgMiksIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzVmFsaWQgPSBvcHRzLmlzSW5ZZWFyUmFuZ2UoeWVhclByZWZpeCArIGNocnMsIG9wdHMueWVhcnJhbmdlLm1pbnllYXIsIG9wdHMueWVhcnJhbmdlLm1heHllYXIpKSByZXR1cm4gbWFza3NldC5idWZmZXJbcG9zKytdID0geWVhclByZWZpeC5jaGFyQXQoMCksIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hc2tzZXQuYnVmZmVyW3BvcysrXSA9IHllYXJQcmVmaXguY2hhckF0KDEpLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvczogcG9zCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpc1ZhbGlkOwogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBjYXJkaW5hbGl0eTogMQogICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbihjaHJzLCBtYXNrc2V0LCBwb3MsIHN0cmljdCwgb3B0cykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlzVmFsaWQgPSBvcHRzLmlzSW5ZZWFyUmFuZ2UoY2hycywgb3B0cy55ZWFycmFuZ2UubWlueWVhciwgb3B0cy55ZWFycmFuZ2UubWF4eWVhcik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXN0cmljdCAmJiAhaXNWYWxpZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB5ZWFyUHJlZml4ID0gb3B0cy5kZXRlcm1pbmViYXNleWVhcihvcHRzLnllYXJyYW5nZS5taW55ZWFyLCBvcHRzLnllYXJyYW5nZS5tYXh5ZWFyLCBjaHJzKS50b1N0cmluZygpLnNsaWNlKDAsIDIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc1ZhbGlkID0gb3B0cy5pc0luWWVhclJhbmdlKGNocnNbMF0gKyB5ZWFyUHJlZml4WzFdICsgY2hyc1sxXSwgb3B0cy55ZWFycmFuZ2UubWlueWVhciwgb3B0cy55ZWFycmFuZ2UubWF4eWVhcikpIHJldHVybiBtYXNrc2V0LmJ1ZmZlcltwb3MrK10gPSB5ZWFyUHJlZml4LmNoYXJBdCgxKSwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3M6IHBvcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHllYXJQcmVmaXggPSBvcHRzLmRldGVybWluZWJhc2V5ZWFyKG9wdHMueWVhcnJhbmdlLm1pbnllYXIsIG9wdHMueWVhcnJhbmdlLm1heHllYXIsIGNocnMpLnRvU3RyaW5nKCkuc2xpY2UoMCwgMiksIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdHMuaXNJblllYXJSYW5nZSh5ZWFyUHJlZml4ICsgY2hycywgb3B0cy55ZWFycmFuZ2UubWlueWVhciwgb3B0cy55ZWFycmFuZ2UubWF4eWVhcikpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRheU1vbnRoVmFsdWUgPSBtYXNrc2V0LmJ1ZmZlci5qb2luKCIiKS5zdWJzdHIoMCwgNik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXlNb250aFZhbHVlICE9IG9wdHMubGVhcGRheSkgaXNWYWxpZCA9ICEwOyBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB5ZWFyID0gcGFyc2VJbnQoY2hycywgMTApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNWYWxpZCA9IHllYXIgJSA0ID09PSAwID8geWVhciAlIDEwMCA9PT0gMCA\",
    "size": "21606"
}