{
    "namaFile": "js\/admin\/usermanajemen.js",
    "lastUpdate": "2018-10-31+10:37:15.26",
    "contentFile": "Lyp2YXIgVXNlck1hbmFqZW1lblNrcGQgPSBuZXcgU2twZENscyh7CglwcmVmaXggOiAnVXNlck1hbmFqZW1lblNrcGQnLCAKCWZvcm1OYW1lOiAnVXNlck1hbmFqZW1lbkZvcm0nLAoJcGlsaWhCaWRhbmdBZnRlcjpmdW5jdGlvbigpewoJCVVzZXJNYW5hamVtZW4ucmVmcmVzaExpc3QodHJ1ZSk7Cgl9LAoJcGlsaWhVbml0QWZ0ZXI6ZnVuY3Rpb24oKXsKCQlVc2VyTWFuYWplbWVuLnJlZnJlc2hMaXN0KHRydWUpOwoJfSwKCXBpbGloU3ViVW5pdEFmdGVyOmZ1bmN0aW9uKCl7CgkJVXNlck1hbmFqZW1lbi5yZWZyZXNoTGlzdCh0cnVlKTsKCX0KfSk7Ki8KCi8qdmFyIFVzZXJNYW5hamVtZW5Ta3BkMiA9IG5ldyBTa3BkQ2xzKHsKCXByZWZpeCA6ICdVc2VyTWFuYWplbWVuU2twZDInLCAKCWZvcm1OYW1lOiAnVXNlck1hbmFqZW1lbl9mb3JtJywKCXBpbGloQmlkYW5nQWZ0ZXI6ZnVuY3Rpb24oKXsKCQkvL1VzZXJNYW5hamVtZW4ucmVmcmVzaExpc3QodHJ1ZSk7Cgl9LAoJcGlsaWhVbml0QWZ0ZXI6ZnVuY3Rpb24oKXsKCQkvL1VzZXJNYW5hamVtZW4ucmVmcmVzaExpc3QodHJ1ZSk7Cgl9LAoJcGlsaWhTdWJVbml0QWZ0ZXI6ZnVuY3Rpb24oKXsKCQkvL1VzZXJNYW5hamVtZW4ucmVmcmVzaExpc3QodHJ1ZSk7Cgl9Cn0pOyovCgp2YXIgVXNlck1hbmFqZW1lblNrcGQgPSBuZXcgU2twZENscyh7CglwcmVmaXggOiAnVXNlck1hbmFqZW1lblNrcGQnLCBmb3JtTmFtZTonVXNlck1hbmFqZW1lbkZvcm0nCn0pOwoKdmFyIFVzZXJNYW5hamVtZW4gPSBuZXcgRGFmdGFyT2JqMih7CglwcmVmaXggOiAnVXNlck1hbmFqZW1lbicsCgl1cmwgOiAncGFnZXMucGhwP1BnPXVzZXJtYW5hamVtZW4nLCAKCWZvcm1OYW1lIDogJ1VzZXJNYW5hamVtZW5Gb3JtJywKCQoJbG9hZGluZzogZnVuY3Rpb24oKXsKCQkvL2FsZXJ0KCdsb2FkaW5nJyk7CgkJdGhpcy50b3BCYXJSZW5kZXIoKTsKCQl0aGlzLmZpbHRlclJlbmRlcigpOwoJCXRoaXMuZGFmdGFyUmVuZGVyKCk7CgkJdGhpcy5zdW1IYWxSZW5kZXIoKTsKCQoJfSwKCQoJZGV0YWlsOiBmdW5jdGlvbigpewoJCS8vYWxlcnQoJ2RldGFpbCcpOwoJCXZhciBtZSA9IHRoaXM7CgkJZXJybXNnID0gdGhpcy5DZWtDaGVja2JveCgpOwoJCWlmKGVycm1zZyA9PScnKXsgCgkJCXZhciBib3ggPSB0aGlzLkdldENieENoZWNrZWQoKTsJCQkKCQkJLy9Vc2VyQWt0aXZpdGFzRGV0LmdlbkRldGFpbCgpOwkJCQoJCQkKCQl9ZWxzZXsKCQkJYWxlcnQoZXJybXNnKTsKCQl9CgkJCgl9LAoKCUNla0NoZWNrYm94U3RhdHVzIDogZnVuY3Rpb24ocHJlZml4KXsvL2FsZXJ0KHRoaXMuZWxKbWxDZWspOwoJCXZhciBlcnJtc2cgPSAnJzsJCQoJCS8vY29uc29sZS5sb2cocHJlZml4KTsKCQlpZiAocHJlZml4ID09IG51bGwpIHByZWZpeCA9IHRoaXMucHJlZml4OwoJCS8qaWYoIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHByZWZpeCsnX2ptbGNlaycpKXsKCQkJaWYoKGVycm1zZz09JycpICAmJiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocHJlZml4Kydfam1sY2VrJykudmFsdWUgPjEgKSl7CWVycm1zZz0gJ1BpbGloIEhhbnlhIFNhdHUgRGF0YSEnOyB9CgkJfSovCgkJaWYoKGVycm1zZz09JycpICYmICggKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHByZWZpeCsnX2ptbGNlaycpLnZhbHVlID09IDApfHwoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocHJlZml4Kydfam1sY2VrJykudmFsdWUgPT0gJycpICApKXsKCQkJZXJybXNnPSAnRGF0YSBiZWx1bSBkaXBpbGloISc7CgkJfQoJCXJldHVybiBlcnJtc2c7Cgl9LAkKCQoJZGFmdGFyUmVuZGVyOmZ1bmN0aW9uKCl7CgkJdmFyIG1lID10aGlzOyAvL3JlbmRlciBkYWZ0YXIgCgkJYWRkQ292ZXJQYWdlMigKCQkJJ2RhZnRhcl9jb3ZlcicsCTEsIAl0cnVlLCB0cnVlLAl7cmVuZGVyVG86IHRoaXMucHJlZml4KydfY29udF9kYWZ0YXInLAoJCQlpbWdzcmM6ICdpbWFnZXMvd2FpdC5naWYnLAoJCQlzdHlsZToge3Bvc2l0aW9uOidhYnNvbHV0ZScsIHRvcDonNScsIGxlZnQ6JzUnfQoJCQl9CgkJKTsKCQkkLmFqYXgoewoJCSAgCXVybDogdGhpcy51cmwrJyZ0aXBlPWRhZnRhcicsCgkJIAl0eXBlOidQT1NUJywgCgkJCWRhdGE6JCgnIycrdGhpcy5mb3JtTmFtZSkuc2VyaWFsaXplKCksIAoJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJCQoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwoJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobWUucHJlZml4KydfY29udF9kYWZ0YXInKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQ7CgkJCQltZS5zdW1IYWxSZW5kZXIoKTsKCQkgIAl9CgkJfSk7Cgl9LAoJCglwaWxpaFVydXNhbiA6IGZ1bmN0aW9uKCl7Cgl2YXIgbWUgPSB0aGlzOyAKCQkkLmFqYXgoewoJCSAgdXJsOiAncGFnZXMucGhwP1BnPXVzZXJtYW5hamVtZW4mdGlwZT1waWxpaFVydXNhbicsCgkJICB0eXBlIDogJ1BPU1QnLAoJCSAgZGF0YTokKCcjVXNlck1hbmFqZW1lbl9mb3JtJykuc2VyaWFsaXplKCksCgkJICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CQkKCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkJCQoJCQoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udF9jJykuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50LmM7CgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250X2QnKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQuZDsKCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRfZScpLmlubmVySFRNTCA9IHJlc3AuY29udGVudC5lOwoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udF9lMScpLmlubmVySFRNTCA9IHJlc3AuY29udGVudC5lMTsKCQkKCQkgIH0KCQl9KTsKCX0sCgkKCQoJcGlsaWhCaWRhbmcgOiBmdW5jdGlvbigpewoJdmFyIG1lID0gdGhpczsgCgkJJC5hamF4KHsKCQkgIHVybDogJ3BhZ2VzLnBocD9QZz11c2VybWFuYWplbWVuJnRpcGU9cGlsaWhCaWRhbmcnLAoJCSAgdHlwZSA6ICdQT1NUJywKCQkgIGRhdGE6JCgnI1VzZXJNYW5hamVtZW5fZm9ybScpLnNlcmlhbGl6ZSgpLAoJCSAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJCgkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsJCQkKCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRfZCcpLmlubmVySFRNTCA9IHJlc3AuY29udGVudC5kOwoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udF9lJykuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50LmU7CgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250X2UxJykuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50LmUxOwoJCSAgfQoJCX0pOwoJfSwKCQoJcGlsaWhTS1BEIDogZnVuY3Rpb24oKXsKCXZhciBtZSA9IHRoaXM7IAoJCSQuYWpheCh7CgkJICB1cmw6ICdwYWdlcy5waHA\/UGc9dXNlcm1hbmFqZW1lbiZ0aXBlPXBpbGloU0tQRCcsCgkJICB0eXBlIDogJ1BPU1QnLAoJCSAgZGF0YTokKCcjVXNlck1hbmFqZW1lbl9mb3JtJykuc2VyaWFsaXplKCksCgkJICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CQkKCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkJCQoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udF9lJykuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50LnNrcDsKCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRfZTEnKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQuZTE7CgkJICB9CgkJfSk7Cgl9LAoJCglwaWxpaFVuaXQgOiBmdW5jdGlvbigpewoJdmFyIG1lID0gdGhpczsgCgkJJC5hamF4KHsKCQkgIHVybDogJ3BhZ2VzLnBocD9QZz11c2VybWFuYWplbWVuJnRpcGU9cGlsaWhVbml0JywKCQkgIHR5cGUgOiAnUE9TVCcsCgkJICBkYXRhOiQoJyNVc2VyTWFuYWplbWVuX2Zvcm0nKS5zZXJpYWxpemUoKSwKCQkgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJCQoJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CQkJCgkJLy8JZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2UxJykudmFsdWUgPSByZXNwLmNvbnRlbnQuZTE7CgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250X2UxJykuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50LmUxOwoJCQkKCQkgIH0KCQl9KTsKCX0sCgkKCQoJCglCYXJ1OiBmdW5jdGlvbigpewkKCQkKCQl2YXIgbWUgPSB0aGlzOwoJCXZhciBlcnI9Jyc7CgkJLyp2YXIgYmlkYW5nID1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2twZF91c2VybWFuYWplbWVuZm1CaWRhbmcnKS52YWx1ZTsKCQl2YXIgYmFnaWFuID1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2twZF91c2VybWFuYWplbWVuZm1CYWdpYW4nKS52YWx1ZTsKCQl2YXIgc3ViYmFnaWFuID1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2twZF91c2VybWFuYWplbWVuZm1TdWJCYWdpYW4nKS52YWx1ZTsKCQkKCQlpZihlcnI9PScnICYmIGJpZGFuZz09JzAwJyllcnI9J1NhdHVhbiBLZXJqYSBiZWx1bSBkaSBwaWxpaCAhJzsKCQlpZihlcnI9PScnICYmIGJhZ2lhbj09JzAwJyllcnI9J0JhZ2lhbiBiZWx1bSBkaSBwaWxpaCAhJzsKCQlpZihlcnI9PScnICYmIHN1YmJhZ2lhbj09JzAwJyllcnI9J1N1YiBCYWdpYW4gYmVsdW0gZGkgcGlsaWggISc7Ki8KCQkKCQlpZiAoZXJyID09JycgKXsJCQoJCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1jb3Zlcic7CgkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7CgkJCWFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsJCgkJCSQuYWpheCh7CgkJCQl0eXBlOidQT1NUJywgCgkJCQlkYXRhOiQoJyMnK3RoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLAoJCQkgIAl1cmw6IHRoaXMudXJsKycmdGlwZT1mb3JtQmFydScsCgkJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJCQoJCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsJCQkKCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcikuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50OwoJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd1aWQnKS5mb2N1cygpOwoJCQkJCQoJCQkJCXNldFRpbWVvdXQoCgkJCQkJCWZ1bmN0aW9uKCkgewogICAgICAgIAkJCQkJLy8uLiB3aGF0IHRvIGRvIGFmdGVyIDEwIHNlY29uZHMKCQkJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdubV9sZW5na2FwJykudmFsdWU9Jyc7CgkJCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGFzc3dvcmQnKS52YWx1ZT0nJzsKCQkJCQkJfQoJCQkJCSwgNTAwKTsKCQkJCQkKCQkJCQkJCQkKCQkJCQltZS5BZnRlckZvcm1CYXJ1KCk7CgkJCSAgCX0KCQkJfSk7CgkJCgkJfWVsc2V7CgkJIAlhbGVydChlcnIpOwoJCX0KCX0sCgkKCUVkaXQ6IGZ1bmN0aW9uKCl7CgkJdmFyIG1lID0gdGhpczsKCQllcnJtc2cgPSB0aGlzLkNla0NoZWNrYm94KCk7CgkJaWYoZXJybXNnID09JycpeyAKCQkJdmFyIGJveCA9IHRoaXMuR2V0Q2J4Q2hlY2tlZCgpOwoJCQkKCQkJLy90aGlzLlNob3cgKCdmb3JtZWRpdCcse2lkcGxoOmJveC52YWx1ZX0sIGZhbHNlLCB0cnVlKTsJCQkKCQkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3JtY292ZXInOwoJCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CQoJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOwoJCQkkLmFqYXgoewoJCQkJdHlwZTonUE9TVCcsIAoJCQkJZGF0YTokKCcjJyt0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwKCQkJCXVybDogdGhpcy51cmwrJyZ0aXBlPWZvcm1FZGl0JywKCQkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJCgkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkKCQkJCQlpZiAocmVzcC5lcnIgPT0nJyl7CQkKCQkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsKCQkJCQkJbWUuQWZ0ZXJGb3JtRWRpdChyZXNwKTsKCQkJCQkJLy9tZS5hdXRvY29tcGxldGVfaW5pdGlhbCgpOwoJCQkJCX1lbHNlewoJCQkJCQlhbGVydChyZXNwLmVycik7CgkJCQkJCWRlbEVsZW0oY292ZXIpOwoJCQkJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdhdXRvJzsKCQkJCQl9CgkJCSAgCX0KCQkJfSk7CgkJfWVsc2V7CgkJCWFsZXJ0KGVycm1zZyk7CgkJfQoJCQoJfSwKCglBa3RpZmthbiA6IGZ1bmN0aW9uKCl7CgkJdmFyIG1lID0gdGhpczsKCQllcnJtc2cgPSB0aGlzLkNla0NoZWNrYm94U3RhdHVzKCk7CgkJaWYoZXJybXNnID09JycpeyAJCQkJCgkJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyJzsKCQkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsKCQkJYWRkQ292ZXJQYWdlMihjb3Zlciw5OTksdHJ1ZSxmYWxzZSk7CQoJCQkkLmFqYXgoewoJCQkJdHlwZTonUE9TVCcsIAoJCQkJZGF0YTokKCcjJyt0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwKCQkJICAJdXJsOiB0aGlzLnVybCsnJnRpcGU9Zm9ybUFrdGlma2FuJywKCQkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJCgkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwoJCQkJCWlmIChyZXNwLmVyciA9PScnKXsKCQkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsJCQkKCQkJCQkJbWUuQWZ0ZXJGb3JtQmFydShyZXNwKTsJCgkJCQkJfWVsc2V7CgkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsKCQkJCQkJZGVsRWxlbShjb3Zlcik7CgkJCQkJfQkJCQoJCQkJCQoJCQkgIAl9CgkJCX0pOwoJCX1lbHNlIHsKCQkJYWxlcnQoIGVycm1zZyk7CgkJfQkJCQoJfSwKCQoJc2F2ZUFrdGlma2FuIDogZnVuY3Rpb24oKXsKCQl2YXIgbWU9IHRoaXM7CQoJCXRoaXMuT25FcnJvckNsb3NlID0gZmFsc2UJCgkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsKCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1zaW1wYW4nOwoJCWFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsJCgkJJC5hamF4KHsKCQkJdHlwZTonUE9TVCcsIAoJCQlkYXRhOiQoJyMnK3RoaXMucHJlZml4KydfZm9ybScpLnNlcmlhbGl6ZSgpLAoJCQl1cmw6IHRoaXMudXJsKycmdGlwZT1zYXZlQWt0aWZrYW4nLAoJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJCQoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkKCQkJCWRlbEVsZW0oY292ZXIpOwkJCgkJCQlpZihyZXNwLmVycj09JycpewoJCQkJCWFsZXJ0KCJEYXRhIHN1ZGFoIGRpc2ltcGFuICEiKTsKCQkJCQltZS5DbG9zZSgpOwoJCQkJCW1lLnJlZnJlc2hMaXN0KHRydWUpOwkJCQkJCQoJCQkJfWVsc2V7CgkJCQkJYWxlcnQocmVzcC5lcnIpOwoJCQkJfQoJCSAgCX0KCQl9KTsKCX0sCgoJLyoqCglhdXRvY29tcGxldGVfaW5pdGlhbDpmdW5jdGlvbiAoKXsKCQkJCQkvL3ZhciBpZF9iYWdpYW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaWRfYmFnaWFuJykudmFsdWU7CgkJCQkJdmFyIGJpZGFuZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdiZGcnKS52YWx1ZTsKCQkJCQl2YXIgYmFnaWFuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2JnbicpLnZhbHVlOwoJCQkJCXZhciBzdWJiYWdpYW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2JnbicpLnZhbHVlOwoJCQkJCQkkKGZ1bmN0aW9uKCkgewkJCQkJCQkKCQkJCQkJCSQoICcjbm1fcGVnYXdhaScgKS5hdXRvY29tcGxldGUoewoJCQkJCQkgICAgICBzb3VyY2U6IGZ1bmN0aW9uKCByZXF1ZXN0LCByZXNwb25zZSApIHsKCQkJCQkJICAgICAgICAkLmFqYXgoewoJCQkJCQkJCSAgdXJsOiAncGFnZXMucGhwP1BnPXVzZXJtYW5hamVtZW4mdGlwZT1hdXRvY29tcGxldGVfZ2V0ZGF0YScsCgkJCQkJCSAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLAoJCQkJCQkgICAgICAgICAgZGF0YTogewoJCQkJCQkgICAgICAgICAgICAvL2ZlYXR1cmVDbGFzczogJ1AnLAoJCQkJCQkgICAgICAgICAgICBzdHlsZTogJ2Z1bGwnLAoJCQkJCQkgICAgICAgICAgICBtYXhSb3dzOiAxMiwKCQkJCQkJCQkJbmFtZV9zdGFydHNXaXRoOiByZXF1ZXN0LnRlcm0sCgkJCQkJCQkJCS8vaWRfYmFnaWFuOiBpZF9iYWdpYW4sCgkJCQkJCQkJCWJpZGFuZzogYmlkYW5nLAoJCQkJCQkJCQliYWdpYW46IGJhZ2lhbiwKCQkJCQkJCQkJc3ViYmFnaWFuOiBzdWJiYWdpYW4sCgkJCQkJCSAgICAgICAgICB9LAoJCQkJCQkJCSAgc3VjY2VzczogZnVuY3Rpb24oIGRhdGEgKSB7CQkJCQkJICAgICAgICAgCgkJCQkJCQkJCSAgcmVzcG9uc2UoICQubWFwKCBkYXRhLCBmdW5jdGlvbiggaXRlbSApIHsKCQkJCQkJCQkJCSAgICByZXR1cm4gewoJCQkJCQkJCQkJCQlpZDogaXRlbS5pZCwKCQkJCQkJCQkJCSAgICAgICAgbGFiZWw6IGl0ZW0ubGFiZWwsCgkJCQkJCQkJCQkgICAgICAgIHZhbHVlOiBpdGVtLnZhbHVlCgkJCQkJCQkJCQkgICAgfQoJCQkJCQkJCQkJfSkpOwoJCQkJCQkJCQl9CgkJCQkJCSAgICAgICAgfSk7CgkJCQkJCSAgICAgIH0sCgkJCQkJCSAgICAgIG1pbkxlbmd0aDogMSwKCQkJCQkJICAgICAgc2VsZWN0OiBmdW5jdGlvbiggZXZlbnQsIHVpICkgewoJCQkJCQkgICAgICAgIGNvbnNvbGUubG9nKCB1aS5pdGVtID8KCQkJCQkJICAgICAgICAgICdTZWxlY3RlZDogaWQ9JyArIHVpLml0ZW0uaWQrJyBsYWJlbD0nICsgdWkuaXRlbS5sYWJlbCAgOgoJCQkJCQkgICAgICAgICAgJ05vdGhpbmcgc2VsZWN0ZWQsIGlucHV0IHdhcyAnICsgdGhpcy52YWx1ZSk7CgkJCQkJCQkJICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaWRfcGVnYXdhaScpLnZhbHVlPXVpLml0ZW0uaWQ7CgkJCQkJCQkJICBVc2VyTWFuYWplbWVuLmdldGRhdGFfcGVnYXdhaSgpOwoJCQkJCQkJCSAvL2FsZXJ0KCkKCQkJCQkJICAgICAgfSwKCQkJCQkJICAgICAgb3BlbjogZnVuY3Rpb24oKSB7CgkJCQkJCSAgICAgICAgJCggdGhpcyApLnJlbW92ZUNsYXNzKCAndWktY29ybmVyLWFsbCcgKS5hZGRDbGFzcyggJ3VpLWNvcm5lci10b3AnICk7CgkJCQkJCSAgICAgIH0sCgkJCQkJCSAgICAgIGNsb3NlOiBmdW5jdGlvbigpIHsKCQkJCQkJICAgICAgICAkKCB0aGlzICkucmVtb3ZlQ2xhc3MoICd1aS1jb3JuZXItdG9wJyApLmFkZENsYXNzKCAndWktY29ybmVyLWFsbCcgKTsKCQkJCQkJICAgICAgfQoJCQkJCQkgICAgfSk7CgkJCQkJCX0pOwoJfSwKCSoqLwoJZ2V0ZGF0YV9wZWdhd2FpOmZ1bmN0aW9uKCl7CQoJCQoJCXZhciBtZSA9IHRoaXM7CgkJdmFyIGlkX3BlZ2F3YWkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaWRfcGVnYXdhaScpLnZhbHVlOyAgCgkJLy92YXIga290YSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdrb3RhJykudmFsdWU7CgkJCQoJCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1jb3Zlcic7CgkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7CgkJCS8vYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOwkKCQkJJC5hamF4KHsKCQkJCXR5cGU6J0dFVCcsIAoJCQkJZGF0YToiaWRfcGVnYXdhaT0iK2lkX3BlZ2F3YWksLy8kKCcjJyt0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwKCQkJICAJdXJsOiB0aGlzLnVybCsnJnRpcGU9Z2V0ZGF0YV9wZWdhd2FpJywKCQkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJCgkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkKCQkJCQlpZihyZXNwLmVycj09JycpewkJCgkJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCduaXAnKS52YWx1ZSA9IHJlc3AuY29udGVudC5uaXA7CgkJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdnb2wnKS52YWx1ZSA9IHJlc3AuY29udGVudC5nb2w7CQoJCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncnVhbmcnKS52YWx1ZSA9IHJlc3AuY29udGVudC5ydWFuZzsKCQkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BhbmdrYXQnKS52YWx1ZSA9IHJlc3AuY29udGVudC5wYW5na2F0OwkJCQoJCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnamFiYXRhbicpLnZhbHVlID0gcmVzcC5jb250ZW50LmphYmF0YW47CgkJCQkJfWVsc2V7CgkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsKCQkJCQl9CgkJCQl9CgkJCX0pOwoJCX0sCgoJTGV2ZWxBZG1pbjogZnVuY3Rpb24oKXsJCgkJCgkJdmFyIG1lID0gdGhpczsKCQl2YXIgZXJyPScnOwoJCXZhciBmbUxFVkVMUEVOR0dVTkEgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1MRVZFTFBFTkdHVU5BJykudmFsdWU7IAoJCQoJCQlpZihmbUxFVkVMUEVOR0dVTkEgPT0gMSl7CgkJCQkvL2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdncm91cCcpLnZhbHVlPScwMC4wMC4wMCc7CgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1NT0RVTDAxXzEnKS5jaGVja2VkPXRydWU7CgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1NT0RVTDAyXzEnKS5jaGVja2VkPXRydWU7CgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1NT0RVTDAzXzEnKS5jaGVja2VkPXRydWU7CgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1NT0RVTDA0XzEnKS5jaGVja2VkPXRydWU7CgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1NT0RVTDA1XzEnKS5jaGVja2VkPXRydWU7CgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1NT0RVTDA2XzEnKS5jaGVja2VkPXRydWU7CgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1NT0RVTDA3XzEnKS5jaGVja2VkPXRydWU7CgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1NT0RVTDA4XzEnKS5jaGVja2VkPXRydWU7CgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1NT0RVTDA5XzEnKS5jaGVja2VkPXRydWU7CgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1NT0RVTDEwXzEnKS5jaGVja2VkPXRydWU7CgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1NT0RVTDExXzEnKS5jaGVja2VkPXRydWU7CgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1NT0RVTDEyXzEnKS5jaGVja2VkPXRydWU7CgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1NT0RVTDEzXzEnKS5jaGVja2VkPXRydWU7CgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1NT0RVTDE0XzEnKS5jaGVja2VkPXRydWU7CgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1NT0RVTDE1XzEnKS5jaGVja2VkPXRydWU7CgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1NT0RVTDE2XzEnKS5jaGVja2VkPXRydWU7CgkJCQkKCQkJfQoJCQoJfSwJCgkKCUxldmVsT3BlcmF0b3I6IGZ1bmN0aW9uKCl7CQoJCXZhciBtZSA9IHRoaXM7CgkJdmFyIGVycj0nJzsKCQl2YXIgZm1MRVZFTE9QRVJBVE9SID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZtTEVWRUxPUEVSQVRPUicpLnZhbHVlOyAKCQkvL3ZhciBncm91cCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdncm91cCcpLnZhbHVlOwoJCQoJCQlpZihmbUxFVkVMT1BFUkFUT1IgPT0gMil7CgkJCQkvKmlmKGdyb3VwLnN1YnN0cigwLDIpID09ICcwMCcpewoJCQkJCWFsZXJ0KCdEdWEgZGlnaXQgcGVydGFtYSBHcm91cCB0aWRhayBib2xlaCAwMCAhJyk7CgkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dyb3VwJykudmFsdWU9Jyc7CgkJCQl9Ki8KCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMDFfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMDJfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMDNfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMDRfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMDVfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMDZfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMDdfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMDhfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMDlfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMTBfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMTFfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMTJfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMTNfMicpLmNoZWNrZWQ9dHJ1ZTsJCQoJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZtTU9EVUwxNF8yJykuY2hlY2tlZD10cnVlOwkJCgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1NT0RVTDE1XzInKS5jaGVja2VkPXRydWU7CQkKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMTZfMicpLmNoZWNrZWQ9dHJ1ZTsJCQoJCQl9CgkJCgl9LAoJCglMZXZlbFRhbXU6IGZ1bmN0aW9uKCl7CQoJCXZhciBtZSA9IHRoaXM7CgkJdmFyIGVycj0nJzsKCQl2YXIgZm1MRVZFTFRBTVUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1MRVZFTFRBTVUnKS52YWx1ZTsgCgkJLy92YXIgZ3JvdXAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZ3JvdXAnKS52YWx1ZTsKCQkKCQkJaWYoZm1MRVZFTFRBTVUgPT0gMyl7CgkJCQkvKmlmKGdyb3VwLnN1YnN0cigwLDIpID09ICcwMCcpewoJCQkJCWFsZXJ0KCdEdWEgZGlnaXQgcGVydGFtYSBHcm91cCB0aWRhayBib2xlaCAwMCAhJyk7CgkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dyb3VwJykudmFsdWU9Jyc7CgkJCQl9Ki8KCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMDFfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMDJfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMDNfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMDRfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMDVfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMDZfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbU1PRFVMMDdfMicpLmNoZWNrZWQ9dHJ1ZTsKCQkJCS8qZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZtTU9EVUwwOF8yJykuY2hlY2tlZD10cnVlOwoJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZtTU9EVUwwOV8yJykuY2hlY2tlZD10cnVlOwoJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZtTU9EVUwxMF8yJykuY2hlY2tlZD10cnVlOwoJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZtTU9EVUwxMV8yJykuY2hlY2tlZD10cnVlOwoJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZtTU9EVUwxMl8yJykuY2hlY2tlZD10cnVlOwoJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZtTU9EVUwxM18yJykuY2hlY2tlZD10cnVlOyovCgkJCQkKCQkJfQoJCQoJfSwJCgkKCWNlayA6IGZ1bmN0aW9uICgpewoJdmFyIHVpZD1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndWlkJykudmFsdWU7CQoJCgkJcG9sYT0vXlthLXowLTlfLl0rJC9naTsKCQlpZih1aWQubWF0Y2goL1wgLykpIHsvL2NlayBpbnB1dGFuIHBha2Ugc3Bhc2kvZ2EgCiAgIAkJCWFsZXJ0KCJVc2VybmFtZSB0aWRhayBib2xlaCBtZW5nZ3VuYWthbiBzcGFzaSAhIik7CiAgIAkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd1aWQnKS5mb2N1cygpOwogICAJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndWlkJykudmFsdWU9IiI7CiAgIAkJCXJldHVybiBmYWxzZTsKICAgCQl9CgkJZWxzZSBpZiAoIXBvbGEudGVzdCh1aWQpKXsKCQkJYWxlcnQgKCJVc2VybmFtZSB0aWRhayB2YWxpZCAhIik7CgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd1aWQnKS5mb2N1cygpOwoJCQlyZXR1cm4gZmFsc2U7CgkJfQoJCWVsc2V7CgkJCXJldHVybiB0cnVlOwoJCX0KCX0sCgkKCXJlc2V0X3BlZ2F3YWkgOiBmdW5jdGlvbiAoKXsKCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbm1fcGVnYXdhaScpLnZhbHVlPScnOwkKCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmlwJykudmFsdWU9Jyc7CQoJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdnb2wnKS52YWx1ZT0nJzsJCgkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3J1YW5nJykudmFsdWU9Jyc7CQoJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwYW5na2F0JykudmFsdWU9Jyc7CQoJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqYWJhdGFuJykudmFsdWU9Jyc7CQoJfSwKCQoJU2ltcGFuOiBmdW5jdGlvbigpewoJCXZhciBtZT0gdGhpczsJCgkJdGhpcy5PbkVycm9yQ2xvc2UgPSBmYWxzZQkKCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOwoJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybXNpbXBhbic7CgkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOwkKCQkvKnRoaXMuc2VuZFJlcSgKCQkJdGhpcy51cmwsCgkJCXsgaWRwcnM6IDAsIGRhZnRhclByb3NlczogbmV3IEFycmF5KCdzaW1wYW4nKX0sCgkJCXRoaXMuZm9ybURpYWxvZyk7Ki8KCQkkLmFqYXgoewoJCQl0eXBlOidQT1NUJywgCgkJCWRhdGE6JCgnIycrdGhpcy5wcmVmaXgrJ19mb3JtJykuc2VyaWFsaXplKCksCgkJCXVybDogdGhpcy51cmwrJyZ0aXBlPXNpbXBhbicsCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJCgkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CQoJCQkJZGVsRWxlbShjb3Zlcik7CQkKCQkJCS8vZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsKCQkJCWlmKHJlc3AuZXJyPT0nJyl7CgkJCQkJbWUuQ2xvc2UoKTsKCQkJCQltZS5BZnRlclNpbXBhbigpOwoJCQkJfWVsc2V7CgkJCQkJYWxlcnQocmVzcC5lcnIpOwoJCQkJfQoJCSAgCX0KCQl9KTsKCX0sCgkKCXJlc2V0UGFzczogZnVuY3Rpb24oKXsKCQl2YXIgbWUgPSB0aGlzOwoJCWVycm1zZyA9IHRoaXMuQ2VrQ2hlY2tib3goKTsKCQlpZihlcnJtc2cgPT0nJyl7IAoJCQl2YXIgYm94ID0gdGhpcy5HZXRDYnhDaGVja2VkKCk7CgkJCWlmKGNvbmZpcm0oJ1Jlc2V0IFBhc3N3b3JkICcrYm94LnZhbHVlKycgPycpKXsKCQkJCS8vdGhpcy5TaG93ICgnZm9ybWVkaXQnLHtpZHBsaDpib3gudmFsdWV9LCBmYWxzZSwgdHJ1ZSk7CQkJCgkJCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1jb3Zlcic7CgkJCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CQoJCQkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsKCQkJCSQuYWpheCh7CgkJCQkJdHlwZTonUE9TVCcsIAoJCQkJCWRhdGE6JCgnIycrdGhpcy5mb3JtTmFtZSkuc2VyaWFsaXplKCksCgkJCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9cmVzZXRQYXNzJywKCQkJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJCQoJCQkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CQoJCQkJCQlkZWxFbGVtKGNvdmVyKTsKCQkJCQkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0nYXV0byc7CgkJCQkJCWlmIChyZXNwLmVyciA9PScnKXsJCQoJCQkJCQkJYWxlcnQoJ0lEIFBlbmdndW5hIDogJytyZXNwLmNvbnRlbnQudWlkKycgLCBQYXNzd29yZCA6ICcrcmVzcC5jb250ZW50LnBhc3MpOwoJCQkJCQkJLy9tZS5BZnRlckZvcm1FZGl0KHJlc3ApOwoJCQkJCQkJLy9tZS5hdXRvY29tcGxldGVfaW5pdGlhbCgpOwoJCQkJCQl9ZWxzZXsKCQkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsKCQkJCQkJCQoJCQkJCQl9CgkJCQkgIAl9CgkJCQl9KTsKCQkJfQoJCX1lbHNlewoJCQlhbGVydChlcnJtc2cpOwoJCX0KCQkKCX0KCQoJCQkJCn0pOwoKdmFyIHNrcGRfdXNlcm1hbmFqZW1lbiA9IG5ldyBTa3BkQ2xzKHsKCXByZWZpeCA6ICdza3BkX3VzZXJtYW5hamVtZW4nLCBmb3JtTmFtZTonVXNlck1hbmFqZW1lbkZvcm0nLCBrb2xvbVdpZHRoOjEyMCwgc2VtdWFTYXRLZXI6MQoJCn0pOwo=",
    "size": "16289"
}