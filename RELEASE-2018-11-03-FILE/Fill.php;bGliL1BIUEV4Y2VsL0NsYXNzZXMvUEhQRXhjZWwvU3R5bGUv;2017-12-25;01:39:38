{
    "namaFile": "lib\/PHPExcel\/Classes\/PHPExcel\/Style\/Fill.php",
    "lastUpdate": "2017-12-25+01:39:38.00",
    "contentFile": "PD9waHAKCi8qKgogKiBQSFBFeGNlbF9TdHlsZV9GaWxsCiAqCiAqIENvcHlyaWdodCAoYykgMjAwNiAtIDIwMTUgUEhQRXhjZWwKICoKICogVGhpcyBsaWJyYXJ5IGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vcgogKiBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCiAqIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlcgogKiB2ZXJzaW9uIDIuMSBvZiB0aGUgTGljZW5zZSwgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KICoKICogVGhpcyBsaWJyYXJ5IGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUgR05VCiAqIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuCiAqCiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMKICogTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgbGlicmFyeTsgaWYgbm90LCB3cml0ZSB0byB0aGUgRnJlZSBTb2Z0d2FyZQogKiBGb3VuZGF0aW9uLCBJbmMuLCA1MSBGcmFua2xpbiBTdHJlZXQsIEZpZnRoIEZsb29yLCBCb3N0b24sIE1BICAwMjExMC0xMzAxICBVU0EKICoKICogQGNhdGVnb3J5ICAgUEhQRXhjZWwKICogQHBhY2thZ2UgICAgUEhQRXhjZWxfU3R5bGUKICogQGNvcHlyaWdodCAgQ29weXJpZ2h0IChjKSAyMDA2IC0gMjAxNSBQSFBFeGNlbCAoaHR0cDovL3d3dy5jb2RlcGxleC5jb20vUEhQRXhjZWwpCiAqIEBsaWNlbnNlICAgIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9vbGQtbGljZW5zZXMvbGdwbC0yLjEudHh0ICAgIExHUEwKICogQHZlcnNpb24gICAgIyNWRVJTSU9OIyMsICMjREFURSMjCiAqLwpjbGFzcyBQSFBFeGNlbF9TdHlsZV9GaWxsIGV4dGVuZHMgUEhQRXhjZWxfU3R5bGVfU3VwZXJ2aXNvciBpbXBsZW1lbnRzIFBIUEV4Y2VsX0lDb21wYXJhYmxlCnsKICAgIC8qIEZpbGwgdHlwZXMgKi8KICAgIGNvbnN0IEZJTExfTk9ORSAgICAgICAgICAgICAgICAgICAgPSAnbm9uZSc7CiAgICBjb25zdCBGSUxMX1NPTElEICAgICAgICAgICAgICAgICAgID0gJ3NvbGlkJzsKICAgIGNvbnN0IEZJTExfR1JBRElFTlRfTElORUFSICAgICAgICAgPSAnbGluZWFyJzsKICAgIGNvbnN0IEZJTExfR1JBRElFTlRfUEFUSCAgICAgICAgICAgPSAncGF0aCc7CiAgICBjb25zdCBGSUxMX1BBVFRFUk5fREFSS0RPV04gICAgICAgID0gJ2RhcmtEb3duJzsKICAgIGNvbnN0IEZJTExfUEFUVEVSTl9EQVJLR1JBWSAgICAgICAgPSAnZGFya0dyYXknOwogICAgY29uc3QgRklMTF9QQVRURVJOX0RBUktHUklEICAgICAgICA9ICdkYXJrR3JpZCc7CiAgICBjb25zdCBGSUxMX1BBVFRFUk5fREFSS0hPUklaT05UQUwgID0gJ2RhcmtIb3Jpem9udGFsJzsKICAgIGNvbnN0IEZJTExfUEFUVEVSTl9EQVJLVFJFTExJUyAgICAgPSAnZGFya1RyZWxsaXMnOwogICAgY29uc3QgRklMTF9QQVRURVJOX0RBUktVUCAgICAgICAgICA9ICdkYXJrVXAnOwogICAgY29uc3QgRklMTF9QQVRURVJOX0RBUktWRVJUSUNBTCAgICA9ICdkYXJrVmVydGljYWwnOwogICAgY29uc3QgRklMTF9QQVRURVJOX0dSQVkwNjI1ICAgICAgICA9ICdncmF5MDYyNSc7CiAgICBjb25zdCBGSUxMX1BBVFRFUk5fR1JBWTEyNSAgICAgICAgID0gJ2dyYXkxMjUnOwogICAgY29uc3QgRklMTF9QQVRURVJOX0xJR0hURE9XTiAgICAgICA9ICdsaWdodERvd24nOwogICAgY29uc3QgRklMTF9QQVRURVJOX0xJR0hUR1JBWSAgICAgICA9ICdsaWdodEdyYXknOwogICAgY29uc3QgRklMTF9QQVRURVJOX0xJR0hUR1JJRCAgICAgICA9ICdsaWdodEdyaWQnOwogICAgY29uc3QgRklMTF9QQVRURVJOX0xJR0hUSE9SSVpPTlRBTCA9ICdsaWdodEhvcml6b250YWwnOwogICAgY29uc3QgRklMTF9QQVRURVJOX0xJR0hUVFJFTExJUyAgICA9ICdsaWdodFRyZWxsaXMnOwogICAgY29uc3QgRklMTF9QQVRURVJOX0xJR0hUVVAgICAgICAgICA9ICdsaWdodFVwJzsKICAgIGNvbnN0IEZJTExfUEFUVEVSTl9MSUdIVFZFUlRJQ0FMICAgPSAnbGlnaHRWZXJ0aWNhbCc7CiAgICBjb25zdCBGSUxMX1BBVFRFUk5fTUVESVVNR1JBWSAgICAgID0gJ21lZGl1bUdyYXknOwoKICAgIC8qKgogICAgICogRmlsbCB0eXBlCiAgICAgKgogICAgICogQHZhciBzdHJpbmcKICAgICAqLwogICAgcHJvdGVjdGVkICRmaWxsVHlwZSA9IFBIUEV4Y2VsX1N0eWxlX0ZpbGw6OkZJTExfTk9ORTsKCiAgICAvKioKICAgICAqIFJvdGF0aW9uCiAgICAgKgogICAgICogQHZhciBkb3VibGUKICAgICAqLwogICAgcHJvdGVjdGVkICRyb3RhdGlvbiA9IDA7CgogICAgLyoqCiAgICAgKiBTdGFydCBjb2xvcgogICAgICoKICAgICAqIEB2YXIgUEhQRXhjZWxfU3R5bGVfQ29sb3IKICAgICAqLwogICAgcHJvdGVjdGVkICRzdGFydENvbG9yOwoKICAgIC8qKgogICAgICogRW5kIGNvbG9yCiAgICAgKgogICAgICogQHZhciBQSFBFeGNlbF9TdHlsZV9Db2xvcgogICAgICovCiAgICBwcm90ZWN0ZWQgJGVuZENvbG9yOwoKICAgIC8qKgogICAgICogQ3JlYXRlIGEgbmV3IFBIUEV4Y2VsX1N0eWxlX0ZpbGwKICAgICAqCiAgICAgKiBAcGFyYW0gICAgYm9vbGVhbiAgICAkaXNTdXBlcnZpc29yICAgIEZsYWcgaW5kaWNhdGluZyBpZiB0aGlzIGlzIGEgc3VwZXJ2aXNvciBvciBub3QKICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTGVhdmUgdGhpcyB2YWx1ZSBhdCBkZWZhdWx0IHVubGVzcyB5b3UgdW5kZXJzdGFuZCBleGFjdGx5IHdoYXQKICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0cyByYW1pZmljYXRpb25zIGFyZQogICAgICogQHBhcmFtICAgIGJvb2xlYW4gICAgJGlzQ29uZGl0aW9uYWwgICAgRmxhZyBpbmRpY2F0aW5nIGlmIHRoaXMgaXMgYSBjb25kaXRpb25hbCBzdHlsZSBvciBub3QKICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTGVhdmUgdGhpcyB2YWx1ZSBhdCBkZWZhdWx0IHVubGVzcyB5b3UgdW5kZXJzdGFuZCBleGFjdGx5IHdoYXQKICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0cyByYW1pZmljYXRpb25zIGFyZQogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gX19jb25zdHJ1Y3QoJGlzU3VwZXJ2aXNvciA9IGZhbHNlLCAkaXNDb25kaXRpb25hbCA9IGZhbHNlKQogICAgewogICAgICAgIC8vIFN1cGVydmlzb3I\/CiAgICAgICAgcGFyZW50OjpfX2NvbnN0cnVjdCgkaXNTdXBlcnZpc29yKTsKCiAgICAgICAgLy8gSW5pdGlhbGlzZSB2YWx1ZXMKICAgICAgICBpZiAoJGlzQ29uZGl0aW9uYWwpIHsKICAgICAgICAgICAgJHRoaXMtPmZpbGxUeXBlID0gbnVsbDsKICAgICAgICB9CiAgICAgICAgJHRoaXMtPnN0YXJ0Q29sb3IgPSBuZXcgUEhQRXhjZWxfU3R5bGVfQ29sb3IoUEhQRXhjZWxfU3R5bGVfQ29sb3I6OkNPTE9SX1dISVRFLCAkaXNTdXBlcnZpc29yLCAkaXNDb25kaXRpb25hbCk7CiAgICAgICAgJHRoaXMtPmVuZENvbG9yID0gbmV3IFBIUEV4Y2VsX1N0eWxlX0NvbG9yKFBIUEV4Y2VsX1N0eWxlX0NvbG9yOjpDT0xPUl9CTEFDSywgJGlzU3VwZXJ2aXNvciwgJGlzQ29uZGl0aW9uYWwpOwoKICAgICAgICAvLyBiaW5kIHBhcmVudCBpZiB3ZSBhcmUgYSBzdXBlcnZpc29yCiAgICAgICAgaWYgKCRpc1N1cGVydmlzb3IpIHsKICAgICAgICAgICAgJHRoaXMtPnN0YXJ0Q29sb3ItPmJpbmRQYXJlbnQoJHRoaXMsICdzdGFydENvbG9yJyk7CiAgICAgICAgICAgICR0aGlzLT5lbmRDb2xvci0+YmluZFBhcmVudCgkdGhpcywgJ2VuZENvbG9yJyk7CiAgICAgICAgfQogICAgfQoKICAgIC8qKgogICAgICogR2V0IHRoZSBzaGFyZWQgc3R5bGUgY29tcG9uZW50IGZvciB0aGUgY3VycmVudGx5IGFjdGl2ZSBjZWxsIGluIGN1cnJlbnRseSBhY3RpdmUgc2hlZXQuCiAgICAgKiBPbmx5IHVzZWQgZm9yIHN0eWxlIHN1cGVydmlzb3IKICAgICAqCiAgICAgKiBAcmV0dXJuIFBIUEV4Y2VsX1N0eWxlX0ZpbGwKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGdldFNoYXJlZENvbXBvbmVudCgpCiAgICB7CiAgICAgICAgcmV0dXJuICR0aGlzLT5wYXJlbnQtPmdldFNoYXJlZENvbXBvbmVudCgpLT5nZXRGaWxsKCk7CiAgICB9CgogICAgLyoqCiAgICAgKiBCdWlsZCBzdHlsZSBhcnJheSBmcm9tIHN1YmNvbXBvbmVudHMKICAgICAqCiAgICAgKiBAcGFyYW0gYXJyYXkgJGFycmF5CiAgICAgKiBAcmV0dXJuIGFycmF5CiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBnZXRTdHlsZUFycmF5KCRhcnJheSkKICAgIHsKICAgICAgICByZXR1cm4gYXJyYXkoJ2ZpbGwnID0+ICRhcnJheSk7CiAgICB9CgogICAgLyoqCiAgICAgKiBBcHBseSBzdHlsZXMgZnJvbSBhcnJheQogICAgICoKICAgICAqIDxjb2RlPgogICAgICogJG9ialBIUEV4Y2VsLT5nZXRBY3RpdmVTaGVldCgpLT5nZXRTdHlsZSgnQjInKS0+Z2V0RmlsbCgpLT5hcHBseUZyb21BcnJheSgKICAgICAqICAgICAgICBhcnJheSgKICAgICAqICAgICAgICAgICAgJ3R5cGUnICAgICAgID0+IFBIUEV4Y2VsX1N0eWxlX0ZpbGw6OkZJTExfR1JBRElFTlRfTElORUFSLAogICAgICogICAgICAgICAgICAncm90YXRpb24nICAgPT4gMCwKICAgICAqICAgICAgICAgICAgJ3N0YXJ0Y29sb3InID0+IGFycmF5KAogICAgICogICAgICAgICAgICAgICAgJ3JnYicgPT4gJzAwMDAwMCcKICAgICAqICAgICAgICAgICAgKSwKICAgICAqICAgICAgICAgICAgJ2VuZGNvbG9yJyAgID0+IGFycmF5KAogICAgICogICAgICAgICAgICAgICAgJ2FyZ2InID0+ICdGRkZGRkZGRicKICAgICAqICAgICAgICAgICAgKQogICAgICogICAgICAgICkKICAgICAqICk7CiAgICAgKiA8L2NvZGU+CiAgICAgKgogICAgICogQHBhcmFtICAgIGFycmF5ICAgICRwU3R5bGVzICAgIEFycmF5IGNvbnRhaW5pbmcgc3R5bGUgaW5mb3JtYXRpb24KICAgICAqIEB0aHJvd3MgICAgUEhQRXhjZWxfRXhjZXB0aW9uCiAgICAgKiBAcmV0dXJuIFBIUEV4Y2VsX1N0eWxlX0ZpbGwKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGFwcGx5RnJvbUFycmF5KCRwU3R5bGVzID0gbnVsbCkKICAgIHsKICAgICAgICBpZiAoaXNfYXJyYXkoJHBTdHlsZXMpKSB7CiAgICAgICAgICAgIGlmICgkdGhpcy0+aXNTdXBlcnZpc29yKSB7CiAgICAgICAgICAgICAgICAkdGhpcy0+Z2V0QWN0aXZlU2hlZXQoKS0+Z2V0U3R5bGUoJHRoaXMtPmdldFNlbGVjdGVkQ2VsbHMoKSktPmFwcGx5RnJvbUFycmF5KCR0aGlzLT5nZXRTdHlsZUFycmF5KCRwU3R5bGVzKSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBpZiAoYXJyYXlfa2V5X2V4aXN0cygndHlwZScsICRwU3R5bGVzKSkgewogICAgICAgICAgICAgICAgICAgICR0aGlzLT5zZXRGaWxsVHlwZSgkcFN0eWxlc1sndHlwZSddKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIChhcnJheV9rZXlfZXhpc3RzKCdyb3RhdGlvbicsICRwU3R5bGVzKSkgewogICAgICAgICAgICAgICAgICAgICR0aGlzLT5zZXRSb3RhdGlvbigkcFN0eWxlc1sncm90YXRpb24nXSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoYXJyYXlfa2V5X2V4aXN0cygnc3RhcnRjb2xvcicsICRwU3R5bGVzKSkgewogICAgICAgICAgICAgICAgICAgICR0aGlzLT5nZXRTdGFydENvbG9yKCktPmFwcGx5RnJvbUFycmF5KCRwU3R5bGVzWydzdGFydGNvbG9yJ10pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYgKGFycmF5X2tleV9leGlzdHMoJ2VuZGNvbG9yJywgJHBTdHlsZXMpKSB7CiAgICAgICAgICAgICAgICAgICAgJHRoaXMtPmdldEVuZENvbG9yKCktPmFwcGx5RnJvbUFycmF5KCRwU3R5bGVzWydlbmRjb2xvciddKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIChhcnJheV9rZXlfZXhpc3RzKCdjb2xvcicsICRwU3R5bGVzKSkgewogICAgICAgICAgICAgICAgICAgICR0aGlzLT5nZXRTdGFydENvbG9yKCktPmFwcGx5RnJvbUFycmF5KCRwU3R5bGVzWydjb2xvciddKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRocm93IG5ldyBQSFBFeGNlbF9FeGNlcHRpb24oIkludmFsaWQgc3R5bGUgYXJyYXkgcGFzc2VkLiIpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gJHRoaXM7CiAgICB9CgogICAgLyoqCiAgICAgKiBHZXQgRmlsbCBUeXBlCiAgICAgKgogICAgICogQHJldHVybiBzdHJpbmcKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGdldEZpbGxUeXBlKCkKICAgIHsKICAgICAgICBpZiAoJHRoaXMtPmlzU3VwZXJ2aXNvcikgewogICAgICAgICAgICByZXR1cm4gJHRoaXMtPmdldFNoYXJlZENvbXBvbmVudCgpLT5nZXRGaWxsVHlwZSgpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gJHRoaXMtPmZpbGxUeXBlOwogICAgfQoKICAgIC8qKgogICAgICogU2V0IEZpbGwgVHlwZQogICAgICoKICAgICAqIEBwYXJhbSBzdHJpbmcgJHBWYWx1ZSAgICBQSFBFeGNlbF9TdHlsZV9GaWxsIGZpbGwgdHlwZQogICAgICogQHJldHVybiBQSFBFeGNlbF9TdHlsZV9GaWxsCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBzZXRGaWxsVHlwZSgkcFZhbHVlID0gUEhQRXhjZWxfU3R5bGVfRmlsbDo6RklMTF9OT05FKQogICAgewogICAgICAgIGlmICgkdGhpcy0+aXNTdXBlcnZpc29yKSB7CiAgICAgICAgICAgICRzdHlsZUFycmF5ID0gJHRoaXMtPmdldFN0eWxlQXJyYXkoYXJyYXkoJ3R5cGUnID0+ICRwVmFsdWUpKTsKICAgICAgICAgICAgJHRoaXMtPmdldEFjdGl2ZVNoZWV0KCktPmdldFN0eWxlKCR0aGlzLT5nZXRTZWxlY3RlZENlbGxzKCkpLT5hcHBseUZyb21BcnJheSgkc3R5bGVBcnJheSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgJHRoaXMtPmZpbGxUeXBlID0gJHBWYWx1ZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuICR0aGlzOwogICAgfQoKICAgIC8qKgogICAgICogR2V0IFJvdGF0aW9uCiAgICAgKgogICAgICogQHJldHVybiBkb3VibGUKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGdldFJvdGF0aW9uKCkKICAgIHsKICAgICAgICBpZiAoJHRoaXMtPmlzU3VwZXJ2aXNvcikgewogICAgICAgICAgICByZXR1cm4gJHRoaXMtPmdldFNoYXJlZENvbXBvbmVudCgpLT5nZXRSb3RhdGlvbigpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gJHRoaXMtPnJvdGF0aW9uOwogICAgfQoKICAgIC8qKgogICAgICogU2V0IFJvdGF0aW9uCiAgICAgKgogICAgICogQHBhcmFtIGRvdWJsZSAkcFZhbHVlCiAgICAgKiBAcmV0dXJuIFBIUEV4Y2VsX1N0eWxlX0ZpbGwKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIHNldFJvdGF0aW9uKCRwVmFsdWUgPSAwKQogICAgewogICAgICAgIGlmICgkdGhpcy0+aXNTdXBlcnZpc29yKSB7CiAgICAgICAgICAgICRzdHlsZUFycmF5ID0gJHRoaXMtPmdldFN0eWxlQXJyYXkoYXJyYXkoJ3JvdGF0aW9uJyA9PiAkcFZhbHVlKSk7CiAgICAgICAgICAgICR0aGlzLT5nZXRBY3RpdmVTaGVldCgpLT5nZXRTdHlsZSgkdGhpcy0+Z2V0U2VsZWN0ZWRDZWxscygpKS0+YXBwbHlGcm9tQXJyYXkoJHN0eWxlQXJyYXkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICR0aGlzLT5yb3RhdGlvbiA9ICRwVmFsdWU7CiAgICAgICAgfQogICAgICAgIHJldHVybiAkdGhpczsKICAgIH0KCiAgICAvKioKICAgICAqIEdldCBTdGFydCBDb2xvcgogICAgICoKICAgICAqIEByZXR1cm4gUEhQRXhjZWxfU3R5bGVfQ29sb3IKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGdldFN0YXJ0Q29sb3IoKQogICAgewogICAgICAgIHJldHVybiAkdGhpcy0+c3RhcnRDb2xvcjsKICAgIH0KCiAgICAvKioKICAgICAqIFNldCBTdGFydCBDb2xvcgogICAgICoKICAgICAqIEBwYXJhbSAgICBQSFBFeGNlbF9TdHlsZV9Db2xvciAkcFZhbHVlCiAgICAgKiBAdGhyb3dzICAgIFBIUEV4Y2VsX0V4Y2VwdGlvbgogICAgICogQHJldHVybiBQSFBFeGNlbF9TdHlsZV9GaWxsCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBzZXRTdGFydENvbG9yKFBIUEV4Y2VsX1N0eWxlX0NvbG9yICRwVmFsdWUgPSBudWxsKQogICAgewogICAgICAgIC8vIG1ha2Ugc3VyZSBwYXJhbWV0ZXIgaXMgYSByZWFsIGNvbG9yIGFuZCBub3QgYSBzdXBlcnZpc29yCiAgICAgICAgJGNvbG9yID0gJHBWYWx1ZS0+Z2V0SXNTdXBlcnZpc29yKCkgPyAkcFZhbHVlLT5nZXRTaGFyZWRDb21wb25lbnQoKSA6ICRwVmFsdWU7CgogICAgICAgIGlmICgkdGhpcy0+aXNTdXBlcnZpc29yKSB7CiAgICAgICAgICAgICRzdHlsZUFycmF5ID0gJHRoaXMtPmdldFN0YXJ0Q29sb3IoKS0+Z2V0U3R5bGVBcnJheShhcnJheSgnYXJnYicgPT4gJGNvbG9yLT5nZXRBUkdCKCkpKTsKICAgICAgICAgICAgJHRoaXMtPmdldEFjdGl2ZVNoZWV0KCktPmdldFN0eWxlKCR0aGlzLT5nZXRTZWxlY3RlZENlbGxzKCkpLT5hcHBseUZyb21BcnJheSgkc3R5bGVBcnJheSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgJHRoaXMtPnN0YXJ0Q29sb3IgPSAkY29sb3I7CiAgICAgICAgfQogICAgICAgIHJldHVybiAkdGhpczsKICAgIH0KCiAgICAvKioKICAgICAqIEdldCBFbmQgQ29sb3IKICAgICAqCiAgICAgKiBAcmV0dXJuIFBIUEV4Y2VsX1N0eWxlX0NvbG9yCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBnZXRFbmRDb2xvcigpCiAgICB7CiAgICAgICAgcmV0dXJuICR0aGlzLT5lbmRDb2xvcjsKICAgIH0KCiAgICAvKioKICAgICAqIFNldCBFbmQgQ29sb3IKICAgICAqCiAgICAgKiBAcGFyYW0gICAgUEhQRXhjZWxfU3R5bGVfQ29sb3IgJHBWYWx1ZQogICAgICogQHRocm93cyAgICBQSFBFeGNlbF9FeGNlcHRpb24KICAgICAqIEByZXR1cm4gUEhQRXhjZWxfU3R5bGVfRmlsbAogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gc2V0RW5kQ29sb3IoUEhQRXhjZWxfU3R5bGVfQ29sb3IgJHBWYWx1ZSA9IG51bGwpCiAgICB7CiAgICAgICAgLy8gbWFrZSBzdXJlIHBhcmFtZXRlciBpcyBhIHJlYWwgY29sb3IgYW5kIG5vdCBhIHN1cGVydmlzb3IKICAgICAgICAkY29sb3IgPSAkcFZhbHVlLT5nZXRJc1N1cGVydmlzb3IoKSA\/ICRwVmFsdWUtPmdldFNoYXJlZENvbXBvbmVudCgpIDogJHBWYWx1ZTsKCiAgICAgICAgaWYgKCR0aGlzLT5pc1N1cGVydmlzb3IpIHsKICAgICAgICAgICAgJHN0eWxlQXJyYXkgPSAkdGhpcy0+Z2V0RW5kQ29sb3IoKS0+Z2V0U3R5bGVBcnJheShhcnJheSgnYXJnYicgPT4gJGNvbG9yLT5nZXRBUkdCKCkpKTsKICAgICAgICAgICAgJHRoaXMtPmdldEFjdGl2ZVNoZWV0KCktPmdldFN0eWxlKCR0aGlzLT5nZXRTZWxlY3RlZENlbGxzKCkpLT5hcHBseUZyb21BcnJheSgkc3R5bGVBcnJheSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgJHRoaXMtPmVuZENvbG9yID0gJGNvbG9yOwogICAgICAgIH0KICAgICAgICByZXR1cm4gJHRoaXM7CiAgICB9CgogICAgLyoqCiAgICAgKiBHZXQgaGFzaCBjb2RlCiAgICAgKgogICAgICogQHJldHVybiBzdHJpbmcgICAgSGFzaCBjb2RlCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBnZXRIYXNoQ29kZSgpCiAgICB7CiAgICAgICAgaWYgKCR0aGlzLT5pc1N1cGVydmlzb3IpIHsKICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5nZXRTaGFyZWRDb21wb25lbnQoKS0+Z2V0SGFzaENvZGUoKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIG1kNSgKICAgICAgICAgICAgJHRoaXMtPmdldEZpbGxUeXBlKCkgLgogICAgICAgICAgICAkdGhpcy0+Z2V0Um90YXRpb24oKSAuCiAgICAgICAgICAgICR0aGlzLT5nZXRTdGFydENvbG9yKCktPmdldEhhc2hDb2RlKCkgLgogICAgICAgICAgICAkdGhpcy0+Z2V0RW5kQ29sb3IoKS0+Z2V0SGFzaENvZGUoKSAuCiAgICAgICAgICAgIF9fQ0xBU1NfXwogICAgICAgICk7CiAgICB9Cn0K",
    "size": "10170"
}