{
    "namaFile": "lib\/PHPExcel\/Classes\/PHPExcel\/Shared\/trend\/bestFitClass.php",
    "lastUpdate": "2017-12-25+01:39:38.00",
    "contentFile": "",
    "size": "11802"
}