{
    "namaFile": "js\/pengadaanpenerimaan\/pemasukan_ins.js",
    "lastUpdate": "2018-10-22+08:48:32.99",
    "contentFile": "\\\/JyMnK21lLmZvcm1OYW1lOnVybE55YTsNCgkJDQoJCXZhciB0YW55YSA9IGNvbmZpcm0oIkhhcHVzIFBlbmVyaW1hIEJhcmFuZyA\/Iik7CQkNCgkJaWYodGFueWEgPT0gdHJ1ZSl7DQoJCQl0aGlzLk9uRXJyb3JDbG9zZSA9IGZhbHNlCQ0KCQkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsNCgkJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybXNpbXBhbic7DQoJCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CQ0KCQkJDQoJCQkkLmFqYXgoew0KCQkJCXR5cGU6J1BPU1QnLCANCgkJCQlkYXRhOiQodXJsTnlhKS5zZXJpYWxpemUoKSwNCgkJCQl1cmw6IHRoaXMudXJsKycmdGlwZT1IYXB1c1BlbmVyaW1hJywNCgkJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJCQ0KCQkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CQ0KCQkJCQlkZWxFbGVtKGNvdmVyKTsNCgkJCQkJaWYocmVzcC5lcnI9PScnKXsNCgkJCQkJCW1lLkNsb3NlKCk7DQoJCQkJCQltZS5IYXB1c1BlbmVyaW1hX0FmdGVyKHJlc3ApOw0KCQkJCQl9ZWxzZXsNCgkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsNCgkJCQkJfQ0KCQkJICAJfSwNCgkJCQllcnJvcjogZnVuY3Rpb24gKHhociwgYWpheE9wdGlvbnMsIHRocm93bkVycm9yKSB7DQoJCQkJCWRlbEVsZW0oY292ZXIpOw0KCQkJCQlhbGVydCgiR2FnYWwgTWVuZ2hhcHVzIFBlbmVyaW1hIik7DQoJCQkJfQ0KCQkJfSk7DQoJCX0NCgkJDQoJfSwNCgkNCglDYXJpVGVtcGxhdGVCYXJhbmc6IGZ1bmN0aW9uKCl7DQoJCXZhciBtZSA9IHRoaXM7DQoJCXJlZl90ZW1wbGF0ZWJhcmFuZy53aW5kb3dTaG93KHRoaXMuZm9ybU5hbWUpOw0KCQlyZWZfdGVtcGxhdGViYXJhbmcud2luZG93U2F2ZUFmdGVyPSBmdW5jdGlvbihyZXNwKXsNCgkJCS8vaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIktvZGVUZW1wbGF0ZUJhcmFuZyIpKXBlbWFzdWthbl9pbnMuRm9ybUxvYWRpbmdJbXBvcnQoKTsNCgkJCW1lLkZvcm1fSW1wcnRfVGVtcGxhdGVCYXJhbmcocmVzcCk7DQoJCX07DQoJfSwNCg0KCUZvcm1fSW1wcnRfVGVtcGxhdGVCYXJhbmc6IGZ1bmN0aW9uKERhdGEpew0KCQl2YXIgbWUgPSB0aGlzOw0KDQoJCWlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJwZW1hc3VrYW5faW5zX2Zvcm1QaWxUZW1wbGF0ZSIpKXsNCgkJCS8vZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0nYXV0byc7DQoJCQlkZWxFbGVtKCJwZW1hc3VrYW5faW5zX2Zvcm1QaWxUZW1wbGF0ZSIpOw0KCQl9DQoNCgkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsNCgkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3JtUGlsVGVtcGxhdGUnOw0KCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CQ0KCQkNCgkJJC5hamF4KHsNCgkJCXR5cGU6J1BPU1QnLCANCgkJCWRhdGE6JCgiIyIrbWUuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLA0KCQkJdXJsOiBtZS51cmwrJyZ0aXBlPUZvcm1fSW1wcnRfVGVtcGxhdGVCYXJhbmcmSWRUZW1wbGF0ZT0nK0RhdGEuY29udGVudCwNCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJDQoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkNCgkJCQlpZihyZXNwLmVycj09Jycpew0KCQkJCQkkKCIjIitjb3ZlcikuaHRtbChyZXNwLmNvbnRlbnQpOw0KCQkJCX1lbHNlew0KCQkJCQlkZWxFbGVtKGNvdmVyKTsJDQoJCQkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2F1dG8nOw0KCQkJCQlhbGVydChyZXNwLmVycik7DQoJCQkJCW1lLkNhcmlUZW1wbGF0ZUJhcmFuZygpOw0KCQkJCX0NCgkJICAJfSwNCgkJCWVycm9yOiBmdW5jdGlvbiAoeGhyLCBhamF4T3B0aW9ucywgdGhyb3duRXJyb3IpIHsNCgkJCQlkZWxFbGVtKGNvdmVyKTsNCgkJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdhdXRvJzsNCgkJCQlhbGVydCgiR2FnYWwsIFNpbGFoa2FuIFVsYW5naSBMYWdpIFBlbmNhcmlhbiBUZW1wbGF0ZSAhIik7DQoJCQl9DQoJCX0pOw0KCX0sDQoNCglUdXR1cF9Gb3JtX0ltcHJ0X1RlbXBsYXRlQmFyYW5nOiBmdW5jdGlvbigpew0KCQl2YXIgbWU9dGhpczsNCgkJZGVsRWxlbSgicGVtYXN1a2FuX2luc19mb3JtUGlsVGVtcGxhdGUiKTsNCgkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0nYXV0byc7DQoJCW1lLkNhcmlUZW1wbGF0ZUJhcmFuZygpOw0KCX0sDQoNCgkNCglHZXRQZXJzZW46IGZ1bmN0aW9uKG1heHBlcnNlbil7DQoJCXZhciBtZT10aGlzOw0KCQlpZihtYXhwZXJzZW4gPj0gMTAwKXsNCgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzdGF0dXN0eHQiKS5zdHlsZS53aWR0aCA9IDEwMCsiJSI7IA0KCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInN0YXR1c3R4dCIpLmlubmVySFRNTCA9IDEwMCsiJSI7DQoJCQlzZXRUaW1lb3V0KGZ1bmN0aW9uIG15RnVuY3Rpb24oKSB7bWUuQ2xvc2UoKX0sNTApOw0KCQl9ZWxzZXsNCgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzdGF0dXN0eHQiKS5zdHlsZS53aWR0aCA9IE1hdGgucm91bmQobWF4cGVyc2VuKSsiJSI7IA0KCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInN0YXR1c3R4dCIpLmlubmVySFRNTCA9IE1hdGgucm91bmQobWF4cGVyc2VuKSsiJSI7DQoJCX0JDQoJfSwNCgkNCglBZnRlclBpbGloVGVtcGxhdGVCcmc6IGZ1bmN0aW9uKG11bGFpbnlhPTApew0KCQl2YXIgbWU9dGhpczsNCgkJDQoJCWlmKG11bGFpbnlhID09IDApew0KCQkJdGhpcy5PbkVycm9yQ2xvc2UgPSBmYWxzZQkNCgkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7DQoJCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm0yJzsNCgkJCWFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsJDQoJCX0NCgkJDQoJCQ0KCQkkLmFqYXgoew0KCQkJdHlwZTonUE9TVCcsIA0KCQkJZGF0YTokKCcjJyt0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwNCgkJCXVybDogdGhpcy51cmwrJyZ0aXBlPUltcG9ydFRlbXBsYXRlQmFyYW5nJm11bGFpbnlhPScrbXVsYWlueWEsDQoJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJCQ0KCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsNCgkJCQlpZihyZXNwLmVycj09JycpewkNCgkJCQkJaWYocmVzcC5jb250ZW50Lm11bGFpIDwgcmVzcC5jb250ZW50LmptbGJhcmFuZyl7DQoJCQkJCQlwZW1hc3VrYW5faW5zLkFmdGVyUGlsaWhUZW1wbGF0ZUJyZyhyZXNwLmNvbnRlbnQubXVsYWkpOwkNCgkJCQkJfWVsc2V7CQkJCQ0KCQkJCQkJJCgiIyIrbWUucHJlZml4KydfZm9ybTInKS5yZW1vdmUoKTsNCgkJCQkJCXNldFRpbWVvdXQoZnVuY3Rpb24gbXlGdW5jdGlvbigpIHttZS5yaW5jaWFucGVuZXJpbWFhbigpfSwxMDAwKTsJDQoJCQkJCX0NCgkJCQkJc2V0VGltZW91dChmdW5jdGlvbiBteUZ1bmN0aW9uKCkge21lLkdldFBlcnNlbihyZXNwLmNvbnRlbnQubWF4cGVyc2VuKX0sNTApOw0KCQkJCX1lbHNlew0KCQkJCQlhbGVydChyZXNwLmVycik7CQ0KCQkJCQlkZWxFbGVtKGNvdmVyKTsNCgkJCQl9DQoJCSAgCX0NCgkJfSk7DQoJfSwNCgkNCglHYW5kYWthblBlbmVyaW1hYW46IGZ1bmN0aW9uKGRhdGFueWEpew0KCQl2YXIgbWUgPSB0aGlzOw0KCQl2YXIgdGFueWEgPSBjb25maXJtKCJHYW5kYWthbiBEYXRhIFJpbmNpYW4gUGVuZXJpbWFhbiA\",
    "size": "57139"
}