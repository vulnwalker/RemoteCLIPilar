{
    "namaFile": "js\/birm\/birm.js",
    "lastUpdate": "2017-12-04+10:06:39.77",
    "contentFile": "\/UGc9QklSTSZ0aXBlPWdldGRhdGEmaWQ9Jyt0aGlzLmlkcGlsaWgsDQoJCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CQkNCgkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkJCQ0KCQkJCQlkZWxFbGVtKGNvdmVyKTsNCgkJCQkJaWYocmVzcC5lcnI9PScnKXsNCgkJCQkJCWlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG1lLmVsX0lEKSkgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobWUuZWxfSUQpLnZhbHVlPSByZXNwLmNvbnRlbnQuSUQ7DQoJCQkJCQlpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicGVtYXN1a2FuX2luc19pZHBsaCIpKXBlbWFzdWthbl9pbnMuY2FyYXBlcm9sZWhhbigxKTsNCgkJCQkJCW1lLndpbmRvd0Nsb3NlKCk7DQoJCQkJCQltZS53aW5kb3dTYXZlQWZ0ZXIoKTsNCgkJCQkJfWVsc2V7DQoJCQkJCQlhbGVydChyZXNwLmVycikJDQoJCQkJCX0NCgkJCSAgCX0NCgkJCX0pOwkJDQoJCX1lbHNlew0KCQkJYWxlcnQoZXJybXNnKTsNCgkJfQ0KCX0sDQoJd2luZG93U2F2ZUFmdGVyOiBmdW5jdGlvbigpew0KCQkvL2FsZXJ0KCd0ZXMnKTsNCgl9LAkJDQoJQWZ0ZXJTaW1wYW4gOiBmdW5jdGlvbigpew0KCQlpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnS3VuanVuZ2FuX2NvbnRfZGFmdGFyJykpew0KCQl0aGlzLnJlZnJlc2hMaXN0KHRydWUpO30NCgl9LA0KCQ0KCVNpbXBhbjogZnVuY3Rpb24oKXsNCgkJdmFyIG1lPSB0aGlzOwkNCgkJdGhpcy5PbkVycm9yQ2xvc2UgPSBmYWxzZQkNCgkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsNCgkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3Jtc2ltcGFuJzsNCgkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOwkNCgkJLyp0aGlzLnNlbmRSZXEoDQoJCQl0aGlzLnVybCwNCgkJCXsgaWRwcnM6IDAsIGRhZnRhclByb3NlczogbmV3IEFycmF5KCdzaW1wYW4nKX0sDQoJCQl0aGlzLmZvcm1EaWFsb2cpOyovDQoJCSQuYWpheCh7DQoJCQl0eXBlOidQT1NUJywgDQoJCQlkYXRhOiQoJyMnK3RoaXMucHJlZml4KydfZm9ybScpLnNlcmlhbGl6ZSgpLA0KCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9c2ltcGFuJywNCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJDQoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkNCgkJCQlkZWxFbGVtKGNvdmVyKTsJCQ0KCQkJCS8vZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsNCgkJCQlpZihyZXNwLmVycj09Jycpew0KCQkJCQlhbGVydCgnRGF0YSBiZXJoYXNpbCBkaXNpbXBhbicpOw0KCQkJCQltZS5DbG9zZSgpOw0KCQkJCQltZS5yZWZyZXNoTGlzdCh0cnVlKTsNCgkJCQkJbWUuQWZ0ZXJTaW1wYW4oKTsJDQoJCQkJfQ0KCQkJCWVsc2V7DQoJCQkJCWFsZXJ0KHJlc3AuZXJyKTsNCgkJCQl9DQoJCSAgCX0NCgkJfSk7DQoJfQ0KfSk7",
    "size": "17889"
}