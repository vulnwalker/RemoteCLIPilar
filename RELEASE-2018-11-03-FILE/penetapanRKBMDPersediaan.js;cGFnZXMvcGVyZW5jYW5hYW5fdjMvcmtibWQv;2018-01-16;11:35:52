{
    "namaFile": "pages\/perencanaan_v3\/rkbmd\/penetapanRKBMDPersediaan.js",
    "lastUpdate": "2018-01-16+11:35:52.87",
    "contentFile": "dmFyIHBlbmV0YXBhblJLQk1EUGVyc2VkaWFhblNrcGQgPSBuZXcgU2twZENscyh7DQoJcHJlZml4IDogJ3BlbmV0YXBhblJLQk1EUGVyc2VkaWFhblNrcGQnLA0KCWZvcm1OYW1lOiAncGVuZXRhcGFuUktCTURQZXJzZWRpYWFuRm9ybScsDQoJcGlsaWhCaWRhbmdBZnRlciA6IGZ1bmN0aW9uKCl7cGVuZXRhcGFuUktCTURQZXJzZWRpYWFuLnJlZnJlc2hMaXN0KHRydWUpO30sDQoJcGlsaWhVbml0QWZ0ZXIgOiBmdW5jdGlvbigpe3BlbmV0YXBhblJLQk1EUGVyc2VkaWFhbi5yZWZyZXNoTGlzdCh0cnVlKTt9LA0KCXBpbGloU3ViVW5pdEFmdGVyIDogZnVuY3Rpb24oKXtwZW5ldGFwYW5SS0JNRFBlcnNlZGlhYW4ucmVmcmVzaExpc3QodHJ1ZSk7fSwNCglwaWxpaFNla3NpQWZ0ZXIgOiBmdW5jdGlvbigpe3BlbmV0YXBhblJLQk1EUGVyc2VkaWFhbi5yZWZyZXNoTGlzdCh0cnVlKTt9DQp9KTsNCg0KdmFyIHBlbmV0YXBhblJLQk1EUGVyc2VkaWFhbiA9IG5ldyBEYWZ0YXJPYmoyKHsNCglwcmVmaXggOiAncGVuZXRhcGFuUktCTURQZXJzZWRpYWFuJywNCgl1cmwgOiAncGFnZXMucGhwP1BnPXBlbmV0YXBhblJLQk1EUGVyc2VkaWFhbicsDQoJZm9ybU5hbWUgOiAncGVuZXRhcGFuUktCTURQZXJzZWRpYWFuRm9ybScsDQoNCglsb2FkaW5nOmZ1bmN0aW9uKCl7DQoJCXRoaXMudG9wQmFyUmVuZGVyKCk7DQoJCXRoaXMuZmlsdGVyUmVuZGVyKCk7DQoJCXRoaXMuZGFmdGFyUmVuZGVyKCk7DQoJCS8vdGhpcy5zdW1IYWxSZW5kZXIoKTsNCg0KCX0sDQoNCglkYWZ0YXJSZW5kZXI6ZnVuY3Rpb24oKXsNCgkJdmFyIGplbmlzS2VnaWF0YW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY21iSmVuaXNwZW5ldGFwYW5SS0JNRFBlcnNlZGlhYW4nKTsNCgkJLypjbWJKZW5pc3BlbmV0YXBhblJLQk1EUGVyc2VkaWFhbi5yZW1vdmUoMCk7Ki8NCgkJdmFyIG1lID10aGlzOyAvL3JlbmRlciBkYWZ0YXINCgkJYWRkQ292ZXJQYWdlMigNCgkJCSdkYWZ0YXJfY292ZXInLAkxLCAJdHJ1ZSwgdHJ1ZSwJe3JlbmRlclRvOiB0aGlzLnByZWZpeCsnX2NvbnRfZGFmdGFyJywNCgkJCWltZ3NyYzogJ2ltYWdlcy93YWl0LmdpZicsDQoJCQlzdHlsZToge3Bvc2l0aW9uOidhYnNvbHV0ZScsIHRvcDonNScsIGxlZnQ6JzUnfQ0KCQkJfQ0KCQkpOw0KCQkkLmFqYXgoew0KCQkgIAl1cmw6IHRoaXMudXJsKycmdGlwZT1kYWZ0YXInLA0KCQkgCXR5cGU6J1BPU1QnLA0KCQkJZGF0YTokKCcjJyt0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwNCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgew0KCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsNCgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZChtZS5wcmVmaXgrJ19jb250X2RhZnRhcicpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsNCgkJCQkvL21lLnN1bUhhbFJlbmRlcigpOw0KCQkgIAl9DQoJCX0pOw0KDQoJfSwNCglJbmZvOiBmdW5jdGlvbigpew0KCQl2YXIgbWUgPSB0aGlzOw0KCSAgICB2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1jb3Zlcic7DQoJCQkkLmFqYXgoew0KCQkJCXR5cGU6J1BPU1QnLA0KCQkJICAJdXJsOiB0aGlzLnVybCsnJnRpcGU9SW5mbycsDQoJCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7DQoJCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsNCgkJCQkJaWYocmVzcC5lcnIgPT0gJycpew0KCQkJCQkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsNCgkJCQkJCWFkZENvdmVyUGFnZTIoY292ZXIsOTk5LHRydWUsZmFsc2UpOw0KCQkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsNCgkJCQkJfWVsc2V7DQoJCQkJCQlhbGVydChyZXNwLmVycik7DQoJCQkJCX0NCgkJCQkgfQ0KCQkJfSk7DQoJfSwNCg0KCUNhcmk6IGZ1bmN0aW9uKCl7DQoJCXBvcHVwQmFyYW5nLmtvZGVCYXJhbmcgPSAna29kZUJhcmFuZyc7DQoJCXBvcHVwQmFyYW5nLm5hbWFCYXJhbmcgPSAnbmFtYUJhcmFuZyc7DQoJCXBvcHVwQmFyYW5nLnNhdHVhbkJhcmFuZyA9ICdzYXR1YW4nOw0KCQlwb3B1cEJhcmFuZy53aW5kb3dTaG93KCk7DQoNCgl9LA0KCUVkaXQ6ZnVuY3Rpb24oKXsNCgkJdmFyIG1lID0gdGhpczsNCgkJZXJybXNnID0gdGhpcy5DZWtDaGVja2JveCgpOw0KCQlpZihlcnJtc2cgPT0nJyl7DQoJCQl2YXIgYm94ID0gdGhpcy5HZXRDYnhDaGVja2VkKCk7DQoNCg0KCQkJdmFyIGFGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5mb3JtTmFtZSk7DQoJCQkkLmFqYXgoew0KCQkJICB1cmw6IHRoaXMudXJsKycmdGlwZT1lZGl0VGFiJywNCgkJCSAgdHlwZSA6ICdQT1NUJywNCgkJCSAgZGF0YTokKCcjJyt0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwNCgkJCSAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgew0KCQkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7DQoJCQkJCWlmKHJlc3AuZXJyID09ICIiKSB7DQoJCQkJCQl2YXIgSURyZW5qYSA9IE51bWJlcihyZXNwLmNvbnRlbnQuaWRyZW5qYSk7DQoJCQkJCQlhRm9ybS5hY3Rpb249ICdwYWdlcy5waHA\/UGc9cmtibWRfJytyZXNwLmNvbnRlbnQua2VtYW5hKycmWU49MSZpZD0nK0lEcmVuamE7DQoJCQkJCQlhRm9ybS50YXJnZXQ9J19ibGFuayc7DQoJCQkJCQlhRm9ybS5zdWJtaXQoKTsNCgkJCQkJCWFGb3JtLnRhcmdldD0nJzsNCgkJCQkJfWVsc2V7DQoJCQkJCQlhbGVydChyZXNwLmVycik7DQoJCQkJCX0NCg0KCQkJICB9DQoJCQl9KTsNCgkJfWVsc2V7DQoJCQlhbGVydChlcnJtc2cpOw0KCQl9DQoNCgl9LA0KCXJlbW92ZTpmdW5jdGlvbigpew0KCQl2YXIgbWUgPSB0aGlzOw0KCQllcnJtc2cgPSB0aGlzLkNla0NoZWNrYm94KCk7DQoJCWlmKGVycm1zZyA9PScnKXsNCgkJCXZhciBib3ggPSB0aGlzLkdldENieENoZWNrZWQoKTsNCg0KCQkJJC5hamF4KHsNCgkJCSAgdXJsOiB0aGlzLnVybCsnJnRpcGU9cmVtb3ZlJywNCgkJCSAgdHlwZSA6ICdQT1NUJywNCgkJCSAgZGF0YTokKCcjJyt0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwNCgkJCSAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgew0KCQkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7DQoJCQkJCXBlbmV0YXBhblJLQk1EUGVyc2VkaWFhbi5yZWZyZXNoTGlzdCh0cnVlKTsNCg0KCQkJICB9DQoJCQl9KTsNCgkJfWVsc2V7DQoJCQlhbGVydChlcnJtc2cpOw0KCQl9DQoNCgl9LFZhbGlkYXNpOmZ1bmN0aW9uKGlkX2FuZ2dhcmFuKXsNCgkJdmFyIG1lID0gdGhpczsNCgkJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyJzsNCgkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7DQoJCQlpZihtZS5zYXR1YW5fZm9ybT09MCl7Ly9iYXJ1IGRhcmkgc2F0dWFuDQoJCQkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOw0KCQkJfWVsc2V7Ly9iYXJ1IGRhcmkgYmFyYW5nDQoJCQkJYWRkQ292ZXJQYWdlMihjb3Zlciw5OTksdHJ1ZSxmYWxzZSk7DQoJCQl9DQoJCQkkLmFqYXgoew0KCQkJCXR5cGU6J1BPU1QnLA0KCQkJCWRhdGE6JCgnIycrdGhpcy5mb3JtTmFtZSkuc2VyaWFsaXplKCksDQoJCQkgIAl1cmw6IHRoaXMudXJsKycmdGlwZT1WYWxpZGFzaSZpZF9hbmdnYXJhbj0nK2lkX2FuZ2dhcmFuLA0KCQkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgew0KCQkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7DQoJCQkJCWlmKHJlc3AuZXJyID09ICcnKXsNCgkJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQ7DQoJCQkJCX1lbHNlew0KCQkJCQkJZGVsRWxlbShjb3Zlcik7DQoJCQkJCQlhbGVydChyZXNwLmVycik7DQoJCQkJCQlpZihyZXNwLmVyciA9PSAnVGFoYXAgUGVueXVzdW5hbiBUZWxhaCBIYWJpcycpew0KCQkJCQkJCXdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsNCgkJCQkJCX0NCgkJCQkJfQ0KDQoJCQkgIAl9DQoJCQl9KTsNCg0KDQoJfSwNCglMYXBvcmFuOmZ1bmN0aW9uKCl7DQoJCXZhciBtZSA9IHRoaXM7DQoJCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1jb3Zlcic7DQoJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOw0KCQkJaWYobWUuc2F0dWFuX2Zvcm09PTApey8vYmFydSBkYXJpIHNhdHVhbg0KCQkJCWFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsNCgkJCX1lbHNley8vYmFydSBkYXJpIGJhcmFuZw0KCQkJCWFkZENvdmVyUGFnZTIoY292ZXIsOTk5LHRydWUsZmFsc2UpOw0KCQkJfQ0KCQkJJC5hamF4KHsNCgkJCQl0eXBlOidQT1NUJywNCgkJCQlkYXRhOiQoJyMnK3RoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLA0KCQkJICAJdXJsOiB0aGlzLnVybCsnJnRpcGU9TGFwb3JhbicsDQoJCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7DQoJCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsNCgkJCQkJaWYocmVzcC5lcnIgPT0gJycpew0KCQkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsNCgkJCQkJfWVsc2V7DQoJCQkJCQlkZWxFbGVtKGNvdmVyKTsNCgkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsNCgkJCQkJfQ0KDQoJCQkgIAl9DQoJCQl9KTsNCg0KDQoJfSxSZXBvcnQ6IGZ1bmN0aW9uKCl7DQoJCXZhciBhRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMucHJlZml4KygnX2Zvcm0nKSk7DQoJCXZhciBtZT0gdGhpczsNCgkJdGhpcy5PbkVycm9yQ2xvc2UgPSBmYWxzZQ0KCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOw0KCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1zaW1wYW4nOw0KCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7DQoJCXZhciB1cmwyID0gdGhpcy51cmw7DQoJCSQuYWpheCh7DQoJCQl0eXBlOidQT1NUJywNCgkJCWRhdGE6IHsgamVuaXNLZWdpYXRhbiA6ICQoIiNqZW5pc0tlZ2lhdGFuIikudmFsKCksDQoJCQkJCWNldGFramFuZwkgIDogJCgiI2NldGFramFuZyIpLnZhbCgpLA0KCQkJCQljMSAJCQkgIDogJCgiI3BlbmV0YXBhblJLQk1EUGVyc2VkaWFhblNrcGRmbVVydXNhbiIpLnZhbCgpLA0KCQkJCQljIAkJCSAgOiAkKCIjcGVuZXRhcGFuUktCTURQZXJzZWRpYWFuU2twZGZtU0tQRCIpLnZhbCgpLA0KCQkJCQlkIAkJCSAgOiAkKCIjcGVuZXRhcGFuUktCTURQZXJzZWRpYWFuU2twZGZtVU5JVCIpLnZhbCgpLA0KCQkJCQllIAkJCSAgOiAkKCIjcGVuZXRhcGFuUktCTURQZXJzZWRpYWFuU2twZGZtU1VCVU5JVCIpLnZhbCgpLA0KCQkJCQllMSAJCQkgIDogJCgiI3BlbmV0YXBhblJLQk1EUGVyc2VkaWFhblNrcGRmbVNFS1NJIikudmFsKCksDQoNCg0KCQkJCQl9LA0KCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9UmVwb3J0JywNCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgew0KCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsNCgkJCQlkZWxFbGVtKGNvdmVyKTsNCgkJCQlpZihyZXNwLmVycj09Jycpew0KDQoJCQkJCWFGb3JtLmFjdGlvbj0gdXJsMisnJnRpcGU9JytyZXNwLmNvbnRlbnQudG8rJyZ1cnVzYW49JyskKCIjcGVuZXRhcGFuUktCTURQZXJzZWRpYWFuU2twZGZtVXJ1c2FuIikudmFsKCkrJyZiaWRhbmc9JyskKCIjcGVuZXRhcGFuUktCTURQZXJzZWRpYWFuU2twZGZtU0tQRCIpLnZhbCgpKycmc2twZD0nKyQoIiNwZW5ldGFwYW5SS0JNRFBlcnNlZGlhYW5Ta3BkZm1VTklUIikudmFsKCkrJyZ1bml0PScrJCgiI3BlbmV0YXBhblJLQk1EUGVyc2VkaWFhblNrcGRmbVNVQlVOSVQiKS52YWwoKSsnJnN1YnVuaXQ9JyskKCIjcGVuZXRhcGFuUktCTURQZXJzZWRpYWFuU2twZGZtU0VLU0kiKS52YWwoKSsnJmtvdGE9JytyZXNwLmNvbnRlbnQubmFtYVBlbWRhKycmdGFuZ2dhbENldGFrPScrcmVzcC5jb250ZW50LmNldGFramFuZzsNCgkJCQkJYUZvcm0udGFyZ2V0PSdfYmxhbmsnOw0KCQkJCQlhRm9ybS5zdWJtaXQoKTsNCgkJCQkJYUZvcm0udGFyZ2V0PScnOw0KCQkJCQltZS5DbG9zZSgpOw0KCQkJCX1lbHNlew0KCQkJCQlhbGVydChyZXNwLmVycik7DQoJCQkJfQ0KCQkgIAl9DQoJCX0pOw0KCX0NCgksDQoJU2F2ZVZhbGlkOiBmdW5jdGlvbigpew0KCQl2YXIgbWU9IHRoaXM7DQoJCXRoaXMuT25FcnJvckNsb3NlID0gZmFsc2UNCgkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsNCgkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3Jtc2ltcGFuJzsNCgkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOw0KCQkkLmFqYXgoew0KCQkJdHlwZTonUE9TVCcsDQoJCQlkYXRhOiQoJyMnK3RoaXMucHJlZml4KydfZm9ybScpLnNlcmlhbGl6ZSgpLA0KCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9U2F2ZVZhbGlkJywNCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgew0KCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsNCgkJCQlkZWxFbGVtKGNvdmVyKTsNCgkJCQlpZihyZXNwLmVycj09Jycpew0KCQkJCQltZS5DbG9zZSgpOw0KCQkJCQkJLyptZS5BZnRlclNpbXBhbigpOwkqLw0KCQkJCQkJcGVuZXRhcGFuUktCTURQZXJzZWRpYWFuLnJlZnJlc2hMaXN0KHRydWUpOw0KCQkJCX1lbHNlew0KCQkJCQlhbGVydChyZXNwLmVycik7DQoJCQkJfQ0KCQkgIAl9DQoJCX0pOw0KCX0NCgksDQoJQWZ0ZXJTaW1wYW4gOiBmdW5jdGlvbigpew0KCQlpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnS3VuanVuZ2FuX2NvbnRfZGFmdGFyJykpew0KCQl0aGlzLnJlZnJlc2hMaXN0KHRydWUpO30NCgl9LA0KCUlucHV0QmFydTogZnVuY3Rpb24oKXsNCgkJdmFyIG1lID0gdGhpczsNCg0KCQllcnJtc2cgPSAnJzsNCg0KCQlpZigkKCIjcGVuZXRhcGFuUktCTURQZXJzZWRpYWFuU2twZGZtVXJ1c2FuIikudmFsKCkgPT0gJzAwJyl7DQoJCQllcnJtc2cgPSAiUGlsaWggVXJ1c2FuIjsNCgkJfWVsc2UgaWYoJCgiI3BlbmV0YXBhblJLQk1EUGVyc2VkaWFhblNrcGRmbVNLUEQiKS52YWwoKSA9PSAnMDAnKXsNCgkJCWVycm1zZyA9ICJQaWxpaCBCaWRhbmciOw0KCQl9ZWxzZSBpZigkKCIjcGVuZXRhcGFuUktCTURQZXJzZWRpYWFuU2twZGZtVU5JVCIpLnZhbCgpID09ICcwMCcpew0KCQkJZXJybXNnID0gIlBpbGloIFNLUEQiOw0KCQl9ZWxzZSBpZigkKCIjcGVuZXRhcGFuUktCTURQZXJzZWRpYWFuU2twZGZtU1VCVU5JVCIpLnZhbCgpID09ICcwMCcpew0KCQkJZXJybXNnID0gIlBpbGloIFVOSVQiOw0KCQl9ZWxzZSBpZigkKCIjcGVuZXRhcGFuUktCTURQZXJzZWRpYWFuU2twZGZtU0VLU0kiKS52YWwoKSA9PSAnMDAwJyl7DQoJCQllcnJtc2cgPSAiUGlsaWggU1VCIFVOSVQiOw0KCQl9ZWxzZSBpZigkKCIjY21iSmVuaXNwZW5ldGFwYW5SS0JNRFBlcnNlZGlhYW4iKS52YWwoKSA9PSAnJyl7DQoJCQllcnJtc2cgPSAiUGlsaWggSkVOSVMgcGVuZXRhcGFuUktCTURQZXJzZWRpYWFuIjsNCgkJfQ0KDQoNCgkJaWYoZXJybXNnID09Jycpew0KDQoJCQl2YXIgbWUgPSB0aGlzOw0KCQkJdmFyIGFGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5mb3JtTmFtZSk7DQoJCQkkLmFqYXgoew0KCQkJICB1cmw6IHRoaXMudXJsKycmdGlwZT1uZXdUYWInLA0KCQkJICB0eXBlIDogJ1BPU1QnLA0KCQkJICBkYXRhOiQoJyMnK3RoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLA0KCQkJICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7DQoJCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsNCgkJCQkJaWYocmVzcC5lcnIgPT0gIiIpIHsNCgkJCQkJCXZhciBJRHJlbmphID0gTnVtYmVyKHJlc3AuY29udGVudC5pZHJlbmphKTsNCgkJCQkJCWFGb3JtLmFjdGlvbj0gJ3BhZ2VzLnBocD9QZz1ya2JtZF8nK3Jlc3AuY29udGVudC5rZW1hbmErJyZZTj0xJmlkPScrSURyZW5qYTsNCgkJCQkJCWFGb3JtLnRhcmdldD0nX2JsYW5rJzsNCgkJCQkJCWFGb3JtLnN1Ym1pdCgpOw0KCQkJCQkJYUZvcm0udGFyZ2V0PScnOw0KCQkJCQl9ZWxzZXsNCgkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsNCgkJCQkJfQ0KDQoJCQkgIH0NCgkJCX0pOw0KDQoNCgkJfWVsc2V7DQoJCQkJYWxlcnQoZXJybXNnKTsNCgkJfQ0KCX0sDQoJa29yZWtzaTpmdW5jdGlvbihpZCl7DQoJCS8qJCgiI2FsaWduS29yZWtzaSIpLmF0dHIoJ2FsaWduJywnY2VudGVyJyk7Ki8NCgkJJCgiI3VwZGF0ZVBlbmdndW5hIitpZCkuYXR0cignYWxpZ24nLCdjZW50ZXInKTsNCgkJJCgiI3NwYW5KdW1sYWgiK2lkKS5odG1sKCI8aW5wdXQgdHlwZT0ndGV4dCcgbmFtZT0nanVtbGFoIitpZCsiJyBpZD0nanVtbGFoIitpZCsiJyBvbmtleXByZXNzPSdyZXR1cm4gZXZlbnQuY2hhckNvZGUgPj0gNDggJiYgZXZlbnQuY2hhckNvZGUgPD0gNTcnIG9ua2V5dXA9cGVuZXRhcGFuUktCTURQZXJzZWRpYWFuLmJhbnR1KCdKdW1sYWgiK2lkKyInKTsgc3R5bGU9J3RleHQtYWxpZ246IHJpZ2h0Oyc+ICAiKTsNCgkJJC5hamF4KHsNCgkJCQl0eXBlOidQT1NUJywNCgkJCQlkYXRhIDp7aWQgOiBpZH0sDQoJCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9Y29tYm9Cb3hQZW1lbnVoYW4nLA0KCQkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgew0KCQkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7DQoJCQkJCWlmKHJlc3AuZXJyICE9ICcnKXsNCgkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsNCgkJCQkJfWVsc2V7DQoJCQkJCSAkKCIjc3BhbkNhcmFQZW1lbnVoYW4iK2lkKS5odG1sKHJlc3AuY29udGVudC5jYXJhUGVtZW51aGFuICApOw0KCQkJCQkgJCgiI3BlbWVudWhhbiIraWQrIiBvcHRpb25bdmFsdWU9JyddIikucmVtb3ZlKCk7DQoJCQkJCX0NCg0KCQkJCSB9DQoJCQkgIH0pOw0KCQkkKCIjc2F2ZSIraWQpLmh0bWwoIjxpbWcgc3JjPSdkYXRlcGlja2VyL3NhdmUucG5nJyB3aWR0aD0nMjBweCcgaGVpZ2g9JzIwcHgnIHN0eWxlPSdjdXJzb3IgOiBwb2ludGVyOycgb25jbGljaz1wZW5ldGFwYW5SS0JNRFBlcnNlZGlhYW4uc3VibWl0S29yZWtzaSgnIitpZCsiJyk7PjwvaW1nPiAmbmJzcCAgJm5ic3AgPGltZyBzcmM9J2ltYWdlcy9hZG1pbmlzdHJhdG9yL2ltYWdlcy9pbnZhbGlkLnBuZycgd2lkdGg9JzIwcHgnIGhlaWdoPScyMHB4JyBzdHlsZT0nY3Vyc29yIDogcG9pbnRlcjsnIG9uY2xpY2s9cGVuZXRhcGFuUktCTURQZXJzZWRpYWFuLmNhbmNlbEtvcmVrc2koJyIraWQrIicpOz48L2ltZz4gIik7DQoJfSwNCglzZXN1YWk6ZnVuY3Rpb24oaWQpew0KCQl2YXIgaXNpID0gJCgiI3ZvbHVtZUJhcmFuZyIraWQrIiIpLnZhbCgpOw0KCQkkKCIjdXBkYXRlUGVuZ2d1bmEiK2lkKS5hdHRyKCdhbGlnbicsJ2NlbnRlcicpOw0KCQkkKCIjc3Bhbkp1bWxhaCIraWQpLmh0bWwoIjxpbnB1dCB0eXBlPSd0ZXh0JyB2YWx1ZT0nIitpc2krIicgbmFtZT0nanVtbGFoIitpZCsiJyBpZD0nanVtbGFoIitpZCsiJyBzdHlsZT0ndGV4dC1hbGlnbjogcmlnaHQ7JyByZWFkb25seT4gIik7DQoJCSQuYWpheCh7DQoJCQkJdHlwZTonUE9TVCcsDQoJCQkJZGF0YSA6e2lkIDogaWR9LA0KCQkJCXVybDogdGhpcy51cmwrJyZ0aXBlPWNvbWJvQm94UGVtZW51aGFuJywNCgkJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsNCgkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOw0KCQkJCQlpZihyZXNwLmVyciAhPSAnJyl7DQoJCQkJCQlhbGVydChyZXNwLmVycik7DQoJCQkJCX1lbHNlew0KCQkJCQkgJCgiI3NwYW5DYXJhUGVtZW51aGFuIitpZCkuaHRtbChyZXNwLmNvbnRlbnQuY2FyYVBlbWVudWhhbiAgKTsNCgkJCQkJfQ0KDQoJCQkJIH0NCgkJCSAgfSk7DQoJCSQoIiNzYXZlIitpZCkuaHRtbCgiPGltZyBzcmM9J2RhdGVwaWNrZXIvc2F2ZS5wbmcnIHdpZHRoPScyMHB4JyBoZWlnaD0nMjBweCcgc3R5bGU9J2N1cnNvciA6IHBvaW50ZXI7JyBvbmNsaWNrPXBlbmV0YXBhblJLQk1EUGVyc2VkaWFhbi5zdWJtaXRLb3Jla3NpKCciK2lkKyInKTs+PC9pbWc+ICZuYnNwICAmbmJzcCA8aW1nIHNyYz0naW1hZ2VzL2FkbWluaXN0cmF0b3IvaW1hZ2VzL2ludmFsaWQucG5nJyB3aWR0aD0nMjBweCcgaGVpZ2g9JzIwcHgnIHN0eWxlPSdjdXJzb3IgOiBwb2ludGVyOycgb25jbGljaz1wZW5ldGFwYW5SS0JNRFBlcnNlZGlhYW4uY2FuY2VsS29yZWtzaSgnIitpZCsiJyk7PjwvaW1nPiAiKTsNCgl9LA0KCXN1Ym1pdEtvcmVrc2k6ZnVuY3Rpb24oaWQpIHsNCgl2YXIgYW5na2FLb3Jla3NpID0gJCgiI2p1bWxhaCIraWQpLnZhbCgpOw0KCXZhciBjYXJhUGVtZW51aGFuID0gJCgiI3BlbWVudWhhbiIraWQpLnZhbCgpOw0KCWlmKGFuZ2thS29yZWtzaSA9PSAnJyl7DQoJCWFsZXJ0KCJhbmdrYSBTYWxhaCIpOw0KCX1lbHNlIGlmKGNhcmFQZW1lbnVoYW4gPT0gJycpew0KCQlhbGVydCgiaXNpIGNhcmEgcGVtZW51aGFuIik7DQoJfWVsc2V7DQoJICAgICQuYWpheCh7DQoJCQkJdHlwZTonUE9TVCcsDQoJCQkJZGF0YTp7aWRBd2FsIDogaWQsDQoJCQkJCSAgYW5na2FLb3Jla3NpIDogYW5na2FLb3Jla3NpLA0KCQkJCQkgIGNhcmFQZW1lbnVoYW4gOiBjYXJhUGVtZW51aGFuLA0KCQkJCQkgIGplbmlzcGVuZXRhcGFuUktCTURQZXJzZWRpYWFuICA6ICQoIiNjbWJKZW5pc3BlbmV0YXBhblJLQk1EUGVyc2VkaWFhbiIpLnZhbCgpDQoJCQkJCSAgfSwNCgkJCQl1cmw6IHRoaXMudXJsKycmdGlwZT1rb3Jla3NpJywNCgkJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsNCgkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOw0KCQkJCQlpZihyZXNwLmVyciAhPSAnJyl7DQoJCQkJCQlhbGVydChyZXNwLmVycik7DQoJCQkJCQlpZihyZXNwLmVyciA9PSAiVGFoYXAgS29yZWtzaSBUZWxhaCBIYWJpcyIpew0KCQkJCQkJCXdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsNCgkJCQkJCX0NCgkJCQkJfWVsc2V7DQoJCQkJCQlwZW5ldGFwYW5SS0JNRFBlcnNlZGlhYW4ucmVmcmVzaExpc3QodHJ1ZSk7DQoJCQkJCX0NCg0KCQkJCSB9DQoJCQkgIH0pOw0KCQl9DQoNCgl9LA0KDQoJdGV0YXBrYW5SS0JNRDpmdW5jdGlvbigpIHsNCg0KDQoNCg0KCQkJCXZhciBtZSA9IHRoaXM7DQoNCg0KCQkJCQkgdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3JtY292ZXInOw0KDQoJCQkJCSQuYWpheCh7DQoJCQkJCQl0eXBlOidQT1NUJywNCgkJCQkJCQl1cmw6IHRoaXMudXJsKycmdGlwZT10ZXRhcGthblJLQk1EJywNCgkJCQkJCQlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7DQoJCQkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOw0KCQkJCQkJCWlmKHJlc3AuZXJyID09ICcnKXsNCg0KCQkJCQkJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOw0KCQkJCQkJCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDk5OSx0cnVlLGZhbHNlKTsNCgkJCQkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsNCgkJCQkJCQkJJCgnI3RhbmdnYWxQZW5ldGFwYW4nKS5kYXRlcGlja2VyKHsNCgkJCQkJCQkJCQkJCSAgICBkYXRlRm9ybWF0OiAnZGQtbW0teXknLA0KCQkJCQkJCQkJCQkJCXNob3dBbmltOiAnc2xpZGVEb3duJywNCgkJCQkJCQkJCQkJCSAgICBpbmxpbmU6IHRydWUsDQoJCQkJCQkJCQkJCQkJc2hvd09uOiAiYnV0dG9uIiwNCgkJCQkJCSAgICAgCQkJCQkJYnV0dG9uSW1hZ2U6ICJpbWFnZXMvY2FsZW5kYXIuZ2lmIiwNCgkJCQkJCSAgICAgIAkJCQkJCWJ1dHRvbkltYWdlT25seTogdHJ1ZSwNCgkJCQkJCQkJCQkJCQljaGFuZ2VNb250aDogdHJ1ZSwNCgkJCQkJCSAgICAgIAkJCQkJCWNoYW5nZVllYXI6IHRydWUsDQoJCQkJCQkJCX0pOw0KCQkJCQkJCX1lbHNlew0KCQkJCQkJCQlhbGVydChyZXNwLmVycik7DQoJCQkJCQkJfQ0KDQoNCgkJCQkJCQl9DQoJCQkJCX0pOw0KDQoNCgl9LA0KDQoJc2F2ZVRldGFwa2FuUktCTUQ6ZnVuY3Rpb24oKXsNCgkJdmFyIG1lPSB0aGlzOw0KCQl0aGlzLk9uRXJyb3JDbG9zZSA9IGZhbHNlDQoJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7DQoJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybXNpbXBhbic7DQoJCWFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsNCg0KCQkkLmFqYXgoew0KCQkgdHlwZTonUE9TVCcsDQoJCSB1cmw6IHRoaXMudXJsKycmdGlwZT1zYXZlVGV0YXBrYW5SS0JNRCcsDQoJCSAJIGRhdGEgOiB7DQoJCQkJIG5vbW9yIDogJCgiI25vbW9yIikudmFsKCksDQoJCQkJIHRhbmdnYWxQZW5ldGFwYW4gOiAkKCIjdGFuZ2dhbFBlbmV0YXBhbiIpLnZhbCgpLA0KCQkJCSBuYW1hUGVqYWJhdCA6ICQoIiNuYW1hUGVqYWJhdCIpLnZhbCgpLA0KCQkJCSBuaXAgOiAkKCIjbmlwIikudmFsKCksDQoJCQkJIGphYmF0YW4gOiAkKCIjamFiYXRhbiIpLnZhbCgpLA0KDQoJCQkgfSwNCgkJCSBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7DQoJCQkgdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOw0KCQkJIGRlbEVsZW0oY292ZXIpOw0KCQkJIGlmKHJlc3AuZXJyICE9ICcnKXsNCgkJCQkgYWxlcnQocmVzcC5lcnIpOw0KCQkJIH1lbHNlew0KCQkJCQkgYWxlcnQoIlBlbmV0YXBhbiBCZXJoYXNpbCIpOw0KCQkJCQkgbWUuQ2xvc2UoKTsNCgkJCSB9DQoNCgkJCX0NCgkJIH0pOw0KDQoJfSwNCgljYW5jZWxQZW5ldGFwYW5QZXJzZWRpYWFuOmZ1bmN0aW9uKCl7DQoJCXZhciBtZT0gdGhpczsNCgkJdGhpcy5PbkVycm9yQ2xvc2UgPSBmYWxzZQ0KCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOw0KCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1zaW1wYW4nOw0KCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7DQoNCgkJJC5hamF4KHsNCgkJIHR5cGU6J1BPU1QnLA0KCQkgdXJsOiB0aGlzLnVybCsnJnRpcGU9Y2FuY2VsUGVuZXRhcGFuUGVyc2VkaWFhbicsDQoNCgkJCSBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7DQoJCQkgdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOw0KCQkJIGRlbEVsZW0oY292ZXIpOw0KCQkJIGlmKHJlc3AuZXJyICE9ICcnKXsNCgkJCQkgYWxlcnQocmVzcC5lcnIpOw0KCQkJIH1lbHNlew0KCQkJCQkgYWxlcnQoIlBlbmV0YXBhbiBkaSBiYXRhbGthbiAiKTsNCgkJCQkJIG1lLkNsb3NlKCk7DQoJCQkgfQ0KDQoJCQl9DQoJCSB9KTsNCg0KCX0sDQoJY2F0YXRhbjpmdW5jdGlvbihpZCl7DQoJCXZhciBtZSA9IHRoaXM7DQoNCg0KCQkJIHZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyJzsNCg0KCQkJJC5hamF4KHsNCgkJCQl0eXBlOidQT1NUJywNCgkJCQlkYXRhOntpZEF3YWwgOiBpZCB9LA0KCQkJICAJdXJsOiB0aGlzLnVybCsnJnRpcGU9Q2F0YXRhbicsDQoJCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7DQoJCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsNCgkJCQkJaWYocmVzcC5lcnIgPT0gJycpew0KDQoJCQkJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOw0KCQkJCQkJYWRkQ292ZXJQYWdlMihjb3Zlciw5OTksdHJ1ZSxmYWxzZSk7DQoJCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcikuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50Ow0KCQkJCQl9ZWxzZXsNCgkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsNCgkJCQkJfQ0KDQoNCgkJCSAgCX0NCgkJCX0pOw0KDQoNCgl9LA0KDQoJZm9ybVBlbWVudWhhbjpmdW5jdGlvbihpZCl7DQoJCXZhciBtZSA9IHRoaXM7DQoNCg0KCQkJIHZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyJzsNCg0KCQkJJC5hamF4KHsNCgkJCQl0eXBlOidQT1NUJywNCgkJCQlkYXRhIDoge2lkIDogaWR9LA0KCQkJICAJdXJsOiB0aGlzLnVybCsnJnRpcGU9Zm9ybVBlbWVudWhhbicsDQoJCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7DQoJCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsNCgkJCQkJaWYocmVzcC5lcnIgPT0gJycpew0KDQoJCQkJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOw0KCQkJCQkJYWRkQ292ZXJQYWdlMihjb3Zlciw5OTksdHJ1ZSxmYWxzZSk7DQoJCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcikuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50Ow0KCQkJCQl9ZWxzZXsNCgkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsNCgkJCQkJfQ0KDQoNCgkJCSAgCX0NCgkJCX0pOw0KDQoNCgl9LA0KCVNhdmVDYXRhdGFuOiBmdW5jdGlvbihpZCl7DQoJCXZhciBtZT0gdGhpczsNCgkJdGhpcy5PbkVycm9yQ2xvc2UgPSBmYWxzZQ0KCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOw0KCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1zaW1wYW4nOw0KCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7DQoJCSQuYWpheCh7DQoJCQl0eXBlOidQT1NUJywNCgkJCWRhdGE6e2lkIDogaWQsDQoJCQkJICBjYXRhdGFuIDogJCgiI2NhdGF0YW4iKS52YWwoKX0sDQoJCQl1cmw6IHRoaXMudXJsKycmdGlwZT1TYXZlQ2F0YXRhbicsDQoJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsNCgkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7DQoJCQkJZGVsRWxlbShjb3Zlcik7DQoJCQkJaWYocmVzcC5lcnI9PScnKXsNCgkJCQkJCW1lLkNsb3NlKCk7DQoJCQkJCQltZS5BZnRlclNpbXBhbigpOw0KCQkJCX1lbHNlew0KCQkJCQlhbGVydChyZXNwLmVycik7DQoJCQkJfQ0KCQkgIAl9DQoJCX0pOw0KCX0sDQoNCglTYXZlQ2FyYVBlbWVudWhhbjogZnVuY3Rpb24oaWQpew0KCQl2YXIgbWU9IHRoaXM7DQoJCXRoaXMuT25FcnJvckNsb3NlID0gZmFsc2UNCgkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsNCgkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3Jtc2ltcGFuJzsNCgkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOw0KCQkkLmFqYXgoew0KCQkJdHlwZTonUE9TVCcsDQoJCQlkYXRhOntjYXJhUGVtZW51aGFuIDogJCgiI2NhcmFQZW1lbnVoYW4iKS52YWwoKX0sDQoJCQl1cmw6IHRoaXMudXJsKycmdGlwZT1TYXZlQ2FyYVBlbWVudWhhbicsDQoJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsNCgkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7DQoJCQkJZGVsRWxlbShjb3Zlcik7DQoJCQkJaWYocmVzcC5lcnI9PScnKXsNCgkJCQkJCXZhciBteU9wdGlvbnMgPSB7DQoJCQkJCQkgICAgdmFsMSA6ICQoIiNjYXJhUGVtZW51aGFuIikudmFsKCkNCgkJCQkJCX07DQoJCQkJCQkkLmVhY2gobXlPcHRpb25zLCBmdW5jdGlvbih2YWwsIHRleHQpIHsNCgkJCQkJCSAgICAkKCcjcGVtZW51aGFuJytpZCkuYXBwZW5kKCBuZXcgT3B0aW9uKHRleHQsdmFsKSApOw0KCQkJCQkJfSk7DQoJCQkJCQltZS5DbG9zZSgpOw0KCQkJCQkJbWUuQWZ0ZXJTaW1wYW4oKTsNCg0KCQkJCX1lbHNlew0KCQkJCQlhbGVydChyZXNwLmVycik7DQoJCQkJfQ0KCQkgIAl9DQoJCX0pOw0KCX0sDQoJZm9ybWF0Q3VycmVuY3k6ZnVuY3Rpb24obnVtKSB7DQoJCW51bSA9IG51bS50b1N0cmluZygpLnJlcGxhY2UoL1wkfFwsL2csJycpOw0KCQlpZihpc05hTihudW0pKQ0KCQludW0gPSAiMCI7DQoJCXNpZ24gPSAobnVtID09IChudW0gPSBNYXRoLmFicyhudW0pKSk7DQoJCW51bSA9IE1hdGguZmxvb3IobnVtKjEwMCswLjUwMDAwMDAwMDAxKTsNCgkJY2VudHMgPSBudW0lMTAwOw0KCQludW0gPSBNYXRoLmZsb29yKG51bS8xMDApLnRvU3RyaW5nKCk7DQoJCWlmKGNlbnRzPDEwKQ0KCQljZW50cyA9ICIwIiArIGNlbnRzOw0KCQlmb3IgKHZhciBpID0gMDsgaSA8IE1hdGguZmxvb3IoKG51bS5sZW5ndGgtKDEraSkpLzMpOyBpKyspDQoJCW51bSA9IG51bS5zdWJzdHJpbmcoMCxudW0ubGVuZ3RoLSg0KmkrMykpKycuJysNCgkJbnVtLnN1YnN0cmluZyhudW0ubGVuZ3RoLSg0KmkrMykpOw0KCQlyZXR1cm4gKCgoc2lnbik\/Jyc6Jy0nKSArICcnICsgbnVtICk7DQoJfSwNCgliYW50dSA6IGZ1bmN0aW9uKGlkKXsNCgkJdmFyIGlkQW5na2EgPSBpZC5yZXBsYWNlKCdKJywnaicpOw0KCQl2YXIgYW5na2EgPSAkKCIjIitpZEFuZ2thKS52YWwoKTsNCgkJJCgiI2JhbnR1IitpZCkudGV4dChwZW5ldGFwYW5SS0JNRFBlcnNlZGlhYW4uZm9ybWF0Q3VycmVuY3koYW5na2EpKTsNCgl9LA0KCWNhbmNlbEtvcmVrc2kgOiBmdW5jdGlvbihpZCl7DQoJCXBlbmV0YXBhblJLQk1EUGVyc2VkaWFhbi5yZWZyZXNoTGlzdCh0cnVlKTsNCgl9LA0KCURvd25sb2FkRXhjZWw6IGZ1bmN0aW9uKCl7DQoJCXZhciBhRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMucHJlZml4KygnX2Zvcm0nKSk7DQoJCXZhciBtZT0gdGhpczsNCgkJdGhpcy5PbkVycm9yQ2xvc2UgPSBmYWxzZQ0KCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOw0KCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1zaW1wYW4nOw0KCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7DQoJCXZhciB1cmwyID0gdGhpcy51cmw7DQoJCSQuYWpheCh7DQoJCQl0eXBlOidQT1NUJywNCgkJCWRhdGE6IHsgamVuaXNLZWdpYXRhbiA6ICQoIiNqZW5pc0tlZ2lhdGFuIikudmFsKCksDQoJCQkJCWMxIAkJCSAgOiAkKCIjcGVuZXRhcGFuUktCTURQZXJzZWRpYWFuU2twZGZtVXJ1c2FuIikudmFsKCksDQoJCQkJCWMgCQkJICA6ICQoIiNwZW5ldGFwYW5SS0JNRFBlcnNlZGlhYW5Ta3BkZm1TS1BEIikudmFsKCksDQoJCQkJCWQgCQkJICA6ICQoIiNwZW5ldGFwYW5SS0JNRFBlcnNlZGlhYW5Ta3BkZm1VTklUIikudmFsKCksDQoJCQkJCWUgCQkJICA6ICQoIiNwZW5ldGFwYW5SS0JNRFBlcnNlZGlhYW5Ta3BkZm1TVUJVTklUIikudmFsKCksDQoJCQkJCWUxIAkJCSAgOiAkKCIjcGVuZXRhcGFuUktCTURQZXJzZWRpYWFuU2twZGZtU0VLU0kiKS52YWwoKSwNCg0KDQoJCQkJCX0sDQoJCQl1cmw6IHRoaXMudXJsKycmdGlwZT1SZXBvcnQnLA0KCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7DQoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOw0KCQkJCWRlbEVsZW0oY292ZXIpOw0KCQkJCWlmKHJlc3AuZXJyPT0nJyl7DQoNCgkJCQkJYUZvcm0uYWN0aW9uPSB1cmwyKycmdGlwZT0nK3Jlc3AuY29udGVudC50bysiJnhscz0xIjsNCgkJCQkJYUZvcm0udGFyZ2V0PSdfYmxhbmsnOw0KCQkJCQlhRm9ybS5zdWJtaXQoKTsNCgkJCQkJYUZvcm0udGFyZ2V0PScnOw0KCQkJCQltZS5DbG9zZSgpOw0KCQkJCX1lbHNlew0KCQkJCQlhbGVydChyZXNwLmVycik7DQoJCQkJfQ0KCQkgIAl9DQoJCX0pOw0KCX0NCgksDQoJZXhjZWw6ZnVuY3Rpb24oKXsNCgkJdmFyIG1lID0gdGhpczsNCgkJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyJzsNCgkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7DQoJCQlpZihtZS5zYXR1YW5fZm9ybT09MCl7Ly9iYXJ1IGRhcmkgc2F0dWFuDQoJCQkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOw0KCQkJfWVsc2V7Ly9iYXJ1IGRhcmkgYmFyYW5nDQoJCQkJYWRkQ292ZXJQYWdlMihjb3Zlciw5OTksdHJ1ZSxmYWxzZSk7DQoJCQl9DQoJCQkkLmFqYXgoew0KCQkJCXR5cGU6J1BPU1QnLA0KCQkJCWRhdGE6JCgnIycrdGhpcy5mb3JtTmFtZSkuc2VyaWFsaXplKCksDQoJCQkgIAl1cmw6IHRoaXMudXJsKycmdGlwZT1leGNlbCcsDQoJCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7DQoJCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsNCgkJCQkJaWYocmVzcC5lcnIgPT0gJycpew0KCQkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsNCgkJCQkJfWVsc2V7DQoJCQkJCQlkZWxFbGVtKGNvdmVyKTsNCgkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsNCgkJCQkJfQ0KDQoJCQkgIAl9DQoJCQl9KTsNCg0KDQoJfSwNCn0pOw0K",
    "size": "18105"
}