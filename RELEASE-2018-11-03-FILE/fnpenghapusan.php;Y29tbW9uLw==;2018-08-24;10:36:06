{
    "namaFile": "common\/fnpenghapusan.php",
    "lastUpdate": "2018-08-24+10:36:06.02",
    "contentFile": "\/ICIgZTEgPSAneyRpc2kyWydlMSddfScgYW5kICI6ICcnOyAKCQkJCQkkS29uZGlzaXVwZGF0ZUJJID0JCSIKCQkJCQkJYTE9ICd7JGlzaTJbJ2ExJ119JyBhbmQgCgkJCQkJCWEgPSAneyRpc2kyWydhJ119JyBhbmQgCgkJCQkJCWIgPSAneyRpc2kyWydiJ119JyBhbmQgCgkJCQkJCWMgPSAneyRpc2kyWydjJ119JyBhbmQgCgkJCQkJCWQgPSAneyRpc2kyWydkJ119JyBhbmQgCgkJCQkJCWUgPSAneyRpc2kyWydlJ119JyBhbmQKCQkJCQkJJGUxXzJiaSAKCQkJCQkJZiA9ICd7JGlzaTJbJ2YnXX0nIGFuZCAKCQkJCQkJZyA9ICd7JGlzaTJbJ2cnXX0nIGFuZCAKCQkJCQkJaCA9ICd7JGlzaTJbJ2gnXX0nIGFuZCAKCQkJCQkJaSA9ICd7JGlzaTJbJ2knXX0nIGFuZCAKCQkJCQkJaiA9ICd7JGlzaTJbJ2onXX0nIGFuZCAKCQkJCQkJbm9yZWcgPSAneyRpc2kyWydub3JlZyddfScgYW5kIAoJCQkJCQl0YWh1biA9ICd7JGlzaTJbJ3RhaHVuJ119JyAKCQkJCQkJIjsJCQkJCQkKCQkJCQkKCQkJCQkvL2hhcHVzIGJpCgkJCQkJJERlbCA9IG15c3FsX3F1ZXJ5KCJkZWxldGUgZnJvbSBidWt1X2luZHVrIHdoZXJlIGlkX2xhbWE9JyRpZGJpX2FzYWwnIik7CgkJCQkJCgkJCQkJaWYoJERlbCl7CgkJCQkJCSRzdGFzZXQ9JGhwc1snc3Rhc2V0J107CgkJCQkJCSRhcXJ5ID0gInVwZGF0ZSBidWt1X2luZHVrIHNldCBzdGF0dXNfYmFyYW5nPScxJyxzdGFzZXQ9JyRzdGFzZXQnLHVpZCA9ICckVUlEJyB3aGVyZSBpZD0nJGlkYmlfYXNhbCcgIjsgLy9lY2hvICI8YnI+YXFyeT0iLiRhcXJ5OwoJCQkJCQkkVXBkYXRlQkkgPSBteXNxbF9xdWVyeSgkYXFyeSk7CgkJCQkJfQoJCQkJCS8qaWYoJFVwZGF0ZUJJKXsKCQkJCQkJaWYoJE1haW4tPk1PRFVMX0pVUk5BTCkganVybmFsUGVuZ2hhcHVzYW4oJGNpZEhQU1skaV0sJycsMyk7CgkJCQkJfSovCgkJCQkJCgkJCQkJCgkJCQkJLy9oYXB1cyBoaXN0cm95X2FzZXQgZGkgdHJpZ2VyIGJ1a3VfaW5kdWtfYWZ0X2RlbCAtLS0tLS0tLS0tLS0tLQoJCQkJCQoJCQkJCS8qbXlzcWxfcXVlcnkoImRlbGV0ZSBmcm9tIHRfaGlzdG9yeV9hc2V0IHdoZXJlIGlkYmk9JyR4aWQnICIpOwoJCQkJCS8vaGFwdXMgdF9hc2V0bGFpbmxhaW4KCQkJCQlteXNxbF9xdWVyeSgiZGVsZXRlIGZyb20gdF9hc2V0bGFpbmxhaW4gd2hlcmUgaWRiaT0nJHhpZCcgIik7CgkJCQkJLy9oYXB1cyBrYXBpdGFsaXNhc2kKCQkJCQlteXNxbF9xdWVyeSgiZGVsZXRlIGZyb20gdF9rYXBpdGFsaXNhc2kgd2hlcmUgaWRiaT0nJHhpZCcgIik7CgkJCQkJKi8KCQkJCQlpZigkVXBkYXRlQkkpewoJCQkJCQkvL3NldCBiZWx1bSBtdXRhc2kgZGkgUGVuZ2hhcHVzYW4gCQkJCQkJCQkKCQkJCQkJJERlbDIgPSBteXNxbF9xdWVyeSgiZGVsZXRlIGZyb20gcGVuZ2hhcHVzYW4gd2hlcmUgaWQ9J3skY2lkSFBTWyRpXX0nIik7CQkJCQkJCQkKCQkJCQl9CgkJCQkJLy9iYXRhbCBqdXJuYWwKCQkJCQlpZigkTWFpbi0+VkVSU0lfTkFNRSAhPSdHQVJVVCcpewoJCQkJCQkkYXFyeSA9ICJkZWxldGUgZnJvbSB0X2p1cm5hbCB3aGVyZSBqbnNfdHJhbnMyID0gNyBhbmQgcmVmaWQ9JyR4aWQnICI7CgkJCQkJCW15c3FsX3F1ZXJ5KCRhcXJ5KTsKCQkJCQl9CgkJCQkJJEluZm8gPSAiPHNjcmlwdD5hbGVydCgnRGF0YSB0ZWxhaCBkaSBiYXRhbGthbiEnICApPC9zY3JpcHQ+IjsKCQkJCX1lbHNlewoJCQkJCQkvLyRBY3QgPSAnJzsKCQkJCQkJJEluZm8gPSAiPHNjcmlwdD5hbGVydCgnJGVycm1zZycpPC9zY3JpcHQ+IjsKCQkJCQkJYnJlYWs7CgkJCQl9CgkJCX0KCQkJCS8vKi8KCQkJCQoJCX0KCQl9Ly9lbmQgZm9yCgl9Cn0KCmZ1bmN0aW9uIFBlbmdoYXB1c2FuX1RhbXBpbEZvcm0oKXsKCWdsb2JhbCAkQWN0LCAkY2lkTnlhLCAkTWFpbjsKCWdsb2JhbCAkZm1JREJBUkFORywgJGZtTk1CQVJBTkcsICRmbU5PUkVHLCAkZm1UQU5HR0FMUEVOR0hBUFVTQU4sICRmbUlzTXV0YXNpLCAkZm1Lb25kaXNpLCAkZm1BcHJhaXNhbCwKCQkJJGZtTm9TSywgJGZtVGdsU0ssICRmbVVSQUlBTiwgJGZtS0VUOwoJZ2xvYmFsICRmbUlEQlVLVUlORFVLLCAkZm1JZEF3YWw7CglnbG9iYWwgJGRva19zY3JpcHRVcGxvYWQsICRkb2tfdGFtcGlsTWVudSwgJGRva190YW1waWxMaXN0OwoJZ2xvYmFsICRmbVRnbEJ1a3U7CgkvL2dsb2JhbCAkRm1FbnRyeUdiciwgJEZvcm1FbnRyeTsKCSRrcml0ZXJpYSA9ICRfUkVRVUVTVFsna3JpdGVyaWEnXTsKCS8vZWNobyAiZm1JREJVS1VJTkRVSz0kZm1JREJVS1VJTkRVSyAsIGZtSWRBd2FsPSRmbUlkQXdhbCI7CgkKCSRmbVRnbEJ1a3UgPSAkZm1UZ2xCdWt1PT0nJz8gJF9QT1NUWydmbVRnbEJ1a3UnXTogJGZtVGdsQnVrdTsKCS8vZWNobyAiZm1Lb25kaXNpID0gJGZtS29uZGlzaSAiOwoJLy9kb2t1bSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoJCgkkaWRiaWRvayA9ICRmbUlkQXdhbCA9PScnIHx8ICRmbUlkQXdhbD09JzAnPyAkZm1JREJVS1VJTkRVSyA6ICRmbUlkQXdhbDsgCgkvL2VjaG8gImZtSURCVUtVSU5EVUs9JGZtSURCVUtVSU5EVUsgLCBmbUlkQXdhbD0kZm1JZEF3YWwgLCBpZGJpZG9rPSRpZGJpZG9rIjsKCQlEb2tfUGFnZSgkaWRiaWRvaywxKTsKCQkkZW50cnlfZG9rPSIKCQkJJGRva19zY3JpcHRVcGxvYWQgCQoJCQkkZG9rX3RhbXBpbE1lbnUJCQkKCQkJJGRva190YW1waWxMaXN0CQoJCQkiOwoJCSRlbnRyeV9kb2sgPSAiCgkJCTx0YWJsZSBzdHlsZT0gJ2JhY2tncm91bmQtY29sb3I6d2hpdGU7d2lkdGg6MzQ1O2JvcmRlci1ib3R0b20tY29sb3I6ICNDQ0M7CgkJCQlib3JkZXItYm90dG9tLXN0eWxlOiBzb2xpZDsgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4OyBib3JkZXItY29sbGFwc2U6IHNlcGFyYXRlOwoJCQkJYm9yZGVyLWxlZnQtY29sb3I6ICNDQ0M7IGJvcmRlci1sZWZ0LXN0eWxlOiBzb2xpZDsgYm9yZGVyLWxlZnQtd2lkdGg6IDFweDsKCQkJCWJvcmRlci1yaWdodC1jb2xvcjogI0NDQztib3JkZXItcmlnaHQtc3R5bGU6IHNvbGlkO2JvcmRlci1yaWdodC13aWR0aDogMXB4OwoJCQkJYm9yZGVyLXRvcC1jb2xvcjogI0NDQztib3JkZXItdG9wLXN0eWxlOiBzb2xpZDtib3JkZXItdG9wLXdpZHRoOiAxcHg7aGVpZ2h0OjEyMCc+CQkKCQkJPHRyIHZhbGlnbj0ndG9wJz48dGQgc3R5bGU9J3BhZGRpbmc6Mic+CQkJCQoJCQkJPGRpdiBzdHlsZT0ncG9zaXRpb246cmVsYXRpdmUnPgoJCQkJJGVudHJ5X2RvawoJCQkJPC9kaXY+CgkJCTwvdGQ+CgkJCTwvdHI+CgkJCTwvdGFibGU+CgkJCQoJCQkiOwkJCgkJJGVudHJ5RG9rID0gZm9ybUVudHJ5QmFzZTIoJ0ZpbGUgRG9rdW1lbiAoTWF4LiA1ME1iKScsJzonLCRlbnRyeV9kb2ssJycsJycsJycsJ3ZhbGlnbj0idG9wIiBoZWlnaHQ9IjI0IicpOwoJCQoJCgkKCS8vZ2FtYmFyIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCS8vJGlkYmlnYW1iYXIgPSAkZm1JREJVS1VJTkRVSzsvLyRmbUlkQXdhbAk9PScnPyAkZm1JREJVS1VJTkRVSzogJGZtSWRBd2FsOwoJLyokaWRiaWdhbWJhciA9ICRmbUlkQXdhbCA9PScnIHx8ICRmbUlkQXdhbD09JzAnPyAkZm1JREJVS1VJTkRVSyA6ICRmbUlkQXdhbDsKCUdicl9Qcm9zZXMoICRpZGJpZ2FtYmFyLCAkX1BPU1RbJ0ZtRW50cnlHYnJfZm1LRVQnXSwgJF9QT1NUWydGbUVudHJ5R2JyX2lkZ2JyJ10gLAoJCQkJCSRfUE9TVFsnRm1FbnRyeUdicl9mbUtFVDInXSwgIkZtRW50cnlHYnIiLCAkX1BPU1RbJ0ZtRW50cnlHYnJfTGltaXRBdyddKTsJLy9lY2hvIjxicj5BY3Q9JEFjdCI7CgkJCQkJCgkkTGFzdEdiciA9ICRBY3QgPT0gJ0ZtRW50cnlHYnIxJzsJCQoJJGVudHJ5R2FtYmFyID0gCgkJZm9ybUVudHJ5QmFzZTIoJ0dhbWJhciBCYXJhbmcgKE1heC4gNTAwS2IpJywnOicsIAoJCQkJCSI8dGFibGUgc3R5bGU9J3Bvc2l0aW9uOiBib3JkZXItY29sbGFwc2U6IHNlcGFyYXRlOyBib3JkZXItY29sb3I6ICNDQ0M7IGJvcmRlci1zdHlsZTogc29saWQ7IGJvcmRlci13aWR0aDogMXB4OwoJCQkJCQliYWNrZ3JvdW5kLWNvbG9yOndoaXRlO3BhZGRpbmc6MDsnPjx0cj48dGQgc3R5bGU9J3BhZGRpbmc6Mic+CgkJCQkJCSIuR2JyX0dldExpc3QoICcnLCAiIiwgIkZtRW50cnlHYnIiICwgJExhc3RHYnIsIAoJCQkJCQkJCTMwMCwgMjAwLCAzMCwgVFJVRSwJMzAwLCAyMDAsIAoJCQkJCQkJCTM2LCAkaWRiaWdhbWJhciwgJF9QT1NUWydGbUVudHJ5R2JyX0xpbWl0QXcnXSApLiIKCQkJCQkJPC90ZD48L3RyPjwvdGFibGU+IgoJCQoJCQkJCQksJycsJycsJycsJ3ZhbGlnbj0idG9wIiBoZWlnaHQ9IjI0IicpOyovCgkkaWRiaWdhbWJhciA9ICRmbUlkQXdhbCA9PScnIHx8ICRmbUlkQXdhbD09JzAnPyAkZm1JREJVS1VJTkRVSyA6ICRmbUlkQXdhbDsKCQkvL2VjaG8gIiRjdXJySUQgJGZtSWRBd2FsICRpZGJpZG9rICRpZGJpZ2FtYmFyIDxicj4iOwoJCUdicl9Qcm9zZXMoIAoJCQkJJGlkYmlnYW1iYXIsICRfUE9TVFsnRm1FbnRyeUdicl9mbUtFVCddLCAkX1BPU1RbJ0ZtRW50cnlHYnJfaWRnYnInXSAsCgkJCQkkX1BPU1RbJ0ZtRW50cnlHYnJfZm1LRVQyJ10sICJGbUVudHJ5R2JyIiwgJF9QT1NUWydGbUVudHJ5R2JyX0xpbWl0QXcnXQoJCQkpOwkvL2VjaG8iPGJyPkFjdD0kQWN0IjsKCSRGb3JtTmFtZTEgPSAnRm1FbnRyeUdicic7CgkkZW50cnlHYW1iYXIgPQkJCgkJZm9ybUVudHJ5QmFzZTIoCgkJCQkJJ0dhbWJhciBCYXJhbmcgKE1heC4gNTAwS2IpJywnOicsIAoJCQkJCSI8YSBuYW1lPSdGbUVudHJ5R2JyJyBzdHlsZT0ncG9zaXRpb246cmVsYXRpdmU7dG9wOi0xMDA7Jz48L2E+Ii4KCQkJCQkiPHNjcmlwdCBzcmM9J2pzL2pxdWVyeS5qcycgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz48L3NjcmlwdD4iLgoJCQkJCSI8aW5wdXQgdHlwZT0naGlkZGVuJyBpZD0nRm9ybU5hbWUnIG5hbWU9J0Zvcm1OYW1lJyB2YWx1ZT0nJz4iLgoJCQkJCSI8aW5wdXQgdHlwZT0naGlkZGVuJyBpZD0naWRiaScgbmFtZT0naWRiaScgdmFsdWU9JyRpZGJpZ2FtYmFyJz4iLgoJCQkJCWNyZWF0ZUltZ0VudHJ5KCRGb3JtTmFtZTEsICczMDAnLCAnMjAwJywgJzMwJywgMSkJCQkJCQoJCQkJCSwnJywnJywnJywndmFsaWduPSJ0b3AiIGhlaWdodD0iMjQiJyk7CgkvL2lmKCRBY3QgPT0gIlBlbmdoYXB1c2FuX0VkaXQiKXsJCgkkdmZtSXNNdXRhc2kgPSAkQWN0ID09ICJQZW5naGFwdXNhbl9FZGl0IiA\\/ICIiIDokZm1XSUxTS1BEOwoJCX1lbHNlewoJCQkkZm1XSUxTS1BEID0gJGlzaVsnYTEnXS4iLiIuJGlzaVsnYSddLiIuIi4kaXNpWydiJ10uIi4iLiRpc2lbJ2MnXS4iLiIuJGlzaVsnZCddLiIuIi4kaXNpWydlJ10uIi4iLiRpc2lbJ2UxJ107CgkJCSRmbVdJTFNLUEQgPSAkZm1XSUxTS1BEID09ICIuLi4uLiIgPyAiIiA6JGZtV0lMU0tQRDsKCQl9CgkJJGZtSURCQVJBTkcgPSAkaXNpWydmJ10uIi4iLiRpc2lbJ2cnXS4iLiIuJGlzaVsnaCddLiIuIi4kaXNpWydpJ10uIi4iLiRpc2lbJ2onXTsgCgkJJGZtSURCQVJBTkcgPSAkZm1JREJBUkFORyA9PSAiLi4uLiIgPyAiIjokZm1JREJBUkFORzsKCQkkZm1OTUJBUkFORyA9ICJ7JG5tQmFyYW5nWydubV9iYXJhbmcnXX0iOwoJCSRmbVRBSFVOQU5HR0FSQU4gPSAieyRpc2lbJ3RhaHVuJ119IjsKCQkkZm1UQUhVTlBFUk9MRUhBTiA9ICJ7JGlzaVsndGhuX3Blcm9sZWhhbiddfSI7CgkJJGZtTk9SRUcgPSAkaXNpWydub3JlZyddOwkJCQkKCQkkZm1Lb25kaXNpID0gJGlzaVsna29uZGlzaSddOwoJCQoJCSRmbUlEQlVLVUlORFVLPSAkaXNpWydpZCddOwoJCSRmbUlkQXdhbCA9ICRpc2lbJ2lkYXdhbCddOwoJCSRmbUlzTXV0YXNpID0gMDsKCQkkZm1UZ2xCdWt1ID0gJGlzaVsndGdsX2J1a3UnXTsKCQkvLyRnYW1iYXIgPSAkaXNpWydnYW1iYXInXTsgLy8gZ2V0IGRhdGEgZ2FtYmFyIGRlZmF1bHQgdXRrIG11dGFzaQoJCQoJCS8vJGZtSUQgPSAieyRpc2lbJ2lkJ119IjsKCQkKCX0KCS8qZWxzZXsKCQkkQWN0PScnOwoJCSRJbmZvID0gIjxzY3JpcHQ+YWxlcnQoJyIuJGVycm1zZy4iJyk8L3NjcmlwdD4iOwkJCQkKCX0qLwoJCn0KCmZ1bmN0aW9uIFBlbmdoYXB1c2FuX0dldEZvcm1FbnRyeSgpewoJZ2xvYmFsICRmbUlEQkFSQU5HLCAkZm1OTUJBUkFORywgJGZtTk9SRUcsICRmbVRBTkdHQUxQRU5HSEFQVVNBTiwgJGZtVVJBSUFOLCAkZm1LRVQsICRmbUlzTXV0YXNpOwoJZ2xvYmFsICRmbUtvbmRpc2ksICRmbU5vU0ssICRmbVRnbFNLLCAkZm1HYW1iYXIsICRmbUdhbWJhcl9vbGQsICRmbUFwcmFpc2FsOwoJZ2xvYmFsICRBY3QsICRWaWV3RW50cnksICRWaWV3TGlzdCwgJEFjdDIsICRJbmZvOwoJZ2xvYmFsICRQZW5naGFwdXNhbl9CYXJ1LCAkY2lkQkksICRjaWRIUFMsICRmbUlELCAkZm1UQUhVTkFOR0dBUkFOLCAkZm1UQUhVTlBFUk9MRUhBTiwgJGZtSURCVUtVSU5EVUssICRmbVdJTFNLUEQ7CglnbG9iYWwgJFBnLCAkU1BnLCAkSW5mbywkY2VrLCAkTWFpbjsKCWdsb2JhbCAkZm1HYW1iYXJfQkk7CglnbG9iYWwgJGNpZE55YSwgJGVycm1zZzsKCWdsb2JhbCAkZm1JZEF3YWwsICRmbVRnbEJ1a3U7CgkvL2VjaG8gIjxicj5mbWlzbXV0YXNpPSIuJGZtSXNNdXRhc2k7CgkKCQoJLy9lY2hvICd0ZXMyJzsJZWNobyAkQWN0OwoJLy9nZXQgSUQ6IGlmIEVkaXQgLT4gSUQgPSBJRCBocCwgamlrYSBUYW1iYWhFZGl0IChiYXJ1KSAtPiBpZCA9IGlkIEJpCQoJaWYoJEFjdCA9PSAiUGVuZ2hhcHVzYW5fRWRpdCIpewkKCQkkY2lkTnlhID0gJGNpZEhQUzsKCX1lbHNlewoJCWlmIChlbXB0eSgkY2lkQkkpKXsKCQkJJGNpZE55YVswXSA9ICRfUE9TVFsnaWRiaSddOwkJCgkJfWVsc2V7CgkJCSRjaWROeWEgPSAkY2lkQkk7CQkKCQl9Cgl9CQoJLy8kY2VrIC49ICc8YnI+IGNvdW50IGNpZCBueWE9ICcuIGNvdW50KCRjaWROeWEpOwoJLy9lY2hvICRjaWROeWFbMF07Cgkka3JpdGVyaWEgPSAkX1JFUVVFU1RbJ2tyaXRlcmlhJ107CglpZihjb3VudCgkY2lkTnlhKSAhPSAxICYmICRBY3Q9PSJQZW5naGFwdXNhbl9FZGl0Iil7CgkJJEFjdD0nJzsKCQkkZXJybXNnPSAnUGlsaWggaGFueWEgc2F0dSBJRCB5YW5nIGRhcGF0IGRpIFViYWghJzsKCX1lbHNlaWYoIHRhYmxlX2dldF92YWx1ZSgic2VsZWN0IHN1ZGFobXV0YXNpIGZyb20gcGVuZ2hhcHVzYW4gd2hlcmUgaWQ9J3skY2lkTnlhWzBdfScgIiwgInN1ZGFobXV0YXNpIikgPT0gMSAmJiAkQWN0PT0iUGVuZ2hhcHVzYW5fRWRpdCIgJiYgJGtyaXRlcmlhPT0xKXsgLy9raHVzdXMgdXRrIG11dGFzaQoJCSRlcnJtc2cgPSAnRGF0YSBzdWRhaCBtdXRhc2kgdGlkYWsgZGFwYXQgZGllZGl0ISc7CQkKCX0KCS8vYW1iaWwgZGF0YSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoJaWYoJEFjdD09IlBlbmdoYXB1c2FuX0VkaXQifHwgJEFjdCA9PSAiUGVuZ2hhcHVzYW5fVGFtYmFoRWRpdCIgKXsKCQkKCQlpZiAoJGVycm1zZyA9PSAnJyl7CgkJCWlmKCRBY3Q9PSJQZW5naGFwdXNhbl9FZGl0Iil7CgkJCQlQZW5naGFwdXNhbl9HZXREYXRhKCRjaWROeWFbMF0pOwoJCQl9ZWxzZXsKCQkJCVBlbmdoYXB1c2FuX0dldERhdGFGcm9tQkkoJGNpZE55YVswXSk7CgkJCX0JCQkKCQkJCgkJCS8vZWNobyAiZm1pZGJnID0gJGZtSURCQVJBTkciOwoJCQkvL2VjaG8gImZtS29uZGlzaSA9ICRmbUtvbmRpc2kgIjsKCQl9Cgl9CgkKCQoJLy90YW1waWwgZm9ybSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoJaWYgKCRlcnJtc2cgPT0gJycpewoJCQoJCgkvL2lmKCRBY3Q9PSJQZW5naGFwdXNhbl9TaW1wYW4iIHx8ICRBY3Q9PSJQZW5naGFwdXNhbl9CYXJ1IiB8fCAkQWN0PT0iVGFtYmFoIiB8fCAkQWN0PT0iUGVuZ2hhcHVzYW5fVGFtYmFoRWRpdCJ8fCAKCS8vCSRBY3Q9PSJBZGQifHwgKCRBY3Q9PSJQZW5naGFwdXNhbl9FZGl0IiAmJiAhZW1wdHkoJGZtSUQpKSB8fCAkQWN0Mj09J1BlbmdoYXB1c2FuJyl7CgkvL2VjaG8gJ3RlczQnOwoJCgkJJEZvcm1FbnRyeSA9IFBlbmdoYXB1c2FuX1RhbXBpbEZvcm0oKTsKCQkvL2dhbWJhciAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgkKCX07CgkKCWlmICgkZXJybXNnICE9ICcnKXsKCQkkQWN0PScnOwoJCS8vJFBhZ2VNb2RlPTE7Ly9saXN0CgkJJFZpZXdMaXN0PTE7CgkJJFZpZXdFbnRyeT0gMDsKCQkkSW5mbyA9ICI8c2NyaXB0PmFsZXJ0KCciLiRlcnJtc2cuIicpOyB3aW5kb3cuY2xvc2UoKTwvc2NyaXB0PiI7Cgl9CgkKCSRjZWsgPSAnJzsKCXJldHVybiAkRm9ybUVudHJ5LiRjZWs7Cn0KCmZ1bmN0aW9uIFBlbmdoYXB1c2FuX2RhZnRhcigkY2V0YWs9IEZBTFNFICl7CglnbG9iYWwgJE1haW4sICRjZWssICRQZywgJFNQZywgJGNpZEhQUyA7CglnbG9iYWwgJEhhbEhQUywkZm1LRVBFTUlMSUtBTjsJCglnbG9iYWwgJElTSTUsICRJU0k2LCAkSVNJNywgJElTSTEwLCAkSVNJMTIsICRJU0kxNTsKCWdsb2JhbCAkZm1VUlVTQU4sJGZtVU5JVCwkZm1TS1BELCAkZm1TVUJVTklULCRmbVNFS1NJOwoJZ2xvYmFsICRmbUJBUkFOR0NBUklIUFMsICRmbVRhaHVuUGVyb2xlaGFuLCAkU1NQZywgJGptbERhdGFIUFM7CglnbG9iYWwgJGZtRmlsdFRobkhhcHVzOwoJZ2xvYmFsICRvZHIxLCAkQWNzRHNjMTsKCWdsb2JhbCAkZm1GaWx0VGhuQnVrdTsKCQoKCS8va29uZGlzaSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQkKCSRLb25kaXNpID0gZ2V0S29uZGlzaVNLUEQoKTsJCgoJJG11dGFzaSA9ICRfUkVRVUVTVFsnbXV0YXNpJ109PSIiPzA6JF9SRVFVRVNUWydtdXRhc2knXTsKCSRLb25kaXNpIC49ICIgYW5kIG11dGFzaSA9ICckbXV0YXNpJyAiOwoJCglpZighZW1wdHkoJGZtQkFSQU5HQ0FSSUhQUykpewoJCSRLb25kaXNpIC49ICIgYW5kIHJlZl9iYXJhbmcubm1fYmFyYW5nIGxpa2UgJyUkZm1CQVJBTkdDQVJJSFBTJScgIjsKCX0JCgkKCSRrb2RlX2JhcmFuZyA9ICRfUkVRVUVTVFsna29kZV9iYXJhbmcnXTsKCWlmKCFlbXB0eSgka29kZV9iYXJhbmcpKXsKCQkkS29uZGlzaSAuPSAiIGFuZCBjb25jYXQoZiwnLicsZywnLicsaCwnLicsaSwnLicsaiwnLicpIGxpa2UgJyRrb2RlX2JhcmFuZyUnICI7Cgl9CgoJJGtyaXRlcmlhTSA9ICRfUkVRVUVTVFsna3JpdGVyaWFNJ107CglpZighZW1wdHkoJGtyaXRlcmlhTSkpIHsKCQlzd2l0Y2goJGtyaXRlcmlhTSl7CgkJCS8vY2FzZSAnMScgOiAkS29uZGlzaSAuPSAiIGFuZCBtdXRhc2k9JzAnICAiOyBicmVhazsKCQkJLy9jYXNlICcyJyA6ICRLb25kaXNpIC49ICIgYW5kIG11dGFzaT0nMScgIjsgYnJlYWs7CgkJCWNhc2UgJzMnIDogJEtvbmRpc2kgLj0gIiBhbmQgc3VkYWhtdXRhc2k9MCAiOyBicmVhazsvLyRLb25kaXNpIC49ICIgYW5kIG11dGFzaT0nMScgYW5kIHN1ZGFobXV0YXNpPTAgIjsgYnJlYWs7CgkJCWNhc2UgJzQnIDogJEtvbmRpc2kgLj0gIiBhbmQgc3VkYWhtdXRhc2k9MSAiOyBicmVhazsvLyRLb25kaXNpIC49ICIgYW5kIG11dGFzaT0nMScgYW5kIHN1ZGFobXV0YXNpPTEgIjsgYnJlYWs7CgkJCS8vY2FzZSAnNScgOiAkS29uZGlzaSAuPSAiIGFuZCBtdXRhc2k9JzInICAiOyBicmVhazsKCQl9CgkJCgl9CgkKCQoJCgkvL2lmKCFlbXB0eSgkZm1UYWh1blBlcm9sZWhhbikpewoJLy8JJEtvbmRpc2kgLj0gIiBhbmQgcGVuZ2hhcHVzYW4udGhuX3Blcm9sZWhhbiA9ICckZm1UYWh1blBlcm9sZWhhbicgIjsKCS8vfQoJc3dpdGNoKCRTU1BnKXsKCQljYXNlICcwMyc6IGJyZWFrOwoJCWNhc2UgJzA0JzogJEtvbmRpc2kgLj0gIiBhbmQgZj0nMDEnICI7IGJyZWFrOwoJCWNhc2UgJzA1JzogJEtvbmRpc2kgLj0gIiBhbmQgZj0nMDInICI7IGJyZWFrOwoJCWNhc2UgJzA2JzogJEtvbmRpc2kgLj0gIiBhbmQgZj0nMDMnICI7IGJyZWFrOwoJCWNhc2UgJzA3JzogJEtvbmRpc2kgLj0gIiBhbmQgZj0nMDQnICI7IGJyZWFrOwoJCWNhc2UgJzA4JzogJEtvbmRpc2kgLj0gIiBhbmQgZj0nMDUnICI7IGJyZWFrOwoJCWNhc2UgJzA5JzogJEtvbmRpc2kgLj0gIiBhbmQgZj0nMDYnICI7IGJyZWFrOwkKCQljYXNlICcxMCc6ICRLb25kaXNpIC49ICIgYW5kIGY9JzA3JyAiOyBicmVhazsJCgl9CglpZighZW1wdHkoJGZtRmlsdFRobkhhcHVzKSl7ICRLb25kaXNpIC49ICIgYW5kIHllYXIodGdsX3BlbmdoYXB1c2FuKSA9ICAkZm1GaWx0VGhuSGFwdXMiOyB9CglpZighZW1wdHkoJGZtRmlsdFRobkJ1a3UpKXsgJEtvbmRpc2kgLj0gIiBhbmQgeWVhcih0Z2xfYnVrdSkgPSAgJGZtRmlsdFRobkJ1a3UiOyB9CgkkaWRfdHVqdWFuID0gJF9SRVFVRVNUWydpZF90dWp1YW4nXTsKCWlmKCFlbXB0eSgkaWRfdHVqdWFuKSl7CgkJJGlkbCA9IG15c3FsX2ZldGNoX2FycmF5KG15c3FsX3F1ZXJ5KCJzZWxlY3QgaWRfbGFtYSBmcm9tIGJ1a3VfaW5kdWsgd2hlcmUgSWQgPSAkaWRfdHVqdWFuIikpOwoJCSRpZF9sYW1hID0gJGlkbFsnaWRfbGFtYSddOwoJCSRLb25kaXNpIC49ICIgYW5kIGlkX2J1a3VpbmR1ayA9ICckaWRfbGFtYScgIjsKCX0KCSRpZF9iYXJhbmcgPSAkX1JFUVVFU1RbJ2lkX2JhcmFuZyddOwoJaWYoIWVtcHR5KCRpZF9iYXJhbmcpKXsgJEtvbmRpc2kgLj0gIiBhbmQgaWRfYnVrdWluZHVrID0gJyRpZF9iYXJhbmcnIjsgfQoJCgkvL3VydXRrYW4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgkkQXNjMSA9ICFlbXB0eSgkQWNzRHNjMSk\/ICIgZGVzYyAiOiIiOwoJaWYoIWVtcHR5KCRvZHIxKSl7JFVydXRrYW4gLj0gIiAkb2RyMSAkQXNjMSwgIjt9CgkkT3JkZXJieSA9ICIgb3JkZXIgYnkgJFVydXRrYW4gYTEsYSxiLGMsZCxlLGUxLGYsZyxoLGksaix0aG5fcGVyb2xlaGFuLG5vcmVnICI7CgoJCgkvL2ptbCBkYXRhICAmIGxpbWl0IGhhbCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCSRhcXJ5ID0gInNlbGVjdCB2X3BlbmdoYXB1c2FuX2JpLiosIHJlZl9iYXJhbmcubm1fYmFyYW5nIGFzIG5tX2JhcmFuZyAKCQlmcm9tIHZfcGVuZ2hhcHVzYW5fYmkgIGxlZnQgam9pbiByZWZfYmFyYW5nIHVzaW5nKGYsZyxoLGksaikJCgkJd2hlcmUgJEtvbmRpc2kgJE9yZGVyYnkgIjsgLy9lY2hvICIkYXFyeSA8YnI+IjsKCgoJJFFyeSA9IG15c3FsX3F1ZXJ5KCRhcXJ5KTsKCSRqbWxEYXRhSFBTID0gbXlzcWxfbnVtX3Jvd3MoJFFyeSk7Ly9lY2hvICIkam1sRGF0YUhQUyI7CglpZigkY2V0YWs9PWZhbHNlICl7CgkJJExpbWl0SGFsSFBTID0gIiBsaW1pdCAiLigoJEhhbEhQUyoxKSAtIDEpICogJE1haW4tPlBhZ2VQZXJIYWwuIiwiLiRNYWluLT5QYWdlUGVySGFsOwkKCX0KCi8vbGlzdCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQokYXFyeSAuPSAiICRMaW1pdEhhbEhQUyAiOyAvL2VjaG8gImFxcnk9Ii4kYXFyeTsKCiRRcnkgPSBteXNxbF9xdWVyeSgkYXFyeSk7CiRubz0kTWFpbi0+UGFnZVBlckhhbCAqICgoJEhhbEhQUyoxKSAtIDEpOwokY2I9MDsKJGptbFRhbXBpbEhQUyA9IDA7CiR0b3RoYWw9IDA7CiR0b3RoYWxOaWxhaVBlcm9sZWg9IDA7CiR0b3RoYWxOaWxhaVN1c3V0PSAwOwokY2xHYXJpcyA9ICRjZXRhayA\/ICJnYXJpc2NldGFrIiA6ICJnYXJpc2RhZnRhciI7CiRMaXN0QmFyYW5nSFBTID0gIiI7CndoaWxlICgkaXNpID0gbXlzcWxfZmV0Y2hfYXJyYXkoJFFyeSkpewoJJGptbFRhbXBpbEhQUysrOwoJJG5vKys7Cgkka2RCYXJhbmcgPSAkaXNpWydmJ10uJGlzaVsnZyddLiRpc2lbJ2gnXS4kaXNpWydpJ10uJGlzaVsnaiddOwoJJGtkS2VsQmFyYW5nID0gJGlzaVsnZiddLiRpc2lbJ2cnXS4iMDAiOwkKCQoJLy8kbm1LZWxCYXJhbmcgPSBteXNxbF9mZXRjaF9hcnJheShteXNxbF9xdWVyeSgic2VsZWN0ICogZnJvbSByZWZfYmFyYW5nIHdoZXJlIGNvbmNhdChmLGcsaCk9JyRrZEtlbEJhcmFuZyciKSk7CgkkY2xSb3cgPSAkbm8gJSAyID09IDAgPyJyb3cxIjoicm93MCI7CgkKCSRLb25kaXNpS0lCID0gIgl3aGVyZSBhMT0gJ3skaXNpWydhMSddfScgYW5kIGEgPSAneyRpc2lbJ2EnXX0nIGFuZCAJYyA9ICd7JGlzaVsnYyddfScgYW5kIGQgPSAneyRpc2lbJ2QnXX0nIGFuZCBlID0gJ3skaXNpWydlJ119JyBhbmQgZTEgPSAneyRpc2lbJ2UxJ119JyBhbmQgCgkJCQlmID0gJ3skaXNpWydmJ119JyBhbmQgZyA9ICd7JGlzaVsnZyddfScgYW5kIGggPSAneyRpc2lbJ2gnXX0nIGFuZCBpID0gJ3skaXNpWydpJ119JyBhbmQgaiA9ICd7JGlzaVsnaiddfScgYW5kIAoJCQkJdGFodW4gPSAneyRpc2lbJ3RhaHVuJ119JyBhbmQgbm9yZWcgPSAneyRpc2lbJ25vcmVnJ119JyAgIjsKCQoJaWYoJFNTUGc9PScwMycpewoJCVBlbmF0YXVzYWhhYW5fQklHZXRLaWIoJGlzaVsnZiddLCAkS29uZGlzaUtJQiApOwoJfWVsc2V7CgkJUGVuYXRhdXNhaGFhbl9CSUdldEtpYl9oYXB1cygkaXNpWydmJ10sICRLb25kaXNpS0lCICk7CQoJfQoJaWYoJGlzaVsnaGFwdXNfZGFyaSddPT0yKXsKCQkkaGFwdXNfZGFyaSA9ICdQZW1pbmRhaHRhbmdhbicgOwoJfWVsc2VpZigkaXNpWydoYXB1c19kYXJpJ109PTMpewoJCSRoYXB1c19kYXJpID0gJ1BlbXVzbmFoYW4nIDsKCX1lbHNlaWYoJGlzaVsnaGFwdXNfZGFyaSddPT00KXsKCQkkaGFwdXNfZGFyaSA9ICdHYW50aSBydWdpJyA7Cgl9ZWxzZXsKCQkkaGFwdXNfZGFyaT0nUGVuYXRhdXNhaGFhbic7Cgl9CglpZigkU1NQZyE9JzAzJyl7CgkJJHBlbmdoYXB1c2FuZGFyaSA9ICIgLzxicj4iLiRoYXB1c19kYXJpOwoJfWVsc2V7CgkJJHBlbmdoYXB1c2FuZGFyaSA9ICIiOwoJfQoJCQoJaWYgKCRpc2lbJ2UnXSAhPSAnMDAnICkgewogICAgICAgICRhc3RyID0gInNlbGVjdCBubV9za3BkIGZyb20gcmVmX3NrcGQgd2hlcmUgY29uY2F0KGMxLGMsZCxlLGUxKT0nIi4gJGlzaVsnYzEnXSAgLiAkaXNpWydjJ10gLiAkaXNpWydkJ10gLiAkaXNpWydlJ10gLiAiMDAwJyI7IC8vZWNobyAiPGJyPmFzdHIgPSAiLiRhc3RyOwogICAgICAgICRubVNVQlVOSVQgPSB0YWJsZV9nZXRfdmFsdWUoJGFzdHIsICdubV9za3BkJyk7CiAgICB9CiAgICBpZiAoJGlzaVsnZTEnXSAhPSAnMDAnICYmICRpc2lbJ2UxJ10gIT0gJzAwMCcgKSB7CiAgICAgICAgJGFzdHIgPSAic2VsZWN0IG5tX3NrcGQgZnJvbSByZWZfc2twZCB3aGVyZSBjb25jYXQoYzEsYyxkLGUsZTEpPSciLiAkaXNpWydjMSddIC4gJGlzaVsnYyddIC4gJGlzaVsnZCddIC4gJGlzaVsnZSddIC4kaXNpWydlMSddIC4gIiciOyAvL2VjaG8gIjxicj5hc3RyID0gIi4kYXN0cjsKICAgICAgICAkbm1TRUtTSSA9IHRhYmxlX2dldF92YWx1ZSgkYXN0ciwgJ25tX3NrcGQnKTsKICAgIH0KCSAKCQoJJElTSTE1ID0gJGlzaVsna2V0X2hhcHVzJ109PScnPyAnLSc6ICRpc2lbJ2tldF9oYXB1cyddIDsKCSRJU0kxNSAuPSAiIC88YnI+Ii5UZ2xJbmQoJGlzaVsndGdsX3BlbmdoYXB1c2FuJ10pOwkKCS8vJElTSTE1IC49ICIgLzxicj4iLnRhbXBpbE5tU3ViVW5pdDMoJGlzaSk7CgkkSVNJMTUgLj0gIjxicj4iLiRubVNVQlVOSVQuIiAvPGJyPiIuJG5tU0VLU0k7CgkkSVNJMTUgLj0gJHBlbmdoYXB1c2FuZGFyaTsKCQoJLy9lY2hvICJpPSIuJGlzaVsnc3VkYWhtdXRhc2knXTsKCS8vJEtyaXRlcmlhSGFwdXMgPSAkaXNpWydzdWRhaG11dGFzaSddPT0gMCA\/ICRNYWluLT5BcktyaXRlcmlhSGFwdXNbJGlzaVsnbXV0YXNpJ11dWzFdOiAiIFN1ZGFoIE11dGFzaSAiOwkKCXN3aXRjaCAoJGlzaVsnbXV0YXNpJ10pewoJCWNhc2UgJzAnOiAkS3JpdGVyaWFIYXB1cz0nUGVuZ2hhcHVzYW4nOyBicmVhazsJCgkJY2FzZSAnMSc6ICRLcml0ZXJpYUhhcHVzPSAkaXNpWydzdWRhaG11dGFzaSddPT0gMD8gJ011dGFzaSc6ICdTdWRhaCBNdXRhc2knOyBicmVhazsJCgkJY2FzZSAnMic6ICRLcml0ZXJpYUhhcHVzPSAkaXNpWydzdWRhaG11dGFzaSddPT0gMD8gJ1JlY2xhc3MnOiAnU3VkYWggUmVjbGFzcyc7IGJyZWFrOwkKCX0KCSR0YW1waWxObyA9ICRjZXRhaz8KCQkiPHRkIGNsYXNzPVwiJGNsR2FyaXNcIiBhbGlnbj1jZW50ZXIgY29sc3Bhbj0yPiRubzwvdGQ+CSIKCQk6ICI8dGQgY2xhc3M9XCIkY2xHYXJpc1wiIGFsaWduPWNlbnRlcj4kbm88L3RkPgoJCQk8dGQgY2xhc3M9XCIkY2xHYXJpc1wiIGFsaWduPWNlbnRlcj48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgaWQ9XCJjYkhQUyRjYlwiIG5hbWU9XCJjaWRIUFNbXVwiIHZhbHVlPVwieyRpc2lbJ2lkJ119XCIgb25DbGljaz1cImlzQ2hlY2tlZCh0aGlzLmNoZWNrZWQpO1wiIC8+Jm5ic3A7PC90ZD4iOwoJJHNrZGJyZyA9ICJ7JGlzaVsnZiddfS57JGlzaVsnZyddfS57JGlzaVsnaCddfS57JGlzaVsnaSddfS57JGlzaVsnaiddfSI7CgkkdGFtcGlsS2RicmcgPSAiPHRkIGNsYXNzPVwiJGNsR2FyaXNcIiBhbGlnbj1jZW50ZXI+CgkJCQk8YSBocmVmPSdpbmRleC5waHA\/UGc9UFImU1BnPWJyZ19jZXRhayZieWdldD0xJmNpZD17JGlzaVsnaWRfYnVrdWluZHVrJ119JyB0YXJnZXQ9J19ibGFuaycgID4kc2tkYnJnPC9hPgoJCQk8L3RkPiI7CgkvKmlmKCRTU1BnPT0nMDQnIG9yICRTU1BnPT0nMDYnIG9yICRTU1BnPT0nMDcnIG9yICRTU1BnPT0nMDknICl7CgkJJHRhbXBpbE1lcmsgPSAnQWxhbWF0JzsKCX1lbHNlewoJCSR0YW1waWxNZXJrID0gJGM7CQoJfSovCQkKCQoJCgkvKiRwbGggPSAgbXlzcWxfZmV0Y2hfYXJyYXkobXlzcWxfcXVlcnkoCgkJInNlbGVjdCAqIGZyb20gdjJfcGVuZ2hhcHVzYW5fcGVsaWhhcmEgd2hlcmUgaWRoYXB1cz0iLiRpc2lbJ2lkJ10KCSkpOwoJJHBnbSA9ICBteXNxbF9mZXRjaF9hcnJheShteXNxbF9xdWVyeSgKCQkic2VsZWN0ICogZnJvbSB2Ml9wZW5naGFwdXNhbl9wZW5nYW1hbiB3aGVyZSBpZGhhcHVzPSIuJGlzaVsnaWQnXQoJKSk7CgkkYmlheWFsYWluID0gJHBsaFsnYmlheWFfcGVtZWxpaGFyYWFuJ10rJHBnbVsnYmlheWFfcGVuZ2FtYW5hbiddOwoJKi8KCQoJJHF1ZXJ5ID0gInNlbGVjdCBJZCxjMSxjLGQsZSxlMSxmLGcsaCxpLGosdGFodW4sbm9yZWcgZnJvbSBidWt1X2luZHVrIHdoZXJlIGlkX2xhbWEgPSB7JGlzaVsnaWRfYnVrdWluZHVrJ119IjsJCQoJJHF1ZSA9IG15c3FsX3F1ZXJ5KCRxdWVyeSk7IAoJJGk9MDsKCSRpZGJyZ3R1anVhbiA9Jyc7Cgkkc2twZHR1anVhbiA9Jyc7Cgkkbm1za3BkdHVqdWFuID0nJzsKCSRrZGJyZ3R1anVhbiA9Jyc7CgkkdGFodW50dWp1YW4gPScnOwoJJG5vcmVndHVqdWFuID0nJzsJCgkKCXdoaWxlKCRpc2l0ID0gbXlzcWxfZmV0Y2hfYXJyYXkoJHF1ZSkpewoJCSRiciA9ICRpID09IDA\/Jyc6Jzxicj4nOwoJCSRpZGJyZ3R1anVhbiAuPSAkYnIuJGlzaXRbJ0lkJ107CgkJJHNrcGR0dWp1YW4gLj0gJGJyLiJ7JGlzaXRbJ2MnXX0ueyRpc2l0WydkJ119LnskaXNpdFsnZSddfS57JGlzaXRbJ2UxJ119IjsKCQkka2Ricmd0dWp1YW4gLj0gJGJyLiJ7JGlzaXRbJ2YnXX0ueyRpc2l0WydnJ119LnskaXNpdFsnaCddfS57JGlzaXRbJ2knXX0ueyRpc2l0WydqJ119IjsKCQkkdGFodW50dWp1YW4gLj0gJGJyLiRpc2l0Wyd0YWh1biddOwoJCSRub3JlZ3R1anVhbiAuPSAkYnIuJGlzaXRbJ25vcmVnJ107CgkJJGdldGJnciA9IHRhYmxlX2dldF9yZWMoInNlbGVjdCBubV9iYXJhbmcgZnJvbSByZWZfYmFyYW5nIHdoZXJlIGNvbmNhdChmLCcuJyxnLCcuJyxoLCcuJyxpLCcuJyxqKT0nJGtkYnJndHVqdWFuJyIpOwoJCSRubWJhcmFuZyA9ICRnZXRiZ3JbJ25tX2JhcmFuZyddOwoJCSRzdD1teXNxbF9mZXRjaF9hcnJheShteXNxbF9xdWVyeSgic2VsZWN0IG5tX3NrcGQgZnJvbSByZWZfc2twZCB3aGVyZSBjMT0nIi4kaXNpdFsnYzEnXS4iJyBhbmQgYz0nIi4kaXNpdFsnYyddLiInIGFuZCBkPSciLiRpc2l0WydkJ10uIicgYW5kIGU9JzAwJyBhbmQgZTE9JzAwMCciKSk7CgkJJG5tc2twZHR1anVhbiAuPSAkaSA9PSAwPyAkYnIuJHN0WydubV9za3BkJ10gOiAnLycuJGJyLiRzdFsnbm1fc2twZCddOwoJCQoJCQoJCSRpKys7Cgl9CgkKCQoJCgkkYmlheWFwbGggPSAkaXNpWydiaWF5YV9wZW1lbGloYXJhYW4nXSA+IDAgPyBudW1iZXJfZm9ybWF0KCAkaXNpWydiaWF5YV9wZW1lbGloYXJhYW4nXSAsIDIsICcsJywgJy4nKTogJyc7CgkkYmlheWFwZ20gPSAkaXNpWydiaWF5YV9wZW5nYW1hbmFuJ10gPiAwID8gbnVtYmVyX2Zvcm1hdCggJGlzaVsnYmlheWFfcGVuZ2FtYW5hbiddICwgMiwgJywnLCAnLicpOiAnJzsKCQoJJGJpYXlhcGxoMiA9ICRpc2lbJ2JpYXlhX3BlbWVsaWhhcmFhbiddID4gMCA\\/UGc9JFBnJlNQZz0kU1BnJlNTUGc9JFNTUGckbXV0IikuIgoJPC90ZD4KCTwvdHI+IjsKCQp9CQoKCXJldHVybiAiJExpc3RCYXJhbmdIUFNfaGVhZGVyCgkkTGlzdEJhcmFuZ0hQUwoJJExpc3RCYXJhbmdIUFNfSGxtCgkiOwp9CgpmdW5jdGlvbiBQZW5naGFwdXNhbl9kYWZ0YXJfbXV0YXNpKCl7CgkvL2RhZnRhciB1dGsgbXV0YXNpCglnbG9iYWwgJE1haW4sICRjZWssICRQZywgJFNQZywgJGNpZEJJLCAkZm1JRExhbWE7Ly8kaWRCSSA7CglnbG9iYWwgJEhhbEhQUywkZm1LRVBFTUlMSUtBTjsKCWdsb2JhbCAkZm1QZW5naGFwdXNhblVSVVNBTiwgJGZtUGVuZ2hhcHVzYW5TS1BELCAkZm1QZW5naGFwdXNhblVOSVQsICRmbVBlbmdoYXB1c2FuU1VCVU5JVCwkZm1QZW5naGFwdXNhblNFS1NJOwoJZ2xvYmFsICRJU0k1LCAkSVNJNiwgJElTSTcsICRJU0kxMCwgJElTSTEyLCAkSVNJMTU7CglnbG9iYWwgJGZtS0lCLCAkZm1GaWx0VGhuSGFwdXMsICRBY3NEc2MxLCAkb2RyMTsKCQoJJGZtS0VQRU1JTElLQU4gPSAkTWFpbi0+REVGX0tFUEVNSUxJS0FOOyAKCQkKCS8vZ2V0IGxpbWl0IC0tLS0tLS0tLS0tLS0KCSRMaW1pdEhhbEhQUyA9ICIgbGltaXQgIi4oKCRIYWxIUFMqMSkgLSAxKSAqICRNYWluLT5QYWdlUGVySGFsLiIsIi4kTWFpbi0+UGFnZVBlckhhbDsKCS8va29uZGlzaSAtLS0tLS0tLS0tLS0tLS0KCWlmKCRNYWluLT5VUlVTQU4pewoJCSRLb25kaXNpQzEgPSAkZm1QZW5naGFwdXNhblVSVVNBTiA9PSAiIiA\/ICIiOiIgYW5kIGMxPSckZm1QZW5naGFwdXNhblVSVVNBTicgIjsKCX0KCSRLb25kaXNpQyA9ICRmbVBlbmdoYXB1c2FuU0tQRCA9PSAiIiA\/ICIiOiIgYW5kIGM9JyRmbVBlbmdoYXB1c2FuU0tQRCcgIjsKCSRLb25kaXNpRCA9ICRmbVBlbmdoYXB1c2FuVU5JVCA9PSAiIiA\/ICIiOiIgYW5kIGQ9JyRmbVBlbmdoYXB1c2FuVU5JVCcgIjsKCSRLb25kaXNpRSA9ICRmbVBlbmdoYXB1c2FuU1VCVU5JVCA9PSAiIiA\/ICIiOiIgYW5kIGU9JyRmbVBlbmdoYXB1c2FuU1VCVU5JVCcgIjsKCSRLb25kaXNpRTEgPSAkZm1QZW5naGFwdXNhblNFS1NJID09ICIiID8gIiI6IiBhbmQgZTE9JyRmbVBlbmdoYXB1c2FuU0VLU0knICI7CgkkS29uZGlzaSA9ICcgYW5kIG11dGFzaT0xIGFuZCBzdWRhaG11dGFzaT0wICc7CglpZiAoIWVtcHR5KCRmbUtJQikpeyAkS29uZGlzaSAuPSAiIGFuZCBmID0gJyRmbUtJQiciOwl9CglpZiAoIWVtcHR5KCRmbUZpbHRUaG5IYXB1cykpeyAkS29uZGlzaSAuPSAiIGFuZCB5ZWFyKHRnbF9wZW5naGFwdXNhbikgPSAkZm1GaWx0VGhuSGFwdXMiOwl9CgkKCSRLb25kaXNpID0gIiBhMT0nJGZtS0VQRU1JTElLQU4nIGFuZCBhPSd7JE1haW4tPlByb3ZpbnNpWzBdfScgJEtvbmRpc2lDMSAkS29uZGlzaUMgJEtvbmRpc2lEICRLb25kaXNpRSAkS29uZGlzaUUxICIuJEtvbmRpc2k7CgkvL3VydXQsYXFyeSAtLS0tLS0tLS0tLS0tCgkkQXNjMSA9ICFlbXB0eSgkQWNzRHNjMSk\/ICIgZGVzYyAiOiIiOwoJaWYoIWVtcHR5KCRvZHIxKSl7JFVydXQgLj0gIiAkb2RyMSAkQXNjMSwgIjt9CgkkVXJ1dCAuPSAnIGExLGEsYixjLGQsZSxlMSxmLGcsaCxpLGosdGFodW4sIG5vcmVnICc7CQoJLy8kYXFyeT0ic2VsZWN0ICogZnJvbSBwZW5naGFwdXNhbiB3aGVyZSAkS29uZGlzaSBvcmRlciBieSAkVXJ1dCAiOyBlY2hvICI8YnI+cXJ5ID0gJGFxcnkiOwoJLy8kYXFyeT0ic2VsZWN0ICogZnJvbSB2X3BlbmdoYXB1c2FuX2JpIHdoZXJlICRLb25kaXNpIG9yZGVyIGJ5ICRVcnV0ICI7IGVjaG8gIjxicj5xcnkgPSAkYXFyeSI7CgkkYXFyeSA9ICJzZWxlY3Qgdl9wZW5naGFwdXNhbl9iaS4qLCByZWZfYmFyYW5nLm5tX2JhcmFuZyBhcyBubV9iYXJhbmcgCgkJZnJvbSB2X3BlbmdoYXB1c2FuX2JpICBsZWZ0IGpvaW4gcmVmX2JhcmFuZyB1c2luZyhmLGcsaCxpLGopCQoJCXdoZXJlICRLb25kaXNpIG9yZGVyIGJ5ICRVcnV0ICI7Ly8gZWNobyAiPGJyPnFyeSA9ICRhcXJ5IjsKCS8vZ2V0IGptbCBkYXRhCgkvL2VjaG8gJGFxcnk7CgkkcXJ5PSBteXNxbF9xdWVyeSgkYXFyeSk7Cgkkam1sRGF0YUhQUyA9IG15c3FsX251bV9yb3dzKCRxcnkpOwoJCgkvL3NldCBsaXN0CgkkTGlzdEJhcmFuZ0hQUz0nJzsKCSRhcXJ5IC49ICcgJy4kTGltaXRIYWxIUFM7IC8vJGNlayAuPSI8YnI+cXJ5ID0gJGFxcnkiOwoJJHFyeT0gbXlzcWxfcXVlcnkoJGFxcnkpOwkKCSRjYj0wOwoJJG5vPSRNYWluLT5QYWdlUGVySGFsICogKCgkSGFsSFBTKjEpIC0gMSk7CQoJd2hpbGUgKCRpc2kgPSBteXNxbF9mZXRjaF9hcnJheSgkcXJ5KSl7CgkJJGptbFRhbXBpbEhQUysrOwoJCSRubysrOwoJCSRrZEJhcmFuZyA9ICRpc2lbJ2YnXS4kaXNpWydnJ10uJGlzaVsnaCddLiRpc2lbJ2knXS4kaXNpWydqJ107CgkJJG5tQmFyYW5nID0gbXlzcWxfZmV0Y2hfYXJyYXkobXlzcWxfcXVlcnkoInNlbGVjdCAqIGZyb20gcmVmX2JhcmFuZyB3aGVyZSBjb25jYXQoZixnLGgsaSxqKT0nJGtkQmFyYW5nJyIpKTsKCQkkY2xSb3cgPSAkbm8gJSAyID09IDAgPyJyb3cxIjoicm93MCI7CgkJCgkJLy9lY2hvICIgaWRCaSA9ICIuJGNpZEJJWzBdOwoJCWlmICgkaXNpWydpZF9idWt1aW5kdWsnXSA9PSAkY2lkQklbMF0pewoJCQkkZm1JRExhbWEgPSAkY2lkQklbMF07Ly8kaWRCSSA9ICRjaWRCSVswXTsvL2VjaG8gIiBpZEJpID0gIi4kaWRCSTsKCQkJJENoZWNrZWQ9ICdjaGVja2VkPSIiJzsvLwllY2hvICdjaGVja2VkJzsKCQl9ZWxzZSB7CgkJCSRDaGVja2VkID0gJyc7CgkJfQoJCQoJCQoJCSRLb25kaXNpS0lCID0gIgl3aGVyZSBhMT0gJ3skaXNpWydhMSddfScgYW5kIGEgPSAneyRpc2lbJ2EnXX0nIGFuZCAJYyA9ICd7JGlzaVsnYyddfScgYW5kIGQgPSAneyRpc2lbJ2QnXX0nIGFuZCBlID0gJ3skaXNpWydlJ119JyBhbmQgIGUxID0gJ3skaXNpWydlMSddfScgYW5kIAoJCQkJZiA9ICd7JGlzaVsnZiddfScgYW5kIGcgPSAneyRpc2lbJ2cnXX0nIGFuZCBoID0gJ3skaXNpWydoJ119JyBhbmQgaSA9ICd7JGlzaVsnaSddfScgYW5kIGogPSAneyRpc2lbJ2onXX0nIGFuZCAKCQkJCXRhaHVuID0gJ3skaXNpWyd0YWh1biddfScgYW5kIG5vcmVnID0gJ3skaXNpWydub3JlZyddfScgICI7CQkKCQlQZW5hdGF1c2FoYWFuX0JJR2V0S2liKCRpc2lbJ2YnXSwgJEtvbmRpc2lLSUIgKTsJCQoJCSRrZXRocHMgPSAkaXNpWydrZXRfaGFwdXMnXSA9PScnID8gJycgOiAkaXNpWydrZXRfaGFwdXMnXS4nIC88YnI+JzsKCQkka2V0YmkgPSAkSVNJMTUgPT0gJy0nIHx8ICRJU0kxNSA9PSAnJyA\/ICcnIDogJElTSTE1LicgLzxicj4nOwoJCSRJU0kxNSAJPSAka2V0aHBzLiRrZXRiaS5UZ2xJbmQoJGlzaVsndGdsX3BlbmdoYXB1c2FuJ10pOwkKCQkkSVNJMTUgLj0gdGFtcGlsTm1TdWJVbml0KCRpc2kpOwoJCQoJCS8vJElTSTE1IC49ICd0ZXMnOwoJCQkKCQkvL2VjaG8gImk9Ii4kaXNpWydzdWRhaG11dGFzaSddOwoJCSRza2RicmcgPSAieyRpc2lbJ2YnXX0ueyRpc2lbJ2cnXX0ueyRpc2lbJ2gnXX0ueyRpc2lbJ2knXX0ueyRpc2lbJ2onXX0iOwoJCSRrZGJyZyA9ICI8dGQgY2xhc3M9XCJHYXJpc0RhZnRhclwiIGFsaWduPWNlbnRlcj4KCQkJCTxhIGhyZWY9J2luZGV4LnBocD9QZz1QUiZTUGc9YnJnX2NldGFrJmJ5Z2V0PTEmY2lkPXskaXNpWydpZF9idWt1aW5kdWsnXX0nIHRhcmdldD0nX2JsYW5rJyAgPiRza2Ricmc8L2E+CgkJCTwvdGQ+IjsKCQkkS3JpdGVyaWFIYXB1cyA9ICRpc2lbJ3N1ZGFobXV0YXNpJ109PSAwID8gJE1haW4tPkFyS3JpdGVyaWFIYXB1c1skaXNpWydtdXRhc2knXV1bMV06ICIgU3VkYWggTXV0YXNpICI7CgkJJExpc3RCYXJhbmdIUFMgLj0gIgkKCQkJPHRyIGNsYXNzPSckY2xSb3cnPgoJCQk8dGQgY2xhc3M9XCJHYXJpc0RhZnRhclwiIGFsaWduPWNlbnRlciB3aWR0aD0nNTAnPiRubzwvdGQ+CQkJCQkKCQkJPHRkIGNsYXNzPVwiR2FyaXNEYWZ0YXJcIiBhbGlnbj1jZW50ZXIgd2lkdGg9JzIwJz4JCQkKCQkJCTxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBpZD1cImNiJGNiXCIgbmFtZT1cImNpZEJJW11cIiB2YWx1ZT1cInskaXNpWydpZF9idWt1aW5kdWsnXX1cIiAgJENoZWNrZWQKCQkJCXRpdGxlPSdNdXRhc2kgS29kZSBCYXJhbmcgJGtkQmFyYW5nLnskaXNpWyd0aG5fcGVyb2xlaGFuJ119LnskaXNpWydub3JlZyddfScKCQkJCW9uQ2xpY2s9XCJDaGVja0FsbDMoJGptbERhdGFIUFMsJ2NiJywkY2IpOyBpc0NoZWNrZWQodGhpcy5jaGVja2VkKTsKCQkJCWFkbWluRm9ybS5hY3Rpb249Jz9QZz0kUGcmU1BnPSRTUGcjRk9STUVOVFJZJzthZG1pbkZvcm0uQWN0LnZhbHVlPSdUYW1iYWhFZGl0JzthZG1pbkZvcm0uQmFydS52YWx1ZT0nMSc7YWRtaW5Gb3JtLnN1Ym1pdCgpXCIgLz4KCQkJPC90ZD4KCQkJJGtkYnJnCgkJCTx0ZCBjbGFzcz1cIkdhcmlzRGFmdGFyXCIgYWxpZ249Y2VudGVyPnskaXNpWydub3JlZyddfTwvdGQ+CgkJCQoJCQkKCQkJPHRkIGNsYXNzPVwiR2FyaXNEYWZ0YXJcIj57JGlzaVsnbm1fYmFyYW5nJ119PC90ZD4JCQkKCQkJPHRkIGNsYXNzPVwiR2FyaXNEYWZ0YXJcIj4kSVNJNTwvdGQ+CgkJCTx0ZCBjbGFzcz1cIkdhcmlzRGFmdGFyXCI+JElTSTY8L3RkPgoJCQkJCQkKCQkJPHRkIGNsYXNzPVwiR2FyaXNEYWZ0YXJcIiBhbGlnbj1jZW50ZXI+eyRpc2lbJ3Robl9wZXJvbGVoYW4nXX08L3RkPgoJCQk8dGQgY2xhc3M9XCJHYXJpc0RhZnRhclwiIGFsaWduPWNlbnRlcj4iLiRNYWluLT5Lb25kaXNpQmFyYW5nWyRpc2lbJ2tvbmRpc2knXS0xXVsxXS4iPC90ZD4JCQkKCQkJPHRkIGNsYXNzPVwiR2FyaXNEYWZ0YXJcIj4iLiRLcml0ZXJpYUhhcHVzLiI8L3RkPgoJCQkKCQkJPHRkIGNsYXNzPVwiR2FyaXNEYWZ0YXJcIiBhbGlnbj1yaWdodD4iLm51bWJlcl9mb3JtYXQoICRpc2lbJ2ptbF9oYXJnYSddICwgMiwgJywnLCAnLicpLiI8L3RkPgoJCQk8dGQgY2xhc3M9XCJHYXJpc0RhZnRhclwiIGFsaWduPXJpZ2h0PiIubnVtYmVyX2Zvcm1hdCggJGlzaVsnYXByYWlzYWwnXSAsIDIsICcsJywgJy4nKS4iPC90ZD4KCQkJCgkJCTx0ZCBjbGFzcz1cIkdhcmlzRGFmdGFyXCI+Ii4kaXNpWydub3NrJ10uIjwvdGQ+CgkJCTx0ZCBjbGFzcz1cIkdhcmlzRGFmdGFyXCIgd2lkdGg9JzcwJz4iLmlmZW1wdHlUZ2woVGdsSW5kKCRpc2lbJ3RnbHNrJ10pLCctJykuIjwvdGQ+CgkJCQoJCQk8dGQgY2xhc3M9XCJHYXJpc0RhZnRhclwiPiIuJElTSTE1LiI8L3RkPgoJCQk8L3RyPgoJCQkiOwkKCQkKCQkkY2IrKzsJCgkJCgl9CgkKCS8vc2V0IGhlYWRlcgoJJGhlYWRlcj0KCSI8dHI+Cgk8dGggY2xhc3M9XCJ0aDAyXCIgY29sc3Bhbj0nNCcgd2lkdGg9JzUwJz5Ob21vcjwvdGg+Cgk8dGggY2xhc3M9XCJ0aDAyXCIgY29sc3Bhbj0nMyc+U3Blc2lmaWthc2kgQmFyYW5nPC90aD4JCgk8dGggY2xhc3M9XCJ0aDAxXCIgcm93c3Bhbj0nMicgd2lkdGg9JzUwJyA+VGFodW4gUGVyb2xlaCBhbjwvdGg+CQoJPHRoIGNsYXNzPVwidGgwMVwiIHJvd3NwYW49JzInIHdpZHRoPSc1MCc+S29uZGlzaSBCYXJhbmcgKEIsS0IsUkIpPC90aD4KCTx0aCBjbGFzcz1cInRoMDFcIiByb3dzcGFuPScyJyB3aWR0aD0nNTAnPktyaXRlcmlhPC90aD4KCTx0aCBjbGFzcz1cInRoMDJcIiBjb2xzcGFuPScyJz5IYXJnYTwvdGg+Cgk8dGggY2xhc3M9XCJ0aDAyXCIgY29sc3Bhbj0nMic+U0sgQnVwYXRpPC90aD4KCTx0aCBjbGFzcz1cInRoMDFcIiByb3dzcGFuPScyJz5LZXRlcmFuZ2FuLzxicj5UZ2wuIFBlbmdoYXB1c2FuPC90aD4JCgk8L3RyPgoJPHRyPgoJPHRoIGNsYXNzPVwidGgwMVwiIHdpZHRoPSczMCcgY29sc3Bhbj0yPk5vLjwvdGg+Cgk8IS0tPHRoIGNsYXNzPVwidGgwMVwiIHdpZHRoPScxMCc+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJ0b2dnbGVcIiB2YWx1ZT1cIlwiIG9uQ2xpY2s9XCJjaGVja0FsbCgkam1sRGF0YSk7XCI8L3RoPi0tPgoJPHRoIGNsYXNzPVwidGgwMVwiIHdpZHRoPScxMDAnPktvZGUgPGJyPkJhcmFuZzwvdGg+Cgk8dGggY2xhc3M9XCJ0aDAxXCIgd2lkdGg9JzMwJz5SZWcuPC90aD4KCTx0aCBjbGFzcz1cInRoMDFcIiB3aWR0aD1cIlwiPk5hbWEgLyBKZW5pcyBCYXJhbmc8L3RoPgoJPHRoIGNsYXNzPVwidGgwMVwiIHdpZHRoPVwiNzBcIj5NZXJrIC8gVGlwZSZuYnNwPC90aD4KCTx0aCBjbGFzcz1cInRoMDFcIiB3aWR0aD0nNzAnPk5vLiBTZXJ0aWZpa2F0IC8gTm8uIFBhYnJpayAvIE5vLiBDaGFzaXMgLyBOby4gTWVzaW48L3RoPgoJPHRoIGNsYXNzPVwidGgwMVwiID5QZXJvbGVoYW48L3RoPgoJPHRoIGNsYXNzPVwidGgwMVwiID5BcHByYWlzYWwgPC90aD4KCTx0aCBjbGFzcz1cInRoMDFcIiA+Tm8uIDwvdGg+Cgk8dGggY2xhc3M9XCJ0aDAxXCIgPlRnbC4gPC90aD4KCTwvdHI+IjsKCS8qIjxUUj4KCQk8VEggY2xhc3M9XCJ0aDAxXCIgY29sc3Bhbj0yIHdpZHRoPSc3MCc+Tm88L1REPgkJCgkJPFRIIGNsYXNzPVwidGgwMVwiIHN0eWxlPSd3aWR0aDo4MCc+S29kZSBCYXJhbmc8L1RIPgoJCTxUSCBjbGFzcz1cInRoMDFcIiBzdHlsZT0nd2lkdGg6NjAnPk5vbW9yPGJyPlJlZ2lzdGVyPC9USD4KCQk8VEggY2xhc3M9XCJ0aDAxXCI+TmFtYSBCYXJhbmc8L1RIPgoJCTxUSCBjbGFzcz1cInRoMDFcIiBzdHlsZT0nd2lkdGg6NjAnPlRhaHVuPGJyPlBlcm9sZWhhbjwvVEg+CgkJPFRIIGNsYXNzPVwidGgwMVwiIHN0eWxlPSd3aWR0aDo4MCc+VGFuZ2dhbDxicj5QZW5naGFwdXNhbjwvVEg+CgkJPFRIIGNsYXNzPVwidGgwMVwiIHN0eWxlPSd3aWR0aDoxODAnPlVyYWlhbjwvVEg+CgkJPFRIIGNsYXNzPVwidGgwMVwiIHN0eWxlPSd3aWR0aDoxODAnPktldGVyYW5nYW48L1RIPgoJPC9UUj4iOwoJKi8KCQoJLy9zZXQgaGFsYW1hbgoJJGhhbCA9IAoJIjx0cj4KCQk8dGQgY2xhc3M9XCJHYXJpc0RhZnRhclwiIGNvbHNwYW49MTUgYWxpZ249Y2VudGVyPgoJCSIuSGFsYW1hbigkam1sRGF0YUhQUywkTWFpbi0+UGFnZVBlckhhbCwiSGFsSFBTIikuIgoJCTwvdGQ+Cgk8L3RyPiI7CgkKCS8vc2V0IGtvbmRpc2kKCQoJLy90YW1waWwKCSRjZWsgPSAnJzsKCXJldHVybgoJIjx0YWJsZSB3aWR0aD1cIjEwMCVcIiBoZWlnaHQ9XCIxMDAlXCIgY2xhc3M9XCJrb3B0YWJsZVwiIEJPUkRFUj0xPgoJJGhlYWRlcgoJJExpc3RCYXJhbmdIUFMKCSRoYWwKCTwvdGFibGU+Ii4kY2VrOwoKCQp9CgpmdW5jdGlvbiBQZW5naGFwdXNhbl9DZWtkYXRhQ3V0b2ZmKCRtb2RlPSdpbnNlcnQnLCRpZD0nJywkdGdsPScnLCRpZGJpPScnKXsKZ2xvYmFsICRNYWluOwoKJHVzcmxldmVsPSRNYWluLT5Vc2VyTGV2ZWw7CiRlcnJtc2c9Jyc7CmlmICgkdXNybGV2ZWwhPScxJyl7CgkKCiR0Z2xjdXRvZmY9JE1haW4tPlRBSFVOX0NVVE9GRi4iLTEyLTMxIjsKCnN3aXRjaCAoJG1vZGUpewoJCgpjYXNlICdpbnNlcnQnOnsKCWlmICgkdGdsPCR0Z2xjdXRvZmYpICRlcnJtc2c9IlRnbC4gcGVuZ2hhcHVzYW4oIi4kdGdsLiIpIGxlYmloIGtlY2lsIGRhcmkgIHRnbC4gY3V0IG9mZiAoIi4kdGdsY3V0b2ZmLiIpIjsKCgkJIAkKCWJyZWFrOwp9CmNhc2UgJ2VkaXQnOnsKLy8JaWYgKCR0Z2w8JHRnbGN1dG9mZikgJGVycm1zZz0iRGF0YSBkZW5nYW4gdGdsLiBwZW5naGFwdXNhbiBsZWJpaCBrZWNpbCBkYXJpIHRnbC4gIi4kdGdsY3V0b2ZmOyAKCQkJLy9jZWsgdGFuZ2dhbCBidWt1CglpZiAoJGVycm1zZz09JycpewoJCQkkZGF0YXggPSBteXNxbF9mZXRjaF9hcnJheShteXNxbF9xdWVyeSgKCQkJCSJzZWxlY3QgKiBmcm9tIHBlbmdoYXB1c2FuIHdoZXJlIGlkPSckaWQnIikpOwoJCQkkdGdsPSRkYXRheFsndGdsX3BlbmdoYXB1c2FuJ107CQkKCQkJaWYgKCR0Z2w8PSR0Z2xjdXRvZmYpCgkJCQkkZXJybXNnPSJEYXRhIGRlbmdhbiB0Z2wuIHBlbmdoYXB1c2FuKCIuJHRnbC4iKSBsZWJpaCBrZWNpbCBkYXJpIHRnbC4gY3V0IG9mZiAoIi4kdGdsY3V0b2ZmLiIpIHRpZGFrIGRhcGF0IGRpZWRpdCI7Cgl9CgkKCWJyZWFrOwp9CmNhc2UgJ2hhcHVzJzp7CglpZiAoJGVycm1zZz09JycpewoJCQkkZGF0YXggPSBteXNxbF9mZXRjaF9hcnJheShteXNxbF9xdWVyeSgKCQkJCSJzZWxlY3QgKiBmcm9tIHBlbmdoYXB1c2FuIHdoZXJlIGlkPSckaWQnIikpOwoJCQkkdGdsPSRkYXRheFsndGdsX3BlbmdoYXB1c2FuJ107CQoJCQlpZiAoJHRnbDw9JHRnbGN1dG9mZikKCQkJCSRlcnJtc2c9IkRhdGEgZGVuZ2FuIHRnbC4gcGVuZ2hhcHVzYW4oIi4kdGdsLiIpIGxlYmloIGtlY2lsIGRhcmkgdGdsLiBjdXQgb2ZmICgiLiR0Z2xjdXRvZmYuIikgdGlkYWsgZGFwYXQgZGloYXB1cyI7Cgl9CgkKCWJyZWFrOwp9CQp9Cgp9CnJldHVybiAkZXJybXNnOwoKfQoKPz4=",
    "size": "72857"
}