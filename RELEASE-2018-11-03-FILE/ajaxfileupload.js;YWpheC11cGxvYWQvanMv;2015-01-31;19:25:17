{
    "namaFile": "ajax-upload\/js\/ajaxfileupload.js",
    "lastUpdate": "2015-01-31+19:25:17.00",
    "contentFile": "DQpqUXVlcnkuZXh0ZW5kKHsNCgkNCg0KICAgIGNyZWF0ZVVwbG9hZElmcmFtZTogZnVuY3Rpb24oaWQsIHVyaSkNCgl7DQoJCQkvL2NyZWF0ZSBmcmFtZQ0KICAgICAgICAgICAgdmFyIGZyYW1lSWQgPSAnalVwbG9hZEZyYW1lJyArIGlkOw0KICAgICAgICAgICAgdmFyIGlmcmFtZUh0bWwgPSAnPGlmcmFtZSBpZD0iJyArIGZyYW1lSWQgKyAnIiBuYW1lPSInICsgZnJhbWVJZCArICciIHN0eWxlPSJwb3NpdGlvbjphYnNvbHV0ZTsgdG9wOi05OTk5cHg7IGxlZnQ6LTk5OTlweCInOw0KCQkJaWYod2luZG93LkFjdGl2ZVhPYmplY3QpDQoJCQl7DQogICAgICAgICAgICAgICAgaWYodHlwZW9mIHVyaT09ICdib29sZWFuJyl7DQoJCQkJCWlmcmFtZUh0bWwgKz0gJyBzcmM9IicgKyAnamF2YXNjcmlwdDpmYWxzZScgKyAnIic7DQoNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgZWxzZSBpZih0eXBlb2YgdXJpPT0gJ3N0cmluZycpew0KCQkJCQlpZnJhbWVIdG1sICs9ICcgc3JjPSInICsgdXJpICsgJyInOw0KDQogICAgICAgICAgICAgICAgfQkNCgkJCX0NCgkJCWlmcmFtZUh0bWwgKz0gJyAvPic7DQoJCQlqUXVlcnkoaWZyYW1lSHRtbCkuYXBwZW5kVG8oZG9jdW1lbnQuYm9keSk7DQoNCiAgICAgICAgICAgIHJldHVybiBqUXVlcnkoJyMnICsgZnJhbWVJZCkuZ2V0KDApOwkJCQ0KICAgIH0sDQogICAgY3JlYXRlVXBsb2FkRm9ybTogZnVuY3Rpb24oaWQsIGZpbGVFbGVtZW50SWQsIGRhdGEpDQoJew0KCQkvL2NyZWF0ZSBmb3JtCQ0KCQl2YXIgZm9ybUlkID0gJ2pVcGxvYWRGb3JtJyArIGlkOw0KCQl2YXIgZmlsZUlkID0gJ2pVcGxvYWRGaWxlJyArIGlkOw0KCQl2YXIgZm9ybSA9IGpRdWVyeSgnPGZvcm0gIGFjdGlvbj0iIiBtZXRob2Q9IlBPU1QiIG5hbWU9IicgKyBmb3JtSWQgKyAnIiBpZD0iJyArIGZvcm1JZCArICciIGVuY3R5cGU9Im11bHRpcGFydC9mb3JtLWRhdGEiPjwvZm9ybT4nKTsJDQoJCWlmKGRhdGEpDQoJCXsNCgkJCWZvcih2YXIgaSBpbiBkYXRhKQ0KCQkJew0KCQkJCWpRdWVyeSgnPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iJyArIGkgKyAnIiB2YWx1ZT0iJyArIGRhdGFbaV0gKyAnIiAvPicpLmFwcGVuZFRvKGZvcm0pOw0KCQkJfQkJCQ0KCQl9CQkNCgkJdmFyIG9sZEVsZW1lbnQgPSBqUXVlcnkoJyMnICsgZmlsZUVsZW1lbnRJZCk7DQoJCXZhciBuZXdFbGVtZW50ID0galF1ZXJ5KG9sZEVsZW1lbnQpLmNsb25lKCk7DQoJCWpRdWVyeShvbGRFbGVtZW50KS5hdHRyKCdpZCcsIGZpbGVJZCk7DQoJCWpRdWVyeShvbGRFbGVtZW50KS5iZWZvcmUobmV3RWxlbWVudCk7DQoJCWpRdWVyeShvbGRFbGVtZW50KS5hcHBlbmRUbyhmb3JtKTsNCg0KDQoJCQ0KCQkvL3NldCBhdHRyaWJ1dGVzDQoJCWpRdWVyeShmb3JtKS5jc3MoJ3Bvc2l0aW9uJywgJ2Fic29sdXRlJyk7DQoJCWpRdWVyeShmb3JtKS5jc3MoJ3RvcCcsICctMTIwMHB4Jyk7DQoJCWpRdWVyeShmb3JtKS5jc3MoJ2xlZnQnLCAnLTEyMDBweCcpOw0KCQlqUXVlcnkoZm9ybSkuYXBwZW5kVG8oJ2JvZHknKTsJCQ0KCQlyZXR1cm4gZm9ybTsNCiAgICB9LA0KDQogICAgYWpheEZpbGVVcGxvYWQ6IGZ1bmN0aW9uKHMpIHsNCiAgICAgICAgLy8gVE9ETyBpbnRyb2R1Y2UgZ2xvYmFsIHNldHRpbmdzLCBhbGxvd2luZyB0aGUgY2xpZW50IHRvIG1vZGlmeSB0aGVtIGZvciBhbGwgcmVxdWVzdHMsIG5vdCBvbmx5IHRpbWVvdXQJCQ0KICAgICAgICBzID0galF1ZXJ5LmV4dGVuZCh7fSwgalF1ZXJ5LmFqYXhTZXR0aW5ncywgcyk7DQogICAgICAgIHZhciBpZCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpICAgICAgICANCgkJdmFyIGZvcm0gPSBqUXVlcnkuY3JlYXRlVXBsb2FkRm9ybShpZCwgcy5maWxlRWxlbWVudElkLCAodHlwZW9mKHMuZGF0YSk9PSd1bmRlZmluZWQnP2ZhbHNlOnMuZGF0YSkpOw0KCQl2YXIgaW8gPSBqUXVlcnkuY3JlYXRlVXBsb2FkSWZyYW1lKGlkLCBzLnNlY3VyZXVyaSk7DQoJCXZhciBmcmFtZUlkID0gJ2pVcGxvYWRGcmFtZScgKyBpZDsNCgkJdmFyIGZvcm1JZCA9ICdqVXBsb2FkRm9ybScgKyBpZDsJCQ0KICAgICAgICAvLyBXYXRjaCBmb3IgYSBuZXcgc2V0IG9mIHJlcXVlc3RzDQogICAgICAgIGlmICggcy5nbG9iYWwgJiYgISBqUXVlcnkuYWN0aXZlKysgKQ0KCQl7DQoJCQlqUXVlcnkuZXZlbnQudHJpZ2dlciggImFqYXhTdGFydCIgKTsNCgkJfSAgICAgICAgICAgIA0KICAgICAgICB2YXIgcmVxdWVzdERvbmUgPSBmYWxzZTsNCiAgICAgICAgLy8gQ3JlYXRlIHRoZSByZXF1ZXN0IG9iamVjdA0KICAgICAgICB2YXIgeG1sID0ge30gICANCiAgICAgICAgaWYgKCBzLmdsb2JhbCApDQogICAgICAgICAgICBqUXVlcnkuZXZlbnQudHJpZ2dlcigiYWpheFNlbmQiLCBbeG1sLCBzXSk7DQogICAgICAgIC8vIFdhaXQgZm9yIGEgcmVzcG9uc2UgdG8gY29tZSBiYWNrDQogICAgICAgIHZhciB1cGxvYWRDYWxsYmFjayA9IGZ1bmN0aW9uKGlzVGltZW91dCkNCgkJewkJCQ0KCQkJdmFyIGlvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZnJhbWVJZCk7DQogICAgICAgICAgICB0cnkgDQoJCQl7CQkJCQ0KCQkJCWlmKGlvLmNvbnRlbnRXaW5kb3cpDQoJCQkJew0KCQkJCQkgeG1sLnJlc3BvbnNlVGV4dCA9IGlvLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQuYm9keT9pby5jb250ZW50V2luZG93LmRvY3VtZW50LmJvZHkuaW5uZXJIVE1MOm51bGw7DQogICAgICAgICAgICAgICAgCSB4bWwucmVzcG9uc2VYTUwgPSBpby5jb250ZW50V2luZG93LmRvY3VtZW50LlhNTERvY3VtZW50P2lvLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQuWE1MRG9jdW1lbnQ6aW8uY29udGVudFdpbmRvdy5kb2N1bWVudDsNCgkJCQkJIA0KCQkJCX1lbHNlIGlmKGlvLmNvbnRlbnREb2N1bWVudCkNCgkJCQl7DQoJCQkJCSB4bWwucmVzcG9uc2VUZXh0ID0gaW8uY29udGVudERvY3VtZW50LmRvY3VtZW50LmJvZHk\/aW8uY29udGVudERvY3VtZW50LmRvY3VtZW50LmJvZHkuaW5uZXJIVE1MOm51bGw7DQogICAgICAgICAgICAgICAgCXhtbC5yZXNwb25zZVhNTCA9IGlvLmNvbnRlbnREb2N1bWVudC5kb2N1bWVudC5YTUxEb2N1bWVudD9pby5jb250ZW50RG9jdW1lbnQuZG9jdW1lbnQuWE1MRG9jdW1lbnQ6aW8uY29udGVudERvY3VtZW50LmRvY3VtZW50Ow0KCQkJCX0JCQkJCQkNCiAgICAgICAgICAgIH1jYXRjaChlKQ0KCQkJew0KCQkJCWpRdWVyeS5oYW5kbGVFcnJvcihzLCB4bWwsIG51bGwsIGUpOw0KCQkJfQ0KICAgICAgICAgICAgaWYgKCB4bWwgfHwgaXNUaW1lb3V0ID09ICJ0aW1lb3V0IikgDQoJCQl7CQkJCQ0KICAgICAgICAgICAgICAgIHJlcXVlc3REb25lID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICB2YXIgc3RhdHVzOw0KICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgIHN0YXR1cyA9IGlzVGltZW91dCAhPSAidGltZW91dCIgPyAic3VjY2VzcyIgOiAiZXJyb3IiOw0KICAgICAgICAgICAgICAgICAgICAvLyBNYWtlIHN1cmUgdGhhdCB0aGUgcmVxdWVzdCB3YXMgc3VjY2Vzc2Z1bCBvciBub3Rtb2RpZmllZA0KICAgICAgICAgICAgICAgICAgICBpZiAoIHN0YXR1cyAhPSAiZXJyb3IiICkNCgkJCQkJew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8gcHJvY2VzcyB0aGUgZGF0YSAocnVucyB0aGUgeG1sIHRocm91Z2ggaHR0cERhdGEgcmVnYXJkbGVzcyBvZiBjYWxsYmFjaykNCiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkYXRhID0galF1ZXJ5LnVwbG9hZEh0dHBEYXRhKCB4bWwsIHMuZGF0YVR5cGUgKTsgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAvLyBJZiBhIGxvY2FsIGNhbGxiYWNrIHdhcyBzcGVjaWZpZWQsIGZpcmUgaXQgYW5kIHBhc3MgaXQgdGhlIGRhdGENCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICggcy5zdWNjZXNzICkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzLnN1Y2Nlc3MoIGRhdGEsIHN0YXR1cyApOw0KICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgLy8gRmlyZSB0aGUgZ2xvYmFsIGNhbGxiYWNrDQogICAgICAgICAgICAgICAgICAgICAgICBpZiggcy5nbG9iYWwgKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGpRdWVyeS5ldmVudC50cmlnZ2VyKCAiYWpheFN1Y2Nlc3MiLCBbeG1sLCBzXSApOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2UNCiAgICAgICAgICAgICAgICAgICAgICAgIGpRdWVyeS5oYW5kbGVFcnJvcihzLCB4bWwsIHN0YXR1cyk7DQogICAgICAgICAgICAgICAgfSBjYXRjaChlKSANCgkJCQl7DQogICAgICAgICAgICAgICAgICAgIHN0YXR1cyA9ICJlcnJvciI7DQogICAgICAgICAgICAgICAgICAgIGpRdWVyeS5oYW5kbGVFcnJvcihzLCB4bWwsIHN0YXR1cywgZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8gVGhlIHJlcXVlc3Qgd2FzIGNvbXBsZXRlZA0KICAgICAgICAgICAgICAgIGlmKCBzLmdsb2JhbCApDQogICAgICAgICAgICAgICAgICAgIGpRdWVyeS5ldmVudC50cmlnZ2VyKCAiYWpheENvbXBsZXRlIiwgW3htbCwgc10gKTsNCg0KICAgICAgICAgICAgICAgIC8vIEhhbmRsZSB0aGUgZ2xvYmFsIEFKQVggY291bnRlcg0KICAgICAgICAgICAgICAgIGlmICggcy5nbG9iYWwgJiYgISAtLWpRdWVyeS5hY3RpdmUgKQ0KICAgICAgICAgICAgICAgICAgICBqUXVlcnkuZXZlbnQudHJpZ2dlciggImFqYXhTdG9wIiApOw0KDQogICAgICAgICAgICAgICAgLy8gUHJvY2VzcyByZXN1bHQNCiAgICAgICAgICAgICAgICBpZiAoIHMuY29tcGxldGUgKQ0KICAgICAgICAgICAgICAgICAgICBzLmNvbXBsZXRlKHhtbCwgc3RhdHVzKTsNCg0KICAgICAgICAgICAgICAgIGpRdWVyeShpbykudW5iaW5kKCkNCg0KICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKQ0KCQkJCQkJCQkJewl0cnkgDQoJCQkJCQkJCQkJew0KCQkJCQkJCQkJCQlqUXVlcnkoaW8pLnJlbW92ZSgpOw0KCQkJCQkJCQkJCQlqUXVlcnkoZm9ybSkucmVtb3ZlKCk7CQ0KCQkJCQkJCQkJCQkNCgkJCQkJCQkJCQl9IGNhdGNoKGUpIA0KCQkJCQkJCQkJCXsNCgkJCQkJCQkJCQkJalF1ZXJ5LmhhbmRsZUVycm9yKHMsIHhtbCwgbnVsbCwgZSk7DQoJCQkJCQkJCQkJfQkJCQkJCQkJCQ0KDQoJCQkJCQkJCQl9LCAxMDApDQoNCiAgICAgICAgICAgICAgICB4bWwgPSBudWxsDQoNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICAvLyBUaW1lb3V0IGNoZWNrZXINCiAgICAgICAgaWYgKCBzLnRpbWVvdXQgPiAwICkgDQoJCXsNCiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXsNCiAgICAgICAgICAgICAgICAvLyBDaGVjayB0byBzZWUgaWYgdGhlIHJlcXVlc3QgaXMgc3RpbGwgaGFwcGVuaW5nDQogICAgICAgICAgICAgICAgaWYoICFyZXF1ZXN0RG9uZSApIHVwbG9hZENhbGxiYWNrKCAidGltZW91dCIgKTsNCiAgICAgICAgICAgIH0sIHMudGltZW91dCk7DQogICAgICAgIH0NCiAgICAgICAgdHJ5IA0KCQl7DQoNCgkJCXZhciBmb3JtID0galF1ZXJ5KCcjJyArIGZvcm1JZCk7DQoJCQlqUXVlcnkoZm9ybSkuYXR0cignYWN0aW9uJywgcy51cmwpOw0KCQkJalF1ZXJ5KGZvcm0pLmF0dHIoJ21ldGhvZCcsICdQT1NUJyk7DQoJCQlqUXVlcnkoZm9ybSkuYXR0cigndGFyZ2V0JywgZnJhbWVJZCk7DQogICAgICAgICAgICBpZihmb3JtLmVuY29kaW5nKQ0KCQkJew0KCQkJCWpRdWVyeShmb3JtKS5hdHRyKCdlbmNvZGluZycsICdtdWx0aXBhcnQvZm9ybS1kYXRhJyk7ICAgICAgCQkJDQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlDQoJCQl7CQ0KCQkJCWpRdWVyeShmb3JtKS5hdHRyKCdlbmN0eXBlJywgJ211bHRpcGFydC9mb3JtLWRhdGEnKTsJCQkNCiAgICAgICAgICAgIH0JCQkNCiAgICAgICAgICAgIGpRdWVyeShmb3JtKS5zdWJtaXQoKTsNCg0KICAgICAgICB9IGNhdGNoKGUpIA0KCQl7CQkJDQogICAgICAgICAgICBqUXVlcnkuaGFuZGxlRXJyb3IocywgeG1sLCBudWxsLCBlKTsNCiAgICAgICAgfQ0KCQkNCgkJalF1ZXJ5KCcjJyArIGZyYW1lSWQpLmxvYWQodXBsb2FkQ2FsbGJhY2sJKTsNCiAgICAgICAgcmV0dXJuIHthYm9ydDogZnVuY3Rpb24gKCkge319OwkNCg0KICAgIH0sDQoNCiAgICB1cGxvYWRIdHRwRGF0YTogZnVuY3Rpb24oIHIsIHR5cGUgKSB7DQogICAgICAgIHZhciBkYXRhID0gIXR5cGU7DQogICAgICAgIGRhdGEgPSB0eXBlID09ICJ4bWwiIHx8IGRhdGEgPyByLnJlc3BvbnNlWE1MIDogci5yZXNwb25zZVRleHQ7DQogICAgICAgIC8vIElmIHRoZSB0eXBlIGlzICJzY3JpcHQiLCBldmFsIGl0IGluIGdsb2JhbCBjb250ZXh0DQogICAgICAgIGlmICggdHlwZSA9PSAic2NyaXB0IiApDQogICAgICAgICAgICBqUXVlcnkuZ2xvYmFsRXZhbCggZGF0YSApOw0KICAgICAgICAvLyBHZXQgdGhlIEphdmFTY3JpcHQgb2JqZWN0LCBpZiBKU09OIGlzIHVzZWQuDQogICAgICAgIGlmICggdHlwZSA9PSAianNvbiIgKQ0KICAgICAgICAgICAgZXZhbCggImRhdGEgPSAiICsgZGF0YSApOw0KICAgICAgICAvLyBldmFsdWF0ZSBzY3JpcHRzIHdpdGhpbiBodG1sDQogICAgICAgIGlmICggdHlwZSA9PSAiaHRtbCIgKQ0KICAgICAgICAgICAgalF1ZXJ5KCI8ZGl2PiIpLmh0bWwoZGF0YSkuZXZhbFNjcmlwdHMoKTsNCg0KICAgICAgICByZXR1cm4gZGF0YTsNCiAgICB9DQp9KQ0KDQo=",
    "size": "6677"
}