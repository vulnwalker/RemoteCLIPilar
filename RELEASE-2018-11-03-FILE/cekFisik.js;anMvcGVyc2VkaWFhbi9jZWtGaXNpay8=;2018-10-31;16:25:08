{
    "namaFile": "js\/persediaan\/cekFisik\/cekFisik.js",
    "lastUpdate": "2018-10-31+16:25:08.76",
    "contentFile": "var cekFisikFilterSKPD = new SkpdCls({
  prefix: "cekFisik",
  formName: "cekFisikForm",
  pilihUrusanfter: function() {
    cekFisik.filterRender(true);
  },
  pilihBidangAfter: function() {
    cekFisik.filterRender(true);
  },
  pilihUnitAfter: function() {
    cekFisik.filterRender(true);
  },
  pilihSubUnitAfter: function() {
    cekFisik.filterRender(true);
  },
  pilihSeksiAfter: function() {
    cekFisik.filterRender(true);
  }
});
var cekFisik = new DaftarObj2({
	prefix : 'cekFisik',
	url : 'pgPersediaan.php?Pg=cekFisik',
	formName : 'cekFisikForm',
	cekFisik_form : '0',//default js cekFisik
	loading: function(){
		//alert('loading');
		this.topBarRender();
		this.filterRender();
		this.daftarRender();
		this.sumHalRender();


	},
	filterRenderAfter : function(){
		// $.ajax({
		// 	type:'POST',
		// 		url: this.url+'&tipe=getYearRange',
		// 		success: function(data) {
		// 		var resp = eval('(' + data + ')');
		// 			$('#tanggalCek').datepicker({
		// 					dateFormat: "dd-mm-yy",
		// 					showAnim: "slideDown",
		// 					inline: true,
		// 					showOn: "button",
		// 					buttonImage: "datepicker/calender1.png",
		// 					buttonImageOnly: true,
		// 					changeMonth: true,
		// 					changeYear: false,
		// 					yearRange: resp.content.yearRange,
		// 					buttonText : "",
		// 			});
		// 		}
		// });

    	// this.daftarRender();
  	},

	detail: function(){
		//alert('detail');
		var me = this;
		errmsg = this.CekCheckbox();
		if(errmsg ==''){
			var box = this.GetCbxChecked();
			//UserAktivitasDet.genDetail();

		}else{

			alert(errmsg);
		}

	},pilihBidang: function(){
		cekFisik.refreshList(true);

	},BidangAfter2: function(){
		cekFisik.refreshList(true);

	},comboSKPDChanged: function(){
		cekFisik.refreshList(true);

	},CariModul: function(){
		var me = this;

		popupModul.el_namaModul= 'namaModul';
		popupModul.el_idModul= 'idModul';
/*		RefBarangButuh.el_nama_barang= 'nama_barang';		*/
		popupModul.windowSaveAfter= function(){};
		popupModul.windowShow();
	},

	histori: function(id){
		var me = this;

		popupHistori.el_namaHistori= 'namaHistori';
		popupHistori.el_idHistori= 'idHistori';
		popupHistori.windowSaveAfter= function(){};
		popupHistori.windowShow(id);
	},
	daftarRender:function(){
		var me =this; //render daftar
		addCoverPage2(
			'daftar_cover',	1, 	true, true,	{renderTo: this.prefix+'_cont_daftar',
			imgsrc: 'images/wait.gif',
			style: {position:'absolute', top:'5', left:'5'}
			}
		);

		$.ajax({
		  	url: this.url+'&tipe=daftar',
		 	type:'POST',
			data:$('#'+this.formName).serialize(),
		  	success: function(data) {
				var resp = eval('(' + data + ')');
				document.getElementById(me.prefix+'_cont_daftar').innerHTML = resp.content;

					me.sumHalRender();
		  	}
		});
	},
	Simpan: function(){
		var me= this;
		this.OnErrorClose = false
		document.body.style.overflow='hidden';
		var cover = 'renjaAset'+'_formsimpan';
		addCoverPage2(cover,1,true,false);
		$.ajax({
			type:'POST',
			data:{
				jenisKegiatan : $("#jenisKegiatan").val(),
				c1			  : $("#cekFisikSKPD2fmURUSAN").val(),
			  	c   		  : $("#cekFisikSKPD2fmSKPD").val(),
			  	d   		  : $("#cekFisikSKPD2fmUNIT").val(),
			  	e   		  : $("#cekFisikSKPD2fmSUBUNIT").val(),
			  	e1  		  : $("#cekFisikSKPD2fmSEKSI").val(),
			  	dc1 		  : $("#dc1").val(),
			  	dc  		  : $("#dc").val(),
			  	dd  		  : $("#dd").val(),
			  	kategori      : $("#kategori").val(),
			  	namapegawai   : $("#namapegawai").val(),
			  	nippegawai    : $("#nippegawai").val(),
			  	pangkatakhir  : $("#pangkatakhir").val(),
			  	golang_akhir  : $("#golang_akhir").val(),
			  	jabatan       : $("#jabatan").val(),
			  	eselon_akhir  : $("#eselon_akhir").val(),
			},
			url: this.url+'&tipe=simpan',
		  	success: function(data) {
				var resp = eval('(' + data + ')');
				delElem(cover);
				//document.getElementById(cover).innerHTML = resp.content;
				if(resp.err==''){
					// document.getElementById('ttd').innerHTML = resp.content.combottd;
					cekFisik.Close();
				}else{
					alert(resp.err);
				}
		  	}
		});
	},
  pilihPangkat: function() {
    var me = this;
    $.ajax({
      url: this.url + "&tipe=pilihPangkat",
      type: "POST",
      data: {
        c1: $("#filterUrusan").val(),
        c: $("#filterBidang").val(),
        d: $("#filterSKPD").val(),
        e: $("#filterUnit").val(),
        e1: $("#filterSubUnit").val(),
        dc1: $("#dc1").val(),
        dc: $("#dc").val(),
        dd: $("#dd").val(),
        kategori: $("#kategori").val(),
        namapegawai: $("#namapegawai").val(),
        nippegawai: $("#nippegawai").val(),
        pangkatakhir: $("#pangkatakhir").val(),
        golang_akhir: $("#golang_akhir").val(),
        jabatan: $("#jabatan").val(),
        eselon_akhir: $("#eselon_akhir").val()
      },
      success: function(data) {
        var resp = eval("(" + data + ")");

        if (resp.err == "") {
          document.getElementById("golang_akhir").value = resp.content;
        } else {
          alert(resp.err);
        }
      }
    });
  },
  SimpanTTD: function() {
    var me = this;
    this.OnErrorClose = false;
    document.body.style.overflow = "hidden";
    var cover = "renjaAset" + "_formsimpan";
    addCoverPage2(cover, 1, true, false);
    $.ajax({
      type: "POST",
      data: {
        jenisKegiatan: $("#jenisKegiatan").val(),
        c1: $("#filterUrusan").val(),
        c: $("#filterBidang").val(),
        d: $("#filterSKPD").val(),
        e: $("#filterUnit").val(),
        e1: $("#filterSubUnit").val(),
        dc1: $("#dc1").val(),
        dc: $("#dc").val(),
        dd: $("#dd").val(),
        kategori: $("#kategori").val(),
        namapegawai: $("#namapegawai").val(),
        nippegawai: $("#nippegawai").val(),
        pangkatakhir: $("#pangkatakhir").val(),
        golang_akhir: $("#golang_akhir").val(),
        jabatan: $("#jabatan").val(),
        eselon_akhir: $("#eselon_akhir").val()
      },
      url: this.url + "&tipe=simpanTTD",
      success: function(data) {
        var resp = eval("(" + data + ")");
        delElem(cover);
        //document.getElementById(cover).innerHTML = resp.content;
        if (resp.err == "") {
          document.getElementById("ttd").innerHTML = resp.content.combottd;
          cekFisik.Close();
        } else {
          alert(resp.err);
        }
      }
    });
  },
	Baru: function(){
		var me = this;
		var err='';
		var urusan = document.getElementById('cekFisikSKPD2fmURUSAN').value;
		var bidang = document.getElementById('cekFisikSKPD2fmSKPD').value;
		var skpd = document.getElementById('cekFisikSKPD2fmUNIT').value;
		var unit = document.getElementById('cekFisikSKPD2fmSUBUNIT').value;
		var subunit = document.getElementById('cekFisikSKPD2fmSEKSI').value;

		var cover = this.prefix+'_formcover';
		if(err==''){
			document.body.style.overflow='hidden';
			addCoverPage2(cover,999,true,false);
			$.ajax({
				type:'POST',
				data:$('#'+this.formName).serialize()+"&urusan="+urusan+"&bidang="+bidang+"&skpd="+skpd+"&unit="+unit+"&subunit="+subunit,
			  	url: this.url+'&tipe=formBaru',
			  	success: function(data) {
					var resp = eval('(' + data + ')');
					delElem(cover);
					if (resp.err ==''){
						document.getElementById(cover).innerHTML = resp.content;
						me.AfterFormBaru(resp);
					}else{
						alert(resp.err);

						document.body.style.overflow='auto';
					}

			  	}
			});
		}else{
			alert(err);
		}
	},
	Report: function(){
		var aForm = document.getElementById(this.prefix+('_form'));
		var me= this;
		this.OnErrorClose = false
		document.body.style.overflow='hidden';
		var cover = this.prefix+'_formsimpan';
		addCoverPage2(cover,1,true,false);
		var url2 = this.url;
		$.ajax({
			type:'POST',
			data: { jenisKegiatan : $("#jenisKegiatan").val(),
					cetakjang	  : $("#cetakjang").val(),
					ttd			  : $("#ttd").val(),
					c1			  : $("#cekFisikSKPD2fmURUSAN").val(),
				  	c   		  : $("#cekFisikSKPD2fmSKPD").val(),
				  	d   		  : $("#cekFisikSKPD2fmUNIT").val(),
				  	e   		  : $("#cekFisikSKPD2fmSUBUNIT").val(),
				  	e1  		  : $("#cekFisikSKPD2fmSEKSI").val(),
					filterPeriode : $("#filterPeriode").val(),

					},
			url: this.url+'&tipe=Report',
		  	success: function(data) {
				var resp = eval('(' + data + ')');
				delElem(cover);
				if(resp.err==''){

					aForm.action= url2+'&tipe='+resp.content.to+'&filterPeriode='+$("#filterPeriode").val()+'&urusan='+$("#cekFisikSKPD2fmURUSAN").val()+'&bidang='+$("#cekFisikSKPD2fmSKPD").val()+'&skpd='+$("#cekFisikSKPD2fmUNIT").val()+'&unit='+$("#cekFisikSKPD2fmSUBUNIT").val()+'&subunit='+$("#cekFisikSKPD2fmSEKSI").val()+'&kota='+resp.content.namaPemda+'&tanggalCetak='+resp.content.cetakjang+'&ttd='+resp.content.ttd;
					aForm.target='_blank';
					aForm.submit();
					aForm.target='';
					me.Close();
				}else{
					alert(resp.err);
				}
		  	}
		});
	},
	// Baru: function(){
	// 	var me = this;
	// 	if($("#"+me.prefix+"SKPD2fmURUSAN").val()  == '0'){
	// 	 	alert("Pilih Urusan");
	// 	}else if($("#"+me.prefix+"SKPD2fmSKPD").val()  == '00'){
	// 		alert("Pilih Bidang");
	// 	}else if($("#"+me.prefix+"SKPD2fmUNIT").val()  == '00'){
	// 		alert("Pilih SKPD");
	// 	}else if($("#"+me.prefix+"SKPD2fmSUBUNIT").val() == '00'){
	// 		alert("Pilih Unit");
	// 	}else if($("#"+me.prefix+"SKPD2fmSEKSI").val() == '000'){
	// 		alert("Pilih Sub Unit");
	// 	}else{

	// 			var skpd = $("#"+me.prefix+"SKPD2fmURUSAN").val()+'.'+$("#"+me.prefix+"SKPD2fmSKPD").val()+'.'+$("#"+me.prefix+"SKPD2fmUNIT").val()+'.'+$("#"+me.prefix+"SKPD2fmSUBUNIT").val()+'.'+$("#"+me.prefix+"SKPD2fmSEKSI").val();

	// 			var aForm = document.getElementById(this.formName);
	// 			$.ajax({
	// 			type:'POST',
	// 			data : {c1 : $("#"+me.prefix+"SKPD2fmURUSAN").val(),
	// 					c  : $("#"+me.prefix+"SKPD2fmSKPD").val(),
	// 					d  : $("#"+me.prefix+"SKPD2fmUNIT").val(),
	// 					e  : $("#"+me.prefix+"SKPD2fmSUBUNIT").val(),
	// 					e1 : $("#"+me.prefix+"SKPD2fmSEKSI").val(),

	// 					},
	// 		  	url: this.url+'&tipe=newTab',
	// 		  	success: function(data) {
	// 				var resp = eval('(' + data + ')');
	// 				if(resp.err == ''){
	// 					aForm.action= 'pgPersediaan.php?Pg=cekFisik_ins&skpd='+skpd+"&nomor="+resp.content.nomor;
	// 					aForm.target='_blank';
	// 					aForm.submit();
	// 					aForm.target='';
	// 				}else{
	// 					alert(resp.err);
	// 				}

	// 			 }
	// 		});


	// 	}

	// },
	Info: function(){
		var aForm = document.getElementById(this.formName);
				$.ajax({
				  url: this.url+'&tipe=hubla',
				  type : 'POST',
				  data:$('#'+this.formName).serialize(),
				  success: function(data) {
						var resp = eval('(' + data + ')');
						if(resp.err == "") {
							var kodeRek = resp.content.kodeRek;
							aForm.action= 'pgPersediaan.php?Pg=alokasiDpa';
							aForm.target='_blank';
							aForm.submit();
							aForm.target='';
						}else{
							alert(resp.err);
						}

				  }
				});
	},
	unlockFindRekening: function(){
		var me = this;
		if( $("#cmbJenisRKAForm").val() == ""){
			$("#findRekening").attr('disabled',true);
		}else{
			$("#findRekening").attr('disabled',false);
			$("#findRekening").attr('onclick',"cekFisik.findRekening('"+$("#cmbJenisRKAForm").val()+"');");

		}


	},
	Edit:function(){
		var me = this;
		errmsg = this.CekCheckbox();

			if(errmsg ==''){
				var box = this.GetCbxChecked();
				var aForm = document.getElementById(this.formName);
				$.ajax({
				  url: this.url+'&tipe=editTab',
				  type : 'POST',
				  data:$('#'+this.formName).serialize(),
				  success: function(data) {
						var resp = eval('(' + data + ')');
						if(resp.err == "") {
							aForm.action= 'pgPersediaan.php?Pg=cekFisik_ins&skpd='+resp.content.skpd+"&nomor="+resp.content.nomor;
							aForm.target='_blank';
							aForm.submit();
							aForm.target='';
						}else{
							alert(resp.err);
						}

				  }
				});
			}else{
				alert(errmsg);
			}

	},
	closing:function(){
		var me = this;
		var err = "";

		if($("#cekFisikSKPD2fmURUSAN").val() == '00'){
			err = "Pilih Urusan";
		}else if($("#cekFisikSKPD2fmSKPD").val() == '00'){
			err = "Pilih Bidang";
		}else if($("#cekFisikSKPD2fmUNIT").val() == '00'){
			err = "Pilih SKPD";
		}

		if(err ==''){

			var cover = this.prefix+'_formcover';
			addCoverPage2(cover,2,true,false);
			document.body.style.overflow='hidden';
			$.ajax({
				type:'POST',
				data:$('#'+this.formName).serialize(),
				url: this.url+'&tipe=closing',
			  	success: function(data) {
					var resp = eval('(' + data + ')');
					if (resp.err ==''){
						document.getElementById(cover).innerHTML = resp.content;
						me.AfterFormEdit(resp);
					}else{
						alert(resp.err);
						delElem(cover);
						document.body.style.overflow='auto';
					}
			  	}
			});
		}else{
			alert(err);
		}

	},


	savePosting: function(idPosting){
		var me= this;
		this.OnErrorClose = false
		document.body.style.overflow='hidden';
		var cover = this.prefix+'_formsimpan';
		addCoverPage2(cover,1,true,false);
		$.ajax({
			type:'POST',
			data:$('#'+this.prefix+'_form').serialize()+"&idPosting="+idPosting,
			url: this.url+'&tipe=savePosting',
		  	success: function(data) {
				var resp = eval('(' + data + ')');
				delElem(cover);
				if(resp.err==''){
						me.Close();
						me.refreshList(true);
				}else{
					alert(resp.err);
				}
		  	}
		});
	}
	,
	cekFisik: function(idPersediaan){
		var me= this;
		if($("#filterPeriode").val() !=''){
			// $.ajax({
			// 	type:'POST',
			// 	data:{
			// 					idPersediaan : idPersediaan,
			// 					periode : $("#filterPeriode").val()
			// 	},
			// 	url: this.url+'&tipe=cekFisik',
			// 		success: function(data) {
			// 			var resp = eval('(' + data + ')');
			// 			if(resp.err==''){
			// 					// $("#spanBerkurang"+idPersediaan).html(resp.content.spanBerkurang);
			// 					// $("#spanBertambah"+idPersediaan).html(resp.content.spanBertambah);
			// 					// $("#spanJumlah"+idPersediaan).html(resp.content.spanJumlah);
			// 					// $("#spanKeterangan"+idPersediaan).html(resp.content.spanKeterangan);
			// 					// $("#spanAction"+idPersediaan).html(resp.content.spanAction);
			// 			}else{
			// 				alert(resp.err);
			// 			}
			// 		}
			// });

			var cover = this.prefix+'_formcover';
			addCoverPage2(cover,4,true,false);
			document.body.style.overflow='hidden';
			$.ajax({
				type:'POST',
				data:{
								idPersediaan : idPersediaan,
								periode : $("#filterPeriode").val()
				},
				url: this.url+'&tipe=cekFisik',
			  	success: function(data) {
					var resp = eval('(' + data + ')');
					if (resp.err ==''){
						document.getElementById(cover).innerHTML = resp.content;
					}else{
						alert(resp.err);
						delElem(cover);
						document.body.style.overflow='auto';
					}
			  	}
			});
		}else{
			alert("Pilih Periode !");
		}

	}
	,

	bantuVolumeBarang : function(id){
		document.getElementById('bantuVolumeBarang'+id).innerHTML = cekFisik.formatCurrency2($("#volumeBarang"+id).val());
		var hasilKali = Number($("#volumeBarang"+id).val()) * Number($("#satuanHarga"+id).val()) ;
		$("#spanJumlahHarga"+id).text(cekFisik.formatCurrency(hasilKali));
	},
	bantuSatuanHarga : function(id){
		document.getElementById('bantuSatuanHarga'+id).innerHTML =  cekFisik.formatCurrency($("#satuanHarga"+id).val());
		var hasilKali = Number($("#volumeBarang"+id).val()) * Number($("#satuanHarga"+id).val()) ;
		$("#spanJumlahHarga"+id).text(cekFisik.formatCurrency(hasilKali));
	},

	formatCurrency:function(num) {
		num = num.toString().replace(/\$|\,/g,'');
		if(isNaN(num))
		num = "0";
		sign = (num == (num = Math.abs(num)));
		num = Math.floor(num*100+0.50000000001);
		cents = num%100;
		num = Math.floor(num/100).toString();
		if(cents<10)
		cents = "0" + cents;
		for (var i = 0; i < Math.floor((num.length-(1+i))/3); i++)
		num = num.substring(0,num.length-(4*i+3))+'.'+
		num.substring(num.length-(4*i+3));
		return (((sign)?'':'-') + '' + num + ',' + cents);
	},
	formatCurrency2:function(num) {
		num = num.toString().replace(/\$|\,/g,'');
		if(isNaN(num))
		num = "0";
		sign = (num == (num = Math.abs(num)));
		num = Math.floor(num*100+0.50000000001);
		cents = num%100;
		num = Math.floor(num/100).toString();
		if(cents<10)
		cents = "0" + cents;
		for (var i = 0; i < Math.floor((num.length-(1+i))/3); i++)
		num = num.substring(0,num.length-(4*i+3))+'.'+
		num.substring(num.length-(4*i+3));
		return (((sign)\",
    "size": "29321"
}