{
    "namaFile": "js\/master\/ref_rekening\/ref_rekening_sipkd.js",
    "lastUpdate": "2018-11-01+15:03:27.34",
    "contentFile": "dmFyIHJlZl9yZWtlbmluZ19zaXBrZFNrcGQgPSBuZXcgU2twZENscyh7DQoJcHJlZml4IDogJ3JlZl9yZWtlbmluZ19zaXBrZFNrcGQnLCBmb3JtTmFtZToncmVmX3Jla2VuaW5nX3NpcGtkRm9ybScsDQoJDQoJcGlsaWhCaWRhbmdBZnRlciA6IGZ1bmN0aW9uKCl7cmVmX3Jla2VuaW5nX3NpcGtkLnJlZnJlc2hMaXN0KHRydWUpO30sDQoJcGlsaWhLZWxvbXBva0FmdGVyIDogZnVuY3Rpb24oKXtyZWZfcmVrZW5pbmdfc2lwa2QucmVmcmVzaExpc3QodHJ1ZSk7fSwNCglwaWxpaFN1YktlbG9tcG9rQWZ0ZXIgOiBmdW5jdGlvbigpe3JlZl9yZWtlbmluZ19zaXBrZC5yZWZyZXNoTGlzdCh0cnVlKTt9LA0KCXBpbGloU2VrU3ViS2Vsb21wb2tBZnRlciA6IGZ1bmN0aW9uKCl7cmVmX3Jla2VuaW5nX3NpcGtkLnJlZnJlc2hMaXN0KHRydWUpO30NCn0pOw0KDQp2YXIgcmVmX3Jla2VuaW5nX3NpcGtkID0gbmV3IERhZnRhck9iajIoew0KCXByZWZpeCA6ICdyZWZfcmVrZW5pbmdfc2lwa2QnLA0KCXVybCA6ICdwYWdlcy5waHA\\\\/JykgKXsNCgkJCQkJCQltZS5TaW5rcm9uXygpOw0KCQkJCQkJfWVsc2V7DQoJCQkJCQkJLy9tZS5DbG9zZSgpOw0KCQkJCQkJCS8vZGVsRWxlbShjb3Zlcik7DQoJCQkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J0cHJvc2VzJykuZGlzYWJsZWQ9ZmFsc2U7DQoJCQkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J0YmF0YWwnKS5kaXNhYmxlZD1mYWxzZTsJCQkJCQkJDQoJCQkJCQkJLy9tZS5sb2FkaW5nKCk7CQkNCgkJCQkJCX0NCgkJCQkJfQ0KCQkJCQkNCgkJCQl9DQoJCQl9KTsNCgkJfWVsc2V7DQoJCQlhbGVydChlcnIpOw0KCQl9DQoNCgl9LAkNCg0KCQkNCn0pOw0K",
    "size": "28032"
}