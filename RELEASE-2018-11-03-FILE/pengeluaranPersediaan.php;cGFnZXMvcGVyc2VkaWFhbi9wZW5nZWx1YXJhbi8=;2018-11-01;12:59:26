{
    "namaFile": "pages\/persediaan\/pengeluaran\/pengeluaranPersediaan.php",
    "lastUpdate": "2018-11-01+12:59:26.64",
    "contentFile": "PD9waHAKCmNsYXNzIHBlbmdlbHVhcmFuUGVyc2VkaWFhbk9iaiAgZXh0ZW5kcyBjb25maWdDbGFzc3sKICB2YXIgJFByZWZpeCA9ICdwZW5nZWx1YXJhblBlcnNlZGlhYW4nOwogIHZhciAkZWxDdXJyUGFnZT0iSGFsRGVmYXVsdCI7CiAgdmFyICRTSE9XX0NFSyA9IFRSVUU7CiAgdmFyICRUYmxOYW1lID0gJ3BlbmdlbHVhcmFuJzsgLy9ib251cwogIHZhciAkVGJsTmFtZV9IYXB1cyA9ICdwZW5nZWx1YXJhbic7CiAgdmFyICRNYXhGbHVzaCA9IDEwOwogIHZhciAkVGJsU3R5bGUgPSBhcnJheSggJ2tvcHRhYmxlJywgJ2NldGFrJywnY2V0YWsnKTsgLy9iZXJkYXNhciBtb2RlCiAgdmFyICRDb2xTdHlsZSA9IGFycmF5KCAnR2FyaXNEYWZ0YXInLCAnR2FyaXNDZXRhaycsJ0dhcmlzQ2V0YWsnKTsKICB2YXIgJEtleUZpZWxkcyA9IGFycmF5KCdpZCcpOwogIHZhciAkRmllbGRTdW0gPSBhcnJheSgpOy8vYXJyYXkoJ2ptbF9oYXJnYScpOwogIHZhciAkU3VtVmFsdWUgPSBhcnJheSgpOwogIHZhciAkRmllbGRTdW1fQ3AxID0gYXJyYXkoIDE0LCAxMywgMTMpOy8vYmVyZGFzYXIgbW9kZQogIHZhciAkRmllbGRTdW1fQ3AyID0gYXJyYXkoIDEsIDEsIDEpOwogIHZhciAkY2hlY2tib3hfcm93c3BhbiA9IDI7CiAgdmFyICRQYWdlVGl0bGUgPSAnUEVOR0VMVUFSQU4nOwogIHZhciAkUGFnZUljb24gPSAnaW1hZ2VzL21hc3RlckRhdGFfMDEuZ2lmJzsKICB2YXIgJHBhZ2VQZXJIYWwgPScnOwogIC8vdmFyICRjZXRha194bHM9VFJVRSA7CiAgdmFyICRmaWxlTmFtZUV4Y2VsPSdwZW5nZWx1YXJhblBlcnNlZGlhYW4ueGxzJzsKICB2YXIgJG5hbWFNb2R1bENldGFrPSdQRU5HRUxVQVJBTic7CiAgdmFyICRDZXRha19KdWR1bCA9ICdQRU5HRUxVQVJBTic7CiAgdmFyICRDZXRha19Nb2RlPTI7CiAgdmFyICRDZXRha19XSURUSCA9ICczMGNtJzsKICB2YXIgJENldGFrX090aGVySFRNTEhlYWQ7CiAgdmFyICRGb3JtTmFtZSA9ICdwZW5nZWx1YXJhblBlcnNlZGlhYW5Gb3JtJzsKICB2YXIgJG1vZHVsID0gIlBFTkdFTFVBUkFOIjsKICB2YXIgJGplbmlzRm9ybSA9ICIiOwogIHZhciAkdGFodW4gPSAiIjsKICB2YXIgJG5vbW9yVXJ1dCA9ICIiOwogIHZhciAkamVuaXNBbmdnYXJhbiA9ICIiOwogIHZhciAkaWRUYWhhcCA9ICIiOwogIHZhciAkY3VycmVudFRhaGFwID0gIiI7CiAgdmFyICRuYW1hVGFoYXBUZXJha2hpciA9ICIiOwogIHZhciAkbWFzYVRlcmFraGlyID0gIiI7CiAgLy9idWF0dmlldwogIHZhciAkdXJ1dFRlcmFraGlyID0gIiI7CiAgdmFyICR1cnV0U2ViZWx1bW55YSA9ICIiOwogIHZhciAkamVuaXNGb3JtVGVyYWtoaXIgPSAiIjsKCiAgdmFyICR1c2VybmFtZSA9ICIiOwogIHZhciAkd2FqaWJWYWxpZGFzaSA9ICIiOwoKICB2YXIgJHNxbFZhbGlkYXNpID0gIiI7CiAgLy9idWF0dmlldwogIHZhciAkVGFtcGlsRmlsdGVyQ29sYXBzZSA9IDA7IC8vMAoKICB2YXIgJHByb3ZpbnNpID0gIiI7CiAgdmFyICRrb3RhID0gIiI7CiAgdmFyICRwZW5nZWxvbGFCYXJhbmcgPSAiIjsKICB2YXIgJHBlamFiYXRQZW5nZWxvbGFCYXJhbmcgPSAiIjsKICB2YXIgJHBlbmd1cnVzUGVuZ2Vsb2xhQmFyYW5nID0gIiI7CiAgdmFyICRuaXBQZW5nZWxvbGEgPSAiIjsKICB2YXIgJG5pcFBlamFiYXQgPSAiIjsKICB2YXIgJG5pcFBlbmd1cnVzID0iIjsKICB2YXIgJG5vbW9yS29sb20gPTE7CgogIHZhciAkcHVibGljVmFyID0gIiI7CiAgdmFyICRzdHJpbmdDb25jYXRTdWJVbml0ID0gImNvbmNhdChjMSwnLicsYywnLicsZCwnLicsZSwnLicsZTEpIjsKICB2YXIgJHN0cmluZ0NvbmNhdEtvZGVCYXJhbmcgPSAiY29uY2F0KGYsJy4nLGcsJy4nLGgsJy4nLGksJy4nLGosJy4nLGoxKSI7CiAgdmFyICRhcnJFc2Vsb24gPSBhcnJheSgKICAgIGFycmF5KCcxJywnRVNFTE9OIEknKSwKICAgIGFycmF5KCcyJywnRVNFTE9OIElJJyksCiAgICBhcnJheSgnMycsJ0VTRUxPTiBJSUknKSwKICAgIGFycmF5KCc0JywnRVNFTE9OIElWJyksCiAgICBhcnJheSgnNScsJ0VTRUxPTiBWJykKICAgICk7CgogIGZ1bmN0aW9uIHNldEZvcm1CYXJ1VFREKCl7CiAgICBnbG9iYWwgJE1haW47CiAgICAkY2JpZCA9ICRfUkVRVUVTVFskdGhpcy0+UHJlZml4LidfY2InXTsKICAgICRjZWsgPSRjYmlkWzBdOwogICAgJHRoaXMtPmZvcm1faWRwbGggPSAkY2JpZFswXTsKICAgICRrb2RlID0gZXhwbG9kZSgnICcsJHRoaXMtPmZvcm1faWRwbGgpOwogICAgJHRoaXMtPmZvcm1fZm1TVCA9IDA7CgogICAgJGR0PWFycmF5KCk7CiAgICAvLyR0aGlzLT5mb3JtX2lkcGxoID0nJzsKICAgICR0aGlzLT5mb3JtX2ZtU1QgPSAwOwogIC8vICAkZGF0X3VydXNhbj0gJF9SRVFVRVNUWydkYXRfdXJ1c2FuJ107CiAgICAkdXJ1c2FuID0gJE1haW4tPlVSVVNBTjsKICAgIGlmICgkdXJ1c2FuPT0nMCcpewogICAgICAkZHRbJ2MxJ10gPSAkX1JFUVVFU1RbJHRoaXMtPlByZWZpeC4nZm1TS1BEVXJ1c2FuJ107CiAgICAgICRkdFsnYyddID0gJF9SRVFVRVNUWyR0aGlzLT5QcmVmaXguJ2ZtU0tQREJpZGFuZyddOwogICAgICAkZHRbJ2QnXSA9ICRfUkVRVUVTVFskdGhpcy0+UHJlZml4LidmbVNLUERza3BkJ107CiAgICAgICRmbSA9ICR0aGlzLT5zZXRGb3JtNCgkZHQpOwogICAgfWVsc2V7CiAgICAgICRkdFsnYzEnXSA9ICRfUkVRVUVTVFskdGhpcy0+UHJlZml4LidwZW5nZWx1YXJhblBlcnNlZGlhYW5TS1BEMmZtVVJVU0FOJ107CiAgICAgICRkdFsnYyddID0gJF9SRVFVRVNUWyR0aGlzLT5QcmVmaXguJ3BlbmdlbHVhcmFuUGVyc2VkaWFhblNLUEQyZm1TS1BEJ107CiAgICAgICRkdFsnZCddID0gJF9SRVFVRVNUWyR0aGlzLT5QcmVmaXguJ3BlbmdlbHVhcmFuUGVyc2VkaWFhblNLUEQyZm1VTklUJ107CiAgICAgICRkdFsnZSddID0gJF9SRVFVRVNUWyR0aGlzLT5QcmVmaXguJ3BlbmdlbHVhcmFuUGVyc2VkaWFhblNLUEQyZm1TVUJVTklUJ107CiAgICAgICRkdFsnZTEnXSA9ICRfUkVRVUVTVFskdGhpcy0+UHJlZml4LidwZW5nZWx1YXJhblBlcnNlZGlhYW5TS1BEMmZtU0VLU0knXTsKICAgICAgJGZtID0gJHRoaXMtPnNldEZvcm1UVEQoJGR0KTsKICAgIH0KICAgICAgcmV0dXJuICBhcnJheSAoJ2Nlayc9PiRmbVsnY2VrJ10sICdlcnInPT4kZm1bJ2VyciddLCAnY29udGVudCc9PiRmbVsnY29udGVudCddKTsKICB9CgpmdW5jdGlvbiBzZXRGb3JtVFREKCRkdCwkYzEsJGMsJGQsJGUsJGUxKXsKICAgZ2xvYmFsICRTZW5zdXNUbXA7CiAgICRjZWsgPSAnJzsgJGVycj0nJzsgJGNvbnRlbnQ9Jyc7CiAgICRqc29uID0gVFJVRTsgIC8vJEVyck1zZyA9ICd0ZXMnOwogICAkZm9ybV9uYW1lID0gJHRoaXMtPlByZWZpeC4nX2Zvcm0nOwogICAkdGhpcy0+Zm9ybV93aWR0aCA9IDcwMDsKICAgJHRoaXMtPmZvcm1faGVpZ2h0ID0gMjgwOwogICAgaWYgKCR0aGlzLT5mb3JtX2ZtU1Q9PTApIHsKICAgICR0aGlzLT5mb3JtX2NhcHRpb24gPSAnQkFSVSBUQU5EQSBUQU5HQU4nOwogICAgJG5pcCAgID0gJyc7CiAgICB9ZWxzZXsKICAgICR0aGlzLT5mb3JtX2NhcHRpb24gPSAnRURJVCBUQU5EQSBUQU5HQU4nOwogICAgJHJlYWRvbmx5PSdyZWFkb25seSc7CgogICAgfQogICAgICRhcnJPcmRlciA9IGFycmF5KAogICAgICAgICAgICAgICAgIGFycmF5KCcxJywnS2VwYWxhIERpbmFzJyksCiAgICAgICAgICAgICBhcnJheSgnMicsJ1Blbmd1cnVzIEJhcmFuZycpLAogICAgICAgICAgKTsKICAkYXJyID0gYXJyYXkoCiAgICAgIC8vYXJyYXkoJ3NlbGVjdEFsbCcsJ1NlbXVhJyksCiAgICAgIGFycmF5KCdzZWxlY3RLZXBhbGEgRGluYXMnLCdLZXBhbGEgRGluYXMnKSwKICAgICAgYXJyYXkoJ3NlbGVjdFBlbmd1cnVzIEJhcmFuZycsJ1Blbmd1cnVzIEJhcmFuZycpLAogICAgICApOwogICAgICAvL2FtYmlsIGRhdGEgdHJlZmRpdGVydXNrYW4KICAgICRxdWVyeSA9ICIiIDskY2VrIC49JHF1ZXJ5OwogICAgJHJlcyA9IG15c3FsX3F1ZXJ5KCRxdWVyeSk7CiAgICAka29kZTE9Z2VuTnVtYmVyKCRkdFsnYyddLDIpOwogICAgJGtvZGUyPWdlbk51bWJlcigkZHRbJ2QnXSwyKTsKICAgICRrb2RlMz1nZW5OdW1iZXIoJGR0WydlJ10sMik7CiAgICAka29kZTQ9Z2VuTnVtYmVyKCRkdFsnZTEnXSwzKTsKICAgICRuYW1hPSRkdFsnbmFtYSddOwogICAgJG5pcD0kZHRbJ25pcCddOwogICAgJGphYmF0YW49JGR0WydqYWJhdGFuJ107CgogICAgJEFycmpidCA9IGFycmF5KAogICAgICAgIGFycmF5KCcxLicsIktlcGFsYSBEaW5hcyIpLAogICAgICAgIGFycmF5KCcyLicsJ1Blbmd1cnVzIEJhcmFuZycpLAogICAgICAgICk7CgogICAgJGMxID0gJF9SRVFVRVNUWyd1cnVzYW4nXTsKICAgICRjID0gJF9SRVFVRVNUWydiaWRhbmcnXTsKICAgICRkID0gJF9SRVFVRVNUWydza3BkJ107CiAgICAkZSA9ICRfUkVRVUVTVFsndW5pdCddOwogICAgJGUxID0gJF9SRVFVRVNUWydzdWJ1bml0J107CiAgICAka2V0ID0gJGR0WydrYXRlZ29yaV90YW5kYXRhbmdhbiddOwoKICAgICRxcnk0ID0gIlNFTEVDVCAqIEZST00gcmVmX3NrcGQgV0hFUkUgYzE9JyRjMScgYW5kIGM9JzAwJyBBTkQgZD0nMDAnIEFORCBlPScwMCcgQU5EIGUxPScwMDAnIjsvLyRjZWsuPSRxcnk7CiAgICAkYXFyeTQgPSBteXNxbF9xdWVyeSgkcXJ5NCk7CiAgICAkcXVlcnljMSA9IG15c3FsX2ZldGNoX2FycmF5KCRhcXJ5NCk7CgogICAgJHFyeSA9ICJTRUxFQ1QgKiBGUk9NIHJlZl9za3BkIFdIRVJFIGMxPSckYzEnIGFuZCBjPSckYycgQU5EIGQ9JzAwJyBBTkQgZT0nMDAnIEFORCBlMT0nMDAwJyI7Ly8kY2VrLj0kcXJ5OwogICAgJGFxcnkgPSBteXNxbF9xdWVyeSgkcXJ5KTsKICAgICRxdWVyeWMgPSBteXNxbF9mZXRjaF9hcnJheSgkYXFyeSk7CiAgLy8gICRjZWsuPSRkYXRhOwoKICAgICRxcnkxID0gIlNFTEVDVCAqIEZST00gcmVmX3NrcGQgV0hFUkUgYzE9JyRjMScgYW5kIGM9JyRjJyBBTkQgZD0nJGQnIEFORCBlPScwMCcgQU5EIGUxPScwMDAnIjsvLyRjZWsuPSRxcnkxOwogICAgJGFxcnkxID0gbXlzcWxfcXVlcnkoJHFyeTEpOwogICAgJHF1ZXJ5ZCA9IG15c3FsX2ZldGNoX2FycmF5KCRhcXJ5MSk7CgogICAgJHFyeTIgPSAiU0VMRUNUICogRlJPTSByZWZfc2twZCBXSEVSRSBjMT0nJGMxJyBhbmQgYz0nJGMnIEFORCBkPSckZCcgQU5EIGU9JyRlJyBBTkQgZTE9JzAwMCciOy8vJGNlay49JHFyeTI7CiAgICAkYXFyeTIgPSBteXNxbF9xdWVyeSgkcXJ5Mik7CiAgICAkcXVlcnllID0gbXlzcWxfZmV0Y2hfYXJyYXkoJGFxcnkyKTsKCiAgICAkcXJ5MyA9ICJTRUxFQ1QgKiBGUk9NIHJlZl9za3BkIFdIRVJFIGMxPSckYzEnIGFuZCBjPSckYycgQU5EIGQ9JyRkJyBBTkQgZT0nJGUnIEFORCBlMT0nJGUxJyI7JGNlay49JHFyeTM7CiAgICAkYXFyeTMgPSBteXNxbF9xdWVyeSgkcXJ5Myk7CiAgICAkcXVlcnllMSA9IG15c3FsX2ZldGNoX2FycmF5KCRhcXJ5Myk7CgoKICAgICRxdWVyeUthdGVnb3JpID0gIlNFTEVDVCBpZCxrYXRlZ29yaV90YW5kYXRhbmdhbiBGUk9NIHJlZl9rYXRlZ29yaV90YW5kYXRhbmdhbiB3aGVyZSBpZCA9IDIzIjsKCgogICAgJHF1ZXJ5UGFuZ2thdD0ic2VsZWN0IG5hbWEsY29uY2F0KG5hbWEsJyAoJyxnb2wsJy8nLHJ1YW5nLCcpJylhcyBuYW1hIGZyb20gcmVmX3BhbmdrYXQgb3JkZXIgYnkgZ29sLHJ1YW5nIjsKICAgICRxdWVyeVBhbmdrYXQyPSJzZWxlY3QgcGFuZ2thdCxjb25jYXQocGFuZ2thdCwnICgnLGdvbCwnLycscnVhbmcsJyknKWFzIG5hbWEgZnJvbSByZWZfdGFuZGF0YW5nYW4gd2hlcmUgcGFuZ2thdD0nIi4kX1JFUVVFU1RbJ3BhbmdrYXQnXS4iJyBhbmQgZ29sPSciLiRfUkVRVUVTVFsnZ29sJ10uIicgYW5kIHJ1YW5nPSciLiRfUkVRVUVTVFsncnVhbmcnXS4iJyI7CiAgICAkcXVlcnlQYW5na2F0Mj1teXNxbF9mZXRjaF9hcnJheShteXNxbF9xdWVyeSgic2VsZWN0IGdvbCxydWFuZyBmcm9tIHJlZl90YW5kYXRhbmdhbiB3aGVyZSBjMT0nJGMxJyBhbmQgYz0nJGMnIGFuZCBkPSckZCcgYW5kIGU9JyRlJyBhbmQgZTE9JyRlMScgYW5kIElkPSciLiR0aGlzLT5mb3JtX2lkcGxoLiInIikpOwogICAgJGNlay49InNlbGVjdCBnb2wscnVhbmcgZnJvbSByZWZfdGFuZGF0YW5nYW4gd2hlcmUgYzE9JyRjMScgYW5kIGM9JyRjJyBhbmQgZD0nJGQnIGFuZCBlPSckZScgYW5kIGUxPSckZTEnIGFuZCBJZD0nIi4kdGhpcy0+Zm9ybV9pZHBsaC4iJyI7CiAgICAgICAvL2l0ZW1zIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICRkYXRrZXRlZ29yaT0ic2VsZWN0IGthdGVnb3JpX3RhbmRhdGFuZ2FuIGZyb20gcmVmX2thdGVnb3JpX3RhbmRhdGFuZ2FuIHdoZXJlIGthdGVnb3JpX3RhbmRhdGFuZ2FuPSciLiRkdFsna2F0ZWdvcmlfdGFuZGF0YW5nYW4nXS4iJyI7CiAgICAkY2VrLj0ic2VsZWN0IGthdGVnb3JpX3RhbmRhdGFuZ2FuIGZyb20gcmVmX2thdGVnb3JpX3RhbmRhdGFuZ2FuIHdoZXJlIGthdGVnb3JpX3RhbmRhdGFuZ2FuPSciLiRkdFsna2F0ZWdvcmlfdGFuZGF0YW5nYW4nXS4iJyI7CiAgICAvLyRxcnlfamFiYXRhbiA9ICJTRUxFQ1QgSWQsIG5hbWEgRlJPTSByZWZfamFiYXRhbiBXSEVSRSBjMT0nJGMxJyBBTkQgYz0nJGMnIEFORCBkPSckZCcgIjsKICAgICRxdWVyeWdlZHVuZz0iIjsKICAgICRkYXRhcGFuZ2thdD0kcXVlcnlQYW5na2F0MlsnZ29sJ10uIi8iLiRxdWVyeVBhbmdrYXQyWydydWFuZyddOwogICAgJGRhdGMxPSRxdWVyeWMxWydjMSddLiIuIi4kcXVlcnljMVsnbm1fc2twZCddOwogICAgJGRhdGM9JHF1ZXJ5Y1snYyddLiIuIi4kcXVlcnljWydubV9za3BkJ107CiAgICAkZGF0ZD0kcXVlcnlkWydkJ10uIi4iLiRxdWVyeWRbJ25tX3NrcGQnXTsKICAgICRkYXRlPSRxdWVyeWVbJ2UnXS4iLiIuJHF1ZXJ5ZVsnbm1fc2twZCddOwogICAgJGRhdGUxPSRxdWVyeWUxWydlMSddLiIuIi4kcXVlcnllMVsnbm1fc2twZCddOwogICAgJHF1ZXJ5S2F0ZWdvcmkxID0gbXlzcWxfZmV0Y2hfYXJyYXkobXlzcWxfcXVlcnkoIlNFTEVDVCAqIGZyb20gcmVmX2thdGVnb3JpX3RhbmRhdGFuZ2FuIHdoZXJlIGlkID0gJzIzJyAiKSk7CiAgICAgJHRoaXMtPmZvcm1fZmllbGRzID0gYXJyYXkoCiAgICAgICdVUlVTQU4nID0+IGFycmF5KAogICAgICAgICAgICAnbGFiZWwnPT4nVVJVU0FOJywKICAgICAgICAgICAgJ2xhYmVsV2lkdGgnPT4xNTAsCiAgICAgICAgICAgICd2YWx1ZSc9PiI8ZGl2IHN0eWxlPSdmbG9hdDpsZWZ0Oyc+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSdkYzEnIGlkPSdkYzEnIHZhbHVlPSciLiRkYXRjMS4iJyBzdHlsZT0nd2lkdGg6NTAwcHg7JyByZWFkb25seT4KICAgICAgICAgICAgPGlucHV0IHR5cGUgPSdoaWRkZW4nIG5hbWU9J2MxJyBpZD0nYzEnIHZhbHVlPSciLiRxdWVyeWMxWydjMSddLiInPgogICAgICAgICAgICA8L2Rpdj4iLAogICAgICAgICAgICAgKSwKCiAgICAgICdiaWRhbmcnID0+IGFycmF5KAogICAgICAgICAgICAnbGFiZWwnPT4nQklEQU5HJywKICAgICAgICAgICAgJ2xhYmVsV2lkdGgnPT4xNTAsCiAgICAgICAgICAgICd2YWx1ZSc9PiI8ZGl2IHN0eWxlPSdmbG9hdDpsZWZ0Oyc+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSdkYycgaWQ9J2RjJyB2YWx1ZT0nIi4kZGF0Yy4iJyBzdHlsZT0nd2lkdGg6NTAwcHg7JyByZWFkb25seT4KICAgICAgICAgICAgPGlucHV0IHR5cGUgPSdoaWRkZW4nIG5hbWU9J2MnIGlkPSdjJyB2YWx1ZT0nIi4kcXVlcnljWydjJ10uIic+CiAgICAgICAgICAgIDwvZGl2PiIsCiAgICAgICAgICAgICApLAoKICAgICAgJ3NrcGQnID0+IGFycmF5KAogICAgICAgICAgICAnbGFiZWwnPT4nU0tQRCcsCiAgICAgICAgICAgICdsYWJlbFdpZHRoJz0+MTUwLAogICAgICAgICAgICAndmFsdWUnPT4iPGRpdiBzdHlsZT0nZmxvYXQ6bGVmdDsnPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0ndGV4dCcgbmFtZT0nZGQnIGlkPSdkZCcgdmFsdWU9JyIuJGRhdGQuIicgc3R5bGU9J3dpZHRoOjUwMHB4OycgcmVhZG9ubHk+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlID0naGlkZGVuJyBuYW1lPSdkJyBpZD0nZCcgdmFsdWU9JyIuJHF1ZXJ5ZFsnZCddLiInPgogICAgICAgICAgICA8L2Rpdj4iLAogICAgICAgICAgICAgKSwKICAgICAgJ3VuaXQnID0+IGFycmF5KAogICAgICAgICAgICAnbGFiZWwnPT4nVU5JVCcsCiAgICAgICAgICAgICdsYWJlbFdpZHRoJz0+MTUwLAogICAgICAgICAgICAndmFsdWUnPT4iPGRpdiBzdHlsZT0nZmxvYXQ6bGVmdDsnPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0ndGV4dCcgbmFtZT0nZGUnIGlkPSdkZScgdmFsdWU9JyIuJGRhdGUuIicgc3R5bGU9J3dpZHRoOjUwMHB4OycgcmVhZG9ubHk+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlID0naGlkZGVuJyBuYW1lPSdlJyBpZD0nZScgdmFsdWU9JyIuJHF1ZXJ5ZVsnZSddLiInPgogICAgICAgICAgICA8L2Rpdj4iLAogICAgICAgICAgICAgKSwKICAgICAgJ3N1YnVuaXQnID0+IGFycmF5KAogICAgICAgICAgICAnbGFiZWwnPT4nU1VCVU5JVCcsCiAgICAgICAgICAgICdsYWJlbFdpZHRoJz0+MTUwLAogICAgICAgICAgICAndmFsdWUnPT4iPGRpdiBzdHlsZT0nZmxvYXQ6bGVmdDsnPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0ndGV4dCcgbmFtZT0nZGUxJyBpZD0nZGUxJyB2YWx1ZT0nIi4kZGF0ZTEuIicgc3R5bGU9J3dpZHRoOjUwMHB4OycgcmVhZG9ubHk+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlID0naGlkZGVuJyBuYW1lPSdlMScgaWQ9J2UxJyB2YWx1ZT0nIi4kcXVlcnllMVsnZTEnXS4iJz4KICAgICAgICAgICAgPC9kaXY+IiwKICAgICAgICAgICAgICksCiAgICAgICdrYXRlZ29yaScgPT4gYXJyYXkoCiAgICAgICAgICAgICdsYWJlbCc9PidLQVRFR09SSScsCiAgICAgICAgICAgICdsYWJlbFdpZHRoJz0+MTUwLAogICAgICAgICAgICAndmFsdWUnPT4iPGlucHV0IHR5cGU9J3RleHQnIHN0eWxlPSd3aWR0aDogMjUwcHg7JyByZWFkb25seT0ncmVhZG9ubHknIGlkPSdrYXRlZ29yaScgbmFtZT0na2F0ZWdvcmknIHZhbHVlPSciLiRxdWVyeUthdGVnb3JpMVtrYXRlZ29yaV90YW5kYXRhbmdhbl0uIicgID4iLAoKCiAgICAgICAgICAgICApLAogICAgLy8gIGNtYlF1ZXJ5KCdmbUphYmF0YW4nLCRkdFsnamFiYXRhbiddLCRxdWVyeUphYmF0YW4sJycsJy0tLS0tLS0tIFBpbGloIC0tLS0tLS0tJykKICAgICAgJ25hbWFwZWdhd2FpJyA9PiBhcnJheSgKICAgICAgICAgICAgJ2xhYmVsJz0+J05BTUEnLAogICAgICAgICAgICAnbGFiZWxXaWR0aCc9PjE1MCwKICAgICAgICAgICAgJ3ZhbHVlJz0+IjxkaXYgc3R5bGU9J2Zsb2F0OmxlZnQ7Jz4KICAgICAgICAgICAgPGlucHV0IHR5cGU9J3RleHQnIG5hbWU9J25hbWFwZWdhd2FpJyBpZD0nbmFtYXBlZ2F3YWknIHZhbHVlPSciLiRkdFsnbmFtYSddLiInIHN0eWxlPSd3aWR0aDo1MDBweDsnPgoKICAgICAgICAgICAgPC9kaXY+IiwKICAgICAgICAgICAgICksCiAgICAgICduaXBwZWdhd2FpJyA9PiBhcnJheSgKICAgICAgICAgICAgJ2xhYmVsJz0+J05JUCcsCiAgICAgICAgICAgICdsYWJlbFdpZHRoJz0+MTcwLAogICAgICAgICAgICAndmFsdWUnPT4iPGRpdiBzdHlsZT0nZmxvYXQ6bGVmdDsnPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0ndGV4dCcgbmFtZT0nbmlwcGVnYXdhaScgaWQ9J25pcHBlZ2F3YWknIHZhbHVlPSciLiRkdFsnbmlwJ10uIicgc3R5bGU9J3dpZHRoOjI1MHB4Oyc+CgogICAgICAgICAgICA8L2Rpdj4iLAogICAgICAgICAgICAgKSwKCgoKICAgICAgJ3BhbmdrYXQnID0+IGFycmF5KAogICAgICAgICAgICAnbGFiZWwnPT4nUEFOR0tBVC8gR09MLyBSVUFORy4nLAogICAgICAgICAgICAnbGFiZWxXaWR0aCc9PjE1MCwKICAgICAgICAgICAgJ3ZhbHVlJz0+CiAgICAgICAgICAgICI8ZGl2IGlkPSdjb250X2dkJz4iLmNtYlF1ZXJ5KCdwYW5na2F0YWtoaXInLCRfUkVRVUVTVFsncGFuZ2thdCddLCRxdWVyeVBhbmdrYXQsJ3N0eWxlPSJ3aWR0aDoyNTBweDsib25jaGFuZ2U9IicuJHRoaXMtPlByZWZpeC4nLnBpbGloUGFuZ2thdCgpIicsJy0tUElMSUgtLScpLiImbmJzcCZuYnNwIi4iPGlucHV0IHR5cGU9J3RleHQnIG5hbWU9J2dvbGFuZ19ha2hpcicgc3R5bGU9J3dpZHRoOjQwcHg7JyBpZD0nZ29sYW5nX2FraGlyJyBzaXplPTEgdmFsdWU9JyIuJGRhdGFwYW5na2F0LiInIHJlYWRvbmx5PgoKICAgICAgICAgICAgPC9kaXY+IiwKICAgICAgICAgICAgICksCgogICAgICAnamFiYXRhbicgPT4gYXJyYXkoCiAgICAgICAgICAgICdsYWJlbCc9PidKQUJBVEFOJywKICAgICAgICAgICAgJ2xhYmVsV2lkdGgnPT4xNTAsCiAgICAgICAgICAgICd2YWx1ZSc9PiI8ZGl2IHN0eWxlPSdmbG9hdDpsZWZ0Oyc+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSdqYWJhdGFuJyBpZD0namFiYXRhbicgdmFsdWU9JyIuJGR0WydqYWJhdGFuJ10uIicgc3R5bGU9J3dpZHRoOjMwMHB4Oyc+CgogICAgICAgICAgICA8L2Rpdj4iLAogICAgICAgICAgICAgKSwKCgogICAgICAnZXNlbG9uJyA9PiBhcnJheSgKICAgICAgICAgICAgJ2xhYmVsJz0+J0VTRUxPTicsCiAgICAgICAgICAgICdsYWJlbFdpZHRoJz0+MTUwLAogICAgICAgICAgICAndmFsdWUnPT5jbWJBcnJheSgnZXNlbG9uX2FraGlyJywkX1JFUVVFU1RbJ2VzZWxvbiddLCR0aGlzLT5hcnJFc2Vsb24sJy0tUElMSUgtLScsJ3N0eWxlPXdpZHRoOjEwMHB4OycpLAogICAgICAgICAgLy8gICd2YWx1ZSc9PmNtYkFycmF5KCdzdGF0dXMnLCRkdFsnc3RhdHVzJ10sJHRoaXMtPnN0U3RhdHVzLCctLVBJTElIIFN0YXR1cy0tJywnJyksCiAgICAgICAgICAgICksCgogICAgICApOwogICAgLy90b21ib2wKICAgICR0aGlzLT5mb3JtX21lbnViYXdhaCA9CiAgICAgICI8aW5wdXQgdHlwZT0naGlkZGVuJyBuYW1lPSdJZF9za3BkJyBpZD0nSWRfc2twZCcgIHZhbHVlPSciLiRJZC4iJz4iLgogICAgICAiPGlucHV0IHR5cGU9J2J1dHRvbicgdmFsdWU9J1NpbXBhbicgb25jbGljayA9JyIuJHRoaXMtPlByZWZpeC4iLlNpbXBhblRURCgpJyB0aXRsZT0nU2ltcGFuJyA+Ii4KICAgICAgIjxpbnB1dCB0eXBlPSdidXR0b24nIHZhbHVlPSdCYXRhbCcgb25jbGljayA9JyIuJHRoaXMtPlByZWZpeC4iLkNsb3NlKCknID4iOwoKICAgICRmb3JtID0gJHRoaXMtPmdlbkZvcm0oKTsKICAgICRjb250ZW50ID0gJGZvcm07Ly8kY29udGVudCA9ICdjb250ZW50JzsKICAgIHJldHVybiAgYXJyYXkgKCdjZWsnPT4kY2VrLCAnZXJyJz0+JGVyciwgJ2NvbnRlbnQnPT4kY29udGVudCk7CiAgfQoKZnVuY3Rpb24gc2ltcGFuVFREKCl7CiAgIGdsb2JhbCAkSFRUUF9DT09LSUVfVkFSUzsKICAgZ2xvYmFsICRNYWluOwoKICAgJHVpZCA9ICRIVFRQX0NPT0tJRV9WQVJTWydjb0lEJ107CiAgICRjZWsgPSAnJzsgJGVycj0nJzsgJGNvbnRlbnQ9Jyc7ICRqc29uPVRSVUU7CiAgLy9nZXQgZGF0YSAtLS0tLS0tLS0tLS0tLS0tLQogICAkZm1TVCA9ICRfUkVRVUVTVFskdGhpcy0+UHJlZml4LidfZm1TVCddOwogICAkaWRwbGggPSAkX1JFUVVFU1RbJHRoaXMtPlByZWZpeC4nX2lkcGxoJ107CiAgICRrb2RlMT0gJF9SRVFVRVNUWydjMSddOwogICAka29kZTI9ICRfUkVRVUVTVFsnYyddOwogICAka29kZTM9ICRfUkVRVUVTVFsnZCddOwogICAka29kZTQ9ICRfUkVRVUVTVFsnZSddOwogICAka29kZTU9ICRfUkVRVUVTVFsnZTEnXTsKICAgJG5hbWFwZWdhd2FpPSAkX1JFUVVFU1RbJ25hbWFwZWdhd2FpJ107CiAgICRuaXBwZWdhd2FpPSAkX1JFUVVFU1RbJ25pcHBlZ2F3YWknXTsKCiAgICRwMT0gJF9SRVFVRVNUWydwYW5na2F0YWtoaXInXTsKCiAgICRnb2xhbmdfYWtoaXI9ICRfUkVRVUVTVFsnZ29sYW5nX2FraGlyJ107CiAgICRnb2xvbmdhbiA9IGV4cGxvZGUoIi8iLCAkZ29sYW5nX2FraGlyKTsKICAgJGphYmF0YW49ICRfUkVRVUVTVFsnamFiYXRhbiddOwogICAkZXNlbG9uPSAkX1JFUVVFU1RbJ2VzZWxvbl9ha2hpciddOwogICAka2F0ZWdvcmk9ICRfUkVRVUVTVFsna2F0ZWdvcmknXTsKCgogICRvbGR5PW15c3FsX2ZldGNoX2FycmF5KAogICAgbXlzcWxfcXVlcnkoCiAgICAgICJzZWxlY3QgY291bnQoKikgYXMgY250IGZyb20gcmVmX3RhbmRhdGFuZ2FuIHdoZXJlIG5pcD0nJG5pcHBlZ2F3YWknIgogICAgKSk7CiAgIGlmKCAkZXJyPT0nJyAmJiAkbmFtYXBlZ2F3YWkgPT0nJyApICRlcnI9ICdOQU1BIFBFR0FXQUkgQmVsdW0gRGkgSXNpICEhJzsKICAgaWYoICRlcnI9PScnICYmICRuaXBwZWdhd2FpID09JycgKSAkZXJyPSAnTklQIEJlbHVtIERpIElzaSAhISc7CiAgIGlmKCAkZXJyPT0nJyAmJiAkcDEgPT0nJyApICRlcnI9ICdQQU5HS0FULyBHT0wvIFJVQU5HIEJlbHVtIERpIFBpbGloICEhJzsKICAgaWYoICRlcnI9PScnICYmICRqYWJhdGFuID09JycgKSAkZXJyPSAnSkFCQVRBTiBCZWx1bSBEaSBJc2kgISEnOwogICBpZiggJGVycj09JycgJiYgJGthdGVnb3JpID09JycgKSAkZXJyPSAnS2F0ZWdvcmkgQmVsdW0gRGkgUGlsaWggISEnOwoKICAgICAgaWYoJGZtU1QgPT0gMCl7CiAgICAgIGlmKCRlcnI9PScnICYmICRvbGR5WydjbnQnXT4wKSAkZXJyPSJOSVAgJyRuaXBwZWdhd2FpJyBTdWRhaCBBZGEiOwogICAgICAgIGlmKCRlcnI9PScnKXsKCiAgICAgICAgICAkYXFyeSA9ICJJTlNFUlQgaW50byByZWZfdGFuZGF0YW5nYW4gKGMxLGMsZCxlLGUxLG5hbWEsbmlwLGphYmF0YW4scGFuZ2thdCxnb2wscnVhbmcsZXNlbG9uLGthdGVnb3JpX3RhbmRhdGFuZ2FuKSB2YWx1ZXMoJyRrb2RlMScsJyRrb2RlMicsJyRrb2RlMycsJyRrb2RlNCcsJyRrb2RlNScsJyRuYW1hcGVnYXdhaScsJyRuaXBwZWdhd2FpJywnJGphYmF0YW4nLCckcDEnLCckZ29sb25nYW5bMF0nLCckZ29sb25nYW5bMV0nLCckZXNlbG9uJywnMjMnKSI7ICAkY2VrIC49ICRhcXJ5OwogICAgICAgICAgJHFyeSA9IG15c3FsX3F1ZXJ5KCRhcXJ5KTsKCiAgICAgICAgICAkY29udGVudCA9IGFycmF5KCdjb21ib3R0ZCcgPT4gY21iUXVlcnkoJ3R0ZCcsJGQsIlNFTEVDVCBJZCwgbmFtYSBmcm9tIHJlZl90YW5kYXRhbmdhbiB3aGVyZSBrYXRlZ29yaV90YW5kYXRhbmdhbiA9IDIzIGFuZCBjMSA9ICciLiRfUkVRVUVTVFtjMV0uIicgYW5kIGMgPSAnIi4kX1JFUVVFU1RbY10uIicgYW5kIGQgPSAnIi4kX1JFUVVFU1RbZF0uIicgYW5kIGUgPSAnIi4kX1JFUVVFU1RbZV0uIicgYW5kIGUxID0gJyIuJF9SRVFVRVNUW2UxXS4iJyAiLCdvbmNoYW5nZT1ya2EucmVmcmVzaExpc3QodHJ1ZSk7JywnLS0gVFREIC0tJykpOwogICAgICAgIH0KICAgICAgfWVsc2V7CiAgICAgICAgaWYoJGVycj09JycpewogICAgICAgICRhcXJ5ID0gIlVQREFURSByZWZfdGFuZGF0YW5nYW4gU0VUIG5hbWE9JyRuYW1hcGVnYXdhaScsIG5pcD0nJG5pcHBlZ2F3YWknLCBqYWJhdGFuPSckamFiYXRhbicgLHBhbmdrYXQ9JyRwMScsIGdvbD0nJGdvbG9uZ2FuWzBdJyAscnVhbmc9JyRnb2xvbmdhblsxXScsZXNlbG9uPSckZXNlbG9uJyAsa2F0ZWdvcmlfdGFuZGF0YW5nYW49JyRrYXRlZ29yaScgV0hFUkUgSWQ9JyIuJGlkcGxoLiInIjsgICRjZWsgLj0gJGFxcnk7CiAgICAgICAgICAgICRxcnkgPSBteXNxbF9xdWVyeSgkYXFyeSkgb3IgZGllKG15c3FsX2Vycm9yKCkpOwogICAgICAgICAgfQogICAgICB9IC8vZW5kIGVsc2UKCiAgICAgIHJldHVybiAgYXJyYXkgKCdjZWsnPT4kY2VrLCAnZXJyJz0+JGVyciwgJ2NvbnRlbnQnPT4kY29udGVudCk7CiAgICB9CgogIGZ1bmN0aW9uIHNldFRpdGxlKCl7CiAgICByZXR1cm4gJ1BFTkdFTFVBUkFOJzsKICB9CiAgZnVuY3Rpb24gc2V0TWVudVZpZXcoKXsKICAgIHJldHVybgogICAgICAvLyAiPHRkPiIuZ2VuUGFuZWxJY29uKCJqYXZhc2NyaXB0OiIuJHRoaXMtPlByZWZpeC4iLkxhcG9yYW4oKSIsInByaW50X2YyLnBuZyIsJ0xhcG9yYW4nLCJMYXBvcmFuIikuIjwvdGQ+IjsKICAgICAgIiI7CiAgfQogIGZ1bmN0aW9uIHNldE1lbnVFZGl0KCl7CgogICAgJGxpc3RNZW51ID0KICAgICAgICAgICI8dGQ+Ii5nZW5QYW5lbEljb24oImphdmFzY3JpcHQ6Ii4kdGhpcy0+UHJlZml4LiIuQmFydSgpIiwic2VjdGlvbnMucG5nIiwiQmFydSAiLCAnQmFydSAnKS4iPC90ZD4iLgogICAgICAgICAgIjx0ZD4iLmdlblBhbmVsSWNvbigiamF2YXNjcmlwdDoiLiR0aGlzLT5QcmVmaXguIi5FZGl0KCkiLCJlZGl0X2YyLnBuZyIsIkVkaXQiLCAnRWRpdCcpLiI8L3RkPiIuCiAgICAgICAgICAiPHRkPiIuZ2VuUGFuZWxJY29uKCJqYXZhc2NyaXB0OiIuJHRoaXMtPlByZWZpeC4iLkhhcHVzKCkiLCJkZWxldGVfZjIucG5nIiwiSGFwdXMiLCAnSGFwdXMnKS4iPC90ZD4iLgogICAgICAgICAgIjx0ZD4iLmdlblBhbmVsSWNvbigiamF2YXNjcmlwdDoiLiR0aGlzLT5QcmVmaXguIi5Qb3N0aW5nKCkiLCJwdWJsaXNoZGF0YS5wbmciLCJQb3N0aW5nICIsICdQb3N0aW5nICcpLiI8L3RkPiIuCiAgICAgICAgICAiPHRkPiIuZ2VuUGFuZWxJY29uKCJqYXZhc2NyaXB0OiIuJHRoaXMtPlByZWZpeC4iLkxhcG9yYW4oKSIsInByaW50X2YyLnBuZyIsIkxhcG9yYW4gIiwgJ0xhcG9yYW4gJykuIjwvdGQ+IgogICAgICAgICAgLy8gLiI8dGQ+Ii5nZW5QYW5lbEljb24oImphdmFzY3JpcHQ6Ii4kdGhpcy0+UHJlZml4LiIuTGFwb3JhbjQoKSIsInByaW50X2YyLnBuZyIsIkZvcm0gIiwgJ0Zvcm0gJykuIjwvdGQ+IgogICAgICAgICAgOwoKCiAgICByZXR1cm4gJGxpc3RNZW51IDsKICB9CgoKICBmdW5jdGlvbiBzZXRfc2VsZWN0b3Jfb3RoZXIyKCR0aXBlKXsKICAgZ2xvYmFsICRNYWluOwogICAkY2VrID0gJyc7ICRlcnI9Jyc7ICRjb250ZW50PScnOyAkanNvbj1UUlVFOwoKICAgcmV0dXJuIGFycmF5ICgnY2VrJz0+JGNlaywgJ2Vycic9PiRlcnIsICdjb250ZW50Jz0+JGNvbnRlbnQsICdqc29uJz0+JGpzb24pOwogIH0KCiAgZnVuY3Rpb24gc2V0X3NlbGVjdG9yX290aGVyKCR0aXBlKXsKICAgZ2xvYmFsICRNYWluOwogICAkY2VrID0gJyc7ICRlcnI9Jyc7ICRjb250ZW50PScnOyAkanNvbj1UUlVFOwoKICAgIHN3aXRjaCgkdGlwZSl7CgogICAgY2FzZSAncGlsaWhQYW5na2F0Jzp7CiAgICAgIGdsb2JhbCAkTWFpbjsKICAgICAgJGNlayA9ICcnOyAkZXJyPScnOyAkY29udGVudD0nJzsgJGpzb249VFJVRTsKCiAgICAgICRpZHBhbmdrYXQgPSAkX1JFUVVFU1RbJ3BhbmdrYXRha2hpciddOwoKICAgICAgJHF1ZXJ5ID0gInNlbGVjdCBjb25jYXQoZ29sLCcvJyxydWFuZylhcyBuYW1hIEZST00gcmVmX3BhbmdrYXQgV0hFUkUgbmFtYT0nJGlkcGFuZ2thdCciIDsKICAgICAgJGdldD1teXNxbF9mZXRjaF9hcnJheShteXNxbF9xdWVyeSgkcXVlcnkpKTskY2VrLj0kcXVlcnk7CiAgICAgICRjb250ZW50PSRnZXRbJ25hbWEnXTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSAnUGVuZ2VsdWFyYW4nOnsKICAgICAgJGpzb24gPSBGQUxTRTsKICAgICAgJHRoaXMtPlBlbmdlbHVhcmFuKCk7CiAgICBicmVhazsKICAgIH0KCiAgICBjYXNlICdMYXBvcmFuJzp7CiAgICAgICRmbSA9ICAkdGhpcy0+TGFwb3JhbigkX1JFUVVFU1QpOwogICAgICAkY2VrID0gJGZtWydjZWsnXTsKICAgICAgJGVyciA9ICRmbVsnZXJyJ107CiAgICAgICRjb250ZW50ID0gJGZtWydjb250ZW50J107CiAgICBicmVhazsKICAgIH0KICAgIGNhc2UgJ3NhdmVOZXdUYW5kYVRhbmdhbic6ewogICAgICBnbG9iYWwgJE1haW47CiAgICAgICRrb2RlMT0gJF9SRVFVRVNUWydjMSddOwogICAgICAka29kZTI9ICRfUkVRVUVTVFsnYyddOwogICAgICAka29kZTM9ICRfUkVRVUVTVFsnZCddOwogICAgICAka29kZTQ9ICRfUkVRVUVTVFsnZSddOwogICAgICAka29kZTU9ICRfUkVRVUVTVFsnZTEnXTsKICAgICAgaWYoIWVtcHR5KCRlMSkgJiYgJGUxICE9ICcwMDAnKXsKICAgICAgICAka29uZGlzaVVuaXQgPSAiIGFuZCBlID0gJyRlJyAgYW5kIGUxID0gJyRlMSciOwogICAgICB9ZWxzZSBpZighZW1wdHkoJGUpICYmICRlICE9ICcwMCcpewogICAgICAgICRrb25kaXNpVW5pdCA9ICIgYW5kIGUgPSAnJGUnICAiOwogICAgICB9CiAgICAgICRuYW1hcGVnYXdhaT0gJF9SRVFVRVNUWyduYW1hcGVnYXdhaSddOwogICAgICAkbmlwcGVnYXdhaT0gJF9SRVFVRVNUWyduaXBwZWdhd2FpJ107CgogICAgICAkcDE9ICRfUkVRVUVTVFsncGFuZ2thdGFraGlyJ107CgogICAgICAkZ29sYW5nX2FraGlyPSAkX1JFUVVFU1RbJ2dvbGFuZ19ha2hpciddOwogICAgICAkZ29sb25nYW4gPSBleHBsb2RlKCIvIiwgJGdvbGFuZ19ha2hpcik7CiAgICAgICRqYWJhdGFuPSAkX1JFUVVFU1RbJ2phYmF0YW4nXTsKICAgICAgJGVzZWxvbj0gJF9SRVFVRVNUWydlc2Vsb25fYWtoaXInXTsKICAgICAgJGthdGVnb3JpPSAkX1JFUVVFU1RbJ2thdGVnb3JpJ107CgoKICAgICAgJG9sZHk9bXlzcWxfZmV0Y2hfYXJyYXkoCiAgICAgICBteXNxbF9xdWVyeSgKICAgICAgICAgInNlbGVjdCBjb3VudCgqKSBhcyBjbnQgZnJvbSByZWZfdGFuZGF0YW5nYW4gd2hlcmUgbmlwPSckbmlwcGVnYXdhaSciCiAgICAgICApKTsKICAgICAgaWYoICRlcnI9PScnICYmICRuYW1hcGVnYXdhaSA9PScnICkgJGVycj0gJ05BTUEgUEVHQVdBSSBCZWx1bSBEaSBJc2kgISEnOwogICAgICBpZiggJGVycj09JycgJiYgJG5pcHBlZ2F3YWkgPT0nJyApICRlcnI9ICdOSVAgQmVsdW0gRGkgSXNpICEhJzsKICAgICAgaWYoICRlcnI9PScnICYmICRwMSA9PScnICkgJGVycj0gJ1BBTkdLQVQvIEdPTC8gUlVBTkcgQmVsdW0gRGkgUGlsaWggISEnOwogICAgICBpZiggJGVycj09JycgJiYgJGphYmF0YW4gPT0nJyApICRlcnI9ICdKQUJBVEFOIEJlbHVtIERpIElzaSAhISc7CgogICAgICAgICBpZigkZm1TVCA9PSAwKXsKICAgICAgICAgaWYoJGVycj09JycgJiYgJG9sZHlbJ2NudCddPjApICRlcnI9Ik5JUCAnJG5pcHBlZ2F3YWknIFN1ZGFoIEFkYSI7CiAgICAgICAgICAgaWYoJGVycj09JycpewoKICAgICAgICAgICAgICRhcXJ5ID0gIklOU0VSVCBpbnRvIHJlZl90YW5kYXRhbmdhbiAoYzEsYyxkLGUsZTEsbmFtYSxuaXAsamFiYXRhbixwYW5na2F0LGdvbCxydWFuZyxlc2Vsb24sa2F0ZWdvcmlfdGFuZGF0YW5nYW4pIHZhbHVlcygnJGtvZGUxJywnJGtvZGUyJywnJGtvZGUzJywnJGtvZGU0JywnJGtvZGU1JywnJG5hbWFwZWdhd2FpJywnJG5pcHBlZ2F3YWknLCckamFiYXRhbicsJyRwMScsJyRnb2xvbmdhblswXScsJyRnb2xvbmdhblsxXScsJyRlc2Vsb24nLCcnKSI7ICAkY2VrIC49ICRhcXJ5OwogICAgICAgICAgICAgJHFyeSA9IG15c3FsX3F1ZXJ5KCRhcXJ5KTsKICAgICAgICAgICAgICRjb250ZW50ID0gYXJyYXkoJ2NvbWJvdHRkJyA9PiBjbWJRdWVyeSgnaWRQZW5hbmRhVGFuZ2FuJywkZCwiU0VMRUNUIElkLCBuYW1hIGZyb20gcmVmX3RhbmRhdGFuZ2FuIHdoZXJlIGMxID0gJyIuJF9SRVFVRVNUW2MxXS4iJyBhbmQgYyA9ICciLiRfUkVRVUVTVFtjXS4iJyBhbmQgZCA9ICciLiRfUkVRVUVTVFtkXS4iJyAka29uZGlzaVVuaXQiLCIiLCctLSBUVEQgLS0nKSwnaWRNZW5nZXRhaHVpJyA9PiBjbWJRdWVyeSgnaWRNZW5nZXRhaHVpJywkZCwiU0VMRUNUIElkLCBuYW1hIGZyb20gcmVmX3RhbmRhdGFuZ2FuIHdoZXJlIGMxID0gJyIuJF9SRVFVRVNUW2MxXS4iJyBhbmQgYyA9ICciLiRfUkVRVUVTVFtjXS4iJyBhbmQgZCA9ICciLiRfUkVRVUVTVFtkXS4iJyAka29uZGlzaVVuaXQiLCIiLCctLSBUVEQgLS0nKSk7CiAgICAgICAgICAgfQogICAgICAgICB9ZWxzZXsKICAgICAgICAgICBpZigkZXJyPT0nJyl7CiAgICAgICAgICAgJGFxcnkgPSAiVVBEQVRFIHJlZl90YW5kYXRhbmdhbiBTRVQgbmFtYT0nJG5hbWFwZWdhd2FpJywgbmlwPSckbmlwcGVnYXdhaScsIGphYmF0YW49JyRqYWJhdGFuJyAscGFuZ2thdD0nJHAxJywgZ29sPSckZ29sb25nYW5bMF0nICxydWFuZz0nJGdvbG9uZ2FuWzFdJyxlc2Vsb249JyRlc2Vsb24nICBXSEVSRSBJZD0nIi4kaWRwbGguIiciOyAgJGNlayAuPSAkYXFyeTsKICAgICAgICAgICAgICAgJHFyeSA9IG15c3FsX3F1ZXJ5KCRhcXJ5KSBvciBkaWUobXlzcWxfZXJyb3IoKSk7CiAgICAgICAgICAgICB9CiAgICAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlICdwaWxpaFBhbmdrYXQnOnsKICAgICAgZ2xvYmFsICRNYWluOwogICAgICAkY2VrID0gJyc7ICRlcnI9Jyc7ICRjb250ZW50PScnOyAkanNvbj1UUlVFOwoKICAgICAgJGlkcGFuZ2thdCA9ICRfUkVRVUVTVFsncGFuZ2thdGFraGlyJ107CgogICAgICAkcXVlcnkgPSAic2VsZWN0IGNvbmNhdChnb2wsJy8nLHJ1YW5nKWFzIG5hbWEgRlJPTSByZWZfcGFuZ2thdCBXSEVSRSBuYW1hPSckaWRwYW5na2F0JyIgOwogICAgICAkZ2V0PW15c3FsX2ZldGNoX2FycmF5KG15c3FsX3F1ZXJ5KCRxdWVyeSkpOyRjZWsuPSRxdWVyeTsKICAgICAgJGNvbnRlbnQ9JGdldFsnbmFtYSddOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgJ3ZpZXdMYXBvcmFuJzp7CiAgICAgICRqc29uID0gRkFMU0U7CiAgICAgICR0aGlzLT52aWV3TGFwb3JhbigpOwogICAgYnJlYWs7CiAgICB9CiAgICBjYXNlICduZXdUYW5kYVRhbmdhbmdhbic6ewogICAgICAkZm0gPSAkdGhpcy0+bmV3VGFuZGFUYW5nYW5nYW4oKTsKICAgICAgJGNlayAuPSAkZm1bJ2NlayddOwogICAgICAkZXJyID0gJGZtWydlcnInXTsKICAgICAgJGNvbnRlbnQgPSAkZm1bJ2NvbnRlbnQnXTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlICdmb3JtQmFydVRURCc6ewogICAgICAkZm0gPSAkdGhpcy0+c2V0Rm9ybUJhcnVUVEQoKTsKICAgICAgJGNlayA9ICRmbVsnY2VrJ107CiAgICAgICRlcnIgPSAkZm1bJ2VyciddOwogICAgICAkY29udGVudCA9ICRmbVsnY29udGVudCddOwogICAgYnJlYWs7CiAgICB9CiAgICBjYXNlICdzaW1wYW5UVEQnOnsKICAgICAgJGdldD0gJHRoaXMtPnNpbXBhblRURCgpOwogICAgICAkY2VrID0gJGdldFsnY2VrJ107CiAgICAgICRlcnIgPSAkZ2V0WydlcnInXTsKICAgICAgJGNvbnRlbnQgPSAkZ2V0Wydjb250ZW50J107CiAgICBicmVhazsKICAgICB9CiAgICBjYXNlICdzYXZlUG9zdGluZyc6ewogICAgICBmb3JlYWNoICgkX1JFUVVFU1QgYXMgJGtleSA9PiAkdmFsdWUpIHsKICAgICAgICAgJCRrZXkgPSAkdmFsdWU7CiAgICAgIH0KICAgICAgJGdldERhdGEgPSBteXNxbF9mZXRjaF9hcnJheShteXNxbF9xdWVyeSgic2VsZWN0ICogZnJvbSBwZW5nZWx1YXJhbiB3aGVyZSBpZCA9ICckaWRQb3N0aW5nJyIpKTsKICAgICAgJGV4cGxvZGVUYW5nZ2FsQnVrdSA9IGV4cGxvZGUoIi0iLCRnZXREYXRhWyd0YW5nZ2FsJ10pOwogICAgICAkYnVsYW5CdWt1ID0gJGV4cGxvZGVUYW5nZ2FsQnVrdVsxXTsKICAgICAgaWYoJGJ1bGFuQnVrdSA8PSA2KXsKICAgICAgICAkc2VtZXN0ZXJQb3N0aW5nID0gIjEiOwogICAgICB9ZWxzZWlmKCRidWxhbkJ1a3UgPj0gNyl7CiAgICAgICAgJHNlbWVzdGVyUG9zdGluZyA9ICIyIjsKICAgICAgfQogICAgICAka29kZVNLUEQgPSAkZ2V0RGF0YVsnYzEnXS4iLiIuJGdldERhdGFbJ2MnXS4iLiIuJGdldERhdGFbJ2QnXS4iLiIuJGdldERhdGFbJ2UnXS4iLiIuJGdldERhdGFbJ2UxJ107CiAgICAgICRzdGF0dXNDbG9zaW5nID0gJHRoaXMtPmdldFN0YXR1c0Nsb3NpbmcoJGdldERhdGFbJ2MxJ10uIi4iLiRnZXREYXRhWydjJ10uIi4iLiRnZXREYXRhWydkJ10uIi4iLiRnZXREYXRhWydlJ10uIi4iLiRnZXREYXRhWydlMSddLCRnZXREYXRhWyd0YW5nZ2FsJ10pOwogICAgICBpZigkc3RhdHVzQ2xvc2luZyAhPSAwKXsKICAgICAgICAkZXJyID0gIkRhdGEgc3VkYWggZGkgY2xvc2luZyAhIjsKICAgICAgfQoKICAgICAgaWYoJGVyciA9PSAnJyl7CiAgICAgICAgaWYoJHNlbWVzdGVyUG9zdGluZyA9PSAiMSIpewogICAgICAgICAgJHRoaXMtPnNxbFF1ZXJ5KCJERUxFVEUgZnJvbSB0X3BlcnNlZGlhYW5fbG9ja19iYXJhbmcgV0hFUkUgY29uY2F0KGMxLCcuJyxjLCcuJyxkLCcuJyxlLCcuJyxlMSkgPSAnJGtvZGVTS1BEJyBhbmQgdGFodW4gPSAnJHRoaXMtPnRhaHVuQW5nZ2FyYW4nIGFuZCBzZW1lc3RlciA9ICcxJyAiKTsKICAgICAgICAgICR0aGlzLT5zcWxRdWVyeSgiREVMRVRFIGZyb20gdF9wZXJzZWRpYWFuX2xvY2tfYmFyYW5nIFdIRVJFIGNvbmNhdChjMSwnLicsYywnLicsZCwnLicsZSwnLicsZTEpID0gJyRrb2RlU0tQRCcgYW5kIHRhaHVuID0gJyR0aGlzLT50YWh1bkFuZ2dhcmFuJyBhbmQgc2VtZXN0ZXIgPSAnMicgIik7CgogICAgICAgICAgJGdyYWJEaXN0cmlidXNpID0gJHRoaXMtPnNxbFF1ZXJ5KCJzZWxlY3QgKiBmcm9tIHRfa2FydHVfcGVyc2VkaWFhbiB3aGVyZSBjb25jYXQoYzEsJy4nLGMsJy4nLGQsJy4nLGUsJy4nLGUxKSA9ICcka29kZVNLUEQnIGFuZCB5ZWFyKHRhbmdnYWxfYnVrdSkgPSAnJHRoaXMtPnRhaHVuQW5nZ2FyYW4nIGFuZCBqbnMgPSAnNyciKTsKICAgICAgICAgIHdoaWxlICgkZGF0YURpc3RyaWJ1c2kgPSAkdGhpcy0+c3FsQXJyYXkoJGdyYWJEaXN0cmlidXNpKSkgewogICAgICAgICAgICAkZ2V0RGF0YVBlbmVyaW1hRGlzdHJpYnVzaSA9ICR0aGlzLT5zcWxBcnJheSgkdGhpcy0+c3FsUXVlcnkoInNlbGVjdCAqIGZyb20gdF9rYXJ0dV9wZXJzZWRpYWFuIHdoZXJlIHllYXIodGFuZ2dhbF9idWt1KSA9ICckdGhpcy0+dGFodW5BbmdnYXJhbicgYW5kIGpucyA9ICczJyBhbmQgbm9tb3IgPSAnIi4kZGF0YURpc3RyaWJ1c2lbJ25vbW9yJ10uIiciKSk7CiAgICAgICAgICAgICRjZWsgPSAic2VsZWN0ICogZnJvbSB0X2thcnR1X3BlcnNlZGlhYW4gd2hlcmUgeWVhcih0YW5nZ2FsX2J1a3UpID0gJyR0aGlzLT50YWh1bkFuZ2dhcmFuJyBhbmQgam5zID0gJzMnIGFuZCBub21vciA9ICciLiRkYXRhRGlzdHJpYnVzaVsnbm9tb3InXS4iJyI7CiAgICAgICAgICAgICRrb2RlU0tQRERpc3RyaWJ1c2kgPSAkZ2V0RGF0YVBlbmVyaW1hRGlzdHJpYnVzaVsnYzEnXS4iLiIuJGdldERhdGFQZW5lcmltYURpc3RyaWJ1c2lbJ2MnXS4iLiIuJGdldERhdGFQZW5lcmltYURpc3RyaWJ1c2lbJ2QnXS4iLiIuJGdldERhdGFQZW5lcmltYURpc3RyaWJ1c2lbJ2UnXS4iLiIuJGdldERhdGFQZW5lcmltYURpc3RyaWJ1c2lbJ2UxJ107CiAgICAgICAgICAgICR0aGlzLT5zcWxRdWVyeSgiZGVsZXRlIGZyb20gdF9wZXJzZWRpYWFuX2xvY2tfYmFyYW5nIFdIRVJFIGNvbmNhdChjMSwnLicsYywnLicsZCwnLicsZSwnLicsZTEpID0gJyRrb2RlU0tQRERpc3RyaWJ1c2knIGFuZCB0YWh1biA9ICckdGhpcy0+dGFodW5BbmdnYXJhbicgIik7CiAgICAgICAgICAgICR0aGlzLT5zcWxRdWVyeSgiZGVsZXRlIGZyb20gY2xvc2luZ19wZXJzZWRpYWFuIFdIRVJFIGNvbmNhdChjMSwnLicsYywnLicsZCwnLicsZSwnLicsZTEpID0gJyRrb2RlU0tQRERpc3RyaWJ1c2knIGFuZCB0YWh1bl9hbmdnYXJhbiA9ICckdGhpcy0+dGFodW5BbmdnYXJhbicgIik7CiAgICAgICAgICB9CiAgICAgICAgfWVsc2V7CiAgICAgICAgICAkdGhpcy0+c3FsUXVlcnkoIkRFTEVURSBmcm9tIHRfcGVyc2VkaWFhbl9sb2NrX2JhcmFuZyBXSEVSRSBjb25jYXQoYzEsJy4nLGMsJy4nLGQsJy4nLGUsJy4nLGUxKSA9ICcka29kZVNLUEQnIGFuZCB0YWh1biA9ICckdGhpcy0+dGFodW5BbmdnYXJhbicgYW5kIHNlbWVzdGVyID0gJyRzZW1lc3RlclBvc3RpbmcnICIpOwogICAgICAgICAgJGdyYWJEaXN0cmlidXNpID0gJHRoaXMtPnNxbFF1ZXJ5KCJzZWxlY3QgKiBmcm9tIHRfa2FydHVfcGVyc2VkaWFhbiB3aGVyZSBjb25jYXQoYzEsJy4nLGMsJy4nLGQsJy4nLGUsJy4nLGUxKSA9ICcka29kZVNLUEQnIGFuZCB5ZWFyKHRhbmdnYWxfYnVrdSkgPSAnJHRoaXMtPnRhaHVuQW5nZ2FyYW4nIGFuZCBtb250aCh0YW5nZ2FsX2J1a3UpID49ICckYnVsYW5CdWt1JyAgYW5kIGpucyA9ICc3JyIpOwogICAgICAgICAgd2hpbGUgKCRkYXRhRGlzdHJpYnVzaSA9ICR0aGlzLT5zcWxBcnJheSgkZ3JhYkRpc3RyaWJ1c2kpKSB7CiAgICAgICAgICAgICRnZXREYXRhUGVuZXJpbWFEaXN0cmlidXNpID0gJHRoaXMtPnNxbEFycmF5KCR0aGlzLT5zcWxRdWVyeSgic2VsZWN0ICogZnJvbSB0X2thcnR1X3BlcnNlZGlhYW4gd2hlcmUgeWVhcih0YW5nZ2FsX2J1a3UpID0gJyR0aGlzLT50YWh1bkFuZ2dhcmFuJyBtb250aCh0YW5nZ2FsX2J1a3UpID49ICckYnVsYW5CdWt1JyBhbmQgam5zID0gJzMnIGFuZCBub21vciA9ICciLiRkYXRhRGlzdHJpYnVzaVsnbm9tb3InXS4iJyIpKTsKICAgICAgICAgICAgJGtvZGVTS1BERGlzdHJpYnVzaSA9ICRkYXRhRGlzdHJpYnVzaVsnYzEnXS4iLiIuJGRhdGFEaXN0cmlidXNpWydjJ10uIi4iLiRkYXRhRGlzdHJpYnVzaVsnZCddLiIuIi4kZGF0YURpc3RyaWJ1c2lbJ2UnXS4iLiIuJGRhdGFEaXN0cmlidXNpWydlMSddOwogICAgICAgICAgICAkdGhpcy0+c3FsUXVlcnkoImRlbGV0ZSBmcm9tIHRfcGVyc2VkaWFhbl9sb2NrX2JhcmFuZyBXSEVSRSBjb25jYXQoYzEsJy4nLGMsJy4nLGQsJy4nLGUsJy4nLGUxKSA9ICcka29kZVNLUEREaXN0cmlidXNpJyBhbmQgdGFodW4gPSAnJHRoaXMtPnRhaHVuQW5nZ2FyYW4nICBhbmQgc2VtZXN0ZXIgPSAnJHNlbWVzdGVyUG9zdGluZycgIik7CiAgICAgICAgICAgICR0aGlzLT5zcWxRdWVyeSgiZGVsZXRlIGZyb20gY2xvc2luZ19wZXJzZWRpYWFuIFdIRVJFIGNvbmNhdChjMSwnLicsYywnLicsZCwnLicsZSwnLicsZTEpID0gJyRrb2RlU0tQRERpc3RyaWJ1c2knIGFuZCB0YWh1bl9hbmdnYXJhbiA9ICckdGhpcy0+dGFodW5BbmdnYXJhbicgIGFuZCBzZW1lc3RlciA9ICckc2VtZXN0ZXJQb3N0aW5nJyIpOwogICAgICAgICAgfQoKICAgICAgICB9CiAgICAgICAgJGdldERldGFpbFBlbmdlbHVhcmFuID0gbXlzcWxfcXVlcnkoInNlbGVjdCAqIGZyb20gZGV0YWlsX3BlbmdlbHVhcmFuIHdoZXJlIGlkX3BlbmdlbHVhcmFuID0gJyRpZFBvc3RpbmcnIik7CiAgICAgICAgd2hpbGUgKCRkZXRhaWxQZW5nZWx1YXJhbiA9IG15c3FsX2ZldGNoX2FycmF5KCRnZXREZXRhaWxQZW5nZWx1YXJhbikgKSB7CiAgICAgICAgICAgICAgaWYoJHN0YXR1c1Bvc3RpbmcgPT0gJ29uJyAmJiAkZ2V0RGF0YVsnc3RhdHVzX3Bvc3RpbmcnXSA9PSAwKXsKICAgICAgICAgICAgICAgICRkYXRhUG9zdGluZyA9IGFycmF5KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2MxJyA9PiAkZ2V0RGF0YVsnYzEnXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjJyA9PiAkZ2V0RGF0YVsnYyddLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2QnID0+ICRnZXREYXRhWydkJ10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZScgPT4gJGdldERhdGFbJ2UnXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdlMScgPT4gJGdldERhdGFbJ2UxJ10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnYmsnID0+ICRnZXREYXRhWydiayddLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NrJyA9PiAkZ2V0RGF0YVsnY2snXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkaycgPT4gJGdldERhdGFbJ2RrJ10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAncCcgPT4gJGdldERhdGFbJ3AnXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdxJyA9PiAkZ2V0RGF0YVsncSddLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2YxJyA9PiAkZGV0YWlsUGVuZ2VsdWFyYW5bJ2YxJ10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZjInID0+ICRkZXRhaWxQZW5nZWx1YXJhblsnZjInXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdmJyA9PiAkZGV0YWlsUGVuZ2VsdWFyYW5bJ2YnXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdnJyA9PiAkZGV0YWlsUGVuZ2VsdWFyYW5bJ2cnXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdoJyA9PiAkZGV0YWlsUGVuZ2VsdWFyYW5bJ2gnXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpJyA9PiAkZGV0YWlsUGVuZ2VsdWFyYW5bJ2knXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdqJyA9PiAkZGV0YWlsUGVuZ2VsdWFyYW5bJ2onXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdqMScgPT4gJGRldGFpbFBlbmdlbHVhcmFuWydqMSddLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ21lcmsnID0+ICRkZXRhaWxQZW5nZWx1YXJhblsnbWVyayddLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2p1bWxhaCcgPT4gJGRldGFpbFBlbmdlbHVhcmFuWydqdW1sYWgnXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdrZXRlcmFuZ2FuJyA9PiAkZGV0YWlsUGVuZ2VsdWFyYW5bJ2tldGVyYW5nYW4nXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdqbnMnID0+IDYsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnamVuaXNfcGVyc2VkaWFhbicgPT4gMiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdub21vcicgPT4gJGdldERhdGFbJ25vbW9yJ10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAncmVmaWQnID0+ICRpZFBvc3RpbmcsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGFuZ2dhbF9idWt1JyA9PiAkZ2V0RGF0YVsndGFuZ2dhbCddLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ21lcmsnID0+ICRkZXRhaWxQZW5nZWx1YXJhblsnbWVyayddCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAkcXVlcnkgPSBWdWxuV2Fsa2VySW5zZXJ0KCJ0X2thcnR1X3BlcnNlZGlhYW4iLCRkYXRhUG9zdGluZyk7CiAgICAgICAgICAgICAgICBteXNxbF9xdWVyeSgkcXVlcnkpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgfQogICAgICB9CiAgICAgIGlmKCRlcnIgPT0gJycpewogICAgICAgIGlmKCRzdGF0dXNQb3N0aW5nID09ICdvbicpewogICAgICAgICAgbXlzcWxfcXVlcnkoInVwZGF0ZSBwZW5nZWx1YXJhbiBzZXQgc3RhdHVzX3Bvc3RpbmcgPSAnMScgd2hlcmUgaWQgPSAnJGlkUG9zdGluZyciKTsKICAgICAgICAgIC8vJGVyciA9ICJ1cGRhdGUgcGVuZ2VsdWFyYW4gc2V0IHN0YXR1c19wb3N0aW5nID0gJzEnIHdoZXJlIGlkID0gJyRpZFBvc3RpbmcnIjsKICAgICAgICB9ZWxzZXsKICAgICAgICAgIG15c3FsX3F1ZXJ5KCJ1cGRhdGUgcGVuZ2VsdWFyYW4gc2V0IHN0YXR1c19wb3N0aW5nID0gJzAnIHdoZXJlIGlkID0gJyRpZFBvc3RpbmcnIik7CiAgICAgICAgICAvLyRlcnIgPSAiYmVkYSI7CiAgICAgICAgfQogICAgICAgIGlmKCRzdGF0dXNQb3N0aW5nICE9ICdvbicpewogICAgICAgICAgbXlzcWxfcXVlcnkoImRlbGV0ZSBmcm9tIHRfa2FydHVfcGVyc2VkaWFhbiB3aGVyZSByZWZpZCA9ICckaWRQb3N0aW5nJyBhbmQgam5zPSc2JyBhbmQgamVuaXNfcGVyc2VkaWFhbiA9JzInIik7CiAgICAgICAgfQogICAgICB9ZWxzZXsKICAgICAgICAgIG15c3FsX3F1ZXJ5KCJkZWxldGUgZnJvbSB0X2thcnR1X3BlcnNlZGlhYW4gd2hlcmUgcmVmaWQgPSAnJGlkUG9zdGluZycgYW5kIGpucz0nNicgYW5kIGplbmlzX3BlcnNlZGlhYW4gPScyJyIpOwogICAgICB9CgogICAgICAvLyRjZWsgPSAidXBkYXRlIHBlbmdlbHVhcmFuIHNldCBzdGF0dXNfcG9zdGluZyA9ICcxJyB3aGVyZSBpZCA9ICckaWRQb3N0aW5nJyI7CiAgICBicmVhazsKICAgIH0KICAgIGNhc2UgJ2Zvcm1CYXJ1Jzp7CiAgICAgIGZvcmVhY2ggKCRfUkVRVUVTVCBhcyAka2V5ID0+ICR2YWx1ZSkgewogICAgICAgICAkJGtleSA9ICR2YWx1ZTsKICAgICAgfQoKICAgICAgaWYoZW1wdHkoJGNtYlVydXNhbikpewogICAgICAgICRlcnIgPSAiUGlsaWggVXJ1c2FuIjsKICAgICAgfWVsc2VpZihlbXB0eSgkY21iQmlkYW5nKSl7CiAgICAgICAgJGVyciA9ICJQaWxpaCBCaWRhbmciOwogICAgICB9ZWxzZWlmKGVtcHR5KCRjbWJTS1BEKSl7CiAgICAgICAgJGVyciA9ICJQaWxpaCBTS1BEIjsKICAgICAgfWVsc2VpZihlbXB0eSgkY21iVW5pdCkpewogICAgICAgICRlcnIgPSAiUGlsaWggVW5pdCI7CiAgICAgIH1lbHNlaWYoZW1wdHkoJGNtYkJpZGFuZykpewogICAgICAgICRlcnIgPSAiUGlsaWggQmlkYW5nIjsKICAgICAgfWVsc2VpZihlbXB0eSgkcSkpewogICAgICAgICRlcnIgPSAiUGlsaWggS2VnaWF0YW4iOwogICAgICB9ZWxzZWlmKGVtcHR5KCRjbWJKZW5pc1BFTkdFTFVBUkFOKSl7CiAgICAgICAgJGVyciA9ICJQaWxpaCBKZW5pcyBQRU5HRUxVQVJBTiI7CiAgICAgIH1lbHNlewogICAgICAgICRmbSA9ICR0aGlzLT5zZXRGb3JtQmFydSgpOwogICAgICAgICRjZWsgPSAkZm1bJ2NlayddOwogICAgICAgICRlcnIgPSAkZm1bJ2VyciddOwogICAgICAgICRjb250ZW50ID0gJGZtWydjb250ZW50J107CiAgICAgIH0KCgogICAgYnJlYWs7CiAgICB9CiAgICBjYXNlICdJbmZvJzp7CiAgICAgICAgJGZtID0gJHRoaXMtPkluZm8oKTsKICAgICAgICAkY2VrIC49ICRmbVsnY2VrJ107CiAgICAgICAgJGVyciA9ICRmbVsnZXJyJ107CiAgICAgICAgJGNvbnRlbnQgPSAkZm1bJ2NvbnRlbnQnXTsKICAgIGJyZWFrOwogICAgfQogICAgY2FzZSAnUG9zdGluZyc6ewogICAgICAgICRpZFBvc3RpbmcgPSAkX1JFUVVFU1RbJHRoaXMtPlByZWZpeC4nX2NiJ107CiAgICAgICAgJGZtID0gJHRoaXMtPlBvc3RpbmcoJGlkUG9zdGluZ1swXSk7CiAgICAgICAgJGNlayAuPSAkZm1bJ2NlayddOwogICAgICAgICRlcnIgPSAkZm1bJ2VyciddOwogICAgICAgICRjb250ZW50ID0gJGZtWydjb250ZW50J107CiAgICBicmVhazsKICAgIH0KICAgIGNhc2UgJ25ld1RhYic6ewogICAgICBmb3JlYWNoICgkX1JFUVVFU1QgYXMgJGtleSA9PiAkdmFsdWUpIHsKICAgICAgICAgICQka2V5ID0gJHZhbHVlOwogICAgICB9CiAgICAgIG15c3FsX3F1ZXJ5KCJkZWxldGUgZnJvbSB0ZW1wX3BlbmdlbHVhcmFuIHdoZXJlIHVzZXJuYW1lID0gJyR0aGlzLT51c2VybmFtZSciKTsKICAgICAgbXlzcWxfcXVlcnkoImRlbGV0ZSBmcm9tIGRlbGV0ZV90ZW1wX3BlbmdlbHVhcmFuIHdoZXJlIHVzZXJuYW1lID0gJyR0aGlzLT51c2VybmFtZSciKTsKCgoKICAgICAgICAkZ2V0RGF0YU1heCA9IG15c3FsX2ZldGNoX2FycmF5KG15c3FsX3F1ZXJ5KCJzZWxlY3QgbWF4KG5vbW9yKSBmcm9tIHBlbmdlbHVhcmFuIHdoZXJlIGMxID0gJyRjMScgYW5kIGM9JyRjJyBhbmQgZD0nJGQnIGFuZCBlPSckZScgYW5kIGUxPSckZTEnICAiKSk7CiAgICAgICAgJGV4cGxvZGVOb21vciA9IGV4cGxvZGUoJy8nLCRnZXREYXRhTWF4WydtYXgobm9tb3IpJ10pOwogICAgICAgICRub21vclRlcmFraGlyID0gJGV4cGxvZGVOb21vclswXSArIDE7CiAgICAgICAgJG5vbW9yUGVuZ2VsdWFyYW4gPSAkdGhpcy0+a2FzaWhOb2woJG5vbW9yVGVyYWtoaXIgKTsKICAgICAgICAkbm9tb3IgPSAkbm9tb3JQZW5nZWx1YXJhbi4iLyIuIlAvIi4kYzEuIi4iLiRjLiIuIi4kZC4iLiIuJGUuIi4iLiRlMS4iLyIuJHRoaXMtPnRhaHVuQW5nZ2FyYW47CgogICAgICAgICRkYXRhSW5zZXJ0ID0gYXJyYXkoCiAgICAgICAgICAgICAgICAgICdjMScgPT4gJGMxLAogICAgICAgICAgICAgICAgICAnYycgPT4gJGMsCiAgICAgICAgICAgICAgICAgICdkJyA9PiAkZCwKICAgICAgICAgICAgICAgICAgJ2UnID0+ICRlLAogICAgICAgICAgICAgICAgICAnZTEnID0+ICRlMSwKICAgICAgICAgICAgICAgICAgJ25vbW9yJyA9PiAkbm9tb3IsCiAgICAgICAgICAgICAgICAgICdzdGF0dXNfdGVtcCcgPT4gIjEiLAogICAgICAgICAgICAgICAgICAndGFuZ2dhbCcgPT4gJHRoaXMtPnRhaHVuQW5nZ2FyYW4uIi0iLmRhdGUoIm0tZCIpLAogICAgICAgICk7CiAgICAgICAgJHF1ZXJ5ID0gVnVsbldhbGtlckluc2VydCgkdGhpcy0+VGJsTmFtZSwkZGF0YUluc2VydCk7CiAgICAgICAgbXlzcWxfcXVlcnkoJHF1ZXJ5KTsKICAgICAgICAkY2VrID0gJHF1ZXJ5OwoKICAgICAgJGNvbnRlbnQgPSBhcnJheSgibm9tb3IiID0+ICRub21vcik7CgogICAgYnJlYWs7CiAgICB9CgoKCgogICAgY2FzZSAnZWRpdFRhYic6ewogICAgICBteXNxbF9xdWVyeSgiZGVsZXRlIGZyb20gdGVtcF9wZW5nZWx1YXJhbiB3aGVyZSB1c2VybmFtZSA9ICckdGhpcy0+dXNlcm5hbWUnIik7CiAgICAgIG15c3FsX3F1ZXJ5KCJkZWxldGUgZnJvbSBkZWxldGVfdGVtcF9wZW5nZWx1YXJhbiB3aGVyZSB1c2VybmFtZSA9ICckdGhpcy0+dXNlcm5hbWUnIik7CiAgICAgICRpZCA9ICRfUkVRVUVTVFsncGVuZ2VsdWFyYW5QZXJzZWRpYWFuX2NiJ107CiAgICAgIGZvcmVhY2ggKCRfUkVRVUVTVCBhcyAka2V5ID0+ICR2YWx1ZSkgewogICAgICAgICAgJCRrZXkgPSAkdmFsdWU7CiAgICAgIH0KICAgICAgJGdldERhdGFQZW5nZWx1YXJhbiA9IG15c3FsX2ZldGNoX2FycmF5KG15c3FsX3F1ZXJ5KCJzZWxlY3QgKiBmcm9tIHBlbmdlbHVhcmFuIHdoZXJlIGlkID0gJyIuJGlkWzBdLiInIikpOwogICAgICBpZigkZ2V0RGF0YVBlbmdlbHVhcmFuWydzdGF0dXNfcG9zdGluZyddID09IDEpewogICAgICAgICAgJGVyciA9ICJEYXRhIHN1ZGFoIGRpIHBvc3RpbmcgdGlkYWsgZGFwYXQgZGkgdWJhaCAhIjsKICAgICAgfQogICAgICAka29kZVNLUEQgPSAkZ2V0RGF0YVBlbmdlbHVhcmFuWydjMSddLiIuIi4kZ2V0RGF0YVBlbmdlbHVhcmFuWydjJ10uIi4iLiRnZXREYXRhUGVuZ2VsdWFyYW5bJ2QnXS4iLiIuJGdldERhdGFQZW5nZWx1YXJhblsnZSddLiIuIi4kZ2V0RGF0YVBlbmdlbHVhcmFuWydlMSddOwogICAgICAkbm9tb3IgPSAkZ2V0RGF0YVBlbmdlbHVhcmFuWydub21vciddOwogICAgICAkc3RhdHVzQ2xvc2luZyA9ICR0aGlzLT5nZXRTdGF0dXNDbG9zaW5nKCRrb2RlU0tQRCwkZ2V0RGF0YVBlbmdlbHVhcmFuWyd0YW5nZ2FsJ10pOwogICAgICBpZigkc3RhdHVzQ2xvc2luZyAhPSAwKXsKICAgICAgICAkZXJyID0gIkRhdGEgc3VkYWggZGkgY2xvc2luZyAiOwogICAgICB9CiAgICAgIGlmKGVtcHR5KCRlcnIpKXsKICAgICAgICAkZ2V0QWxsRGV0YWlsUGVuZ2VsdWFyYW4gPSBteXNxbF9xdWVyeSgic2VsZWN0ICogZnJvbSBkZXRhaWxfcGVuZ2VsdWFyYW4gd2hlcmUgaWRfcGVuZ2VsdWFyYW4gPSciLiRpZFswXS4iJyIpOwogICAgICAgIHdoaWxlICgkZGV0YWlsUGVuZ2VsdWFyYW4gPSBteXNxbF9mZXRjaF9hcnJheSgkZ2V0QWxsRGV0YWlsUGVuZ2VsdWFyYW4pKSB7CiAgICAgICAgICBmb3JlYWNoICgkZGV0YWlsUGVuZ2VsdWFyYW4gYXMgJGtleSA9PiAkdmFsdWUpIHsKICAgICAgICAgICAgICAkJGtleSA9ICR2YWx1ZTsKICAgICAgICAgIH0KICAgICAgICAgICRkYXRhRGV0YWlsID0gYXJyYXkoCiAgICAgICAgICAgICAgICAgICAgICAnZjEnID0+ICRmMSwKICAgICAgICAgICAgICAgICAgICAgICdmMicgPT4gJGYyLAogICAgICAgICAgICAgICAgICAgICAgJ2YnID0+ICRmLAogICAgICAgICAgICAgICAgICAgICAgJ2cnID0+ICRnLAogICAgICAgICAgICAgICAgICAgICAgJ2gnID0+ICRoLAogICAgICAgICAgICAgICAgICAgICAgJ2knID0+ICRpLAogICAgICAgICAgICAgICAgICAgICAgJ2onID0+ICRqLAogICAgICAgICAgICAgICAgICAgICAgJ2oxJyA9PiAkajEsCiAgICAgICAgICAgICAgICAgICAgICAnanVtbGFoJyA9PiAkanVtbGFoLAogICAgICAgICAgICAgICAgICAgICAgJ21lcmsnID0+ICRtZXJrLAogICAgICAgICAgICAgICAgICAgICAgJ2tldGVyYW5nYW4nID0+ICRrZXRlcmFuZ2FuLAogICAgICAgICAgICAgICAgICAgICAgJ2lkX3BlbmdlbHVhcmFuJyA9PiAkZGV0YWlsUGVuZ2VsdWFyYW5bJ2lkJ10sCiAgICAgICAgICAgICAgICAgICAgICAndXNlcm5hbWUnID0+ICR0aGlzLT51c2VybmFtZQogICAgICAgICAgKTsKICAgICAgICAgICRxdWVyeSA9IFZ1bG5XYWxrZXJJbnNlcnQoJ3RlbXBfcGVuZ2VsdWFyYW4nLCRkYXRhRGV0YWlsKTsKICAgICAgICAgIG15c3FsX3F1ZXJ5KCRxdWVyeSk7CiAgICAgICAgICAkY2VrID0gJHF1ZXJ5OwoKICAgICAgICB9CiAgICAgIH0KCiAgICAgICAgJGNvbnRlbnQgPSBhcnJheSgnc2twZCcgPT4gJGtvZGVTS1BELCdub21vcic9PiAkbm9tb3IpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlICdSZW1vdmUnOnsKICAgICAgJGlkID0gJF9SRVFVRVNUWydwZW5nZWx1YXJhblBlcnNlZGlhYW5fY2InXTsKICAgICAgZm9yZWFjaCAoJF9SRVFVRVNUIGFzICRrZXkgPT4gJHZhbHVlKSB7CiAgICAgICAgICAkJGtleSA9ICR2YWx1ZTsKICAgICAgfQoKICAgICAgJHVzZXJuYW1lID0gJF9DT09LSUVbJ2NvSUQnXTsKCiAgICAgICRnZXQgPSBteXNxbF9mZXRjaF9hcnJheShteXNxbF9xdWVyeSgic2VsZWN0ICogZnJvbSB0YWJlbF9QRU5HRUxVQVJBTiB3aGVyZSBpZCA9JyRpZFswXSciKSk7CiAgICAgICRrb2RlUmVrID0gJGdldFsnayddLiIuIi4kZ2V0WydsJ10uIi4iLiRnZXRbJ20nXS4iLiIuJGdldFsnbiddLiIuIi4kZ2V0WydvJ10gOwoKICAgICAgJGdldEFsbCA9IG15c3FsX3F1ZXJ5KCJzZWxlY3QgKiBmcm9tIHRhYmVsX1BFTkdFTFVBUkFOIHdoZXJlIGNvbmNhdChrLCcuJyxsLCcuJyxtLCcuJyxuLCcuJyxvKSA9JyRrb2RlUmVrJyBhbmQgaWRfdGFoYXA9JyR0aGlzLT5pZFRhaGFwJyBhbmQgcmluY2lhbl9wZXJoaXR1bmdhbiAhPScnICAgYW5kIGMxPSckY21iVXJ1c2FuJyBhbmQgYz0nJGNtYkJpZGFuZycgYW5kIGQ9JyRjbWJTS1BEJyAgYW5kIHN0YXR1c192YWxpZGFzaSAhPScxJyBvcmRlciBieSBvMSwgcmluY2lhbl9wZXJoaXR1bmdhbiIpOwogICAgICBteXNxbF9xdWVyeSgiZGVsZXRlIGZyb20gdGVtcF9ya2FfMjEgd2hlcmUgdXNlcj0nJHVzZXJuYW1lJyIpOwogICAgICBteXNxbF9xdWVyeSgiZGVsZXRlIGZyb20gdGVtcF9yaW5jaWFuX3ZvbHVtZV8yMSB3aGVyZSB1c2VyPSckdXNlcm5hbWUnIik7CiAgICAgICAgbXlzcWxfcXVlcnkoImRlbGV0ZSBmcm9tIHRlbXBfYWxva2FzaV9ya2FfMjFfdjIgd2hlcmUgdXNlcj0nJHVzZXJuYW1lJyIpOwogICAgICB3aGlsZSgkcm93cyA9IG15c3FsX2ZldGNoX2FycmF5KCRnZXRBbGwpKXsKICAgICAgICBmb3JlYWNoICgkcm93cyBhcyAka2V5ID0+ICR2YWx1ZSkgewogICAgICAgICAgJCRrZXkgPSAkdmFsdWU7CiAgICAgICAgfQogICAgICAgIG15c3FsX3F1ZXJ5KCJkZWxldGUgZnJvbSB0YWJlbF9QRU5HRUxVQVJBTiB3aGVyZSBpZCA9ICckaWQnIik7CiAgICAgICAgLy9teXNxbF9xdWVyeSgiZGVsZXRlIGZyb20gdGFiZWxfUEVOR0VMVUFSQU4gd2hlcmUgY29uY2F0KGssJy4nLGwsJy4nLG0sJy4nLG4sJy4nLG8pID0nJGtvZGVSZWsnIGFuZCBvMSA9JyRvMScgYW5kIGMxPSckY21iVXJ1c2FuJyBhbmQgYz0nJGNtYkJpZGFuZycgYW5kIGQ9JyRjbWJTS1BEJyBhbmQgZT0nJGNtYlVuaXQnIGFuZCBlMT0nJGNtYlN1YlVuaXQnIGFuZCBqZW5pc19ya2E9JzIuMScgYW5kIHRhaHVuID0nJHRoaXMtPnRhaHVuJyBhbmQgamVuaXNfYW5nZ2FyYW4gPSckdGhpcy0+amVuaXNBbmdnYXJhbiciKTsKCiAgICAgIH0KCiAgICAgIGJyZWFrOwogICAgfQoKICAgICAgY2FzZSAnVmFsaWRhc2knOnsKICAgICAgICAkZHQgPSBhcnJheSgpOwogICAgICAgICRlcnI9Jyc7CiAgICAgICAgJGNvbnRlbnQ9Jyc7CiAgICAgICAgJHVpZCA9ICRIVFRQX0NPT0tJRV9WQVJTWydjb0lEJ107CgogICAgICAgICRjYmlkID0gJF9SRVFVRVNUWyR0aGlzLT5QcmVmaXguJ19jYiddOwogICAgICAgICRpZHBsaCA9ICRfUkVRVUVTVFsnaWQnXTsKICAgICAgICAkdGhpcy0+Zm9ybV9pZHBsaCA9ICRfUkVRVUVTVFsnaWQnXTsKCgogICAgICAgICAgJHFyeSA9ICJTRUxFQ1QgKiBGUk9NIHRhYmVsX1BFTkdFTFVBUkFOIFdIRVJFIGlkID0gJyRpZHBsaCcgIjskY2VrPSRxcnk7CiAgICAgICAgICAkYXFyeSA9IG15c3FsX3F1ZXJ5KCRxcnkpOwogICAgICAgICAgJGR0ID0gbXlzcWxfZmV0Y2hfYXJyYXkoJGFxcnkpOwogICAgICAgICAgJHVzZXJuYW1lID0gJF9DT09LSUVbJ2NvSUQnXTsKICAgICAgICAgICR1c2VyX3ZhbGlkYXNpID0gJGR0Wyd1c2VyX3ZhbGlkYXNpJ107CiAgICAgICAgICAkdXNlcl91cGRhdGUgPSAkZHRbJ3VzZXJfdXBkYXRlJ107CgogICAgICAgICAgaWYgKCR1c2VybmFtZSAhPSAkdXNlcl92YWxpZGFzaSAmJiAkZHRbJ3N0YXR1c192YWxpZGFzaSddID09ICcxJykgewogICAgICAgICAgICAkZ2V0TmFtYU9yYW5nID0gbXlzcWxfZmV0Y2hfYXJyYXkobXlzcWxfcXVlcnkoInNlbGVjdCAqIGZyb20gYWRtaW4gd2hlcmUgdWlkID0gJyR1c2VyX3ZhbGlkYXNpJyIpKTsKICAgICAgICAgICAgJGVyciA9ICJEYXRhIFN1ZGFoIGRpIFZhbGlkYXNpLCBQZXJ1YmFoYW4gSGFueWEgQmlzYSBEaWxha3VrYW4gb2xlaCAiLiRnZXROYW1hT3JhbmdbJ25hbWEnXS4iICEiOwogICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgIGlmKCR1c2VybmFtZSA9PSAkdXNlcl91cGRhdGUpewogICAgICAgICAgICAgICRlcnIgPSAiVXNlciB5YW5nIG1lbWJ1YXQgdGlkYWsgZGFwYXQgbWVsYWt1a2FuIFZBTElEQVNJIjsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgICAgaWYoJHRoaXMtPmplbmlzRm9ybSAhPSdQRU5ZVVNVTkFOJykkZXJyID0gIlRhaGFwIFBlbnl1c3VuYW4gVGVsYWggSGFiaXMiOwogICAgICAgICAgaWYoJGVyciA9PSAnJyl7CiAgICAgICAgICAgICRmbSA9ICR0aGlzLT5WYWxpZGFzaSgkZHQpOwogICAgICAgICAgICAkY2VrIC49ICRmbVsnY2VrJ107CiAgICAgICAgICAgICRlcnIgPSAkZm1bJ2VyciddOwogICAgICAgICAgICAkY29udGVudCA9ICRmbVsnY29udGVudCddOwogICAgICAgICAgfQoKCgogICAgICBicmVhazsKICAgIH0KCgogICAgIGNhc2UgJ0NhdGF0YW4nOnsKICAgICAgZm9yZWFjaCAoJF9SRVFVRVNUIGFzICRrZXkgPT4gJHZhbHVlKSB7CiAgICAgICAgICAkJGtleSA9ICR2YWx1ZTsKICAgICAgIH0KCiAgICAgICRnZXREYXRhID0gbXlzcWxfZmV0Y2hfYXJyYXkobXlzcWxfcXVlcnkoIlNFTEVDVCAqIEZST00gdGFiZWxfUEVOR0VMVUFSQU4gV0hFUkUgaWQgPSAnJGlkQXdhbCciKSk7CiAgICAgIGZvcmVhY2ggKCRnZXREYXRhIGFzICRrZXkgPT4gJHZhbHVlKSB7CiAgICAgICAgICAkJGtleSA9ICR2YWx1ZTsKICAgICAgfQogICAgICAkZ2V0TWF4SUQgPSBteXNxbF9mZXRjaF9hcnJheShteXNxbF9xdWVyeSgic2VsZWN0IG1heChpZCkgYXMgbWF4SUQgZnJvbSB0YWJlbF9QRU5HRUxVQVJBTiB3aGVyZSB0YWh1biA9ICckdGFodW4nICBhbmQgYzEgPSckYzEnIGFuZCBjPSckYycgYW5kIGQ9JyRkJyBhbmQgZT0nJGUnIGFuZCBlMT0nJGUxJyBhbmQgcD0nJHAnIGFuZCBxPSckcScgYW5kIGplbmlzX2FuZ2dhcmFuID0gJyRqZW5pc19hbmdnYXJhbicgICIpKTsKICAgICAgJG1heElEID0gJGdldE1heElEWydtYXhJRCddOwogICAgICAkYXFyeSA9ICJzZWxlY3QgKiBmcm9tIHRhYmVsX1BFTkdFTFVBUkFOIHdoZXJlIGlkID0nJG1heElEJyAiOwogICAgICAkZHQgPSBteXNxbF9mZXRjaF9hcnJheShteXNxbF9xdWVyeSgkYXFyeSkpOwogICAgICBpZigkZHRbJ2lkX3RhaGFwJ10gIT0gJHRoaXMtPmlkVGFoYXApewogICAgICAgICRlcnIgPSAiRGF0YSBCZWx1bSBEaSBLb3Jla3NpICI7CiAgICAgIH0KICAgICAgaWYoJGVyciA9PSAnJyl7CiAgICAgICAgJGZtID0gJHRoaXMtPkNhdGF0YW4oJGR0KTsKICAgICAgICAkY2VrIC49ICRmbVsnY2VrJ107CiAgICAgICAgJGVyciA9ICRmbVsnZXJyJ107CiAgICAgICAgJGNvbnRlbnQgPSAkZm1bJ2NvbnRlbnQnXTsKICAgICAgfQoKICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgJ2Zvcm1BbG9rYXNpJzp7CiAgICAgICAgJGR0W10gPSAkX1JFUVVFU1RbJ2p1bWxhaEhhcmdhJ107CiAgICAgICAgJGR0W10gPSAkX1JFUVVFU1RbJ2lkJ107CiAgICAgICAgJGZtID0gJHRoaXMtPmZvcm1BbG9rYXNpKCRkdCk7CiAgICAgICAgJGNlayA9ICRmbVsnY2VrJ107CiAgICAgICAgJGVyciA9ICRmbVsnZXJyJ107CiAgICAgICAgJGNvbnRlbnQgPSAkZm1bJ2NvbnRlbnQnXTsKCgogICAgYnJlYWs7CiAgICB9CiAgICBjYXNlICdmb3JtQWxva2FzaVRyaXd1bGFuJzp7CiAgICAgICAgJGp1bWxhaEhhcmdhRm9ybSA9ICRfUkVRVUVTVFsnanVtbGFoSGFyZ2EnXTsKICAgICAgICAkaWQgPSAkX1JFUVVFU1RbJ2lkJ107CiAgICAgICAgJGZtID0gJHRoaXMtPmZvcm1BbG9rYXNpVHJpd3VsYW4oJGR0KTsKICAgICAgICAkY2VrID0gJGZtWydjZWsnXTsKICAgICAgICAkZXJyID0gJGZtWydlcnInXTsKICAgICAgICAkY29udGVudCA9ICRmbVsnY29udGVudCddOwoKCiAgICBicmVhazsKICAgIH0KICAgICBkZWZhdWx0OnsKICAgICAgICAkb3RoZXIgPSAkdGhpcy0+c2V0X3NlbGVjdG9yX290aGVyMigkdGlwZSk7CiAgICAgICAgJGNlayA9ICRvdGhlclsnY2VrJ107CiAgICAgICAgJGVyciA9ICRvdGhlclsnZXJyJ107CiAgICAgICAgJGNvbnRlbnQ9JG90aGVyWydjb250ZW50J107CiAgICAgICAgJGpzb249JG90aGVyWydqc29uJ107CiAgICAgYnJlYWs7CiAgICAgfQoKICAgfS8vZW5kIHN3aXRjaAoKICAgIHJldHVybiAgYXJyYXkgKCdjZWsnPT4kY2VrLCAnZXJyJz0+JGVyciwgJ2NvbnRlbnQnPT4kY29udGVudCwgJ2pzb24nPT4kanNvbik7CiAgIH0KICAgZnVuY3Rpb24gc2V0UGFnZV9IZWFkZXJPdGhlcigpewoKcmV0dXJuCiIiOwp9CiAgIGZ1bmN0aW9uIHNldFBhZ2VfT3RoZXJTY3JpcHQoKXsKICAgICRzY3JpcHRsb2FkID0KICAgICAgICAgICI8c2NyaXB0PgogICAgICAgICAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpewogICAgICAgICAgICAgICIuJHRoaXMtPlByZWZpeC4iLmxvYWRpbmcoKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICA8L3NjcmlwdD4iOwogICAgcmV0dXJuCiAgICAgICIKICAgICAgPHNjcmlwdCBzcmM9J2pzL3BlcmVuY2FuYWFuS2V1YW5nYW4vZmlsdGVyU0tQRC5qcycgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz48L3NjcmlwdD4KICAgICAgPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0nanMvcGVyc2VkaWFhbi9wZW5nZWx1YXJhbi9wZW5nZWx1YXJhblBlcnNlZGlhYW4uanMnIGxhbmd1YWdlPSdKYXZhU2NyaXB0JyA+PC9zY3JpcHQ+CiAgICAgICAgPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBocmVmPSdkYXRlcGlja2VyL2pxdWVyeS11aS5jc3MnPgogICAgICAgIDxzY3JpcHQgc3JjPSdkYXRlcGlja2VyL2pxdWVyeS0xLjEyLjQuanMnPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSdkYXRlcGlja2VyL2pxdWVyeS11aS5qcyc+PC9zY3JpcHQ+CgogICAgICAiLgogICAgICAkc2NyaXB0bG9hZDsKICB9CgogIGZ1bmN0aW9uIHNldEZvcm1CYXJ1KCl7CiAgICAkZHQ9YXJyYXkoKTsKICAgIC8vJHRoaXMtPmZvcm1faWRwbGggPScnOwogICAgJHRoaXMtPmZvcm1fZm1TVCA9IDA7CiAgICAkZHRbJ3RnbCddID0gZGF0ZSgiWS1tLWQiKTsKICAgICRmbSA9ICR0aGlzLT5zZXRGb3JtKCRkdCk7CiAgICByZXR1cm4gIGFycmF5ICgnY2VrJz0+JGZtWydjZWsnXSwgJ2Vycic9PiRmbVsnZXJyJ10sICdjb250ZW50Jz0+JGZtWydjb250ZW50J10pOwogIH0KCiAgICBmdW5jdGlvbiBzZXRGb3JtRWRpdCgpewogICAgJGNlayA9Jyc7CiAgICAkY2JpZCA9ICRfUkVRVUVTVFskdGhpcy0+UHJlZml4LidfY2InXTsKICAgICR0aGlzLT5mb3JtX2lkcGxoID0gJGNiaWRbMF07CiAgICAka29kZSA9IGV4cGxvZGUoJyAnLCR0aGlzLT5mb3JtX2lkcGxoKTsKICAgICR0aGlzLT5mb3JtX2ZtU1QgPSAxOwogICAgaWYoJGVyciA9PSAnJyl7CiAgICAgICRhcXJ5ID0gIlNFTEVDVCAqIEZST00gIHRhYmVsX1BFTkdFTFVBUkFOIFdIRVJFIGlkPSciLiR0aGlzLT5mb3JtX2lkcGxoLiInICI7ICRjZWsuPSRhcXJ5OwogICAgICAkZHQgPSBteXNxbF9mZXRjaF9hcnJheShteXNxbF9xdWVyeSgkYXFyeSkpOwogICAgICAkZm0gPSAkdGhpcy0+c2V0Rm9ybSgkZHQpOwogICAgfQoKICAgIHJldHVybiAgYXJyYXkgKCdjZWsnPT4kY2VrLiRmbVsnY2VrJ10sICdlcnInPT4kZXJyLiRmbVsnZXJyJ10sICdjb250ZW50Jz0+JGZtWydjb250ZW50J10pOwogIH0KICBmdW5jdGlvbiBJbmZvKCl7CiAgIGdsb2JhbCAkU2Vuc3VzVG1wOwogICAkY2VrID0gJyc7ICRlcnI9Jyc7ICRjb250ZW50PScnOwogICAkanNvbiA9IFRSVUU7ICAvLyRFcnJNc2cgPSAndGVzJzsKICAgJGZvcm1fbmFtZSA9ICR0aGlzLT5QcmVmaXguJ19mb3JtJzsKICAgJHRoaXMtPmZvcm1fd2lkdGggPSA1MDA7CiAgICR0aGlzLT5mb3JtX2hlaWdodCA9IDEwMDsKICAgJHRoaXMtPmZvcm1fY2FwdGlvbiA9ICdJTkZPIFBFTkdFTFVBUkFOJzsKCgogICBpZigkdGhpcy0+amVuaXNGb3JtVGVyYWtoaXIgPT0gIlZBTElEQVNJIil7CiAgICAkZ2V0SnVtbGFoU0tQRFlhbmdNZW5naXNpUGxhZm9uID0gbXlzcWxfbnVtX3Jvd3MobXlzcWxfcXVlcnkoInNlbGVjdCAqIGZyb20gdmlld19wbGFmb24gd2hlcmUgdGFodW49JyR0aGlzLT50YWh1bicgYW5kIGplbmlzX2FuZ2dhcmFuID0gJyR0aGlzLT5qZW5pc0FuZ2dhcmFuJyBhbmQgbm9fdXJ1dCA9JyR0aGlzLT5ub1VydXRUZXJha2hpclBsYWZvbicgYW5kIGQhPScwMCcgYW5kIHN0YXR1c192YWxpZGFzaSA9ICcxJyAiKSk7CiAgIH1lbHNlewogICAgJGdldEp1bWxhaFNLUERZYW5nTWVuZ2lzaVBsYWZvbiA9IG15c3FsX251bV9yb3dzKG15c3FsX3F1ZXJ5KCJzZWxlY3QgKiBmcm9tIHZpZXdfcGxhZm9uIHdoZXJlIHRhaHVuPSckdGhpcy0+dGFodW4nIGFuZCBqZW5pc19hbmdnYXJhbiA9ICckdGhpcy0+amVuaXNBbmdnYXJhbicgYW5kIG5vX3VydXQgPSckdGhpcy0+bm9VcnV0VGVyYWtoaXJQbGFmb24nIGFuZCBkIT0nMDAnICIpKTsKICAgfQoKCgogICAvL2l0ZW1zIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICR0aGlzLT5mb3JtX2ZpZWxkcyA9IGFycmF5KAogICAgICAnMScgPT4gYXJyYXkoCiAgICAgICAgICAgICdsYWJlbCc9PidBTkdHQVJBTicsCiAgICAgICAgICAgICdsYWJlbFdpZHRoJz0+MTUwLAogICAgICAgICAgICAndmFsdWUnPT4kdGhpcy0+amVuaXNBbmdnYXJhbi4gIiBUQUhVTiAgIi4gJHRoaXMtPnRhaHVuLAogICAgICAgICAgICAgKSwKICAgICAgJzInID0+IGFycmF5KAogICAgICAgICAgICAnbGFiZWwnPT4nTkFNQSBUQUhBUCBURVJBS0hJUicsCiAgICAgICAgICAgICdsYWJlbFdpZHRoJz0+MTUwLAogICAgICAgICAgICAndmFsdWUnPT4kdGhpcy0+bmFtYVRhaGFwVGVyYWtoaXIsCiAgICAgICAgICAgICApLAogICAgICAnMycgPT4gYXJyYXkoCiAgICAgICAgICAgICdsYWJlbCc9PidXQUtUVScsCiAgICAgICAgICAgICdsYWJlbFdpZHRoJz0+MTUwLAogICAgICAgICAgICAndmFsdWUnPT4kdGhpcy0+bWFzYVRlcmFraGlyLAogICAgICAgICAgICAgKSwKICAgICAgJzQnID0+IGFycmF5KAogICAgICAgICAgICAnbGFiZWwnPT4nVEFIQVAgU0VLQVJBTkcnLAogICAgICAgICAgICAnbGFiZWxXaWR0aCc9PjE1MCwKICAgICAgICAgICAgJ3ZhbHVlJz0+JHRoaXMtPmN1cnJlbnRUYWhhcCwKICAgICAgICAgICAgICkKCgogICAgICApOwogICAgLy90b21ib2wKICAgICR0aGlzLT5mb3JtX21lbnViYXdhaCA9CiAgICAgICI8aW5wdXQgdHlwZT0nYnV0dG9uJyB2YWx1ZT0nQmF0YWwnIG9uY2xpY2sgPSciLiR0aGlzLT5QcmVmaXguIi5DbG9zZSgpJyA+IjsKCiAgICAkZm9ybSA9ICR0aGlzLT5nZW5Gb3JtKCk7CiAgICAkY29udGVudCA9ICRmb3JtOy8vJGNvbnRlbnQgPSAnY29udGVudCc7CiAgICByZXR1cm4gIGFycmF5ICgnY2VrJz0+JGNlaywgJ2Vycic9PiRlcnIsICdjb250ZW50Jz0+JGNvbnRlbnQpOwogIH0KICBmdW5jdGlvbiBQb3N0aW5nKCRpZFBvc3RpbmcpewogICBnbG9iYWwgJFNlbnN1c1RtcDsKICAgJGNlayA9ICcnOyAkZXJyPScnOyAkY29udGVudD0nJzsKICAgJGpzb24gPSBUUlVFOyAgLy8kRXJyTXNnID0gJ3Rlcyc7CiAgICRmb3JtX25hbWUgPSAkdGhpcy0+UHJlZml4LidfZm9ybSc7CiAgICR0aGlzLT5mb3JtX3dpZHRoID0gMzUwOwogICAkdGhpcy0+Zm9ybV9oZWlnaHQgPSA4MDsKCiAgICAkdGhpcy0+Zm9ybV9jYXB0aW9uID0gJ1Bvc3RpbmcnOwogICAgJGdldERhdGEgPSBteXNxbF9mZXRjaF9hcnJheShteXNxbF9xdWVyeSgic2VsZWN0ICogZnJvbSBwZW5nZWx1YXJhbiB3aGVyZSBpZCA9ICckaWRQb3N0aW5nJyIpKTsKICAgIGlmKCRnZXREYXRhWydzdGF0dXNfcG9zdGluZyddID09IDEpewogICAgICAkc3RhdHVzUG9zdGluZyA9ICJjaGVja2VkIjsKICAgIH0KICAgICRub21vclBlbmdlbHVhcmFuID0gJGdldERhdGFbJ25vbW9yJ107CgogICAvL2l0ZW1zIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICR0aGlzLT5mb3JtX2ZpZWxkcyA9IGFycmF5KAogICAgICAna29kZTAnID0+IGFycmF5KAogICAgICAgICAgJ2xhYmVsJz0+J05PTU9SIFBFTkdFTFVBUkFOJywKICAgICAgICAnbGFiZWxXaWR0aCc9PjE1MCwKICAgICAgICAndmFsdWUnPT4gJG5vbW9yUGVuZ2VsdWFyYW4KICAgICAgICAgKSwKCiAgICAgICdrb2RlMTInID0+IGFycmF5KAogICAgICAgICAgICAnbGFiZWwnPT4nU1RBVFVTIFBPU1RJTkcnLAogICAgICAgICAgICAnbGFiZWxXaWR0aCc9PjE1MCwKICAgICAgICAgICAgJ3ZhbHVlJz0+ICI8aW5wdXQgdHlwZT0nY2hlY2tib3gnIG5hbWU9J3N0YXR1c1Bvc3RpbmcnIGlkPSdzdGF0dXNQb3N0aW5nJyAkc3RhdHVzUG9zdGluZz4iCiAgICAgICAgICAgICApLAoKICAgICAgKTsKICAgIC8vdG9tYm9sCiAgICAkdGhpcy0+Zm9ybV9tZW51YmF3YWggPQogICAgICAiPGlucHV0IHR5cGU9J2J1dHRvbicgdmFsdWU9J1NpbXBhbicgb25jbGljayA9JyIuJHRoaXMtPlByZWZpeC4iLnNhdmVQb3N0aW5nKCRpZFBvc3RpbmcpJyB0aXRsZT0nU2ltcGFuJyA+ICAmbmJzcCAgIi4KICAgICAgIjxpbnB1dCB0eXBlPSdidXR0b24nIHZhbHVlPSdCYXRhbCcgb25jbGljayA9JyIuJHRoaXMtPlByZWZpeC4iLkNsb3NlKCknID4iOwoKICAgICRmb3JtID0gJHRoaXMtPmdlbkZvcm0oKTsKICAgICRjb250ZW50ID0gJGZvcm07Ly8kY29udGVudCA9ICdjb250ZW50JzsKICAgIHJldHVybiAgYXJyYXkgKCdjZWsnPT4kY2VrLCAnZXJyJz0+JGVyciwgJ2NvbnRlbnQnPT4kY29udGVudCk7CiAgfQoKCgogIC8vZGFmdGFyID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogIGZ1bmN0aW9uIHNldEtvbG9tSGVhZGVyKCRNb2RlPTEsICRDaGVja2JveD0nJyl7CgoKCiAgICAkaGVhZGVyVGFibGUgPQogICAgICAiPHRoZWFkPgogICAgICAgPHRyPgogICAgICAgPHRoIGNsYXNzPSd0aDAxJyBzdHlsZT0nd2lkdGg6MSU7Jz5OTzwvdGg+CiAgICAgICAkQ2hlY2tib3gKICAgICAgIDx0aCBjbGFzcz0ndGgwMScgc3R5bGU9J3dpZHRoOjglOyc+VEFOR0dBTDwvdGg+CiAgICAgICA8dGggY2xhc3M9J3RoMDEnIHN0eWxlPSd3aWR0aDoxJTsnPk5PTU9SPC90aD4KICAgICAgIDx0aCBjbGFzcz0ndGgwMScgc3R5bGU9J3dpZHRoOjQ1JTsnPk5BTUEgQkFSQU5HPC90aD4KICAgICAgIDx0aCBjbGFzcz0ndGgwMScgc3R5bGU9J3dpZHRoOjUlOyc+U0FUVUFOPC90aD4KICAgICAgIDx0aCBjbGFzcz0ndGgwMScgc3R5bGU9J3dpZHRoOjEwJTsnPk1FUksvIFRZUEUvIFNQRVNJRklLQVNJPC90aD4KICAgICAgIDx0aCBjbGFzcz0ndGgwMScgc3R5bGU9J3dpZHRoOjUlOyc+SlVNTEFIPC90aD4KICAgICAgIDx0aCBjbGFzcz0ndGgwMScgc3R5bGU9J3dpZHRoOjEwJTsnPktFVEVSQU5HQU48L3RoPgogICAgICAgPHRoIGNsYXNzPSd0aDAxJyBzdHlsZT0nd2lkdGg6NSU7Jz5QT1NUSU5HPC90aD4KCgoKICAgICAgIDwvdHI+CgogICAgICAgPC90aGVhZD4iOwoKICAgJE5vbW9yQ29sU3BhbiA9ICRNb2RlPT0xPyAyOiAxOwoKCiAgICByZXR1cm4gJGhlYWRlclRhYmxlOwogIH0KCiAgZnVuY3Rpb24gc2V0S29sb21EYXRhKCRubywgJGlzaSwgJE1vZGUsICRUYW1waWxDaGVja0JveCl7CiAgIGdsb2JhbCAkUmVmOwogICBmb3JlYWNoICgkaXNpIGFzICRrZXkgPT4gJHZhbHVlKSB7CiAgICAgICAgICAgICQka2V5ID0gJHZhbHVlOwogICB9CgogICBpZigkdGhpcy0+bm9tb3JLb2xvbSAlIDIgPT0gMSl7CiAgICAgJHJvd0NsYXNzID0gInJvdzAiOwogICB9ZWxzZXsKICAgICAkcm93Q2xhc3MgPSAicm93MSI7CiAgIH0KICAgJGNzc1N0YXR1cyA9ICIiOwogICAgJGV4cGxvZGVOb21vciA9IGV4cGxvZGUoJy8nLCRub21vcik7CiAgICBpZigkc3RhdHVzX3Bvc3RpbmcgPT0gJzEnKXsKICAgICAgJHN0YXR1c1Bvc3RpbmcgPSAiPGltZyBzcmM9J2ltYWdlcy9hZG1pbmlzdHJhdG9yL2ltYWdlcy92YWxpZC5wbmcnIHdpZHRoPScyMHB4JyBoZWlnaD0nMjBweCc+IDwvaW1nPiI7CiAgICB9ZWxzZXsKICAgICAgJHN0YXR1c1Bvc3RpbmcgPSAiPGltZyBzcmM9J2ltYWdlcy9hZG1pbmlzdHJhdG9yL2ltYWdlcy9pbnZhbGlkLnBuZycgd2lkdGg9JzIwcHgnIGhlaWdoPScyMHB4Jz4gPC9pbWc+IjsKICAgIH0KICAgICRnZXRCYXJhbmdQZXJ0YW1hID0gbXlzcWxfZmV0Y2hfYXJyYXkobXlzcWxfcXVlcnkoInNlbGVjdCBtaW4oaWQpIGZyb20gZGV0YWlsX3BlbmdlbHVhcmFuIHdoZXJlIGlkX3BlbmdlbHVhcmFuID0gJyRpZCciKSk7CiAgICAkZ2V0RGF0YUJhcmFuZ1BlcnRhbWEgPSBteXNxbF9mZXRjaF9hcnJheShteXNxbF9xdWVyeSgic2VsZWN0ICogZnJvbSBkZXRhaWxfcGVuZ2VsdWFyYW4gd2hlcmUgaWQgPSAnIi4kZ2V0QmFyYW5nUGVydGFtYVsnbWluKGlkKSddLiInIikpOwogICAgJGdldG5hbWFCYXJhbmdQZXJ0YW1hID0gbXlzcWxfZmV0Y2hfYXJyYXkobXlzcWxfcXVlcnkoInNlbGVjdCAqIGZyb20gcmVmX2JhcmFuZyB3aGVyZSAgZj0nIi4kZ2V0RGF0YUJhcmFuZ1BlcnRhbWFbJ2YnXS4iJyBhbmQgZz0nIi4kZ2V0RGF0YUJhcmFuZ1BlcnRhbWFbJ2cnXS4iJyAgYW5kIGg9JyIuJGdldERhdGFCYXJhbmdQZXJ0YW1hWydoJ10uIicgIGFuZCBpPSciLiRnZXREYXRhQmFyYW5nUGVydGFtYVsnaSddLiInIGFuZCBqPSciLiRnZXREYXRhQmFyYW5nUGVydGFtYVsnaiddLiInIGFuZCBqMT0nIi4kZ2V0RGF0YUJhcmFuZ1BlcnRhbWFbJ2oxJ10uIiciKSk7CgogICAgLy8gaWYoJHRoaXMtPnNxbE51bVJvdygkdGhpcy0+c3FsUXVlcnkoInNlbGVjdCAqIGZyb20gY2hlY2tfYmFyYW5nX3BlcnNlZGlhYW4gd2hlcmUgdXJhaWFuID0gJ1BFTkdFTFVBUkFOJyBhbmQgaWRfdHJhbnNha3NpID0gJyRpZCciKSkgPiAwKXsKICAgIC8vICAgJGNzc1N0YXR1cyA9ICJzdHlsZSA9ICdiYWNrZ3JvdW5kLWNvbG9yOmdyZWVuOyciOwogICAgLy8gICAkZ2V0SGFzaWxDaGVjayA9ICR0aGlzLT5zcWxRdWVyeSgic2VsZWN0ICogZnJvbSBjaGVja19iYXJhbmdfcGVyc2VkaWFhbiB3aGVyZSB1cmFpYW4gPSAnUEVOR0VMVUFSQU4nIGFuZCBpZF90cmFuc2Frc2kgPSAnJGlkJyIpOwogICAgLy8gICB3aGlsZSAoJGRhdGFIYXNpbENoZWNrID0gJHRoaXMtPnNxbEFycmF5KCRnZXRIYXNpbENoZWNrKSkgewogICAgLy8gICAgIGlmKCRkYXRhSGFzaWxDaGVja1snc3RhdHVzJ10gPT0gJzEnKXsKICAgIC8vICAgICAgICRjc3NTdGF0dXMgPSAic3R5bGUgPSAnYmFja2dyb3VuZC1jb2xvcjpyZWQ7JyI7CiAgICAvLyAgICAgICAkYXJyYXlLb2RlQmFyYW5nRXJyb3JbXSA9ICRkYXRhSGFzaWxDaGVja1snZiddLiIuIi4kZGF0YUhhc2lsQ2hlY2tbJ2cnXS4iLiIuJGRhdGFIYXNpbENoZWNrWydoJ10uIi4iLiRkYXRhSGFzaWxDaGVja1snaSddLiIuIi4kZGF0YUhhc2lsQ2hlY2tbJ2onXS4iLiIuJGRhdGFIYXNpbENoZWNrWydqMSddOwogICAgLy8gICAgIH0KICAgIC8vICAgfQogICAgLy8gICBpZihpbl9hcnJheSgkZ2V0RGF0YUJhcmFuZ1BlcnRhbWFbJ2YnXS4iLiIuJGdldERhdGFCYXJhbmdQZXJ0YW1hWydnJ10uIi4iLiRnZXREYXRhQmFyYW5nUGVydGFtYVsnaCddLiIuIi4kZ2V0RGF0YUJhcmFuZ1BlcnRhbWFbJ2knXS4iLiIuJGdldERhdGFCYXJhbmdQZXJ0YW1hWydqJ10uIi4iLiRnZXREYXRhQmFyYW5nUGVydGFtYVsnajEnXSwkYXJyYXlLb2RlQmFyYW5nRXJyb3IpICE9IGZhbHNlKXsKICAgIC8vICAgICAkY3NzU3RhdHVzID0gInN0eWxlID0gJ2JhY2tncm91bmQtY29sb3I6cmVkOyciOwogICAgLy8gICB9CiAgICAvLyB9CgogICAgJGtvbG9tUGVuZ2VsdWFyYW4gPSAiCiAgICAgIDx0ciBjbGFzcz0nJHJvd0NsYXNzJyAgdmFsaWduPSd0b3AnPgogICAgICAgIDx0ZCBhbGlnbj0nY2VudGVyJyBjbGFzcz0nR2FyaXNEYWZ0YXInICRjc3NTdGF0dXM+JG5vPC90ZD4KICAgICAgICA8dGQgYWxpZ249J2NlbnRlcicgY2xhc3M9J0dhcmlzRGFmdGFyJyAgPiRUYW1waWxDaGVja0JveDwvdGQ+CiAgICAgICAgPHRkIGFsaWduPSdjZW50ZXInIGNsYXNzPSdHYXJpc0RhZnRhcicgID4iLiR0aGlzLT5nZW5lcmF0ZURhdGUoJHRhbmdnYWwpLiI8L3RkPgogICAgICAgIDx0ZCBhbGlnbj0nbGVmdCcgY2xhc3M9J0dhcmlzRGFmdGFyJyAgPiRub21vcjwvdGQ+CiAgICAgICAgPHRkIGFsaWduPSdsZWZ0JyBjbGFzcz0nR2FyaXNEYWZ0YXInICAkY3NzU3RhdHVzPiIuJGdldG5hbWFCYXJhbmdQZXJ0YW1hWydubV9iYXJhbmcnXS4iPC90ZD4KICAgICAgICA8dGQgYWxpZ249J2xlZnQnIGNsYXNzPSdHYXJpc0RhZnRhcicgICRjc3NTdGF0dXM+Ii4kZ2V0bmFtYUJhcmFuZ1BlcnRhbWFbJ3NhdHVhbiddLiI8L3RkPgogICAgICAgIDx0ZCBhbGlnbj0nbGVmdCcgY2xhc3M9J0dhcmlzRGFmdGFyJyAgJGNzc1N0YXR1cz4iLiRnZXREYXRhQmFyYW5nUGVydGFtYVsnbWVyayddLiI8L3RkPgogICAgICAgIDx0ZCBhbGlnbj0ncmlnaHQnIGNsYXNzPSdHYXJpc0RhZnRhcicgJGNzc1N0YXR1cyA+Ii5udW1iZXJfZm9ybWF0KCRnZXREYXRhQmFyYW5nUGVydGFtYVsnanVtbGFoJ10sMCwnLCcsJy4nKS4iPC90ZD4KICAgICAgICA8dGQgYWxpZ249J2xlZnQnIGNsYXNzPSdHYXJpc0RhZnRhcicgICRjc3NTdGF0dXM+Ii4kZ2V0RGF0YUJhcmFuZ1BlcnRhbWFbJ2tldGVyYW5nYW4nXS4iPC90ZD4KICAgICAgICA8dGQgYWxpZ249J2NlbnRlcicgdmFsaWduPSdtaWRkbGUnIGNsYXNzPSdHYXJpc0RhZnRhcicgID4kc3RhdHVzUG9zdGluZzwvdGQ+CiAgICAgIDwvdHI+CiAgICAiOwogICAgJHRoaXMtPm5vbW9yS29sb20gKz0gMTsKCiAgICAkZ2V0QWxsQmFyYW5nID0gbXlzcWxfcXVlcnkoInNlbGVjdCAqIGZyb20gZGV0YWlsX3BlbmdlbHVhcmFuIHdoZXJlIGlkX3BlbmdlbHVhcmFuID0gJyRpZCcgYW5kIGlkIT0nIi4kZ2V0QmFyYW5nUGVydGFtYVsnbWluKGlkKSddLiInIik7CiAgICB3aGlsZSAoJGRhdGFCYXJhbmcgPSBteXNxbF9mZXRjaF9hcnJheSgkZ2V0QWxsQmFyYW5nKSkgewogICAgICBpZigkdGhpcy0+bm9tb3JLb2xvbSAlIDIgPT0gMSl7CiAgICAgICAgJHJvd0NsYXNzID0gInJvdzAiOwogICAgICB9ZWxzZXsKICAgICAgICAkcm93Q2xhc3MgPSAicm93MSI7CiAgICAgIH0KICAgICAgJHRoaXMtPm5vbW9yS29sb20gKz0gMTsKICAgICAgJGdldE5hbWFCYXJhbmcgPSBteXNxbF9mZXRjaF9hcnJheShteXNxbF9xdWVyeSgic2VsZWN0ICogZnJvbSByZWZfYmFyYW5nIHdoZXJlIGY9JyIuJGRhdGFCYXJhbmdbJ2YnXS4iJyBhbmQgZz0nIi4kZGF0YUJhcmFuZ1snZyddLiInICBhbmQgaD0nIi4kZGF0YUJhcmFuZ1snaCddLiInICBhbmQgaT0nIi4kZGF0YUJhcmFuZ1snaSddLiInIGFuZCBqPSciLiRkYXRhQmFyYW5nWydqJ10uIicgYW5kIGoxPSciLiRkYXRhQmFyYW5nWydqMSddLiInIikpOwogICAgICAvLyAka29kZUJhcmFuZyA9JGRhdGFCYXJhbmdbJ2YnXS4iLiIuJGRhdGFCYXJhbmdbJ2cnXS4iLiIuJGRhdGFCYXJhbmdbJ2gnXS4iLiIuJGRhdGFCYXJhbmdbJ2knXS4iLiIuJGRhdGFCYXJhbmdbJ2onXS4iLiIuJGRhdGFCYXJhbmdbJ2oxJ107CiAgICAgIC8vIGlmKCR0aGlzLT5zcWxOdW1Sb3coJHRoaXMtPnNxbFF1ZXJ5KCJzZWxlY3QgKiBmcm9tIGNoZWNrX2JhcmFuZ19wZXJzZWRpYWFuIHdoZXJlIHVyYWlhbiA9ICdQRU5HRUxVQVJBTicgYW5kIGlkX3RyYW5zYWtzaSA9ICckaWQnIikpID4gMCl7CiAgICAgIC8vICAgaWYoaW5fYXJyYXkoJGtvZGVCYXJhbmcsJGFycmF5S29kZUJhcmFuZ0Vycm9yKSAhPSBmYWxzZSl7CiAgICAgIC8vICAgICAkY3NzU3RhdHVzID0gInN0eWxlID0gJ2JhY2tncm91bmQtY29sb3I6cmVkOyciOwogICAgICAvLyAgIH1lbHNlewogICAgICAvLyAgICAgJGNzc1N0YXR1cyA9ICJzdHlsZSA9ICdiYWNrZ3JvdW5kLWNvbG9yOmdyZWVuOyciOwogICAgICAvLyAgIH0KICAgICAgLy8gfQogICAgICAka29sb21EZXRhaWxQZW5nZWx1YXJhbiAuPSAiCiAgICAgICAgPHRyIGNsYXNzPSckcm93Q2xhc3MnIHZhbGlnbj0ndG9wJz4KICAgICAgICAgIDx0ZCBhbGlnbj0nY2VudGVyJyBjbGFzcz0nR2FyaXNEYWZ0YXInID48L3RkPgogICAgICAgICAgPHRkIGFsaWduPSdjZW50ZXInIGNsYXNzPSdHYXJpc0RhZnRhcicgID48L3RkPgogICAgICAgICAgPHRkIGFsaWduPSdjZW50ZXInIGNsYXNzPSdHYXJpc0RhZnRhcicgID48L3RkPgogICAgICAgICAgPHRkIGFsaWduPSdsZWZ0JyBjbGFzcz0nR2FyaXNEYWZ0YXInICA+PC90ZD4KICAgICAgICAgIDx0ZCBhbGlnbj0nbGVmdCcgY2xhc3M9J0dhcmlzRGFmdGFyJyAkY3NzU3RhdHVzID4iLiAkZ2V0TmFtYUJhcmFuZ1snbm1fYmFyYW5nJ10uIjwvdGQ+CiAgICAgICAgICA8dGQgYWxpZ249J2xlZnQnIGNsYXNzPSdHYXJpc0RhZnRhcicgJGNzc1N0YXR1cyA+Ii4gJGdldE5hbWFCYXJhbmdbJ3NhdHVhbiddLiI8L3RkPgogICAgICAgICAgPHRkIGFsaWduPSdsZWZ0JyBjbGFzcz0nR2FyaXNEYWZ0YXInICAkY3NzU3RhdHVzPiIuJGRhdGFCYXJhbmdbJ21lcmsnXS4iPC90ZD4KICAgICAgICAgIDx0ZCBhbGlnbj0ncmlnaHQnIGNsYXNzPSdHYXJpc0RhZnRhcicgJGNzc1N0YXR1cyA+Ii5udW1iZXJfZm9ybWF0KCRkYXRhQmFyYW5nWydqdW1sYWgnXSwwLCcsJywnLicpLiI8L3RkPgogICAgICAgICAgPHRkIGFsaWduPSdsZWZ0JyBjbGFzcz0nR2FyaXNEYWZ0YXInICRjc3NTdGF0dXMgPiIuJGRhdGFCYXJhbmdbJ2tldGVyYW5nYW4nXS4iPC90ZD4KICAgICAgICAgIDx0ZCBhbGlnbj0nY2VudGVyJyB2YWxpZ249J21pZGRsZScgY2xhc3M9J0dhcmlzRGFmdGFyJyAgID48L3RkPgogICAgICAgIDwvdHI+CiAgICAgICI7CiAgICAgICAgLy8gJGxpc3RCYXJhbmcgLj0gJGdldE5hbWFCYXJhbmdbJ25tX2JhcmFuZyddLiI8YnI+IjsKICAgICAgICAvLyAkbGlzdEp1bWxhaEJhcmFuZyAuPSBudW1iZXJfZm9ybWF0KCRkYXRhQmFyYW5nWydqdW1sYWgnXSwwLCcsJywnLicpLiI8YnI+IjsKICAgICAgICAvLyAkbGlzdEtldGVyYW5nYW4gLj0gJGRhdGFCYXJhbmdbJ2tldGVyYW5nYW4nXS4iPGJyPiI7CiAgICB9CiAgICAkS29sb21zID0gYXJyYXkoCiAgICAgIGFycmF5KCJWdWxuV2Fsa2VyIiwgJGtvbG9tUGVuZ2VsdWFyYW4uJGtvbG9tRGV0YWlsUGVuZ2VsdWFyYW4pCiAgICAgKTsKCgoKCiAgIHJldHVybiAkS29sb21zOwogIH0KCgoKCgogIGZ1bmN0aW9uIGdlbkRhZnRhck9wc2koKXsKICAgZ2xvYmFsICRSZWYsICRNYWluOwogICBmb3JlYWNoICgkX1JFUVVFU1QgYXMgJGtleSA9PiAkdmFsdWUpIHsKICAgICAgICAgJCRrZXkgPSAkdmFsdWU7CiAgIH0KICAgJGp1bWxhaERhdGEgPSAkX1JFUVVFU1RbJ2p1bWxhaERhdGEnXTsKICAgaWYoZW1wdHkoJGp1bWxhaERhdGEpKSRqdW1sYWhEYXRhID0gNTA7CiAgICRhcnJheVN0YXR1c1Bvc3RpbmcgPSBhcnJheSgKICAgICBhcnJheSgnMScsIlNVREFIIFBPU1RJTkciKSwKICAgICBhcnJheSgnMicsIkJFTFVNIFBPU1RJTkciKSwKICAgKTsKICAgICAgJFRhbXBpbE9wdCA9CiAgICAgICAgICAiPHRyPjx0ZD4iLgogICAgICAgICAgZ2VuRmlsdGVyQmFyKGFycmF5KCR0aGlzLT5nZW5GaWx0ZXJTdWJVbml0KCR0aGlzLT5QcmVmaXgsJHRoaXMtPlByZWZpeC4nRmlsdGVyU0tQRCcsJzEwMCUnLCcxNDVweCcpKSwnJywnJywnJykuCiAgICAgICAgICBnZW5GaWx0ZXJCYXIoCiAgICAgICAgICAgIGFycmF5KAogICAgICAgICAgICAgICIKICAgICAgICAgICAgICBJRCBQRU5HRUxVQVJBTiAmbmJzcCAmbmJzcCA8aW5wdXQgdHlwZT0ndGV4dCcgbmFtZT0nZmlsdGVySWRQZW5nZWx1YXJhbicgaWQ9J2ZpbHRlcklkUGVuZ2VsdWFyYW4nIHZhbHVlPSckZmlsdGVySWRQZW5nZWx1YXJhbicgc3R5bGU9J3dpZHRoOjQwcHg7JyA+ICAmbmJzcCAmbmJzcAogICAgICAgICAgICAgIE5PTU9SICZuYnNwICZuYnNwIDxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSdmaWx0ZXJOb21vclBlbmdlbHVhcmFuJyBpZD0nZmlsdGVyTm9tb3JQZW5nZWx1YXJhbicgdmFsdWU9JyRmaWx0ZXJOb21vclBlbmdlbHVhcmFuJyA+ICAmbmJzcCAmbmJzcAogICAgICAgICAgICAgIEtPREUgQkFSQU5HICZuYnNwICZuYnNwIDxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSdmaWx0ZXJLb2RlQmFyYW5nJyBpZD0nZmlsdGVyS29kZUJhcmFuZycgdmFsdWU9JyRmaWx0ZXJLb2RlQmFyYW5nJyA+ICAmbmJzcCAmbmJzcAogICAgICAgICAgICAgIE5BTUEgQkFSQU5HICAmbmJzcCAmbmJzcCA8aW5wdXQgdHlwZT0ndGV4dCcgaWQ9J2ZpbHRlck5hbWFCYXJhbmcnIG5hbWU9J2ZpbHRlck5hbWFCYXJhbmcnIHZhbHVlPSckZmlsdGVyTmFtYUJhcmFuZycgPiAmbmJzcCAmbmJzcAoKICAgICAgICAgICAgICAiCiAgICAgICAgICApLCcnLCcnLCcnKS4KICAgICAgICAgIGdlbkZpbHRlckJhcigKICAgICAgICAgICAgYXJyYXkoCiAgICAgICAgICAgICAgIgogICAgICAgICAgICAgIFNUQVRVUyBQT1NUSU5HICZuYnNwICZuYnNwICIuY21iQXJyYXkoImZpbHRlclN0YXR1c1Bvc3RpbmciLCRmaWx0ZXJTdGF0dXNQb3N0aW5nLCRhcnJheVN0YXR1c1Bvc3RpbmcsIi0tIFNUQVRVUyBQT1NUSU5HIC0tICIsIm9uQ2hhbmdlPSR0aGlzLT5QcmVmaXguZmlsdGVyUmVuZGVyKCkiKS4iICZuYnNwCiAgICAgICAgICAgICAgVEFIVU4gJm5ic3AgJm5ic3AgPGlucHV0IHR5cGU9J3RleHQnIHZhbHVlPSciLiR0aGlzLT50YWh1bkFuZ2dhcmFuLiInIHN0eWxlPSd3aWR0aDo0MHB4OycgcmVhZG9ubHk+Jm5ic3AgJm5ic3AgJm5ic3AgJm5ic3AgSlVNTEFIIERBVEEgJm5ic3AgJm5ic3AgPGlucHV0IHR5cGU9J3RleHQnIG5hbWUgPSdqdW1sYWhEYXRhJyBpZD0nanVtbGFoRGF0YScgdmFsdWUgPSckanVtbGFoRGF0YScgc3R5bGU9J3dpZHRoOjQwcHg7Jz4gICZuYnNwIDxpbnB1dCB0eXBlPSdidXR0b24nIG9uY2xpY2sgPSR0aGlzLT5QcmVmaXgucmVmcmVzaExpc3QoKTsgdmFsdWU9J1RhbXBpbGthbic+IgogICAgICAgICAgKSwnJywnJywnJykKCiAgICAgICAgICAgIDsKCiAgICByZXR1cm4gYXJyYXkoJ1RhbXBpbE9wdCc9PiRUYW1waWxPcHQpOwoKCiAgfQoKICBmdW5jdGlvbiBnZXREYWZ0YXJPcHNpKCRNb2RlPTEpewogICAgZ2xvYmFsICRNYWluLCAkSFRUUF9DT09LSUVfVkFSUzsKICAgICRVSUQgPSAkX0NPT0tJRVsnY29JRCddOwogICAgLy9rb25kaXNpIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAkYXJyS29uZGlzaSA9IGFycmF5KCk7CiAgICBmb3JlYWNoICgkX1JFUVVFU1QgYXMgJGtleSA9PiAkdmFsdWUpIHsKICAgICAgICAgICQka2V5ID0gJHZhbHVlOwogICAgfQogICAgaWYoJGZpbHRlclVydXNhbiAhPScwMCcpewogICAgICAgICRhcnJLb25kaXNpW10gPSAiYzEgPSAnJGZpbHRlclVydXNhbiciOwogICAgfQogICAgaWYoJGZpbHRlckJpZGFuZyAhPScwMCcpewogICAgICAgICRhcnJLb25kaXNpW10gPSAiYyA9ICckZmlsdGVyQmlkYW5nJyI7CiAgICB9CiAgICBpZigkZmlsdGVyU0tQRCAhPScwMCcpewogICAgICAgICRhcnJLb25kaXNpW10gPSAiZCA9ICckZmlsdGVyU0tQRCciOwogICAgfQogICAgaWYoJGZpbHRlclVuaXQgIT0nMDAnKXsKICAgICAgICAkYXJyS29uZGlzaVtdID0gImUgPSAnJGZpbHRlclVuaXQnIjsKICAgIH0KICAgIGlmKCRmaWx0ZXJTdWJVbml0ICE9JzAwMCcpewogICAgICAgICRhcnJLb25kaXNpW10gPSAiZTEgPSAnJGZpbHRlclN1YlVuaXQnIjsKICAgIH0KICAgIGlmKCFlbXB0eSgkZmlsdGVySWRQZW5nZWx1YXJhbikpewogICAgICAkYXJyS29uZGlzaVtdID0gImlkID0gJyRmaWx0ZXJJZFBlbmdlbHVhcmFuJyI7CiAgICB9CiAgICBpZighZW1wdHkoJGZpbHRlck5vbW9yUGVuZ2VsdWFyYW4pKXsKICAgICAgJGFycktvbmRpc2lbXSA9ICJub21vciA9ICckZmlsdGVyTm9tb3JQZW5nZWx1YXJhbiciOwogICAgfQogICAgaWYoIWVtcHR5KCRmaWx0ZXJTdGF0dXNQb3N0aW5nKSl7CiAgICAgIGlmKCRmaWx0ZXJTdGF0dXNQb3N0aW5nID09ICcxJyl7CiAgICAgICAgJGFycktvbmRpc2lbXSA9ICJzdGF0dXNfcG9zdGluZyA9ICcxJyI7CiAgICAgIH1lbHNlewogICAgICAgICRhcnJLb25kaXNpW10gPSAic3RhdHVzX3Bvc3RpbmcgPSAnMCciOwogICAgICB9CiAgICB9CiAgICAkYXJyS29uZGlzaVtdID0gInN0YXR1c190ZW1wICAhPSAnMSciOwogICAgJGFycktvbmRpc2lbXSA9ICJsZWZ0KHRhbmdnYWwsNCkgPSAnIi4kdGhpcy0+dGFodW5BbmdnYXJhbi4iJyI7CgogICAgaWYoIWVtcHR5KCRmaWx0ZXJLb2RlQmFyYW5nKSl7CiAgICAgICRhcnJheUtvbmRpc2lCYXJhbmdbXSA9ICIkdGhpcy0+c3RyaW5nQ29uY2F0S29kZUJhcmFuZyBsaWtlICclJGZpbHRlcktvZGVCYXJhbmclJyI7CiAgICB9CiAgICBpZighZW1wdHkoJGZpbHRlck5hbWFCYXJhbmcpKXsKICAgICAgJGdldERhdGFCYXJhbmcgPSAkdGhpcy0+c3FsUXVlcnkoInNlbGVjdCAkdGhpcy0+c3RyaW5nQ29uY2F0S29kZUJhcmFuZyBhcyBjb25jYXRLb2RlQmFyYW5nIGZyb20gcmVmX2JhcmFuZyB3aGVyZSBubV9iYXJhbmcgbGlrZSAnJSRmaWx0ZXJOYW1hQmFyYW5nJScgYW5kIGoxICE9JycgYW5kIGoxIT0nMDAwMCcgYW5kIGYgPSAnMDgnIik7CiAgICAgIHdoaWxlICgkZGF0YUJhcmFuZyA9ICR0aGlzLT5zcWxBcnJheSgkZ2V0RGF0YUJhcmFuZykpIHsKICAgICAgICAkYXJyYXlDb25jYXRLb2RlQmFyYW5nW10gPSAiJyIuJGRhdGFCYXJhbmdbJ2NvbmNhdEtvZGVCYXJhbmcnXS4iJyI7CiAgICAgIH0KICAgICAgICAkYXJyYXlLb25kaXNpQmFyYW5nW10gPSAiICR0aGlzLT5zdHJpbmdDb25jYXRLb2RlQmFyYW5nIGluICgiLmltcGxvZGUoIiwiLCRhcnJheUNvbmNhdEtvZGVCYXJhbmcpLiIpIjsKICAgIH0KICAgIGlmKHNpemVvZigkYXJyYXlLb25kaXNpQmFyYW5nKSAhPSAwKXsKICAgICAgJGtvbmRpc2lGaWx0ZXJCYWFyYW5nID0gaW1wbG9kZSgiIGFuZCAiLCRhcnJheUtvbmRpc2lCYXJhbmcpOwogICAgICAkZ2V0RGF0YVBlbmdlbHVhcmFuID0gJHRoaXMtPnNxbFF1ZXJ5KCJzZWxlY3QgaWQgZnJvbSBwZW5nZWx1YXJhbiB3aGVyZSAiLmpvaW4oJyBhbmQgJywkYXJyS29uZGlzaSkuIiAiKTsKICAgICAgd2hpbGUgKCRkYXRhUGVuZ2VsdWFyYW4gPSAkdGhpcy0+c3FsQXJyYXkoJGdldERhdGFQZW5nZWx1YXJhbikpIHsKICAgICAgICAgIGlmKCR0aGlzLT5zcWxOdW1Sb3coJHRoaXMtPnNxbFF1ZXJ5KCJzZWxlY3QgKiBmcm9tIGRldGFpbF9wZW5nZWx1YXJhbiB3aGVyZSBpZF9wZW5nZWx1YXJhbiA9ICciLiRkYXRhUGVuZ2VsdWFyYW5bJ2lkJ10uIicgYW5kICRrb25kaXNpRmlsdGVyQmFhcmFuZyIpKSAhPTApewogICAgICAgICAgICAkdGhpcy0+cmVzdWx0SURQZW5nZWx1YXJhbltdID0gJGRhdGFQZW5nZWx1YXJhblsnaWQnXTsKICAgICAgICAgIH0KICAgICAgfQogICAgICAkYXJyS29uZGlzaVtdID0gIiBpZCBpbiAoIi5pbXBsb2RlKCIsIiwkdGhpcy0+cmVzdWx0SURQZW5nZWx1YXJhbikuIikgIjsKICAgIH0KCiAgICAkS29uZGlzaT0gam9pbignIGFuZCAnLCRhcnJLb25kaXNpKTsKICAgICRLb25kaXNpID0gJEtvbmRpc2kgPT0nJyA\/ICcnOicgV2hlcmUgJy4kS29uZGlzaSA7CiAgICAvL09yZGVyIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICRmbU9SREVSMSA9IGNla1BPU1QoJ2ZtT1JERVIxJyk7CiAgICAkZm1ERVNDMSA9IGNla1BPU1QoJ2ZtREVTQzEnKTsKICAgICRBc2MxID0gJGZtREVTQzEgPT0nJz8gJyc6ICdkZXNjJzsKICAgICRhcnJPcmRlcnMgPSBhcnJheSgpOwogICAgJE9yZGVyPSBqb2luKCcsJywkYXJyT3JkZXJzKTsKICAgICRPcmRlckRlZmF1bHQgPSAnJzsKICAgICRPcmRlciA9ICAkT3JkZXIgPT0nJz8gJE9yZGVyRGVmYXVsdCA6ICcgT3JkZXIgQnkgJy4kT3JkZXI7CgogICAgaWYoZW1wdHkoJGp1bWxhaERhdGEpKSRqdW1sYWhEYXRhID01MDsKICAgICR0aGlzLT5wYWdlUGVySGFsID0gJGp1bWxhaERhdGE7CiAgICAkTWFpbi0+UGFnZVBlckhhbCA9ICRqdW1sYWhEYXRhOwogICAgJHBhZ2VQZXJIYWwgPSAkdGhpcy0+cGFnZVBlckhhbCA9PScnID8gJE1haW4tPlBhZ2VQZXJIYWw6ICR0aGlzLT5wYWdlUGVySGFsOwogICAgJEhhbERlZmF1bHQ9Y2VrUE9TVCgkdGhpcy0+UHJlZml4LidfaGFsJywxKTsKICAgIC8vJExpbWl0ID0gIiBsaW1pdCAiLigoJEhhbERlZmF1bHQgICoxKSAtIDEpICogJE1haW4tPlBhZ2VQZXJIYWwuIiwiLiRNYWluLT5QYWdlUGVySGFsOyAvLyRMaW1pdEhhbCA9ICcnOwogICAgJExpbWl0ID0gIiBsaW1pdCAiLigoJEhhbERlZmF1bHQgICoxKSAtIDEpICogJHBhZ2VQZXJIYWwuIiwiLiRwYWdlUGVySGFsOyAvLyRMaW1pdEhhbCA9ICcnOwogICAgJExpbWl0ID0gJE1vZGUgPT0gMyA\/ICcnOiAkTGltaXQ7CiAgICAvL25vYXdhbCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICROb0F3YWw9ICRwYWdlUGVySGFsICogKCgkSGFsRGVmYXVsdCoxKSAtIDEpOwogICAgJE5vQXdhbCA9ICRNb2RlID09IDMgPyAwOiAkTm9Bd2FsOwoKICAgIHJldHVybiBhcnJheSgnS29uZGlzaSc9PiRLb25kaXNpLCAnT3JkZXInPT4kT3JkZXIgLCdMaW1pdCc9PiRMaW1pdCwgJ05vQXdhbCc9PiROb0F3YWwgKTsKCiAgfQoKCiAgZnVuY3Rpb24gcGFnZVNob3coKXsKICAgIGdsb2JhbCAkYXBwLCAkTWFpbjsKCiAgICAkbmF2YXRhc18gPSAkdGhpcy0+c2V0TmF2QXRhcygpOwogICAgJG5hdmF0YXMgPSAkbmF2YXRhc189PScnPyAvLyAnMCc6ICcyMCc7CiAgICAgICcnOgogICAgICAiPHRyPjx0ZCBoZWlnaHQ9JzIwJz4iLgogICAgICAgICAgJG5hdmF0YXNfLgogICAgICAiPC90ZD48L3RyPiI7CiAgICAkZm9ybTEgPSAkdGhpcy0+d2l0aGZvcm0\\/ZmFtaWx5PSRmb250RmFtaWx5W29wdGlvbl92YWx1ZV0nPgogIAkJCTxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaHJlZj0naHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M\",
    "size": "77817"
}