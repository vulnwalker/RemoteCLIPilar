{
    "namaFile": "js\/ref_images\/ref_images.php",
    "lastUpdate": "2017-10-25+17:12:13.28",
    "contentFile": "\\/UGc9cHJvY2Vzc3VwbG9hZGZpbGVhcnNpcCcgbWV0aG9kPSdwb3N0JyBlbmN0eXBlPSdtdWx0aXBhcnQvZm9ybS1kYXRhJyBpZD0nVXBsb2FkRm9ybSc+Ii4NCiAgICAgICAgICAgICAgICAiPGlucHV0IHR5cGU9J2hpZGRlbicgaWQ9J2lkJyBuYW1lPSdpZCcgdmFsdWU9JyIuJGlkLiInID4iLg0KICAgICAgICAgICAgICAgICAiPGlucHV0IHR5cGU9J2hpZGRlbicgaWQ9J2ZvbGRlcicgbmFtZT0nZm9sZGVyJyB2YWx1ZT0nIi4kZ2V0ZGF0YWthdGVnb3JpWyduYW1hX2thdGVnb3JpJ10uIicgPiIuDQogICAgICAgICAgICAgICAgIjxpbnB1dCBpZD0nSW1hZ2VGaWxlJyBuYW1lPSdJbWFnZUZpbGUnIHR5cGU9J2ZpbGUnICBvbmNoYW5nZT1cIiIuJHRoaXMtPlByZWZpeC4iLmJ0ZmlsZV9vbmNoYW5nZSgpO1wiIC8+Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAuIjwvZm9ybT4iLCANCiAgICAgICAgICAgICAgICApLA0KICAgICAgKTsNCiAgICANCiAgICAgICAgICAgICAgDQogICAgJGZvcm0gPSAkdGhpcy0+Z2VuRm9ybSgpOyAgIA0KICAgICRjb250ZW50ID0gJGZvcm07Ly8kY29udGVudCA9ICdjb250ZW50JzsNCiAgICByZXR1cm4gIGFycmF5ICgnY2VrJz0+JGNlaywgJ2Vycic9PiRlcnIsICdjb250ZW50Jz0+JGNvbnRlbnQpOw0KICB9DQogICAgDQogIGZ1bmN0aW9uIHNldEZvcm0oJGR0KXsgIA0KICAgZ2xvYmFsICRTZW5zdXNUbXAgLCRNYWluOw0KICAgJGNlayA9ICcnOyAkZXJyPScnOyAkY29udGVudD0nJzsgICAgIA0KICAgJGpzb24gPSBUUlVFOyAgLy8kRXJyTXNnID0gJ3Rlcyc7ICAgIA0KICAgJGZvcm1fbmFtZSA9ICR0aGlzLT5QcmVmaXguJ19mb3JtJzsNCiAgICAgICAgDQogICR0aGlzLT5mb3JtX3dpZHRoID0gNTAwOw0KICAgJHRoaXMtPmZvcm1faGVpZ2h0ID0gMjAwOw0KICAgIGlmICgkdGhpcy0+Zm9ybV9mbVNUPT0wKSB7DQogICAgJHRoaXMtPmZvcm1fY2FwdGlvbiA9ICdCYXJ1JzsNCiAgICANCiAgLy8gICRuaXAgICA9ICcnOw0KICAgIH1lbHNlew0KICAgICR0aGlzLT5mb3JtX2NhcHRpb24gPSAnRWRpdCc7ICAgICANCiAgICAkcmVhZG9ubHk9J3JlYWRvbmx5JzsNCiAgICAkZ2V0ID0gbXlzcWxfZmV0Y2hfYXJyYXkobXlzcWxfcXVlcnkoInNlbGVjdCAqIGZyb20gYXJzaXAgd2hlcmUgaWQgPSckZHQnIikpOw0KICAgIGZvcmVhY2ggKCRnZXQgYXMgJGtleSA9PiAkdmFsdWUpIHsgDQogICAgICAgICQka2V5ID0gJHZhbHVlOyANCiAgICAgIH0gDQogICAgJHRhbmdnYWxfdXBkYXRlID0gZXhwbG9kZSgiLSIsJHRhbmdnYWxfdXBkYXRlKTsNCiAgICAkdGFuZ2dhbF91cGRhdGUgPSAkdGFuZ2dhbF91cGRhdGVbMl0uIi0iLiR0YW5nZ2FsX3VwZGF0ZVsxXS4iLSIuJHRhbmdnYWxfdXBkYXRlWzBdOyAgICAgDQogICAgfQ0KICAgIA0KICAgICAgICAgICAgICAgJGNtYkthdGVnb3JpID0gY21iUXVlcnkoJ2NtYkthdGVnb3JpJywkbmFtYV9rYXRlZ29yaSwiU0VMRUNUIGlkLG5hbWEgZnJvbSBpbWFnZXNfa2F0ZWdvcmkgIiwnLS0gU2VsZWN0IE9wdGlvbiAtLScpOw0KICAgICAgICAgICAgICAgJGlkX3RlcmFraGlyID0gbXlzcWxfZmV0Y2hfYXJyYXkobXlzcWxfcXVlcnkoIlNFTEVDVCBtYXgoaWQpIEZST00gYXJzaXAiKSk7DQogICAvL2l0ZW1zIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiAgICAkdGhpcy0+Zm9ybV9maWVsZHMgPSBhcnJheSgNCiAgICAgIA0KICAgICAgICANCiAgICAgICduYW1hJyA9PiBhcnJheSggDQogICAgICAgICAgICAnbGFiZWwnPT4nTkFNQScsDQogICAgICAgICAgICAnbGFiZWxXaWR0aCc9PjEwMCwgDQogICAgICAgICAgICAndmFsdWUnPT4iPGRpdiBzdHlsZT0nZmxvYXQ6bGVmdDsnPg0KICAgICAgICAgICAgPGlucHV0IHR5cGU9J3RleHQnIG5hbWU9J25hbWEnIGlkPSduYW1hJyB2YWx1ZT0nIi4kbmFtYS4iJyBwbGFjZWhvbGRlcj0nTkFNQScgc3R5bGU9J3dpZHRoOjI1MHB4Oyc+DQogICAgICAgICAgICA8L2Rpdj4iLCANCiAgICAgICAgICAgICApLA0KDQogICAgICAna2F0ZWdvcmknID0+IGFycmF5KCANCiAgICAgICAgICAnbGFiZWwnPT4nS0FURUdPUkknLA0KICAgICAgICAgICdsYWJlbFdpZHRoJz0+MTAwLCANCiAgICAgICAgICAndmFsdWUnPT4iPGRpdiBzdHlsZT0nZmxvYXQ6bGVmdDsnPg0KICAgICAgICAgICAgJGNtYkthdGVnb3JpDQogICAgICAgICAgPGlucHV0IHR5cGU9J2J1dHRvbicgbmFtZT0nd2FybmFCYXJ1JyBpZD0nd2FybmFCYXJ1JyB2YWx1ZT0nQmFydScgb25jbGljayA9JyIuJHRoaXMtPlByZWZpeC4iLm5ld0thdGVnb3JpKCknPg0KICAgICAgICAgIDxpbnB1dCB0eXBlPSdidXR0b24nIG5hbWU9J2VkaXQnIGlkPSdlZGl0JyB2YWx1ZT0nRWRpdCcgb25jbGljayA9JyIuJHRoaXMtPlByZWZpeC4iLmVkaXRLYXRlZ29yaSgpJz4NCiAgICAgICAgICA8L2Rpdj4iLCANCiAgICAgICAgICApLA0KDQogICAgICAndXNlcm5hbWUnID0+IGFycmF5KA0KICAgICAgICAgICAgJ2xhYmVsJyA9PiAnVVNFUk5BTUUnLA0KICAgICAgICAgICAgJ2xhYmVsV2lkdGgnID0+IDEwMCwNCiAgICAgICAgICAgICd2YWx1ZScgPT4gIjxkaXYgc3R5bGU9J2Zsb2F0OmxlZnQ7Jz4NCiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyByZWFkb25seSBuYW1lPSd1c2VybmFtZScgaWQ9J3VzZXJuYW1lJyB2YWx1ZT0nIi4kX0NPT0tJRVsnY29JRCddLiInDQogICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSd1c2VybmFtZScgc3R5bGU9J3dpZHRoOjI1MHB4Oyc+DQogICAgICAgICAgICA8L2Rpdj4iLA0KICAgICAgICAgICksDQoNCiAgICAgICd0YW5nZ2FsJyA9PiBhcnJheSgNCiAgICAgICAgICAgICdsYWJlbCcgPT4gJ1RBTkdHQUwnLA0KICAgICAgICAgICAgJ2xhYmVsV2lkdGgnID0+IDEwMCwNCiAgICAgICAgICAgICd2YWx1ZScgPT4gIjxkaXYgc3R5bGU9J2Zsb2F0OmxlZnQ7Jz4NCiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSdkYXRlJyBuYW1lPSd0YW5nZ2FsJyBpZD0ndGFuZ2dhbCcgdmFsdWU9JyIuZGF0ZSgnWS1tLWQnKS4iJw0KICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0ndGFuZ2dhbCcgc3R5bGU9J3dpZHRoOjI1MHB4Oyc+DQogICAgICAgICAgICA8L2Rpdj4iLA0KICAgICAgICAgICksDQogICAgICAnaW1hZ2UnID0+IGFycmF5KA0KICAgICAgICAgICAgJ2xhYmVsJyA9PiAnSU1BR0UnLA0KICAgICAgICAgICAgJ2xhYmVsV2lkdGgnID0+IDEwMCwNCiAgICAgICAgICAgICd2YWx1ZScgPT4gIg0KICAgICAgICAgICAgPGZvcm0gYWN0aW9uPSd1cGxvYWQucGhwJyBtZXRob2Q9J3Bvc3QnIGVuY3R5cGU9J211bHRpcGFydC9mb3JtLWRhdGEnPg0KICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSdmbG9hdDpsZWZ0Oyc+DQogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9J2ZpbGUnIG5hbWU9J2ZpbGVUb1VwbG9hZCcgaWQ9J2ZpbGVUb1VwbG9hZCcgdmFsdWU9JyIuJGZpbGVUb1VwbG9hZC4iJyBwbGFjZWhvbGRlcj0naW1hZ2UnPg0KICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZm9ybT4iLA0KICAgICAgICAgICksICAgICAgICAgICAgICAgICAgICAgDQoNCiAgICAgICk7DQogICAgLy90b21ib2wNCiAgICAkdGhpcy0+Zm9ybV9tZW51YmF3YWggPQ0KICAgICAgDQogICAgICAiPGlucHV0IHR5cGU9J2J1dHRvbicgdmFsdWU9J1NpbXBhbicgb25jbGljayA9JyIuJHRoaXMtPlByZWZpeC4iLlNpbXBhbigkZHQpJyB0aXRsZT0nU2ltcGFuJyA+ICZuYnNwIi4NCiAgICAgICI8aW5wdXQgdHlwZT0nYnV0dG9uJyB2YWx1ZT0nQmF0YWwnIG9uY2xpY2sgPSciLiR0aGlzLT5QcmVmaXguIi5DbG9zZSgpJyA+IjsNCiAgICAgICAgICAgICAgDQogICAgJGZvcm0gPSAkdGhpcy0+Z2VuRm9ybSgpOyAgIA0KICAgICRjb250ZW50ID0gJGZvcm07Ly8kY29udGVudCA9ICdjb250ZW50JzsNCiAgICByZXR1cm4gIGFycmF5ICgnY2VrJz0+JGNlaywgJ2Vycic9PiRlcnIsICdjb250ZW50Jz0+JGNvbnRlbnQpOw0KICB9DQogIA0KICAvKmZ1bmN0aW9uIHNldFBhZ2VfSGVhZGVyT3RoZXIoKXsNCiAgcmV0dXJuIA0KICAgICAgIjx0YWJsZSB3aWR0aD1cIjEwMCVcIiBjbGFzcz1cIm1lbnViYXJcIiBjZWxscGFkZGluZz1cIjBcIiBjZWxsc3BhY2luZz1cIjBcIiBib3JkZXI9XCIwXCIgc3R5bGU9J21hcmdpbjowIDAgMCAwJz4NCiAgPHRyPjx0ZCBjbGFzcz1cIm1lbnVkb3R0ZWRsaW5lXCIgd2lkdGg9XCI0MCVcIiBoZWlnaHQ9XCIyMFwiIHN0eWxlPSd0ZXh0LWFsaWduOnJpZ2h0Jz48Qj4NCiAgPEEgaHJlZj1cInBhZ2VzLnBocD9QZz1yZWZfc2twZFwiIHRpdGxlPSdTa3BkJyAgPlNrcGQ8L2E+IHwgDQogIDxBIGhyZWY9XCJwYWdlcy5waHA\/UGc9XCIgdGl0bGU9Jycgc3R5bGU9J2NvbG9yOmJsdWUnICA+PC9hPiB8DQogIDxBIGhyZWY9XCJwYWdlcy5waHA\/UGc9cmVmX3NhdHVhblwiIHRpdGxlPSdTYXR1YW4nICA+U2F0dWFuPC9hPiB8DQogIDxBIGhyZWY9XCJwYWdlcy5waHA\/UGc9cmVmX2tlcGFsYV9za3BkXCIgdGl0bGU9J0tlcGFsYSBTa3BkJyAgPktlcGFsYSBTa3BkPC9hPiB8DQogIDxBIGhyZWY9XCJwYWdlcy5waHA\/UGc9cmVmX3Blbmdlc2FoYW5cIiB0aXRsZT0nUGVuZ2VzYWhhbicgICA+UGVuZ2VzYWhhbjwvYT4gfA0KICA8QSBocmVmPVwicGFnZXMucGhwP1BnPXJlZl90YXBkXCIgdGl0bGU9J1RhcGQnICAgPlRhcGQ8L2E+IHwNCiAgPEEgaHJlZj1cInBhZ2VzLnBocD9QZz1yZWZfcHJvZ3JhbVwiIHRpdGxlPSdQcm9ncmFtICYgS2VnaWF0YW4nICAgPlByb2dyYW0gJiBLZWdpYXRhbjwvYT4gfA0KICA8QSBocmVmPVwicGFnZXMucGhwP1BnPXJlZl9zdW1iZXJfZGFuYVwiIHRpdGxlPSdTdW1iZXIgRGFuYScgICA+U3VtYmVyIERhbmE8L2E+IHwNCiAgDQogIDwvdGQ+PC90cj48L3RhYmxlPiI7DQogICI8dGFibGUgd2lkdGg9XCIxMDAlXCIgY2xhc3M9XCJtZW51YmFyXCIgY2VsbHBhZGRpbmc9XCIwXCIgY2VsbHNwYWNpbmc9XCIwXCIgYm9yZGVyPVwiMFwiIHN0eWxlPSdtYXJnaW46MCAwIDAgMCc+IjsNCiAgDQogIH0qLw0KICAgIA0KICAvL2RhZnRhciA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgZnVuY3Rpb24gc2V0S29sb21IZWFkZXIoJE1vZGU9MSwgJENoZWNrYm94PScnKXsNCiAgICAkTm9tb3JDb2xTcGFuID0gJE1vZGU9PTE\\/IDA6ICROb0F3YWw7ICAgIA0KICAgICoqLw0KICAgICRwYWdlUGVySGFsID0gJHRoaXMtPnBhZ2VQZXJIYWwgPT0nJyA\/ICRNYWluLT5QYWdlUGVySGFsOiAkdGhpcy0+cGFnZVBlckhhbDsgDQogICAgJEhhbERlZmF1bHQ9Y2VrUE9TVCgkdGhpcy0+UHJlZml4LidfaGFsJywxKTsgICAgICAgICAgDQogICAgLy8kTGltaXQgPSAiIGxpbWl0ICIuKCgkSGFsRGVmYXVsdCAgKjEpIC0gMSkgKiAkTWFpbi0+UGFnZVBlckhhbC4iLCIuJE1haW4tPlBhZ2VQZXJIYWw7IC8vJExpbWl0SGFsID0gJyc7DQogICAgJExpbWl0ID0gIiBsaW1pdCAiLigoJEhhbERlZmF1bHQgICoxKSAtIDEpICogJHBhZ2VQZXJIYWwuIiwiLiRwYWdlUGVySGFsOyAvLyRMaW1pdEhhbCA9ICcnOw0KICAgICRMaW1pdCA9ICRNb2RlID09IDMgPyAnJzogJExpbWl0Ow0KICAgIC8vbm9hd2FsIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KICAgICROb0F3YWw9ICRwYWdlUGVySGFsICogKCgkSGFsRGVmYXVsdCoxKSAtIDEpOyAgICAgICAgICAgICANCiAgICAkTm9Bd2FsID0gJE1vZGUgPT0gMyA\/IDA6ICROb0F3YWw7ICANCiAgICANCiAgICByZXR1cm4gYXJyYXkoJ0tvbmRpc2knPT4kS29uZGlzaSwgJ09yZGVyJz0+JE9yZGVyICwnTGltaXQnPT4kTGltaXQsICdOb0F3YWwnPT4kTm9Bd2FsKTsNCiAgICANCiAgfQ0KfQ0KJHJlZl9pbWFnZXMgPSBuZXcgcmVmX2ltYWdlc09iaigpOw0KJHJlZl9pbWFnZXMtPnVzZXJuYW1lID0gJF9DT09LSUVbJ2NvSUQnXTsNCj8+",
    "size": "47043"
}