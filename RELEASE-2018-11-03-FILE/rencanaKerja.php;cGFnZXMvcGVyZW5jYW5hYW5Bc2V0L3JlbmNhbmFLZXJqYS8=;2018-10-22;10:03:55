{
    "namaFile": "pages\/perencanaanAset\/rencanaKerja\/rencanaKerja.php",
    "lastUpdate": "2018-10-22+10:03:55.85",
    "contentFile": "<?php

class rencanaKerjaObj  extends configClass{
  var $Prefix = 'rencanaKerja';
  var $elCurrPage="HalDefault";
  var $SHOW_CEK = TRUE;
  var $TblName = 'tabel_anggaran'; //bonus
  var $TblName_Hapus = 'tabel_anggaran';
  var $MaxFlush = 10;
  var $TblStyle = array( 'koptable', 'cetak','cetak'); //berdasar mode
  var $ColStyle = array( 'GarisDaftar', 'GarisCetak','GarisCetak');
  var $KeyFields = array('id_anggaran');
  var $FieldSum = array();//array('jml_harga');
  var $SumValue = array();
  var $FieldSum_Cp1 = array( 14, 13, 13);//berdasar mode
  var $FieldSum_Cp2 = array( 1, 1, 1);
  var $checkbox_rowspan = 2;
  var $PageTitle = 'RENCANA KERJA';
  var $PageIcon = 'images/masterData_01.gif';
  var $pagePerHal ='';
  //var $cetak_xls=TRUE ;
  var $fileNameExcel='rencanaKerja.xls';
  var $namaModulCetak='RENCANA KERJA';
  var $Cetak_Judul = 'RENCANA KERJA';
  var $Cetak_Mode=2;
  var $Cetak_WIDTH = '30cm';
  var $Cetak_OtherHTMLHead;
  var $FormName = 'rencanaKerjaForm';
  var $modul = "RENJA";
	var $jenisForm = "";
	var $tahun = "";
	var $nomorUrut = "";
	var $jenisAnggaran = "";
	var $idTahap = "";
	var $namaTahapTerakhir = "";
	var $masaTerakhir = "";
    //untuk view
	var $urutTerakhir = "";
	var $urutSebelumnya = "";
	var $jenisFormTerakhir = "";
	var $tahapTerakhir = "";

	var $username = "";

	var $wajibValidasi = "";
	var $sqlValidasi = "";
	//untuk view
	var $currentTahap = "";
	var $settingAnggaran = "";
	var $reportURLAset = "pages.php?Pg=renjaAset&tipe=Laporan";
  var $nomorKolom = 1;

	function setTitle(){
		return 'RENCANA KERJA SKPD '.$this->jenisAnggaran.' TAHUN '.$this->tahun;
	}
  function setMenuView(){
    return
      "<td>".genPanelIcon("javascript:".$this->Prefix.".Laporan()","print_f2.png",'Laporan',"Laporan")."</td>";
  }
  function setMenuEdit(){
    $getSettingTombol = $this->sqlArray($this->sqlQuery("select * from setting where Id='WEB_SERVICE_PERENCANAAN'"));
    if($getSettingTombol['nilai'] == '1'){
      $buttonWebService = "<td>".genPanelIcon("javascript:".$this->Prefix.".GrabAPI()","download-file-from-cloud.png","Integrasi ", 'Integrasi ')."</td>";
      // $buttonClearDataIntegrasi = "<td>".genPanelIcon("javascript:".$this->Prefix.".ClearIntegrasi()","invalid.png","Clear ", 'Clear ')."</td>";
    }
    $listMenu =$buttonWebService.$buttonClearDataIntegrasi.
          "<td>".genPanelIcon("javascript:".$this->Prefix.".Baru()","sections.png","Baru ", 'Baru ')."</td>".
          "<td>".genPanelIcon("javascript:".$this->Prefix.".Edit()","edit_f2.png","Edit", 'Edit')."</td>".
          "<td>".genPanelIcon("javascript:".$this->Prefix.".Hapus()","delete_f2.png","Hapus", 'Hapus')."</td>"
          ;
    return $listMenu ;
  }


  function set_selector_other2($tipe){
   global $Main;
   $cek = ''; $err=''; $content=''; $json=TRUE;

   return array ('cek'=>$cek, 'err'=>$err, 'content'=>$content, 'json'=>$json);
  }

  function set_selector_other($tipe){
   global $Main;
   $cek = ''; $err=''; $content=''; $json=TRUE;
   foreach ($_REQUEST as $key => $value) {
		  $$key = $value;
	 }
    switch($tipe){

      case 'GrabAPI':{
        $fm = $this->GrabAPI();
        $cek .= $fm['cek'];
        $err = $fm['err'];
        $content = $fm['content'];
        break;
      }
      case 'showErrorDialogAPI':{
        $fm = $this->showErrorDialogAPI();
        $cek .= $fm['cek'];
        $err = $fm['err'];
        $content = $fm['content'];
        break;
      }
      case 'ClearIntegrasi':{
        $jumlahData = $this->sqlNumRow($this->sqlQuery("select * from tabel_anggaran where integrasi = '1' and nama_modul ='RENJA'"));
        $this->sqlQuery("delete from tabel_anggaran where integrasi = '1' and nama_modul ='RENJA'");
        $content = array(
          "dataIntegrasi" => $jumlahData
        );
        break;
      }

      case 'viewLaporan':{
        $json = FALSE;
        $this->viewLaporan();
        break;
      }
      case 'Laporan':{
        $fm = $this->Laporan();
        $cek .= $fm['cek'];
        $err = $fm['err'];
        $content = $fm['content'];
        break;
      }
      case 'newTandaTangangan':{
        $fm = $this->newTandaTangangan();
        $cek .= $fm['cek'];
        $err = $fm['err'];
        $content = $fm['content'];
        break;
      }
      case 'pilihPangkat':{
        global $Main;
        $cek = ''; $err=''; $content=''; $json=TRUE;

        $idpangkat = $_REQUEST['pangkatakhir'];

        $query = "select concat(gol,'/',ruang)as nama FROM ref_pangkat WHERE nama='$idpangkat'" ;
        $get=mysql_fetch_array(mysql_query($query));$cek.=$query;
        $content=$get['nama'];
        break;
      }
      case 'saveNewTandaTangan':{
        global $Main;
        $kode1= $_REQUEST['c1'];
        $kode2= $_REQUEST['c'];
        $kode3= $_REQUEST['d'];
        $namapegawai= $_REQUEST['namapegawai'];
        $nippegawai= $_REQUEST['nippegawai'];

        $p1= $_REQUEST['pangkatakhir'];

        $golang_akhir= $_REQUEST['golang_akhir'];
        $golongan = explode("/", $golang_akhir);
        $jabatan= $_REQUEST['jabatan'];
        $eselon= $_REQUEST['eselon_akhir'];
        $kategori= $_REQUEST['kategori'];


        $oldy=mysql_fetch_array(
         mysql_query(
           "select count(*) as cnt from ref_tandatangan where nip='$nippegawai'"
         ));
        if( $err=='' && $namapegawai =='' ) $err= 'NAMA PEGAWAI Belum Di Isi !!';
        if( $err=='' && $nippegawai =='' ) $err= 'NIP Belum Di Isi !!';
        if( $err=='' && $p1 =='' ) $err= 'PANGKAT/ GOL/ RUANG Belum Di Pilih !!';
        if( $err=='' && $jabatan =='' ) $err= 'JABATAN Belum Di Isi !!';
        if( $err=='' && $kategori =='' ) $err= 'Kategori Belum Di Pilih !!';

           if($fmST == 0){
           if($err=='' && $oldy['cnt']>0) $err="NIP '$nippegawai' Sudah Ada";
             if($err==''){

               $aqry = "INSERT into ref_tandatangan (c1,c,d,nama,nip,jabatan,pangkat,gol,ruang,eselon,kategori_tandatangan) values('$kode1','$kode2','$kode3','$namapegawai','$nippegawai','$jabatan','$p1','$golongan[0]','$golongan[1]','$eselon',14)";  $cek .= $aqry;
               $qry = mysql_query($aqry);
               $content = array('combottd' => cmbQuery('idPenandaTangan',$d,"SELECT Id, nama from ref_tandatangan where kategori_tandatangan = '14' and c1 = '".$_REQUEST[c1]."' and c = '".$_REQUEST[c]."' and d = '".$_REQUEST[d]."'",'onchange=rka.refreshList(true);','-- TTD --'));
             }
           }else{
             if($err==''){
             $aqry = "UPDATE ref_tandatangan SET nama='$namapegawai', nip='$nippegawai', jabatan='$jabatan' ,pangkat='$p1', gol='$golongan[0]' ,ruang='$golongan[1]',eselon='$eselon' ,kategori_tandatangan='$kategori' WHERE Id='".$idplh."'";  $cek .= $aqry;
                 $qry = mysql_query($aqry) or die(mysql_error());
               }
           }
        break;
      }


     default:{
        $other = $this->set_selector_other2($tipe);
        $cek = $other['cek'];
        $err = $other['err'];
        $content=$other['content'];
        $json=$other['json'];
     break;
     }

   }//end switch

    return  array ('cek'=>$cek, 'err'=>$err, 'content'=>$content, 'json'=>$json);
   }
   function setPage_HeaderOther(){
     if($_GET['modul'] == 'persediaan'){
       $header= $this->getPageHeaderPersediaan($_GET['Pg']);
     }else{
       $header= $this->getPageHeader($_GET['Pg']);
     }
      return $header;
    }
   function setPage_OtherScript(){
    $scriptload =
          "<script>
            $(document).ready(function(){
              ".$this->Prefix.".loading();
            });
          </script>";
    return
      "
      <script src='js/perencanaanAset/filterSKPD.js' type='text/javascript'></script>
      <script type='text/javascript' src='js/perencanaanAset/rencanaKerja/rencanaKerja.js' language='JavaScript' ></script>
      ".$this->loadCalendar()
      .
      $scriptload;
  }

  //daftar =================================
  function setKolomHeader($Mode=1, $Checkbox=''){
    $headerTable =
    "<thead>
    <tr>
     <th class='th01' style='width:1%;' >No.</th>
     $Checkbox
     <th class='th01' style='width:1%;'>KODE</th>
    <th class='th01' style='width:50%;'>NAMA URUSAN PEMERINTAHAN, ORGANISASI, PROGRAM DAN KEGIATAN</th>
    <th class='th01' style='width:40%;'>OUTPUT</th>
    </tr>
    </thead>";
    $NomorColSpan = $Mode==1? 2: 1;
    return $headerTable;
  }

  function setKolomData($no, $isi, $Mode, $TampilCheckBox){
   global $Ref;
   foreach ($isi as $key => $value) {
            $$key = $value;
   }
   $concatUrusan = $c1;
   $concatBidang = $c1.".".$c;
   $concatSKPD = $c1.".".$c.".".$d;
   $concatProgram = $c1.".".$c.".".$d.".".$bk.".".genNumber($ck).".".genNumber($dk).".".genNumber($p);
   $concatKegiatan = $c1.".".$c.".".$d.".".$bk.".".genNumber($ck).".".genNumber($dk).".".genNumber($p).".".genNumber($q);
   $kodeKegiatan = $c1.".".$c.".".$d.".".$bk.".".$ck.".".$dk.".".$p.".".$q;
   $getNamaKegiatan = mysql_fetch_array(mysql_query("select * from ref_program where bk = '$bk' and ck = '$ck' and dk='$dk' and p='$p' and q='$q'"));
   $namaKegiatan = $getNamaKegiatan['nama'];
   $getDetailRenja = mysql_fetch_array(mysql_query("select * from detail_renja where id_anggaran = '$id_anggaran'"));
   $output = $getDetailRenja['output'];
   if($this->nomorKolom % 2 == 1){
     $rowClass = "row0";
   }else{
     $rowClass = "row1";
   }
   if(!in_array($concatUrusan,$this->concatArray) ){
    $this->concatArray[] = $concatUrusan;
    $getNamaUrusan = $this->sqlArray($this->sqlQuery("select * from ref_skpd where c1 = '$c1' and c= '00'"));
    $namaUrusan = $getNamaUrusan['nm_skpd'];
    $kolomUrusan = "
       <tr class='$rowClass' valign='top'>
         <td align='center' class='GarisDaftar' >$this->nomorKolom</td>
         <td align='center' class='GarisDaftar'></td>
         <td align='left' class='GarisDaftar'>$concatUrusan</td>
         <td align='left' class='GarisDaftar'>$namaUrusan</td>
         <td align='left' class='GarisDaftar'></td>
       </tr>
     ";
     $this->nomorKolom  += 1;
   }
   if(!in_array($concatBidang,$this->concatArray) ){
    $this->concatArray[] = $concatBidang;
    $getNamaBidang = $this->sqlArray($this->sqlQuery("select * from ref_skpd where c1 = '$c1' and c= '$c' and d='00' "));
    $namaBidang = $getNamaBidang['nm_skpd'];
    $kolomBidang = "
       <tr class='$rowClass' valign='top'>
         <td align='center' class='GarisDaftar' >$this->nomorKolom</td>
         <td align='center' class='GarisDaftar'></td>
         <td align='left' class='GarisDaftar'>$concatBidang</td>
         <td align='left' class='GarisDaftar'>&nbsp&nbsp$namaBidang</td>
         <td align='left' class='GarisDaftar'></td>
       </tr>
     ";
     $this->nomorKolom  += 1;
   }
   if(!in_array($concatSKPD,$this->concatArray) ){
    $this->concatArray[] = $concatSKPD;
    $getNamaSKPD = $this->sqlArray($this->sqlQuery("select * from ref_skpd where c1 = '$c1' and c= '$c' and d='$d' and e='00' "));
    $namaSKPD = $getNamaSKPD['nm_skpd'];
    $kolomSKPD = "
       <tr class='$rowClass' valign='top'>
         <td align='center' class='GarisDaftar' >$this->nomorKolom</td>
         <td align='center' class='GarisDaftar'></td>
         <td align='left' class='GarisDaftar'>$concatSKPD</td>
         <td align='left' class='GarisDaftar'>&nbsp&nbsp&nbsp&nbsp$namaSKPD</td>
         <td align='left' class='GarisDaftar'></td>
       </tr>
     ";
     $this->nomorKolom  += 1;
   }
   if(!in_array($concatProgram,$this->concatArray) ){
    $this->concatArray[] = $concatProgram;
    $kodeProgram = $bk.".".$ck.".".$dk.".".$p;
    $getNamaProgram = $this->sqlArray($this->sqlQuery("select * from ref_program where concat(bk,'.',ck,'.',dk,'.',p) = '$kodeProgram' and q='0' "));
    $namaProgram = $getNamaProgram['nama'];
    $kolomProgram = "
       <tr class='$rowClass' valign='top'>
         <td align='center' class='GarisDaftar' >$this->nomorKolom</td>
         <td align='center' class='GarisDaftar'></td>
         <td align='left' class='GarisDaftar'>$concatProgram</td>
         <td align='left' class='GarisDaftar'>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp$namaProgram</td>
         <td align='left' class='GarisDaftar'></td>
       </tr>
     ";
     $this->nomorKolom  += 1;
   }
   $kolomKegiatan = "
      <tr class='$rowClass' valign='top'>
        <td align='center' class='GarisDaftar' >$this->nomorKolom</td>
        <td align='center' class='GarisDaftar'>$TampilCheckBox</td>
        <td align='left' class='GarisDaftar'>$concatKegiatan</td>
        <td align='left' class='GarisDaftar'>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp$namaKegiatan</td>
        <td align='left' class='GarisDaftar'>$output</td>
      </tr>
    ";
   $this->nomorKolom  += 1;
    $Koloms = array(
      array("VulnWalker", $kolomUrusan.$kolomBidang.$kolomSKPD.$kolomProgram.$kolomKegiatan)
     );
   return $Koloms;
  }



  function genDaftarOpsi(){
   global $Ref, $Main;
    $jumlahData = $_REQUEST['jumlahData'];
    if(empty($jumlahData))$jumlahData = 50;
      $TampilOpt =
          "<tr><td>".
          genFilterBar(array($this->genFilterSKPD($this->Prefix,$this->Prefix.'FilterSKPD','100%','145px')),'','','').
          genFilterBar(
            array(
              "
		           <input type='hidden' name='newBlankPage' id='newBlankPage' value=''>
              TAHUN ANGGARAN &nbsp &nbsp <input type='text' value='".$this->tahun."' style='width:40px;' readonly>&nbsp &nbsp &nbsp &nbsp JUMLAH DATA &nbsp &nbsp <input type='text' name ='jumlahData' id='jumlahData' value ='$jumlahData' style='width:40px;'>  &nbsp <input type='button' onclick =$this->Prefix.refreshList(true); value='Tampilkan'>&nbsp <span style='color:red'>*Klik \"Tampilkan\" untuk menampilkan data </span>"
          ),'','','')
            ;
    return array('TampilOpt'=>$TampilOpt);
  }

  function getDaftarOpsi($Mode=1){
    global $Main, $HTTP_COOKIE_VARS;
    $UID = $_COOKIE['coID'];
    //kondisi -----------------------------------
    $arrKondisi = array();
    foreach ($_REQUEST as $key => $value) {
          $$key = $value;
    }
    if($filterUrusan !='00'){
        $arrKondisi[] = "c1 = '$filterUrusan'";
    }
    if($filterBidang !='00'){
        $arrKondisi[] = "c = '$filterBidang'";
    }
    if($filterSKPD !='00'){
        $arrKondisi[] = "d = '$filterSKPD'";
    }
    $arrKondisi[] = "jenis_anggaran = '$this->jenisAnggaran'";
    $arrKondisi[] = "tahun = '$this->tahun'";
    $arrKondisi[] = "id_tahap = '$this->idTahap'";
    $Kondisi= join(' and ',$arrKondisi);
    $Kondisi = $Kondisi =='' ? '':' Where '.$Kondisi ;
    //Order -------------------------------------
    $fmORDER1 = cekPOST('fmORDER1');
    $fmDESC1 = cekPOST('fmDESC1');
    $Asc1 = $fmDESC1 ==''? '': 'desc';
    $arrOrders = array();
    $arrOrders[] = "c1,c,d,bk,ck,dk,p,q ";
    $Order= join(',',$arrOrders);
    $OrderDefault = '';
    $Order =  $Order ==''? $OrderDefault : ' Order By '.$Order;

    if(empty($jumlahData))$jumlahData =50;
    $this->pagePerHal = $jumlahData;
    $pagePerHal = $this->pagePerHal =='' ? $Main->PagePerHal: $this->pagePerHal;
    $HalDefault=cekPOST($this->Prefix.'_hal',1);
    //$Limit = " limit ".(($HalDefault  *1) - 1) * $Main->PagePerHal.",".$Main->PagePerHal; //$LimitHal = '';
    $Limit = " limit ".(($HalDefault  *1) - 1) * $pagePerHal.",".$pagePerHal; //$LimitHal = '';
    $Limit = $Mode == 3 ? '': $Limit;
    //noawal ------------------------------------
    $NoAwal= $pagePerHal * (($HalDefault*1) - 1);
    $NoAwal = $Mode == 3 \\/ZmFtaWx5PSRmb250RmFtaWx5W29wdGlvbl92YWx1ZV0nPgogICAgICAgIDxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaHJlZj0naHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M\",
    "size": "49720"
}