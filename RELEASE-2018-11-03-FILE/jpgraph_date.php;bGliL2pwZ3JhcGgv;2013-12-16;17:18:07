{
    "namaFile": "lib\/jpgraph\/jpgraph_date.php",
    "lastUpdate": "2013-12-16+17:18:07.00",
    "contentFile": "PD9waHAKLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogLy8gRmlsZTogICAgICAgIEpQR1JBUEhfREFURS5QSFAKIC8vIERlc2NyaXB0aW9uOiBDbGFzc2VzIHRvIGhhbmRsZSBEYXRlIHNjYWxpbmcKIC8vIENyZWF0ZWQ6ICAgICAyMDA1LTA1LTAyCiAvLyBWZXI6ICAgICAgICAgJElkOiBqcGdyYXBoX2RhdGUucGhwIDExMDYgMjAwOS0wMi0yMiAyMDoxNjozNVogbGpwICQKIC8vCiAvLyBDb3B5cmlnaHQgKGMpIEFzaWFsIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICovCgpkZWZpbmUoJ0hPVVJBREpfMScsMCszMCk7CmRlZmluZSgnSE9VUkFESl8yJywxKzMwKTsKZGVmaW5lKCdIT1VSQURKXzMnLDIrMzApOwpkZWZpbmUoJ0hPVVJBREpfNCcsMyszMCk7CmRlZmluZSgnSE9VUkFESl82Jyw0KzMwKTsKZGVmaW5lKCdIT1VSQURKXzEyJyw1KzMwKTsKCmRlZmluZSgnTUlOQURKXzEnLDArMjApOwpkZWZpbmUoJ01JTkFESl81JywxKzIwKTsKZGVmaW5lKCdNSU5BREpfMTAnLDIrMjApOwpkZWZpbmUoJ01JTkFESl8xNScsMysyMCk7CmRlZmluZSgnTUlOQURKXzMwJyw0KzIwKTsKCmRlZmluZSgnU0VDQURKXzEnLDApOwpkZWZpbmUoJ1NFQ0FESl81JywxKTsKZGVmaW5lKCdTRUNBREpfMTAnLDIpOwpkZWZpbmUoJ1NFQ0FESl8xNScsMyk7CmRlZmluZSgnU0VDQURKXzMwJyw0KTsKCgpkZWZpbmUoJ1lFQVJBREpfMScsMCszMCk7CmRlZmluZSgnWUVBUkFESl8yJywxKzMwKTsKZGVmaW5lKCdZRUFSQURKXzUnLDIrMzApOwoKZGVmaW5lKCdNT05USEFESl8xJywwKzIwKTsKZGVmaW5lKCdNT05USEFESl82JywxKzIwKTsKCmRlZmluZSgnREFZQURKXzEnLDApOwpkZWZpbmUoJ0RBWUFESl9XRUVLJywxKTsKZGVmaW5lKCdEQVlBREpfNycsMSk7CgpkZWZpbmUoJ1NFQ1BFUllFQVInLDMxNTM2MDAwKTsKZGVmaW5lKCdTRUNQRVJEQVknLDg2NDAwKTsKZGVmaW5lKCdTRUNQRVJIT1VSJywzNjAwKTsKZGVmaW5lKCdTRUNQRVJNSU4nLDYwKTsKCgpjbGFzcyBEYXRlU2NhbGUgZXh0ZW5kcyBMaW5lYXJTY2FsZSB7CiAgICBwcml2YXRlICRkYXRlX2Zvcm1hdCA9ICcnOwogICAgcHJpdmF0ZSAkaVN0YXJ0QWxpZ24gPSBmYWxzZSwgJGlFbmRBbGlnbiA9IGZhbHNlOwogICAgcHJpdmF0ZSAkaVN0YXJ0VGltZUFsaWduID0gZmFsc2UsICRpRW5kVGltZUFsaWduID0gZmFsc2U7CgogICAgLy8tLS0tLS0tLS0tLS0tLS0KICAgIC8vIENPTlNUUlVDVE9SCiAgICBmdW5jdGlvbiBfX2NvbnN0cnVjdCgkYU1pbj0wLCRhTWF4PTAsJGFUeXBlPSd4JykgewogICAgICAgIGFzc2VydCgkYVR5cGU9PSJ4Iik7CiAgICAgICAgYXNzZXJ0KCRhTWluPD0kYU1heCk7CgogICAgICAgICR0aGlzLT50eXBlPSRhVHlwZTsKICAgICAgICAkdGhpcy0+c2NhbGU9YXJyYXkoJGFNaW4sJGFNYXgpOwogICAgICAgICR0aGlzLT53b3JsZF9zaXplPSRhTWF4LSRhTWluOwogICAgICAgICR0aGlzLT50aWNrcyA9IG5ldyBMaW5lYXJUaWNrcygpOwogICAgICAgICR0aGlzLT5pbnRzY2FsZT10cnVlOwogICAgfQoKCiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgLy8gVXRpbGl0eSBGdW5jdGlvbiBBZGpEYXRlKCkKICAgIC8vIERlc2NyaXB0aW9uOiBXaWxsIHJvdW5kIGEgZ2l2ZW4gdGltZSBzdGFtcCB0byBhbiBldmVuIHllYXIsIG1vbnRoIG9yIGRheQogICAgLy8gYXJndW1lbnQuCiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKICAgIGZ1bmN0aW9uIEFkakRhdGUoJGFUaW1lLCRhUm91bmQ9MCwkYVllYXJUeXBlPWZhbHNlLCRhTW9udGhUeXBlPWZhbHNlLCRhRGF5VHlwZT1mYWxzZSkgewogICAgICAgICR5ID0gKGludClkYXRlKCdZJywkYVRpbWUpOyAkbSA9IChpbnQpZGF0ZSgnbScsJGFUaW1lKTsgJGQgPSAoaW50KWRhdGUoJ2QnLCRhVGltZSk7CiAgICAgICAgJGg9MDskaT0wOyRzPTA7CiAgICAgICAgaWYoICRhWWVhclR5cGUgIT09IGZhbHNlICkgewogICAgICAgICAgICAkeWVhckFkaiA9IGFycmF5KDA9PjEsIDE9PjIsIDI9PjUpOwogICAgICAgICAgICBpZiggJGFSb3VuZCA9PSAwICkgewogICAgICAgICAgICAgICAgJHkgPSBmbG9vcigkeS8keWVhckFkalskYVllYXJUeXBlXSkqJHllYXJBZGpbJGFZZWFyVHlwZV07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICArKyR5OwogICAgICAgICAgICAgICAgJHkgPSBjZWlsKCR5LyR5ZWFyQWRqWyRhWWVhclR5cGVdKSokeWVhckFkalskYVllYXJUeXBlXTsKICAgICAgICAgICAgfQogICAgICAgICAgICAkbT0xOyRkPTE7CiAgICAgICAgfQogICAgICAgIGVsc2VpZiggJGFNb250aFR5cGUgIT09IGZhbHNlICkgewogICAgICAgICAgICAkbW9udGhBZGogPSBhcnJheSgwPT4xLCAxPT42KTsKICAgICAgICAgICAgaWYoICRhUm91bmQgPT0gMCApIHsKICAgICAgICAgICAgICAgICRtID0gZmxvb3IoJG0vJG1vbnRoQWRqWyRhTW9udGhUeXBlXSkqJG1vbnRoQWRqWyRhTW9udGhUeXBlXTsKICAgICAgICAgICAgICAgICRkPTE7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICArKyRtOwogICAgICAgICAgICAgICAgJG0gPSBjZWlsKCRtLyRtb250aEFkalskYU1vbnRoVHlwZV0pKiRtb250aEFkalskYU1vbnRoVHlwZV07CiAgICAgICAgICAgICAgICAkZD0xOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGVsc2VpZiggJGFEYXlUeXBlICE9PSBmYWxzZSApIHsKICAgICAgICAgICAgaWYoICRhRGF5VHlwZSA9PSAwICkgewogICAgICAgICAgICAgICAgaWYoICRhUm91bmQgPT0gMSApIHsKICAgICAgICAgICAgICAgICAgICAvLysrJGQ7CiAgICAgICAgICAgICAgICAgICAgJGg9MjM7JGk9NTk7JHM9NTk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAvLyBBZGp1c3QgdG8gYW4gZXZlbiB3ZWVrIGJvdW5kYXJ5LgogICAgICAgICAgICAgICAgJHcgPSAoaW50KWRhdGUoJ3cnLCRhVGltZSk7IC8vIERheSBvZiB3ZWVrIDA9U3VuLCA2PVNhdAogICAgICAgICAgICAgICAgaWYoIHRydWUgKSB7IC8vIEFkanVzdCB0byBzdGFydCBvbiBNb24KICAgICAgICAgICAgICAgICAgICBpZiggJHc9PTAgKSAkdz02OwogICAgICAgICAgICAgICAgICAgIGVsc2UgLS0kdzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmKCAkYVJvdW5kID09IDAgKSB7CiAgICAgICAgICAgICAgICAgICAgJGQgLT0gJHc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAkZCArPSAoNy0kdyk7CiAgICAgICAgICAgICAgICAgICAgJGg9MjM7JGk9NTk7JHM9NTk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIG1rdGltZSgkaCwkaSwkcywkbSwkZCwkeSk7CgogICAgfQoKICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAvLyBXcmFwcGVyIGZvciBBZGpEYXRlIHRoYXQgd2lsbCByb3VuZCBhIHRpbWVzdGFtcCB0byBhbiBldmVuIGRhdGUgcm91bmRpbmcKICAgIC8vIGl0IGRvd253YXJkcy4KICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBmdW5jdGlvbiBBZGpTdGFydERhdGUoJGFUaW1lLCRhWWVhclR5cGU9ZmFsc2UsJGFNb250aFR5cGU9ZmFsc2UsJGFEYXlUeXBlPWZhbHNlKSB7CiAgICAgICAgcmV0dXJuICR0aGlzLT5BZGpEYXRlKCRhVGltZSwwLCRhWWVhclR5cGUsJGFNb250aFR5cGUsJGFEYXlUeXBlKTsKICAgIH0KCiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgLy8gV3JhcHBlciBmb3IgQWRqRGF0ZSB0aGF0IHdpbGwgcm91bmQgYSB0aW1lc3RhbXAgdG8gYW4gZXZlbiBkYXRlIHJvdW5kaW5nCiAgICAvLyBpdCB1cHdhcmRzCiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgZnVuY3Rpb24gQWRqRW5kRGF0ZSgkYVRpbWUsJGFZZWFyVHlwZT1mYWxzZSwkYU1vbnRoVHlwZT1mYWxzZSwkYURheVR5cGU9ZmFsc2UpIHsKICAgICAgICByZXR1cm4gJHRoaXMtPkFkakRhdGUoJGFUaW1lLDEsJGFZZWFyVHlwZSwkYU1vbnRoVHlwZSwkYURheVR5cGUpOwogICAgfQoKICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAvLyBVdGlsaXR5IEZ1bmN0aW9uIEFkalRpbWUoKQogICAgLy8gRGVzY3JpcHRpb246IFdpbGwgcm91bmQgYSBnaXZlbiB0aW1lIHN0YW1wIHRvIGFuIGV2ZW4gdGltZSBhY2NvcmRpbmcgdG8KICAgIC8vIGFyZ3VtZW50LgogICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCiAgICBmdW5jdGlvbiBBZGpUaW1lKCRhVGltZSwkYVJvdW5kPTAsJGFIb3VyVHlwZT1mYWxzZSwkYU1pblR5cGU9ZmFsc2UsJGFTZWNUeXBlPWZhbHNlKSB7CiAgICAgICAgJHkgPSAoaW50KWRhdGUoJ1knLCRhVGltZSk7ICRtID0gKGludClkYXRlKCdtJywkYVRpbWUpOyAkZCA9IChpbnQpZGF0ZSgnZCcsJGFUaW1lKTsKICAgICAgICAkaCA9IChpbnQpZGF0ZSgnSCcsJGFUaW1lKTsgJGkgPSAoaW50KWRhdGUoJ2knLCRhVGltZSk7ICRzID0gKGludClkYXRlKCdzJywkYVRpbWUpOwogICAgICAgIGlmKCAkYUhvdXJUeXBlICE9PSBmYWxzZSApIHsKICAgICAgICAgICAgJGFIb3VyVHlwZSAlPSA2OwogICAgICAgICAgICAkaG91ckFkaiA9IGFycmF5KDA9PjEsIDE9PjIsIDI9PjMsIDM9PjQsIDQ9PjYsIDU9PjEyKTsKICAgICAgICAgICAgaWYoICRhUm91bmQgPT0gMCApCiAgICAgICAgICAgICRoID0gZmxvb3IoJGgvJGhvdXJBZGpbJGFIb3VyVHlwZV0pKiRob3VyQWRqWyRhSG91clR5cGVdOwogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIGlmKCAoJGggJSAkaG91ckFkalskYUhvdXJUeXBlXT09MCkgJiYgKCRpID4gMCB8fCAkcyA+IDApICkgewogICAgICAgICAgICAgICAgICAgICRoKys7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAkaCA9IGNlaWwoJGgvJGhvdXJBZGpbJGFIb3VyVHlwZV0pKiRob3VyQWRqWyRhSG91clR5cGVdOwogICAgICAgICAgICAgICAgaWYoICRoID49IDI0ICkgewogICAgICAgICAgICAgICAgICAgICRhVGltZSArPSA4NjQwMDsKICAgICAgICAgICAgICAgICAgICAkeSA9IChpbnQpZGF0ZSgnWScsJGFUaW1lKTsgJG0gPSAoaW50KWRhdGUoJ20nLCRhVGltZSk7ICRkID0gKGludClkYXRlKCdkJywkYVRpbWUpOwogICAgICAgICAgICAgICAgICAgICRoIC09IDI0OwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgICRpPTA7JHM9MDsKICAgICAgICB9CiAgICAgICAgZWxzZWlmKCAkYU1pblR5cGUgIT09IGZhbHNlICkgewogICAgICAgICAgICAkYU1pblR5cGUgJT0gNTsKICAgICAgICAgICAgJG1pbkFkaiA9IGFycmF5KDA9PjEsIDE9PjUsIDI9PjEwLCAzPT4xNSwgND0+MzApOwogICAgICAgICAgICBpZiggJGFSb3VuZCA9PSAwICkgewogICAgICAgICAgICAgICAgJGkgPSBmbG9vcigkaS8kbWluQWRqWyRhTWluVHlwZV0pKiRtaW5BZGpbJGFNaW5UeXBlXTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIGlmKCAoJGkgJSAkbWluQWRqWyRhTWluVHlwZV09PTApICYmICRzID4gMCApIHsKICAgICAgICAgICAgICAgICAgICAkaSsrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgJGkgPSBjZWlsKCRpLyRtaW5BZGpbJGFNaW5UeXBlXSkqJG1pbkFkalskYU1pblR5cGVdOwogICAgICAgICAgICAgICAgaWYoICRpID49IDYwKSB7CiAgICAgICAgICAgICAgICAgICAgJGFUaW1lICs9IDM2MDA7CiAgICAgICAgICAgICAgICAgICAgJHkgPSAoaW50KWRhdGUoJ1knLCRhVGltZSk7ICRtID0gKGludClkYXRlKCdtJywkYVRpbWUpOyAkZCA9IChpbnQpZGF0ZSgnZCcsJGFUaW1lKTsKICAgICAgICAgICAgICAgICAgICAkaCA9IChpbnQpZGF0ZSgnSCcsJGFUaW1lKTsgJGkgPSAwOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgICRzPTA7CiAgICAgICAgfQogICAgICAgIGVsc2VpZiggJGFTZWNUeXBlICE9PSBmYWxzZSApIHsKICAgICAgICAgICAgJGFTZWNUeXBlICU9IDU7CiAgICAgICAgICAgICRzZWNBZGogPSBhcnJheSgwPT4xLCAxPT41LCAyPT4xMCwgMz0+MTUsIDQ9PjMwKTsKICAgICAgICAgICAgaWYoICRhUm91bmQgPT0gMCApIHsKICAgICAgICAgICAgICAgICRzID0gZmxvb3IoJHMvJHNlY0FkalskYVNlY1R5cGVdKSokc2VjQWRqWyRhU2VjVHlwZV07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAkcyA9IGNlaWwoJHMvJHNlY0FkalskYVNlY1R5cGVdKjEuMCkqJHNlY0FkalskYVNlY1R5cGVdOwogICAgICAgICAgICAgICAgaWYoICRzID49IDYwKSB7CiAgICAgICAgICAgICAgICAgICAgJHM9MDsKICAgICAgICAgICAgICAgICAgICAkYVRpbWUgKz0gNjA7CiAgICAgICAgICAgICAgICAgICAgJHkgPSAoaW50KWRhdGUoJ1knLCRhVGltZSk7ICRtID0gKGludClkYXRlKCdtJywkYVRpbWUpOyAkZCA9IChpbnQpZGF0ZSgnZCcsJGFUaW1lKTsKICAgICAgICAgICAgICAgICAgICAkaCA9IChpbnQpZGF0ZSgnSCcsJGFUaW1lKTsgJGkgPSAoaW50KWRhdGUoJ2knLCRhVGltZSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIG1rdGltZSgkaCwkaSwkcywkbSwkZCwkeSk7CiAgICB9CgogICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIC8vIFdyYXBwZXIgZm9yIEFkalRpbWUgdGhhdCB3aWxsIHJvdW5kIGEgdGltZXN0YW1wIHRvIGFuIGV2ZW4gdGltZSByb3VuZGluZwogICAgLy8gaXQgZG93bndhcmRzLgogICAgLy8gRXhhbXBsZTogQWRqU3RhcnRUaW1lKG1rdGltZSgxOCwyNywxMywyLDIyLDIwMDUpLGZhbHNlLDIpID0+IDE4OjIwCiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgZnVuY3Rpb24gQWRqU3RhcnRUaW1lKCRhVGltZSwkYUhvdXJUeXBlPWZhbHNlLCRhTWluVHlwZT1mYWxzZSwkYVNlY1R5cGU9ZmFsc2UpIHsKICAgICAgICByZXR1cm4gJHRoaXMtPkFkalRpbWUoJGFUaW1lLDAsJGFIb3VyVHlwZSwkYU1pblR5cGUsJGFTZWNUeXBlKTsKICAgIH0KCiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgLy8gV3JhcHBlciBmb3IgQWRqVGltZSB0aGF0IHdpbGwgcm91bmQgYSB0aW1lc3RhbXAgdG8gYW4gZXZlbiB0aW1lIHJvdW5kaW5nCiAgICAvLyBpdCB1cHdhcmRzCiAgICAvLyBFeGFtcGxlOiBBZGpFbmRUaW1lKG1rdGltZSgxOCwyNywxMywyLDIyLDIwMDUpLGZhbHNlLDIpID0+IDE4OjMwCiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgZnVuY3Rpb24gQWRqRW5kVGltZSgkYVRpbWUsJGFIb3VyVHlwZT1mYWxzZSwkYU1pblR5cGU9ZmFsc2UsJGFTZWNUeXBlPWZhbHNlKSB7CiAgICAgICAgcmV0dXJuICR0aGlzLT5BZGpUaW1lKCRhVGltZSwxLCRhSG91clR5cGUsJGFNaW5UeXBlLCRhU2VjVHlwZSk7CiAgICB9CgogICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIC8vIERhdGVBdXRvU2NhbGUKICAgIC8vIEF1dG9zY2FsZSBhIGRhdGUgYXhpcyBnaXZlbiBzdGFydCBhbmQgZW5kIHRpbWUKICAgIC8vIFJldHVybnMgYW4gYXJyYXkgKCRzdGFydCwkZW5kLCRtYWpvciwkbWlub3IsJGZvcm1hdCkKICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBmdW5jdGlvbiBEb0RhdGVBdXRvU2NhbGUoJGFTdGFydFRpbWUsJGFFbmRUaW1lLCRhRGVuc2l0eT0wLCRhQWRqdXN0PXRydWUpIHsKICAgICAgICAvLyBGb3JtYXQgb2YgYXJyYXkKICAgICAgICAvLyBhcnJheSAoIERlY2lzaW9uIHBvaW50LCAgYXJyYXkoIGFycmF5KCBNYWpvci1zY2FsZS1zdGVwLWFycmF5ICksCiAgICAgICAgLy8gICAgICAgYXJyYXkoIE1pbm9yLXNjYWxlLXN0ZXAtYXJyYXkgKSwKICAgICAgICAvLyAgICAgICBhcnJheSggMD1kYXRlLWFkanVzdCwgMT10aW1lLWFkanVzdCwgYWRqdXN0bWVudC1hbGlnbm1lbnQpICkKICAgICAgICAvLwogICAgICAgICRzY2FsZVBvaW50cyA9CiAgICAgICAgYXJyYXkoCiAgICAgICAgLyogSW50ZXJ2YWxsIGxhcmdlciB0aGFuIDEwIHllYXJzICovCiAgICAgICAgU0VDUEVSWUVBUioxMCxhcnJheShhcnJheShTRUNQRVJZRUFSKjUsU0VDUEVSWUVBUioyKSwKICAgICAgICBhcnJheShTRUNQRVJZRUFSKSwKICAgICAgICBhcnJheSgwLFlFQVJBREpfMSwgMCxZRUFSQURKXzEpICksCgogICAgICAgIC8qIEludGVydmFsbCBsYXJnZXIgdGhhbiAyIHllYXJzICovCiAgICAgICAgU0VDUEVSWUVBUioyLGFycmF5KGFycmF5KFNFQ1BFUllFQVIpLGFycmF5KFNFQ1BFUllFQVIpLAogICAgICAgIGFycmF5KDAsWUVBUkFESl8xKSApLAoKICAgICAgICAvKiBJbnRlcnZhbGwgbGFyZ2VyIHRoYW4gOTAgZGF5cyAoYXBwcm94IDMgbW9udGgpICovCiAgICAgICAgU0VDUEVSREFZKjkwLGFycmF5KGFycmF5KFNFQ1BFUkRBWSozMCxTRUNQRVJEQVkqMTQsU0VDUEVSREFZKjcsU0VDUEVSREFZKSwKICAgICAgICBhcnJheShTRUNQRVJEQVkqNSxTRUNQRVJEQVkqNyxTRUNQRVJEQVksU0VDUEVSREFZKSwKICAgICAgICBhcnJheSgwLE1PTlRIQURKXzEsIDAsREFZQURKX1dFRUssIDAsREFZQURKXzEsIDAsREFZQURKXzEpKSwKCiAgICAgICAgLyogSW50ZXJ2YWxsIGxhcmdlciB0aGFuIDMwIGRheXMgKGFwcHJveCAxIG1vbnRoKSAqLwogICAgICAgIFNFQ1BFUkRBWSozMCxhcnJheShhcnJheShTRUNQRVJEQVkqMTQsU0VDUEVSREFZKjcsU0VDUEVSREFZKjIsIFNFQ1BFUkRBWSksCiAgICAgICAgYXJyYXkoU0VDUEVSREFZLFNFQ1BFUkRBWSxTRUNQRVJEQVksU0VDUEVSREFZKSwKICAgICAgICBhcnJheSgwLERBWUFESl9XRUVLLCAwLERBWUFESl8xLCAwLERBWUFESl8xLCAwLERBWUFESl8xKSksCgogICAgICAgIC8qIEludGVydmFsbCBsYXJnZXIgdGhhbiA3IGRheXMgKi8KICAgICAgICBTRUNQRVJEQVkqNyxhcnJheShhcnJheShTRUNQRVJEQVksU0VDUEVSSE9VUioxMixTRUNQRVJIT1VSKjYsU0VDUEVSSE9VUioyKSwKICAgICAgICBhcnJheShTRUNQRVJIT1VSKjYsU0VDUEVSSE9VUiozLFNFQ1BFUkhPVVIsU0VDUEVSSE9VUiksCiAgICAgICAgYXJyYXkoMCxEQVlBREpfMSwgMSxIT1VSQURKXzEyLCAxLEhPVVJBREpfNiwgMSxIT1VSQURKXzEpKSwKCiAgICAgICAgLyogSW50ZXJ2YWxsIGxhcmdlciB0aGFuIDEgZGF5ICovCiAgICAgICAgU0VDUEVSREFZLGFycmF5KGFycmF5KFNFQ1BFUkRBWSxTRUNQRVJIT1VSKjEyLFNFQ1BFUkhPVVIqNixTRUNQRVJIT1VSKjIsU0VDUEVSSE9VUiksCiAgICAgICAgYXJyYXkoU0VDUEVSSE9VUio2LFNFQ1BFUkhPVVIqMixTRUNQRVJIT1VSLFNFQ1BFUkhPVVIsU0VDUEVSSE9VUiksCiAgICAgICAgYXJyYXkoMSxIT1VSQURKXzEyLCAxLEhPVVJBREpfNiwgMSxIT1VSQURKXzEsIDEsSE9VUkFESl8xKSksCgogICAgICAgIC8qIEludGVydmFsbCBsYXJnZXIgdGhhbiAxMiBob3VycyAqLwogICAgICAgIFNFQ1BFUkhPVVIqMTIsYXJyYXkoYXJyYXkoU0VDUEVSSE9VUioyLFNFQ1BFUkhPVVIsU0VDUEVSTUlOKjMwLDkwMCw2MDApLAogICAgICAgIGFycmF5KDE4MDAsMTgwMCw5MDAsMzAwLDMwMCksCiAgICAgICAgYXJyYXkoMSxIT1VSQURKXzEsIDEsTUlOQURKXzMwLCAxLE1JTkFESl8xNSwgMSxNSU5BREpfMTAsIDEsTUlOQURKXzUpICksCgogICAgICAgIC8qIEludGVydmFsbCBsYXJnZXIgdGhhbiAyIGhvdXJzICovCiAgICAgICAgU0VDUEVSSE9VUioyLGFycmF5KGFycmF5KFNFQ1BFUkhPVVIsU0VDUEVSTUlOKjMwLDkwMCw2MDAsMzAwKSwKICAgICAgICBhcnJheSgxODAwLDkwMCwzMDAsMTIwLDYwKSwKICAgICAgICBhcnJheSgxLEhPVVJBREpfMSwgMSxNSU5BREpfMzAsIDEsTUlOQURKXzE1LCAxLE1JTkFESl8xMCwgMSxNSU5BREpfNSkgKSwKCiAgICAgICAgLyogSW50ZXJ2YWxsIGxhcmdlciB0aGFuIDEgaG91cnMgKi8KICAgICAgICBTRUNQRVJIT1VSLGFycmF5KGFycmF5KFNFQ1BFUk1JTiozMCw5MDAsNjAwLDMwMCksYXJyYXkoOTAwLDMwMCwxMjAsNjApLAogICAgICAgIGFycmF5KDEsTUlOQURKXzMwLCAxLE1JTkFESl8xNSwgMSxNSU5BREpfMTAsIDEsTUlOQURKXzUpICksCgogICAgICAgIC8qIEludGVydmFsbCBsYXJnZXIgdGhhbiAzMCBtaW4gKi8KICAgICAgICBTRUNQRVJNSU4qMzAsYXJyYXkoYXJyYXkoU0VDUEVSTUlOKjE1LFNFQ1BFUk1JTioxMCxTRUNQRVJNSU4qNSxTRUNQRVJNSU4pLAogICAgICAgIGFycmF5KDMwMCwzMDAsNjAsMTApLAogICAgICAgIGFycmF5KDEsTUlOQURKXzE1LCAxLE1JTkFESl8xMCwgMSxNSU5BREpfNSwgMSxNSU5BREpfMSkpLAoKICAgICAgICAvKiBJbnRlcnZhbGwgbGFyZ2VyIHRoYW4gMSBtaW4gKi8KICAgICAgICBTRUNQRVJNSU4sYXJyYXkoYXJyYXkoU0VDUEVSTUlOLDE1LDEwLDUpLAogICAgICAgIGFycmF5KDE1LDUsMiwxKSwKICAgICAgICBhcnJheSgxLE1JTkFESl8xLCAxLFNFQ0FESl8xNSwgMSxTRUNBREpfMTAsIDEsU0VDQURKXzUpKSwKCiAgICAgICAgLyogSW50ZXJ2YWxsIGxhcmdlciB0aGFuIDEwIHNlYyAqLwogICAgICAgIDEwLGFycmF5KGFycmF5KDUsMiksCiAgICAgICAgYXJyYXkoMSwxKSwKICAgICAgICBhcnJheSgxLFNFQ0FESl81LCAxLFNFQ0FESl8xKSksCgogICAgICAgIC8qIEludGVydmFsbCBsYXJnZXIgdGhhbiAxIHNlYyAqLwogICAgICAgIDEsYXJyYXkoYXJyYXkoMSksCiAgICAgICAgYXJyYXkoMSksCiAgICAgICAgYXJyYXkoMSxTRUNBREpfMSkpLAogICAgICAgICk7CgogICAgICAgICRucyA9IGNvdW50KCRzY2FsZVBvaW50cyk7CiAgICAgICAgLy8gRXN0YWJsaXNoIG1ham9yIGFuZCBtaW5vciBzY2FsZSB1bml0cyBmb3IgdGhlIGRhdGUgc2NhbGUKICAgICAgICAkZGlmZiA9ICRhRW5kVGltZSAtICRhU3RhcnRUaW1lOwogICAgICAgIGlmKCAkZGlmZiA8IDEgKSByZXR1cm4gZmFsc2U7CiAgICAgICAgJGRvbmU9ZmFsc2U7CiAgICAgICAgJGk9MDsKICAgICAgICB3aGlsZSggISAkZG9uZSApIHsKICAgICAgICAgICAgaWYoICRkaWZmID4gJHNjYWxlUG9pbnRzWzIqJGldICkgewogICAgICAgICAgICAgICAgLy8gR2V0IG1ham9yIGFuZCBtaW5vciBzY2FsZSBmb3IgdGhpcyBpbnRlcnZhbGwKICAgICAgICAgICAgICAgICRzY2FsZVN0ZXBzID0gJHNjYWxlUG9pbnRzWzIqJGkrMV07CiAgICAgICAgICAgICAgICAkbWFqb3IgPSAkc2NhbGVTdGVwc1swXVttaW4oJGFEZW5zaXR5LGNvdW50KCRzY2FsZVN0ZXBzWzBdKS0xKV07CiAgICAgICAgICAgICAgICAvLyBUcnkgdG8gZmluZCBvdXQgd2hpY2ggbWlub3Igc3RlcCBsb29rcyBiZXN0CiAgICAgICAgICAgICAgICAkbWlub3IgPSAkc2NhbGVTdGVwc1sxXVttaW4oJGFEZW5zaXR5LGNvdW50KCRzY2FsZVN0ZXBzWzFdKS0xKV07CiAgICAgICAgICAgICAgICBpZiggJGFBZGp1c3QgKSB7CiAgICAgICAgICAgICAgICAgICAgLy8gRmluZCBvdXQgaG93IHdlIHNob3VsZCBhbGlnbiB0aGUgc3RhcnQgYW5kIGVuZCB0aW1lc3RhbXBzCiAgICAgICAgICAgICAgICAgICAgJGlkeCA9IDIqbWluKCRhRGVuc2l0eSxmbG9vcihjb3VudCgkc2NhbGVTdGVwc1syXSkvMiktMSk7CiAgICAgICAgICAgICAgICAgICAgaWYoICRzY2FsZVN0ZXBzWzJdWyRpZHhdID09PSAwICkgewogICAgICAgICAgICAgICAgICAgICAgICAvLyBVc2UgZGF0ZSBhZGp1c3RtZW50CiAgICAgICAgICAgICAgICAgICAgICAgICRhZGogPSAkc2NhbGVTdGVwc1syXVskaWR4KzFdOwogICAgICAgICAgICAgICAgICAgICAgICBpZiggJGFkaiA+PSAzMCApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzdGFydCA9ICR0aGlzLT5BZGpTdGFydERhdGUoJGFTdGFydFRpbWUsJGFkai0zMCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZW5kICAgPSAkdGhpcy0+QWRqRW5kRGF0ZSgkYUVuZFRpbWUsJGFkai0zMCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZWlmKCAkYWRqID49IDIwICkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHN0YXJ0ID0gJHRoaXMtPkFkalN0YXJ0RGF0ZSgkYVN0YXJ0VGltZSxmYWxzZSwkYWRqLTIwKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRlbmQgICA9ICR0aGlzLT5BZGpFbmREYXRlKCRhRW5kVGltZSxmYWxzZSwkYWRqLTIwKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzdGFydCA9ICR0aGlzLT5BZGpTdGFydERhdGUoJGFTdGFydFRpbWUsZmFsc2UsZmFsc2UsJGFkaik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZW5kICAgPSAkdGhpcy0+QWRqRW5kRGF0ZSgkYUVuZFRpbWUsZmFsc2UsZmFsc2UsJGFkaik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBXZSBhZGQgMSBzZWNvbmQgZm9yIGRhdGUgYWRqdXN0bWVudCB0byBtYWtlIHN1cmUgd2UgZW5kIG9uIDAwOjAwIHRoZSBmb2xsb3dpbmcgZGF5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBUaGlzIG1ha2VzIHRoZSBmaW5hbCBtYWpvciB0aWNrIGJlIHNyYXduIHdoZW4gd2Ugc3RlcCBkYXktYnktZGF5IGluc3RlYWQgb2YgZW5kaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBvbiB4eDo1OTo1OSB3aGljaCB3b3VsZCBub3QgZHJhdyB0aGUgZmluYWwgbWFqb3IgdGljawogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGVuZCsrOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAvLyBVc2UgdGltZSBhZGp1c3RtZW50CiAgICAgICAgICAgICAgICAgICAgICAgICRhZGogPSAkc2NhbGVTdGVwc1syXVskaWR4KzFdOwogICAgICAgICAgICAgICAgICAgICAgICBpZiggJGFkaiA+PSAzMCApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzdGFydCA9ICR0aGlzLT5BZGpTdGFydFRpbWUoJGFTdGFydFRpbWUsJGFkai0zMCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZW5kICAgPSAkdGhpcy0+QWRqRW5kVGltZSgkYUVuZFRpbWUsJGFkai0zMCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZWlmKCAkYWRqID49IDIwICkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHN0YXJ0ID0gJHRoaXMtPkFkalN0YXJ0VGltZSgkYVN0YXJ0VGltZSxmYWxzZSwkYWRqLTIwKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRlbmQgICA9ICR0aGlzLT5BZGpFbmRUaW1lKCRhRW5kVGltZSxmYWxzZSwkYWRqLTIwKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzdGFydCA9ICR0aGlzLT5BZGpTdGFydFRpbWUoJGFTdGFydFRpbWUsZmFsc2UsZmFsc2UsJGFkaik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZW5kICAgPSAkdGhpcy0+QWRqRW5kVGltZSgkYUVuZFRpbWUsZmFsc2UsZmFsc2UsJGFkaik7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgb3ZlcmFsbCBkYXRlIHNwYW4gaXMgbGFyZ2VyIHRoYW4gMSBkYXkgdGVuIHdlIHNob3cgZGF0ZQogICAgICAgICAgICAgICAgJGZvcm1hdCA9ICcnOwogICAgICAgICAgICAgICAgaWYoICgkZW5kLSRzdGFydCkgPiBTRUNQRVJEQVkgKSB7CiAgICAgICAgICAgICAgICAgICAgJGZvcm1hdCA9ICdZLW0tZCAnOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgLy8gSWYgdGhlIG1ham9yIHN0ZXAgaXMgbGVzcyB0aGFuIDEgZGF5IHdlIG5lZWQgdG8gd2hvdyBob3VycyArIG1pbgogICAgICAgICAgICAgICAgaWYoICRtYWpvciA8IFNFQ1BFUkRBWSApIHsKICAgICAgICAgICAgICAgICAgICAkZm9ybWF0IC49ICdIOmknOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgLy8gSWYgdGhlIG1ham9yIHN0ZXAgaXMgbGVzcyB0aGFuIDEgbWluIHdlIG5lZWQgdG8gc2hvdyBzZWMKICAgICAgICAgICAgICAgIGlmKCAkbWFqb3IgPCA2MCApIHsKICAgICAgICAgICAgICAgICAgICAkZm9ybWF0IC49ICc6cyc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAkZG9uZT10cnVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgICsrJGk7CiAgICAgICAgfQogICAgICAgIHJldHVybiBhcnJheSgkc3RhcnQsJGVuZCwkbWFqb3IsJG1pbm9yLCRmb3JtYXQpOwogICAgfQoKICAgIC8vIE92ZXJyaWRlcyB0aGUgYXV0b21hdGljIGRldGVybWluZWQgZGF0ZSBmb3JtYXQuIE11c3QgYmUgYSB2YWxpZCBkYXRlKCkgZm9ybWF0IHN0cmluZwogICAgZnVuY3Rpb24gU2V0RGF0ZUZvcm1hdCgkYUZvcm1hdCkgewogICAgICAgICR0aGlzLT5kYXRlX2Zvcm1hdCA9ICRhRm9ybWF0OwogICAgICAgICR0aGlzLT50aWNrcy0+U2V0TGFiZWxEYXRlRm9ybWF0KCR0aGlzLT5kYXRlX2Zvcm1hdCk7CiAgICB9CgogICAgZnVuY3Rpb24gQWRqdXN0Rm9yRFNUKCRhRmxnPXRydWUpIHsKICAgICAgICAkdGhpcy0+dGlja3MtPkFkanVzdEZvckRTVCgkYUZsZyk7CiAgICB9CgoKICAgIGZ1bmN0aW9uIFNldERhdGVBbGlnbigkYVN0YXJ0QWxpZ24sJGFFbmRBbGlnbj1mYWxzZSkgewogICAgICAgIGlmKCAkYUVuZEFsaWduID09PSBmYWxzZSApIHsKICAgICAgICAgICAgJGFFbmRBbGlnbj0kYVN0YXJ0QWxpZ247CiAgICAgICAgfQogICAgICAgICR0aGlzLT5pU3RhcnRBbGlnbiA9ICRhU3RhcnRBbGlnbjsKICAgICAgICAkdGhpcy0+aUVuZEFsaWduID0gJGFFbmRBbGlnbjsKICAgIH0KCiAgICBmdW5jdGlvbiBTZXRUaW1lQWxpZ24oJGFTdGFydEFsaWduLCRhRW5kQWxpZ249ZmFsc2UpIHsKICAgICAgICBpZiggJGFFbmRBbGlnbiA9PT0gZmFsc2UgKSB7CiAgICAgICAgICAgICRhRW5kQWxpZ249JGFTdGFydEFsaWduOwogICAgICAgIH0KICAgICAgICAkdGhpcy0+aVN0YXJ0VGltZUFsaWduID0gJGFTdGFydEFsaWduOwogICAgICAgICR0aGlzLT5pRW5kVGltZUFsaWduID0gJGFFbmRBbGlnbjsKICAgIH0KCgogICAgZnVuY3Rpb24gQXV0b1NjYWxlKCRpbWcsJGFTdGFydFRpbWUsJGFFbmRUaW1lLCRhTnVtU3RlcHMsJF9hZHVtbXk9ZmFsc2UpIHsKICAgICAgICAvLyBXZSBuZWVkIHRvIGhhdmUgb25lIGR1bW15IGFyZ3VtZW50IHRvIG1ha2UgdGhlIHNpZ25hdHVyZSBvZiBBdXRvU2NhbGUoKQogICAgICAgIC8vIGlkZW50aWNhbCB0byBMaW5lYXJTY2FsZTo6QXV0b1NjYWxlCiAgICAgICAgaWYoICRhU3RhcnRUaW1lID09ICRhRW5kVGltZSApIHsKICAgICAgICAgICAgLy8gU3BlY2lhbCBjYXNlIHdoZW4gd2Ugb25seSBoYXZlIG9uZSBkYXRhIHBvaW50LgogICAgICAgICAgICAvLyBDcmVhdGUgYSBzbWFsbCBhcnRpZmljYWwgaW50ZXJ2YWxsIHRvIGRvIHRoZSBhdXRvc2NhbGluZwogICAgICAgICAgICAkYVN0YXJ0VGltZSAtPSAxMDsKICAgICAgICAgICAgJGFFbmRUaW1lICs9IDEwOwogICAgICAgIH0KICAgICAgICAkZG9uZT1mYWxzZTsKICAgICAgICAkaT0wOwogICAgICAgIHdoaWxlKCAhICRkb25lICYmICRpIDwgNSkgewogICAgICAgICAgICBsaXN0KCRhZGpzdGFydCwkYWRqZW5kLCRtYWosJG1pbiwkZm9ybWF0KSA9ICR0aGlzLT5Eb0RhdGVBdXRvU2NhbGUoJGFTdGFydFRpbWUsJGFFbmRUaW1lLCRpKTsKICAgICAgICAgICAgJG4gPSBmbG9vcigoJGFkamVuZC0kYWRqc3RhcnQpLyRtYWopOwogICAgICAgICAgICBpZiggJG4gKiAxLjcgPiAkYU51bVN0ZXBzICkgewogICAgICAgICAgICAgICAgJGRvbmU9dHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAkaSsrOwogICAgICAgIH0KCiAgICAgICAgLyoKICAgICAgICAgaWYoIDAgKSB7IC8vIERFQlVHCiAgICAgICAgIGVjaG8gIiAgICBTdGFydCA9Ii5kYXRlKCJZLW0tZCBIOmk6cyIsJGFTdGFydFRpbWUpLiI8YnI+IjsKICAgICAgICAgZWNobyAiICAgIEVuZCAgID0iLmRhdGUoIlktbS1kIEg6aTpzIiwkYUVuZFRpbWUpLiI8YnI+IjsKICAgICAgICAgZWNobyAiQWRqIFN0YXJ0ID0iLmRhdGUoIlktbS1kIEg6aTpzIiwkYWRqc3RhcnQpLiI8YnI+IjsKICAgICAgICAgZWNobyAiQWRqIEVuZCAgID0iLmRhdGUoIlktbS1kIEg6aTpzIiwkYWRqZW5kKS4iPHA+IjsKICAgICAgICAgZWNobyAiTWFqb3IgPSAkbWFqIHMsICIuZmxvb3IoJG1hai82MCkuIm1pbiwgIi5mbG9vcigkbWFqLzM2MDApLiJoLCAiLmZsb29yKCRtYWovODY0MDApLiJkYXk8YnI+IjsKICAgICAgICAgZWNobyAiTWluID0gJG1pbiBzLCAiLmZsb29yKCRtaW4vNjApLiJtaW4sICIuZmxvb3IoJG1pbi8zNjAwKS4iaCwgIi5mbG9vcigkbWluLzg2NDAwKS4iZGF5PGJyPiI7CiAgICAgICAgIGVjaG8gIkZvcm1hdD0kZm9ybWF0PHA+IjsKICAgICAgICAgfQogICAgICAgICAqLwoKICAgICAgICBpZiggJHRoaXMtPmlTdGFydFRpbWVBbGlnbiAhPT0gZmFsc2UgJiYgJHRoaXMtPmlTdGFydEFsaWduICE9PSBmYWxzZSApIHsKICAgICAgICAgICAgSnBHcmFwaEVycm9yOjpSYWlzZUwoMzAwMSk7CiAgICAgICAgICAgIC8vKCdJdCBpcyBvbmx5IHBvc3NpYmxlIHRvIHVzZSBlaXRoZXIgU2V0RGF0ZUFsaWduKCkgb3IgU2V0VGltZUFsaWduKCkgYnV0IG5vdCBib3RoJyk7CiAgICAgICAgfQoKICAgICAgICBpZiggJHRoaXMtPmlTdGFydFRpbWVBbGlnbiAhPT0gZmFsc2UgKSB7CiAgICAgICAgICAgIGlmKCAkdGhpcy0+aVN0YXJ0VGltZUFsaWduID49IDMwICkgewogICAgICAgICAgICAgICAgJGFkanN0YXJ0ID0gJHRoaXMtPkFkalN0YXJ0VGltZSgkYVN0YXJ0VGltZSwkdGhpcy0+aVN0YXJ0VGltZUFsaWduLTMwKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlaWYoICAkdGhpcy0+aVN0YXJ0VGltZUFsaWduID49IDIwICkgewogICAgICAgICAgICAgICAgJGFkanN0YXJ0ID0gJHRoaXMtPkFkalN0YXJ0VGltZSgkYVN0YXJ0VGltZSxmYWxzZSwkdGhpcy0+aVN0YXJ0VGltZUFsaWduLTIwKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICRhZGpzdGFydCA9ICR0aGlzLT5BZGpTdGFydFRpbWUoJGFTdGFydFRpbWUsZmFsc2UsZmFsc2UsJHRoaXMtPmlTdGFydFRpbWVBbGlnbik7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYoICR0aGlzLT5pRW5kVGltZUFsaWduICE9PSBmYWxzZSApIHsKICAgICAgICAgICAgaWYoICR0aGlzLT5pRW5kVGltZUFsaWduID49IDMwICkgewogICAgICAgICAgICAgICAgJGFkamVuZCA9ICR0aGlzLT5BZGpFbmRUaW1lKCRhRW5kVGltZSwkdGhpcy0+aUVuZFRpbWVBbGlnbi0zMCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZWlmKCAgJHRoaXMtPmlFbmRUaW1lQWxpZ24gPj0gMjAgKSB7CiAgICAgICAgICAgICAgICAkYWRqZW5kID0gJHRoaXMtPkFkakVuZFRpbWUoJGFFbmRUaW1lLGZhbHNlLCR0aGlzLT5pRW5kVGltZUFsaWduLTIwKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICRhZGplbmQgPSAkdGhpcy0+QWRqRW5kVGltZSgkYUVuZFRpbWUsZmFsc2UsZmFsc2UsJHRoaXMtPmlFbmRUaW1lQWxpZ24pOwogICAgICAgICAgICB9CiAgICAgICAgfQoKCgogICAgICAgIGlmKCAkdGhpcy0+aVN0YXJ0QWxpZ24gIT09IGZhbHNlICkgewogICAgICAgICAgICBpZiggJHRoaXMtPmlTdGFydEFsaWduID49IDMwICkgewogICAgICAgICAgICAgICAgJGFkanN0YXJ0ID0gJHRoaXMtPkFkalN0YXJ0RGF0ZSgkYVN0YXJ0VGltZSwkdGhpcy0+aVN0YXJ0QWxpZ24tMzApOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2VpZiggICR0aGlzLT5pU3RhcnRBbGlnbiA+PSAyMCApIHsKICAgICAgICAgICAgICAgICRhZGpzdGFydCA9ICR0aGlzLT5BZGpTdGFydERhdGUoJGFTdGFydFRpbWUsZmFsc2UsJHRoaXMtPmlTdGFydEFsaWduLTIwKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICRhZGpzdGFydCA9ICR0aGlzLT5BZGpTdGFydERhdGUoJGFTdGFydFRpbWUsZmFsc2UsZmFsc2UsJHRoaXMtPmlTdGFydEFsaWduKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiggJHRoaXMtPmlFbmRBbGlnbiAhPT0gZmFsc2UgKSB7CiAgICAgICAgICAgIGlmKCAkdGhpcy0+aUVuZEFsaWduID49IDMwICkgewogICAgICAgICAgICAgICAgJGFkamVuZCA9ICR0aGlzLT5BZGpFbmREYXRlKCRhRW5kVGltZSwkdGhpcy0+aUVuZEFsaWduLTMwKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlaWYoICAkdGhpcy0+aUVuZEFsaWduID49IDIwICkgewogICAgICAgICAgICAgICAgJGFkamVuZCA9ICR0aGlzLT5BZGpFbmREYXRlKCRhRW5kVGltZSxmYWxzZSwkdGhpcy0+aUVuZEFsaWduLTIwKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICRhZGplbmQgPSAkdGhpcy0+QWRqRW5kRGF0ZSgkYUVuZFRpbWUsZmFsc2UsZmFsc2UsJHRoaXMtPmlFbmRBbGlnbik7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgJHRoaXMtPlVwZGF0ZSgkaW1nLCRhZGpzdGFydCwkYWRqZW5kKTsKICAgICAgICBpZiggISAkdGhpcy0+dGlja3MtPklzU3BlY2lmaWVkKCkgKQogICAgICAgICR0aGlzLT50aWNrcy0+U2V0KCRtYWosJG1pbik7CiAgICAgICAgaWYoICR0aGlzLT5kYXRlX2Zvcm1hdCA9PSAnJyApCiAgICAgICAgJHRoaXMtPnRpY2tzLT5TZXRMYWJlbERhdGVGb3JtYXQoJGZvcm1hdCk7CiAgICAgICAgZWxzZQogICAgICAgICR0aGlzLT50aWNrcy0+U2V0TGFiZWxEYXRlRm9ybWF0KCR0aGlzLT5kYXRlX2Zvcm1hdCk7CiAgICB9Cn0KCgo\/Pgo=",
    "size": "20090"
}