{
    "namaFile": "pages\/perencanaanKeuangan\/anggaranKas\/anggaranKasSKPD1PAD.php",
    "lastUpdate": "2018-08-23+11:11:35.43",
    "contentFile": "PD9waHAKCmNsYXNzIGFuZ2dhcmFuS2FzU0tQRDFQQURPYmogIGV4dGVuZHMgY29uZmlnQ2xhc3N7Cgl2YXIgJFByZWZpeCA9ICdhbmdnYXJhbkthc1NLUEQxUEFEJzsKCXZhciAkZWxDdXJyUGFnZT0iSGFsRGVmYXVsdCI7Cgl2YXIgJFNIT1dfQ0VLID0gVFJVRTsKCXZhciAkVGJsTmFtZSA9ICJ0YWJlbF9kcGEiOyAvL2RhZnRhcgoJdmFyICRUYmxOYW1lX0hhcHVzID0gJ3RhYmVsX2FuZ2dhcmFuJzsKCXZhciAkTWF4Rmx1c2ggPSAxMDsKCXZhciAkVGJsU3R5bGUgPSBhcnJheSggJ2tvcHRhYmxlJywgJ2NldGFrJywnY2V0YWsnKTsgLy9iZXJkYXNhciBtb2RlCgl2YXIgJENvbFN0eWxlID0gYXJyYXkoICdHYXJpc0RhZnRhcicsICdHYXJpc0NldGFrJywnR2FyaXNDZXRhaycpOwoJdmFyICRLZXlGaWVsZHMgPSBhcnJheSgnaWQnKTsKCXZhciAkRmllbGRTdW0gPSBhcnJheSgpOwoJdmFyICRTdW1WYWx1ZSA9IGFycmF5KCk7Cgl2YXIgJEZpZWxkU3VtX0NwMSA9IGFycmF5KCAxNCwgMTMsIDEzKTsKCXZhciAkRmllbGRTdW1fQ3AyID0gYXJyYXkoIDEsIDEsIDEpOwoJdmFyICRjaGVja2JveF9yb3dzcGFuID0gMzsKCXZhciAkUGFnZVRpdGxlID0gJ1BFTkVUQVBBTiBSS0JNRCBQRU5HQURBQU4nOwoJdmFyICRQYWdlSWNvbiA9ICdpbWFnZXMvcGVyZW5jYW5hYW5faWNvLnBuZyc7Cgl2YXIgJHBhZ2VQZXJIYWwgPScnOwoJdmFyICRjZXRha194bHM9VFJVRSA7Cgl2YXIgJGZpbGVOYW1lRXhjZWw9J3VzdWxhbnNrLnhscyc7Cgl2YXIgJENldGFrX0p1ZHVsID0gJ0RhZnRhciBTdGFuZGFyIEtlYnV0dWhhbiBCYXJhbmcgTWFrc2ltYWwnOwoJdmFyICRDZXRha19Nb2RlPTI7Cgl2YXIgJENldGFrX1dJRFRIID0gJzMwY20nOwoJdmFyICRDZXRha19PdGhlckhUTUxIZWFkOwoJdmFyICRGb3JtTmFtZSA9ICdhbmdnYXJhbkthc1NLUEQxUEFERm9ybSc7Cgl2YXIgJGtvZGVfc2twZCA9ICcnOwoJdmFyICRtb2R1bCA9ICJSS0EiOwoJdmFyICRub21vclVydXRUYWhhcCA9ICIiOwoJdmFyICRqZW5pc0FuZ2dhcmFuID0gIiI7Cgl2YXIgJGlkVGFoYXAgPSAiIjsKCXZhciAkdXNlcm5hbWUgPSAiIjsKICB2YXIgJG5vbW9yS29sb20gPSAxOwoJdmFyICRqZW5pc0RQQSA9ICIxIjsKCXZhciAkbm9tb3JDaGVja0JveCA9IDA7Cgl2YXIgJGtvbmRpc2lSZWtlbmluZyA9ICIgYW5kIGs9JzQnIGFuZCBsID0gJzEnIjsKCglmdW5jdGlvbiBzZXRUaXRsZSgpewoJCXJldHVybiAiQU5HR0FSQU4gS0FTLVNLUEQgJHRoaXMtPmplbmlzRFBBIFBFTkRBUEFUQU4gQVNMSSBEQUVSQUgiOwoJfQoJZnVuY3Rpb24gc2V0UGFnZV9IZWFkZXJPdGhlcigpewoJCXJldHVybiAkdGhpcy0+Z2V0UGFnZUhlYWRlcigkX0dFVFsnUGcnXSk7Cgl9CglmdW5jdGlvbiBzZXRQYWdlX0hlYWRlcigkSWNvblBhZ2U9JycsICRUaXRsZVBhZ2U9JycpewoJCXJldHVybiBjcmVhdGVIZWFkZXJQYWdlKCR0aGlzLT5QYWdlSWNvbiwgIkFOR0dBUkFOIEtBUy1TS1BEICR0aGlzLT5qZW5pc0FuZ2dhcmFuICIpOwoJfQoJZnVuY3Rpb24gc2V0TWVudUVkaXQoKXsKCQkJIAkkbGlzdE1lbnUgPQoJCQkJIjx0ZD4iLmdlblBhbmVsSWNvbigiamF2YXNjcmlwdDoiLiR0aGlzLT5QcmVmaXguIi5jaGVja0Fsb2thc2koKSIsImFsb2thc2kuanBnIiwiQWxva2FzaSIsICdBbG9rYXNpJykuIjwvdGQ+IjsKCQkgcmV0dXJuICRsaXN0TWVudTsKCX0KCiAgIAlmdW5jdGlvbiBzZXRNZW51VmlldygpewoJCXJldHVybgoJCQkiPHRkPiIuZ2VuUGFuZWxJY29uKCJqYXZhc2NyaXB0OiIuJHRoaXMtPlByZWZpeC4iLkxhcG9yYW4oKSIsInByaW50X2YyLnBuZyIsJ0xhcG9yYW4nLCJMYXBvcmFuIikuIjwvdGQ+IjsKCX0KCWZ1bmN0aW9uIG51bGxDaGVja2VyKCRhbmdrYSl7CgkJCWlmKGVtcHR5KCRhbmdrYSkpewoJCQkJCSRhbmdrYSA9ICIiOwoJCQl9CgkJCXJldHVybiAkYW5na2E7Cgl9CglmdW5jdGlvbiBzZXRDZXRha19IZWFkZXIoJE1vZGU9JycpewoJCWdsb2JhbCAkTWFpbiwgJEhUVFBfQ09PS0lFX1ZBUlM7CgkJcmV0dXJuCgkJCSI8dGFibGUgc3R5bGU9J3dpZHRoOjEwMCUnIGJvcmRlcj1cIjBcIj4KCQkJPHRyPgoJCQkJPHRkIGNsYXNzPVwianVkdWxjZXRha1wiPiIuJHRoaXMtPnNldENldGFrVGl0bGUoKS4iPC90ZD4KCQkJPC90cj4KCQkJPC90YWJsZT4iOwoJfQoKCWZ1bmN0aW9uIHNldF9zZWxlY3Rvcl9vdGhlcjIoJHRpcGUpewoJIGdsb2JhbCAkTWFpbjsKCSAkY2VrID0gJyc7ICRlcnI9Jyc7ICRjb250ZW50PScnOyAkanNvbj1UUlVFOwoKCSByZXR1cm4JYXJyYXkgKCdjZWsnPT4kY2VrLCAnZXJyJz0+JGVyciwgJ2NvbnRlbnQnPT4kY29udGVudCwgJ2pzb24nPT4kanNvbik7Cgl9CglmdW5jdGlvbiBnZW5lcmF0ZURhdGUoJHRhbmdnYWwpewoJCQkkdGFuZ2dhbCA9IGV4cGxvZGUoIi0iLCR0YW5nZ2FsKTsKCQkJJHRhbmdnYWwgPSAkdGFuZ2dhbFsyXS4iLSIuJHRhbmdnYWxbMV0uIi0iLiR0YW5nZ2FsWzBdOwoJCQlyZXR1cm4gJHRhbmdnYWw7Cgl9CglmdW5jdGlvbiBzZXRfc2VsZWN0b3Jfb3RoZXIoJHRpcGUpewoJIGdsb2JhbCAkTWFpbjsKCSAkY2VrID0gJyc7ICRlcnI9Jyc7ICRjb250ZW50PScnOyAkanNvbj1UUlVFOwoKCSAgc3dpdGNoKCR0aXBlKXsKCQkJY2FzZSAnc2F2ZUFsb2thc2knIDogewoJCSAgZm9yZWFjaCAoJF9SRVFVRVNUIGFzICRrZXkgPT4gJHZhbHVlKSB7CgkJICAgICAgJCRrZXkgPSAkdmFsdWU7CgkJICB9CgkJICAgIGlmKGVtcHR5KCRqZW5pc0Fsb2thc2kpKXsKCQkgICAgICAkZXJyID0gIlBpbGloIGplbmlzIGFsb2thc2kiOwoJCSAgICB9CgkJICAgIGlmKCRqZW5pc0Fsb2thc2kgPT0gJ0JVTEFOQU4nKXsKCQkgICAgICBpZiggJGphbiA9PSAnJyB8fCAkZmViID09ICcnIHx8ICRtYXIgPT0gJycgfHwgJGFwciA9PSAnJyB8fCAkbWVpID09ICcnIHx8ICRqdW4gPT0gJycgfHwgJGp1bCA9PSAnJyB8fCAkYWd1ID09ICcnIHx8ICRzZXAgPT0gJycgfHwgJG9rdCA9PSAnJyB8fCAkbm9wID09ICcnIHx8ICRkZXMgPT0gJycgICApewoJCSAgICAgICAgJGVyciA9ICJMZW5na2FwaSBhbG9rYXNpIjsKCQkgICAgICB9CgkJICAgIH0KCQkgICAgaWYoJGplbmlzQWxva2FzaSA9PSAnVFJJV1VMQU4nICAgKXsKCQkgICAgICBpZiggJG1hciA9PSAnJyB8fCAgJGp1biA9PSAnJyB8fCAgJHNlcCA9PSAnJyB8fCAgJGRlcyA9PSAnJyAgICl7CgkJICAgICAgICAkZXJyID0gIkxlbmdrYXBpIGFsb2thc2kiOwoJCSAgICAgIH0KCQkgICAgfQoJCSAgICBpZigkanVtbGFoSGFyZ2FBbG9rYXNpICE9ICRqdW1sYWhIYXJnYUZvcm0pewoJCSAgICAgICRlcnIgPSAiSnVtbGFoIEFsb2thc2kgU2FsYWggIjsKCQkgICAgfQoKCQkgICAgaWYoJGVyciA9PSAiIil7CgkJICAgICAJJGdldERhdGFEUEEgPSAkdGhpcy0+c3FsQXJyYXkoJHRoaXMtPnNxbFF1ZXJ5KCJzZWxlY3QgKiBmcm9tIHRhYmVsX2RwYSB3aGVyZSBpZCA9ICckaWREUEEnIikpOwoJCQkJCWZvcmVhY2ggKCRnZXREYXRhRFBBIGFzICRrZXkgPT4gJHZhbHVlKSB7CgkJCQkgICAgICAkJGtleSA9ICR2YWx1ZTsKCQkJCSAgfQoJCSAgICAgIGlmKG15c3FsX251bV9yb3dzKCR0aGlzLT5zcWxRdWVyeSgic2VsZWN0ICogZnJvbSBhbmdnYXJhbl9rYXMgd2hlcmUgdGFodW5fYW5nZ2FyYW4gPSckdGhpcy0+dGFodW5BbmdnYXJhbicgYW5kIGplbmlzX2FuZ2dhcmFuID0nJHRoaXMtPmplbmlzQW5nZ2FyYW4nIGFuZCBjMSA9JyRjMScgYW5kIGM9JyRjJyBhbmQgZCA9JyRkJyAgYW5kIGs9JyRrJyBhbmQgbD0nJGwnIGFuZCBtPSckbScgYW5kIG4gPSckbicgYW5kIG8gPSckbycgIGFuZCBqZW5pc19kcGEgPSckdGhpcy0+amVuaXNEUEEnIGFuZCBpZF9yaW5jaWFuX2JlbGFuamEgPSAnJGlkX3JpbmNpYW5fYmVsYW5qYScgYW5kIGlkX2RwYT0nJGlkRFBBJyAiKSkgPT0gMCl7CgkJICAgICAgICAkZGF0YSA9IGFycmF5KAoJCSAgICAgICAgICAgICAgJ2MxJyA9PiAkYzEsCgkJICAgICAgICAgICAgICAnYycgPT4gJGMsCgkJICAgICAgICAgICAgICAnZCcgPT4gJGQsCgoJCSAgICAgICAgICAgICAgJ2snID0+ICRrLAoJCSAgICAgICAgICAgICAgJ2wnID0+ICRsLAoJCSAgICAgICAgICAgICAgJ20nID0+ICRtLAoJCSAgICAgICAgICAgICAgJ24nID0+ICRuLAoJCSAgICAgICAgICAgICAgJ28nID0+ICRvLAoJCSAgICAgICAgICAgICAgJ2lkX3JpbmNpYW5fYmVsYW5qYScgPT4gJGlkX3JpbmNpYW5fYmVsYW5qYSwKCQkgICAgICAgICAgICAgICdpZF9kcGEnID0+ICRpZERQQSwKCQkgICAgICAgICAgICAgICd0b3RhbCcgPT4gJGp1bWxhaEhhcmdhLAoJCSAgICAgICAgICAgICAgJ2plbmlzX2Fsb2thc2lfa2FzJyA9PiAkamVuaXNBbG9rYXNpLAoJCSAgICAgICAgICAgICAgImFsb2thc2lfamFuIiA9PiAkamFuLAoJCSAgICAgICAgICAgICAgImFsb2thc2lfZmViIiA9PiAkZmViLAoJCSAgICAgICAgICAgICAgImFsb2thc2lfbWFyIiA9PiAkbWFyLAoJCSAgICAgICAgICAgICAgImFsb2thc2lfYXByIiA9PiAkYXByLAoJCSAgICAgICAgICAgICAgImFsb2thc2lfbWVpIiA9PiAkbWVpLAoJCSAgICAgICAgICAgICAgImFsb2thc2lfanVuIiA9PiAkanVuLAoJCSAgICAgICAgICAgICAgImFsb2thc2lfanVsIiA9PiAkanVsLAoJCSAgICAgICAgICAgICAgImFsb2thc2lfYWd1IiA9PiAkYWd1LAoJCSAgICAgICAgICAgICAgImFsb2thc2lfc2VwIiA9PiAkc2VwLAoJICAgICAgICAgICAgICAgICJhbG9rYXNpX29rdCIgPT4gJG9rdCwKCQkgICAgICAgICAgICAgICJhbG9rYXNpX25vcCIgPT4gJG5vcCwKCQkgICAgICAgICAgICAgICJhbG9rYXNpX2RlcyIgPT4gJGRlcywKCQkgICAgICAgICAgICAgICJqZW5pc19kcGEiID0+ICR0aGlzLT5qZW5pc0RQQSwKCQkgICAgICAgICAgICAgICJ0YWh1bl9hbmdnYXJhbiIgPT4gJHRoaXMtPnRhaHVuQW5nZ2FyYW4sCgkJICAgICAgICAgICAgICAiamVuaXNfYW5nZ2FyYW4iID0+ICR0aGlzLT5qZW5pc0FuZ2dhcmFuCgkJICAgICAgICAgICAgICApOwoJCSAgICAgICAgJGNlayA9ICR0aGlzLT5zcWxJbnNlcnQoJ2FuZ2dhcmFuX2thcycsJGRhdGEpOwoJCSAgICAgICAgJHRoaXMtPnNxbFF1ZXJ5KCR0aGlzLT5zcWxJbnNlcnQoJ2FuZ2dhcmFuX2thcycsJGRhdGEpKTsKCQkgICAgICB9ZWxzZXsKCQkgICAgICAgICRncmVwSWQgPSAkdGhpcy0+c3FsQXJyYXkoJHRoaXMtPnNxbFF1ZXJ5KCJzZWxlY3QgKiBmcm9tIGFuZ2dhcmFuX2thcyB3aGVyZSB0YWh1bl9hbmdnYXJhbiA9JyR0aGlzLT50YWh1bkFuZ2dhcmFuJyBhbmQgamVuaXNfYW5nZ2FyYW4gPSckdGhpcy0+amVuaXNBbmdnYXJhbicgYW5kIGMxID0nJGMxJyBhbmQgYz0nJGMnIGFuZCBkID0nJGQnICBhbmQgaz0nJGsnIGFuZCBsPSckbCcgYW5kIG09JyRtJyBhbmQgbiA9JyRuJyBhbmQgbyA9JyRvJyAgYW5kIGplbmlzX2RwYSA9ICckdGhpcy0+amVuaXNEUEEnIGFuZCBpZF9yaW5jaWFuX2JlbGFuamEgPSAnJGlkX3JpbmNpYW5fYmVsYW5qYScgYW5kIGlkX2RwYT0nJGlkRFBBJyAiKSk7CgkJICAgICAgICAkaWQgPSAkZ3JlcElkWydpZCddOwoJCSAgICAgICAgJGRhdGEgPSBhcnJheSgKCQkgICAgICAgICAgICAgICAgJ2plbmlzX2Fsb2thc2lfa2FzJyA9PiAkamVuaXNBbG9rYXNpLAoJCSAgICAgICAgICAgICAgICAiYWxva2FzaV9qYW4iID0+ICRqYW4sCgkJICAgICAgICAgICAgICAgICJhbG9rYXNpX2ZlYiIgPT4gJGZlYiwKCQkgICAgICAgICAgICAgICAgImFsb2thc2lfbWFyIiA9PiAkbWFyLAoJCSAgICAgICAgICAgICAgICAiYWxva2FzaV9hcHIiID0+ICRhcHIsCgkJICAgICAgICAgICAgICAgICJhbG9rYXNpX21laSIgPT4gJG1laSwKCQkgICAgICAgICAgICAgICAgImFsb2thc2lfanVuIiA9PiAkanVuLAoJCSAgICAgICAgICAgICAgICAiYWxva2FzaV9qdWwiID0+ICRqdWwsCgkJICAgICAgICAgICAgICAgICJhbG9rYXNpX2FndSIgPT4gJGFndSwKCQkgICAgICAgICAgICAgICAgImFsb2thc2lfc2VwIiA9PiAkc2VwLAoJICAgICAgICAgICAgICAgICAgImFsb2thc2lfb2t0IiA9PiAkb2t0LAoJCSAgICAgICAgICAgICAgICAiYWxva2FzaV9ub3AiID0+ICRub3AsCgkJICAgICAgICAgICAgICAgICJhbG9rYXNpX2RlcyIgPT4gJGRlcywKCgkJICAgICAgICAgICAgICAgICk7CgkJICAgICAgICAkY2VrID0gJHRoaXMtPnNxbFVwZGF0ZSgnYW5nZ2FyYW5fa2FzJywkZGF0YSwgImlkID0gJyRpZCcgIik7CgkJICAgICAgICAkdGhpcy0+c3FsUXVlcnkoJHRoaXMtPnNxbFVwZGF0ZSgnYW5nZ2FyYW5fa2FzJywkZGF0YSwgImlkID0gJyRpZCcgIikpOwoJCSAgICAgIH0KCQkgICAgfQoJCWJyZWFrOwoJCX0KCgkJY2FzZSAnZm9ybUFsb2thc2knOnsKCQkJCSRmbSA9ICR0aGlzLT5mb3JtQWxva2FzaSgpOwoJCQkJJGNlayA9ICRmbVsnY2VrJ107CgkJCQkkZXJyID0gJGZtWydlcnInXTsKCQkJCSRjb250ZW50ID0gJGZtWydjb250ZW50J107CgkJYnJlYWs7CgkJfQoJCWNhc2UgJ3F1aWNrRm9ybUFsb2thc2knOnsKCQkJCSRmbSA9ICR0aGlzLT5xdWlja0Zvcm1BbG9rYXNpKCRfUkVRVUVTVFsnaWREUEEnXSk7CgkJCQkkY2VrID0gJGZtWydjZWsnXTsKCQkJCSRlcnIgPSAkZm1bJ2VyciddOwoJCQkJJGNvbnRlbnQgPSAkZm1bJ2NvbnRlbnQnXTsKCQlicmVhazsKCQl9CgkJY2FzZSAncXVpY2tGb3JtQWxva2FzaVRyaXd1bGFuJzp7CgkJCQkkZm0gPSAkdGhpcy0+cXVpY2tGb3JtQWxva2FzaVRyaXd1bGFuKCRfUkVRVUVTVFsnaWREUEEnXSk7CgkJCQkkY2VrID0gJGZtWydjZWsnXTsKCQkJCSRlcnIgPSAkZm1bJ2VyciddOwoJCQkJJGNvbnRlbnQgPSAkZm1bJ2NvbnRlbnQnXTsKCQlicmVhazsKCQl9CgkJY2FzZSAnZm9ybUFsb2thc2lUcml3dWxhbic6ewoJCQkJJGZtID0gJHRoaXMtPmZvcm1BbG9rYXNpVHJpd3VsYW4oKTsKCQkJCSRjZWsgPSAkZm1bJ2NlayddOwoJCQkJJGVyciA9ICRmbVsnZXJyJ107CgkJCQkkY29udGVudCA9ICRmbVsnY29udGVudCddOwoJCWJyZWFrOwoJCX0KCQljYXNlICdjaGVja0Fsb2thc2knOnsKCQkJZm9yZWFjaCAoJF9SRVFVRVNUIGFzICRrZXkgPT4gJHZhbHVlKSB7CgkJCQkgICQka2V5ID0gJHZhbHVlOwoJCQl9CgkJCWlmKGVtcHR5KCRmaWx0ZXJVcnVzYW4pKXsKIAkJIAkJJGVyciA9ICJQaWxpaCBVcnVzYW4iOwogCQkgIH1lbHNlaWYoZW1wdHkoJGZpbHRlckJpZGFuZykpewogCQkgCQkkZXJyID0gIlBpbGloIEJpZGFuZyI7CiAJCSAgfWVsc2VpZihlbXB0eSgkZmlsdGVyU0tQRCkpewogCQkgCQkkZXJyID0gIlBpbGloIFNLUEQiOwogCSAgCX0KCQkJaWYoZW1wdHkoJGVycikpewoJCQkJJGdldERhdGFEUEEgPSAkdGhpcy0+c3FsQXJyYXkoJHRoaXMtPnNxbFF1ZXJ5KCJzZWxlY3QgKiBmcm9tIHRhYmVsX2RwYSB3aGVyZSBpZCA9ICciLiRhbmdnYXJhbkthc1NLUEQxUEFEX2NiWzBdLiInIikpOwoJCQkJZm9yZWFjaCAoJGdldERhdGFEUEEgYXMgJGtleSA9PiAkdmFsdWUpIHsKCQkJCQkgICQka2V5ID0gJHZhbHVlOwoJCQkJfQoKCQkJCSRqZW5pc0Fsb2thc2kgPSAiIjsKCQkJCWlmKCR0aGlzLT5zcWxOdW1Sb3coJHRoaXMtPnNxbFF1ZXJ5KCJzZWxlY3QgKiBmcm9tIGFuZ2dhcmFuX2thcyB3aGVyZSBpZF9kcGEgPSAnIi4kYW5nZ2FyYW5LYXNTS1BEMVBBRF9jYlswXS4iJyIpKSAhPSAwKXsKCQkJCQkkZ2V0QWxva2FzaSA9ICR0aGlzLT5zcWxBcnJheSgkdGhpcy0+c3FsUXVlcnkoInNlbGVjdCAqIGZyb20gYW5nZ2FyYW5fa2FzIHdoZXJlIGlkX2RwYSA9ICciLiRhbmdnYXJhbkthc1NLUEQxUEFEX2NiWzBdLiInIikpOwoJCQkJCSRqZW5pc0Fsb2thc2kgPSAkZ2V0QWxva2FzaVsnamVuaXNfYWxva2FzaV9rYXMnXTsKCQkJCX0KCQkJfQoKCgkJCSRjb250ZW50ID0gYXJyYXkoImplbmlzIiA9PiAkamVuaXNBbG9rYXNpKQk7CgoJCWJyZWFrOwoJCX0KCQljYXNlICdxdWlja0NoZWNrQWxva2FzaSc6ewoJCQlmb3JlYWNoICgkX1JFUVVFU1QgYXMgJGtleSA9PiAkdmFsdWUpIHsKCQkJCSAgJCRrZXkgPSAkdmFsdWU7CgkJCX0KCgkJCWlmKGVtcHR5KCRlcnIpKXsKCQkJCSRnZXREYXRhRFBBID0gJHRoaXMtPnNxbEFycmF5KCR0aGlzLT5zcWxRdWVyeSgic2VsZWN0ICogZnJvbSB0YWJlbF9kcGEgd2hlcmUgaWQgPSAnIi4kaWREUEEuIiciKSk7CgkJCQlmb3JlYWNoICgkZ2V0RGF0YURQQSBhcyAka2V5ID0+ICR2YWx1ZSkgewoJCQkJCSAgJCRrZXkgPSAkdmFsdWU7CgkJCQl9CgoJCQkJJGplbmlzQWxva2FzaSA9ICIiOwoJCQkJaWYoJHRoaXMtPnNxbE51bVJvdygkdGhpcy0+c3FsUXVlcnkoInNlbGVjdCAqIGZyb20gYW5nZ2FyYW5fa2FzIHdoZXJlIGlkX2RwYSA9ICciLiRpZERQQS4iJyIpKSAhPSAwKXsKCQkJCQkkZ2V0QWxva2FzaSA9ICR0aGlzLT5zcWxBcnJheSgkdGhpcy0+c3FsUXVlcnkoInNlbGVjdCAqIGZyb20gYW5nZ2FyYW5fa2FzIHdoZXJlIGlkX2RwYSA9ICciLiRpZERQQS4iJyIpKTsKCQkJCQkkamVuaXNBbG9rYXNpID0gJGdldEFsb2thc2lbJ2plbmlzX2Fsb2thc2lfa2FzJ107CgkJCQl9CgkJCX0KCgoJCQkkY29udGVudCA9IGFycmF5KCJqZW5pcyIgPT4gJGplbmlzQWxva2FzaSkJOwoKCQlicmVhazsKCQl9CgoJCWNhc2UgJ0JhcnUnOnsKCQkJZm9yZWFjaCAoJF9SRVFVRVNUIGFzICRrZXkgPT4gJHZhbHVlKSB7CgkJCQkJJCRrZXkgPSAkdmFsdWU7CgkJCX0KCQkJJHRoaXMtPnNxbFF1ZXJ5KCJkZWxldGUgZnJvbSB0ZW1wX3JlbW92ZV9ya2FfMjEgd2hlcmUgdXNlcm5hbWUgPSAnJHRoaXMtPnVzZXJuYW1lJyIpOwoJCQkkdGhpcy0+c3FsUXVlcnkoImRlbGV0ZSBmcm9tIHRlbXBfcmVrZW5pbmdfcmthX2JlbGFuamFfbGFuZ3N1bmcgd2hlcmUgdXNlcm5hbWUgPSAnJHRoaXMtPnVzZXJuYW1lJyIpOwoJCQkkdGhpcy0+c3FsUXVlcnkoImRlbGV0ZSBmcm9tIHRlbXBfcmluY2lhbl9iZWxhbmphX2xhbmdzdW5nIHdoZXJlIHVzZXJuYW1lID0gJyR0aGlzLT51c2VybmFtZSciKTsKCQkJJHRoaXMtPnNxbFF1ZXJ5KCJkZWxldGUgZnJvbSB0ZW1wX3N1Yl9yaW5jaWFuX2JlbGFuamFfbGFuZ3N1bmcgd2hlcmUgdXNlcm5hbWUgPSAnJHRoaXMtPnVzZXJuYW1lJyIpOwoJCQkka29kZVNLUEQgPSAkZmlsdGVyVXJ1c2FuLiIuIi4kZmlsdGVyQmlkYW5nLiIuIi4kZmlsdGVyU0tQRDsKCQkJJGtvZGVQcm9ncmFtS2VnaWF0YW4gPSAkZmlsdGVyQ29uY2F0UHJvZ3JhbS4iLiIuJGZpbHRlclE7CgkJCSRlcnIgPSAkdGhpcy0+Y2hlY2tTeW5jRHBhKCRrb2RlU0tQRCwkdGhpcy0+amVuaXNEUEEpOwoJCQlpZihlbXB0eSgkZXJyKSl7CgkJCQkkZ2V0RGF0YVJrYSA9ICR0aGlzLT5zcWxRdWVyeSgic2VsZWN0ICogZnJvbSB0YWJlbF9kcGEgd2hlcmUgY29uY2F0KGMxLCcuJyxjLCcuJyxkKSA9ICcka29kZVNLUEQnICBhbmQgaWRfdGFoYXAgPSAnJHRoaXMtPmlkVGFoYXAnIGFuZCBqZW5pc19kcGEgPSAnJHRoaXMtPmplbmlzRFBBJyAiKTsKCQkJCXdoaWxlICgkZGF0YVJrYSA9ICR0aGlzLT5zcWxBcnJheSgkZ2V0RGF0YVJrYSkpIHsKCQkJCQkka29kZVJla2VuaW5nID0gJGRhdGFSa2FbJ2snXS4iLiIuJGRhdGFSa2FbJ2wnXS4iLiIuJGRhdGFSa2FbJ20nXS4iLiIuJGRhdGFSa2FbJ24nXS4iLiIuJGRhdGFSa2FbJ28nXTsKCQkJCQkkZ2V0RGF0YVJpbmNpYW5CZWxhbmphID0gJHRoaXMtPnNxbEFycmF5KCR0aGlzLT5zcWxRdWVyeSgic2VsZWN0ICogZnJvbSByaW5jaWFuX2JlbGFuamEgd2hlcmUgaWQgPSAnIi4kZGF0YVJrYVsnaWRfcmluY2lhbl9iZWxhbmphJ10uIiciKSk7CgkJCQkJaWYoJHRoaXMtPnNxbE51bVJvdygkdGhpcy0+c3FsUXVlcnkoInNlbGVjdCAqIGZyb20gdGVtcF9yZWtlbmluZ19ya2FfYmVsYW5qYV9sYW5nc3VuZyB3aGVyZSBjb25jYXQoaywnLicsbCwnLicsbSwnLicsbiwnLicsbykgPSAnJGtvZGVSZWtlbmluZycgYW5kIHVzZXJuYW1lPSckdGhpcy0+dXNlcm5hbWUnIikpID09IDApewoJCQkJCQkkZGF0YVRlbXBSZWtlbmluZyA9IGFycmF5KAoJCQkJCQkJImsiID0+ICRkYXRhUmthWydrJ10sCgkJCQkJCQkibCIgPT4gJGRhdGFSa2FbJ2wnXSwKCQkJCQkJCSJtIiA9PiAkZGF0YVJrYVsnbSddLAoJCQkJCQkJIm4iID0+ICRkYXRhUmthWyduJ10sCgkJCQkJCQkibyIgPT4gJGRhdGFSa2FbJ28nXSwKCQkJCQkJCSJzdW1iZXJfZGFuYSIgPT4gJGdldERhdGFSaW5jaWFuQmVsYW5qYVsnc3VtYmVyX2RhbmEnXSwKCQkJCQkJCSJ1c2VybmFtZSIgPT4gJHRoaXMtPnVzZXJuYW1lLAoJCQkJCQkpOwoJCQkJCQkkcXVleUluc2VydFRlbXBSZWtlbmluZ0JlbGFuamEgPSAkdGhpcy0+c3FsSW5zZXJ0KCJ0ZW1wX3Jla2VuaW5nX3JrYV9iZWxhbmphX2xhbmdzdW5nIiwkZGF0YVRlbXBSZWtlbmluZyk7CgkJCQkJCSR0aGlzLT5zcWxRdWVyeSgkcXVleUluc2VydFRlbXBSZWtlbmluZ0JlbGFuamEpOwoJCQkJCQkkY2VrIC49ICRxdWV5SW5zZXJ0VGVtcFJla2VuaW5nQmVsYW5qYTsKCQkJCQl9CgkJCQkJJGdldElkUmVrZW5pbmdCZWxhbmphID0gJHRoaXMtPnNxbEFycmF5KCR0aGlzLT5zcWxRdWVyeSgic2VsZWN0ICogZnJvbSB0ZW1wX3Jla2VuaW5nX3JrYV9iZWxhbmphX2xhbmdzdW5nIHdoZXJlIGNvbmNhdChrLCcuJyxsLCcuJyxtLCcuJyxuLCcuJyxvKSA9ICcka29kZVJla2VuaW5nJyBhbmQgdXNlcm5hbWU9JyR0aGlzLT51c2VybmFtZSciKSk7CgkJCQkJJGlkUmVrZW5pbmdCZWxhbmphID0gJGdldElkUmVrZW5pbmdCZWxhbmphWydpZCddOwoJCQkJCWlmKCR0aGlzLT5zcWxOdW1Sb3coJHRoaXMtPnNxbFF1ZXJ5KCJzZWxlY3QgKiBmcm9tIHRlbXBfcmluY2lhbl9iZWxhbmphX2xhbmdzdW5nIHdoZXJlIGlkX3Jla2VuaW5nX2JlbGFuamEgPSAnJGlkUmVrZW5pbmdCZWxhbmphJyBhbmQgdXJhaWFuID0gJyIuJGdldERhdGFSaW5jaWFuQmVsYW5qYVsnbmFtYV9yaW5jaWFuX2JlbGFuamEnXS4iJyBhbmQgdXNlcm5hbWUgPSAnJHRoaXMtPnVzZXJuYW1lJyIpKSA9PSAwICl7CgkJCQkJCSRkYXRhVGVtcFJpbmNpYW5CZWxhbmphID0gYXJyYXkoCgkJCQkJCQkiaWRfcmVrZW5pbmdfYmVsYW5qYSIgPT4gJGlkUmVrZW5pbmdCZWxhbmphLAoJCQkJCQkJInVyYWlhbiIgPT4gJGdldERhdGFSaW5jaWFuQmVsYW5qYVsnbmFtYV9yaW5jaWFuX2JlbGFuamEnXSwKCQkJCQkJCSJ1c2VybmFtZSIgPT4gJHRoaXMtPnVzZXJuYW1lLAoJCQkJCQkpOwoJCQkJCQkkcXVlcnlJbnNlcnRUZW1wUmluY2lhbkJlbGFuamEgPSAkdGhpcy0+c3FsSW5zZXJ0KCJ0ZW1wX3JpbmNpYW5fYmVsYW5qYV9sYW5nc3VuZyIsJGRhdGFUZW1wUmluY2lhbkJlbGFuamEpOwoJCQkJCQkkdGhpcy0+c3FsUXVlcnkoJHF1ZXJ5SW5zZXJ0VGVtcFJpbmNpYW5CZWxhbmphKTsKCQkJCQkJJGNlayAuPSAkcXVlcnlJbnNlcnRUZW1wUmluY2lhbkJlbGFuamE7CgoJCQkJCX0KCQkJCQkkZ2V0SWRSaW5jaWFuQmVsYW5qYSA9ICR0aGlzLT5zcWxBcnJheSgkdGhpcy0+c3FsUXVlcnkoInNlbGVjdCAqIGZyb20gdGVtcF9yaW5jaWFuX2JlbGFuamFfbGFuZ3N1bmcgd2hlcmUgaWRfcmVrZW5pbmdfYmVsYW5qYSA9ICckaWRSZWtlbmluZ0JlbGFuamEnIGFuZCB1cmFpYW4gPSAnIi4kZ2V0RGF0YVJpbmNpYW5CZWxhbmphWyduYW1hX3JpbmNpYW5fYmVsYW5qYSddLiInIGFuZCB1c2VybmFtZSA9ICckdGhpcy0+dXNlcm5hbWUnIikpOwoJCQkJCSRpZFJpbmNpYW5CZWxhbmphID0gJGdldElkUmluY2lhbkJlbGFuamFbJ2lkJ107CgoJCQkJCSRkYXRhVGVtcFN1YlJpbmNpYW5CZWxhbmphID0gYXJyYXkoCgkJCQkJCSJpZF9yaW5jaWFuX2JlbGFuamEiID0+ICRpZFJpbmNpYW5CZWxhbmphLAoJCQkJCQkidXJhaWFuIiA9PiAkZGF0YVJrYVsncmluY2lhbl9wZXJoaXR1bmdhbiddLAoJCQkJCQkiZiIgPT4gJGRhdGFSa2FbJ2YnXSwKCQkJCQkJImciID0+ICRkYXRhUmthWydnJ10sCgkJCQkJCSJoIiA9PiAkZGF0YVJrYVsnaCddLAoJCQkJCQkiaSIgPT4gJGRhdGFSa2FbJ2knXSwKCQkJCQkJImoiID0+ICRkYXRhUmthWydqJ10sCgkJCQkJCSJqMSIgPT4gJGRhdGFSa2FbJ2oxJ10sCgkJCQkJCSJoYXJnYV9zYXR1YW4iID0+ICRkYXRhUmthWydoYXJnYV9zYXR1YW4nXSwKCQkJCQkJInZvbHVtZTEiID0+ICRkYXRhUmthWydqdW1sYWgxJ10sCgkJCQkJCSJ2b2x1bWUyIiA9PiAkZGF0YVJrYVsnanVtbGFoMiddLAoJCQkJCQkidm9sdW1lMyIgPT4gJGRhdGFSa2FbJ2p1bWxhaDMnXSwKCQkJCQkJInNhdHVhbjEiID0+ICRkYXRhUmthWydzYXR1YW4xJ10sCgkJCQkJCSJzYXR1YW4yIiA9PiAkZGF0YVJrYVsnc2F0dWFuMiddLAoJCQkJCQkic2F0dWFuMyIgPT4gJGRhdGFSa2FbJ3NhdHVhbjMnXSwKCQkJCQkJInJpbmNpYW5fdm9sdW1lIiA9PiAkZGF0YVJrYVsncmluY2lhbl92b2x1bWUnXSwKCQkJCQkJImlkX3JrYSIgPT4gJGRhdGFSa2FbJ2lkJ10sCgkJCQkJCSJqZW5pc19hdHJpYnVzaSIgPT4gJGRhdGFSa2FbJ2plbmlzX2F0cmlidXNpJ10sCgkJCQkJCSJ1c2VybmFtZSIgPT4gJHRoaXMtPnVzZXJuYW1lLAoJCQkJCSk7CgkJCQkJJHF1ZXJ5SW5zZXJ0VGVtcFN1YlJpbmNpYW5CZWxhbmphID0gJHRoaXMtPnNxbEluc2VydCgidGVtcF9zdWJfcmluY2lhbl9iZWxhbmphX2xhbmdzdW5nIiwkZGF0YVRlbXBTdWJSaW5jaWFuQmVsYW5qYSk7CgkJCQkJJHRoaXMtPnNxbFF1ZXJ5KCRxdWVyeUluc2VydFRlbXBTdWJSaW5jaWFuQmVsYW5qYSk7CgkJCQl9CgkJCX0KCQlicmVhazsKCSAgIH0KCgoJCSAvKgogCQlfX19fX18gX19fX19fX19fX18gX19fX19fX19fX18gX19fX18KIAkJfCBfX18gXCAgX19ffCBfX18gXCAgXyAgfCBfX18gXF8gICBffAogCQl8IHxfLyAvIHxfXyB8IHxfLyAvIHwgfCB8IHxfLyAvIHwgfAogCQl8ICAgIC98ICBfX3x8ICBfXy98IHwgfCB8ICAgIC8gIHwgfAogCQl8IHxcIFx8IHxfX198IHwgICBcIFxfLyAvIHxcIFwgIHwgfAogCQlcX3wgXF9cX19fXy9cX3wgICAgXF9fXy9cX3wgXF98IFxfLwoKCiAJCSovCgogCQljYXNlICdMYXBvcmFuJzp7CiAJCQkkZm0gPSAkdGhpcy0+TGFwb3JhbigpOwogCQkJJGNlayAuPSAkZm1bJ2NlayddOwogCQkJJGVyciA9ICRmbVsnZXJyJ107CiAJCQkkY29udGVudCA9ICRmbVsnY29udGVudCddOwogCQkJYnJlYWs7CiAJCX0KIAkJY2FzZSAnbmV3VGFuZGFUYW5nYW5nYW4nOnsKIAkJCSRmbSA9ICR0aGlzLT5uZXdUYW5kYVRhbmdhbmdhbigpOwogCQkJJGNlayAuPSAkZm1bJ2NlayddOwogCQkJJGVyciA9ICRmbVsnZXJyJ107CiAJCQkkY29udGVudCA9ICRmbVsnY29udGVudCddOwogCQkJYnJlYWs7CiAJCX0KIAkJY2FzZSAncGlsaWhQYW5na2F0Jzp7CiAJCQlnbG9iYWwgJE1haW47CiAJCQkkY2VrID0gJyc7ICRlcnI9Jyc7ICRjb250ZW50PScnOyAkanNvbj1UUlVFOwoKIAkJCSRpZHBhbmdrYXQgPSAkX1JFUVVFU1RbJ3BhbmdrYXRha2hpciddOwoKIAkJCSRxdWVyeSA9ICJzZWxlY3QgY29uY2F0KGdvbCwnLycscnVhbmcpYXMgbmFtYSBGUk9NIHJlZl9wYW5na2F0IFdIRVJFIG5hbWE9JyRpZHBhbmdrYXQnIiA7CiAJCQkkZ2V0PSR0aGlzLT5zcWxBcnJheSgkdGhpcy0+c3FsUXVlcnkoJHF1ZXJ5KSk7JGNlay49JHF1ZXJ5OwogCQkJJGNvbnRlbnQ9JGdldFsnbmFtYSddOwogCQkJYnJlYWs7CiAJCX0KIAkJY2FzZSAnc2F2ZU5ld1RhbmRhVGFuZ2FuJzp7CiAJCQlnbG9iYWwgJE1haW47CiAJCQkka29kZTE9ICcwJzsKIAkJCSRrb2RlMj0nMDAnOwogCQkJJGtvZGUzPSAnMDAnOwogCQkJJGtvZGU0PSAnMDAnOwogCQkJJGtvZGU1PSAnMDAwJzsKIAkJCSRuYW1hcGVnYXdhaT0gJF9SRVFVRVNUWyduYW1hcGVnYXdhaSddOwogCQkJJG5pcHBlZ2F3YWk9ICRfUkVRVUVTVFsnbmlwcGVnYXdhaSddOwoKIAkJCSRwMT0gJF9SRVFVRVNUWydwYW5na2F0YWtoaXInXTsKCiAJCQkkZ29sYW5nX2FraGlyPSAkX1JFUVVFU1RbJ2dvbGFuZ19ha2hpciddOwogCQkJJGdvbG9uZ2FuID0gZXhwbG9kZSgiLyIsICRnb2xhbmdfYWtoaXIpOwogCQkJJGphYmF0YW49ICRfUkVRVUVTVFsnamFiYXRhbiddOwogCQkJJGVzZWxvbj0gJF9SRVFVRVNUWydlc2Vsb25fYWtoaXInXTsKIAkJCSRrYXRlZ29yaT0gJF9SRVFVRVNUWydrYXRlZ29yaSddOwoKCiAJCQkkb2xkeT0kdGhpcy0+c3FsQXJyYXkoCiAJCQkgJHRoaXMtPnNxbFF1ZXJ5KAogCQkJCSAic2VsZWN0IGNvdW50KCopIGFzIGNudCBmcm9tIHJlZl90YW5kYXRhbmdhbiB3aGVyZSBuaXA9JyRuaXBwZWdhd2FpJyIKIAkJCSApKTsKIAkJCWlmKCAkZXJyPT0nJyAmJiAkbmFtYXBlZ2F3YWkgPT0nJyApICRlcnI9ICdOQU1BIFBFR0FXQUkgQmVsdW0gRGkgSXNpICEhJzsKIAkJCWlmKCAkZXJyPT0nJyAmJiAkbmlwcGVnYXdhaSA9PScnICkgJGVycj0gJ05JUCBCZWx1bSBEaSBJc2kgISEnOwogCQkJaWYoICRlcnI9PScnICYmICRwMSA9PScnICkgJGVycj0gJ1BBTkdLQVQvIEdPTC8gUlVBTkcgQmVsdW0gRGkgUGlsaWggISEnOwogCQkJaWYoICRlcnI9PScnICYmICRqYWJhdGFuID09JycgKSAkZXJyPSAnSkFCQVRBTiBCZWx1bSBEaSBJc2kgISEnOwogCQkJaWYoICRlcnI9PScnICYmICRrYXRlZ29yaSA9PScnICkgJGVycj0gJ0thdGVnb3JpIEJlbHVtIERpIFBpbGloICEhJzsKCiAJCQkJIGlmKCRmbVNUID09IDApewogCQkJCSBpZigkZXJyPT0nJyAmJiAkb2xkeVsnY250J10+MCkgJGVycj0iTklQICckbmlwcGVnYXdhaScgU3VkYWggQWRhIjsKIAkJCQkJIGlmKCRlcnI9PScnKXsKCiAJCQkJCQkgJGFxcnkgPSAiSU5TRVJUIGludG8gcmVmX3RhbmRhdGFuZ2FuIChjMSxjLGQsZSxlMSxuYW1hLG5pcCxqYWJhdGFuLHBhbmdrYXQsZ29sLHJ1YW5nLGVzZWxvbixrYXRlZ29yaV90YW5kYXRhbmdhbikgdmFsdWVzKCcka29kZTEnLCcka29kZTInLCcka29kZTMnLCcka29kZTQnLCcka29kZTUnLCckbmFtYXBlZ2F3YWknLCckbmlwcGVnYXdhaScsJyRqYWJhdGFuJywnJHAxJywnJGdvbG9uZ2FuWzBdJywnJGdvbG9uZ2FuWzFdJywnJGVzZWxvbicsMykiOyAgJGNlayAuPSAkYXFyeTsKIAkJCQkJCSAkcXJ5ID0gJHRoaXMtPnNxbFF1ZXJ5KCRhcXJ5KTsKIAkJCQkJCSAkY29udGVudCA9IGFycmF5KCdjb21ib3R0ZCcgPT4gY21iUXVlcnkoJ2lkUGVuYW5kYVRhbmdhbicsJGQsIlNFTEVDVCBJZCwgbmFtYSBmcm9tIHJlZl90YW5kYXRhbmdhbiB3aGVyZSBrYXRlZ29yaV90YW5kYXRhbmdhbiA9ICczJyBhbmQgYzEgPSAnIi4ka29kZTEuIicgYW5kIGMgPSAnIi4ka29kZTIuIicgYW5kIGQgPSAnIi4ka29kZTMuIicgYW5kIGUgPSAnIi4ka29kZTQuIicgYW5kIGUxID0gJyIuJGtvZGU1LiInIiwnb25jaGFuZ2U9cmthLnJlZnJlc2hMaXN0KHRydWUpOycsJy0tIFRURCAtLScpKTsKIAkJCQkJIH0KIAkJCQkgfWVsc2V7CiAJCQkJCSBpZigkZXJyPT0nJyl7CiAJCQkJCSAkYXFyeSA9ICJVUERBVEUgcmVmX3RhbmRhdGFuZ2FuIFNFVCBuYW1hPSckbmFtYXBlZ2F3YWknLCBuaXA9JyRuaXBwZWdhd2FpJywgamFiYXRhbj0nJGphYmF0YW4nICxwYW5na2F0PSckcDEnLCBnb2w9JyRnb2xvbmdhblswXScgLHJ1YW5nPSckZ29sb25nYW5bMV0nLGVzZWxvbj0nJGVzZWxvbicgLGthdGVnb3JpX3RhbmRhdGFuZ2FuPScka2F0ZWdvcmknIFdIRVJFIElkPSciLiRpZHBsaC4iJyI7ICAkY2VrIC49ICRhcXJ5OwogCQkJCQkJCSAkcXJ5ID0gJHRoaXMtPnNxbFF1ZXJ5KCRhcXJ5KSBvciBkaWUobXlzcWxfZXJyb3IoKSk7CiAJCQkJCQkgfQogCQkJCSB9CiAJCQlicmVhazsKIAkJfQogCQljYXNlICd2aWV3TGFwb3Jhbic6ewogCQkJJGpzb24gPSBGQUxTRTsKIAkJCSR0aGlzLT52aWV3TGFwb3JhbigpOwogCQkJYnJlYWs7Cn0KCQkgICBkZWZhdWx0OnsKCQkJCSRvdGhlciA9ICR0aGlzLT5zZXRfc2VsZWN0b3Jfb3RoZXIyKCR0aXBlKTsKCQkJCSRjZWsgPSAkb3RoZXJbJ2NlayddOwoJCQkJJGVyciA9ICRvdGhlclsnZXJyJ107CgkJCQkkY29udGVudD0kb3RoZXJbJ2NvbnRlbnQnXTsKCQkJCSRqc29uPSRvdGhlclsnanNvbiddOwoJCSBicmVhazsKCQkgfQoJIH0vL2VuZCBzd2l0Y2gKCgkJcmV0dXJuCWFycmF5ICgnY2VrJz0+JGNlaywgJ2Vycic9PiRlcnIsICdjb250ZW50Jz0+JGNvbnRlbnQsICdqc29uJz0+JGpzb24pOwogICB9CgoKCiAgIGZ1bmN0aW9uIHNldFBhZ2VfT3RoZXJTY3JpcHQoKXsKICAgICRzY3JpcHRsb2FkID0KICAgICAgICAgICIKCQkJCQk8c3R5bGUgdHlwZT0ndGV4dC9jc3MnPgoJCQkJCQkJLnVyYWlhbkxpc3Q6aG92ZXJ7CgkJCQkJCQkJCWNvbG9yOmJsdWU7CgkJCQkJCQl9CgkJCQkJPC9zdHlsZT4KCQkJCQk8c2NyaXB0PgogICAgICAgICAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpewogICAgICAgICAgICAgICIuJHRoaXMtPlByZWZpeC4iLmxvYWRpbmcoKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICA8L3NjcmlwdD4iOwogICAgcmV0dXJuCiAgICAgICIKICAgICAgPHNjcmlwdCBzcmM9J2pzL3BlcmVuY2FuYWFuS2V1YW5nYW4vZmlsdGVyU0tQRC5qcycgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz48L3NjcmlwdD4KCQkJPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0nanMvcG9wdXBfcmVrZW5pbmcvcG9wdXBSZWtlbmluZy5qcycgbGFuZ3VhZ2U9J0phdmFTY3JpcHQnID48L3NjcmlwdD4KICAgICAgPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0nanMvcGVyZW5jYW5hYW5LZXVhbmdhbi9hbmdnYXJhbkthcy9hbmdnYXJhbkthc1NLUEQxUEFELmpzJyBsYW5ndWFnZT0nSmF2YVNjcmlwdCcgPjwvc2NyaXB0PgoJCQk8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdqcy9tYXN0ZXIvc3RhbmRhclNhdHVhbkhhcmdhL3BvcHVwU1NILmpzJyBsYW5ndWFnZT0nSmF2YVNjcmlwdCcgPjwvc2NyaXB0PgogICAgICA8bGluayByZWw9J3N0eWxlc2hlZXQnIGhyZWY9J2RhdGVwaWNrZXIvanF1ZXJ5LXVpLmNzcyc+CiAgICAgIDxzY3JpcHQgc3JjPSdkYXRlcGlja2VyL2pxdWVyeS0xLjEyLjQuanMnPjwvc2NyaXB0PgogICAgICA8c2NyaXB0IHNyYz0nZGF0ZXBpY2tlci9qcXVlcnktdWkuanMnPjwvc2NyaXB0PgogICAgICAiLgogICAgICAkc2NyaXB0bG9hZDsKICB9CgkvL2RhZnRhciA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KCWZ1bmN0aW9uIHNldEtvbG9tSGVhZGVyKCRNb2RlPTEsICRDaGVja2JveD0nJyl7CgkJZm9yZWFjaCAoJF9SRVFVRVNUIGFzICRrZXkgPT4gJHZhbHVlKSB7CiAgCQkgIAkJCSQka2V5ID0gJHZhbHVlOwogIAkgfQoJCSBpZigkdmlld0Fsb2thc2kgPT0gIkJVTEFOQU4iKXsKCQkJICRrb2xvbUphbnVhcmkgPSAiPHRoIGNsYXNzPSd0aDAxJyB3aWR0aD0nMTIwJyAgPkpBTlVBUkk8L3RoPiI7CgkJCSAka29sb21GZWJydWFyaSA9ICI8dGggY2xhc3M9J3RoMDEnIHdpZHRoPScxMjAnICA+RkVCUlVBUkk8L3RoPiI7CgkJCSAka29sb21NYXJldCA9ICIKCQkJIAkJICAgPHRoIGNsYXNzPSd0aDAxJyB3aWR0aD0nMTIwJz5NQVJFVDwvdGg+IjsKCQkJICRrb2xvbUFwcmlsID0gIgoJCQkgCQkgICA8dGggY2xhc3M9J3RoMDEnIHdpZHRoPScxMjAnICAgPkFQUklMPC90aD4iOwoJCQkgJGtvbG9tTWVpID0gIgoJCQkgCQkgICA8dGggY2xhc3M9J3RoMDEnIHdpZHRoPScxMjAnICAgPk1FSTwvdGg+IjsKCQkJICRrb2xvbUp1bmkgPSAiCgkJCSAJCSAgIDx0aCBjbGFzcz0ndGgwMScgd2lkdGg9JzEyMCcgICA+SlVOSTwvdGg+IjsKCQkJICRrb2xvbUp1bGkgPSAiCgkJCSAJCSAgIDx0aCBjbGFzcz0ndGgwMScgd2lkdGg9JzEyMCcgICA+SlVMSTwvdGg+IjsKCQkJICRrb2xvbUFndXN0dXMgPSAiCgkJCSAJCSAgIDx0aCBjbGFzcz0ndGgwMScgd2lkdGg9JzEyMCcgID5BR1VTVFVTPC90aD4iOwoJCQkgJGtvbG9tU2VwdGVtYmVyID0gIgoJCQkgCQkgICA8dGggY2xhc3M9J3RoMDEnIHdpZHRoPScxMjAnICAgPlNFUFRFTUJFUjwvdGg+IjsKCQkJICRrb2xvbU9rdG9iZXIgPSAiCgkJCSAJCSAgIDx0aCBjbGFzcz0ndGgwMScgd2lkdGg9JzEyMCcgICA+T0tUT0JFUjwvdGg+IjsKCQkJICRrb2xvbU5vcGVtYmVyID0gIgoJCQkgCQkgICA8dGggY2xhc3M9J3RoMDEnIHdpZHRoPScxMjAnICA+Tk9WRU1CRVI8L3RoPiI7CgkJCSAka29sb21EZXNlbWJlciA9ICIKCQkJIAkJICAgPHRoIGNsYXNzPSd0aDAxJyB3aWR0aD0nMTIwJyAgID5ERVNFTUJFUjwvdGg+IjsKCQkgfWVsc2VpZigkdmlld0Fsb2thc2kgPT0gIlRSSVdVTEFOIil7CgkJCSAka29sb21KYW51YXJpID0gIjx0aCBjbGFzcz0ndGgwMScgd2lkdGg9JzEyMCcgID5UUklXVUxBTiBJPC90aD4iOwoJCQkgJGtvbG9tRmVicnVhcmkgPSAiPHRoIGNsYXNzPSd0aDAxJyB3aWR0aD0nMTIwJyAgPlRSSVdVTEFOIElJPC90aD4iOwoJCQkgJGtvbG9tTWFyZXQgPSAiIDx0aCBjbGFzcz0ndGgwMScgd2lkdGg9JzEyMCc+VFJJV1VMQU4gSUlJPC90aD4iOwoJCQkgJGtvbG9tQXByaWwgPSAiIDx0aCBjbGFzcz0ndGgwMScgd2lkdGg9JzEyMCc+VFJJV1VMQU4gSVY8L3RoPiI7CgkJIH1lbHNlaWYoJHZpZXdBbG9rYXNpID09ICJTRU1FU1RFUiIpewoJCQkgJGtvbG9tSmFudWFyaSA9ICI8dGggY2xhc3M9J3RoMDEnIHdpZHRoPScxMjAnICA+U0VNRVNURVIgSTwvdGg+IjsKCQkJICRrb2xvbUZlYnJ1YXJpID0gIjx0aCBjbGFzcz0ndGgwMScgd2lkdGg9JzEyMCcgID5TRU1FU1RFUiBJSTwvdGg+IjsKCQkgfQoKCgkJICRoZWFkZXJUYWJsZSA9CgkJICI8dGhlYWQ+CgkJCTx0cj4KCgkJCTx0aCBjbGFzcz0ndGgwMScgc3R5bGU9J3dpZHRoOjElOycgPk5PPC90aD4KCQkJPHRoIGNsYXNzPSd0aDAxJyBzdHlsZT0nd2lkdGg6MSU7Jz4gPC90aD4KCQkJPHRoIGNsYXNzPSd0aDAxJyBzdHlsZT0nd2lkdGg6MSU7Jz5LT0RFIFJFS0VOSU5HIDwvdGg+CgkJCTx0aCBjbGFzcz0ndGgwMScgc3R5bGU9J3dpZHRoOjQwJTsnPiBVUkFJQU4gPC90aD4KCQkJPHRoIGNsYXNzPSd0aDAxJyBzdHlsZT0nd2lkdGg6MTAlOyc+QU5HR0FSQU48L3RoPgoJCQkiLiRrb2xvbUphbnVhcmkuIgoJCQkiLiRrb2xvbUZlYnJ1YXJpLiIKCQkJIi4ka29sb21NYXJldC4iCgkJCSIuJGtvbG9tQXByaWwuIgoJCQkiLiRrb2xvbU1laS4iCgkJCSIuJGtvbG9tSnVuaS4iCgkJCSIuJGtvbG9tSnVsaS4iCgkJCSIuJGtvbG9tQWd1c3R1cy4iCgkJCSIuJGtvbG9tU2VwdGVtYmVyLiIKCQkJIi4ka29sb21Pa3RvYmVyLiIKCQkJIi4ka29sb21Ob3BlbWJlci4iCgkJCSIuJGtvbG9tRGVzZW1iZXIuIgoJCQk8L3RyPgoJCQk8L3RoZWFkPiI7CgkJcmV0dXJuICRoZWFkZXJUYWJsZTsKCX0KCgoKCWZ1bmN0aW9uIHNldEtvbG9tRGF0YSgkbm8sICRpc2ksICRNb2RlLCAkVGFtcGlsQ2hlY2tCb3gpewoJIGdsb2JhbCAkUmVmOwoJIGZvcmVhY2ggKCRpc2kgYXMgJGtleSA9PiAkdmFsdWUpIHsKICAgICAgICAgICAgJCRrZXkgPSAkdmFsdWU7CiAgIH0KCSBmb3JlYWNoICgkX1JFUVVFU1QgYXMgJGtleSA9PiAkdmFsdWUpIHsKICAgICAgICAgICAgJCRrZXkgPSAkdmFsdWU7CiAgIH0KCSAka29kZVNLUEQgPSAkYzEuIi4iLiRjLiIuIi4kZDsKCiAgICRjb25jYXRSZWtlbmluZyA9ICRjMS4iLiIuJGMuIi4iLiRkLiIuIi4kay4iLiIuJGwuIi4iLiRtLiIuIi4kbi4iLiIuJG87CiAgICRjb25jYXRSaW5jaWFuQmVsYW5qYSA9ICRjMS4iLiIuJGMuIi4iLiRkLiIuIi4kay4iLiIuJGwuIi4iLiRtLiIuIi4kbi4iLiIuJG8uIi4iLiRpZF9yaW5jaWFuX2JlbGFuamE7CgoJCSBpZigkdGhpcy0+bm9tb3JLb2xvbSAlIDIgPT0gMSl7CgkJICAgJHJvd0NsYXNzID0gInJvdzAiOwoJCSB9ZWxzZXsKCQkgICAkcm93Q2xhc3MgPSAicm93MSI7CgkJIH0KCSAgIGlmKCFpbl9hcnJheSgkY29uY2F0UmVrZW5pbmcsJHRoaXMtPmNvbmNhdEFycmF5KSApewoJICAgICR0aGlzLT5jb25jYXRBcnJheVtdID0gJGNvbmNhdFJla2VuaW5nOwoJCQkka29kZVJla2VuaW5nID0gJGsuIi4iLiRsLiIuIi4kbS4iLiIuJG4uIi4iLiRvOwoKCQkJaWYoJHRoaXMtPnNxbE51bVJvdygkdGhpcy0+c3FsUXVlcnkoInNlbGVjdCAqIGZyb20gcmVmX3Jla2VuaW5nIHdoZXJlIGNvbmNhdChrLCcuJyxsLCcuJyxtLCcuJyxuLCcuJyxvKSA9ICcka29kZVJla2VuaW5nJyIpKSAhPSAwKXsKCQkJCSRnZXREYXRhUmVrZW5pbmcgPSAkdGhpcy0+c3FsQXJyYXkoJHRoaXMtPnNxbFF1ZXJ5KCJzZWxlY3QgKiBmcm9tIHJlZl9yZWtlbmluZyB3aGVyZSBjb25jYXQoaywnLicsbCwnLicsbSwnLicsbiwnLicsbykgPSAnJGtvZGVSZWtlbmluZyciKSk7CgkJCQkkbmFtYVJla2VuaW5nID0gJGdldERhdGFSZWtlbmluZ1snbm1fcmVrZW5pbmcnXTsKCQkJfWVsc2V7CgkJCQkka29kZVJla2VuaW5nID0gIjxzcGFuIHN0eWxlPSdjb2xvcjpyZWQnPngueC54Lnh4Lnh4eDwvc3Bhbj4iOwoJCQkJJG5hbWFSZWtlbmluZyA9ICI8c3BhbiBzdHlsZT0nY29sb3I6cmVkJz5CZWxhbmphIHh4eDwvc3Bhbj4iOwoJCQl9CgkJCSRnZXRUb3RhbEFuZ2dhcmFuID0gJHRoaXMtPnNxbEFycmF5KCR0aGlzLT5zcWxRdWVyeSgic2VsZWN0IHN1bSh0b3RhbF9oYXJnYSkgZnJvbSB0YWJlbF9kcGEgd2hlcmUgamVuaXNfZHBhID0gJyR0aGlzLT5qZW5pc0RQQScgYW5kIGNvbmNhdChjMSwnLicsYywnLicsZCkgPSAnJGtvZGVTS1BEJyAgYW5kIGNvbmNhdChrLCcuJyxsLCcuJyxtLCcuJyxuLCcuJyxvKSA9ICcka29kZVJla2VuaW5nJyAgICIpKTsKCgkJCWlmKCR2aWV3QWxva2FzaSA9PSAiQlVMQU5BTiIpewoJCQkJJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nID0gJHRoaXMtPnNxbEFycmF5KCR0aGlzLT5zcWxRdWVyeSgic2VsZWN0IHN1bShhbG9rYXNpX2phbikgYXMgYWxva2FzaV9qYW4sIHN1bShhbG9rYXNpX2ZlYikgYXMgYWxva2FzaV9mZWIsIHN1bShhbG9rYXNpX21hcikgYXMgYWxva2FzaV9tYXIsIHN1bShhbG9rYXNpX2FwcikgYXMgYWxva2FzaV9hcHIsIHN1bShhbG9rYXNpX21laSkgYXMgYWxva2FzaV9tZWksIHN1bShhbG9rYXNpX2p1bikgYXMgYWxva2FzaV9qdW4sIHN1bShhbG9rYXNpX2p1bCkgYXMgYWxva2FzaV9qdWwsIHN1bShhbG9rYXNpX2FndSkgYXMgYWxva2FzaV9hZ3UsIHN1bShhbG9rYXNpX3NlcCkgYXMgYWxva2FzaV9zZXAsIHN1bShhbG9rYXNpX29rdCkgYXMgYWxva2FzaV9va3QsIHN1bShhbG9rYXNpX25vcCkgYXMgYWxva2FzaV9ub3AsIHN1bShhbG9rYXNpX2RlcykgYXMgYWxva2FzaV9kZXMgZnJvbSBhbmdnYXJhbl9rYXMgd2hlcmUgdGFodW5fYW5nZ2FyYW4gPSAnJHRoaXMtPnRhaHVuQW5nZ2FyYW4nIGFuZCBqZW5pc19hbmdnYXJhbiA9JyR0aGlzLT5qZW5pc0FuZ2dhcmFuJyBhbmQgY29uY2F0KGMxLCcuJyxjLCcuJyxkKSA9ICcka29kZVNLUEQnICAgYW5kIGNvbmNhdChrLCcuJyxsLCcuJyxtLCcuJyxuLCcuJyxvKSA9ICcka29kZVJla2VuaW5nJyAiKSk7CgkJCQkka29sb21SZWtlbmluZ0phbnVhcmk9ICI8dGQgYWxpZ249J3JpZ2h0JyBjbGFzcz0nR2FyaXNEYWZ0YXInID48Yj4iLiR0aGlzLT5udW1iZXJGb3JtYXQoJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX2phbiddLDIpLiI8L3RkPiI7CgkJCQkka29sb21SZWtlbmluZ0ZlYnJ1YXJpPSAiPHRkIGFsaWduPSdyaWdodCcgY2xhc3M9J0dhcmlzRGFmdGFyJyA+PGI+Ii4kdGhpcy0+bnVtYmVyRm9ybWF0KCRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9mZWInXSwyKS4iPC90ZD4iOwoJCQkJJGtvbG9tUmVrZW5pbmdNYXJldD0gIjx0ZCBhbGlnbj0ncmlnaHQnIGNsYXNzPSdHYXJpc0RhZnRhcicgPjxiPiIuJHRoaXMtPm51bWJlckZvcm1hdCgkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmdbJ2Fsb2thc2lfbWFyJ10sMikuIjwvdGQ+IjsKCQkJCSRrb2xvbVJla2VuaW5nQXByaWw9ICI8dGQgYWxpZ249J3JpZ2h0JyBjbGFzcz0nR2FyaXNEYWZ0YXInID48Yj4iLiR0aGlzLT5udW1iZXJGb3JtYXQoJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX2FwciddLDIpLiI8L3RkPiI7CgkJCQkka29sb21SZWtlbmluZ01laT0gIjx0ZCBhbGlnbj0ncmlnaHQnIGNsYXNzPSdHYXJpc0RhZnRhcicgPjxiPiIuJHRoaXMtPm51bWJlckZvcm1hdCgkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmdbJ2Fsb2thc2lfbWVpJ10sMikuIjwvdGQ+IjsKCQkJCSRrb2xvbVJla2VuaW5nSnVuaT0gIjx0ZCBhbGlnbj0ncmlnaHQnIGNsYXNzPSdHYXJpc0RhZnRhcicgPjxiPiIuJHRoaXMtPm51bWJlckZvcm1hdCgkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmdbJ2Fsb2thc2lfanVuJ10sMikuIjwvdGQ+IjsKCQkJCSRrb2xvbVJla2VuaW5nSnVsaT0gIjx0ZCBhbGlnbj0ncmlnaHQnIGNsYXNzPSdHYXJpc0RhZnRhcicgPjxiPiIuJHRoaXMtPm51bWJlckZvcm1hdCgkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmdbJ2Fsb2thc2lfanVsJ10sMikuIjwvdGQ+IjsKCQkJCSRrb2xvbVJla2VuaW5nQWd1c3R1cz0gIjx0ZCBhbGlnbj0ncmlnaHQnIGNsYXNzPSdHYXJpc0RhZnRhcicgPjxiPiIuJHRoaXMtPm51bWJlckZvcm1hdCgkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmdbJ2Fsb2thc2lfYWd1J10sMikuIjwvdGQ+IjsKCQkJCSRrb2xvbVJla2VuaW5nU2VwdGVtYmVyPSAiPHRkIGFsaWduPSdyaWdodCcgY2xhc3M9J0dhcmlzRGFmdGFyJyA+PGI+Ii4kdGhpcy0+bnVtYmVyRm9ybWF0KCRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9zZXAnXSwyKS4iPC90ZD4iOwoJCQkJJGtvbG9tUmVrZW5pbmdPa3RvYmVyPSAiPHRkIGFsaWduPSdyaWdodCcgY2xhc3M9J0dhcmlzRGFmdGFyJyA+PGI+Ii4kdGhpcy0+bnVtYmVyRm9ybWF0KCRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9va3QnXSwyKS4iPC90ZD4iOwoJCQkJJGtvbG9tUmVrZW5pbmdOb3BlbWJlcj0gIjx0ZCBhbGlnbj0ncmlnaHQnIGNsYXNzPSdHYXJpc0RhZnRhcicgPjxiPiIuJHRoaXMtPm51bWJlckZvcm1hdCgkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmdbJ2Fsb2thc2lfbm9wJ10sMikuIjwvdGQ+IjsKCQkJCSRrb2xvbVJla2VuaW5nRGVzZW1iZXI9ICI8dGQgYWxpZ249J3JpZ2h0JyBjbGFzcz0nR2FyaXNEYWZ0YXInID48Yj4iLiR0aGlzLT5udW1iZXJGb3JtYXQoJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX2RlcyddLDIpLiI8L3RkPiI7CgkJCX1lbHNlaWYoJHZpZXdBbG9rYXNpID09ICJUUklXVUxBTiIpewogCQkJICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZyA9ICR0aGlzLT5zcWxBcnJheSgkdGhpcy0+c3FsUXVlcnkoInNlbGVjdCBzdW0oYWxva2FzaV9qYW4pIGFzIGFsb2thc2lfamFuLCBzdW0oYWxva2FzaV9mZWIpIGFzIGFsb2thc2lfZmViLCBzdW0oYWxva2FzaV9tYXIpIGFzIGFsb2thc2lfbWFyLCBzdW0oYWxva2FzaV9hcHIpIGFzIGFsb2thc2lfYXByLCBzdW0oYWxva2FzaV9tZWkpIGFzIGFsb2thc2lfbWVpLCBzdW0oYWxva2FzaV9qdW4pIGFzIGFsb2thc2lfanVuLCBzdW0oYWxva2FzaV9qdWwpIGFzIGFsb2thc2lfanVsLCBzdW0oYWxva2FzaV9hZ3UpIGFzIGFsb2thc2lfYWd1LCBzdW0oYWxva2FzaV9zZXApIGFzIGFsb2thc2lfc2VwLCBzdW0oYWxva2FzaV9va3QpIGFzIGFsb2thc2lfb2t0LCBzdW0oYWxva2FzaV9ub3ApIGFzIGFsb2thc2lfbm9wLCBzdW0oYWxva2FzaV9kZXMpIGFzIGFsb2thc2lfZGVzIGZyb20gYW5nZ2FyYW5fa2FzIHdoZXJlIHRhaHVuX2FuZ2dhcmFuID0gJyR0aGlzLT50YWh1bkFuZ2dhcmFuJyBhbmQgamVuaXNfYW5nZ2FyYW4gPSckdGhpcy0+amVuaXNBbmdnYXJhbicgYW5kIGNvbmNhdChjMSwnLicsYywnLicsZCkgPSAnJGtvZGVTS1BEJyAgIGFuZCBjb25jYXQoaywnLicsbCwnLicsbSwnLicsbiwnLicsbykgPSAnJGtvZGVSZWtlbmluZycgIikpOwoJCQkgJGtvbG9tUmVrZW5pbmdKYW51YXJpPSAiPHRkIGFsaWduPSdyaWdodCcgY2xhc3M9J0dhcmlzRGFmdGFyJyA+PGI+Ii4kdGhpcy0+bnVtYmVyRm9ybWF0KCRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9qYW4nXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9mZWInXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9tYXInXSwyKS4iPC90ZD4iOwogCQkJICRrb2xvbVJla2VuaW5nRmVicnVhcmk9ICI8dGQgYWxpZ249J3JpZ2h0JyBjbGFzcz0nR2FyaXNEYWZ0YXInID48Yj4iLiR0aGlzLT5udW1iZXJGb3JtYXQoJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX2FwciddICsgJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX21laSddICsgJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX2p1biddLDIpLiI8L3RkPiI7CiAJCQkgJGtvbG9tUmVrZW5pbmdNYXJldD0gIjx0ZCBhbGlnbj0ncmlnaHQnIGNsYXNzPSdHYXJpc0RhZnRhcicgPjxiPiIuJHRoaXMtPm51bWJlckZvcm1hdCgkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmdbJ2Fsb2thc2lfanVsJ10gKyAkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmdbJ2Fsb2thc2lfYWd1J10gKyAkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmdbJ2Fsb2thc2lfc2VwJ10sMikuIjwvdGQ+IjsKIAkJCSAka29sb21SZWtlbmluZ0FwcmlsPSAiPHRkIGFsaWduPSdyaWdodCcgY2xhc3M9J0dhcmlzRGFmdGFyJyA+PGI+Ii4kdGhpcy0+bnVtYmVyRm9ybWF0KCRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9va3QnXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9ub3AnXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9kZXMnXSwyKS4iPC90ZD4iOwogCQkgfWVsc2VpZigkdmlld0Fsb2thc2kgPT0gIlNFTUVTVEVSIil7CgkJCSAkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmcgPSAkdGhpcy0+c3FsQXJyYXkoJHRoaXMtPnNxbFF1ZXJ5KCJzZWxlY3Qgc3VtKGFsb2thc2lfamFuKSBhcyBhbG9rYXNpX2phbiwgc3VtKGFsb2thc2lfZmViKSBhcyBhbG9rYXNpX2ZlYiwgc3VtKGFsb2thc2lfbWFyKSBhcyBhbG9rYXNpX21hciwgc3VtKGFsb2thc2lfYXByKSBhcyBhbG9rYXNpX2Fwciwgc3VtKGFsb2thc2lfbWVpKSBhcyBhbG9rYXNpX21laSwgc3VtKGFsb2thc2lfanVuKSBhcyBhbG9rYXNpX2p1biwgc3VtKGFsb2thc2lfanVsKSBhcyBhbG9rYXNpX2p1bCwgc3VtKGFsb2thc2lfYWd1KSBhcyBhbG9rYXNpX2FndSwgc3VtKGFsb2thc2lfc2VwKSBhcyBhbG9rYXNpX3NlcCwgc3VtKGFsb2thc2lfb2t0KSBhcyBhbG9rYXNpX29rdCwgc3VtKGFsb2thc2lfbm9wKSBhcyBhbG9rYXNpX25vcCwgc3VtKGFsb2thc2lfZGVzKSBhcyBhbG9rYXNpX2RlcyBmcm9tIGFuZ2dhcmFuX2thcyB3aGVyZSB0YWh1bl9hbmdnYXJhbiA9ICckdGhpcy0+dGFodW5BbmdnYXJhbicgYW5kIGplbmlzX2FuZ2dhcmFuID0nJHRoaXMtPmplbmlzQW5nZ2FyYW4nIGFuZCBjb25jYXQoYzEsJy4nLGMsJy4nLGQpID0gJyRrb2RlU0tQRCcgICBhbmQgY29uY2F0KGssJy4nLGwsJy4nLG0sJy4nLG4sJy4nLG8pID0gJyRrb2RlUmVrZW5pbmcnICIpKTsKIAkJCSAka29sb21SZWtlbmluZ0phbnVhcmkgPSAiPHRkIGFsaWduPSdyaWdodCcgY2xhc3M9J0dhcmlzRGFmdGFyJyA+PGI+Ii4kdGhpcy0+bnVtYmVyRm9ybWF0KCRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9qYW4nXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9mZWInXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9tYXInXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9hcHInXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9tZWknXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9qdW4nXSwyKS4iPC90ZD4iOwoJCQkgJGtvbG9tUmVrZW5pbmdGZWJydWFyaSA9ICI8dGQgYWxpZ249J3JpZ2h0JyBjbGFzcz0nR2FyaXNEYWZ0YXInID48Yj4iLiR0aGlzLT5udW1iZXJGb3JtYXQoJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX2p1bCddICsgJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX2FndSddICsgJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX3NlcCddICsgJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX29rdCddICsgJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX25vcCddICsgJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX2RlcyddLDIpLiI8L3RkPiI7CgkJIH0KCQkJJGtvbG9tUmVrZW5pbmcgPSAiCgkgICAgICAgPHRyIGNsYXNzPSckcm93Q2xhc3MnIHZhbGlnbj0ndG9wJz4KCQkJCSAJPHRkIGFsaWduPSdjZW50ZXInIGNsYXNzPSdHYXJpc0RhZnRhcicgPiR0aGlzLT5ub21vcktvbG9tPC90ZD4KCQkJCQk8dGQgYWxpZ249J2NlbnRlcicgY2xhc3M9J0dhcmlzRGFmdGFyJyA+PC90ZD4KCQkJCSAJPHRkIGFsaWduPSdsZWZ0JyBjbGFzcz0nR2FyaXNEYWZ0YXInID48c3BhbiBzdHlsZT0nIGZvbnQtd2VpZ2h0OmJvbGQ7Jz4ka29kZVJla2VuaW5nIDwvc3Bhbj48L3RkPgoJCQkJIAk8dGQgYWxpZ249J2xlZnQnIGNsYXNzPSdHYXJpc0RhZnRhcicgPjxzcGFuIHN0eWxlPScgZm9udC13ZWlnaHQ6Ym9sZDsnPiAkbmFtYVJla2VuaW5nPC9zcGFuPjwvdGQ+CgkgICAgICAgICA8dGQgYWxpZ249J3JpZ2h0JyBjbGFzcz0nR2FyaXNEYWZ0YXInID48Yj4iLiR0aGlzLT5udW1iZXJGb3JtYXQoJGdldFRvdGFsQW5nZ2FyYW5bJ3N1bSh0b3RhbF9oYXJnYSknXSwyKS4iPC90ZD4KCQkJCQkgJGtvbG9tUmVrZW5pbmdKYW51YXJpCgkJCQkJICRrb2xvbVJla2VuaW5nRmVicnVhcmkKCQkJCQkgJGtvbG9tUmVrZW5pbmdNYXJldAoJCQkJCSAka29sb21SZWtlbmluZ0FwcmlsCgkJCQkJICRrb2xvbVJla2VuaW5nTWVpCgkJCQkJICRrb2xvbVJla2VuaW5nSnVuaQoJCQkJCSAka29sb21SZWtlbmluZ0p1bGkKCQkJCQkgJGtvbG9tUmVrZW5pbmdBZ3VzdHVzCgkJCQkJICRrb2xvbVJla2VuaW5nU2VwdGVtYmVyCgkJCQkJICRrb2xvbVJla2VuaW5nT2t0b2JlcgoJCQkJCSAka29sb21SZWtlbmluZ05vcGVtYmVyCgkJCQkJICRrb2xvbVJla2VuaW5nRGVzZW1iZXIKCSAgICAgICA8L3RyPgoJICAgICAiOwoJICAgICAkdGhpcy0+bm9tb3JLb2xvbSAgKz0gMTsKCSAgICAgJHRoaXMtPm5vbW9yQ2hlY2tCb3ggICs9IDE7CgoJICAgfQoJCSBpZigkdGhpcy0+bm9tb3JLb2xvbSAlIDIgPT0gMSl7CgkJICAgJHJvd0NsYXNzID0gInJvdzAiOwoJCSB9ZWxzZXsKCQkgICAkcm93Q2xhc3MgPSAicm93MSI7CgkJIH0KCgkJIGlmKCRmaWx0ZXJTdWJSaW5jaWFuID09ICdzaG93Jyl7CgkJCSAka29kZVJla2VuaW5nID0gJGsuIi4iLiRsLiIuIi4kbS4iLiIuJG4uIi4iLiRvOwoJCQkgaWYoJHRoaXMtPnNxbE51bVJvdygkdGhpcy0+c3FsUXVlcnkoInNlbGVjdCAqIGZyb20gcmVmX3Jla2VuaW5nIHdoZXJlIGNvbmNhdChrLCcuJyxsLCcuJyxtLCcuJyxuLCcuJyxvKSA9ICcka29kZVJla2VuaW5nJyIpKSAhPSAwKXsKCQkJCSAkZ2V0RGF0YVJla2VuaW5nID0gJHRoaXMtPnNxbEFycmF5KCR0aGlzLT5zcWxRdWVyeSgic2VsZWN0ICogZnJvbSByZWZfcmVrZW5pbmcgd2hlcmUgY29uY2F0KGssJy4nLGwsJy4nLG0sJy4nLG4sJy4nLG8pID0gJyRrb2RlUmVrZW5pbmcnIikpOwoJCQkJICRuYW1hUmVrZW5pbmcgPSAkZ2V0RGF0YVJla2VuaW5nWydubV9yZWtlbmluZyddOwoJCQkgfWVsc2V7CgkJCQkgJGtvZGVSZWtlbmluZyA9ICI8c3BhbiBzdHlsZT0nY29sb3I6cmVkJz54LngueC54eC54eHg8L3NwYW4+IjsKCQkJCSAkbmFtYVJla2VuaW5nID0gIjxzcGFuIHN0eWxlPSdjb2xvcjpyZWQnPkJlbGFuamEgeHh4PC9zcGFuPiI7CgkJCSB9CgkJCSBpZigkdmlld0Fsb2thc2kgPT0gIkJVTEFOQU4iKXsKCQkJCSAkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmcgPSAkdGhpcy0+c3FsQXJyYXkoJHRoaXMtPnNxbFF1ZXJ5KCJzZWxlY3Qgc3VtKGFsb2thc2lfamFuKSBhcyBhbG9rYXNpX2phbiwgc3VtKGFsb2thc2lfZmViKSBhcyBhbG9rYXNpX2ZlYiwgc3VtKGFsb2thc2lfbWFyKSBhcyBhbG9rYXNpX21hciwgc3VtKGFsb2thc2lfYXByKSBhcyBhbG9rYXNpX2Fwciwgc3VtKGFsb2thc2lfbWVpKSBhcyBhbG9rYXNpX21laSwgc3VtKGFsb2thc2lfanVuKSBhcyBhbG9rYXNpX2p1biwgc3VtKGFsb2thc2lfanVsKSBhcyBhbG9rYXNpX2p1bCwgc3VtKGFsb2thc2lfYWd1KSBhcyBhbG9rYXNpX2FndSwgc3VtKGFsb2thc2lfc2VwKSBhcyBhbG9rYXNpX3NlcCwgc3VtKGFsb2thc2lfb2t0KSBhcyBhbG9rYXNpX29rdCwgc3VtKGFsb2thc2lfbm9wKSBhcyBhbG9rYXNpX25vcCwgc3VtKGFsb2thc2lfZGVzKSBhcyBhbG9rYXNpX2RlcyBmcm9tIGFuZ2dhcmFuX2thcyB3aGVyZSB0YWh1bl9hbmdnYXJhbiA9ICckdGhpcy0+dGFodW5BbmdnYXJhbicgYW5kIGplbmlzX2FuZ2dhcmFuID0nJHRoaXMtPmplbmlzQW5nZ2FyYW4nIGFuZCBjb25jYXQoYzEsJy4nLGMsJy4nLGQpID0gJyRrb2RlU0tQRCcgICBhbmQgY29uY2F0KGssJy4nLGwsJy4nLG0sJy4nLG4sJy4nLG8pID0gJyRrb2RlUmVrZW5pbmcnIGFuZCBpZF9yaW5jaWFuX2JlbGFuamEgPSAnJGlkX3JpbmNpYW5fYmVsYW5qYScgYW5kIGlkX2RwYSA9ICckaWQnICIpKTsKCQkJCSAka29sb21SZWtlbmluZ0phbnVhcmk9ICI8dGQgYWxpZ249J3JpZ2h0JyBjbGFzcz0nR2FyaXNEYWZ0YXInID4iLiR0aGlzLT5udW1iZXJGb3JtYXQoJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX2phbiddLDIpLiI8L3RkPiI7CgkJCQkgJGtvbG9tUmVrZW5pbmdGZWJydWFyaT0gIjx0ZCBhbGlnbj0ncmlnaHQnIGNsYXNzPSdHYXJpc0RhZnRhcicgPiIuJHRoaXMtPm51bWJlckZvcm1hdCgkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmdbJ2Fsb2thc2lfZmViJ10sMikuIjwvdGQ+IjsKCQkJCSAka29sb21SZWtlbmluZ01hcmV0PSAiPHRkIGFsaWduPSdyaWdodCcgY2xhc3M9J0dhcmlzRGFmdGFyJyA+Ii4kdGhpcy0+bnVtYmVyRm9ybWF0KCRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9tYXInXSwyKS4iPC90ZD4iOwoJCQkJICRrb2xvbVJla2VuaW5nQXByaWw9ICI8dGQgYWxpZ249J3JpZ2h0JyBjbGFzcz0nR2FyaXNEYWZ0YXInID4iLiR0aGlzLT5udW1iZXJGb3JtYXQoJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX2FwciddLDIpLiI8L3RkPiI7CgkJCQkgJGtvbG9tUmVrZW5pbmdNZWk9ICI8dGQgYWxpZ249J3JpZ2h0JyBjbGFzcz0nR2FyaXNEYWZ0YXInID4iLiR0aGlzLT5udW1iZXJGb3JtYXQoJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX21laSddLDIpLiI8L3RkPiI7CgkJCQkgJGtvbG9tUmVrZW5pbmdKdW5pPSAiPHRkIGFsaWduPSdyaWdodCcgY2xhc3M9J0dhcmlzRGFmdGFyJyA+Ii4kdGhpcy0+bnVtYmVyRm9ybWF0KCRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9qdW4nXSwyKS4iPC90ZD4iOwoJCQkJICRrb2xvbVJla2VuaW5nSnVsaT0gIjx0ZCBhbGlnbj0ncmlnaHQnIGNsYXNzPSdHYXJpc0RhZnRhcicgPiIuJHRoaXMtPm51bWJlckZvcm1hdCgkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmdbJ2Fsb2thc2lfanVsJ10sMikuIjwvdGQ+IjsKCQkJCSAka29sb21SZWtlbmluZ0FndXN0dXM9ICI8dGQgYWxpZ249J3JpZ2h0JyBjbGFzcz0nR2FyaXNEYWZ0YXInID4iLiR0aGlzLT5udW1iZXJGb3JtYXQoJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX2FndSddLDIpLiI8L3RkPiI7CgkJCQkgJGtvbG9tUmVrZW5pbmdTZXB0ZW1iZXI9ICI8dGQgYWxpZ249J3JpZ2h0JyBjbGFzcz0nR2FyaXNEYWZ0YXInID4iLiR0aGlzLT5udW1iZXJGb3JtYXQoJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX3NlcCddLDIpLiI8L3RkPiI7CgkJCQkgJGtvbG9tUmVrZW5pbmdPa3RvYmVyPSAiPHRkIGFsaWduPSdyaWdodCcgY2xhc3M9J0dhcmlzRGFmdGFyJyA+Ii4kdGhpcy0+bnVtYmVyRm9ybWF0KCRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9va3QnXSwyKS4iPC90ZD4iOwoJCQkJICRrb2xvbVJla2VuaW5nTm9wZW1iZXI9ICI8dGQgYWxpZ249J3JpZ2h0JyBjbGFzcz0nR2FyaXNEYWZ0YXInID4iLiR0aGlzLT5udW1iZXJGb3JtYXQoJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX25vcCddLDIpLiI8L3RkPiI7CgkJCQkgJGtvbG9tUmVrZW5pbmdEZXNlbWJlcj0gIjx0ZCBhbGlnbj0ncmlnaHQnIGNsYXNzPSdHYXJpc0RhZnRhcicgPiIuJHRoaXMtPm51bWJlckZvcm1hdCgkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmdbJ2Fsb2thc2lfZGVzJ10sMikuIjwvdGQ+IjsKCQkJIH1lbHNlaWYoJHZpZXdBbG9rYXNpID09ICJUUklXVUxBTiIpewoJCQkJICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZyA9ICR0aGlzLT5zcWxBcnJheSgkdGhpcy0+c3FsUXVlcnkoInNlbGVjdCBzdW0oYWxva2FzaV9qYW4pIGFzIGFsb2thc2lfamFuLCBzdW0oYWxva2FzaV9mZWIpIGFzIGFsb2thc2lfZmViLCBzdW0oYWxva2FzaV9tYXIpIGFzIGFsb2thc2lfbWFyLCBzdW0oYWxva2FzaV9hcHIpIGFzIGFsb2thc2lfYXByLCBzdW0oYWxva2FzaV9tZWkpIGFzIGFsb2thc2lfbWVpLCBzdW0oYWxva2FzaV9qdW4pIGFzIGFsb2thc2lfanVuLCBzdW0oYWxva2FzaV9qdWwpIGFzIGFsb2thc2lfanVsLCBzdW0oYWxva2FzaV9hZ3UpIGFzIGFsb2thc2lfYWd1LCBzdW0oYWxva2FzaV9zZXApIGFzIGFsb2thc2lfc2VwLCBzdW0oYWxva2FzaV9va3QpIGFzIGFsb2thc2lfb2t0LCBzdW0oYWxva2FzaV9ub3ApIGFzIGFsb2thc2lfbm9wLCBzdW0oYWxva2FzaV9kZXMpIGFzIGFsb2thc2lfZGVzIGZyb20gYW5nZ2FyYW5fa2FzIHdoZXJlIHRhaHVuX2FuZ2dhcmFuID0gJyR0aGlzLT50YWh1bkFuZ2dhcmFuJyBhbmQgamVuaXNfYW5nZ2FyYW4gPSckdGhpcy0+amVuaXNBbmdnYXJhbicgYW5kIGNvbmNhdChjMSwnLicsYywnLicsZCkgPSAnJGtvZGVTS1BEJyAgIGFuZCBjb25jYXQoaywnLicsbCwnLicsbSwnLicsbiwnLicsbykgPSAnJGtvZGVSZWtlbmluZycgYW5kIGlkX3JpbmNpYW5fYmVsYW5qYSA9ICckaWRfcmluY2lhbl9iZWxhbmphJyBhbmQgaWRfZHBhID0gJyRpZCcgIikpOwoJCQkJICRrb2xvbVJla2VuaW5nSmFudWFyaT0gIjx0ZCBhbGlnbj0ncmlnaHQnIGNsYXNzPSdHYXJpc0RhZnRhcicgPiIuJHRoaXMtPm51bWJlckZvcm1hdCgkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmdbJ2Fsb2thc2lfamFuJ10gKyAkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmdbJ2Fsb2thc2lfZmViJ10gKyAkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmdbJ2Fsb2thc2lfbWFyJ10sMikuIjwvdGQ+IjsKCQkJCSAka29sb21SZWtlbmluZ0ZlYnJ1YXJpPSAiPHRkIGFsaWduPSdyaWdodCcgY2xhc3M9J0dhcmlzRGFmdGFyJyA+Ii4kdGhpcy0+bnVtYmVyRm9ybWF0KCRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9hcHInXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9tZWknXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9qdW4nXSwyKS4iPC90ZD4iOwoJCQkJICRrb2xvbVJla2VuaW5nTWFyZXQ9ICI8dGQgYWxpZ249J3JpZ2h0JyBjbGFzcz0nR2FyaXNEYWZ0YXInID4iLiR0aGlzLT5udW1iZXJGb3JtYXQoJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX2p1bCddICsgJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX2FndSddICsgJGdldERhdGFBbmdnYXJhbkthc1Jla2VuaW5nWydhbG9rYXNpX3NlcCddLDIpLiI8L3RkPiI7CgkJCQkgJGtvbG9tUmVrZW5pbmdBcHJpbD0gIjx0ZCBhbGlnbj0ncmlnaHQnIGNsYXNzPSdHYXJpc0RhZnRhcicgPiIuJHRoaXMtPm51bWJlckZvcm1hdCgkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmdbJ2Fsb2thc2lfb2t0J10gKyAkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmdbJ2Fsb2thc2lfbm9wJ10gKyAkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmdbJ2Fsb2thc2lfZGVzJ10sMikuIjwvdGQ+IjsKCgkJCSB9ZWxzZWlmKCR2aWV3QWxva2FzaSA9PSAiU0VNRVNURVIiKXsKCQkJCSAkZ2V0RGF0YUFuZ2dhcmFuS2FzUmVrZW5pbmcgPSAkdGhpcy0+c3FsQXJyYXkoJHRoaXMtPnNxbFF1ZXJ5KCJzZWxlY3Qgc3VtKGFsb2thc2lfamFuKSBhcyBhbG9rYXNpX2phbiwgc3VtKGFsb2thc2lfZmViKSBhcyBhbG9rYXNpX2ZlYiwgc3VtKGFsb2thc2lfbWFyKSBhcyBhbG9rYXNpX21hciwgc3VtKGFsb2thc2lfYXByKSBhcyBhbG9rYXNpX2Fwciwgc3VtKGFsb2thc2lfbWVpKSBhcyBhbG9rYXNpX21laSwgc3VtKGFsb2thc2lfanVuKSBhcyBhbG9rYXNpX2p1biwgc3VtKGFsb2thc2lfanVsKSBhcyBhbG9rYXNpX2p1bCwgc3VtKGFsb2thc2lfYWd1KSBhcyBhbG9rYXNpX2FndSwgc3VtKGFsb2thc2lfc2VwKSBhcyBhbG9rYXNpX3NlcCwgc3VtKGFsb2thc2lfb2t0KSBhcyBhbG9rYXNpX29rdCwgc3VtKGFsb2thc2lfbm9wKSBhcyBhbG9rYXNpX25vcCwgc3VtKGFsb2thc2lfZGVzKSBhcyBhbG9rYXNpX2RlcyBmcm9tIGFuZ2dhcmFuX2thcyB3aGVyZSB0YWh1bl9hbmdnYXJhbiA9ICckdGhpcy0+dGFodW5BbmdnYXJhbicgYW5kIGplbmlzX2FuZ2dhcmFuID0nJHRoaXMtPmplbmlzQW5nZ2FyYW4nIGFuZCBjb25jYXQoYzEsJy4nLGMsJy4nLGQpID0gJyRrb2RlU0tQRCcgICBhbmQgY29uY2F0KGssJy4nLGwsJy4nLG0sJy4nLG4sJy4nLG8pID0gJyRrb2RlUmVrZW5pbmcnIGFuZCBpZF9yaW5jaWFuX2JlbGFuamEgPSAnJGlkX3JpbmNpYW5fYmVsYW5qYScgYW5kIGlkX2RwYSA9ICckaWQnICIpKTsKCQkJCSAka29sb21SZWtlbmluZ0phbnVhcmkgPSAiPHRkIGFsaWduPSdyaWdodCcgY2xhc3M9J0dhcmlzRGFmdGFyJyA+Ii4kdGhpcy0+bnVtYmVyRm9ybWF0KCRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9qYW4nXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9mZWInXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9tYXInXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9hcHInXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9tZWknXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9qdW4nXSwyKS4iPC90ZD4iOwoJCQkJICRrb2xvbVJla2VuaW5nRmVicnVhcmkgPSAiPHRkIGFsaWduPSdyaWdodCcgY2xhc3M9J0dhcmlzRGFmdGFyJyA+Ii4kdGhpcy0+bnVtYmVyRm9ybWF0KCRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9qdWwnXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9hZ3UnXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9zZXAnXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9va3QnXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9ub3AnXSArICRnZXREYXRhQW5nZ2FyYW5LYXNSZWtlbmluZ1snYWxva2FzaV9kZXMnXSwyKS4iPC90ZD4iOwoJCQkgfQoJCQkgaWYoJHRoaXMtPnNxbE51bVJvdygkdGhpcy0+c3FsUXVlcnkoInNlbGVjdCAqIGZyb20gYW5nZ2FyYW5fa2FzIHdoZXJlIHRhaHVuX2FuZ2dhcmFuID0gJyR0aGlzLT50YWh1bkFuZ2dhcmFuJyBhbmQgamVuaXNfYW5nZ2FyYW4gPSckdGhpcy0+amVuaXNBbmdnYXJhbicgYW5kIGNvbmNhdChjMSwnLicsYywnLicsZCkgPSAnJGtvZGVTS1BEJyAgIGFuZCBjb25jYXQoaywnLicsbCwnLicsbSwnLicsbiwnLicsbykgPSAnJGtvZGVSZWtlbmluZycgYW5kIGlkX3JpbmNpYW5fYmVsYW5qYSA9ICckaWRfcmluY2lhbl9iZWxhbmphJyBhbmQgaWRfZHBhID0gJyRpZCcgIikpICE9MCl7CgkJCQkgJGNvbG9yQWxva2FzaSA9ICIiOwoJCQkgfWVsc2V7CgkJCQkgJGNvbG9yQWxva2FzaSA9ICJyZWQiOwoJCQkgfQoJCQkgJGtvbG9tU3ViUmluY2lhbkJlbGFuamEgPSAiCgkJCQkJPHRyIGNsYXNzPSckcm93Q2xhc3MnIHZhbGlnbj0ndG9wJyBzdHlsZT0nY29sb3I6JGNvbG9yQWxva2FzaTsnPgoJCQkJCSA8dGQgYWxpZ249J2NlbnRlcicgY2xhc3M9J0dhcmlzRGFmdGFyJyA+JHRoaXMtPm5vbW9yS29sb208L3RkPgoJCQkJCSA8dGQgYWxpZ249J2NlbnRlcicgY2xhc3M9J0dhcmlzRGFmdGFyJyA+JFRhbXBpbENoZWNrQm94PC90ZD4KCQkJCQkgPHRkIGFsaWduPSdjZW50ZXInIGNsYXNzPSdHYXJpc0RhZnRhcicgPjwvdGQ+CgkJCQkJIDx0ZCBhbGlnbj0nbGVmdCcgY2xhc3M9J0dhcmlzRGFmdGFyJyA+PHNwYW4gc3R5bGU9J21hcmdpbi1sZWZ0OjVweDsgY3Vyc29yOnBvaW50ZXI7JyBvbmNsaWNrPSR0aGlzLT5QcmVmaXgucXVpY2tDaGVja0Fsb2thc2koJGlkKTsgPi0gJHJpbmNpYW5fcGVyaGl0dW5nYW4gKCAiLiR0aGlzLT5udW1iZXJGb3JtYXQoJHZvbHVtZSkuIiBYICIuJHRoaXMtPm51bWJlckZvcm1hdCgkaGFyZ2Ffc2F0dWFuLDIpLiIpIDwvdGQ+CgkJCQkJCTx0ZCBhbGlnbj0ncmlnaHQnIGNsYXNzPSdHYXJpc0RhZnRhcicgPiIuJHRoaXMtPm51bWJlckZvcm1hdCgkdG90YWxfaGFyZ2EsMikuIjwvdGQ+CgkJCQkJCSRrb2xvbVJla2VuaW5nSmFudWFyaQoJCQkJCQkka29sb21SZWtlbmluZ0ZlYnJ1YXJpCgkJCQkJCSRrb2xvbVJla2VuaW5nTWFyZXQKCQkJCQkJJGtvbG9tUmVrZW5pbmdBcHJpbAoJCQkJCQkka29sb21SZWtlbmluZ01laQoJCQkJCQkka29sb21SZWtlbmluZ0p1bmkKCQkJCQkJJGtvbG9tUmVrZW5pbmdKdWxpCgkJCQkJCSRrb2xvbVJla2VuaW5nQWd1c3R1cwoJCQkJCQkka29sb21SZWtlbmluZ1NlcHRlbWJlcgoJCQkJCQkka29sb21SZWtlbmluZ09rdG9iZXIKCQkJCQkJJGtvbG9tUmVrZW5pbmdOb3BlbWJlcgoJCQkJCQkka29sb21SZWtlbmluZ0Rlc2VtYmVyCgkJCQkJPC90cj4KCQkJCSI7CgkJCQkkdGhpcy0+bm9tb3JLb2xvbSAgKz0gMTsKCQkJCSR0aGlzLT5ub21vckNoZWNrQm94ICArPSAxOwoKCQkgfQoKCiAgICAkS29sb21zID0gYXJyYXkoCiAgICAgIGFycmF5KCJWdWxuV2Fsa2VyIiwgJGtvbG9tUHJvZ3JhbS4ka29sb21LZWdpYXRhbi4ka29sb21SZWtlbmluZy4ka29sb21SaW5jaWFuQmVsYW5qYS4ka29sb21TdWJSaW5jaWFuQmVsYW5qYSkKICAgICApOwoJCSByZXR1cm4gJEtvbG9tczsKCX0KCgoKICBmdW5jdGlvbiBnZW5EYWZ0YXJPcHNpKCl7CiAgIGdsb2JhbCAkUmVmLCAkTWFpbjsKCSBmb3JlYWNoICgkX1JFUVVFU1QgYXMgJGtleSA9PiAkdmFsdWUpewoJCQkJICQka2V5ID0gJHZhbHVlOwoJIH0KCSBpZighaXNzZXQoJGZpbHRlclVydXNhbikpJGZpbHRlclVydXNhbiA9ICRfQ09PS0lFWydjb2ZtVVJVU0FOJ107CgkgaWYoIWlzc2V0KCRmaWx0ZXJCaWRhbmcpKSRmaWx0ZXJCaWRhbmcgPSAkX0NPT0tJRVsnY29mbVNLUEQnXTsKCSBpZighaXNzZXQoJGZpbHRlclNLUEQpKSRmaWx0ZXJTS1BEID0gJF9DT09LSUVbJ2NvZm1VTklUJ107CgoJICRrb25kaXNpU0tQRC49ICIgYW5kIGMxID0gJyRmaWx0ZXJVcnVzYW4nICI7CgkgJGtvbmRpc2lTS1BELj0gIiBhbmQgYyA9ICckZmlsdGVyQmlkYW5nJyAiOwoJICRrb25kaXNpU0tQRC49ICIgYW5kIGQgPSAnJGZpbHRlclNLUEQnICI7CgkgaWYoIWlzc2V0KCRfUkVRVUVTVFsnanVtbGFoRGF0YSddKSkkanVtbGFoRGF0YT01MDsKCQkJJGFycmF5QmVsYW5qYSA9IGFycmF5KAoJCQkJCQkgICBhcnJheSgnQkVMQU5KQSBQRUdBV0FJJywnQkVMQU5KQSBQRUdBV0FJJyksCgkJCQkJCSAgIGFycmF5KCdCRUxBTkpBIEJFTEFOSkEgQkFSQU5HICYgSkFTQScsJ0JFTEFOSkEgQkFSQU5HICYgSkFTQScpLAoJCQkJCQkgICBhcnJheSgnQkVMQU5KQSBNT0RBTCcsJ0JFTEFOSkEgTU9EQUwnKSwKCQkJCQkpOwoJCQkkY21iQmVsYW5qYSA9IGNtYkFycmF5KCdmaWx0ZXJCZWxhbmphJywkX1JFUVVFU1RbJ2ZpbHRlckJlbGFuamEnXSwkYXJyYXlCZWxhbmphLCctLSBKRU5JUyBCRUxBTkpBLS0nLCJvbkNoYW5nZT0kdGhpcy0+UHJlZml4LnJlZnJlc2hMaXN0KHRydWUpIik7CgkJCWlmKCFlbXB0eSgkX1JFUVVFU1RbJ2ZpbHRlclEnXSkpewoJCQkJJGtvZGVTS1BEID0gJGZpbHRlclVydXNhbi4iLiIuJGZpbHRlckJpZGFuZy4iLiIuJGZpbHRlclNLUEQ7CgkJCQkka29kZVByb2dyYW1LZWdpYXRhbiA9ICRmaWx0ZXJDb25jYXRQcm9ncmFtLiIuIi4kZmlsdGVyUTsKCQkJCWlmKCFlbXB0eSgkZmlsdGVyQmVsYW5qYSkpewoJCQkJCWlmKCRmaWx0ZXJCZWxhbmphID09ICdCRUxBTkpBIFBFR0FXQUknKXsKCQkJCQkJJGtvbmRpc2lGaWx0ZXJCZWxhbmphID0gIiBhbmQgaz0nNScgYW5kIGwgPScyJyBhbmQgbT0nMSciOwoJCQkJCX1lbHNlaWYoJGZpbHRlckJlbGFuamEgPT0gJ0JFTEFOSkEgQkVMQU5KQSBCQVJBTkcgJiBKQVNBJyl7CgkJCQkJCSRrb25kaXNpRmlsdGVyQmVsYW5qYSA9ICIgYW5kIGs9JzUnIGFuZCBsID0nMicgYW5kIG09JzInIjsKCQkJCQl9ZWxzZWlmKCRmaWx0ZXJCZWxhbmphID09ICdCRUxBTkpBIE1PREFMJyl7CgkJCQkJCSRrb25kaXNpRmlsdGVyQmVsYW5qYSA9ICIgYW5kIGs9JzUnIGFuZCBsID0nMicgYW5kIG09JzMnIjsKCQkJCQl9CgkJCQl9CgoJCQl9CgkJICAkVGFtcGlsT3B0ID0KICAgICAgICAgIGdlbkZpbHRlckJhcihhcnJheSgkdGhpcy0+Z2VuRmlsdGVyU0tQRCgkdGhpcy0+UHJlZml4LCR0aGlzLT5QcmVmaXguJ0ZpbHRlclNLUEQnLCcxMDAlJywnMTQ1cHgnKSksJycsJycsJycpLgoJCQkJCQkkdGhpcy0+Z2VuRmlsdGVyQmFyVFIoCgkJCQkJCQlhcnJheSgKCQkJCQkJCSI8ZGl2IHN0eWxlPSdmbG9hdDogbGVmdDsgd2lkdGg6MTAwJTsgaGVpZ2h0OiBhdXRvOyBwYWRkaW5nOiA0cHg7Jz4KCgkJCQkJCTx0YWJsZSB3aWR0aD1cIjEwMCVcIiAgID4KCQkJCQkJCSA8dHI+CgkJCQkJCQkJIDx0ZCB3aWR0aD0nMTA4cHgnPkFMT0tBU0k8L3RkPgoJCQkJCQkJCSA8dGQgd2lkdGg9JzEwJz46PC90ZD4KCQkJCQkJCQkgPHRkID4KCQkJCQkJCQkgIi4kdGhpcy0+cmFkaW9BbG9rYXNpKCR2aWV3QWxva2FzaSkuIgoJCQkJCQkJCSA8L3RkPgoJCQkJCQkJIDwvdHI+CgkJCQkJCQkgPHRyPgoJCQkJCQkJCTx0ZCB3aWR0aD0nMTA4cHgnPlRBTVBJTDwvdGQ+CgkJCQkJCQkJPHRkIHdpZHRoPScxMCc+OjwvdGQ+CgkJCQkJCQkJPHRkID4KCQkJCQkJCQkiLiR0aGlzLT5jaGVja1RhbXBpbCgpLiIKCQkJCQkJCQk8L3RkPgoJCQkJCQkJPC90cj4KCQkgIAkJCTwvdGFibGU+CgkJCQkJCTwvZGl2PiIKCQkJCQkpLCcnLCcnLCcnKS4KCQkJCQlnZW5GaWx0ZXJCYXIoCiAgICAgICAgICAgIGFycmF5KAogICAgICAgICAgICAgICJUQUhVTiBBTkdHQVJBTiAmbmJzcCAmbmJzcCA8aW5wdXQgdHlwZT0ndGV4dCcgdmFsdWU9JyIuJHRoaXMtPnRhaHVuQW5nZ2FyYW4uIicgc3R5bGU9J3dpZHRoOjQwcHg7JyByZWFkb25seT4mbmJzcCAmbmJzcCAmbmJzcCAmbmJzcCBKVU1MQUggREFUQSAmbmJzcCAmbmJzcCA8aW5wdXQgdHlwZT0ndGV4dCcgbmFtZSA9J2p1bWxhaERhdGEnIGlkPSdqdW1sYWhEYXRhJyB2YWx1ZSA9JyRqdW1sYWhEYXRhJyBzdHlsZT0nd2lkdGg6NDBweDsnPiAgJm5ic3AgPGlucHV0IHR5cGU9J2J1dHRvbicgb25jbGljayA9JHRoaXMtPlByZWZpeC5yZWZyZXNoTGlzdCh0cnVlKTsgdmFsdWU9J1RhbXBpbGthbic+IgogICAgICAgICAgKSwnJywnJywnJykgOwogICAgcmV0dXJuIGFycmF5KCdUYW1waWxPcHQnPT4kVGFtcGlsT3B0KTsKICB9CglmdW5jdGlvbiByYWRpb0Fsb2thc2koJHZhbHVlUmFkaW8pewoJCXN3aXRjaCAoJHZhbHVlUmFkaW8pIHsKCQkJY2FzZSAnTk9ORSc6CgkJCQkkb25Ob25lPSAiY2hlY2tlZCI7CgkJCQlicmVhazsKCQkJY2FzZSAnQlVMQU5BTic6CgkJCQkkb25CdWxhbmFuPSAiY2hlY2tlZCI7CgkJCQlicmVhazsKCQkJY2FzZSAnVFJJV1VMQU4nOgoJCQkJJG9uVHJpd3VsYW49ICJjaGVja2VkIjsKCQkJCWJyZWFrOwoJCQljYXNlICdTRU1FU1RFUic6CgkJCQkkb25TZW1lc3Rlcj0gImNoZWNrZWQiOwoJCQkJYnJlYWs7CgkJCWRlZmF1bHQ6CgkJCQkkb25Ob25lPSAiY2hlY2tlZCI7CgkJCQlicmVhazsKCQl9CgoJCSRyYWRpb0FMb2thc2kgPSAiCgkJPGlucHV0IHR5cGU9J3JhZGlvJyBuYW1lPSd2aWV3QWxva2FzaScgJG9uTm9uZSB2YWx1ZT0nTk9ORScgb25jbGljaz0kdGhpcy0+UHJlZml4LnZpZXdBbG9rYXNpKCk+IE5PTkUgJm5ic3AKCQk8aW5wdXQgdHlwZT0ncmFkaW8nIG5hbWU9J3ZpZXdBbG9rYXNpJyAkb25CdWxhbmFuIHZhbHVlPSdCVUxBTkFOJyBvbmNsaWNrPSR0aGlzLT5QcmVmaXgudmlld0Fsb2thc2koKT4gQlVMQU5BTiAmbmJzcAoJCTxpbnB1dCB0eXBlPSdyYWRpbycgbmFtZT0ndmlld0Fsb2thc2knICRvblRyaXd1bGFuIHZhbHVlPSdUUklXVUxBTicgb25jbGljaz0kdGhpcy0+UHJlZml4LnZpZXdBbG9rYXNpKCk+IFRSSVdVTEFOICZuYnNwCgkJPGlucHV0IHR5cGU9J3JhZGlvJyBuYW1lPSd2aWV3QWxva2FzaScgJG9uU2VtZXN0ZXIgdmFsdWU9J1NFTUVTVEVSJyBvbmNsaWNrPSR0aGlzLT5QcmVmaXgudmlld0Fsb2thc2koKT4gU0VNRVNURVIgJm5ic3AKCQkiOwoJCXJldHVybiAkcmFkaW9BTG9rYXNpOwoJfQoJZnVuY3Rpb24gY2hlY2tUYW1waWwoKXsKCQlmb3JlYWNoICgkX1JFUVVFU1QgYXMgJGtleSA9PiAkdmFsdWUpIHsKCQkJCQkkJGtleSA9ICR2YWx1ZTsKCQl9CgoJCWlmKCFpc3NldCgkX1JFUVVFU1RbJ2ZpbHRlclN1YlJpbmNpYW4nXSkpewoJCQkkZmlsdGVyU3ViUmluY2lhbj0gJ3Nob3cnOwoJCX0KCQlpZigkZmlsdGVyU3ViUmluY2lhbiA9PSAnc2hvdycpJHN0YXR1c0NoZWNrU3ViUmluY2lhbkJlbGFuamEgPSAiY2hlY2tlZCI7CgkJJHJhZGlvQUxva2FzaSA9ICIKCQk8aW5wdXQgdHlwZT0nY2hlY2tib3gnIGlkPSdjaGVja0JveFNob3dTdWJSaW5jaWFuQmVsYW5qYScgICAkc3RhdHVzQ2hlY2tTdWJSaW5jaWFuQmVsYW5qYSBvbkNoYW5nZT0kdGhpcy0+UHJlZml4LmNoZWNrQm94U3ViUmluY2lhbkJlbGFuamFDaGFuZ2VkKCk7PiBSaW5jaWFuIFBlbmRhcGF0YW4KCQk8aW5wdXQgdHlwZT0naGlkZGVuJyBuYW1lPSdmaWx0ZXJTdWJSaW5jaWFuJyBpZD0nZmlsdGVyU3ViUmluY2lhbicgIHZhbHVlPSckZmlsdGVyU3ViUmluY2lhbicgID4KCQkiOwoJCXJldHVybiAkcmFkaW9BTG9rYXNpOwoJfQoKICBmdW5jdGlvbiBnZXREYWZ0YXJPcHNpKCRNb2RlPTEpewogICAgZ2xvYmFsICRNYWluLCAkSFRUUF9DT09LSUVfVkFSUzsKICAgICRVSUQgPSAkX0NPT0tJRVsnY29JRCddOwogICAgLy9rb25kaXNpIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAkYXJyS29uZGlzaSA9IGFycmF5KCk7CiAgICBmb3JlYWNoICgkX1JFUVVFU1QgYXMgJGtleSA9PiAkdmFsdWUpIHsKICAgICAgICAgICQka2V5ID0gJHZhbHVlOwogICAgfQogICAgaWYoJGZpbHRlclVydXNhbiAhPScwMCcpewogICAgICAgICRhcnJLb25kaXNpW10gPSAiYzEgPSAnJGZpbHRlclVydXNhbiciOwogICAgICAgICRrb25kaXNpU0tQRCAuPSAiIGFuZCBjMT0nJGZpbHRlclVydXNhbiciOwogICAgfQogICAgaWYoJGZpbHRlckJpZGFuZyAhPScwMCcpewogICAgICAgICRhcnJLb25kaXNpW10gPSAiYyA9ICckZmlsdGVyQmlkYW5nJyI7CiAgICAgICAgJGtvbmRpc2lTS1BEIC49ICIgYW5kIGM9JyRmaWx0ZXJCaWRhbmcnIjsKICAgIH0KICAgIGlmKCRmaWx0ZXJTS1BEICE9JzAwJyl7CiAgICAgICAgJGFycktvbmRpc2lbXSA9ICJkID0gJyRmaWx0ZXJTS1BEJyI7CiAgICAgICAgJGtvbmRpc2lTS1BEIC49ICIgYW5kIGQ9JyRmaWx0ZXJTS1BEJyI7CiAgICB9CgoKCQkkYXJyS29uZGlzaVtdID0gImplbmlzX2RwYSA9ICckdGhpcy0+amVuaXNEUEEnICR0aGlzLT5rb25kaXNpUmVrZW5pbmciOwoKICAgICRLb25kaXNpPSBqb2luKCcgYW5kICcsJGFycktvbmRpc2kpOwogICAgJEtvbmRpc2kgPSAkS29uZGlzaSA9PScnID8gJyc6JyBXaGVyZSAnLiRLb25kaXNpIDsKICAgIC8vT3JkZXIgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgJGZtT1JERVIxID0gY2VrUE9TVCgnZm1PUkRFUjEnKTsKICAgICRmbURFU0MxID0gY2VrUE9TVCgnZm1ERVNDMScpOwogICAgJEFzYzEgPSAkZm1ERVNDMSA9PScnPyAnJzogJ2Rlc2MnOwogICAgJGFyck9yZGVycyA9IGFycmF5KCk7CgkJJGFyck9yZGVyc1tdID0iayxsLG0sbixvLGMxLGMsZCxpZF9yaW5jaWFuX2JlbGFuamEsaWRfYnVrdV9pbmR1ayI7CiAgICAkT3JkZXI9IGpvaW4oJywnLCRhcnJPcmRlcnMpOwogICAgJE9yZGVyRGVmYXVsdCA9ICcnOwogICAgJE9yZGVyID0gICRPcmRlciA9PScnPyAkT3JkZXJEZWZhdWx0IDogJyBPcmRlciBCeSAnLiRPcmRlcjsKCiAgICBpZihlbXB0eSgkanVtbGFoRGF0YSkpJGp1bWxhaERhdGEgPTUwOwogICAgJHRoaXMtPnBhZ2VQZXJIYWwgPSAkanVtbGFoRGF0YTsKICAgICRwYWdlUGVySGFsID0gJHRoaXMtPnBhZ2VQZXJIYWwgPT0nJyA\/ICRNYWluLT5QYWdlUGVySGFsOiAkdGhpcy0+cGFnZVBlckhhbDsKICAgICRIYWxEZWZhdWx0PWNla1BPU1QoJHRoaXMtPlByZWZpeC4nX2hhbCcsMSk7CiAgICAvLyRMaW1pdCA9ICIgbGltaXQgIi4oKCRIYWxEZWZhdWx0ICAqMSkgLSAxKSAqICRNYWluLT5QYWdlUGVySGFsLiIsIi4kTWFpbi0+UGFnZVBlckhhbDsgLy8kTGltaXRIYWwgPSAnJzsKICAgICRMaW1pdCA9ICIgbGltaXQgIi4oKCRIYWxEZWZhdWx0ICAqMSkgLSAxKSAqICRwYWdlUGVySGFsLiIsIi4kcGFnZVBlckhhbCA7IC8vJExpbWl0SGFsID0gJyc7CiAgICAkTGltaXQgPSAkTW9kZSA9PSAzID8gJyc6ICRMaW1pdDsKICAgIC8vbm9hd2FsIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgJE5vQXdhbD0gJHBhZ2VQZXJIYWwgKiAoKCRIYWxEZWZhdWx0KjEpIC0gMSk7CiAgICAkTm9Bd2FsID0gJE1vZGUgPT0gMyA\",
    "size": "121215"
}