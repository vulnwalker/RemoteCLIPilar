{
    "namaFile": "pages\/admin\/menu\/assets\/js\/libs\/moment\/langs.js",
    "lastUpdate": "2018-03-22+14:23:28.01",
    "contentFile": "Ly8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiBNb3JvY2NhbiBBcmFiaWMgKGFyLW1hKQovLyBhdXRob3IgOiBFbEZhZGlsaSBZYXNzaW5lIDogaHR0cHM6Ly9naXRodWIuY29tL0VsRmFkaWxpWQovLyBhdXRob3IgOiBBYmRlbCBTYWlkIDogaHR0cHM6Ly9naXRodWIuY29tL2FiZGVsc2FpZAoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQubGFuZygnYXItbWEnLCB7CiAgICAgICAgbW9udGhzIDogItmK2YbYp9mK2LFf2YHYqNix2KfZitixX9mF2KfYsdizX9ij2KjYsdmK2YRf2YXYp9mKX9mK2YjZhtmK2Yhf2YrZiNmE2YrZiNiyX9i62LTYql\/YtNiq2YbYqNixX9ij2YPYqtmI2KjYsV\/ZhtmI2YbYqNixX9iv2KzZhtio2LEiLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAi2YrZhtin2YrYsV\/Zgdio2LHYp9mK2LFf2YXYp9ix2LNf2KPYqNix2YrZhF\/Zhdin2Ypf2YrZiNmG2YrZiF\/ZitmI2YTZitmI2LJf2LrYtNiqX9i02KrZhtio2LFf2KPZg9iq2YjYqNixX9mG2YjZhtio2LFf2K\/YrNmG2KjYsSIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5cyA6ICLYp9mE2KPYrdivX9in2YTYpdiq2YbZitmGX9in2YTYq9mE2KfYq9in2KFf2KfZhNij2LHYqNi52KfYoV\/Yp9mE2K7ZhdmK2LNf2KfZhNis2YXYudipX9in2YTYs9io2KoiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICLYp9it2K9f2KfYqtmG2YrZhl\/Yq9mE2KfYq9in2KFf2KfYsdio2LnYp9ihX9iu2YXZitizX9is2YXYudipX9iz2KjYqiIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICLYrV\/Zhl\/Yq1\/YsV\/Yrl\/YrF\/YsyIuc3BsaXQoIl8iKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAiSEg6bW0iLAogICAgICAgICAgICBMIDogIkREL01NL1lZWVkiLAogICAgICAgICAgICBMTCA6ICJEIE1NTU0gWVlZWSIsCiAgICAgICAgICAgIExMTCA6ICJEIE1NTU0gWVlZWSBMVCIsCiAgICAgICAgICAgIExMTEwgOiAiZGRkZCBEIE1NTU0gWVlZWSBMVCIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5OiAiW9in2YTZitmI2YUg2LnZhNmJINin2YTYs9in2LnYqV0gTFQiLAogICAgICAgICAgICBuZXh0RGF5OiAnW9i62K\/YpyDYudmE2Ykg2KfZhNiz2KfYudipXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrOiAnZGRkZCBb2LnZhNmJINin2YTYs9in2LnYqV0gTFQnLAogICAgICAgICAgICBsYXN0RGF5OiAnW9ij2YXYsyDYudmE2Ykg2KfZhNiz2KfYudipXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrOiAnZGRkZCBb2LnZhNmJINin2YTYs9in2LnYqV0gTFQnLAogICAgICAgICAgICBzYW1lRWxzZTogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICLZgdmKICVzIiwKICAgICAgICAgICAgcGFzdCA6ICLZhdmG2LAgJXMiLAogICAgICAgICAgICBzIDogItir2YjYp9mGIiwKICAgICAgICAgICAgbSA6ICLYr9mC2YrZgtipIiwKICAgICAgICAgICAgbW0gOiAiJWQg2K\/Zgtin2KbZgiIsCiAgICAgICAgICAgIGggOiAi2LPYp9i52KkiLAogICAgICAgICAgICBoaCA6ICIlZCDYs9in2LnYp9iqIiwKICAgICAgICAgICAgZCA6ICLZitmI2YUiLAogICAgICAgICAgICBkZCA6ICIlZCDYo9mK2KfZhSIsCiAgICAgICAgICAgIE0gOiAi2LTZh9ixIiwKICAgICAgICAgICAgTU0gOiAiJWQg2KPYtNmH2LEiLAogICAgICAgICAgICB5IDogItiz2YbYqSIsCiAgICAgICAgICAgIHl5IDogIiVkINiz2YbZiNin2KoiCiAgICAgICAgfSwKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiA2LCAvLyBTYXR1cmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiAxMiAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gMXN0IGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7CgovLyBtb21lbnQuanMgbGFuZ3VhZ2UgY29uZmlndXJhdGlvbgovLyBsYW5ndWFnZSA6IEFyYWJpYyAoYXIpCi8vIGF1dGhvciA6IEFiZGVsIFNhaWQgOiBodHRwczovL2dpdGh1Yi5jb20vYWJkZWxzYWlkCi8vIGNoYW5nZXMgaW4gbW9udGhzLCB3ZWVrZGF5cyA6IEFobWVkIEVsa2hhdGliCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5sYW5nKCdhcicsIHsKICAgICAgICBtb250aHMgOiAi2YrZhtin2YrYsS8g2YPYp9mG2YjZhiDYp9mE2KvYp9mG2Ypf2YHYqNix2KfZitixLyDYtNio2KfYt1\/Zhdin2LHYsy8g2KLYsNin2LFf2KPYqNix2YrZhC8g2YbZitiz2KfZhl\/Zhdin2YrZiC8g2KPZitin2LFf2YrZiNmG2YrZiC8g2K3YstmK2LHYp9mGX9mK2YjZhNmK2YgvINiq2YXZiNiyX9ij2LrYs9i32LMvINii2Khf2LPYqNiq2YXYqNixLyDYo9mK2YTZiNmEX9ij2YPYqtmI2KjYsS8g2KrYtNix2YrZhiDYp9mE2KPZiNmEX9mG2YjZgdmF2KjYsS8g2KrYtNix2YrZhiDYp9mE2KvYp9mG2Ypf2K\/Zitiz2YXYqNixLyDZg9in2YbZiNmGINin2YTYo9mI2YQiLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAi2YrZhtin2YrYsS8g2YPYp9mG2YjZhiDYp9mE2KvYp9mG2Ypf2YHYqNix2KfZitixLyDYtNio2KfYt1\/Zhdin2LHYsy8g2KLYsNin2LFf2KPYqNix2YrZhC8g2YbZitiz2KfZhl\/Zhdin2YrZiC8g2KPZitin2LFf2YrZiNmG2YrZiC8g2K3YstmK2LHYp9mGX9mK2YjZhNmK2YgvINiq2YXZiNiyX9ij2LrYs9i32LMvINii2Khf2LPYqNiq2YXYqNixLyDYo9mK2YTZiNmEX9ij2YPYqtmI2KjYsS8g2KrYtNix2YrZhiDYp9mE2KPZiNmEX9mG2YjZgdmF2KjYsS8g2KrYtNix2YrZhiDYp9mE2KvYp9mG2Ypf2K\/Zitiz2YXYqNixLyDZg9in2YbZiNmGINin2YTYo9mI2YQiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAi2KfZhNij2K3Yr1\/Yp9mE2KXYq9mG2YrZhl\/Yp9mE2KvZhNin2KvYp9ihX9in2YTYo9ix2KjYudin2KFf2KfZhNiu2YXZitizX9in2YTYrNmF2LnYqV\/Yp9mE2LPYqNiqIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAi2KfZhNij2K3Yr1\/Yp9mE2KXYq9mG2YrZhl\/Yp9mE2KvZhNin2KvYp9ihX9in2YTYo9ix2KjYudin2KFf2KfZhNiu2YXZitizX9in2YTYrNmF2LnYqV\/Yp9mE2LPYqNiqIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogItitX9mGX9irX9ixX9iuX9isX9izIi5zcGxpdCgiXyIpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICJISDptbSIsCiAgICAgICAgICAgIEwgOiAiREQvTU0vWVlZWSIsCiAgICAgICAgICAgIExMIDogIkQgTU1NTSBZWVlZIiwKICAgICAgICAgICAgTExMIDogIkQgTU1NTSBZWVlZIExUIiwKICAgICAgICAgICAgTExMTCA6ICJkZGRkIEQgTU1NTSBZWVlZIExUIgogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICJb2KfZhNmK2YjZhSDYudmE2Ykg2KfZhNiz2KfYudipXSBMVCIsCiAgICAgICAgICAgIG5leHREYXk6ICdb2LrYr9inINi52YTZiSDYp9mE2LPYp9i52KldIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6ICdkZGRkIFvYudmE2Ykg2KfZhNiz2KfYudipXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXk6ICdb2KPZhdizINi52YTZiSDYp9mE2LPYp9i52KldIExUJywKICAgICAgICAgICAgbGFzdFdlZWs6ICdkZGRkIFvYudmE2Ykg2KfZhNiz2KfYudipXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogItmB2YogJXMiLAogICAgICAgICAgICBwYXN0IDogItmF2YbYsCAlcyIsCiAgICAgICAgICAgIHMgOiAi2KvZiNin2YYiLAogICAgICAgICAgICBtIDogItiv2YLZitmC2KkiLAogICAgICAgICAgICBtbSA6ICIlZCDYr9mC2KfYptmCIiwKICAgICAgICAgICAgaCA6ICLYs9in2LnYqSIsCiAgICAgICAgICAgIGhoIDogIiVkINiz2KfYudin2KoiLAogICAgICAgICAgICBkIDogItmK2YjZhSIsCiAgICAgICAgICAgIGRkIDogIiVkINij2YrYp9mFIiwKICAgICAgICAgICAgTSA6ICLYtNmH2LEiLAogICAgICAgICAgICBNTSA6ICIlZCDYo9i02YfYsSIsCiAgICAgICAgICAgIHkgOiAi2LPZhtipIiwKICAgICAgICAgICAgeXkgOiAiJWQg2LPZhtmI2KfYqiIKICAgICAgICB9LAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDYsIC8vIFNhdHVyZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDEyICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiAxc3QgaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogYnVsZ2FyaWFuIChiZykKLy8gYXV0aG9yIDogS3Jhc2VuIEJvcmlzb3YgOiBodHRwczovL2dpdGh1Yi5jb20va3JhegoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQubGFuZygnYmcnLCB7CiAgICAgICAgbW9udGhzIDogItGP0L3Rg9Cw0YDQuF\/RhNC10LLRgNGD0LDRgNC4X9C80LDRgNGCX9Cw0L\/RgNC40Ltf0LzQsNC5X9GO0L3QuF\/RjtC70Lhf0LDQstCz0YPRgdGCX9GB0LXQv9GC0LXQvNCy0YDQuF\/QvtC60YLQvtC80LLRgNC4X9C90L7QtdC80LLRgNC4X9C00LXQutC10LzQstGA0LgiLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAi0Y\/QvdGAX9GE0LXQsl\/QvNCw0YBf0LDQv9GAX9C80LDQuV\/RjtC90Lhf0Y7Qu9C4X9Cw0LLQs1\/RgdC10L9f0L7QutGCX9C90L7QtV\/QtNC10LoiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAi0L3QtdC00LXQu9GPX9C\/0L7QvdC10LTQtdC70L3QuNC6X9Cy0YLQvtGA0L3QuNC6X9GB0YDRj9C00LBf0YfQtdGC0LLRitGA0YLRitC6X9C\/0LXRgtGK0Lpf0YHRitCx0L7RgtCwIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAi0L3QtdC0X9C\/0L7QvV\/QstGC0L5f0YHRgNGPX9GH0LXRgl\/Qv9C10YJf0YHRitCxIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogItC90LRf0L\/QvV\/QstGCX9GB0YBf0YfRgl\/Qv9GCX9GB0LEiLnNwbGl0KCJfIiksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogIkg6bW0iLAogICAgICAgICAgICBMIDogIkQuTU0uWVlZWSIsCiAgICAgICAgICAgIExMIDogIkQgTU1NTSBZWVlZIiwKICAgICAgICAgICAgTExMIDogIkQgTU1NTSBZWVlZIExUIiwKICAgICAgICAgICAgTExMTCA6ICJkZGRkLCBEIE1NTU0gWVlZWSBMVCIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1vQlNC90LXRgSDQsl0gTFQnLAogICAgICAgICAgICBuZXh0RGF5IDogJ1vQo9GC0YDQtSDQsl0gTFQnLAogICAgICAgICAgICBuZXh0V2VlayA6ICdkZGRkIFvQsl0gTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1vQktGH0LXRgNCwINCyXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrIDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgc3dpdGNoICh0aGlzLmRheSgpKSB7CiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdb0JIg0LjQt9C80LjQvdCw0LvQsNGC0LBdIGRkZGQgW9CyXSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdb0JIg0LjQt9C80LjQvdCw0LvQuNGPXSBkZGRkIFvQsl0gTFQnOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAi0YHQu9C10LQgJXMiLAogICAgICAgICAgICBwYXN0IDogItC\/0YDQtdC00LggJXMiLAogICAgICAgICAgICBzIDogItC90Y\/QutC+0LvQutC+INGB0LXQutGD0L3QtNC4IiwKICAgICAgICAgICAgbSA6ICLQvNC40L3Rg9GC0LAiLAogICAgICAgICAgICBtbSA6ICIlZCDQvNC40L3Rg9GC0LgiLAogICAgICAgICAgICBoIDogItGH0LDRgSIsCiAgICAgICAgICAgIGhoIDogIiVkINGH0LDRgdCwIiwKICAgICAgICAgICAgZCA6ICLQtNC10L0iLAogICAgICAgICAgICBkZCA6ICIlZCDQtNC90LgiLAogICAgICAgICAgICBNIDogItC80LXRgdC10YYiLAogICAgICAgICAgICBNTSA6ICIlZCDQvNC10YHQtdGG0LAiLAogICAgICAgICAgICB5IDogItCz0L7QtNC40L3QsCIsCiAgICAgICAgICAgIHl5IDogIiVkINCz0L7QtNC40L3QuCIKICAgICAgICB9LAogICAgICAgIG9yZGluYWwgOiBmdW5jdGlvbiAobnVtYmVyKSB7CiAgICAgICAgICAgIHZhciBsYXN0RGlnaXQgPSBudW1iZXIgJSAxMCwKICAgICAgICAgICAgICAgIGxhc3QyRGlnaXRzID0gbnVtYmVyICUgMTAwOwogICAgICAgICAgICBpZiAobnVtYmVyID09PSAwKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJy3QtdCyJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChsYXN0MkRpZ2l0cyA9PT0gMCkgewogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICct0LXQvSc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobGFzdDJEaWdpdHMgPiAxMCAmJiBsYXN0MkRpZ2l0cyA8IDIwKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJy3RgtC4JzsKICAgICAgICAgICAgfSBlbHNlIGlmIChsYXN0RGlnaXQgPT09IDEpIHsKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAnLdCy0LgnOwogICAgICAgICAgICB9IGVsc2UgaWYgKGxhc3REaWdpdCA9PT0gMikgewogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICct0YDQuCc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobGFzdERpZ2l0ID09PSA3IHx8IGxhc3REaWdpdCA9PT0gOCkgewogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICct0LzQuCc7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJy3RgtC4JzsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDcgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDFzdCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiBicmV0b24gKGJyKQovLyBhdXRob3IgOiBKZWFuLUJhcHRpc3RlIExlIER1aWdvdSA6IGh0dHBzOi8vZ2l0aHViLmNvbS9qYmxlZHVpZ291CgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgZnVuY3Rpb24gcmVsYXRpdmVUaW1lV2l0aE11dGF0aW9uKG51bWJlciwgd2l0aG91dFN1ZmZpeCwga2V5KSB7CiAgICAgICAgdmFyIGZvcm1hdCA9IHsKICAgICAgICAgICAgJ21tJzogIm11bnV0ZW5uIiwKICAgICAgICAgICAgJ01NJzogIm1peiIsCiAgICAgICAgICAgICdkZCc6ICJkZXZlemgiCiAgICAgICAgfTsKICAgICAgICByZXR1cm4gbnVtYmVyICsgJyAnICsgbXV0YXRpb24oZm9ybWF0W2tleV0sIG51bWJlcik7CiAgICB9CgogICAgZnVuY3Rpb24gc3BlY2lhbE11dGF0aW9uRm9yWWVhcnMobnVtYmVyKSB7CiAgICAgICAgc3dpdGNoIChsYXN0TnVtYmVyKG51bWJlcikpIHsKICAgICAgICBjYXNlIDE6CiAgICAgICAgY2FzZSAzOgogICAgICAgIGNhc2UgNDoKICAgICAgICBjYXNlIDU6CiAgICAgICAgY2FzZSA5OgogICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJyBibG9heic7CiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICcgdmxvYXonOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBsYXN0TnVtYmVyKG51bWJlcikgewogICAgICAgIGlmIChudW1iZXIgPiA5KSB7CiAgICAgICAgICAgIHJldHVybiBsYXN0TnVtYmVyKG51bWJlciAlIDEwKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIG51bWJlcjsKICAgIH0KCiAgICBmdW5jdGlvbiBtdXRhdGlvbih0ZXh0LCBudW1iZXIpIHsKICAgICAgICBpZiAobnVtYmVyID09PSAyKSB7CiAgICAgICAgICAgIHJldHVybiBzb2Z0TXV0YXRpb24odGV4dCk7CiAgICAgICAgfQogICAgICAgIHJldHVybiB0ZXh0OwogICAgfQoKICAgIGZ1bmN0aW9uIHNvZnRNdXRhdGlvbih0ZXh0KSB7CiAgICAgICAgdmFyIG11dGF0aW9uVGFibGUgPSB7CiAgICAgICAgICAgICdtJzogJ3YnLAogICAgICAgICAgICAnYic6ICd2JywKICAgICAgICAgICAgJ2QnOiAneicKICAgICAgICB9OwogICAgICAgIGlmIChtdXRhdGlvblRhYmxlW3RleHQuY2hhckF0KDApXSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgIHJldHVybiB0ZXh0OwogICAgICAgIH0KICAgICAgICByZXR1cm4gbXV0YXRpb25UYWJsZVt0ZXh0LmNoYXJBdCgwKV0gKyB0ZXh0LnN1YnN0cmluZygxKTsKICAgIH0KCiAgICByZXR1cm4gbW9tZW50LmxhbmcoJ2JyJywgewogICAgICAgIG1vbnRocyA6ICJHZW52ZXJfQydod2V2cmVyX01ldXJ6aF9FYnJlbF9NYWVfTWV6aGV2ZW5fR291ZXJlX0Vvc3RfR3dlbmdvbG9fSGVyZV9EdV9LZXJ6dSIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydCA6ICJHZW5fQydod2VfTWV1X0Vicl9NYWVfRXZlX0dvdV9Fb3NfR3dlX0hlcl9EdV9LZXIiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAiU3VsX0x1bl9NZXVyemhfTWVyYydoZXJfWWFvdV9Hd2VuZXJfU2Fkb3JuIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAiU3VsX0x1bl9NZXVfTWVyX1lhb19Hd2VfU2FkIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogIlN1X0x1X01lX01lcl9ZYV9Hd19TYSIuc3BsaXQoIl8iKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAiaFtlXW1tIEEiLAogICAgICAgICAgICBMIDogIkREL01NL1lZWVkiLAogICAgICAgICAgICBMTCA6ICJEIFthIHZpel0gTU1NTSBZWVlZIiwKICAgICAgICAgICAgTExMIDogIkQgW2Egdml6XSBNTU1NIFlZWVkgTFQiLAogICAgICAgICAgICBMTExMIDogImRkZGQsIEQgW2Egdml6XSBNTU1NIFlZWVkgTFQiCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6ICdbSGl6aXYgZGFdIExUJywKICAgICAgICAgICAgbmV4dERheSA6ICdbV2FyY1wnaG9hemggZGFdIExUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnZGRkZCBbZGFdIExUJywKICAgICAgICAgICAgbGFzdERheSA6ICdbRGVjXCdoIGRhXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrIDogJ2RkZGQgW3Bhc2V0IGRhXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICJhLWJlbm4gJXMiLAogICAgICAgICAgICBwYXN0IDogIiVzICd6byIsCiAgICAgICAgICAgIHMgOiAidW4gbmViZXVkIHNlZ29uZGVubm\/DuSIsCiAgICAgICAgICAgIG0gOiAidXIgdnVudXRlbm4iLAogICAgICAgICAgICBtbSA6IHJlbGF0aXZlVGltZVdpdGhNdXRhdGlvbiwKICAgICAgICAgICAgaCA6ICJ1biBldXIiLAogICAgICAgICAgICBoaCA6ICIlZCBldXIiLAogICAgICAgICAgICBkIDogInVuIGRldmV6aCIsCiAgICAgICAgICAgIGRkIDogcmVsYXRpdmVUaW1lV2l0aE11dGF0aW9uLAogICAgICAgICAgICBNIDogInVyIG1peiIsCiAgICAgICAgICAgIE1NIDogcmVsYXRpdmVUaW1lV2l0aE11dGF0aW9uLAogICAgICAgICAgICB5IDogInVyIGJsb2F6IiwKICAgICAgICAgICAgeXkgOiBzcGVjaWFsTXV0YXRpb25Gb3JZZWFycwogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgdmFyIG91dHB1dCA9IChudW1iZXIgPT09IDEpID8gJ2HDsScgOiAndmV0JzsKICAgICAgICAgICAgcmV0dXJuIG51bWJlciArIG91dHB1dDsKICAgICAgICB9LAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA0ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiA0dGggaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogYm9zbmlhbiAoYnMpCi8vIGF1dGhvciA6IE5lZGltIENob2xpY2ggOiBodHRwczovL2dpdGh1Yi5jb20vZnJvbnR5YXJkCi8vIGJhc2VkIG9uIChocikgdHJhbnNsYXRpb24gYnkgQm9qYW4gTWFya292acSHCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewoKICAgIGZ1bmN0aW9uIHRyYW5zbGF0ZShudW1iZXIsIHdpdGhvdXRTdWZmaXgsIGtleSkgewogICAgICAgIHZhciByZXN1bHQgPSBudW1iZXIgKyAiICI7CiAgICAgICAgc3dpdGNoIChrZXkpIHsKICAgICAgICBjYXNlICdtJzoKICAgICAgICAgICAgcmV0dXJuIHdpdGhvdXRTdWZmaXggPyAnamVkbmEgbWludXRhJyA6ICdqZWRuZSBtaW51dGUnOwogICAgICAgIGNhc2UgJ21tJzoKICAgICAgICAgICAgaWYgKG51bWJlciA9PT0gMSkgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICdtaW51dGEnOwogICAgICAgICAgICB9IGVsc2UgaWYgKG51bWJlciA9PT0gMiB8fCBudW1iZXIgPT09IDMgfHwgbnVtYmVyID09PSA0KSB7CiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJ21pbnV0ZSc7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJ21pbnV0YSc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgICBjYXNlICdoJzoKICAgICAgICAgICAgcmV0dXJuIHdpdGhvdXRTdWZmaXggPyAnamVkYW4gc2F0JyA6ICdqZWRub2cgc2F0YSc7CiAgICAgICAgY2FzZSAnaGgnOgogICAgICAgICAgICBpZiAobnVtYmVyID09PSAxKSB7CiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJ3NhdCc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobnVtYmVyID09PSAyIHx8IG51bWJlciA9PT0gMyB8fCBudW1iZXIgPT09IDQpIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnc2F0YSc7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJ3NhdGknOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7CiAgICAgICAgY2FzZSAnZGQnOgogICAgICAgICAgICBpZiAobnVtYmVyID09PSAxKSB7CiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJ2Rhbic7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJ2RhbmEnOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7CiAgICAgICAgY2FzZSAnTU0nOgogICAgICAgICAgICBpZiAobnVtYmVyID09PSAxKSB7CiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJ21qZXNlYyc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobnVtYmVyID09PSAyIHx8IG51bWJlciA9PT0gMyB8fCBudW1iZXIgPT09IDQpIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnbWplc2VjYSc7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJ21qZXNlY2knOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7CiAgICAgICAgY2FzZSAneXknOgogICAgICAgICAgICBpZiAobnVtYmVyID09PSAxKSB7CiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJ2dvZGluYSc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobnVtYmVyID09PSAyIHx8IG51bWJlciA9PT0gMyB8fCBudW1iZXIgPT09IDQpIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnZ29kaW5lJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnZ29kaW5hJzsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gbW9tZW50LmxhbmcoJ2JzJywgewoJCW1vbnRocyA6ICJqYW51YXJfZmVicnVhcl9tYXJ0X2FwcmlsX21hal9qdW5pX2p1bGlfYXZndXN0X3NlcHRlbWJhcl9va3RvYmFyX25vdmVtYmFyX2RlY2VtYmFyIi5zcGxpdCgiXyIpLAoJCW1vbnRoc1Nob3J0IDogImphbi5fZmViLl9tYXIuX2Fwci5fbWFqLl9qdW4uX2p1bC5fYXZnLl9zZXAuX29rdC5fbm92Ll9kZWMuIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzIDogIm5lZGplbGphX3BvbmVkamVsamFrX3V0b3Jha19zcmlqZWRhX8SNZXR2cnRha19wZXRha19zdWJvdGEiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICJuZWQuX3Bvbi5fdXRvLl9zcmkuX8SNZXQuX3BldC5fc3ViLiIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICJuZV9wb191dF9zcl\/EjWVfcGVfc3UiLnNwbGl0KCJfIiksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogIkg6bW0iLAogICAgICAgICAgICBMIDogIkRELiBNTS4gWVlZWSIsCiAgICAgICAgICAgIExMIDogIkQuIE1NTU0gWVlZWSIsCiAgICAgICAgICAgIExMTCA6ICJELiBNTU1NIFlZWVkgTFQiLAogICAgICAgICAgICBMTExMIDogImRkZGQsIEQuIE1NTU0gWVlZWSBMVCIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5ICA6ICdbZGFuYXMgdV0gTFQnLAogICAgICAgICAgICBuZXh0RGF5ICA6ICdbc3V0cmEgdV0gTFQnLAoKICAgICAgICAgICAgbmV4dFdlZWsgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKHRoaXMuZGF5KCkpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1t1XSBbbmVkamVsanVdIFt1XSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbdV0gW3NyaWplZHVdIFt1XSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbdV0gW3N1Ym90dV0gW3VdIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1t1XSBkZGRkIFt1XSBMVCc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhc3REYXkgIDogJ1tqdcSNZXIgdV0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAodGhpcy5kYXkoKSkgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW3Byb8WhbHVdIGRkZGQgW3VdIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1twcm\/FoWxlXSBbc3Vib3RlXSBbdV0gTFQnOwogICAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW3Byb8WhbGldIGRkZGQgW3VdIExUJzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogInphICVzIiwKICAgICAgICAgICAgcGFzdCAgIDogInByaWplICVzIiwKICAgICAgICAgICAgcyAgICAgIDogInBhciBzZWt1bmRpIiwKICAgICAgICAgICAgbSAgICAgIDogdHJhbnNsYXRlLAogICAgICAgICAgICBtbSAgICAgOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIGggICAgICA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgaGggICAgIDogdHJhbnNsYXRlLAogICAgICAgICAgICBkICAgICAgOiAiZGFuIiwKICAgICAgICAgICAgZGQgICAgIDogdHJhbnNsYXRlLAogICAgICAgICAgICBNICAgICAgOiAibWplc2VjIiwKICAgICAgICAgICAgTU0gICAgIDogdHJhbnNsYXRlLAogICAgICAgICAgICB5ICAgICAgOiAiZ29kaW51IiwKICAgICAgICAgICAgeXkgICAgIDogdHJhbnNsYXRlCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsIDogJyVkLicsCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDcgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDFzdCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiBjYXRhbGFuIChjYSkKLy8gYXV0aG9yIDogSnVhbiBHLiBIdXJ0YWRvIDogaHR0cHM6Ly9naXRodWIuY29tL2p1YW5naHVydGFkbwoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQubGFuZygnY2EnLCB7CiAgICAgICAgbW9udGhzIDogIkdlbmVyX0ZlYnJlcl9NYXLDp19BYnJpbF9NYWlnX0p1bnlfSnVsaW9sX0Fnb3N0X1NldGVtYnJlX09jdHVicmVfTm92ZW1icmVfRGVzZW1icmUiLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAiR2VuLl9GZWJyLl9NYXIuX0Fici5fTWFpLl9KdW4uX0p1bC5fQWcuX1NldC5fT2N0Ll9Ob3YuX0Rlcy4iLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAiRGl1bWVuZ2VfRGlsbHVuc19EaW1hcnRzX0RpbWVjcmVzX0Rpam91c19EaXZlbmRyZXNfRGlzc2FidGUiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICJEZy5fRGwuX0R0Ll9EYy5fRGouX0R2Ll9Ecy4iLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNNaW4gOiAiRGdfRGxfRHRfRGNfRGpfRHZfRHMiLnNwbGl0KCJfIiksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogIkg6bW0iLAogICAgICAgICAgICBMIDogIkREL01NL1lZWVkiLAogICAgICAgICAgICBMTCA6ICJEIE1NTU0gWVlZWSIsCiAgICAgICAgICAgIExMTCA6ICJEIE1NTU0gWVlZWSBMVCIsCiAgICAgICAgICAgIExMTEwgOiAiZGRkZCBEIE1NTU0gWVlZWSBMVCIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuICdbYXZ1aSBhICcgKyAoKHRoaXMuaG91cnMoKSAhPT0gMSkgPyAnbGVzJyA6ICdsYScpICsgJ10gTFQnOwogICAgICAgICAgICB9LAogICAgICAgICAgICBuZXh0RGF5IDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuICdbZGVtw6AgYSAnICsgKCh0aGlzLmhvdXJzKCkgIT09IDEpID8gJ2xlcycgOiAnbGEnKSArICddIExUJzsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbmV4dFdlZWsgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ2RkZGQgW2EgJyArICgodGhpcy5ob3VycygpICE9PSAxKSA\/ICdsZXMnIDogJ2xhJykgKyAnXSBMVCc7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhc3REYXkgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ1thaGlyIGEgJyArICgodGhpcy5ob3VycygpICE9PSAxKSA\/ICdsZXMnIDogJ2xhJykgKyAnXSBMVCc7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhc3RXZWVrIDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuICdbZWxdIGRkZGQgW3Bhc3NhdCBhICcgKyAoKHRoaXMuaG91cnMoKSAhPT0gMSkgPyAnbGVzJyA6ICdsYScpICsgJ10gTFQnOwogICAgICAgICAgICB9LAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAiZW4gJXMiLAogICAgICAgICAgICBwYXN0IDogImZhICVzIiwKICAgICAgICAgICAgcyA6ICJ1bnMgc2Vnb25zIiwKICAgICAgICAgICAgbSA6ICJ1biBtaW51dCIsCiAgICAgICAgICAgIG1tIDogIiVkIG1pbnV0cyIsCiAgICAgICAgICAgIGggOiAidW5hIGhvcmEiLAogICAgICAgICAgICBoaCA6ICIlZCBob3JlcyIsCiAgICAgICAgICAgIGQgOiAidW4gZGlhIiwKICAgICAgICAgICAgZGQgOiAiJWQgZGllcyIsCiAgICAgICAgICAgIE0gOiAidW4gbWVzIiwKICAgICAgICAgICAgTU0gOiAiJWQgbWVzb3MiLAogICAgICAgICAgICB5IDogInVuIGFueSIsCiAgICAgICAgICAgIHl5IDogIiVkIGFueXMiCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsIDogJyVkwronLAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA0ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiA0dGggaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogY3plY2ggKGNzKQovLyBhdXRob3IgOiBwZXRyYmVsYSA6IGh0dHBzOi8vZ2l0aHViLmNvbS9wZXRyYmVsYQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHZhciBtb250aHMgPSAibGVkZW5fw7pub3JfYsWZZXplbl9kdWJlbl9rdsSbdGVuX8SNZXJ2ZW5fxI1lcnZlbmVjX3NycGVuX3rDocWZw61fxZnDrWplbl9saXN0b3BhZF9wcm9zaW5lYyIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydCA9ICJsZWRfw7pub19ixZllX2R1Yl9rdsSbX8SNdm5fxI12Y19zcnBfesOhxZlfxZnDrWpfbGlzX3BybyIuc3BsaXQoIl8iKTsKCiAgICBmdW5jdGlvbiBwbHVyYWwobikgewogICAgICAgIHJldHVybiAobiA+IDEpICYmIChuIDwgNSkgJiYgKH5+KG4gLyAxMCkgIT09IDEpOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zbGF0ZShudW1iZXIsIHdpdGhvdXRTdWZmaXgsIGtleSwgaXNGdXR1cmUpIHsKICAgICAgICB2YXIgcmVzdWx0ID0gbnVtYmVyICsgIiAiOwogICAgICAgIHN3aXRjaCAoa2V5KSB7CiAgICAgICAgY2FzZSAncyc6ICAvLyBhIGZldyBzZWNvbmRzIC8gaW4gYSBmZXcgc2Vjb25kcyAvIGEgZmV3IHNlY29uZHMgYWdvCiAgICAgICAgICAgIHJldHVybiAod2l0aG91dFN1ZmZpeCB8fCBpc0Z1dHVyZSkgPyAncMOhciB2dGXFmWluJyA6ICdww6FyIHZ0ZcWZaW5hbWknOwogICAgICAgIGNhc2UgJ20nOiAgLy8gYSBtaW51dGUgLyBpbiBhIG1pbnV0ZSAvIGEgbWludXRlIGFnbwogICAgICAgICAgICByZXR1cm4gd2l0aG91dFN1ZmZpeCA\/ICdtaW51dGEnIDogKGlzRnV0dXJlID8gJ21pbnV0dScgOiAnbWludXRvdScpOwogICAgICAgIGNhc2UgJ21tJzogLy8gOSBtaW51dGVzIC8gaW4gOSBtaW51dGVzIC8gOSBtaW51dGVzIGFnbwogICAgICAgICAgICBpZiAod2l0aG91dFN1ZmZpeCB8fCBpc0Z1dHVyZSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArIChwbHVyYWwobnVtYmVyKSA\/ICdtaW51dHknIDogJ21pbnV0Jyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgJ21pbnV0YW1pJzsKICAgICAgICAgICAgfQogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdoJzogIC8vIGFuIGhvdXIgLyBpbiBhbiBob3VyIC8gYW4gaG91ciBhZ28KICAgICAgICAgICAgcmV0dXJuIHdpdGhvdXRTdWZmaXggPyAnaG9kaW5hJyA6IChpc0Z1dHVyZSA\/ICdob2RpbnUnIDogJ2hvZGlub3UnKTsKICAgICAgICBjYXNlICdoaCc6IC8vIDkgaG91cnMgLyBpbiA5IGhvdXJzIC8gOSBob3VycyBhZ28KICAgICAgICAgICAgaWYgKHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUpIHsKICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAocGx1cmFsKG51bWJlcikgPyAnaG9kaW55JyA6ICdob2RpbicpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArICdob2RpbmFtaSc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnZCc6ICAvLyBhIGRheSAvIGluIGEgZGF5IC8gYSBkYXkgYWdvCiAgICAgICAgICAgIHJldHVybiAod2l0aG91dFN1ZmZpeCB8fCBpc0Z1dHVyZSkgPyAnZGVuJyA6ICdkbmVtJzsKICAgICAgICBjYXNlICdkZCc6IC8vIDkgZGF5cyAvIGluIDkgZGF5cyAvIDkgZGF5cyBhZ28KICAgICAgICAgICAgaWYgKHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUpIHsKICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAocGx1cmFsKG51bWJlcikgPyAnZG55JyA6ICdkbsOtJyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgJ2RueSc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnTSc6ICAvLyBhIG1vbnRoIC8gaW4gYSBtb250aCAvIGEgbW9udGggYWdvCiAgICAgICAgICAgIHJldHVybiAod2l0aG91dFN1ZmZpeCB8fCBpc0Z1dHVyZSkgPyAnbcSbc8OtYycgOiAnbcSbc8OtY2VtJzsKICAgICAgICBjYXNlICdNTSc6IC8vIDkgbW9udGhzIC8gaW4gOSBtb250aHMgLyA5IG1vbnRocyBhZ28KICAgICAgICAgICAgaWYgKHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUpIHsKICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAocGx1cmFsKG51bWJlcikgPyAnbcSbc8OtY2UnIDogJ23Em3PDrWPFrycpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArICdtxJtzw61jaSc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAneSc6ICAvLyBhIHllYXIgLyBpbiBhIHllYXIgLyBhIHllYXIgYWdvCiAgICAgICAgICAgIHJldHVybiAod2l0aG91dFN1ZmZpeCB8fCBpc0Z1dHVyZSkgPyAncm9rJyA6ICdyb2tlbSc7CiAgICAgICAgY2FzZSAneXknOiAvLyA5IHllYXJzIC8gaW4gOSB5ZWFycyAvIDkgeWVhcnMgYWdvCiAgICAgICAgICAgIGlmICh3aXRob3V0U3VmZml4IHx8IGlzRnV0dXJlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKHBsdXJhbChudW1iZXIpID8gJ3Jva3knIDogJ2xldCcpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArICdsZXR5JzsKICAgICAgICAgICAgfQogICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICB9CgogICAgcmV0dXJuIG1vbWVudC5sYW5nKCdjcycsIHsKICAgICAgICBtb250aHMgOiBtb250aHMsCiAgICAgICAgbW9udGhzU2hvcnQgOiBtb250aHNTaG9ydCwKICAgICAgICBtb250aHNQYXJzZSA6IChmdW5jdGlvbiAobW9udGhzLCBtb250aHNTaG9ydCkgewogICAgICAgICAgICB2YXIgaSwgX21vbnRoc1BhcnNlID0gW107CiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCAxMjsgaSsrKSB7CiAgICAgICAgICAgICAgICAvLyB1c2UgY3VzdG9tIHBhcnNlciB0byBzb2x2ZSBwcm9ibGVtIHdpdGggSnVseSAoxI1lcnZlbmVjKQogICAgICAgICAgICAgICAgX21vbnRoc1BhcnNlW2ldID0gbmV3IFJlZ0V4cCgnXicgKyBtb250aHNbaV0gKyAnJHxeJyArIG1vbnRoc1Nob3J0W2ldICsgJyQnLCAnaScpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBfbW9udGhzUGFyc2U7CiAgICAgICAgfShtb250aHMsIG1vbnRoc1Nob3J0KSksCiAgICAgICAgd2Vla2RheXMgOiAibmVkxJtsZV9wb25kxJtsw61fw7p0ZXLDvV9zdMWZZWRhX8SNdHZydGVrX3DDoXRla19zb2JvdGEiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICJuZV9wb1\/DunRfc3RfxI10X3DDoV9zbyIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICJuZV9wb1\/DunRfc3RfxI10X3DDoV9zbyIuc3BsaXQoIl8iKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQ6ICJIOm1tIiwKICAgICAgICAgICAgTCA6ICJERC5NTS5ZWVlZIiwKICAgICAgICAgICAgTEwgOiAiRC4gTU1NTSBZWVlZIiwKICAgICAgICAgICAgTExMIDogIkQuIE1NTU0gWVlZWSBMVCIsCiAgICAgICAgICAgIExMTEwgOiAiZGRkZCBELiBNTU1NIFlZWVkgTFQiCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheTogIltkbmVzIHZdIExUIiwKICAgICAgICAgICAgbmV4dERheTogJ1t6w610cmEgdl0gTFQnLAogICAgICAgICAgICBuZXh0V2VlazogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgc3dpdGNoICh0aGlzLmRheSgpKSB7CiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbdiBuZWTEm2xpIHZdIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1t2XSBkZGRkIFt2XSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbdmUgc3TFmWVkdSB2XSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbdmUgxI10dnJ0ZWsgdl0gTFQnOwogICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW3YgcMOhdGVrIHZdIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1t2IHNvYm90dSB2XSBMVCc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhc3REYXk6ICdbdsSNZXJhIHZdIExUJywKICAgICAgICAgICAgbGFzdFdlZWs6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAodGhpcy5kYXkoKSkgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW21pbnVsb3UgbmVkxJtsaSB2XSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbbWludWzDqV0gZGRkZCBbdl0gTFQnOwogICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW21pbnVsb3Ugc3TFmWVkdSB2XSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbbWludWzDvV0gZGRkZCBbdl0gTFQnOwogICAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW21pbnVsb3Ugc29ib3R1IHZdIExUJzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2FtZUVsc2U6ICJMIgogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAiemEgJXMiLAogICAgICAgICAgICBwYXN0IDogInDFmWVkICVzIiwKICAgICAgICAgICAgcyA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgbSA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgbW0gOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIGggOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIGhoIDogdHJhbnNsYXRlLAogICAgICAgICAgICBkIDogdHJhbnNsYXRlLAogICAgICAgICAgICBkZCA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgTSA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgTU0gOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIHkgOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIHl5IDogdHJhbnNsYXRlCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsIDogJyVkLicsCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiBjaHV2YXNoIChjdikKLy8gYXV0aG9yIDogQW5hdG9seSBNaXJvbm92IDogaHR0cHM6Ly9naXRodWIuY29tL21pcm9udG9saQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQubGFuZygnY3YnLCB7CiAgICAgICAgbW9udGhzIDogItC6xIPRgNC70LDRh1\/QvdCw0YDEg9GBX9C\/0YPRiF\/QsNC60LBf0LzQsNC5X8OnxJXRgNGC0LzQtV\/Rg9GCxINfw6fRg9GA0LvQsF\/QsNCyxIPQvV\/RjtC\/0LBf0YfTs9C6X9GA0LDRiNGC0LDQsiIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydCA6ICLQusSD0YBf0L3QsNGAX9C\/0YPRiF\/QsNC60LBf0LzQsNC5X8OnxJXRgF\/Rg9GCxINfw6fRg9GAX9Cw0LJf0Y7Qv9CwX9GH07PQul\/RgNCw0YgiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAi0LLRi9GA0YHQsNGA0L3QuNC60YPQvV\/RgtGD0L3RgtC40LrRg9C9X9GL0YLQu9Cw0YDQuNC60YPQvV\/RjtC90LrRg9C9X9C6xJXDp9C90LXRgNC90LjQutGD0L1f0Y3RgNC90LXQutGD0L1f0YjEg9C80LDRgtC60YPQvSIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogItCy0YvRgF\/RgtGD0L1f0YvRgtC7X9GO0L1f0LrElcOnX9GN0YDQvV\/RiMSD0LwiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNNaW4gOiAi0LLRgF\/RgtC9X9GL0YJf0Y7QvV\/QusOnX9GN0YBf0YjQvCIuc3BsaXQoIl8iKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAiSEg6bW0iLAogICAgICAgICAgICBMIDogIkRELU1NLVlZWVkiLAogICAgICAgICAgICBMTCA6ICJZWVlZIFvDp9GD0LvRhdC4XSBNTU1NIFvRg9C5xIPRhcSV0L1dIERbLdC8xJXRiMSVXSIsCiAgICAgICAgICAgIExMTCA6ICJZWVlZIFvDp9GD0LvRhdC4XSBNTU1NIFvRg9C5xIPRhcSV0L1dIERbLdC8xJXRiMSVXSwgTFQiLAogICAgICAgICAgICBMTExMIDogImRkZGQsIFlZWVkgW8On0YPQu9GF0LhdIE1NTU0gW9GD0LnEg9GFxJXQvV0gRFst0LzEldGIxJVdLCBMVCIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5OiAnW9Cf0LDRj9C9XSBMVCBb0YHQtdGF0LXRgtGA0LVdJywKICAgICAgICAgICAgbmV4dERheTogJ1vQq9GA0LDQvV0gTFQgW9GB0LXRhdC10YLRgNC1XScsCiAgICAgICAgICAgIGxhc3REYXk6ICdbxJTQvdC10YBdIExUIFvRgdC10YXQtdGC0YDQtV0nLAogICAgICAgICAgICBuZXh0V2VlazogJ1vDh9C40YLQtdGBXSBkZGRkIExUIFvRgdC10YXQtdGC0YDQtV0nLAogICAgICAgICAgICBsYXN0V2VlazogJ1vQmNGA0YLQvcSVXSBkZGRkIExUIFvRgdC10YXQtdGC0YDQtV0nLAogICAgICAgICAgICBzYW1lRWxzZTogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6IGZ1bmN0aW9uIChvdXRwdXQpIHsKICAgICAgICAgICAgICAgIHZhciBhZmZpeCA9IC\/RgdC10YXQtdGCJC9pLmV4ZWMob3V0cHV0KSA\/ICLRgNC10L0iIDogL8On0YPQuyQvaS5leGVjKG91dHB1dCkgPyAi0YLQsNC9IiA6ICLRgNCw0L0iOwogICAgICAgICAgICAgICAgcmV0dXJuIG91dHB1dCArIGFmZml4OwogICAgICAgICAgICB9LAogICAgICAgICAgICBwYXN0IDogIiVzINC60LDRj9C70LvQsCIsCiAgICAgICAgICAgIHMgOiAi0L\/EldGALdC40Logw6fQtdC60LrRg9C90YIiLAogICAgICAgICAgICBtIDogItC\/xJXRgCDQvNC40L3Rg9GCIiwKICAgICAgICAgICAgbW0gOiAiJWQg0LzQuNC90YPRgiIsCiAgICAgICAgICAgIGggOiAi0L\/EldGAINGB0LXRhdC10YIiLAogICAgICAgICAgICBoaCA6ICIlZCDRgdC10YXQtdGCIiwKICAgICAgICAgICAgZCA6ICLQv8SV0YAg0LrRg9C9IiwKICAgICAgICAgICAgZGQgOiAiJWQg0LrRg9C9IiwKICAgICAgICAgICAgTSA6ICLQv8SV0YAg0YPQucSD0YUiLAogICAgICAgICAgICBNTSA6ICIlZCDRg9C5xIPRhSIsCiAgICAgICAgICAgIHkgOiAi0L\/EldGAIMOn0YPQuyIsCiAgICAgICAgICAgIHl5IDogIiVkIMOn0YPQuyIKICAgICAgICB9LAogICAgICAgIG9yZGluYWwgOiAnJWQt0LzEldGIJywKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNyAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gMXN0IGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7CgovLyBtb21lbnQuanMgbGFuZ3VhZ2UgY29uZmlndXJhdGlvbgovLyBsYW5ndWFnZSA6IGRhbmlzaCAoZGEpCi8vIGF1dGhvciA6IFVscmlrIE5pZWxzZW4gOiBodHRwczovL2dpdGh1Yi5jb20vbXJiYXNlCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5sYW5nKCdkYScsIHsKICAgICAgICBtb250aHMgOiAiamFudWFyX2ZlYnJ1YXJfbWFydHNfYXByaWxfbWFqX2p1bmlfanVsaV9hdWd1c3Rfc2VwdGVtYmVyX29rdG9iZXJfbm92ZW1iZXJfZGVjZW1iZXIiLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAiamFuX2ZlYl9tYXJfYXByX21hal9qdW5fanVsX2F1Z19zZXBfb2t0X25vdl9kZWMiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAic8O4bmRhZ19tYW5kYWdfdGlyc2RhZ19vbnNkYWdfdG9yc2RhZ19mcmVkYWdfbMO4cmRhZyIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogInPDuG5fbWFuX3Rpcl9vbnNfdG9yX2ZyZV9sw7hyIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogInPDuF9tYV90aV9vbl90b19mcl9sw7giLnNwbGl0KCJfIiksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogIkhIOm1tIiwKICAgICAgICAgICAgTCA6ICJERC9NTS9ZWVlZIiwKICAgICAgICAgICAgTEwgOiAiRCBNTU1NIFlZWVkiLAogICAgICAgICAgICBMTEwgOiAiRCBNTU1NIFlZWVkgTFQiLAogICAgICAgICAgICBMTExMIDogImRkZGQgRC4gTU1NTSwgWVlZWSBMVCIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1tJIGRhZyBrbC5dIExUJywKICAgICAgICAgICAgbmV4dERheSA6ICdbSSBtb3JnZW4ga2wuXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgW2tsLl0gTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1tJIGfDpXIga2wuXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrIDogJ1tzaWRzdGVdIGRkZGQgW2tsXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICJvbSAlcyIsCiAgICAgICAgICAgIHBhc3QgOiAiJXMgc2lkZW4iLAogICAgICAgICAgICBzIDogImbDpSBzZWt1bmRlciIsCiAgICAgICAgICAgIG0gOiAiZXQgbWludXQiLAogICAgICAgICAgICBtbSA6ICIlZCBtaW51dHRlciIsCiAgICAgICAgICAgIGggOiAiZW4gdGltZSIsCiAgICAgICAgICAgIGhoIDogIiVkIHRpbWVyIiwKICAgICAgICAgICAgZCA6ICJlbiBkYWciLAogICAgICAgICAgICBkZCA6ICIlZCBkYWdlIiwKICAgICAgICAgICAgTSA6ICJlbiBtw6VuZWQiLAogICAgICAgICAgICBNTSA6ICIlZCBtw6VuZWRlciIsCiAgICAgICAgICAgIHkgOiAiZXQgw6VyIiwKICAgICAgICAgICAgeXkgOiAiJWQgw6VyIgogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbCA6ICclZC4nLAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA0ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiA0dGggaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogZ2VybWFuIChkZSkKLy8gYXV0aG9yIDogbGx1Y2hzIDogaHR0cHM6Ly9naXRodWIuY29tL2xsdWNocwovLyBhdXRob3I6IE1lbmVsaW9uIEVsZW5zw7psZTogaHR0cHM6Ly9naXRodWIuY29tL09pcmUKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewogICAgICAgIGRlZmluZShbJ21vbWVudCddLCBmYWN0b3J5KTsgLy8gQU1ECiAgICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JykgewogICAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKCcuLi9tb21lbnQnKSk7IC8vIE5vZGUKICAgIH0gZWxzZSB7CiAgICAgICAgZmFjdG9yeSh3aW5kb3cubW9tZW50KTsgLy8gQnJvd3NlciBnbG9iYWwKICAgIH0KfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICBmdW5jdGlvbiBwcm9jZXNzUmVsYXRpdmVUaW1lKG51bWJlciwgd2l0aG91dFN1ZmZpeCwga2V5LCBpc0Z1dHVyZSkgewogICAgICAgIHZhciBmb3JtYXQgPSB7CiAgICAgICAgICAgICdtJzogWydlaW5lIE1pbnV0ZScsICdlaW5lciBNaW51dGUnXSwKICAgICAgICAgICAgJ2gnOiBbJ2VpbmUgU3R1bmRlJywgJ2VpbmVyIFN0dW5kZSddLAogICAgICAgICAgICAnZCc6IFsnZWluIFRhZycsICdlaW5lbSBUYWcnXSwKICAgICAgICAgICAgJ2RkJzogW251bWJlciArICcgVGFnZScsIG51bWJlciArICcgVGFnZW4nXSwKICAgICAgICAgICAgJ00nOiBbJ2VpbiBNb25hdCcsICdlaW5lbSBNb25hdCddLAogICAgICAgICAgICAnTU0nOiBbbnVtYmVyICsgJyBNb25hdGUnLCBudW1iZXIgKyAnIE1vbmF0ZW4nXSwKICAgICAgICAgICAgJ3knOiBbJ2VpbiBKYWhyJywgJ2VpbmVtIEphaHInXSwKICAgICAgICAgICAgJ3l5JzogW251bWJlciArICcgSmFocmUnLCBudW1iZXIgKyAnIEphaHJlbiddCiAgICAgICAgfTsKICAgICAgICByZXR1cm4gd2l0aG91dFN1ZmZpeCA\/IGZvcm1hdFtrZXldWzBdIDogZm9ybWF0W2tleV1bMV07CiAgICB9CgogICAgcmV0dXJuIG1vbWVudC5sYW5nKCdkZScsIHsKICAgICAgICBtb250aHMgOiAiSmFudWFyX0ZlYnJ1YXJfTcOkcnpfQXByaWxfTWFpX0p1bmlfSnVsaV9BdWd1c3RfU2VwdGVtYmVyX09rdG9iZXJfTm92ZW1iZXJfRGV6ZW1iZXIiLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAiSmFuLl9GZWJyLl9NcnouX0Fwci5fTWFpX0p1bi5fSnVsLl9BdWcuX1NlcHQuX09rdC5fTm92Ll9EZXouIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzIDogIlNvbm50YWdfTW9udGFnX0RpZW5zdGFnX01pdHR3b2NoX0Rvbm5lcnN0YWdfRnJlaXRhZ19TYW1zdGFnIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAiU28uX01vLl9EaS5fTWkuX0RvLl9Gci5fU2EuIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogIlNvX01vX0RpX01pX0RvX0ZyX1NhIi5zcGxpdCgiXyIpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVDogIkg6bW0gW1Vocl0iLAogICAgICAgICAgICBMIDogIkRELk1NLllZWVkiLAogICAgICAgICAgICBMTCA6ICJELiBNTU1NIFlZWVkiLAogICAgICAgICAgICBMTEwgOiAiRC4gTU1NTSBZWVlZIExUIiwKICAgICAgICAgICAgTExMTCA6ICJkZGRkLCBELiBNTU1NIFlZWVkgTFQiCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheTogIltIZXV0ZSB1bV0gTFQiLAogICAgICAgICAgICBzYW1lRWxzZTogIkwiLAogICAgICAgICAgICBuZXh0RGF5OiAnW01vcmdlbiB1bV0gTFQnLAogICAgICAgICAgICBuZXh0V2VlazogJ2RkZGQgW3VtXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXk6ICdbR2VzdGVybiB1bV0gTFQnLAogICAgICAgICAgICBsYXN0V2VlazogJ1tsZXR6dGVuXSBkZGRkIFt1bV0gTFQnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICJpbiAlcyIsCiAgICAgICAgICAgIHBhc3QgOiAidm9yICVzIiwKICAgICAgICAgICAgcyA6ICJlaW4gcGFhciBTZWt1bmRlbiIsCiAgICAgICAgICAgIG0gOiBwcm9jZXNzUmVsYXRpdmVUaW1lLAogICAgICAgICAgICBtbSA6ICIlZCBNaW51dGVuIiwKICAgICAgICAgICAgaCA6IHByb2Nlc3NSZWxhdGl2ZVRpbWUsCiAgICAgICAgICAgIGhoIDogIiVkIFN0dW5kZW4iLAogICAgICAgICAgICBkIDogcHJvY2Vzc1JlbGF0aXZlVGltZSwKICAgICAgICAgICAgZGQgOiBwcm9jZXNzUmVsYXRpdmVUaW1lLAogICAgICAgICAgICBNIDogcHJvY2Vzc1JlbGF0aXZlVGltZSwKICAgICAgICAgICAgTU0gOiBwcm9jZXNzUmVsYXRpdmVUaW1lLAogICAgICAgICAgICB5IDogcHJvY2Vzc1JlbGF0aXZlVGltZSwKICAgICAgICAgICAgeXkgOiBwcm9jZXNzUmVsYXRpdmVUaW1lCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsIDogJyVkLicsCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiBtb2Rlcm4gZ3JlZWsgKGVsKQovLyBhdXRob3IgOiBBZ2dlbG9zIEthcmFsaWFzIDogaHR0cHM6Ly9naXRodWIuY29tL21laGllbAoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQubGFuZygnZWwnLCB7CiAgICAgICAgbW9udGhzTm9taW5hdGl2ZUVsIDogIs6ZzrHOvc6\/z4XOrM+BzrnOv8+CX86mzrXOss+Bzr\/Phc6sz4HOuc6\/z4JfzpzOrM+Bz4TOuc6\/z4JfzpHPgM+Bzq\/Ou865zr\/Pgl\/OnM6szrnOv8+CX86Zzr\/Pjc69zrnOv8+CX86Zzr\/Pjc67zrnOv8+CX86Rz43Os86\/z4XPg8+Ezr\/Pgl\/Oo861z4DPhM6tzrzOss+BzrnOv8+CX86fzrrPhM+OzrLPgc65zr\/Pgl\/Onc6\/zq3OvM6yz4HOuc6\/z4JfzpTOtc66zq3OvM6yz4HOuc6\/z4IiLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzR2VuaXRpdmVFbCA6ICLOmc6xzr3Ov8+FzrHPgc6vzr\/PhV\/Ops61zrLPgc6\/z4XOsc+Bzq\/Ov8+FX86czrHPgc+Ezq\/Ov8+FX86Rz4DPgc65zrvOr86\/z4VfzpzOsc6Qzr\/PhV\/Omc6\/z4XOvc6vzr\/PhV\/Omc6\/z4XOu86vzr\/PhV\/Okc+FzrPOv8+Nz4PPhM6\/z4VfzqPOtc+Az4TOtc68zrLPgc6vzr\/PhV\/On866z4TPic6yz4HOr86\/z4Vfzp3Ov861zrzOss+Bzq\/Ov8+FX86UzrXOus61zrzOss+Bzq\/Ov8+FIi5zcGxpdCgiXyIpLAogICAgICAgIG1vbnRocyA6IGZ1bmN0aW9uIChtb21lbnRUb0Zvcm1hdCwgZm9ybWF0KSB7CiAgICAgICAgICAgIGlmICgvRC8udGVzdChmb3JtYXQuc3Vic3RyaW5nKDAsIGZvcm1hdC5pbmRleE9mKCJNTU1NIikpKSkgeyAvLyBpZiB0aGVyZSBpcyBhIGRheSBudW1iZXIgYmVmb3JlICdNTU1NJwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX21vbnRoc0dlbml0aXZlRWxbbW9tZW50VG9Gb3JtYXQubW9udGgoKV07CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fbW9udGhzTm9taW5hdGl2ZUVsW21vbWVudFRvRm9ybWF0Lm1vbnRoKCldOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBtb250aHNTaG9ydCA6ICLOmc6xzr1fzqbOtc6yX86czrHPgV\/Okc+Az4FfzpzOsc+KX86Zzr\/Phc69X86Zzr\/Phc67X86Rz4XOs1\/Oo861z4Bfzp\/Ous+EX86dzr\/OtV\/OlM61zroiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAizprPhc+BzrnOsc66zq5fzpTOtc+Fz4TOrc+BzrFfzqTPgc6vz4TOt1\/OpM61z4TOrM+Bz4TOt1\/OoM6tzrzPgM+EzrdfzqDOsc+BzrHPg866zrXPhc6uX86jzqzOss6yzrHPhM6\/Ii5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAizprPhc+BX86UzrXPhV\/OpM+BzrlfzqTOtc+EX86gzrXOvF\/OoM6xz4FfzqPOsc6yIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogIs6az4VfzpTOtV\/OpM+BX86kzrVfzqDOtV\/OoM6xX86jzrEiLnNwbGl0KCJfIiksCiAgICAgICAgbWVyaWRpZW0gOiBmdW5jdGlvbiAoaG91cnMsIG1pbnV0ZXMsIGlzTG93ZXIpIHsKICAgICAgICAgICAgaWYgKGhvdXJzID4gMTEpIHsKICAgICAgICAgICAgICAgIHJldHVybiBpc0xvd2VyID8gJ868zrwnIDogJ86czpwnOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIGlzTG93ZXIgPyAnz4DOvCcgOiAnzqDOnCc7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICJoOm1tIEEiLAogICAgICAgICAgICBMIDogIkREL01NL1lZWVkiLAogICAgICAgICAgICBMTCA6ICJEIE1NTU0gWVlZWSIsCiAgICAgICAgICAgIExMTCA6ICJEIE1NTU0gWVlZWSBMVCIsCiAgICAgICAgICAgIExMTEwgOiAiZGRkZCwgRCBNTU1NIFlZWVkgTFQiCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhckVsIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1vOo86uzrzOtc+BzrEge31dIExUJywKICAgICAgICAgICAgbmV4dERheSA6ICdbzpHPjc+BzrnOvyB7fV0gTFQnLAogICAgICAgICAgICBuZXh0V2VlayA6ICdkZGRkIFt7fV0gTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1vOp864zrXPgiB7fV0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdbz4TOt869IM+Az4HOv863zrPOv8+NzrzOtc69zrddIGRkZGQgW3t9XSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IGZ1bmN0aW9uIChrZXksIG1vbSkgewogICAgICAgICAgICB2YXIgb3V0cHV0ID0gdGhpcy5fY2FsZW5kYXJFbFtrZXldLAogICAgICAgICAgICAgICAgaG91cnMgPSBtb20gJiYgbW9tLmhvdXJzKCk7CgogICAgICAgICAgICByZXR1cm4gb3V0cHV0LnJlcGxhY2UoInt9IiwgKGhvdXJzICUgMTIgPT09IDEgPyAiz4PPhM63IiA6ICLPg8+EzrnPgiIpKTsKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogIs+DzrUgJXMiLAogICAgICAgICAgICBwYXN0IDogIiVzIM+Az4HOuc69IiwKICAgICAgICAgICAgcyA6ICLOtM61z4XPhM61z4HPjM67zrXPgM+EzrEiLAogICAgICAgICAgICBtIDogIs6tzr3OsSDOu861z4DPhM+MIiwKICAgICAgICAgICAgbW0gOiAiJWQgzrvOtc+Az4TOrCIsCiAgICAgICAgICAgIGggOiAizrzOr86xIM+Oz4HOsSIsCiAgICAgICAgICAgIGhoIDogIiVkIM+Oz4HOtc+CIiwKICAgICAgICAgICAgZCA6ICLOvM6vzrEgzrzOrc+BzrEiLAogICAgICAgICAgICBkZCA6ICIlZCDOvM6tz4HOtc+CIiwKICAgICAgICAgICAgTSA6ICLOrc69zrHPgiDOvM6uzr3Osc+CIiwKICAgICAgICAgICAgTU0gOiAiJWQgzrzOrs69zrXPgiIsCiAgICAgICAgICAgIHkgOiAizq3Ovc6xz4Igz4fPgc+Mzr3Ov8+CIiwKICAgICAgICAgICAgeXkgOiAiJWQgz4fPgc+Mzr3Ouc6xIgogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICfOtyc7CiAgICAgICAgfSwKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNCAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gNHN0IGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7CgovLyBtb21lbnQuanMgbGFuZ3VhZ2UgY29uZmlndXJhdGlvbgovLyBsYW5ndWFnZSA6IGF1c3RyYWxpYW4gZW5nbGlzaCAoZW4tYXUpCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5sYW5nKCdlbi1hdScsIHsKICAgICAgICBtb250aHMgOiAiSmFudWFyeV9GZWJydWFyeV9NYXJjaF9BcHJpbF9NYXlfSnVuZV9KdWx5X0F1Z3VzdF9TZXB0ZW1iZXJfT2N0b2Jlcl9Ob3ZlbWJlcl9EZWNlbWJlciIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydCA6ICJKYW5fRmViX01hcl9BcHJfTWF5X0p1bl9KdWxfQXVnX1NlcF9PY3RfTm92X0RlYyIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5cyA6ICJTdW5kYXlfTW9uZGF5X1R1ZXNkYXlfV2VkbmVzZGF5X1RodXJzZGF5X0ZyaWRheV9TYXR1cmRheSIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogIlN1bl9Nb25fVHVlX1dlZF9UaHVfRnJpX1NhdCIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICJTdV9Nb19UdV9XZV9UaF9Gcl9TYSIuc3BsaXQoIl8iKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAiaDptbSBBIiwKICAgICAgICAgICAgTCA6ICJERC9NTS9ZWVlZIiwKICAgICAgICAgICAgTEwgOiAiRCBNTU1NIFlZWVkiLAogICAgICAgICAgICBMTEwgOiAiRCBNTU1NIFlZWVkgTFQiLAogICAgICAgICAgICBMTExMIDogImRkZGQsIEQgTU1NTSBZWVlZIExUIgogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW1RvZGF5IGF0XSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW1RvbW9ycm93IGF0XSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgW2F0XSBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW1llc3RlcmRheSBhdF0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdbTGFzdF0gZGRkZCBbYXRdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogImluICVzIiwKICAgICAgICAgICAgcGFzdCA6ICIlcyBhZ28iLAogICAgICAgICAgICBzIDogImEgZmV3IHNlY29uZHMiLAogICAgICAgICAgICBtIDogImEgbWludXRlIiwKICAgICAgICAgICAgbW0gOiAiJWQgbWludXRlcyIsCiAgICAgICAgICAgIGggOiAiYW4gaG91ciIsCiAgICAgICAgICAgIGhoIDogIiVkIGhvdXJzIiwKICAgICAgICAgICAgZCA6ICJhIGRheSIsCiAgICAgICAgICAgIGRkIDogIiVkIGRheXMiLAogICAgICAgICAgICBNIDogImEgbW9udGgiLAogICAgICAgICAgICBNTSA6ICIlZCBtb250aHMiLAogICAgICAgICAgICB5IDogImEgeWVhciIsCiAgICAgICAgICAgIHl5IDogIiVkIHllYXJzIgogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgdmFyIGIgPSBudW1iZXIgJSAxMCwKICAgICAgICAgICAgICAgIG91dHB1dCA9ICh+fiAobnVtYmVyICUgMTAwIC8gMTApID09PSAxKSA\/ICd0aCcgOgogICAgICAgICAgICAgICAgKGIgPT09IDEpID8gJ3N0JyA6CiAgICAgICAgICAgICAgICAoYiA9PT0gMikgPyAnbmQnIDoKICAgICAgICAgICAgICAgIChiID09PSAzKSA\/ICdyZCcgOiAndGgnOwogICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgb3V0cHV0OwogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiBjYW5hZGlhbiBlbmdsaXNoIChlbi1jYSkKLy8gYXV0aG9yIDogSm9uYXRoYW4gQWJvdXJiaWggOiBodHRwczovL2dpdGh1Yi5jb20vam9uYmNhCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5sYW5nKCdlbi1jYScsIHsKICAgICAgICBtb250aHMgOiAiSmFudWFyeV9GZWJydWFyeV9NYXJjaF9BcHJpbF9NYXlfSnVuZV9KdWx5X0F1Z3VzdF9TZXB0ZW1iZXJfT2N0b2Jlcl9Ob3ZlbWJlcl9EZWNlbWJlciIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydCA6ICJKYW5fRmViX01hcl9BcHJfTWF5X0p1bl9KdWxfQXVnX1NlcF9PY3RfTm92X0RlYyIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5cyA6ICJTdW5kYXlfTW9uZGF5X1R1ZXNkYXlfV2VkbmVzZGF5X1RodXJzZGF5X0ZyaWRheV9TYXR1cmRheSIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogIlN1bl9Nb25fVHVlX1dlZF9UaHVfRnJpX1NhdCIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICJTdV9Nb19UdV9XZV9UaF9Gcl9TYSIuc3BsaXQoIl8iKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAiaDptbSBBIiwKICAgICAgICAgICAgTCA6ICJZWVlZLU1NLUREIiwKICAgICAgICAgICAgTEwgOiAiRCBNTU1NLCBZWVlZIiwKICAgICAgICAgICAgTExMIDogIkQgTU1NTSwgWVlZWSBMVCIsCiAgICAgICAgICAgIExMTEwgOiAiZGRkZCwgRCBNTU1NLCBZWVlZIExUIgogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW1RvZGF5IGF0XSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW1RvbW9ycm93IGF0XSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgW2F0XSBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW1llc3RlcmRheSBhdF0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdbTGFzdF0gZGRkZCBbYXRdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogImluICVzIiwKICAgICAgICAgICAgcGFzdCA6ICIlcyBhZ28iLAogICAgICAgICAgICBzIDogImEgZmV3IHNlY29uZHMiLAogICAgICAgICAgICBtIDogImEgbWludXRlIiwKICAgICAgICAgICAgbW0gOiAiJWQgbWludXRlcyIsCiAgICAgICAgICAgIGggOiAiYW4gaG91ciIsCiAgICAgICAgICAgIGhoIDogIiVkIGhvdXJzIiwKICAgICAgICAgICAgZCA6ICJhIGRheSIsCiAgICAgICAgICAgIGRkIDogIiVkIGRheXMiLAogICAgICAgICAgICBNIDogImEgbW9udGgiLAogICAgICAgICAgICBNTSA6ICIlZCBtb250aHMiLAogICAgICAgICAgICB5IDogImEgeWVhciIsCiAgICAgICAgICAgIHl5IDogIiVkIHllYXJzIgogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgdmFyIGIgPSBudW1iZXIgJSAxMCwKICAgICAgICAgICAgICAgIG91dHB1dCA9ICh+fiAobnVtYmVyICUgMTAwIC8gMTApID09PSAxKSA\/ICd0aCcgOgogICAgICAgICAgICAgICAgKGIgPT09IDEpID8gJ3N0JyA6CiAgICAgICAgICAgICAgICAoYiA9PT0gMikgPyAnbmQnIDoKICAgICAgICAgICAgICAgIChiID09PSAzKSA\/ICdyZCcgOiAndGgnOwogICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgb3V0cHV0OwogICAgICAgIH0KICAgIH0pOwp9KSk7CgovLyBtb21lbnQuanMgbGFuZ3VhZ2UgY29uZmlndXJhdGlvbgovLyBsYW5ndWFnZSA6IGdyZWF0IGJyaXRhaW4gZW5nbGlzaCAoZW4tZ2IpCi8vIGF1dGhvciA6IENocmlzIEdlZHJpbSA6IGh0dHBzOi8vZ2l0aHViLmNvbS9jaHJpc2dlZHJpbQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQubGFuZygnZW4tZ2InLCB7CiAgICAgICAgbW9udGhzIDogIkphbnVhcnlfRmVicnVhcnlfTWFyY2hfQXByaWxfTWF5X0p1bmVfSnVseV9BdWd1c3RfU2VwdGVtYmVyX09jdG9iZXJfTm92ZW1iZXJfRGVjZW1iZXIiLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAiSmFuX0ZlYl9NYXJfQXByX01heV9KdW5fSnVsX0F1Z19TZXBfT2N0X05vdl9EZWMiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAiU3VuZGF5X01vbmRheV9UdWVzZGF5X1dlZG5lc2RheV9UaHVyc2RheV9GcmlkYXlfU2F0dXJkYXkiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICJTdW5fTW9uX1R1ZV9XZWRfVGh1X0ZyaV9TYXQiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNNaW4gOiAiU3VfTW9fVHVfV2VfVGhfRnJfU2EiLnNwbGl0KCJfIiksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogIkhIOm1tIiwKICAgICAgICAgICAgTCA6ICJERC9NTS9ZWVlZIiwKICAgICAgICAgICAgTEwgOiAiRCBNTU1NIFlZWVkiLAogICAgICAgICAgICBMTEwgOiAiRCBNTU1NIFlZWVkgTFQiLAogICAgICAgICAgICBMTExMIDogImRkZGQsIEQgTU1NTSBZWVlZIExUIgogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW1RvZGF5IGF0XSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW1RvbW9ycm93IGF0XSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgW2F0XSBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW1llc3RlcmRheSBhdF0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdbTGFzdF0gZGRkZCBbYXRdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogImluICVzIiwKICAgICAgICAgICAgcGFzdCA6ICIlcyBhZ28iLAogICAgICAgICAgICBzIDogImEgZmV3IHNlY29uZHMiLAogICAgICAgICAgICBtIDogImEgbWludXRlIiwKICAgICAgICAgICAgbW0gOiAiJWQgbWludXRlcyIsCiAgICAgICAgICAgIGggOiAiYW4gaG91ciIsCiAgICAgICAgICAgIGhoIDogIiVkIGhvdXJzIiwKICAgICAgICAgICAgZCA6ICJhIGRheSIsCiAgICAgICAgICAgIGRkIDogIiVkIGRheXMiLAogICAgICAgICAgICBNIDogImEgbW9udGgiLAogICAgICAgICAgICBNTSA6ICIlZCBtb250aHMiLAogICAgICAgICAgICB5IDogImEgeWVhciIsCiAgICAgICAgICAgIHl5IDogIiVkIHllYXJzIgogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgdmFyIGIgPSBudW1iZXIgJSAxMCwKICAgICAgICAgICAgICAgIG91dHB1dCA9ICh+fiAobnVtYmVyICUgMTAwIC8gMTApID09PSAxKSA\/ICd0aCcgOgogICAgICAgICAgICAgICAgKGIgPT09IDEpID8gJ3N0JyA6CiAgICAgICAgICAgICAgICAoYiA9PT0gMikgPyAnbmQnIDoKICAgICAgICAgICAgICAgIChiID09PSAzKSA\/ICdyZCcgOiAndGgnOwogICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgb3V0cHV0OwogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiBlc3BlcmFudG8gKGVvKQovLyBhdXRob3IgOiBDb2xpbiBEZWFuIDogaHR0cHM6Ly9naXRodWIuY29tL2NvbGluZGVhbgovLyBrb21lbnRvOiBNaSBlc3RhcyBtYWxjZXJ0YSBzZSBtaSBrb3Jla3RlIHRyYWt0aXMgYWt1emF0aXZvam4gZW4gdGl1IHRyYWR1a28uCi8vICAgICAgICAgIFNlIG5lLCBib252b2x1IGtvcmVrdGkga2FqIGF2aXppIG1pbiBwb3Iga2UgbWkgcG92YXMgbGVybmkhCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5sYW5nKCdlbycsIHsKICAgICAgICBtb250aHMgOiAiamFudWFyb19mZWJydWFyb19tYXJ0b19hcHJpbG9fbWFqb19qdW5pb19qdWxpb19hxa1ndXN0b19zZXB0ZW1icm9fb2t0b2Jyb19ub3ZlbWJyb19kZWNlbWJybyIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydCA6ICJqYW5fZmViX21hcl9hcHJfbWFqX2p1bl9qdWxfYcWtZ19zZXBfb2t0X25vdl9kZWMiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAiRGltYW7EiW9fTHVuZG9fTWFyZG9fTWVya3JlZG9fxLRhxa1kb19WZW5kcmVkb19TYWJhdG8iLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICJEaW1fTHVuX01hcmRfTWVya1\/EtGHFrV9WZW5fU2FiIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogIkRpX0x1X01hX01lX8S0YV9WZV9TYSIuc3BsaXQoIl8iKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAiSEg6bW0iLAogICAgICAgICAgICBMIDogIllZWVktTU0tREQiLAogICAgICAgICAgICBMTCA6ICJEWy1hbiBkZV0gTU1NTSwgWVlZWSIsCiAgICAgICAgICAgIExMTCA6ICJEWy1hbiBkZV0gTU1NTSwgWVlZWSBMVCIsCiAgICAgICAgICAgIExMTEwgOiAiZGRkZCwgW2xhXSBEWy1hbiBkZV0gTU1NTSwgWVlZWSBMVCIKICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtIDogZnVuY3Rpb24gKGhvdXJzLCBtaW51dGVzLCBpc0xvd2VyKSB7CiAgICAgICAgICAgIGlmIChob3VycyA+IDExKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gaXNMb3dlciA\/ICdwLnQubS4nIDogJ1AuVC5NLic7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gaXNMb3dlciA\/ICdhLnQubS4nIDogJ0EuVC5NLic7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1tIb2RpYcWtIGplXSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW01vcmdhxa0gamVdIExUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnZGRkZCBbamVdIExUJywKICAgICAgICAgICAgbGFzdERheSA6ICdbSGllcmHFrSBqZV0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdbcGFzaW50YV0gZGRkZCBbamVdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogImplICVzIiwKICAgICAgICAgICAgcGFzdCA6ICJhbnRhxa0gJXMiLAogICAgICAgICAgICBzIDogInNla3VuZG9qIiwKICAgICAgICAgICAgbSA6ICJtaW51dG8iLAogICAgICAgICAgICBtbSA6ICIlZCBtaW51dG9qIiwKICAgICAgICAgICAgaCA6ICJob3JvIiwKICAgICAgICAgICAgaGggOiAiJWQgaG9yb2oiLAogICAgICAgICAgICBkIDogInRhZ28iLC8vbmUgJ2RpdXJubycsIMSJYXIgZXN0YXMgdXppdGEgcG9yIHByb2tzaW11bW8KICAgICAgICAgICAgZGQgOiAiJWQgdGFnb2oiLAogICAgICAgICAgICBNIDogIm1vbmF0byIsCiAgICAgICAgICAgIE1NIDogIiVkIG1vbmF0b2oiLAogICAgICAgICAgICB5IDogImphcm8iLAogICAgICAgICAgICB5eSA6ICIlZCBqYXJvaiIKICAgICAgICB9LAogICAgICAgIG9yZGluYWwgOiAiJWRhIiwKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNyAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gMXN0IGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7CgovLyBtb21lbnQuanMgbGFuZ3VhZ2UgY29uZmlndXJhdGlvbgovLyBsYW5ndWFnZSA6IHNwYW5pc2ggKGVzKQovLyBhdXRob3IgOiBKdWxpbyBOYXB1csOtIDogaHR0cHM6Ly9naXRodWIuY29tL2p1bGlvbmMKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewogICAgICAgIGRlZmluZShbJ21vbWVudCddLCBmYWN0b3J5KTsgLy8gQU1ECiAgICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JykgewogICAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKCcuLi9tb21lbnQnKSk7IC8vIE5vZGUKICAgIH0gZWxzZSB7CiAgICAgICAgZmFjdG9yeSh3aW5kb3cubW9tZW50KTsgLy8gQnJvd3NlciBnbG9iYWwKICAgIH0KfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICByZXR1cm4gbW9tZW50LmxhbmcoJ2VzJywgewogICAgICAgIG1vbnRocyA6ICJlbmVyb19mZWJyZXJvX21hcnpvX2FicmlsX21heW9fanVuaW9fanVsaW9fYWdvc3RvX3NlcHRpZW1icmVfb2N0dWJyZV9ub3ZpZW1icmVfZGljaWVtYnJlIi5zcGxpdCgiXyIpLAogICAgICAgIG1vbnRoc1Nob3J0IDogImVuZS5fZmViLl9tYXIuX2Fici5fbWF5Ll9qdW4uX2p1bC5fYWdvLl9zZXAuX29jdC5fbm92Ll9kaWMuIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzIDogImRvbWluZ29fbHVuZXNfbWFydGVzX21pw6lyY29sZXNfanVldmVzX3ZpZXJuZXNfc8OhYmFkbyIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogImRvbS5fbHVuLl9tYXIuX21pw6kuX2p1ZS5fdmllLl9zw6FiLiIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICJEb19MdV9NYV9NaV9KdV9WaV9Tw6EiLnNwbGl0KCJfIiksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogIkg6bW0iLAogICAgICAgICAgICBMIDogIkREL01NL1lZWVkiLAogICAgICAgICAgICBMTCA6ICJEIFtkZV0gTU1NTSBbZGVdIFlZWVkiLAogICAgICAgICAgICBMTEwgOiAiRCBbZGVdIE1NTU0gW2RlXSBZWVlZIExUIiwKICAgICAgICAgICAgTExMTCA6ICJkZGRkLCBEIFtkZV0gTU1NTSBbZGVdIFlZWVkgTFQiCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAnW2hveSBhIGxhJyArICgodGhpcy5ob3VycygpICE9PSAxKSA\/ICdzJyA6ICcnKSArICddIExUJzsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbmV4dERheSA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAnW21hw7FhbmEgYSBsYScgKyAoKHRoaXMuaG91cnMoKSAhPT0gMSkgPyAncycgOiAnJykgKyAnXSBMVCc7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG5leHRXZWVrIDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuICdkZGRkIFthIGxhJyArICgodGhpcy5ob3VycygpICE9PSAxKSA\/ICdzJyA6ICcnKSArICddIExUJzsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbGFzdERheSA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAnW2F5ZXIgYSBsYScgKyAoKHRoaXMuaG91cnMoKSAhPT0gMSkgPyAncycgOiAnJykgKyAnXSBMVCc7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhc3RXZWVrIDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuICdbZWxdIGRkZGQgW3Bhc2FkbyBhIGxhJyArICgodGhpcy5ob3VycygpICE9PSAxKSA\/ICdzJyA6ICcnKSArICddIExUJzsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogImVuICVzIiwKICAgICAgICAgICAgcGFzdCA6ICJoYWNlICVzIiwKICAgICAgICAgICAgcyA6ICJ1bm9zIHNlZ3VuZG9zIiwKICAgICAgICAgICAgbSA6ICJ1biBtaW51dG8iLAogICAgICAgICAgICBtbSA6ICIlZCBtaW51dG9zIiwKICAgICAgICAgICAgaCA6ICJ1bmEgaG9yYSIsCiAgICAgICAgICAgIGhoIDogIiVkIGhvcmFzIiwKICAgICAgICAgICAgZCA6ICJ1biBkw61hIiwKICAgICAgICAgICAgZGQgOiAiJWQgZMOtYXMiLAogICAgICAgICAgICBNIDogInVuIG1lcyIsCiAgICAgICAgICAgIE1NIDogIiVkIG1lc2VzIiwKICAgICAgICAgICAgeSA6ICJ1biBhw7FvIiwKICAgICAgICAgICAgeXkgOiAiJWQgYcOxb3MiCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsIDogJyVkwronLAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA0ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiA0dGggaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogZXN0b25pYW4gKGV0KQovLyBhdXRob3IgOiBIZW5yeSBLZWhsbWFubiA6IGh0dHBzOi8vZ2l0aHViLmNvbS9tYWRoZW5yeQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIGZ1bmN0aW9uIHRyYW5zbGF0ZVNlY29uZHMobnVtYmVyLCB3aXRob3V0U3VmZml4LCBrZXksIGlzRnV0dXJlKSB7CiAgICAgICAgcmV0dXJuIChpc0Z1dHVyZSB8fCB3aXRob3V0U3VmZml4KSA\/ICdwYWFyaSBzZWt1bmRpJyA6ICdwYWFyIHNla3VuZGl0JzsKICAgIH0KCiAgICByZXR1cm4gbW9tZW50LmxhbmcoJ2V0JywgewogICAgICAgIG1vbnRocyAgICAgICAgOiAiamFhbnVhcl92ZWVicnVhcl9tw6RydHNfYXByaWxsX21haV9qdXVuaV9qdXVsaV9hdWd1c3Rfc2VwdGVtYmVyX29rdG9vYmVyX25vdmVtYmVyX2RldHNlbWJlciIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydCAgIDogImphYW5fdmVlYnJfbcOkcnRzX2Fwcl9tYWlfanV1bmlfanV1bGlfYXVnX3NlcHRfb2t0X25vdl9kZXRzIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzICAgICAgOiAicMO8aGFww6Rldl9lc21hc3DDpGV2X3RlaXNpcMOkZXZfa29sbWFww6Rldl9uZWxqYXDDpGV2X3JlZWRlX2xhdXDDpGV2Ii5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAiUF9FX1RfS19OX1JfTCIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiAgIDogIlBfRV9UX0tfTl9SX0wiLnNwbGl0KCJfIiksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUICAgOiAiSDptbSIsCiAgICAgICAgICAgIEwgICAgOiAiREQuTU0uWVlZWSIsCiAgICAgICAgICAgIExMICAgOiAiRC4gTU1NTSBZWVlZIiwKICAgICAgICAgICAgTExMICA6ICJELiBNTU1NIFlZWVkgTFQiLAogICAgICAgICAgICBMTExMIDogImRkZGQsIEQuIE1NTU0gWVlZWSBMVCIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5ICA6ICdbVMOkbmEsXSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgIDogJ1tIb21tZSxdIExUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnW0rDpHJnbWluZV0gZGRkZCBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgIDogJ1tFaWxlLF0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdbRWVsbWluZV0gZGRkZCBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICIlcyBww6RyYXN0IiwKICAgICAgICAgICAgcGFzdCAgIDogIiVzIHRhZ2FzaSIsCiAgICAgICAgICAgIHMgICAgICA6IHRyYW5zbGF0ZVNlY29uZHMsCiAgICAgICAgICAgIG0gICAgICA6ICJtaW51dCIsCiAgICAgICAgICAgIG1tICAgICA6ICIlZCBtaW51dGl0IiwKICAgICAgICAgICAgaCAgICAgIDogInR1bmQiLAogICAgICAgICAgICBoaCAgICAgOiAiJWQgdHVuZGkiLAogICAgICAgICAgICBkICAgICAgOiAicMOkZXYiLAogICAgICAgICAgICBkZCAgICAgOiAiJWQgcMOkZXZhIiwKICAgICAgICAgICAgTSAgICAgIDogImt1dSIsCiAgICAgICAgICAgIE1NICAgICA6ICIlZCBrdXVkIiwKICAgICAgICAgICAgeSAgICAgIDogImFhc3RhIiwKICAgICAgICAgICAgeXkgICAgIDogIiVkIGFhc3RhdCIKICAgICAgICB9LAogICAgICAgIG9yZGluYWwgOiAnJWQuJywKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNCAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gNHRoIGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7CgovLyBtb21lbnQuanMgbGFuZ3VhZ2UgY29uZmlndXJhdGlvbgovLyBsYW5ndWFnZSA6IGV1c2thcmEgKGV1KQovLyBhdXRob3IgOiBFbmVrbyBJbGxhcnJhbWVuZGkgOiBodHRwczovL2dpdGh1Yi5jb20vZWlsbGFycmEKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewogICAgICAgIGRlZmluZShbJ21vbWVudCddLCBmYWN0b3J5KTsgLy8gQU1ECiAgICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JykgewogICAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKCcuLi9tb21lbnQnKSk7IC8vIE5vZGUKICAgIH0gZWxzZSB7CiAgICAgICAgZmFjdG9yeSh3aW5kb3cubW9tZW50KTsgLy8gQnJvd3NlciBnbG9iYWwKICAgIH0KfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICByZXR1cm4gbW9tZW50LmxhbmcoJ2V1JywgewogICAgICAgIG1vbnRocyA6ICJ1cnRhcnJpbGFfb3RzYWlsYV9tYXJ0eG9hX2FwaXJpbGFfbWFpYXR6YV9la2FpbmFfdXp0YWlsYV9hYnV6dHVhX2lyYWlsYV91cnJpYV9hemFyb2FfYWJlbmR1YSIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydCA6ICJ1cnQuX290cy5fbWFyLl9hcGkuX21haS5fZWthLl91enQuX2FidS5faXJhLl91cnIuX2F6YS5fYWJlLiIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5cyA6ICJpZ2FuZGVhX2FzdGVsZWhlbmFfYXN0ZWFydGVhX2FzdGVhemtlbmFfb3N0ZWd1bmFfb3N0aXJhbGFfbGFydW5iYXRhIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAiaWcuX2FsLl9hci5fYXouX29nLl9vbC5fbHIuIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogImlnX2FsX2FyX2F6X29nX29sX2xyIi5zcGxpdCgiXyIpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICJISDptbSIsCiAgICAgICAgICAgIEwgOiAiWVlZWS1NTS1ERCIsCiAgICAgICAgICAgIExMIDogIllZWVlba29dIE1NTU1bcmVuXSBEW2FdIiwKICAgICAgICAgICAgTExMIDogIllZWVlba29dIE1NTU1bcmVuXSBEW2FdIExUIiwKICAgICAgICAgICAgTExMTCA6ICJkZGRkLCBZWVlZW2tvXSBNTU1NW3Jlbl0gRFthXSBMVCIsCiAgICAgICAgICAgIGwgOiAiWVlZWS1NLUQiLAogICAgICAgICAgICBsbCA6ICJZWVlZW2tvXSBNTU0gRFthXSIsCiAgICAgICAgICAgIGxsbCA6ICJZWVlZW2tvXSBNTU0gRFthXSBMVCIsCiAgICAgICAgICAgIGxsbGwgOiAiZGRkLCBZWVlZW2tvXSBNTU0gRFthXSBMVCIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1tnYXVyXSBMVFtldGFuXScsCiAgICAgICAgICAgIG5leHREYXkgOiAnW2JpaGFyXSBMVFtldGFuXScsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgTFRbZXRhbl0nLAogICAgICAgICAgICBsYXN0RGF5IDogJ1thdHpvXSBMVFtldGFuXScsCiAgICAgICAgICAgIGxhc3RXZWVrIDogJ1thdXJyZWtvXSBkZGRkIExUW2V0YW5dJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogIiVzIGJhcnJ1IiwKICAgICAgICAgICAgcGFzdCA6ICJkdWVsYSAlcyIsCiAgICAgICAgICAgIHMgOiAic2VndW5kbyBiYXR6dWsiLAogICAgICAgICAgICBtIDogIm1pbnV0dSBiYXQiLAogICAgICAgICAgICBtbSA6ICIlZCBtaW51dHUiLAogICAgICAgICAgICBoIDogIm9yZHUgYmF0IiwKICAgICAgICAgICAgaGggOiAiJWQgb3JkdSIsCiAgICAgICAgICAgIGQgOiAiZWd1biBiYXQiLAogICAgICAgICAgICBkZCA6ICIlZCBlZ3VuIiwKICAgICAgICAgICAgTSA6ICJoaWxhYmV0ZSBiYXQiLAogICAgICAgICAgICBNTSA6ICIlZCBoaWxhYmV0ZSIsCiAgICAgICAgICAgIHkgOiAidXJ0ZSBiYXQiLAogICAgICAgICAgICB5eSA6ICIlZCB1cnRlIgogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbCA6ICclZC4nLAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA3ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiAxc3QgaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogUGVyc2lhbiBMYW5ndWFnZQovLyBhdXRob3IgOiBFYnJhaGltIEJ5YWdvd2kgOiBodHRwczovL2dpdGh1Yi5jb20vZWJyYW1pbmlvCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgdmFyIHN5bWJvbE1hcCA9IHsKICAgICAgICAnMSc6ICfbsScsCiAgICAgICAgJzInOiAn27InLAogICAgICAgICczJzogJ9uzJywKICAgICAgICAnNCc6ICfbtCcsCiAgICAgICAgJzUnOiAn27UnLAogICAgICAgICc2JzogJ9u2JywKICAgICAgICAnNyc6ICfbtycsCiAgICAgICAgJzgnOiAn27gnLAogICAgICAgICc5JzogJ9u5JywKICAgICAgICAnMCc6ICfbsCcKICAgIH0sIG51bWJlck1hcCA9IHsKICAgICAgICAn27EnOiAnMScsCiAgICAgICAgJ9uyJzogJzInLAogICAgICAgICfbsyc6ICczJywKICAgICAgICAn27QnOiAnNCcsCiAgICAgICAgJ9u1JzogJzUnLAogICAgICAgICfbtic6ICc2JywKICAgICAgICAn27cnOiAnNycsCiAgICAgICAgJ9u4JzogJzgnLAogICAgICAgICfbuSc6ICc5JywKICAgICAgICAn27AnOiAnMCcKICAgIH07CgogICAgcmV0dXJuIG1vbWVudC5sYW5nKCdmYScsIHsKICAgICAgICBtb250aHMgOiAn2pjYp9mG2YjbjNmHX9mB2YjYsduM2Ydf2YXYp9ix2LNf2KLZiNix24zZhF\/ZhdmHX9qY2YjYptmGX9qY2YjYptuM2Ydf2KfZiNiqX9iz2b7Yqtin2YXYqNixX9in2qnYqtio2LFf2YbZiNin2YXYqNixX9iv2LPYp9mF2KjYsScuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICfamNin2YbZiNuM2Ydf2YHZiNix24zZh1\/Zhdin2LHYs1\/YotmI2LHbjNmEX9mF2Ydf2pjZiNim2YZf2pjZiNim24zZh1\/Yp9mI2Kpf2LPZvtiq2KfZhdio2LFf2Kfaqdiq2KjYsV\/ZhtmI2KfZhdio2LFf2K\/Ys9in2YXYqNixJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ9uM2qlcdTIwMGPYtNmG2KjZh1\/Yr9mI2LTZhtio2Ydf2LPZh1x1MjAwY9i02YbYqNmHX9qG2YfYp9ix2LTZhtio2Ydf2b7ZhtisXHUyMDBj2LTZhtio2Ydf2KzZhdi52Ydf2LTZhtio2YcnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICfbjNqpXHUyMDBj2LTZhtio2Ydf2K\/ZiNi02YbYqNmHX9iz2YdcdTIwMGPYtNmG2KjZh1\/ahtmH2KfYsdi02YbYqNmHX9m+2YbYrFx1MjAwY9i02YbYqNmHX9is2YXYudmHX9i02YbYqNmHJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ9uMX9ivX9izX9qGX9m+X9isX9i0Jy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdISDptbScsCiAgICAgICAgICAgIEwgOiAnREQvTU0vWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZIExUJywKICAgICAgICAgICAgTExMTCA6ICdkZGRkLCBEIE1NTU0gWVlZWSBMVCcKICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtIDogZnVuY3Rpb24gKGhvdXIsIG1pbnV0ZSwgaXNMb3dlcikgewogICAgICAgICAgICBpZiAoaG91ciA8IDEyKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gItmC2KjZhCDYp9iyINi42YfYsSI7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gItio2LnYryDYp9iyINi42YfYsSI7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1vYp9mF2LHZiNiyINiz2KfYudiqXSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW9mB2LHYr9inINiz2KfYudiqXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgW9iz2KfYudiqXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW9iv24zYsdmI2LIg2LPYp9i52KpdIExUJywKICAgICAgICAgICAgbGFzdFdlZWsgOiAnZGRkZCBb2b7bjNi0XSBb2LPYp9i52KpdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ9iv2LEgJXMnLAogICAgICAgICAgICBwYXN0IDogJyVzINm+24zYtCcsCiAgICAgICAgICAgIHMgOiAn2obZhtiv24zZhiDYq9in2YbbjNmHJywKICAgICAgICAgICAgbSA6ICfbjNqpINiv2YLbjNmC2YcnLAogICAgICAgICAgICBtbSA6ICclZCDYr9mC24zZgtmHJywKICAgICAgICAgICAgaCA6ICfbjNqpINiz2KfYudiqJywKICAgICAgICAgICAgaGggOiAnJWQg2LPYp9i52KonLAogICAgICAgICAgICBkIDogJ9uM2qkg2LHZiNiyJywKICAgICAgICAgICAgZGQgOiAnJWQg2LHZiNiyJywKICAgICAgICAgICAgTSA6ICfbjNqpINmF2KfZhycsCiAgICAgICAgICAgIE1NIDogJyVkINmF2KfZhycsCiAgICAgICAgICAgIHkgOiAn24zaqSDYs9in2YQnLAogICAgICAgICAgICB5eSA6ICclZCDYs9in2YQnCiAgICAgICAgfSwKICAgICAgICBwcmVwYXJzZTogZnVuY3Rpb24gKHN0cmluZykgewogICAgICAgICAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2UoL1vbsC3buV0vZywgZnVuY3Rpb24gKG1hdGNoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyTWFwW21hdGNoXTsKICAgICAgICAgICAgfSkucmVwbGFjZSgv2IwvZywgJywnKTsKICAgICAgICB9LAogICAgICAgIHBvc3Rmb3JtYXQ6IGZ1bmN0aW9uIChzdHJpbmcpIHsKICAgICAgICAgICAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC9cZC9nLCBmdW5jdGlvbiAobWF0Y2gpIHsKICAgICAgICAgICAgICAgIHJldHVybiBzeW1ib2xNYXBbbWF0Y2hdOwogICAgICAgICAgICB9KS5yZXBsYWNlKC8sL2csICfYjCcpOwogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbCA6ICclZNmFJywKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiA2LCAvLyBTYXR1cmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiAxMiAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiAxc3QgaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogZmlubmlzaCAoZmkpCi8vIGF1dGhvciA6IFRhcm1vIEFpZGFudGF1c3RhIDogaHR0cHM6Ly9naXRodWIuY29tL2JsZWFkb2YKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewogICAgICAgIGRlZmluZShbJ21vbWVudCddLCBmYWN0b3J5KTsgLy8gQU1ECiAgICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JykgewogICAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKCcuLi9tb21lbnQnKSk7IC8vIE5vZGUKICAgIH0gZWxzZSB7CiAgICAgICAgZmFjdG9yeSh3aW5kb3cubW9tZW50KTsgLy8gQnJvd3NlciBnbG9iYWwKICAgIH0KfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICB2YXIgbnVtYmVyc19wYXN0ID0gJ25vbGxhIHlrc2kga2Frc2kga29sbWUgbmVsasOkIHZpaXNpIGt1dXNpIHNlaXRzZW3DpG4ga2FoZGVrc2FuIHloZGVrc8Okbicuc3BsaXQoJyAnKSwKICAgICAgICBudW1iZXJzX2Z1dHVyZSA9IFsnbm9sbGEnLCAneWhkZW4nLCAna2FoZGVuJywgJ2tvbG1lbicsICduZWxqw6RuJywgJ3ZpaWRlbicsICdrdXVkZW4nLAogICAgICAgICAgICAgICAgICAgICAgICAgIG51bWJlcnNfcGFzdFs3XSwgbnVtYmVyc19wYXN0WzhdLCBudW1iZXJzX3Bhc3RbOV1dOwoKICAgIGZ1bmN0aW9uIHRyYW5zbGF0ZShudW1iZXIsIHdpdGhvdXRTdWZmaXgsIGtleSwgaXNGdXR1cmUpIHsKICAgICAgICB2YXIgcmVzdWx0ID0gIiI7CiAgICAgICAgc3dpdGNoIChrZXkpIHsKICAgICAgICBjYXNlICdzJzoKICAgICAgICAgICAgcmV0dXJuIGlzRnV0dXJlID8gJ211dXRhbWFuIHNla3VubmluJyA6ICdtdXV0YW1hIHNla3VudGknOwogICAgICAgIGNhc2UgJ20nOgogICAgICAgICAgICByZXR1cm4gaXNGdXR1cmUgPyAnbWludXV0aW4nIDogJ21pbnV1dHRpJzsKICAgICAgICBjYXNlICdtbSc6CiAgICAgICAgICAgIHJlc3VsdCA9IGlzRnV0dXJlID8gJ21pbnV1dGluJyA6ICdtaW51dXR0aWEnOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdoJzoKICAgICAgICAgICAgcmV0dXJuIGlzRnV0dXJlID8gJ3R1bm5pbicgOiAndHVudGknOwogICAgICAgIGNhc2UgJ2hoJzoKICAgICAgICAgICAgcmVzdWx0ID0gaXNGdXR1cmUgPyAndHVubmluJyA6ICd0dW50aWEnOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdkJzoKICAgICAgICAgICAgcmV0dXJuIGlzRnV0dXJlID8gJ3DDpGl2w6RuJyA6ICdww6RpdsOkJzsKICAgICAgICBjYXNlICdkZCc6CiAgICAgICAgICAgIHJlc3VsdCA9IGlzRnV0dXJlID8gJ3DDpGl2w6RuJyA6ICdww6RpdsOkw6QnOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdNJzoKICAgICAgICAgICAgcmV0dXJuIGlzRnV0dXJlID8gJ2t1dWthdWRlbicgOiAna3V1a2F1c2knOwogICAgICAgIGNhc2UgJ01NJzoKICAgICAgICAgICAgcmVzdWx0ID0gaXNGdXR1cmUgPyAna3V1a2F1ZGVuJyA6ICdrdXVrYXV0dGEnOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICd5JzoKICAgICAgICAgICAgcmV0dXJuIGlzRnV0dXJlID8gJ3Z1b2RlbicgOiAndnVvc2knOwogICAgICAgIGNhc2UgJ3l5JzoKICAgICAgICAgICAgcmVzdWx0ID0gaXNGdXR1cmUgPyAndnVvZGVuJyA6ICd2dW90dGEnOwogICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgICAgcmVzdWx0ID0gdmVyYmFsX251bWJlcihudW1iZXIsIGlzRnV0dXJlKSArICIgIiArIHJlc3VsdDsKICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgfQoKICAgIGZ1bmN0aW9uIHZlcmJhbF9udW1iZXIobnVtYmVyLCBpc0Z1dHVyZSkgewogICAgICAgIHJldHVybiBudW1iZXIgPCAxMCA\/IChpc0Z1dHVyZSA\/IG51bWJlcnNfZnV0dXJlW251bWJlcl0gOiBudW1iZXJzX3Bhc3RbbnVtYmVyXSkgOiBudW1iZXI7CiAgICB9CgogICAgcmV0dXJuIG1vbWVudC5sYW5nKCdmaScsIHsKICAgICAgICBtb250aHMgOiAidGFtbWlrdXVfaGVsbWlrdXVfbWFhbGlza3V1X2h1aHRpa3V1X3RvdWtva3V1X2tlc8Oka3V1X2hlaW7DpGt1dV9lbG9rdXVfc3l5c2t1dV9sb2tha3V1X21hcnJhc2t1dV9qb3VsdWt1dSIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydCA6ICJ0YW1taV9oZWxtaV9tYWFsaXNfaHVodGlfdG91a29fa2Vzw6RfaGVpbsOkX2Vsb19zeXlzX2xva2FfbWFycmFzX2pvdWx1Ii5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzIDogInN1bm51bnRhaV9tYWFuYW50YWlfdGlpc3RhaV9rZXNraXZpaWtrb190b3JzdGFpX3BlcmphbnRhaV9sYXVhbnRhaSIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogInN1X21hX3RpX2tlX3RvX3BlX2xhIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogInN1X21hX3RpX2tlX3RvX3BlX2xhIi5zcGxpdCgiXyIpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICJISC5tbSIsCiAgICAgICAgICAgIEwgOiAiREQuTU0uWVlZWSIsCiAgICAgICAgICAgIExMIDogIkRvIE1NTU1bdGFdIFlZWVkiLAogICAgICAgICAgICBMTEwgOiAiRG8gTU1NTVt0YV0gWVlZWSwgW2tsb10gTFQiLAogICAgICAgICAgICBMTExMIDogImRkZGQsIERvIE1NTU1bdGFdIFlZWVksIFtrbG9dIExUIiwKICAgICAgICAgICAgbCA6ICJELk0uWVlZWSIsCiAgICAgICAgICAgIGxsIDogIkRvIE1NTSBZWVlZIiwKICAgICAgICAgICAgbGxsIDogIkRvIE1NTSBZWVlZLCBba2xvXSBMVCIsCiAgICAgICAgICAgIGxsbGwgOiAiZGRkLCBEbyBNTU0gWVlZWSwgW2tsb10gTFQiCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6ICdbdMOkbsOkw6RuXSBba2xvXSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW2h1b21lbm5hXSBba2xvXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgW2tsb10gTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1tlaWxlbl0gW2tsb10gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdbdmlpbWVdIGRkZGRbbmFdIFtrbG9dIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogIiVzIHDDpMOkc3TDpCIsCiAgICAgICAgICAgIHBhc3QgOiAiJXMgc2l0dGVuIiwKICAgICAgICAgICAgcyA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgbSA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgbW0gOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIGggOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIGhoIDogdHJhbnNsYXRlLAogICAgICAgICAgICBkIDogdHJhbnNsYXRlLAogICAgICAgICAgICBkZCA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgTSA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgTU0gOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIHkgOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIHl5IDogdHJhbnNsYXRlCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsIDogIiVkLiIsCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiBjYW5hZGlhbiBmcmVuY2ggKGZyLWNhKQovLyBhdXRob3IgOiBKb25hdGhhbiBBYm91cmJpaCA6IGh0dHBzOi8vZ2l0aHViLmNvbS9qb25iY2EKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewogICAgICAgIGRlZmluZShbJ21vbWVudCddLCBmYWN0b3J5KTsgLy8gQU1ECiAgICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JykgewogICAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKCcuLi9tb21lbnQnKSk7IC8vIE5vZGUKICAgIH0gZWxzZSB7CiAgICAgICAgZmFjdG9yeSh3aW5kb3cubW9tZW50KTsgLy8gQnJvd3NlciBnbG9iYWwKICAgIH0KfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICByZXR1cm4gbW9tZW50LmxhbmcoJ2ZyLWNhJywgewogICAgICAgIG1vbnRocyA6ICJqYW52aWVyX2bDqXZyaWVyX21hcnNfYXZyaWxfbWFpX2p1aW5fanVpbGxldF9hb8O7dF9zZXB0ZW1icmVfb2N0b2JyZV9ub3ZlbWJyZV9kw6ljZW1icmUiLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAiamFudi5fZsOpdnIuX21hcnNfYXZyLl9tYWlfanVpbl9qdWlsLl9hb8O7dF9zZXB0Ll9vY3QuX25vdi5fZMOpYy4iLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAiZGltYW5jaGVfbHVuZGlfbWFyZGlfbWVyY3JlZGlfamV1ZGlfdmVuZHJlZGlfc2FtZWRpIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAiZGltLl9sdW4uX21hci5fbWVyLl9qZXUuX3Zlbi5fc2FtLiIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICJEaV9MdV9NYV9NZV9KZV9WZV9TYSIuc3BsaXQoIl8iKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAiSEg6bW0iLAogICAgICAgICAgICBMIDogIllZWVktTU0tREQiLAogICAgICAgICAgICBMTCA6ICJEIE1NTU0gWVlZWSIsCiAgICAgICAgICAgIExMTCA6ICJEIE1NTU0gWVlZWSBMVCIsCiAgICAgICAgICAgIExMTEwgOiAiZGRkZCBEIE1NTU0gWVlZWSBMVCIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5OiAiW0F1am91cmQnaHVpIMOgXSBMVCIsCiAgICAgICAgICAgIG5leHREYXk6ICdbRGVtYWluIMOgXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrOiAnZGRkZCBbw6BdIExUJywKICAgICAgICAgICAgbGFzdERheTogJ1tIaWVyIMOgXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrOiAnZGRkZCBbZGVybmllciDDoF0gTFQnLAogICAgICAgICAgICBzYW1lRWxzZTogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICJkYW5zICVzIiwKICAgICAgICAgICAgcGFzdCA6ICJpbCB5IGEgJXMiLAogICAgICAgICAgICBzIDogInF1ZWxxdWVzIHNlY29uZGVzIiwKICAgICAgICAgICAgbSA6ICJ1bmUgbWludXRlIiwKICAgICAgICAgICAgbW0gOiAiJWQgbWludXRlcyIsCiAgICAgICAgICAgIGggOiAidW5lIGhldXJlIiwKICAgICAgICAgICAgaGggOiAiJWQgaGV1cmVzIiwKICAgICAgICAgICAgZCA6ICJ1biBqb3VyIiwKICAgICAgICAgICAgZGQgOiAiJWQgam91cnMiLAogICAgICAgICAgICBNIDogInVuIG1vaXMiLAogICAgICAgICAgICBNTSA6ICIlZCBtb2lzIiwKICAgICAgICAgICAgeSA6ICJ1biBhbiIsCiAgICAgICAgICAgIHl5IDogIiVkIGFucyIKICAgICAgICB9LAogICAgICAgIG9yZGluYWwgOiBmdW5jdGlvbiAobnVtYmVyKSB7CiAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAobnVtYmVyID09PSAxID8gJ2VyJyA6ICcnKTsKICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiBmcmVuY2ggKGZyKQovLyBhdXRob3IgOiBKb2huIEZpc2NoZXIgOiBodHRwczovL2dpdGh1Yi5jb20vamZyb2ZmaWNlCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5sYW5nKCdmcicsIHsKICAgICAgICBtb250aHMgOiAiamFudmllcl9mw6l2cmllcl9tYXJzX2F2cmlsX21haV9qdWluX2p1aWxsZXRfYW\/Du3Rfc2VwdGVtYnJlX29jdG9icmVfbm92ZW1icmVfZMOpY2VtYnJlIi5zcGxpdCgiXyIpLAogICAgICAgIG1vbnRoc1Nob3J0IDogImphbnYuX2bDqXZyLl9tYXJzX2F2ci5fbWFpX2p1aW5fanVpbC5fYW\/Du3Rfc2VwdC5fb2N0Ll9ub3YuX2TDqWMuIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzIDogImRpbWFuY2hlX2x1bmRpX21hcmRpX21lcmNyZWRpX2pldWRpX3ZlbmRyZWRpX3NhbWVkaSIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogImRpbS5fbHVuLl9tYXIuX21lci5famV1Ll92ZW4uX3NhbS4iLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNNaW4gOiAiRGlfTHVfTWFfTWVfSmVfVmVfU2EiLnNwbGl0KCJfIiksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogIkhIOm1tIiwKICAgICAgICAgICAgTCA6ICJERC9NTS9ZWVlZIiwKICAgICAgICAgICAgTEwgOiAiRCBNTU1NIFlZWVkiLAogICAgICAgICAgICBMTEwgOiAiRCBNTU1NIFlZWVkgTFQiLAogICAgICAgICAgICBMTExMIDogImRkZGQgRCBNTU1NIFlZWVkgTFQiCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheTogIltBdWpvdXJkJ2h1aSDDoF0gTFQiLAogICAgICAgICAgICBuZXh0RGF5OiAnW0RlbWFpbiDDoF0gTFQnLAogICAgICAgICAgICBuZXh0V2VlazogJ2RkZGQgW8OgXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXk6ICdbSGllciDDoF0gTFQnLAogICAgICAgICAgICBsYXN0V2VlazogJ2RkZGQgW2Rlcm5pZXIgw6BdIExUJywKICAgICAgICAgICAgc2FtZUVsc2U6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAiZGFucyAlcyIsCiAgICAgICAgICAgIHBhc3QgOiAiaWwgeSBhICVzIiwKICAgICAgICAgICAgcyA6ICJxdWVscXVlcyBzZWNvbmRlcyIsCiAgICAgICAgICAgIG0gOiAidW5lIG1pbnV0ZSIsCiAgICAgICAgICAgIG1tIDogIiVkIG1pbnV0ZXMiLAogICAgICAgICAgICBoIDogInVuZSBoZXVyZSIsCiAgICAgICAgICAgIGhoIDogIiVkIGhldXJlcyIsCiAgICAgICAgICAgIGQgOiAidW4gam91ciIsCiAgICAgICAgICAgIGRkIDogIiVkIGpvdXJzIiwKICAgICAgICAgICAgTSA6ICJ1biBtb2lzIiwKICAgICAgICAgICAgTU0gOiAiJWQgbW9pcyIsCiAgICAgICAgICAgIHkgOiAidW4gYW4iLAogICAgICAgICAgICB5eSA6ICIlZCBhbnMiCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsIDogZnVuY3Rpb24gKG51bWJlcikgewogICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgKG51bWJlciA9PT0gMSA\/ICdlcicgOiAnJyk7CiAgICAgICAgfSwKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNCAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gNHRoIGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7CgovLyBtb21lbnQuanMgbGFuZ3VhZ2UgY29uZmlndXJhdGlvbgovLyBsYW5ndWFnZSA6IGdhbGljaWFuIChnbCkKLy8gYXV0aG9yIDogSnVhbiBHLiBIdXJ0YWRvIDogaHR0cHM6Ly9naXRodWIuY29tL2p1YW5naHVydGFkbwoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQubGFuZygnZ2wnLCB7CiAgICAgICAgbW9udGhzIDogIlhhbmVpcm9fRmVicmVpcm9fTWFyem9fQWJyaWxfTWFpb19YdcOxb19YdWxsb19BZ29zdG9fU2V0ZW1icm9fT3V0dWJyb19Ob3ZlbWJyb19EZWNlbWJybyIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydCA6ICJYYW4uX0ZlYi5fTWFyLl9BYnIuX01haS5fWHXDsS5fWHVsLl9BZ28uX1NldC5fT3V0Ll9Ob3YuX0RlYy4iLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAiRG9taW5nb19MdW5zX01hcnRlc19Nw6lyY29yZXNfWG92ZXNfVmVucmVzX1PDoWJhZG8iLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICJEb20uX0x1bi5fTWFyLl9Nw6lyLl9Yb3YuX1Zlbi5fU8OhYi4iLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNNaW4gOiAiRG9fTHVfTWFfTcOpX1hvX1ZlX1PDoSIuc3BsaXQoIl8iKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAiSDptbSIsCiAgICAgICAgICAgIEwgOiAiREQvTU0vWVlZWSIsCiAgICAgICAgICAgIExMIDogIkQgTU1NTSBZWVlZIiwKICAgICAgICAgICAgTExMIDogIkQgTU1NTSBZWVlZIExUIiwKICAgICAgICAgICAgTExMTCA6ICJkZGRkIEQgTU1NTSBZWVlZIExUIgogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ1tob3hlICcgKyAoKHRoaXMuaG91cnMoKSAhPT0gMSkgPyAnw6FzJyA6ICfDoScpICsgJ10gTFQnOwogICAgICAgICAgICB9LAogICAgICAgICAgICBuZXh0RGF5IDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuICdbbWHDscOhICcgKyAoKHRoaXMuaG91cnMoKSAhPT0gMSkgPyAnw6FzJyA6ICfDoScpICsgJ10gTFQnOwogICAgICAgICAgICB9LAogICAgICAgICAgICBuZXh0V2VlayA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAnZGRkZCBbJyArICgodGhpcy5ob3VycygpICE9PSAxKSA\/ICfDoXMnIDogJ2EnKSArICddIExUJzsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbGFzdERheSA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAnW29udGUgJyArICgodGhpcy5ob3VycygpICE9PSAxKSA\/ICfDoScgOiAnYScpICsgJ10gTFQnOwogICAgICAgICAgICB9LAogICAgICAgICAgICBsYXN0V2VlayA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAnW29dIGRkZGQgW3Bhc2FkbyAnICsgKCh0aGlzLmhvdXJzKCkgIT09IDEpID8gJ8OhcycgOiAnYScpICsgJ10gTFQnOwogICAgICAgICAgICB9LAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiBmdW5jdGlvbiAoc3RyKSB7CiAgICAgICAgICAgICAgICBpZiAoc3RyID09PSAidW5zIHNlZ3VuZG9zIikgewogICAgICAgICAgICAgICAgICAgIHJldHVybiAibnVucyBzZWd1bmRvcyI7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gImVuICIgKyBzdHI7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHBhc3QgOiAiaGFpICVzIiwKICAgICAgICAgICAgcyA6ICJ1bnMgc2VndW5kb3MiLAogICAgICAgICAgICBtIDogInVuIG1pbnV0byIsCiAgICAgICAgICAgIG1tIDogIiVkIG1pbnV0b3MiLAogICAgICAgICAgICBoIDogInVuaGEgaG9yYSIsCiAgICAgICAgICAgIGhoIDogIiVkIGhvcmFzIiwKICAgICAgICAgICAgZCA6ICJ1biBkw61hIiwKICAgICAgICAgICAgZGQgOiAiJWQgZMOtYXMiLAogICAgICAgICAgICBNIDogInVuIG1lcyIsCiAgICAgICAgICAgIE1NIDogIiVkIG1lc2VzIiwKICAgICAgICAgICAgeSA6ICJ1biBhbm8iLAogICAgICAgICAgICB5eSA6ICIlZCBhbm9zIgogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbCA6ICclZMK6JywKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNyAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gMXN0IGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7CgovLyBtb21lbnQuanMgbGFuZ3VhZ2UgY29uZmlndXJhdGlvbgovLyBsYW5ndWFnZSA6IEhlYnJldyAoaGUpCi8vIGF1dGhvciA6IFRvbWVyIENvaGVuIDogaHR0cHM6Ly9naXRodWIuY29tL3RvbWVyCi8vIGF1dGhvciA6IE1vc2hlIFNpbWFudG92IDogaHR0cHM6Ly9naXRodWIuY29tL0RldmVsb3BtZW50SUwKLy8gYXV0aG9yIDogVGFsIEF0ZXIgOiBodHRwczovL2dpdGh1Yi5jb20vVGFsQXRlcgoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQubGFuZygnaGUnLCB7CiAgICAgICAgbW9udGhzIDogIteZ16DXldeQ16hf16TXkdeo15XXkNeoX9ee16jXpV\/XkNek16jXmdecX9ee15DXmV\/XmdeV16DXmV\/XmdeV15zXmV\/XkNeV15LXldeh15hf16HXpNeY157XkdeoX9eQ15XXp9eY15XXkdeoX9eg15XXkdee15HXqF\/Xk9em157XkdeoIi5zcGxpdCgiXyIpLAogICAgICAgIG1vbnRoc1Nob3J0IDogIteZ16DXldezX9ek15HXqNezX9ee16jXpV\/XkNek16jXs1\/XnteQ15lf15nXldeg15lf15nXldec15lf15DXldeS17Nf16HXpNeY17Nf15DXlden17Nf16DXldeR17Nf15PXptee17MiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAi16jXkNep15XXn1\/Xqdeg15lf16nXnNeZ16nXmV\/XqNeR15nXoteZX9eX157Xmdep15lf16nXmdep15lf16nXkdeqIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAi15DXs1\/XkdezX9eS17Nf15PXs1\/XlNezX9eV17Nf16nXsyIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICLXkF\/XkV\/Xkl\/Xk1\/XlF\/XlV\/XqSIuc3BsaXQoIl8iKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAiSEg6bW0iLAogICAgICAgICAgICBMIDogIkREL01NL1lZWVkiLAogICAgICAgICAgICBMTCA6ICJEIFvXkV1NTU1NIFlZWVkiLAogICAgICAgICAgICBMTEwgOiAiRCBb15FdTU1NTSBZWVlZIExUIiwKICAgICAgICAgICAgTExMTCA6ICJkZGRkLCBEIFvXkV1NTU1NIFlZWVkgTFQiLAogICAgICAgICAgICBsIDogIkQvTS9ZWVlZIiwKICAgICAgICAgICAgbGwgOiAiRCBNTU0gWVlZWSIsCiAgICAgICAgICAgIGxsbCA6ICJEIE1NTSBZWVlZIExUIiwKICAgICAgICAgICAgbGxsbCA6ICJkZGQsIEQgTU1NIFlZWVkgTFQiCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6ICdb15TXmdeV150g15HWvl1MVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW9ee15fXqCDXkda+XUxUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnZGRkZCBb15HXqdei15RdIExUJywKICAgICAgICAgICAgbGFzdERheSA6ICdb15DXqtee15XXnCDXkda+XUxUJywKICAgICAgICAgICAgbGFzdFdlZWsgOiAnW9eR15nXldedXSBkZGRkIFvXlNeQ15fXqNeV158g15HXqdei15RdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogIteR16LXldeTICVzIiwKICAgICAgICAgICAgcGFzdCA6ICLXnNek16DXmSAlcyIsCiAgICAgICAgICAgIHMgOiAi157Xodek16gg16nXoNeZ15XXqiIsCiAgICAgICAgICAgIG0gOiAi15PXp9eUIiwKICAgICAgICAgICAgbW0gOiAiJWQg15PXp9eV16oiLAogICAgICAgICAgICBoIDogItep16LXlCIsCiAgICAgICAgICAgIGhoIDogZnVuY3Rpb24gKG51bWJlcikgewogICAgICAgICAgICAgICAgaWYgKG51bWJlciA9PT0gMikgewogICAgICAgICAgICAgICAgICAgIHJldHVybiAi16nXoteq15nXmdedIjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAiINep16LXldeqIjsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZCA6ICLXmdeV150iLAogICAgICAgICAgICBkZCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgICAgIGlmIChudW1iZXIgPT09IDIpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gIteZ15XXnteZ15nXnSI7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgIiDXmdee15nXnSI7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIE0gOiAi15fXldeT16kiLAogICAgICAgICAgICBNTSA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgICAgIGlmIChudW1iZXIgPT09IDIpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gIteX15XXk9ep15nXmdedIjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAiINeX15XXk9ep15nXnSI7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHkgOiAi16nXoNeUIiwKICAgICAgICAgICAgeXkgOiBmdW5jdGlvbiAobnVtYmVyKSB7CiAgICAgICAgICAgICAgICBpZiAobnVtYmVyID09PSAyKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICLXqdeg16rXmdeZ150iOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICIg16nXoNeZ150iOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogaGluZGkgKGhpKQovLyBhdXRob3IgOiBNYXlhbmsgU2luZ2hhbCA6IGh0dHBzOi8vZ2l0aHViLmNvbS9tYXlhbmtzaW5naGFsCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgdmFyIHN5bWJvbE1hcCA9IHsKICAgICAgICAnMSc6ICfgpacnLAogICAgICAgICcyJzogJ+ClqCcsCiAgICAgICAgJzMnOiAn4KWpJywKICAgICAgICAnNCc6ICfgpaonLAogICAgICAgICc1JzogJ+ClqycsCiAgICAgICAgJzYnOiAn4KWsJywKICAgICAgICAnNyc6ICfgpa0nLAogICAgICAgICc4JzogJ+ClricsCiAgICAgICAgJzknOiAn4KWvJywKICAgICAgICAnMCc6ICfgpaYnCiAgICB9LAogICAgbnVtYmVyTWFwID0gewogICAgICAgICfgpacnOiAnMScsCiAgICAgICAgJ+ClqCc6ICcyJywKICAgICAgICAn4KWpJzogJzMnLAogICAgICAgICfgpaonOiAnNCcsCiAgICAgICAgJ+Clqyc6ICc1JywKICAgICAgICAn4KWsJzogJzYnLAogICAgICAgICfgpa0nOiAnNycsCiAgICAgICAgJ+Clric6ICc4JywKICAgICAgICAn4KWvJzogJzknLAogICAgICAgICfgpaYnOiAnMCcKICAgIH07CgogICAgcmV0dXJuIG1vbWVudC5sYW5nKCdoaScsIHsKICAgICAgICBtb250aHMgOiAn4KSc4KSo4KS14KSw4KWAX+Ckq+CkvOCksOCkteCksOClgF\/gpK7gpL7gpLDgpY3gpJpf4KSF4KSq4KWN4KSw4KWI4KSyX+CkruCkiF\/gpJzgpYLgpKhf4KSc4KWB4KSy4KS+4KSIX+CkheCkl+CkuOCljeCkpF\/gpLjgpL\/gpKTgpK7gpY3gpKzgpLBf4KSF4KSV4KWN4KSf4KWC4KSs4KSwX+CkqOCkteCkruCljeCkrOCksF\/gpKbgpL\/gpLjgpK7gpY3gpKzgpLAnLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAn4KSc4KSoLl\/gpKvgpLzgpLAuX+CkruCkvuCksOCljeCkml\/gpIXgpKrgpY3gpLDgpYguX+CkruCkiF\/gpJzgpYLgpKhf4KSc4KWB4KSyLl\/gpIXgpJcuX+CkuOCkv+CkpC5f4KSF4KSV4KWN4KSf4KWCLl\/gpKjgpLUuX+CkpuCkv+CkuC4nLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAn4KSw4KS14KS\/4KS14KS+4KSwX+CkuOCli+CkruCkteCkvuCksF\/gpK7gpILgpJfgpLLgpLXgpL7gpLBf4KSs4KWB4KSn4KS14KS+4KSwX+Ckl+ClgeCksOClguCkteCkvuCksF\/gpLbgpYHgpJXgpY3gpLDgpLXgpL7gpLBf4KS24KSo4KS\/4KS14KS+4KSwJy5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAn4KSw4KS14KS\/X+CkuOCli+Ckrl\/gpK7gpILgpJfgpLJf4KSs4KWB4KSnX+Ckl+ClgeCksOClgl\/gpLbgpYHgpJXgpY3gpLBf4KS24KSo4KS\/Jy5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ+CksF\/gpLjgpYtf4KSu4KSCX+CkrOClgV\/gpJfgpYFf4KS24KWBX+Ckticuc3BsaXQoIl8iKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAiQSBoOm1tIOCkrOCknOClhyIsCiAgICAgICAgICAgIEwgOiAiREQvTU0vWVlZWSIsCiAgICAgICAgICAgIExMIDogIkQgTU1NTSBZWVlZIiwKICAgICAgICAgICAgTExMIDogIkQgTU1NTSBZWVlZLCBMVCIsCiAgICAgICAgICAgIExMTEwgOiAiZGRkZCwgRCBNTU1NIFlZWVksIExUIgogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW+CkhuCknF0gTFQnLAogICAgICAgICAgICBuZXh0RGF5IDogJ1vgpJXgpLJdIExUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnZGRkZCwgTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1vgpJXgpLJdIExUJywKICAgICAgICAgICAgbGFzdFdlZWsgOiAnW+CkquCkv+Ckm+CksuClh10gZGRkZCwgTFQnLAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAiJXMg4KSu4KWH4KSCIiwKICAgICAgICAgICAgcGFzdCA6ICIlcyDgpKrgpLngpLLgpYciLAogICAgICAgICAgICBzIDogIuCkleClgeCkmyDgpLngpYAg4KSV4KWN4KS34KSjIiwKICAgICAgICAgICAgbSA6ICLgpI\/gpJUg4KSu4KS\/4KSo4KSfIiwKICAgICAgICAgICAgbW0gOiAiJWQg4KSu4KS\/4KSo4KSfIiwKICAgICAgICAgICAgaCA6ICLgpI\/gpJUg4KSY4KSC4KSf4KS+IiwKICAgICAgICAgICAgaGggOiAiJWQg4KSY4KSC4KSf4KWHIiwKICAgICAgICAgICAgZCA6ICLgpI\/gpJUg4KSm4KS\/4KSoIiwKICAgICAgICAgICAgZGQgOiAiJWQg4KSm4KS\/4KSoIiwKICAgICAgICAgICAgTSA6ICLgpI\/gpJUg4KSu4KS54KWA4KSo4KWHIiwKICAgICAgICAgICAgTU0gOiAiJWQg4KSu4KS54KWA4KSo4KWHIiwKICAgICAgICAgICAgeSA6ICLgpI\\/ICcgcGVyYycgOiAnIHBlcmNlJyk7CiAgICAgICAgY2FzZSAnbW0nOgogICAgICAgICAgICByZXR1cm4gbnVtICsgKGlzRnV0dXJlIHx8IHdpdGhvdXRTdWZmaXggPyAnIHBlcmMnIDogJyBwZXJjZScpOwogICAgICAgIGNhc2UgJ2gnOgogICAgICAgICAgICByZXR1cm4gJ2VneScgKyAoaXNGdXR1cmUgfHwgd2l0aG91dFN1ZmZpeCA\/ICcgw7NyYScgOiAnIMOzcsOhamEnKTsKICAgICAgICBjYXNlICdoaCc6CiAgICAgICAgICAgIHJldHVybiBudW0gKyAoaXNGdXR1cmUgfHwgd2l0aG91dFN1ZmZpeCA\/ICcgw7NyYScgOiAnIMOzcsOhamEnKTsKICAgICAgICBjYXNlICdkJzoKICAgICAgICAgICAgcmV0dXJuICdlZ3knICsgKGlzRnV0dXJlIHx8IHdpdGhvdXRTdWZmaXggPyAnIG5hcCcgOiAnIG5hcGphJyk7CiAgICAgICAgY2FzZSAnZGQnOgogICAgICAgICAgICByZXR1cm4gbnVtICsgKGlzRnV0dXJlIHx8IHdpdGhvdXRTdWZmaXggPyAnIG5hcCcgOiAnIG5hcGphJyk7CiAgICAgICAgY2FzZSAnTSc6CiAgICAgICAgICAgIHJldHVybiAnZWd5JyArIChpc0Z1dHVyZSB8fCB3aXRob3V0U3VmZml4ID8gJyBow7NuYXAnIDogJyBow7NuYXBqYScpOwogICAgICAgIGNhc2UgJ01NJzoKICAgICAgICAgICAgcmV0dXJuIG51bSArIChpc0Z1dHVyZSB8fCB3aXRob3V0U3VmZml4ID8gJyBow7NuYXAnIDogJyBow7NuYXBqYScpOwogICAgICAgIGNhc2UgJ3knOgogICAgICAgICAgICByZXR1cm4gJ2VneScgKyAoaXNGdXR1cmUgfHwgd2l0aG91dFN1ZmZpeCA\/ICcgw6l2JyA6ICcgw6l2ZScpOwogICAgICAgIGNhc2UgJ3l5JzoKICAgICAgICAgICAgcmV0dXJuIG51bSArIChpc0Z1dHVyZSB8fCB3aXRob3V0U3VmZml4ID8gJyDDqXYnIDogJyDDqXZlJyk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gJyc7CiAgICB9CgogICAgZnVuY3Rpb24gd2Vlayhpc0Z1dHVyZSkgewogICAgICAgIHJldHVybiAoaXNGdXR1cmUgPyAnJyA6ICdbbcO6bHRdICcpICsgJ1snICsgd2Vla0VuZGluZ3NbdGhpcy5kYXkoKV0gKyAnXSBMVFsta29yXSc7CiAgICB9CgogICAgcmV0dXJuIG1vbWVudC5sYW5nKCdodScsIHsKICAgICAgICBtb250aHMgOiAiamFudcOhcl9mZWJydcOhcl9tw6FyY2l1c1\/DoXByaWxpc19tw6FqdXNfasO6bml1c19qw7psaXVzX2F1Z3VzenR1c19zemVwdGVtYmVyX29rdMOzYmVyX25vdmVtYmVyX2RlY2VtYmVyIi5zcGxpdCgiXyIpLAogICAgICAgIG1vbnRoc1Nob3J0IDogImphbl9mZWJfbcOhcmNfw6Fwcl9tw6FqX2rDum5fasO6bF9hdWdfc3plcHRfb2t0X25vdl9kZWMiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAidmFzw6FybmFwX2jDqXRmxZFfa2VkZF9zemVyZGFfY3PDvHTDtnJ0w7ZrX3DDqW50ZWtfc3pvbWJhdCIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogInZhc19ow6l0X2tlZGRfc3plX2Nzw7x0X3DDqW5fc3pvIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogInZfaF9rX3N6ZV9jc19wX3N6byIuc3BsaXQoIl8iKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAiSDptbSIsCiAgICAgICAgICAgIEwgOiAiWVlZWS5NTS5ERC4iLAogICAgICAgICAgICBMTCA6ICJZWVlZLiBNTU1NIEQuIiwKICAgICAgICAgICAgTExMIDogIllZWVkuIE1NTU0gRC4sIExUIiwKICAgICAgICAgICAgTExMTCA6ICJZWVlZLiBNTU1NIEQuLCBkZGRkIExUIgogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW21hXSBMVFsta29yXScsCiAgICAgICAgICAgIG5leHREYXkgOiAnW2hvbG5hcF0gTFRbLWtvcl0nLAogICAgICAgICAgICBuZXh0V2VlayA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiB3ZWVrLmNhbGwodGhpcywgdHJ1ZSk7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhc3REYXkgOiAnW3RlZ25hcF0gTFRbLWtvcl0nLAogICAgICAgICAgICBsYXN0V2VlayA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiB3ZWVrLmNhbGwodGhpcywgZmFsc2UpOwogICAgICAgICAgICB9LAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAiJXMgbcO6bHZhIiwKICAgICAgICAgICAgcGFzdCA6ICIlcyIsCiAgICAgICAgICAgIHMgOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIG0gOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIG1tIDogdHJhbnNsYXRlLAogICAgICAgICAgICBoIDogdHJhbnNsYXRlLAogICAgICAgICAgICBoaCA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgZCA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgZGQgOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIE0gOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIE1NIDogdHJhbnNsYXRlLAogICAgICAgICAgICB5IDogdHJhbnNsYXRlLAogICAgICAgICAgICB5eSA6IHRyYW5zbGF0ZQogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbCA6ICclZC4nLAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA3ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiAxc3QgaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogQmFoYXNhIEluZG9uZXNpYSAoaWQpCi8vIGF1dGhvciA6IE1vaGFtbWFkIFNhdHJpbyBVdG9tbyA6IGh0dHBzOi8vZ2l0aHViLmNvbS90eW9rCi8vIHJlZmVyZW5jZTogaHR0cDovL2lkLndpa2lzb3VyY2Uub3JnL3dpa2kvUGVkb21hbl9VbXVtX0VqYWFuX0JhaGFzYV9JbmRvbmVzaWFfeWFuZ19EaXNlbXB1cm5ha2FuCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5sYW5nKCdpZCcsIHsKICAgICAgICBtb250aHMgOiAiSmFudWFyaV9GZWJydWFyaV9NYXJldF9BcHJpbF9NZWlfSnVuaV9KdWxpX0FndXN0dXNfU2VwdGVtYmVyX09rdG9iZXJfTm92ZW1iZXJfRGVzZW1iZXIiLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAiSmFuX0ZlYl9NYXJfQXByX01laV9KdW5fSnVsX0Fnc19TZXBfT2t0X05vdl9EZXMiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAiTWluZ2d1X1NlbmluX1NlbGFzYV9SYWJ1X0thbWlzX0p1bWF0X1NhYnR1Ii5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAiTWluX1Nlbl9TZWxfUmFiX0thbV9KdW1fU2FiIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogIk1nX1NuX1NsX1JiX0ttX0ptX1NiIi5zcGxpdCgiXyIpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICJISC5tbSIsCiAgICAgICAgICAgIEwgOiAiREQvTU0vWVlZWSIsCiAgICAgICAgICAgIExMIDogIkQgTU1NTSBZWVlZIiwKICAgICAgICAgICAgTExMIDogIkQgTU1NTSBZWVlZIFtwdWt1bF0gTFQiLAogICAgICAgICAgICBMTExMIDogImRkZGQsIEQgTU1NTSBZWVlZIFtwdWt1bF0gTFQiCiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbSA6IGZ1bmN0aW9uIChob3VycywgbWludXRlcywgaXNMb3dlcikgewogICAgICAgICAgICBpZiAoaG91cnMgPCAxMSkgewogICAgICAgICAgICAgICAgcmV0dXJuICdwYWdpJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VycyA8IDE1KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ3NpYW5nJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VycyA8IDE5KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ3NvcmUnOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuICdtYWxhbSc7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1tIYXJpIGluaSBwdWt1bF0gTFQnLAogICAgICAgICAgICBuZXh0RGF5IDogJ1tCZXNvayBwdWt1bF0gTFQnLAogICAgICAgICAgICBuZXh0V2VlayA6ICdkZGRkIFtwdWt1bF0gTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1tLZW1hcmluIHB1a3VsXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrIDogJ2RkZGQgW2xhbHUgcHVrdWxdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogImRhbGFtICVzIiwKICAgICAgICAgICAgcGFzdCA6ICIlcyB5YW5nIGxhbHUiLAogICAgICAgICAgICBzIDogImJlYmVyYXBhIGRldGlrIiwKICAgICAgICAgICAgbSA6ICJzZW1lbml0IiwKICAgICAgICAgICAgbW0gOiAiJWQgbWVuaXQiLAogICAgICAgICAgICBoIDogInNlamFtIiwKICAgICAgICAgICAgaGggOiAiJWQgamFtIiwKICAgICAgICAgICAgZCA6ICJzZWhhcmkiLAogICAgICAgICAgICBkZCA6ICIlZCBoYXJpIiwKICAgICAgICAgICAgTSA6ICJzZWJ1bGFuIiwKICAgICAgICAgICAgTU0gOiAiJWQgYnVsYW4iLAogICAgICAgICAgICB5IDogInNldGFodW4iLAogICAgICAgICAgICB5eSA6ICIlZCB0YWh1biIKICAgICAgICB9LAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA3ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiAxc3QgaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogaWNlbGFuZGljIChpcykKLy8gYXV0aG9yIDogSGlucmlrIMOWcm4gU2lndXLDsHNzb24gOiBodHRwczovL2dpdGh1Yi5jb20vaGlucmlrCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgZnVuY3Rpb24gcGx1cmFsKG4pIHsKICAgICAgICBpZiAobiAlIDEwMCA9PT0gMTEpIHsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIGlmIChuICUgMTAgPT09IDEpIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2xhdGUobnVtYmVyLCB3aXRob3V0U3VmZml4LCBrZXksIGlzRnV0dXJlKSB7CiAgICAgICAgdmFyIHJlc3VsdCA9IG51bWJlciArICIgIjsKICAgICAgICBzd2l0Y2ggKGtleSkgewogICAgICAgIGNhc2UgJ3MnOgogICAgICAgICAgICByZXR1cm4gd2l0aG91dFN1ZmZpeCB8fCBpc0Z1dHVyZSA\/ICdub2trcmFyIHNla8O6bmR1cicgOiAnbm9ra3J1bSBzZWvDum5kdW0nOwogICAgICAgIGNhc2UgJ20nOgogICAgICAgICAgICByZXR1cm4gd2l0aG91dFN1ZmZpeCA\/ICdtw61uw7p0YScgOiAnbcOtbsO6dHUnOwogICAgICAgIGNhc2UgJ21tJzoKICAgICAgICAgICAgaWYgKHBsdXJhbChudW1iZXIpKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUgPyAnbcOtbsO6dHVyJyA6ICdtw61uw7p0dW0nKTsKICAgICAgICAgICAgfSBlbHNlIGlmICh3aXRob3V0U3VmZml4KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgJ23DrW7DunRhJzsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgJ23DrW7DunR1JzsKICAgICAgICBjYXNlICdoaCc6CiAgICAgICAgICAgIGlmIChwbHVyYWwobnVtYmVyKSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArICh3aXRob3V0U3VmZml4IHx8IGlzRnV0dXJlID8gJ2tsdWtrdXN0dW5kaXInIDogJ2tsdWtrdXN0dW5kdW0nKTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgJ2tsdWtrdXN0dW5kJzsKICAgICAgICBjYXNlICdkJzoKICAgICAgICAgICAgaWYgKHdpdGhvdXRTdWZmaXgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAnZGFndXInOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBpc0Z1dHVyZSA\/ICdkYWcnIDogJ2RlZ2knOwogICAgICAgIGNhc2UgJ2RkJzoKICAgICAgICAgICAgaWYgKHBsdXJhbChudW1iZXIpKSB7CiAgICAgICAgICAgICAgICBpZiAod2l0aG91dFN1ZmZpeCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAnZGFnYXInOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArIChpc0Z1dHVyZSA\/ICdkYWdhJyA6ICdkw7ZndW0nKTsKICAgICAgICAgICAgfSBlbHNlIGlmICh3aXRob3V0U3VmZml4KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgJ2RhZ3VyJzsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKGlzRnV0dXJlID8gJ2RhZycgOiAnZGVnaScpOwogICAgICAgIGNhc2UgJ00nOgogICAgICAgICAgICBpZiAod2l0aG91dFN1ZmZpeCkgewogICAgICAgICAgICAgICAgcmV0dXJuICdtw6FudcOwdXInOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBpc0Z1dHVyZSA\/ICdtw6FudcOwJyA6ICdtw6FudcOwaSc7CiAgICAgICAgY2FzZSAnTU0nOgogICAgICAgICAgICBpZiAocGx1cmFsKG51bWJlcikpIHsKICAgICAgICAgICAgICAgIGlmICh3aXRob3V0U3VmZml4KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArICdtw6FudcOwaXInOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArIChpc0Z1dHVyZSA\/ICdtw6FudcOwaScgOiAnbcOhbnXDsHVtJyk7CiAgICAgICAgICAgIH0gZWxzZSBpZiAod2l0aG91dFN1ZmZpeCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArICdtw6FudcOwdXInOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAoaXNGdXR1cmUgPyAnbcOhbnXDsCcgOiAnbcOhbnXDsGknKTsKICAgICAgICBjYXNlICd5JzoKICAgICAgICAgICAgcmV0dXJuIHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUgPyAnw6FyJyA6ICfDoXJpJzsKICAgICAgICBjYXNlICd5eSc6CiAgICAgICAgICAgIGlmIChwbHVyYWwobnVtYmVyKSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArICh3aXRob3V0U3VmZml4IHx8IGlzRnV0dXJlID8gJ8OhcicgOiAnw6FydW0nKTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUgPyAnw6FyJyA6ICfDoXJpJyk7CiAgICAgICAgfQogICAgfQoKICAgIHJldHVybiBtb21lbnQubGFuZygnaXMnLCB7CiAgICAgICAgbW9udGhzIDogImphbsO6YXJfZmVicsO6YXJfbWFyc19hcHLDrWxfbWHDrV9qw7puw61fasO6bMOtX8OhZ8O6c3Rfc2VwdGVtYmVyX29rdMOzYmVyX27Ds3ZlbWJlcl9kZXNlbWJlciIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydCA6ICJqYW5fZmViX21hcl9hcHJfbWHDrV9qw7puX2rDumxfw6Fnw7pfc2VwX29rdF9uw7N2X2RlcyIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5cyA6ICJzdW5udWRhZ3VyX23DoW51ZGFndXJfw75yacOwanVkYWd1cl9tacOwdmlrdWRhZ3VyX2ZpbW10dWRhZ3VyX2bDtnN0dWRhZ3VyX2xhdWdhcmRhZ3VyIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAic3VuX23DoW5fw75yaV9tacOwX2ZpbV9mw7ZzX2xhdSIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICJTdV9Nw6Ffw55yX01pX0ZpX0bDtl9MYSIuc3BsaXQoIl8iKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAiSDptbSIsCiAgICAgICAgICAgIEwgOiAiREQvTU0vWVlZWSIsCiAgICAgICAgICAgIExMIDogIkQuIE1NTU0gWVlZWSIsCiAgICAgICAgICAgIExMTCA6ICJELiBNTU1NIFlZWVkgW2tsLl0gTFQiLAogICAgICAgICAgICBMTExMIDogImRkZGQsIEQuIE1NTU0gWVlZWSBba2wuXSBMVCIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1vDrSBkYWcga2wuXSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW8OhIG1vcmd1biBrbC5dIExUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnZGRkZCBba2wuXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW8OtIGfDpnIga2wuXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrIDogJ1tzw63DsGFzdGFdIGRkZGQgW2tsLl0gTFQnLAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAiZWZ0aXIgJXMiLAogICAgICAgICAgICBwYXN0IDogImZ5cmlyICVzIHPDrcOwYW4iLAogICAgICAgICAgICBzIDogdHJhbnNsYXRlLAogICAgICAgICAgICBtIDogdHJhbnNsYXRlLAogICAgICAgICAgICBtbSA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgaCA6ICJrbHVra3VzdHVuZCIsCiAgICAgICAgICAgIGhoIDogdHJhbnNsYXRlLAogICAgICAgICAgICBkIDogdHJhbnNsYXRlLAogICAgICAgICAgICBkZCA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgTSA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgTU0gOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIHkgOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIHl5IDogdHJhbnNsYXRlCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsIDogJyVkLicsCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiBpdGFsaWFuIChpdCkKLy8gYXV0aG9yIDogTG9yZW56byA6IGh0dHBzOi8vZ2l0aHViLmNvbS9hbGllbQovLyBhdXRob3I6IE1hdHRpYSBMYXJlbnRpczogaHR0cHM6Ly9naXRodWIuY29tL25vc3RhbGdpYXoKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewogICAgICAgIGRlZmluZShbJ21vbWVudCddLCBmYWN0b3J5KTsgLy8gQU1ECiAgICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JykgewogICAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKCcuLi9tb21lbnQnKSk7IC8vIE5vZGUKICAgIH0gZWxzZSB7CiAgICAgICAgZmFjdG9yeSh3aW5kb3cubW9tZW50KTsgLy8gQnJvd3NlciBnbG9iYWwKICAgIH0KfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICByZXR1cm4gbW9tZW50LmxhbmcoJ2l0JywgewogICAgICAgIG1vbnRocyA6ICJHZW5uYWlvX0ZlYmJyYWlvX01hcnpvX0FwcmlsZV9NYWdnaW9fR2l1Z25vX0x1Z2xpb19BZ29zdG9fU2V0dGVtYnJlX090dG9icmVfTm92ZW1icmVfRGljZW1icmUiLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAiR2VuX0ZlYl9NYXJfQXByX01hZ19HaXVfTHVnX0Fnb19TZXRfT3R0X05vdl9EaWMiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAiRG9tZW5pY2FfTHVuZWTDrF9NYXJ0ZWTDrF9NZXJjb2xlZMOsX0dpb3ZlZMOsX1ZlbmVyZMOsX1NhYmF0byIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogIkRvbV9MdW5fTWFyX01lcl9HaW9fVmVuX1NhYiIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICJEX0xfTWFfTWVfR19WX1MiLnNwbGl0KCJfIiksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogIkhIOm1tIiwKICAgICAgICAgICAgTCA6ICJERC9NTS9ZWVlZIiwKICAgICAgICAgICAgTEwgOiAiRCBNTU1NIFlZWVkiLAogICAgICAgICAgICBMTEwgOiAiRCBNTU1NIFlZWVkgTFQiLAogICAgICAgICAgICBMTExMIDogImRkZGQsIEQgTU1NTSBZWVlZIExUIgogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICdbT2dnaSBhbGxlXSBMVCcsCiAgICAgICAgICAgIG5leHREYXk6ICdbRG9tYW5pIGFsbGVdIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6ICdkZGRkIFthbGxlXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXk6ICdbSWVyaSBhbGxlXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrOiAnW2xvIHNjb3Jzb10gZGRkZCBbYWxsZV0gTFQnLAogICAgICAgICAgICBzYW1lRWxzZTogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6IGZ1bmN0aW9uIChzKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gKCgvXlswLTldLiskLykudGVzdChzKSA\/ICJ0cmEiIDogImluIikgKyAiICIgKyBzOwogICAgICAgICAgICB9LAogICAgICAgICAgICBwYXN0IDogIiVzIGZhIiwKICAgICAgICAgICAgcyA6ICJzZWNvbmRpIiwKICAgICAgICAgICAgbSA6ICJ1biBtaW51dG8iLAogICAgICAgICAgICBtbSA6ICIlZCBtaW51dGkiLAogICAgICAgICAgICBoIDogInVuJ29yYSIsCiAgICAgICAgICAgIGhoIDogIiVkIG9yZSIsCiAgICAgICAgICAgIGQgOiAidW4gZ2lvcm5vIiwKICAgICAgICAgICAgZGQgOiAiJWQgZ2lvcm5pIiwKICAgICAgICAgICAgTSA6ICJ1biBtZXNlIiwKICAgICAgICAgICAgTU0gOiAiJWQgbWVzaSIsCiAgICAgICAgICAgIHkgOiAidW4gYW5ubyIsCiAgICAgICAgICAgIHl5IDogIiVkIGFubmkiCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsOiAnJWTCuicsCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiBqYXBhbmVzZSAoamEpCi8vIGF1dGhvciA6IExJIExvbmcgOiBodHRwczovL2dpdGh1Yi5jb20vYmFyeW9uCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5sYW5nKCdqYScsIHsKICAgICAgICBtb250aHMgOiAiMeaciF8y5pyIXzPmnIhfNOaciF815pyIXzbmnIhfN+aciF845pyIXznmnIhfMTDmnIhfMTHmnIhfMTLmnIgiLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAiMeaciF8y5pyIXzPmnIhfNOaciF815pyIXzbmnIhfN+aciF845pyIXznmnIhfMTDmnIhfMTHmnIhfMTLmnIgiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAi5pel5puc5pelX+aciOabnOaXpV\/ngavmm5zml6Vf5rC05puc5pelX+acqOabnOaXpV\/ph5Hmm5zml6Vf5Zyf5puc5pelIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAi5pelX+aciF\/ngatf5rC0X+acqF\/ph5Ff5ZyfIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogIuaXpV\/mnIhf54GrX+awtF\/mnKhf6YeRX+WcnyIuc3BsaXQoIl8iKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAiQWjmmYJt5YiGIiwKICAgICAgICAgICAgTCA6ICJZWVlZL01NL0REIiwKICAgICAgICAgICAgTEwgOiAiWVlZWeW5tE3mnIhE5pelIiwKICAgICAgICAgICAgTExMIDogIllZWVnlubRN5pyIROaXpUxUIiwKICAgICAgICAgICAgTExMTCA6ICJZWVlZ5bm0TeaciETml6VMVCBkZGRkIgogICAgICAgIH0sCiAgICAgICAgbWVyaWRpZW0gOiBmdW5jdGlvbiAoaG91ciwgbWludXRlLCBpc0xvd2VyKSB7CiAgICAgICAgICAgIGlmIChob3VyIDwgMTIpIHsKICAgICAgICAgICAgICAgIHJldHVybiAi5Y2I5YmNIjsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiAi5Y2I5b6MIjsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW+S7iuaXpV0gTFQnLAogICAgICAgICAgICBuZXh0RGF5IDogJ1vmmI7ml6VdIExUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnW+adpemAsV1kZGRkIExUJywKICAgICAgICAgICAgbGFzdERheSA6ICdb5pio5pelXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrIDogJ1vliY3pgLFdZGRkZCBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICIlc+W+jCIsCiAgICAgICAgICAgIHBhc3QgOiAiJXPliY0iLAogICAgICAgICAgICBzIDogIuaVsOenkiIsCiAgICAgICAgICAgIG0gOiAiMeWIhiIsCiAgICAgICAgICAgIG1tIDogIiVk5YiGIiwKICAgICAgICAgICAgaCA6ICIx5pmC6ZaTIiwKICAgICAgICAgICAgaGggOiAiJWTmmYLplpMiLAogICAgICAgICAgICBkIDogIjHml6UiLAogICAgICAgICAgICBkZCA6ICIlZOaXpSIsCiAgICAgICAgICAgIE0gOiAiMeODtuaciCIsCiAgICAgICAgICAgIE1NIDogIiVk44O25pyIIiwKICAgICAgICAgICAgeSA6ICIx5bm0IiwKICAgICAgICAgICAgeXkgOiAiJWTlubQiCiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogR2VvcmdpYW4gKGthKQovLyBhdXRob3IgOiBJcmFrbGkgSmFuaWFzaHZpbGkgOiBodHRwczovL2dpdGh1Yi5jb20vaXJha2xpLWphbmlhc2h2aWxpCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewoKICAgIGZ1bmN0aW9uIG1vbnRoc0Nhc2VSZXBsYWNlKG0sIGZvcm1hdCkgewogICAgICAgIHZhciBtb250aHMgPSB7CiAgICAgICAgICAgICdub21pbmF0aXZlJzogJ+GDmOGDkOGDnOGDleGDkOGDoOGDmF\/hg5fhg5Thg5Hhg5Thg6Dhg5Xhg5Dhg5rhg5hf4YOb4YOQ4YOg4YOi4YOYX+GDkOGDnuGDoOGDmOGDmuGDmF\/hg5vhg5Dhg5jhg6Hhg5hf4YOY4YOV4YOc4YOY4YOh4YOYX+GDmOGDleGDmuGDmOGDoeGDmF\/hg5Dhg5Lhg5Xhg5jhg6Hhg6Lhg51f4YOh4YOU4YOl4YOi4YOU4YOb4YOR4YOU4YOg4YOYX+GDneGDpeGDouGDneGDm+GDkeGDlOGDoOGDmF\/hg5zhg53hg5Thg5vhg5Hhg5Thg6Dhg5hf4YOT4YOU4YOZ4YOU4YOb4YOR4YOU4YOg4YOYJy5zcGxpdCgnXycpLAogICAgICAgICAgICAnYWNjdXNhdGl2ZSc6ICfhg5jhg5Dhg5zhg5Xhg5Dhg6Dhg6Ff4YOX4YOU4YOR4YOU4YOg4YOV4YOQ4YOa4YOhX+GDm+GDkOGDoOGDouGDoV\/hg5Dhg57hg6Dhg5jhg5rhg5jhg6Ff4YOb4YOQ4YOY4YOh4YOhX+GDmOGDleGDnOGDmOGDoeGDoV\/hg5jhg5Xhg5rhg5jhg6Hhg6Ff4YOQ4YOS4YOV4YOY4YOh4YOi4YOhX+GDoeGDlOGDpeGDouGDlOGDm+GDkeGDlOGDoOGDoV\/hg53hg6Xhg6Lhg53hg5vhg5Hhg5Thg6Dhg6Ff4YOc4YOd4YOU4YOb4YOR4YOU4YOg4YOhX+GDk+GDlOGDmeGDlOGDm+GDkeGDlOGDoOGDoScuc3BsaXQoJ18nKQogICAgICAgIH0sCgogICAgICAgIG5vdW5DYXNlID0gKC9EW29EXSAqTU1NTT8vKS50ZXN0KGZvcm1hdCkgPwogICAgICAgICAgICAnYWNjdXNhdGl2ZScgOgogICAgICAgICAgICAnbm9taW5hdGl2ZSc7CgogICAgICAgIHJldHVybiBtb250aHNbbm91bkNhc2VdW20ubW9udGgoKV07CiAgICB9CgogICAgZnVuY3Rpb24gd2Vla2RheXNDYXNlUmVwbGFjZShtLCBmb3JtYXQpIHsKICAgICAgICB2YXIgd2Vla2RheXMgPSB7CiAgICAgICAgICAgICdub21pbmF0aXZlJzogJ+GDmeGDleGDmOGDoOGDkF\/hg53hg6Dhg6jhg5Dhg5Hhg5Dhg5fhg5hf4YOh4YOQ4YOb4YOo4YOQ4YOR4YOQ4YOX4YOYX+GDneGDl+GDruGDqOGDkOGDkeGDkOGDl+GDmF\/hg67hg6Phg5fhg6jhg5Dhg5Hhg5Dhg5fhg5hf4YOe4YOQ4YOg4YOQ4YOh4YOZ4YOU4YOV4YOYX+GDqOGDkOGDkeGDkOGDl+GDmCcuc3BsaXQoJ18nKSwKICAgICAgICAgICAgJ2FjY3VzYXRpdmUnOiAn4YOZ4YOV4YOY4YOg4YOQ4YOhX+GDneGDoOGDqOGDkOGDkeGDkOGDl+GDoV\/hg6Hhg5Dhg5vhg6jhg5Dhg5Hhg5Dhg5fhg6Ff4YOd4YOX4YOu4YOo4YOQ4YOR4YOQ4YOX4YOhX+GDruGDo+GDl+GDqOGDkOGDkeGDkOGDl+GDoV\/hg57hg5Dhg6Dhg5Dhg6Hhg5nhg5Thg5Xhg6Ff4YOo4YOQ4YOR4YOQ4YOX4YOhJy5zcGxpdCgnXycpCiAgICAgICAgfSwKCiAgICAgICAgbm91bkNhc2UgPSAoLyjhg6zhg5jhg5zhg5B84YOo4YOU4YOb4YOT4YOU4YOSKS8pLnRlc3QoZm9ybWF0KSA\/CiAgICAgICAgICAgICdhY2N1c2F0aXZlJyA6CiAgICAgICAgICAgICdub21pbmF0aXZlJzsKCiAgICAgICAgcmV0dXJuIHdlZWtkYXlzW25vdW5DYXNlXVttLmRheSgpXTsKICAgIH0KCiAgICByZXR1cm4gbW9tZW50LmxhbmcoJ2thJywgewogICAgICAgIG1vbnRocyA6IG1vbnRoc0Nhc2VSZXBsYWNlLAogICAgICAgIG1vbnRoc1Nob3J0IDogIuGDmOGDkOGDnF\/hg5fhg5Thg5Ff4YOb4YOQ4YOgX+GDkOGDnuGDoF\/hg5vhg5Dhg5hf4YOY4YOV4YOcX+GDmOGDleGDml\/hg5Dhg5Lhg5Vf4YOh4YOU4YOlX+GDneGDpeGDol\/hg5zhg53hg5Rf4YOT4YOU4YOZIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzIDogd2Vla2RheXNDYXNlUmVwbGFjZSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogIuGDmeGDleGDmF\/hg53hg6Dhg6hf4YOh4YOQ4YObX+GDneGDl+GDrl\/hg67hg6Phg5df4YOe4YOQ4YOgX+GDqOGDkOGDkSIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICLhg5nhg5Vf4YOd4YOgX+GDoeGDkF\/hg53hg5df4YOu4YOjX+GDnuGDkF\/hg6jhg5AiLnNwbGl0KCJfIiksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogImg6bW0gQSIsCiAgICAgICAgICAgIEwgOiAiREQvTU0vWVlZWSIsCiAgICAgICAgICAgIExMIDogIkQgTU1NTSBZWVlZIiwKICAgICAgICAgICAgTExMIDogIkQgTU1NTSBZWVlZIExUIiwKICAgICAgICAgICAgTExMTCA6ICJkZGRkLCBEIE1NTU0gWVlZWSBMVCIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1vhg5Phg6bhg5Thg6FdIExUWy3hg5bhg5RdJywKICAgICAgICAgICAgbmV4dERheSA6ICdb4YOu4YOV4YOQ4YOaXSBMVFst4YOW4YOUXScsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW+GDkuGDo+GDqOGDmOGDnF0gTFRbLeGDluGDlF0nLAogICAgICAgICAgICBuZXh0V2VlayA6ICdb4YOo4YOU4YOb4YOT4YOU4YOSXSBkZGRkIExUWy3hg5bhg5RdJywKICAgICAgICAgICAgbGFzdFdlZWsgOiAnW+GDrOGDmOGDnOGDkF0gZGRkZCBMVC3hg5bhg5QnLAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiBmdW5jdGlvbiAocykgewogICAgICAgICAgICAgICAgcmV0dXJuICgvKOGDrOGDkOGDm+GDmHzhg6zhg6Phg5fhg5h84YOh4YOQ4YOQ4YOX4YOYfOGDrOGDlOGDmuGDmCkvKS50ZXN0KHMpID8KICAgICAgICAgICAgICAgICAgICBzLnJlcGxhY2UoL+GDmCQvLCAi4YOo4YOYIikgOgogICAgICAgICAgICAgICAgICAgIHMgKyAi4YOo4YOYIjsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcGFzdCA6IGZ1bmN0aW9uIChzKSB7CiAgICAgICAgICAgICAgICBpZiAoKC8o4YOs4YOQ4YOb4YOYfOGDrOGDo+GDl+GDmHzhg6Hhg5Dhg5Dhg5fhg5h84YOT4YOm4YOUfOGDl+GDleGDlCkvKS50ZXN0KHMpKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHMucmVwbGFjZSgvKOGDmHzhg5QpJC8sICLhg5jhg6Eg4YOs4YOY4YOcIik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoKC\/hg6zhg5Thg5rhg5gvKS50ZXN0KHMpKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHMucmVwbGFjZSgv4YOs4YOU4YOa4YOYJC8sICLhg6zhg5rhg5jhg6Eg4YOs4YOY4YOcIik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHMgOiAi4YOg4YOQ4YOb4YOT4YOU4YOc4YOY4YOb4YOUIOGDrOGDkOGDm+GDmCIsCiAgICAgICAgICAgIG0gOiAi4YOs4YOj4YOX4YOYIiwKICAgICAgICAgICAgbW0gOiAiJWQg4YOs4YOj4YOX4YOYIiwKICAgICAgICAgICAgaCA6ICLhg6Hhg5Dhg5Dhg5fhg5giLAogICAgICAgICAgICBoaCA6ICIlZCDhg6Hhg5Dhg5Dhg5fhg5giLAogICAgICAgICAgICBkIDogIuGDk+GDpuGDlCIsCiAgICAgICAgICAgIGRkIDogIiVkIOGDk+GDpuGDlCIsCiAgICAgICAgICAgIE0gOiAi4YOX4YOV4YOUIiwKICAgICAgICAgICAgTU0gOiAiJWQg4YOX4YOV4YOUIiwKICAgICAgICAgICAgeSA6ICLhg6zhg5Thg5rhg5giLAogICAgICAgICAgICB5eSA6ICIlZCDhg6zhg5Thg5rhg5giCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsIDogZnVuY3Rpb24gKG51bWJlcikgewogICAgICAgICAgICBpZiAobnVtYmVyID09PSAwKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAobnVtYmVyID09PSAxKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgIi3hg5rhg5giOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoKG51bWJlciA8IDIwKSB8fCAobnVtYmVyIDw9IDEwMCAmJiAobnVtYmVyICUgMjAgPT09IDApKSB8fCAobnVtYmVyICUgMTAwID09PSAwKSkgewogICAgICAgICAgICAgICAgcmV0dXJuICLhg5vhg5QtIiArIG51bWJlcjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICIt4YOUIjsKICAgICAgICB9LAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsCiAgICAgICAgICAgIGRveSA6IDcKICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiBrb3JlYW4gKGtvKQovLyBhdXRob3IgOiBLeXVuZ3dvb2ssIFBhcmsgOiBodHRwczovL2dpdGh1Yi5jb20va3l1bmd3MDBrCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5sYW5nKCdrbycsIHsKICAgICAgICBtb250aHMgOiAiMeyblF8y7JuUXzPsm5RfNOyblF817JuUXzbsm5RfN+yblF847JuUXznsm5RfMTDsm5RfMTHsm5RfMTLsm5QiLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAiMeyblF8y7JuUXzPsm5RfNOyblF817JuUXzbsm5RfN+yblF847JuUXznsm5RfMTDsm5RfMTHsm5RfMTLsm5QiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAi7J287JqU7J28X+yblOyalOydvF\/tmZTsmpTsnbxf7IiY7JqU7J28X+uqqeyalOydvF\/quIjsmpTsnbxf7Yag7JqU7J28Ii5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAi7J28X+yblF\/tmZRf7IiYX+uqqV\/quIhf7YagIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogIuydvF\/sm5Rf7ZmUX+yImF\/rqqlf6riIX+2GoCIuc3BsaXQoIl8iKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAiQSBo7IucIG1t67aEIiwKICAgICAgICAgICAgTCA6ICJZWVlZLk1NLkREIiwKICAgICAgICAgICAgTEwgOiAiWVlZWeuFhCBNTU1NIETsnbwiLAogICAgICAgICAgICBMTEwgOiAiWVlZWeuFhCBNTU1NIETsnbwgTFQiLAogICAgICAgICAgICBMTExMIDogIllZWVnrhYQgTU1NTSBE7J28IGRkZGQgTFQiCiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbSA6IGZ1bmN0aW9uIChob3VyLCBtaW51dGUsIGlzVXBwZXIpIHsKICAgICAgICAgICAgcmV0dXJuIGhvdXIgPCAxMiA\/ICfsmKTsoIQnIDogJ+yYpO2bhCc7CiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6ICfsmKTripggTFQnLAogICAgICAgICAgICBuZXh0RGF5IDogJ+uCtOydvCBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ+yWtOygnCBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrIDogJ+yngOuCnOyjvCBkZGRkIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogIiVzIO2bhCIsCiAgICAgICAgICAgIHBhc3QgOiAiJXMg7KCEIiwKICAgICAgICAgICAgcyA6ICLrqofstIgiLAogICAgICAgICAgICBzcyA6ICIlZOy0iCIsCiAgICAgICAgICAgIG0gOiAi7J2867aEIiwKICAgICAgICAgICAgbW0gOiAiJWTrtoQiLAogICAgICAgICAgICBoIDogIu2VnOyLnOqwhCIsCiAgICAgICAgICAgIGhoIDogIiVk7Iuc6rCEIiwKICAgICAgICAgICAgZCA6ICLtlZjro6giLAogICAgICAgICAgICBkZCA6ICIlZOydvCIsCiAgICAgICAgICAgIE0gOiAi7ZWc64usIiwKICAgICAgICAgICAgTU0gOiAiJWTri6wiLAogICAgICAgICAgICB5IDogIuydvOuFhCIsCiAgICAgICAgICAgIHl5IDogIiVk64WEIgogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbCA6ICclZOydvCcKICAgIH0pOwp9KSk7CgovLyBtb21lbnQuanMgbGFuZ3VhZ2UgY29uZmlndXJhdGlvbgovLyBsYW5ndWFnZSA6IExpdGh1YW5pYW4gKGx0KQovLyBhdXRob3IgOiBNaW5kYXVnYXMgTW96xatyYXMgOiBodHRwczovL2dpdGh1Yi5jb20vbW1venVyYXMKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewogICAgICAgIGRlZmluZShbJ21vbWVudCddLCBmYWN0b3J5KTsgLy8gQU1ECiAgICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JykgewogICAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKCcuLi9tb21lbnQnKSk7IC8vIE5vZGUKICAgIH0gZWxzZSB7CiAgICAgICAgZmFjdG9yeSh3aW5kb3cubW9tZW50KTsgLy8gQnJvd3NlciBnbG9iYWwKICAgIH0KfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICB2YXIgdW5pdHMgPSB7CiAgICAgICAgIm0iIDogIm1pbnV0xJdfbWludXTEl3NfbWludXTEmSIsCiAgICAgICAgIm1tIjogIm1pbnV0xJdzX21pbnXEjWnFs19taW51dGVzIiwKICAgICAgICAiaCIgOiAidmFsYW5kYV92YWxhbmRvc192YWxhbmTEhSIsCiAgICAgICAgImhoIjogInZhbGFuZG9zX3ZhbGFuZMWzX3ZhbGFuZGFzIiwKICAgICAgICAiZCIgOiAiZGllbmFfZGllbm9zX2RpZW7EhSIsCiAgICAgICAgImRkIjogImRpZW5vc19kaWVuxbNfZGllbmFzIiwKICAgICAgICAiTSIgOiAibcSXbnVvX23El25lc2lvX23El25lc8SvIiwKICAgICAgICAiTU0iOiAibcSXbmVzaWFpX23El25lc2nFs19txJduZXNpdXMiLAogICAgICAgICJ5IiA6ICJtZXRhaV9tZXTFs19tZXR1cyIsCiAgICAgICAgInl5IjogIm1ldGFpX21ldMWzX21ldHVzIgogICAgfSwKICAgIHdlZWtEYXlzID0gInBpcm1hZGllbmlzX2FudHJhZGllbmlzX3RyZcSNaWFkaWVuaXNfa2V0dmlydGFkaWVuaXNfcGVua3RhZGllbmlzX8WhZcWhdGFkaWVuaXNfc2VrbWFkaWVuaXMiLnNwbGl0KCJfIik7CgogICAgZnVuY3Rpb24gdHJhbnNsYXRlU2Vjb25kcyhudW1iZXIsIHdpdGhvdXRTdWZmaXgsIGtleSwgaXNGdXR1cmUpIHsKICAgICAgICBpZiAod2l0aG91dFN1ZmZpeCkgewogICAgICAgICAgICByZXR1cm4gImtlbGlvcyBzZWt1bmTEl3MiOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiBpc0Z1dHVyZSA\/ICJrZWxpxbMgc2VrdW5kxb5pxbMiIDogImtlbGlhcyBzZWt1bmRlcyI7CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zbGF0ZVNpbmd1bGFyKG51bWJlciwgd2l0aG91dFN1ZmZpeCwga2V5LCBpc0Z1dHVyZSkgewogICAgICAgIHJldHVybiB3aXRob3V0U3VmZml4ID8gZm9ybXMoa2V5KVswXSA6IChpc0Z1dHVyZSA\/IGZvcm1zKGtleSlbMV0gOiBmb3JtcyhrZXkpWzJdKTsKICAgIH0KCiAgICBmdW5jdGlvbiBzcGVjaWFsKG51bWJlcikgewogICAgICAgIHJldHVybiBudW1iZXIgJSAxMCA9PT0gMCB8fCAobnVtYmVyID4gMTAgJiYgbnVtYmVyIDwgMjApOwogICAgfQoKICAgIGZ1bmN0aW9uIGZvcm1zKGtleSkgewogICAgICAgIHJldHVybiB1bml0c1trZXldLnNwbGl0KCJfIik7CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNsYXRlKG51bWJlciwgd2l0aG91dFN1ZmZpeCwga2V5LCBpc0Z1dHVyZSkgewogICAgICAgIHZhciByZXN1bHQgPSBudW1iZXIgKyAiICI7CiAgICAgICAgaWYgKG51bWJlciA9PT0gMSkgewogICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgdHJhbnNsYXRlU2luZ3VsYXIobnVtYmVyLCB3aXRob3V0U3VmZml4LCBrZXlbMF0sIGlzRnV0dXJlKTsKICAgICAgICB9IGVsc2UgaWYgKHdpdGhvdXRTdWZmaXgpIHsKICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArIChzcGVjaWFsKG51bWJlcikgPyBmb3JtcyhrZXkpWzFdIDogZm9ybXMoa2V5KVswXSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgaWYgKGlzRnV0dXJlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgZm9ybXMoa2V5KVsxXTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAoc3BlY2lhbChudW1iZXIpID8gZm9ybXMoa2V5KVsxXSA6IGZvcm1zKGtleSlbMl0pOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIHJlbGF0aXZlV2Vla0RheShtb21lbnQsIGZvcm1hdCkgewogICAgICAgIHZhciBub21pbmF0aXZlID0gZm9ybWF0LmluZGV4T2YoJ2RkZGQgTFQnKSA9PT0gLTEsCiAgICAgICAgICAgIHdlZWtEYXkgPSB3ZWVrRGF5c1ttb21lbnQud2Vla2RheSgpXTsKCiAgICAgICAgcmV0dXJuIG5vbWluYXRpdmUgPyB3ZWVrRGF5IDogd2Vla0RheS5zdWJzdHJpbmcoMCwgd2Vla0RheS5sZW5ndGggLSAyKSArICLEryI7CiAgICB9CgogICAgcmV0dXJuIG1vbWVudC5sYW5nKCJsdCIsIHsKICAgICAgICBtb250aHMgOiAic2F1c2lvX3Zhc2FyaW9fa292b19iYWxhbmTFvmlvX2dlZ3XFvsSXc19iaXLFvsSXbGlvX2xpZXBvc19ydWdwasWrxI1pb19ydWdzxJdqb19zcGFsaW9fbGFwa3JpxI1pb19ncnVvZMW+aW8iLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAic2F1X3Zhc19rb3ZfYmFsX2dlZ19iaXJfbGllX3JncF9yZ3Nfc3BhX2xhcF9ncmQiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiByZWxhdGl2ZVdlZWtEYXksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICJTZWtfUGlyX0FudF9UcmVfS2V0X1Blbl\/FoGXFoSIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICJTX1BfQV9UX0tfUG5fxaAiLnNwbGl0KCJfIiksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogIkhIOm1tIiwKICAgICAgICAgICAgTCA6ICJZWVlZLU1NLUREIiwKICAgICAgICAgICAgTEwgOiAiWVlZWSBbbS5dIE1NTU0gRCBbZC5dIiwKICAgICAgICAgICAgTExMIDogIllZWVkgW20uXSBNTU1NIEQgW2QuXSwgTFQgW3ZhbC5dIiwKICAgICAgICAgICAgTExMTCA6ICJZWVlZIFttLl0gTU1NTSBEIFtkLl0sIGRkZGQsIExUIFt2YWwuXSIsCiAgICAgICAgICAgIGwgOiAiWVlZWS1NTS1ERCIsCiAgICAgICAgICAgIGxsIDogIllZWVkgW20uXSBNTU1NIEQgW2QuXSIsCiAgICAgICAgICAgIGxsbCA6ICJZWVlZIFttLl0gTU1NTSBEIFtkLl0sIExUIFt2YWwuXSIsCiAgICAgICAgICAgIGxsbGwgOiAiWVlZWSBbbS5dIE1NTU0gRCBbZC5dLCBkZGQsIExUIFt2YWwuXSIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogIlvFoGlhbmRpZW5dIExUIiwKICAgICAgICAgICAgbmV4dERheSA6ICJbUnl0b2pdIExUIiwKICAgICAgICAgICAgbmV4dFdlZWsgOiAiZGRkZCBMVCIsCiAgICAgICAgICAgIGxhc3REYXkgOiAiW1Zha2FyXSBMVCIsCiAgICAgICAgICAgIGxhc3RXZWVrIDogIltQcmHEl2p1c8SvXSBkZGRkIExUIiwKICAgICAgICAgICAgc2FtZUVsc2UgOiAiTCIKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogInBvICVzIiwKICAgICAgICAgICAgcGFzdCA6ICJwcmllxaEgJXMiLAogICAgICAgICAgICBzIDogdHJhbnNsYXRlU2Vjb25kcywKICAgICAgICAgICAgbSA6IHRyYW5zbGF0ZVNpbmd1bGFyLAogICAgICAgICAgICBtbSA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgaCA6IHRyYW5zbGF0ZVNpbmd1bGFyLAogICAgICAgICAgICBoaCA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgZCA6IHRyYW5zbGF0ZVNpbmd1bGFyLAogICAgICAgICAgICBkZCA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgTSA6IHRyYW5zbGF0ZVNpbmd1bGFyLAogICAgICAgICAgICBNTSA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgeSA6IHRyYW5zbGF0ZVNpbmd1bGFyLAogICAgICAgICAgICB5eSA6IHRyYW5zbGF0ZQogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICctb2ppJzsKICAgICAgICB9LAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA0ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiA0dGggaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogbGF0dmlhbiAobHYpCi8vIGF1dGhvciA6IEtyaXN0YXBzIEthcmxzb25zIDogaHR0cHM6Ly9naXRodWIuY29tL3NrYWtyaQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHZhciB1bml0cyA9IHsKICAgICAgICAnbW0nOiAnbWluxat0aV9taW7Fq3Rlc19taW7Fq3RlX21pbsWrdGVzJywKICAgICAgICAnaGgnOiAnc3R1bmR1X3N0dW5kYXNfc3R1bmRhX3N0dW5kYXMnLAogICAgICAgICdkZCc6ICdkaWVudV9kaWVuYXNfZGllbmFfZGllbmFzJywKICAgICAgICAnTU0nOiAnbcSTbmVzaV9txJNuZcWhdXNfbcSTbmVzaXNfbcSTbmXFoWknLAogICAgICAgICd5eSc6ICdnYWR1X2dhZHVzX2dhZHNfZ2FkaScKICAgIH07CgogICAgZnVuY3Rpb24gZm9ybWF0KHdvcmQsIG51bWJlciwgd2l0aG91dFN1ZmZpeCkgewogICAgICAgIHZhciBmb3JtcyA9IHdvcmQuc3BsaXQoJ18nKTsKICAgICAgICBpZiAod2l0aG91dFN1ZmZpeCkgewogICAgICAgICAgICByZXR1cm4gbnVtYmVyICUgMTAgPT09IDEgJiYgbnVtYmVyICE9PSAxMSA\/IGZvcm1zWzJdIDogZm9ybXNbM107CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIG51bWJlciAlIDEwID09PSAxICYmIG51bWJlciAhPT0gMTEgPyBmb3Jtc1swXSA6IGZvcm1zWzFdOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsKG51bWJlciwgd2l0aG91dFN1ZmZpeCwga2V5KSB7CiAgICAgICAgcmV0dXJuIG51bWJlciArICcgJyArIGZvcm1hdCh1bml0c1trZXldLCBudW1iZXIsIHdpdGhvdXRTdWZmaXgpOwogICAgfQoKICAgIHJldHVybiBtb21lbnQubGFuZygnbHYnLCB7CiAgICAgICAgbW9udGhzIDogImphbnbEgXJpc19mZWJydcSBcmlzX21hcnRzX2FwcsSrbGlzX21haWpzX2rFq25panNfasWrbGlqc19hdWd1c3RzX3NlcHRlbWJyaXNfb2t0b2JyaXNfbm92ZW1icmlzX2RlY2VtYnJpcyIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydCA6ICJqYW5fZmViX21hcl9hcHJfbWFpX2rFq25fasWrbF9hdWdfc2VwX29rdF9ub3ZfZGVjIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzIDogInN2xJN0ZGllbmFfcGlybWRpZW5hX290cmRpZW5hX3RyZcWhZGllbmFfY2V0dXJ0ZGllbmFfcGlla3RkaWVuYV9zZXN0ZGllbmEiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICJTdl9QX09fVF9DX1BrX1MiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNNaW4gOiAiU3ZfUF9PX1RfQ19Qa19TIi5zcGxpdCgiXyIpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICJISDptbSIsCiAgICAgICAgICAgIEwgOiAiREQuTU0uWVlZWSIsCiAgICAgICAgICAgIExMIDogIllZWVkuIFtnYWRhXSBELiBNTU1NIiwKICAgICAgICAgICAgTExMIDogIllZWVkuIFtnYWRhXSBELiBNTU1NLCBMVCIsCiAgICAgICAgICAgIExMTEwgOiAiWVlZWS4gW2dhZGFdIEQuIE1NTU0sIGRkZGQsIExUIgogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW8Wgb2RpZW4gcHVsa3N0ZW5dIExUJywKICAgICAgICAgICAgbmV4dERheSA6ICdbUsSrdCBwdWxrc3Rlbl0gTFQnLAogICAgICAgICAgICBuZXh0V2VlayA6ICdkZGRkIFtwdWxrc3Rlbl0gTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1tWYWthciBwdWxrc3Rlbl0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdbUGFnxIFqdcWhxIFdIGRkZGQgW3B1bGtzdGVuXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICIlcyB2xJNsxIFrIiwKICAgICAgICAgICAgcGFzdCA6ICIlcyBhZ3LEgWsiLAogICAgICAgICAgICBzIDogImRhxb5hcyBzZWt1bmRlcyIsCiAgICAgICAgICAgIG0gOiAibWluxat0aSIsCiAgICAgICAgICAgIG1tIDogcmVsYXRpdmVUaW1lV2l0aFBsdXJhbCwKICAgICAgICAgICAgaCA6ICJzdHVuZHUiLAogICAgICAgICAgICBoaCA6IHJlbGF0aXZlVGltZVdpdGhQbHVyYWwsCiAgICAgICAgICAgIGQgOiAiZGllbnUiLAogICAgICAgICAgICBkZCA6IHJlbGF0aXZlVGltZVdpdGhQbHVyYWwsCiAgICAgICAgICAgIE0gOiAibcSTbmVzaSIsCiAgICAgICAgICAgIE1NIDogcmVsYXRpdmVUaW1lV2l0aFBsdXJhbCwKICAgICAgICAgICAgeSA6ICJnYWR1IiwKICAgICAgICAgICAgeXkgOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsIDogJyVkLicsCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiBtYWxheWFsYW0gKG1sKQovLyBhdXRob3IgOiBGbG95ZCBQaW5rIDogaHR0cHM6Ly9naXRodWIuY29tL2Zsb3lkcGluawoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQubGFuZygnbWwnLCB7CiAgICAgICAgbW9udGhzIDogJ+C0nOC0qOC1geC0teC0sOC0v1\/gtKvgtYbgtKzgtY3gtLDgtYHgtLXgtLDgtL9f4LSu4LS+4LW84LSa4LWN4LSa4LWNX+C0j+C0quC1jeC0sOC0v+C1vV\/gtK7gtYfgtK\/gtY1f4LSc4LWC4LW6X+C0nOC1guC0suC1iF\/gtJPgtJfgtLjgtY3gtLHgtY3gtLHgtY1f4LS44LWG4LSq4LWN4LSx4LWN4LSx4LSC4LSs4LW8X+C0kuC0leC1jeC0n+C1i+C0rOC1vF\/gtKjgtLXgtILgtKzgtbxf4LSh4LS\/4LS44LSC4LSs4LW8Jy5zcGxpdCgiXyIpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJ+C0nOC0qOC1gS5f4LSr4LWG4LSs4LWN4LSw4LWBLl\/gtK7gtL7gtbwuX+C0j+C0quC1jeC0sOC0vy5f4LSu4LWH4LSv4LWNX+C0nOC1guC1ul\/gtJzgtYLgtLLgtYguX+C0k+C0ly5f4LS44LWG4LSq4LWN4LSx4LWN4LSxLl\/gtJLgtJXgtY3gtJ\/gtYsuX+C0qOC0teC0gi5f4LSh4LS\/4LS44LSCLicuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5cyA6ICfgtJ7gtL7gtK\/gtLHgtL7gtLTgtY3gtJpf4LSk4LS\/4LSZ4LWN4LSV4LSz4LS+4LS04LWN4LSaX+C0muC1iuC0teC1jeC0teC0vuC0tOC1jeC0ml\/gtKzgtYHgtKfgtKjgtL7gtLTgtY3gtJpf4LS14LWN4LSv4LS+4LS04LS+4LS04LWN4LSaX+C0teC1huC0s+C1jeC0s+C0v+C0r+C0vuC0tOC1jeC0ml\/gtLbgtKjgtL\/gtK\/gtL7gtLTgtY3gtJonLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICfgtJ7gtL7gtK\/gtbxf4LSk4LS\/4LSZ4LWN4LSV4LW+X+C0muC1iuC0teC1jeC0tV\/gtKzgtYHgtKfgtbtf4LS14LWN4LSv4LS+4LS04LSCX+C0teC1huC0s+C1jeC0s+C0v1\/gtLbgtKjgtL8nLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNNaW4gOiAn4LSe4LS+X+C0pOC0v1\/gtJrgtYpf4LSs4LWBX+C0teC1jeC0r+C0vl\/gtLXgtYZf4LS2Jy5zcGxpdCgiXyIpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICJBIGg6bW0gLeC0qOC1gSIsCiAgICAgICAgICAgIEwgOiAiREQvTU0vWVlZWSIsCiAgICAgICAgICAgIExMIDogIkQgTU1NTSBZWVlZIiwKICAgICAgICAgICAgTExMIDogIkQgTU1NTSBZWVlZLCBMVCIsCiAgICAgICAgICAgIExMTEwgOiAiZGRkZCwgRCBNTU1NIFlZWVksIExUIgogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW+C0h+C0qOC1jeC0qOC1jV0gTFQnLAogICAgICAgICAgICBuZXh0RGF5IDogJ1vgtKjgtL7gtLPgtYZdIExUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnZGRkZCwgTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1vgtIfgtKjgtY3gtKjgtLLgtYZdIExUJywKICAgICAgICAgICAgbGFzdFdlZWsgOiAnW+C0leC0tOC0v+C0nuC1jeC0nl0gZGRkZCwgTFQnLAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAiJXMg4LSV4LS04LS\/4LSe4LWN4LSe4LWNIiwKICAgICAgICAgICAgcGFzdCA6ICIlcyDgtK7gtYHgtbvgtKrgtY0iLAogICAgICAgICAgICBzIDogIuC0heC1veC0qiDgtKjgtL\/gtK7gtL\/gtLfgtJngtY3gtJngtb4iLAogICAgICAgICAgICBtIDogIuC0kuC0sOC1gSDgtK7gtL\/gtKjgtL\/gtLHgtY3gtLHgtY0iLAogICAgICAgICAgICBtbSA6ICIlZCDgtK7gtL\/gtKjgtL\/gtLHgtY3gtLHgtY0iLAogICAgICAgICAgICBoIDogIuC0kuC0sOC1gSDgtK7gtKPgtL\/gtJXgtY3gtJXgtYLgtbwiLAogICAgICAgICAgICBoaCA6ICIlZCDgtK7gtKPgtL\/gtJXgtY3gtJXgtYLgtbwiLAogICAgICAgICAgICBkIDogIuC0kuC0sOC1gSDgtKbgtL\/gtLXgtLjgtIIiLAogICAgICAgICAgICBkZCA6ICIlZCDgtKbgtL\/gtLXgtLjgtIIiLAogICAgICAgICAgICBNIDogIuC0kuC0sOC1gSDgtK7gtL7gtLjgtIIiLAogICAgICAgICAgICBNTSA6ICIlZCDgtK7gtL7gtLjgtIIiLAogICAgICAgICAgICB5IDogIuC0kuC0sOC1gSDgtLXgtbzgtLfgtIIiLAogICAgICAgICAgICB5eSA6ICIlZCDgtLXgtbzgtLfgtIIiCiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbSA6IGZ1bmN0aW9uIChob3VyLCBtaW51dGUsIGlzTG93ZXIpIHsKICAgICAgICAgICAgaWYgKGhvdXIgPCA0KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIuC0sOC0vuC0pOC1jeC0sOC0vyI7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaG91ciA8IDEyKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIuC0sOC0vuC0teC0v+C0suC1hiI7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaG91ciA8IDE3KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIuC0ieC0muC1jeC0miDgtJXgtLTgtL\/gtJ7gtY3gtJ7gtY0iOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhvdXIgPCAyMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICLgtLXgtYjgtJXgtYHgtKjgtY3gtKjgtYfgtLDgtIIiOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuICLgtLDgtL7gtKTgtY3gtLDgtL8iOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogTWFyYXRoaSAobXIpCi8vIGF1dGhvciA6IEhhcnNoYWQgS2FsZSA6IGh0dHBzOi8vZ2l0aHViLmNvbS9rYWxlaHYKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewogICAgICAgIGRlZmluZShbJ21vbWVudCddLCBmYWN0b3J5KTsgLy8gQU1ECiAgICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JykgewogICAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKCcuLi9tb21lbnQnKSk7IC8vIE5vZGUKICAgIH0gZWxzZSB7CiAgICAgICAgZmFjdG9yeSh3aW5kb3cubW9tZW50KTsgLy8gQnJvd3NlciBnbG9iYWwKICAgIH0KfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICB2YXIgc3ltYm9sTWFwID0gewogICAgICAgICcxJzogJ+ClpycsCiAgICAgICAgJzInOiAn4KWoJywKICAgICAgICAnMyc6ICfgpaknLAogICAgICAgICc0JzogJ+ClqicsCiAgICAgICAgJzUnOiAn4KWrJywKICAgICAgICAnNic6ICfgpawnLAogICAgICAgICc3JzogJ+ClrScsCiAgICAgICAgJzgnOiAn4KWuJywKICAgICAgICAnOSc6ICfgpa8nLAogICAgICAgICcwJzogJ+ClpicKICAgIH0sCiAgICBudW1iZXJNYXAgPSB7CiAgICAgICAgJ+Clpyc6ICcxJywKICAgICAgICAn4KWoJzogJzInLAogICAgICAgICfgpaknOiAnMycsCiAgICAgICAgJ+Clqic6ICc0JywKICAgICAgICAn4KWrJzogJzUnLAogICAgICAgICfgpawnOiAnNicsCiAgICAgICAgJ+ClrSc6ICc3JywKICAgICAgICAn4KWuJzogJzgnLAogICAgICAgICfgpa8nOiAnOScsCiAgICAgICAgJ+Clpic6ICcwJwogICAgfTsKCiAgICByZXR1cm4gbW9tZW50LmxhbmcoJ21yJywgewogICAgICAgIG1vbnRocyA6ICfgpJzgpL7gpKjgpYfgpLXgpL7gpLDgpYBf4KSr4KWH4KSs4KWN4KSw4KWB4KS14KS+4KSw4KWAX+CkruCkvuCksOCljeCkml\/gpI\/gpKrgpY3gpLDgpL\/gpLJf4KSu4KWHX+CknOClguCkqF\/gpJzgpYHgpLLgpYhf4KSR4KSX4KS44KWN4KSfX+CkuOCkquCljeCkn+Clh+CkguCkrOCksF\/gpJHgpJXgpY3gpJ\/gpYvgpKzgpLBf4KSo4KWL4KS14KWN4KS54KWH4KSC4KSs4KSwX+CkoeCkv+CkuOClh+CkguCkrOCksCcuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydDogJ+CknOCkvuCkqOClhy5f4KSr4KWH4KSs4KWN4KSw4KWBLl\/gpK7gpL7gpLDgpY3gpJouX+Ckj+CkquCljeCksOCkvy5f4KSu4KWHLl\/gpJzgpYLgpKguX+CknOClgeCksuCliC5f4KSR4KSXLl\/gpLjgpKrgpY3gpJ\/gpYfgpIIuX+CkkeCkleCljeCkn+Cliy5f4KSo4KWL4KS14KWN4KS54KWH4KSCLl\/gpKHgpL\/gpLjgpYfgpIIuJy5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzIDogJ+CksOCkteCkv+CkteCkvuCksF\/gpLjgpYvgpK7gpLXgpL7gpLBf4KSu4KSC4KSX4KSz4KS14KS+4KSwX+CkrOClgeCkp+CkteCkvuCksF\/gpJfgpYHgpLDgpYLgpLXgpL7gpLBf4KS24KWB4KSV4KWN4KSw4KS14KS+4KSwX+CktuCkqOCkv+CkteCkvuCksCcuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ+CksOCkteCkv1\/gpLjgpYvgpK5f4KSu4KSC4KSX4KSzX+CkrOClgeCkp1\/gpJfgpYHgpLDgpYJf4KS24KWB4KSV4KWN4KSwX+CktuCkqOCkvycuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICfgpLBf4KS44KWLX+CkruCkgl\/gpKzgpYFf4KSX4KWBX+CktuClgV\/gpLYnLnNwbGl0KCJfIiksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogIkEgaDptbSDgpLXgpL7gpJzgpKTgpL4iLAogICAgICAgICAgICBMIDogIkREL01NL1lZWVkiLAogICAgICAgICAgICBMTCA6ICJEIE1NTU0gWVlZWSIsCiAgICAgICAgICAgIExMTCA6ICJEIE1NTU0gWVlZWSwgTFQiLAogICAgICAgICAgICBMTExMIDogImRkZGQsIEQgTU1NTSBZWVlZLCBMVCIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1vgpIbgpJxdIExUJywKICAgICAgICAgICAgbmV4dERheSA6ICdb4KSJ4KSm4KWN4KSv4KS+XSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQsIExUJywKICAgICAgICAgICAgbGFzdERheSA6ICdb4KSV4KS+4KSyXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrOiAnW+CkruCkvuCkl+ClgOCksl0gZGRkZCwgTFQnLAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAiJXMg4KSo4KSC4KSk4KSwIiwKICAgICAgICAgICAgcGFzdCA6ICIlcyDgpKrgpYLgpLDgpY3gpLXgpYAiLAogICAgICAgICAgICBzIDogIuCkuOClh+CkleCkguCkpiIsCiAgICAgICAgICAgIG06ICLgpI\/gpJUg4KSu4KS\/4KSo4KS\/4KSfIiwKICAgICAgICAgICAgbW06ICIlZCDgpK7gpL\/gpKjgpL\/gpJ\/gpYciLAogICAgICAgICAgICBoIDogIuCkj+CklSDgpKTgpL7gpLgiLAogICAgICAgICAgICBoaCA6ICIlZCDgpKTgpL7gpLgiLAogICAgICAgICAgICBkIDogIuCkj+CklSDgpKbgpL\/gpLXgpLgiLAogICAgICAgICAgICBkZCA6ICIlZCDgpKbgpL\/gpLXgpLgiLAogICAgICAgICAgICBNIDogIuCkj+CklSDgpK7gpLngpL\/gpKjgpL4iLAogICAgICAgICAgICBNTSA6ICIlZCDgpK7gpLngpL\/gpKjgpYciLAogICAgICAgICAgICB5IDogIuCkj+CklSDgpLXgpLDgpY3gpLciLAogICAgICAgICAgICB5eSA6ICIlZCDgpLXgpLDgpY3gpLfgpYciCiAgICAgICAgfSwKICAgICAgICBwcmVwYXJzZTogZnVuY3Rpb24gKHN0cmluZykgewogICAgICAgICAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2UoL1vgpafgpajgpangpargpavgpazgpa3gpa7gpa\\/gpK7gpL7gpLDgpY3gpJpf4KSF4KSq4KWN4KSw4KS\/4KSyX+CkruCkiF\/gpJzgpYHgpKhf4KSc4KWB4KSy4KS+4KSIX+CkheCkl+Ckt+CljeCkn1\/gpLjgpYfgpKrgpY3gpJ\/gpYfgpK7gpY3gpKzgpLBf4KSF4KSV4KWN4KSf4KWL4KSs4KSwX+CkqOCli+CkreClh+CkruCljeCkrOCksF\/gpKHgpL\/gpLjgpYfgpK7gpY3gpKzgpLAnLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAn4KSc4KSoLl\/gpKvgpYfgpKzgpY3gpLDgpYEuX+CkruCkvuCksOCljeCkml\/gpIXgpKrgpY3gpLDgpL8uX+CkruCkiF\/gpJzgpYHgpKhf4KSc4KWB4KSy4KS+4KSILl\/gpIXgpJcuX+CkuOClh+CkquCljeCkny5f4KSF4KSV4KWN4KSf4KWLLl\/gpKjgpYvgpK3gpYcuX+CkoeCkv+CkuOClhy4nLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAn4KSG4KSH4KSk4KSs4KS+4KSwX+CkuOCli+CkruCkrOCkvuCksF\/gpK7gpJngpY3gpJfgpLLgpKzgpL7gpLBf4KSs4KWB4KSn4KSs4KS+4KSwX+CkrOCkv+CkueCkv+CkrOCkvuCksF\/gpLbgpYHgpJXgpY3gpLDgpKzgpL7gpLBf4KS24KSo4KS\/4KSs4KS+4KSwJy5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAn4KSG4KSH4KSkLl\/gpLjgpYvgpK4uX+CkruCkmeCljeCkl+Cksi5f4KSs4KWB4KSnLl\/gpKzgpL\/gpLngpL8uX+CktuClgeCkleCljeCksC5f4KS24KSo4KS\/Licuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICfgpIbgpIcuX+CkuOCliy5f4KSu4KSZ4KWNX+CkrOClgS5f4KSs4KS\/Ll\/gpLbgpYEuX+Ckti4nLnNwbGl0KCJfIiksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogIkHgpJXgpYsgaDptbSDgpKzgpJzgpYciLAogICAgICAgICAgICBMIDogIkREL01NL1lZWVkiLAogICAgICAgICAgICBMTCA6ICJEIE1NTU0gWVlZWSIsCiAgICAgICAgICAgIExMTCA6ICJEIE1NTU0gWVlZWSwgTFQiLAogICAgICAgICAgICBMTExMIDogImRkZGQsIEQgTU1NTSBZWVlZLCBMVCIKICAgICAgICB9LAogICAgICAgIHByZXBhcnNlOiBmdW5jdGlvbiAoc3RyaW5nKSB7CiAgICAgICAgICAgIHJldHVybiBzdHJpbmcucmVwbGFjZSgvW+Clp+ClqOClqeClquClq+ClrOClreClruClr+Clpl0vZywgZnVuY3Rpb24gKG1hdGNoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyTWFwW21hdGNoXTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBwb3N0Zm9ybWF0OiBmdW5jdGlvbiAoc3RyaW5nKSB7CiAgICAgICAgICAgIHJldHVybiBzdHJpbmcucmVwbGFjZSgvXGQvZywgZnVuY3Rpb24gKG1hdGNoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gc3ltYm9sTWFwW21hdGNoXTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbSA6IGZ1bmN0aW9uIChob3VyLCBtaW51dGUsIGlzTG93ZXIpIHsKICAgICAgICAgICAgaWYgKGhvdXIgPCAzKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIuCksOCkvuCkpOClgCI7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaG91ciA8IDEwKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIuCkrOCkv+CkueCkvuCkqCI7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaG91ciA8IDE1KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIuCkpuCkv+CkieCkgeCkuOCliyI7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaG91ciA8IDE4KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIuCkrOClh+CksuClgeCkleCkviI7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaG91ciA8IDIwKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIuCkuOCkvuCkgeCknSI7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIuCksOCkvuCkpOClgCI7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1vgpIbgpJxdIExUJywKICAgICAgICAgICAgbmV4dERheSA6ICdb4KSt4KWL4KSy4KWAXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ1vgpIbgpIngpIHgpKbgpYtdIGRkZGRbLF0gTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1vgpLngpL\/gpJzgpYtdIExUJywKICAgICAgICAgICAgbGFzdFdlZWsgOiAnW+Ckl+Ckj+CkleCli10gZGRkZFssXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICIlc+CkruCkviIsCiAgICAgICAgICAgIHBhc3QgOiAiJXMg4KSF4KSX4KS+4KSh4KWAIiwKICAgICAgICAgICAgcyA6ICLgpJXgpYfgpLngpYAg4KS44KSu4KSvIiwKICAgICAgICAgICAgbSA6ICLgpI\/gpJUg4KSu4KS\/4KSo4KWH4KSfIiwKICAgICAgICAgICAgbW0gOiAiJWQg4KSu4KS\/4KSo4KWH4KSfIiwKICAgICAgICAgICAgaCA6ICLgpI\/gpJUg4KSY4KSj4KWN4KSf4KS+IiwKICAgICAgICAgICAgaGggOiAiJWQg4KSY4KSj4KWN4KSf4KS+IiwKICAgICAgICAgICAgZCA6ICLgpI\/gpJUg4KSm4KS\/4KSoIiwKICAgICAgICAgICAgZGQgOiAiJWQg4KSm4KS\/4KSoIiwKICAgICAgICAgICAgTSA6ICLgpI\/gpJUg4KSu4KS54KS\/4KSo4KS+IiwKICAgICAgICAgICAgTU0gOiAiJWQg4KSu4KS54KS\/4KSo4KS+IiwKICAgICAgICAgICAgeSA6ICLgpI\/gpJUg4KSs4KSw4KWN4KS3IiwKICAgICAgICAgICAgeXkgOiAiJWQg4KSs4KSw4KWN4KS3IgogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDcgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDFzdCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiBkdXRjaCAobmwpCi8vIGF1dGhvciA6IEpvcmlzIFLDtmxpbmcgOiBodHRwczovL2dpdGh1Yi5jb20vamp1cGl0ZXIKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewogICAgICAgIGRlZmluZShbJ21vbWVudCddLCBmYWN0b3J5KTsgLy8gQU1ECiAgICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JykgewogICAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKCcuLi9tb21lbnQnKSk7IC8vIE5vZGUKICAgIH0gZWxzZSB7CiAgICAgICAgZmFjdG9yeSh3aW5kb3cubW9tZW50KTsgLy8gQnJvd3NlciBnbG9iYWwKICAgIH0KfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICB2YXIgbW9udGhzU2hvcnRXaXRoRG90cyA9ICJqYW4uX2ZlYi5fbXJ0Ll9hcHIuX21laV9qdW4uX2p1bC5fYXVnLl9zZXAuX29rdC5fbm92Ll9kZWMuIi5zcGxpdCgiXyIpLAogICAgICAgIG1vbnRoc1Nob3J0V2l0aG91dERvdHMgPSAiamFuX2ZlYl9tcnRfYXByX21laV9qdW5fanVsX2F1Z19zZXBfb2t0X25vdl9kZWMiLnNwbGl0KCJfIik7CgogICAgcmV0dXJuIG1vbWVudC5sYW5nKCdubCcsIHsKICAgICAgICBtb250aHMgOiAiamFudWFyaV9mZWJydWFyaV9tYWFydF9hcHJpbF9tZWlfanVuaV9qdWxpX2F1Z3VzdHVzX3NlcHRlbWJlcl9va3RvYmVyX25vdmVtYmVyX2RlY2VtYmVyIi5zcGxpdCgiXyIpLAogICAgICAgIG1vbnRoc1Nob3J0IDogZnVuY3Rpb24gKG0sIGZvcm1hdCkgewogICAgICAgICAgICBpZiAoLy1NTU0tLy50ZXN0KGZvcm1hdCkpIHsKICAgICAgICAgICAgICAgIHJldHVybiBtb250aHNTaG9ydFdpdGhvdXREb3RzW20ubW9udGgoKV07CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbW9udGhzU2hvcnRXaXRoRG90c1ttLm1vbnRoKCldOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB3ZWVrZGF5cyA6ICJ6b25kYWdfbWFhbmRhZ19kaW5zZGFnX3dvZW5zZGFnX2RvbmRlcmRhZ192cmlqZGFnX3phdGVyZGFnIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAiem8uX21hLl9kaS5fd28uX2RvLl92ci5femEuIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogIlpvX01hX0RpX1dvX0RvX1ZyX1phIi5zcGxpdCgiXyIpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICJISDptbSIsCiAgICAgICAgICAgIEwgOiAiREQtTU0tWVlZWSIsCiAgICAgICAgICAgIExMIDogIkQgTU1NTSBZWVlZIiwKICAgICAgICAgICAgTExMIDogIkQgTU1NTSBZWVlZIExUIiwKICAgICAgICAgICAgTExMTCA6ICJkZGRkIEQgTU1NTSBZWVlZIExUIgogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICdbdmFuZGFhZyBvbV0gTFQnLAogICAgICAgICAgICBuZXh0RGF5OiAnW21vcmdlbiBvbV0gTFQnLAogICAgICAgICAgICBuZXh0V2VlazogJ2RkZGQgW29tXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXk6ICdbZ2lzdGVyZW4gb21dIExUJywKICAgICAgICAgICAgbGFzdFdlZWs6ICdbYWZnZWxvcGVuXSBkZGRkIFtvbV0gTFQnLAogICAgICAgICAgICBzYW1lRWxzZTogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICJvdmVyICVzIiwKICAgICAgICAgICAgcGFzdCA6ICIlcyBnZWxlZGVuIiwKICAgICAgICAgICAgcyA6ICJlZW4gcGFhciBzZWNvbmRlbiIsCiAgICAgICAgICAgIG0gOiAiw6nDqW4gbWludXV0IiwKICAgICAgICAgICAgbW0gOiAiJWQgbWludXRlbiIsCiAgICAgICAgICAgIGggOiAiw6nDqW4gdXVyIiwKICAgICAgICAgICAgaGggOiAiJWQgdXVyIiwKICAgICAgICAgICAgZCA6ICLDqcOpbiBkYWciLAogICAgICAgICAgICBkZCA6ICIlZCBkYWdlbiIsCiAgICAgICAgICAgIE0gOiAiw6nDqW4gbWFhbmQiLAogICAgICAgICAgICBNTSA6ICIlZCBtYWFuZGVuIiwKICAgICAgICAgICAgeSA6ICLDqcOpbiBqYWFyIiwKICAgICAgICAgICAgeXkgOiAiJWQgamFhciIKICAgICAgICB9LAogICAgICAgIG9yZGluYWwgOiBmdW5jdGlvbiAobnVtYmVyKSB7CiAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAoKG51bWJlciA9PT0gMSB8fCBudW1iZXIgPT09IDggfHwgbnVtYmVyID49IDIwKSA\/ICdzdGUnIDogJ2RlJyk7CiAgICAgICAgfSwKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNCAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gNHRoIGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7CgovLyBtb21lbnQuanMgbGFuZ3VhZ2UgY29uZmlndXJhdGlvbgovLyBsYW5ndWFnZSA6IG5vcndlZ2lhbiBueW5vcnNrIChubikKLy8gYXV0aG9yIDogaHR0cHM6Ly9naXRodWIuY29tL21lY2h1d2luZAoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQubGFuZygnbm4nLCB7CiAgICAgICAgbW9udGhzIDogImphbnVhcl9mZWJydWFyX21hcnNfYXByaWxfbWFpX2p1bmlfanVsaV9hdWd1c3Rfc2VwdGVtYmVyX29rdG9iZXJfbm92ZW1iZXJfZGVzZW1iZXIiLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAiamFuX2ZlYl9tYXJfYXByX21haV9qdW5fanVsX2F1Z19zZXBfb2t0X25vdl9kZXMiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAic3VuZGFnX23DpW5kYWdfdHlzZGFnX29uc2RhZ190b3JzZGFnX2ZyZWRhZ19sYXVyZGFnIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAic3VuX23DpW5fdHlzX29uc190b3JfZnJlX2xhdSIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICJzdV9tw6VfdHlfb25fdG9fZnJfbMO4Ii5zcGxpdCgiXyIpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICJISDptbSIsCiAgICAgICAgICAgIEwgOiAiREQuTU0uWVlZWSIsCiAgICAgICAgICAgIExMIDogIkQgTU1NTSBZWVlZIiwKICAgICAgICAgICAgTExMIDogIkQgTU1NTSBZWVlZIExUIiwKICAgICAgICAgICAgTExMTCA6ICJkZGRkIEQgTU1NTSBZWVlZIExUIgogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICdbSSBkYWcga2xva2thXSBMVCcsCiAgICAgICAgICAgIG5leHREYXk6ICdbSSBtb3Jnb24ga2xva2thXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrOiAnZGRkZCBba2xva2thXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXk6ICdbSSBnw6VyIGtsb2trYV0gTFQnLAogICAgICAgICAgICBsYXN0V2VlazogJ1tGw7hyZWfDpWVuZGVdIGRkZGQgW2tsb2trYV0gTFQnLAogICAgICAgICAgICBzYW1lRWxzZTogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICJvbSAlcyIsCiAgICAgICAgICAgIHBhc3QgOiAiZm9yICVzIHNpZGVuIiwKICAgICAgICAgICAgcyA6ICJub2VuIHNla3VuZCIsCiAgICAgICAgICAgIG0gOiAiZXR0IG1pbnV0dCIsCiAgICAgICAgICAgIG1tIDogIiVkIG1pbnV0dCIsCiAgICAgICAgICAgIGggOiAiZW4gdGltZSIsCiAgICAgICAgICAgIGhoIDogIiVkIHRpbWFyIiwKICAgICAgICAgICAgZCA6ICJlbiBkYWciLAogICAgICAgICAgICBkZCA6ICIlZCBkYWdhciIsCiAgICAgICAgICAgIE0gOiAiZW4gbcOlbmFkIiwKICAgICAgICAgICAgTU0gOiAiJWQgbcOlbmFkZXIiLAogICAgICAgICAgICB5IDogImV0dCDDpXIiLAogICAgICAgICAgICB5eSA6ICIlZCDDpXIiCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsIDogJyVkLicsCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiBwb2xpc2ggKHBsKQovLyBhdXRob3IgOiBSYWZhbCBIaXJzeiA6IGh0dHBzOi8vZ2l0aHViLmNvbS9ldm9MCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgdmFyIG1vbnRoc05vbWluYXRpdmUgPSAic3R5Y3plxYRfbHV0eV9tYXJ6ZWNfa3dpZWNpZcWEX21hal9jemVyd2llY19saXBpZWNfc2llcnBpZcWEX3dyemVzaWXFhF9wYcW6ZHppZXJuaWtfbGlzdG9wYWRfZ3J1ZHppZcWEIi5zcGxpdCgiXyIpLAogICAgICAgIG1vbnRoc1N1YmplY3RpdmUgPSAic3R5Y3puaWFfbHV0ZWdvX21hcmNhX2t3aWV0bmlhX21hamFfY3plcndjYV9saXBjYV9zaWVycG5pYV93cnplxZtuaWFfcGHFumR6aWVybmlrYV9saXN0b3BhZGFfZ3J1ZG5pYSIuc3BsaXQoIl8iKTsKCiAgICBmdW5jdGlvbiBwbHVyYWwobikgewogICAgICAgIHJldHVybiAobiAlIDEwIDwgNSkgJiYgKG4gJSAxMCA+IDEpICYmICh+fihuIC8gMTApICE9PSAxKTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2xhdGUobnVtYmVyLCB3aXRob3V0U3VmZml4LCBrZXkpIHsKICAgICAgICB2YXIgcmVzdWx0ID0gbnVtYmVyICsgIiAiOwogICAgICAgIHN3aXRjaCAoa2V5KSB7CiAgICAgICAgY2FzZSAnbSc6CiAgICAgICAgICAgIHJldHVybiB3aXRob3V0U3VmZml4ID8gJ21pbnV0YScgOiAnbWludXTEmSc7CiAgICAgICAgY2FzZSAnbW0nOgogICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKHBsdXJhbChudW1iZXIpID8gJ21pbnV0eScgOiAnbWludXQnKTsKICAgICAgICBjYXNlICdoJzoKICAgICAgICAgICAgcmV0dXJuIHdpdGhvdXRTdWZmaXggID8gJ2dvZHppbmEnICA6ICdnb2R6aW7EmSc7CiAgICAgICAgY2FzZSAnaGgnOgogICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKHBsdXJhbChudW1iZXIpID8gJ2dvZHppbnknIDogJ2dvZHppbicpOwogICAgICAgIGNhc2UgJ01NJzoKICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArIChwbHVyYWwobnVtYmVyKSA\/ICdtaWVzacSFY2UnIDogJ21pZXNpxJljeScpOwogICAgICAgIGNhc2UgJ3l5JzoKICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArIChwbHVyYWwobnVtYmVyKSA\\/IGZvcm1zWzBdIDogKG51bSAlIDEwID49IDIgJiYgbnVtICUgMTAgPD0gNCAmJiAobnVtICUgMTAwIDwgMTAgfHwgbnVtICUgMTAwID49IDIwKSA\/IGZvcm1zWzFdIDogZm9ybXNbMl0pOwogICAgfQoKICAgIGZ1bmN0aW9uIHJlbGF0aXZlVGltZVdpdGhQbHVyYWwobnVtYmVyLCB3aXRob3V0U3VmZml4LCBrZXkpIHsKICAgICAgICB2YXIgZm9ybWF0ID0gewogICAgICAgICAgICAnbW0nOiAn0LzQuNC90YPRgtCwX9C80LjQvdGD0YLRi1\/QvNC40L3Rg9GCJywKICAgICAgICAgICAgJ2hoJzogJ9GH0LDRgV\/Rh9Cw0YHQsF\/Rh9Cw0YHQvtCyJywKICAgICAgICAgICAgJ2RkJzogJ9C00LXQvdGMX9C00L3Rj1\/QtNC90LXQuScsCiAgICAgICAgICAgICdNTSc6ICfQvNC10YHRj9GGX9C80LXRgdGP0YbQsF\/QvNC10YHRj9GG0LXQsicsCiAgICAgICAgICAgICd5eSc6ICfQs9C+0LRf0LPQvtC00LBf0LvQtdGCJwogICAgICAgIH07CiAgICAgICAgaWYgKGtleSA9PT0gJ20nKSB7CiAgICAgICAgICAgIHJldHVybiB3aXRob3V0U3VmZml4ID8gJ9C80LjQvdGD0YLQsCcgOiAn0LzQuNC90YPRgtGDJzsKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAnICcgKyBwbHVyYWwoZm9ybWF0W2tleV0sICtudW1iZXIpOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBtb250aHNDYXNlUmVwbGFjZShtLCBmb3JtYXQpIHsKICAgICAgICB2YXIgbW9udGhzID0gewogICAgICAgICAgICAnbm9taW5hdGl2ZSc6ICfRj9C90LLQsNGA0Yxf0YTQtdCy0YDQsNC70Yxf0LzQsNGA0YJf0LDQv9GA0LXQu9GMX9C80LDQuV\/QuNGO0L3RjF\/QuNGO0LvRjF\/QsNCy0LPRg9GB0YJf0YHQtdC90YLRj9Cx0YDRjF\/QvtC60YLRj9Cx0YDRjF\/QvdC+0Y\/QsdGA0Yxf0LTQtdC60LDQsdGA0YwnLnNwbGl0KCdfJyksCiAgICAgICAgICAgICdhY2N1c2F0aXZlJzogJ9GP0L3QstCw0YDRj1\/RhNC10LLRgNCw0LvRj1\/QvNCw0YDRgtCwX9Cw0L\/RgNC10LvRj1\/QvNCw0Y9f0LjRjtC90Y9f0LjRjtC70Y9f0LDQstCz0YPRgdGC0LBf0YHQtdC90YLRj9Cx0YDRj1\/QvtC60YLRj9Cx0YDRj1\/QvdC+0Y\/QsdGA0Y9f0LTQtdC60LDQsdGA0Y8nLnNwbGl0KCdfJykKICAgICAgICB9LAoKICAgICAgICBub3VuQ2FzZSA9ICgvRFtvRF0\/ICpNTU1NPy8pLnRlc3QoZm9ybWF0KSA\/CiAgICAgICAgICAgICdhY2N1c2F0aXZlJyA6CiAgICAgICAgICAgICdub21pbmF0aXZlJzsKCiAgICAgICAgcmV0dXJuIG1vbnRoc1tub3VuQ2FzZV1bbS5tb250aCgpXTsKICAgIH0KCiAgICBmdW5jdGlvbiBtb250aHNTaG9ydENhc2VSZXBsYWNlKG0sIGZvcm1hdCkgewogICAgICAgIHZhciBtb250aHNTaG9ydCA9IHsKICAgICAgICAgICAgJ25vbWluYXRpdmUnOiAn0Y\/QvdCyX9GE0LXQsl\/QvNCw0YBf0LDQv9GAX9C80LDQuV\/QuNGO0L3RjF\/QuNGO0LvRjF\/QsNCy0LNf0YHQtdC9X9C+0LrRgl\/QvdC+0Y9f0LTQtdC6Jy5zcGxpdCgnXycpLAogICAgICAgICAgICAnYWNjdXNhdGl2ZSc6ICfRj9C90LJf0YTQtdCyX9C80LDRgF\/QsNC\/0YBf0LzQsNGPX9C40Y7QvdGPX9C40Y7Qu9GPX9Cw0LLQs1\/RgdC10L1f0L7QutGCX9C90L7Rj1\/QtNC10LonLnNwbGl0KCdfJykKICAgICAgICB9LAoKICAgICAgICBub3VuQ2FzZSA9ICgvRFtvRF0\/ICpNTU1NPy8pLnRlc3QoZm9ybWF0KSA\/CiAgICAgICAgICAgICdhY2N1c2F0aXZlJyA6CiAgICAgICAgICAgICdub21pbmF0aXZlJzsKCiAgICAgICAgcmV0dXJuIG1vbnRoc1Nob3J0W25vdW5DYXNlXVttLm1vbnRoKCldOwogICAgfQoKICAgIGZ1bmN0aW9uIHdlZWtkYXlzQ2FzZVJlcGxhY2UobSwgZm9ybWF0KSB7CiAgICAgICAgdmFyIHdlZWtkYXlzID0gewogICAgICAgICAgICAnbm9taW5hdGl2ZSc6ICfQstC+0YHQutGA0LXRgdC10L3RjNC1X9C\/0L7QvdC10LTQtdC70YzQvdC40Lpf0LLRgtC+0YDQvdC40Lpf0YHRgNC10LTQsF\/Rh9C10YLQstC10YDQs1\/Qv9GP0YLQvdC40YbQsF\/RgdGD0LHQsdC+0YLQsCcuc3BsaXQoJ18nKSwKICAgICAgICAgICAgJ2FjY3VzYXRpdmUnOiAn0LLQvtGB0LrRgNC10YHQtdC90YzQtV\/Qv9C+0L3QtdC00LXQu9GM0L3QuNC6X9Cy0YLQvtGA0L3QuNC6X9GB0YDQtdC00YNf0YfQtdGC0LLQtdGA0LNf0L\/Rj9GC0L3QuNGG0YNf0YHRg9Cx0LHQvtGC0YMnLnNwbGl0KCdfJykKICAgICAgICB9LAoKICAgICAgICBub3VuQ2FzZSA9ICgvXFsgP1vQktCyXSA\/KD860L\/RgNC+0YjQu9GD0Y580YHQu9C10LTRg9GO0YnRg9GOKT8gP1xdID9kZGRkLykudGVzdChmb3JtYXQpID8KICAgICAgICAgICAgJ2FjY3VzYXRpdmUnIDoKICAgICAgICAgICAgJ25vbWluYXRpdmUnOwoKICAgICAgICByZXR1cm4gd2Vla2RheXNbbm91bkNhc2VdW20uZGF5KCldOwogICAgfQoKICAgIHJldHVybiBtb21lbnQubGFuZygncnUnLCB7CiAgICAgICAgbW9udGhzIDogbW9udGhzQ2FzZVJlcGxhY2UsCiAgICAgICAgbW9udGhzU2hvcnQgOiBtb250aHNTaG9ydENhc2VSZXBsYWNlLAogICAgICAgIHdlZWtkYXlzIDogd2Vla2RheXNDYXNlUmVwbGFjZSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogItCy0YFf0L\/QvV\/QstGCX9GB0YBf0YfRgl\/Qv9GCX9GB0LEiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNNaW4gOiAi0LLRgV\/Qv9C9X9Cy0YJf0YHRgF\/Rh9GCX9C\/0YJf0YHQsSIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNQYXJzZSA6IFsvXtGP0L3Qsi9pLCAvXtGE0LXQsi9pLCAvXtC80LDRgC9pLCAvXtCw0L\/RgC9pLCAvXtC80LBb0Ll80Y9dL2ksIC9e0LjRjtC9L2ksIC9e0LjRjtC7L2ksIC9e0LDQstCzL2ksIC9e0YHQtdC9L2ksIC9e0L7QutGCL2ksIC9e0L3QvtGPL2ksIC9e0LTQtdC6L2ldLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICJISDptbSIsCiAgICAgICAgICAgIEwgOiAiREQuTU0uWVlZWSIsCiAgICAgICAgICAgIExMIDogIkQgTU1NTSBZWVlZINCzLiIsCiAgICAgICAgICAgIExMTCA6ICJEIE1NTU0gWVlZWSDQsy4sIExUIiwKICAgICAgICAgICAgTExMTCA6ICJkZGRkLCBEIE1NTU0gWVlZWSDQsy4sIExUIgogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICdb0KHQtdCz0L7QtNC90Y8g0LJdIExUJywKICAgICAgICAgICAgbmV4dERheTogJ1vQl9Cw0LLRgtGA0LAg0LJdIExUJywKICAgICAgICAgICAgbGFzdERheTogJ1vQktGH0LXRgNCwINCyXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kYXkoKSA9PT0gMiA\/ICdb0JLQvl0gZGRkZCBb0LJdIExUJyA6ICdb0JJdIGRkZGQgW9CyXSBMVCc7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhc3RXZWVrOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKHRoaXMuZGF5KCkpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1vQkiDQv9GA0L7RiNC70L7QtV0gZGRkZCBb0LJdIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1vQkiDQv9GA0L7RiNC70YvQuV0gZGRkZCBb0LJdIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1vQkiDQv9GA0L7RiNC70YPRjl0gZGRkZCBb0LJdIExUJzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2FtZUVsc2U6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAi0YfQtdGA0LXQtyAlcyIsCiAgICAgICAgICAgIHBhc3QgOiAiJXMg0L3QsNC30LDQtCIsCiAgICAgICAgICAgIHMgOiAi0L3QtdGB0LrQvtC70YzQutC+INGB0LXQutGD0L3QtCIsCiAgICAgICAgICAgIG0gOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsLAogICAgICAgICAgICBtbSA6IHJlbGF0aXZlVGltZVdpdGhQbHVyYWwsCiAgICAgICAgICAgIGggOiAi0YfQsNGBIiwKICAgICAgICAgICAgaGggOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsLAogICAgICAgICAgICBkIDogItC00LXQvdGMIiwKICAgICAgICAgICAgZGQgOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsLAogICAgICAgICAgICBNIDogItC80LXRgdGP0YYiLAogICAgICAgICAgICBNTSA6IHJlbGF0aXZlVGltZVdpdGhQbHVyYWwsCiAgICAgICAgICAgIHkgOiAi0LPQvtC0IiwKICAgICAgICAgICAgeXkgOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsCiAgICAgICAgfSwKCiAgICAgICAgLy8gTS4gRS46IHRob3NlIHR3byBhcmUgdmlydHVhbGx5IHVudXNlZCBidXQgYSB1c2VyIG1pZ2h0IHdhbnQgdG8gaW1wbGVtZW50IHRoZW0gZm9yIGhpcy9oZXIgd2Vic2l0ZSBmb3Igc29tZSByZWFzb24KCiAgICAgICAgbWVyaWRpZW0gOiBmdW5jdGlvbiAoaG91ciwgbWludXRlLCBpc0xvd2VyKSB7CiAgICAgICAgICAgIGlmIChob3VyIDwgNCkgewogICAgICAgICAgICAgICAgcmV0dXJuICLQvdC+0YfQuCI7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaG91ciA8IDEyKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gItGD0YLRgNCwIjsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VyIDwgMTcpIHsKICAgICAgICAgICAgICAgIHJldHVybiAi0LTQvdGPIjsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiAi0LLQtdGH0LXRgNCwIjsKICAgICAgICAgICAgfQogICAgICAgIH0sCgogICAgICAgIG9yZGluYWw6IGZ1bmN0aW9uIChudW1iZXIsIHBlcmlvZCkgewogICAgICAgICAgICBzd2l0Y2ggKHBlcmlvZCkgewogICAgICAgICAgICBjYXNlICdNJzoKICAgICAgICAgICAgY2FzZSAnZCc6CiAgICAgICAgICAgIGNhc2UgJ0RERCc6CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJy3QuSc7CiAgICAgICAgICAgIGNhc2UgJ0QnOgogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICct0LPQvic7CiAgICAgICAgICAgIGNhc2UgJ3cnOgogICAgICAgICAgICBjYXNlICdXJzoKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAnLdGPJzsKICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXI7CiAgICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNyAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gMXN0IGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7CgovLyBtb21lbnQuanMgbGFuZ3VhZ2UgY29uZmlndXJhdGlvbgovLyBsYW5ndWFnZSA6IHNsb3ZhayAoc2spCi8vIGF1dGhvciA6IE1hcnRpbiBNaW5rYSA6IGh0dHBzOi8vZ2l0aHViLmNvbS9rMnMKLy8gYmFzZWQgb24gd29yayBvZiBwZXRyYmVsYSA6IGh0dHBzOi8vZ2l0aHViLmNvbS9wZXRyYmVsYQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHZhciBtb250aHMgPSAiamFudcOhcl9mZWJydcOhcl9tYXJlY19hcHLDrWxfbcOhal9qw7puX2rDumxfYXVndXN0X3NlcHRlbWJlcl9va3TDs2Jlcl9ub3ZlbWJlcl9kZWNlbWJlciIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydCA9ICJqYW5fZmViX21hcl9hcHJfbcOhal9qw7puX2rDumxfYXVnX3NlcF9va3Rfbm92X2RlYyIuc3BsaXQoIl8iKTsKCiAgICBmdW5jdGlvbiBwbHVyYWwobikgewogICAgICAgIHJldHVybiAobiA+IDEpICYmIChuIDwgNSk7CiAgICB9CgogICAgZnVuY3Rpb24gdHJhbnNsYXRlKG51bWJlciwgd2l0aG91dFN1ZmZpeCwga2V5LCBpc0Z1dHVyZSkgewogICAgICAgIHZhciByZXN1bHQgPSBudW1iZXIgKyAiICI7CiAgICAgICAgc3dpdGNoIChrZXkpIHsKICAgICAgICBjYXNlICdzJzogIC8vIGEgZmV3IHNlY29uZHMgLyBpbiBhIGZldyBzZWNvbmRzIC8gYSBmZXcgc2Vjb25kcyBhZ28KICAgICAgICAgICAgcmV0dXJuICh3aXRob3V0U3VmZml4IHx8IGlzRnV0dXJlKSA\/ICdww6FyIHNla8O6bmQnIDogJ3DDoXIgc2VrdW5kYW1pJzsKICAgICAgICBjYXNlICdtJzogIC8vIGEgbWludXRlIC8gaW4gYSBtaW51dGUgLyBhIG1pbnV0ZSBhZ28KICAgICAgICAgICAgcmV0dXJuIHdpdGhvdXRTdWZmaXggPyAnbWluw7p0YScgOiAoaXNGdXR1cmUgPyAnbWluw7p0dScgOiAnbWluw7p0b3UnKTsKICAgICAgICBjYXNlICdtbSc6IC8vIDkgbWludXRlcyAvIGluIDkgbWludXRlcyAvIDkgbWludXRlcyBhZ28KICAgICAgICAgICAgaWYgKHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUpIHsKICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAocGx1cmFsKG51bWJlcikgPyAnbWluw7p0eScgOiAnbWluw7p0Jyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgJ21pbsO6dGFtaSc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnaCc6ICAvLyBhbiBob3VyIC8gaW4gYW4gaG91ciAvIGFuIGhvdXIgYWdvCiAgICAgICAgICAgIHJldHVybiB3aXRob3V0U3VmZml4ID8gJ2hvZGluYScgOiAoaXNGdXR1cmUgPyAnaG9kaW51JyA6ICdob2Rpbm91Jyk7CiAgICAgICAgY2FzZSAnaGgnOiAvLyA5IGhvdXJzIC8gaW4gOSBob3VycyAvIDkgaG91cnMgYWdvCiAgICAgICAgICAgIGlmICh3aXRob3V0U3VmZml4IHx8IGlzRnV0dXJlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKHBsdXJhbChudW1iZXIpID8gJ2hvZGlueScgOiAnaG9kw61uJyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgJ2hvZGluYW1pJzsKICAgICAgICAgICAgfQogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdkJzogIC8vIGEgZGF5IC8gaW4gYSBkYXkgLyBhIGRheSBhZ28KICAgICAgICAgICAgcmV0dXJuICh3aXRob3V0U3VmZml4IHx8IGlzRnV0dXJlKSA\/ICdkZcWIJyA6ICdkxYhvbSc7CiAgICAgICAgY2FzZSAnZGQnOiAvLyA5IGRheXMgLyBpbiA5IGRheXMgLyA5IGRheXMgYWdvCiAgICAgICAgICAgIGlmICh3aXRob3V0U3VmZml4IHx8IGlzRnV0dXJlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKHBsdXJhbChudW1iZXIpID8gJ2RuaScgOiAnZG7DrScpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArICdkxYhhbWknOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ00nOiAgLy8gYSBtb250aCAvIGluIGEgbW9udGggLyBhIG1vbnRoIGFnbwogICAgICAgICAgICByZXR1cm4gKHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUpID8gJ21lc2lhYycgOiAnbWVzaWFjb20nOwogICAgICAgIGNhc2UgJ01NJzogLy8gOSBtb250aHMgLyBpbiA5IG1vbnRocyAvIDkgbW9udGhzIGFnbwogICAgICAgICAgICBpZiAod2l0aG91dFN1ZmZpeCB8fCBpc0Z1dHVyZSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArIChwbHVyYWwobnVtYmVyKSA\/ICdtZXNpYWNlJyA6ICdtZXNpYWNvdicpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArICdtZXNpYWNtaSc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAneSc6ICAvLyBhIHllYXIgLyBpbiBhIHllYXIgLyBhIHllYXIgYWdvCiAgICAgICAgICAgIHJldHVybiAod2l0aG91dFN1ZmZpeCB8fCBpc0Z1dHVyZSkgPyAncm9rJyA6ICdyb2tvbSc7CiAgICAgICAgY2FzZSAneXknOiAvLyA5IHllYXJzIC8gaW4gOSB5ZWFycyAvIDkgeWVhcnMgYWdvCiAgICAgICAgICAgIGlmICh3aXRob3V0U3VmZml4IHx8IGlzRnV0dXJlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKHBsdXJhbChudW1iZXIpID8gJ3Jva3knIDogJ3Jva292Jyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgJ3Jva21pJzsKICAgICAgICAgICAgfQogICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICB9CgogICAgcmV0dXJuIG1vbWVudC5sYW5nKCdzaycsIHsKICAgICAgICBtb250aHMgOiBtb250aHMsCiAgICAgICAgbW9udGhzU2hvcnQgOiBtb250aHNTaG9ydCwKICAgICAgICBtb250aHNQYXJzZSA6IChmdW5jdGlvbiAobW9udGhzLCBtb250aHNTaG9ydCkgewogICAgICAgICAgICB2YXIgaSwgX21vbnRoc1BhcnNlID0gW107CiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCAxMjsgaSsrKSB7CiAgICAgICAgICAgICAgICAvLyB1c2UgY3VzdG9tIHBhcnNlciB0byBzb2x2ZSBwcm9ibGVtIHdpdGggSnVseSAoxI1lcnZlbmVjKQogICAgICAgICAgICAgICAgX21vbnRoc1BhcnNlW2ldID0gbmV3IFJlZ0V4cCgnXicgKyBtb250aHNbaV0gKyAnJHxeJyArIG1vbnRoc1Nob3J0W2ldICsgJyQnLCAnaScpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBfbW9udGhzUGFyc2U7CiAgICAgICAgfShtb250aHMsIG1vbnRoc1Nob3J0KSksCiAgICAgICAgd2Vla2RheXMgOiAibmVkZcS+YV9wb25kZWxva191dG9yb2tfc3RyZWRhX8WhdHZydG9rX3BpYXRva19zb2JvdGEiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICJuZV9wb191dF9zdF\/FoXRfcGlfc28iLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNNaW4gOiAibmVfcG9fdXRfc3RfxaF0X3BpX3NvIi5zcGxpdCgiXyIpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVDogIkg6bW0iLAogICAgICAgICAgICBMIDogIkRELk1NLllZWVkiLAogICAgICAgICAgICBMTCA6ICJELiBNTU1NIFlZWVkiLAogICAgICAgICAgICBMTEwgOiAiRC4gTU1NTSBZWVlZIExUIiwKICAgICAgICAgICAgTExMTCA6ICJkZGRkIEQuIE1NTU0gWVlZWSBMVCIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5OiAiW2RuZXMgb10gTFQiLAogICAgICAgICAgICBuZXh0RGF5OiAnW3phanRyYSBvXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKHRoaXMuZGF5KCkpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1t2IG5lZGXEvnUgb10gTFQnOwogICAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW3ZdIGRkZGQgW29dIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1t2IHN0cmVkdSBvXSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbdm8gxaF0dnJ0b2sgb10gTFQnOwogICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW3YgcGlhdG9rIG9dIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1t2IHNvYm90dSBvXSBMVCc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhc3REYXk6ICdbdsSNZXJhIG9dIExUJywKICAgICAgICAgICAgbGFzdFdlZWs6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAodGhpcy5kYXkoKSkgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW21pbnVsw7ogbmVkZcS+dSBvXSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbbWludWzDvV0gZGRkZCBbb10gTFQnOwogICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW21pbnVsw7ogc3RyZWR1IG9dIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1ttaW51bMO9XSBkZGRkIFtvXSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbbWludWzDuiBzb2JvdHUgb10gTFQnOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBzYW1lRWxzZTogIkwiCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICJ6YSAlcyIsCiAgICAgICAgICAgIHBhc3QgOiAicHJlZCAlcyIsCiAgICAgICAgICAgIHMgOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIG0gOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIG1tIDogdHJhbnNsYXRlLAogICAgICAgICAgICBoIDogdHJhbnNsYXRlLAogICAgICAgICAgICBoaCA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgZCA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgZGQgOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIE0gOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIE1NIDogdHJhbnNsYXRlLAogICAgICAgICAgICB5IDogdHJhbnNsYXRlLAogICAgICAgICAgICB5eSA6IHRyYW5zbGF0ZQogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbCA6ICclZC4nLAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA0ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiA0dGggaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogc2xvdmVuaWFuIChzbCkKLy8gYXV0aG9yIDogUm9iZXJ0IFNlZG92xaFlayA6IGh0dHBzOi8vZ2l0aHViLmNvbS9zZWRvdnNlawoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIGZ1bmN0aW9uIHRyYW5zbGF0ZShudW1iZXIsIHdpdGhvdXRTdWZmaXgsIGtleSkgewogICAgICAgIHZhciByZXN1bHQgPSBudW1iZXIgKyAiICI7CiAgICAgICAgc3dpdGNoIChrZXkpIHsKICAgICAgICBjYXNlICdtJzoKICAgICAgICAgICAgcmV0dXJuIHdpdGhvdXRTdWZmaXggPyAnZW5hIG1pbnV0YScgOiAnZW5vIG1pbnV0byc7CiAgICAgICAgY2FzZSAnbW0nOgogICAgICAgICAgICBpZiAobnVtYmVyID09PSAxKSB7CiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJ21pbnV0YSc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobnVtYmVyID09PSAyKSB7CiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJ21pbnV0aSc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobnVtYmVyID09PSAzIHx8IG51bWJlciA9PT0gNCkgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICdtaW51dGUnOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICdtaW51dCc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgICBjYXNlICdoJzoKICAgICAgICAgICAgcmV0dXJuIHdpdGhvdXRTdWZmaXggPyAnZW5hIHVyYScgOiAnZW5vIHVybyc7CiAgICAgICAgY2FzZSAnaGgnOgogICAgICAgICAgICBpZiAobnVtYmVyID09PSAxKSB7CiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJ3VyYSc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobnVtYmVyID09PSAyKSB7CiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJ3VyaSc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobnVtYmVyID09PSAzIHx8IG51bWJlciA9PT0gNCkgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICd1cmUnOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICd1cic7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgICBjYXNlICdkZCc6CiAgICAgICAgICAgIGlmIChudW1iZXIgPT09IDEpIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnZGFuJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnZG5pJzsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgICAgIGNhc2UgJ01NJzoKICAgICAgICAgICAgaWYgKG51bWJlciA9PT0gMSkgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICdtZXNlYyc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobnVtYmVyID09PSAyKSB7CiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJ21lc2VjYSc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobnVtYmVyID09PSAzIHx8IG51bWJlciA9PT0gNCkgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICdtZXNlY2UnOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICdtZXNlY2V2JzsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgICAgIGNhc2UgJ3l5JzoKICAgICAgICAgICAgaWYgKG51bWJlciA9PT0gMSkgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICdsZXRvJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChudW1iZXIgPT09IDIpIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnbGV0aSc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobnVtYmVyID09PSAzIHx8IG51bWJlciA9PT0gNCkgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICdsZXRhJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnbGV0JzsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gbW9tZW50LmxhbmcoJ3NsJywgewogICAgICAgIG1vbnRocyA6ICJqYW51YXJfZmVicnVhcl9tYXJlY19hcHJpbF9tYWpfanVuaWpfanVsaWpfYXZndXN0X3NlcHRlbWJlcl9va3RvYmVyX25vdmVtYmVyX2RlY2VtYmVyIi5zcGxpdCgiXyIpLAogICAgICAgIG1vbnRoc1Nob3J0IDogImphbi5fZmViLl9tYXIuX2Fwci5fbWFqLl9qdW4uX2p1bC5fYXZnLl9zZXAuX29rdC5fbm92Ll9kZWMuIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzIDogIm5lZGVsamFfcG9uZWRlbGpla190b3Jla19zcmVkYV\/EjWV0cnRla19wZXRla19zb2JvdGEiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICJuZWQuX3Bvbi5fdG9yLl9zcmUuX8SNZXQuX3BldC5fc29iLiIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICJuZV9wb190b19zcl\/EjWVfcGVfc28iLnNwbGl0KCJfIiksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogIkg6bW0iLAogICAgICAgICAgICBMIDogIkRELiBNTS4gWVlZWSIsCiAgICAgICAgICAgIExMIDogIkQuIE1NTU0gWVlZWSIsCiAgICAgICAgICAgIExMTCA6ICJELiBNTU1NIFlZWVkgTFQiLAogICAgICAgICAgICBMTExMIDogImRkZGQsIEQuIE1NTU0gWVlZWSBMVCIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5ICA6ICdbZGFuZXMgb2JdIExUJywKICAgICAgICAgICAgbmV4dERheSAgOiAnW2p1dHJpIG9iXSBMVCcsCgogICAgICAgICAgICBuZXh0V2VlayA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAodGhpcy5kYXkoKSkgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW3ZdIFtuZWRlbGpvXSBbb2JdIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1t2XSBbc3JlZG9dIFtvYl0gTFQnOwogICAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW3ZdIFtzb2JvdG9dIFtvYl0gTFQnOwogICAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW3ZdIGRkZGQgW29iXSBMVCc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhc3REYXkgIDogJ1t2xI1lcmFqIG9iXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrIDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgc3dpdGNoICh0aGlzLmRheSgpKSB7CiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbcHJlasWhbmphXSBkZGRkIFtvYl0gTFQnOwogICAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW3ByZWrFoW5qaV0gZGRkZCBbb2JdIExUJzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogIsSNZXogJXMiLAogICAgICAgICAgICBwYXN0ICAgOiAiJXMgbmF6YWoiLAogICAgICAgICAgICBzICAgICAgOiAibmVrYWogc2VrdW5kIiwKICAgICAgICAgICAgbSAgICAgIDogdHJhbnNsYXRlLAogICAgICAgICAgICBtbSAgICAgOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIGggICAgICA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgaGggICAgIDogdHJhbnNsYXRlLAogICAgICAgICAgICBkICAgICAgOiAiZW4gZGFuIiwKICAgICAgICAgICAgZGQgICAgIDogdHJhbnNsYXRlLAogICAgICAgICAgICBNICAgICAgOiAiZW4gbWVzZWMiLAogICAgICAgICAgICBNTSAgICAgOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIHkgICAgICA6ICJlbm8gbGV0byIsCiAgICAgICAgICAgIHl5ICAgICA6IHRyYW5zbGF0ZQogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbCA6ICclZC4nLAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA3ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiAxc3QgaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogQWxiYW5pYW4gKHNxKQovLyBhdXRob3IgOiBGbGFrw6tyaW0gSXNtYW5pIDogaHR0cHM6Ly9naXRodWIuY29tL2ZsYWtlcmltaQovLyBhdXRob3I6IE1lbmVsaW9uIEVsZW5zw7psZTogaHR0cHM6Ly9naXRodWIuY29tL09pcmUgKHRlc3RzKQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQubGFuZygnc3EnLCB7CiAgICAgICAgbW9udGhzIDogIkphbmFyX1Noa3VydF9NYXJzX1ByaWxsX01hal9RZXJzaG9yX0tvcnJpa19HdXNodF9TaHRhdG9yX1RldG9yX07Dq250b3JfRGhqZXRvciIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydCA6ICJKYW5fU2hrX01hcl9QcmlfTWFqX1Flcl9Lb3JfR3VzX1NodF9UZXRfTsOrbl9EaGoiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAiRSBEaWVsX0UgSMOrbsOrX0UgTWFydGVfRSBNw6tya3VyZV9FIEVuanRlX0UgUHJlbXRlX0UgU2h0dW7DqyIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogIkRpZV9Iw6tuX01hcl9Nw6tyX0Vual9QcmVfU2h0Ii5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogIkRfSF9NYV9Nw6tfRV9QX1NoIi5zcGxpdCgiXyIpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICJISDptbSIsCiAgICAgICAgICAgIEwgOiAiREQvTU0vWVlZWSIsCiAgICAgICAgICAgIExMIDogIkQgTU1NTSBZWVlZIiwKICAgICAgICAgICAgTExMIDogIkQgTU1NTSBZWVlZIExUIiwKICAgICAgICAgICAgTExMTCA6ICJkZGRkLCBEIE1NTU0gWVlZWSBMVCIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1tTb3QgbsOrXSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW05lc2VyIG7Dq10gTFQnLAogICAgICAgICAgICBuZXh0V2VlayA6ICdkZGRkIFtuw6tdIExUJywKICAgICAgICAgICAgbGFzdERheSA6ICdbRGplIG7Dq10gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdkZGRkIFtlIGthbHVhciBuw6tdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogIm7DqyAlcyIsCiAgICAgICAgICAgIHBhc3QgOiAiJXMgbWUgcGFyw6siLAogICAgICAgICAgICBzIDogImRpc2Egc2Vjb25kYSIsCiAgICAgICAgICAgIG0gOiAibmrDqyBtaW51dCIsCiAgICAgICAgICAgIG1tIDogIiVkIG1pbnV0ZWEiLAogICAgICAgICAgICBoIDogIm5qw6sgb3LDqyIsCiAgICAgICAgICAgIGhoIDogIiVkIG9yw6siLAogICAgICAgICAgICBkIDogIm5qw6sgZGl0w6siLAogICAgICAgICAgICBkZCA6ICIlZCBkaXTDqyIsCiAgICAgICAgICAgIE0gOiAibmrDqyBtdWFqIiwKICAgICAgICAgICAgTU0gOiAiJWQgbXVhaiIsCiAgICAgICAgICAgIHkgOiAibmrDqyB2aXQiLAogICAgICAgICAgICB5eSA6ICIlZCB2aXRlIgogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbCA6ICclZC4nLAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA0ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiA0dGggaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogc3dlZGlzaCAoc3YpCi8vIGF1dGhvciA6IEplbnMgQWxtIDogaHR0cHM6Ly9naXRodWIuY29tL3VsbXVzCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5sYW5nKCdzdicsIHsKICAgICAgICBtb250aHMgOiAiamFudWFyaV9mZWJydWFyaV9tYXJzX2FwcmlsX21hal9qdW5pX2p1bGlfYXVndXN0aV9zZXB0ZW1iZXJfb2t0b2Jlcl9ub3ZlbWJlcl9kZWNlbWJlciIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydCA6ICJqYW5fZmViX21hcl9hcHJfbWFqX2p1bl9qdWxfYXVnX3NlcF9va3Rfbm92X2RlYyIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5cyA6ICJzw7ZuZGFnX23DpW5kYWdfdGlzZGFnX29uc2RhZ190b3JzZGFnX2ZyZWRhZ19sw7ZyZGFnIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAic8O2bl9tw6VuX3Rpc19vbnNfdG9yX2ZyZV9sw7ZyIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogInPDtl9tw6VfdGlfb25fdG9fZnJfbMO2Ii5zcGxpdCgiXyIpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICJISDptbSIsCiAgICAgICAgICAgIEwgOiAiWVlZWS1NTS1ERCIsCiAgICAgICAgICAgIExMIDogIkQgTU1NTSBZWVlZIiwKICAgICAgICAgICAgTExMIDogIkQgTU1NTSBZWVlZIExUIiwKICAgICAgICAgICAgTExMTCA6ICJkZGRkIEQgTU1NTSBZWVlZIExUIgogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICdbSWRhZ10gTFQnLAogICAgICAgICAgICBuZXh0RGF5OiAnW0ltb3Jnb25dIExUJywKICAgICAgICAgICAgbGFzdERheTogJ1tJZ8Olcl0gTFQnLAogICAgICAgICAgICBuZXh0V2VlazogJ2RkZGQgTFQnLAogICAgICAgICAgICBsYXN0V2VlazogJ1tGw7ZycmFdIGRkZGRbZW5dIExUJywKICAgICAgICAgICAgc2FtZUVsc2U6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAib20gJXMiLAogICAgICAgICAgICBwYXN0IDogImbDtnIgJXMgc2VkYW4iLAogICAgICAgICAgICBzIDogIm7DpWdyYSBzZWt1bmRlciIsCiAgICAgICAgICAgIG0gOiAiZW4gbWludXQiLAogICAgICAgICAgICBtbSA6ICIlZCBtaW51dGVyIiwKICAgICAgICAgICAgaCA6ICJlbiB0aW1tZSIsCiAgICAgICAgICAgIGhoIDogIiVkIHRpbW1hciIsCiAgICAgICAgICAgIGQgOiAiZW4gZGFnIiwKICAgICAgICAgICAgZGQgOiAiJWQgZGFnYXIiLAogICAgICAgICAgICBNIDogImVuIG3DpW5hZCIsCiAgICAgICAgICAgIE1NIDogIiVkIG3DpW5hZGVyIiwKICAgICAgICAgICAgeSA6ICJldHQgw6VyIiwKICAgICAgICAgICAgeXkgOiAiJWQgw6VyIgogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgdmFyIGIgPSBudW1iZXIgJSAxMCwKICAgICAgICAgICAgICAgIG91dHB1dCA9ICh+fiAobnVtYmVyICUgMTAwIC8gMTApID09PSAxKSA\/ICdlJyA6CiAgICAgICAgICAgICAgICAoYiA9PT0gMSkgPyAnYScgOgogICAgICAgICAgICAgICAgKGIgPT09IDIpID8gJ2EnIDoKICAgICAgICAgICAgICAgIChiID09PSAzKSA\/ICdlJyA6ICdlJzsKICAgICAgICAgICAgcmV0dXJuIG51bWJlciArIG91dHB1dDsKICAgICAgICB9LAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA0ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiA0dGggaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogdGhhaSAodGgpCi8vIGF1dGhvciA6IEtyaWRzYWRhIFRoYW5hYnVscG9uZyA6IGh0dHBzOi8vZ2l0aHViLmNvbS9zaXJuCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5sYW5nKCd0aCcsIHsKICAgICAgICBtb250aHMgOiAi4Lih4LiB4Lij4Liy4LiE4LihX+C4geC4uOC4oeC4oOC4suC4nuC4seC4meC4mOC5jF\/guKHguLXguJnguLLguITguKFf4LmA4Lih4Lip4Liy4Lii4LiZX+C4nuC4pOC4qeC4oOC4suC4hOC4oV\/guKHguLTguJbguLjguJnguLLguKLguJlf4LiB4Lij4LiB4LiO4Liy4LiE4LihX+C4quC4tOC4h+C4q+C4suC4hOC4oV\/guIHguLHguJnguKLguLLguKLguJlf4LiV4Li44Lil4Liy4LiE4LihX+C4nuC4pOC4qOC4iOC4tOC4geC4suC4ouC4mV\/guJjguLHguJnguKfguLLguITguKEiLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAi4Lih4LiB4Lij4LiyX+C4geC4uOC4oeC4oOC4sl\/guKHguLXguJnguLJf4LmA4Lih4Lip4LiyX+C4nuC4pOC4qeC4oOC4sl\/guKHguLTguJbguLjguJnguLJf4LiB4Lij4LiB4LiO4LiyX+C4quC4tOC4h+C4q+C4sl\/guIHguLHguJnguKLguLJf4LiV4Li44Lil4LiyX+C4nuC4pOC4qOC4iOC4tOC4geC4sl\/guJjguLHguJnguKfguLIiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAi4Lit4Liy4LiX4Li04LiV4Lii4LmMX+C4iOC4seC4meC4l+C4o+C5jF\/guK3guLHguIfguITguLLguKNf4Lie4Li44LiYX+C4nuC4pOC4q+C4seC4quC4muC4lOC4tV\/guKjguLjguIHguKPguYxf4LmA4Liq4Liy4Lij4LmMIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAi4Lit4Liy4LiX4Li04LiV4Lii4LmMX+C4iOC4seC4meC4l+C4o+C5jF\/guK3guLHguIfguITguLLguKNf4Lie4Li44LiYX+C4nuC4pOC4q+C4seC4ql\/guKjguLjguIHguKPguYxf4LmA4Liq4Liy4Lij4LmMIi5zcGxpdCgiXyIpLCAvLyB5ZXMsIHRocmVlIGNoYXJhY3RlcnMgZGlmZmVyZW5jZQogICAgICAgIHdlZWtkYXlzTWluIDogIuC4reC4si5f4LiILl\/guK0uX+C4ni5f4Lie4LikLl\/guKguX+C4qi4iLnNwbGl0KCJfIiksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogIkgg4LiZ4Liy4Lis4Li04LiB4LiyIG0g4LiZ4Liy4LiX4Li1IiwKICAgICAgICAgICAgTCA6ICJZWVlZL01NL0REIiwKICAgICAgICAgICAgTEwgOiAiRCBNTU1NIFlZWVkiLAogICAgICAgICAgICBMTEwgOiAiRCBNTU1NIFlZWVkg4LmA4Lin4Lil4LiyIExUIiwKICAgICAgICAgICAgTExMTCA6ICLguKfguLHguJlkZGRk4LiX4Li14LmIIEQgTU1NTSBZWVlZIOC5gOC4p+C4peC4siBMVCIKICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtIDogZnVuY3Rpb24gKGhvdXIsIG1pbnV0ZSwgaXNMb3dlcikgewogICAgICAgICAgICBpZiAoaG91ciA8IDEyKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIuC4geC5iOC4reC4meC5gOC4l+C4teC5iOC4ouC4hyI7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIuC4q+C4peC4seC4h+C5gOC4l+C4teC5iOC4ouC4hyI7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1vguKfguLHguJnguJnguLXguYkg4LmA4Lin4Lil4LiyXSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW+C4nuC4o+C4uOC5iOC4h+C4meC4teC5iSDguYDguKfguKXguLJdIExUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnZGRkZFvguKvguJnguYnguLIg4LmA4Lin4Lil4LiyXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW+C5gOC4oeC4t+C5iOC4reC4p+C4suC4meC4meC4teC5iSDguYDguKfguKXguLJdIExUJywKICAgICAgICAgICAgbGFzdFdlZWsgOiAnW+C4p+C4seC4mV1kZGRkW+C4l+C4teC5iOC5geC4peC5ieC4pyDguYDguKfguKXguLJdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogIuC4reC4teC4gSAlcyIsCiAgICAgICAgICAgIHBhc3QgOiAiJXPguJfguLXguYjguYHguKXguYnguKciLAogICAgICAgICAgICBzIDogIuC5hOC4oeC5iOC4geC4teC5iOC4p+C4tOC4meC4suC4l+C4tSIsCiAgICAgICAgICAgIG0gOiAiMSDguJnguLLguJfguLUiLAogICAgICAgICAgICBtbSA6ICIlZCDguJnguLLguJfguLUiLAogICAgICAgICAgICBoIDogIjEg4LiK4Lix4LmI4Lin4LmC4Lih4LiHIiwKICAgICAgICAgICAgaGggOiAiJWQg4LiK4Lix4LmI4Lin4LmC4Lih4LiHIiwKICAgICAgICAgICAgZCA6ICIxIOC4p+C4seC4mSIsCiAgICAgICAgICAgIGRkIDogIiVkIOC4p+C4seC4mSIsCiAgICAgICAgICAgIE0gOiAiMSDguYDguJTguLfguK3guJkiLAogICAgICAgICAgICBNTSA6ICIlZCDguYDguJTguLfguK3guJkiLAogICAgICAgICAgICB5IDogIjEg4Lib4Li1IiwKICAgICAgICAgICAgeXkgOiAiJWQg4Lib4Li1IgogICAgICAgIH0KICAgIH0pOwp9KSk7CgovLyBtb21lbnQuanMgbGFuZ3VhZ2UgY29uZmlndXJhdGlvbgovLyBsYW5ndWFnZSA6IFRhZ2Fsb2cvRmlsaXBpbm8gKHRsLXBoKQovLyBhdXRob3IgOiBEYW4gSGFnbWFuCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5sYW5nKCd0bC1waCcsIHsKICAgICAgICBtb250aHMgOiAiRW5lcm9fUGVicmVyb19NYXJzb19BYnJpbF9NYXlvX0h1bnlvX0h1bHlvX0Fnb3N0b19TZXR5ZW1icmVfT2t0dWJyZV9Ob2J5ZW1icmVfRGlzeWVtYnJlIi5zcGxpdCgiXyIpLAogICAgICAgIG1vbnRoc1Nob3J0IDogIkVuZV9QZWJfTWFyX0Ficl9NYXlfSHVuX0h1bF9BZ29fU2V0X09rdF9Ob2JfRGlzIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzIDogIkxpbmdnb19MdW5lc19NYXJ0ZXNfTWl5ZXJrdWxlc19IdXdlYmVzX0JpeWVybmVzX1NhYmFkbyIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogIkxpbl9MdW5fTWFyX01peV9IdXdfQml5X1NhYiIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICJMaV9MdV9NYV9NaV9IdV9CaV9TYWIiLnNwbGl0KCJfIiksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogIkhIOm1tIiwKICAgICAgICAgICAgTCA6ICJNTS9EL1lZWVkiLAogICAgICAgICAgICBMTCA6ICJNTU1NIEQsIFlZWVkiLAogICAgICAgICAgICBMTEwgOiAiTU1NTSBELCBZWVlZIExUIiwKICAgICAgICAgICAgTExMTCA6ICJkZGRkLCBNTU1NIERELCBZWVlZIExUIgogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICJbTmdheW9uIHNhXSBMVCIsCiAgICAgICAgICAgIG5leHREYXk6ICdbQnVrYXMgc2FdIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6ICdkZGRkIFtzYV0gTFQnLAogICAgICAgICAgICBsYXN0RGF5OiAnW0thaGFwb24gc2FdIExUJywKICAgICAgICAgICAgbGFzdFdlZWs6ICdkZGRkIFtodWxpbmcgbGluZ2dvXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogInNhIGxvb2IgbmcgJXMiLAogICAgICAgICAgICBwYXN0IDogIiVzIGFuZyBuYWthbGlwYXMiLAogICAgICAgICAgICBzIDogImlsYW5nIHNlZ3VuZG8iLAogICAgICAgICAgICBtIDogImlzYW5nIG1pbnV0byIsCiAgICAgICAgICAgIG1tIDogIiVkIG1pbnV0byIsCiAgICAgICAgICAgIGggOiAiaXNhbmcgb3JhcyIsCiAgICAgICAgICAgIGhoIDogIiVkIG9yYXMiLAogICAgICAgICAgICBkIDogImlzYW5nIGFyYXciLAogICAgICAgICAgICBkZCA6ICIlZCBhcmF3IiwKICAgICAgICAgICAgTSA6ICJpc2FuZyBidXdhbiIsCiAgICAgICAgICAgIE1NIDogIiVkIGJ1d2FuIiwKICAgICAgICAgICAgeSA6ICJpc2FuZyB0YW9uIiwKICAgICAgICAgICAgeXkgOiAiJWQgdGFvbiIKICAgICAgICB9LAogICAgICAgIG9yZGluYWwgOiBmdW5jdGlvbiAobnVtYmVyKSB7CiAgICAgICAgICAgIHJldHVybiBudW1iZXI7CiAgICAgICAgfSwKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNCAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gNHRoIGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7CgovLyBtb21lbnQuanMgbGFuZ3VhZ2UgY29uZmlndXJhdGlvbgovLyBsYW5ndWFnZSA6IHR1cmtpc2ggKHRyKQovLyBhdXRob3JzIDogRXJoYW4gR3VuZG9nYW4gOiBodHRwczovL2dpdGh1Yi5jb20vZXJoYW5ndW5kb2dhbiwKLy8gICAgICAgICAgIEJ1cmFrIFlpxJ9pdCBLYXlhOiBodHRwczovL2dpdGh1Yi5jb20vQllLCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewoKICAgIHZhciBzdWZmaXhlcyA9IHsKICAgICAgICAxOiAiJ2luY2kiLAogICAgICAgIDU6ICInaW5jaSIsCiAgICAgICAgODogIidpbmNpIiwKICAgICAgICA3MDogIidpbmNpIiwKICAgICAgICA4MDogIidpbmNpIiwKCiAgICAgICAgMjogIiduY2kiLAogICAgICAgIDc6ICInbmNpIiwKICAgICAgICAyMDogIiduY2kiLAogICAgICAgIDUwOiAiJ25jaSIsCgogICAgICAgIDM6ICInw7xuY8O8IiwKICAgICAgICA0OiAiJ8O8bmPDvCIsCiAgICAgICAgMTAwOiAiJ8O8bmPDvCIsCgogICAgICAgIDY6ICInbmPEsSIsCgogICAgICAgIDk6ICIndW5jdSIsCiAgICAgICAgMTA6ICIndW5jdSIsCiAgICAgICAgMzA6ICIndW5jdSIsCgogICAgICAgIDYwOiAiJ8SxbmPEsSIsCiAgICAgICAgOTA6ICInxLFuY8SxIgogICAgfTsKCiAgICByZXR1cm4gbW9tZW50LmxhbmcoJ3RyJywgewogICAgICAgIG1vbnRocyA6ICJPY2FrX8WedWJhdF9NYXJ0X05pc2FuX01hecSxc19IYXppcmFuX1RlbW11el9BxJ91c3Rvc19FeWzDvGxfRWtpbV9LYXPEsW1fQXJhbMSxayIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydCA6ICJPY2FfxZ51Yl9NYXJfTmlzX01heV9IYXpfVGVtX0HEn3VfRXlsX0VraV9LYXNfQXJhIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzIDogIlBhemFyX1BhemFydGVzaV9TYWzEsV\/Dh2FyxZ9hbWJhX1BlcsWfZW1iZV9DdW1hX0N1bWFydGVzaSIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogIlBhel9QdHNfU2FsX8OHYXJfUGVyX0N1bV9DdHMiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNNaW4gOiAiUHpfUHRfU2Ffw4dhX1BlX0N1X0N0Ii5zcGxpdCgiXyIpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICJISDptbSIsCiAgICAgICAgICAgIEwgOiAiREQuTU0uWVlZWSIsCiAgICAgICAgICAgIExMIDogIkQgTU1NTSBZWVlZIiwKICAgICAgICAgICAgTExMIDogIkQgTU1NTSBZWVlZIExUIiwKICAgICAgICAgICAgTExMTCA6ICJkZGRkLCBEIE1NTU0gWVlZWSBMVCIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1tidWfDvG4gc2FhdF0gTFQnLAogICAgICAgICAgICBuZXh0RGF5IDogJ1t5YXLEsW4gc2FhdF0gTFQnLAogICAgICAgICAgICBuZXh0V2VlayA6ICdbaGFmdGF5YV0gZGRkZCBbc2FhdF0gTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1tkw7xuXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrIDogJ1tnZcOnZW4gaGFmdGFdIGRkZGQgW3NhYXRdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogIiVzIHNvbnJhIiwKICAgICAgICAgICAgcGFzdCA6ICIlcyDDtm5jZSIsCiAgICAgICAgICAgIHMgOiAiYmlya2HDpyBzYW5peWUiLAogICAgICAgICAgICBtIDogImJpciBkYWtpa2EiLAogICAgICAgICAgICBtbSA6ICIlZCBkYWtpa2EiLAogICAgICAgICAgICBoIDogImJpciBzYWF0IiwKICAgICAgICAgICAgaGggOiAiJWQgc2FhdCIsCiAgICAgICAgICAgIGQgOiAiYmlyIGfDvG4iLAogICAgICAgICAgICBkZCA6ICIlZCBnw7xuIiwKICAgICAgICAgICAgTSA6ICJiaXIgYXkiLAogICAgICAgICAgICBNTSA6ICIlZCBheSIsCiAgICAgICAgICAgIHkgOiAiYmlyIHnEsWwiLAogICAgICAgICAgICB5eSA6ICIlZCB5xLFsIgogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgaWYgKG51bWJlciA9PT0gMCkgeyAgLy8gc3BlY2lhbCBjYXNlIGZvciB6ZXJvCiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgIifEsW5jxLEiOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHZhciBhID0gbnVtYmVyICUgMTAsCiAgICAgICAgICAgICAgICBiID0gbnVtYmVyICUgMTAwIC0gYSwKICAgICAgICAgICAgICAgIGMgPSBudW1iZXIgPj0gMTAwID8gMTAwIDogbnVsbDsKCiAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAoc3VmZml4ZXNbYV0gfHwgc3VmZml4ZXNbYl0gfHwgc3VmZml4ZXNbY10pOwogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDcgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDFzdCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiBNb3JvY2NvIENlbnRyYWwgQXRsYXMgVGFtYXppyaN0IGluIExhdGluICh0em0tbGEpCi8vIGF1dGhvciA6IEFiZGVsIFNhaWQgOiBodHRwczovL2dpdGh1Yi5jb20vYWJkZWxzYWlkCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5sYW5nKCd0em0tbGEnLCB7CiAgICAgICAgbW9udGhzIDogImlubmF5cl9icsukYXlyy6RfbWFyy6Rzy6RfaWJyaXJfbWF5eXdfeXdueXdfeXdseXd6X8mjd8WhdF\/FoXd0YW5iaXJfa3TLpHdicsukX253d2FuYmlyX2R3am5iaXIiLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAiaW5uYXlyX2Jyy6RheXLLpF9tYXLLpHPLpF9pYnJpcl9tYXl5d195d255d195d2x5d3pfyaN3xaF0X8Whd3RhbmJpcl9rdMukd2Jyy6Rfbnd3YW5iaXJfZHdqbmJpciIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5cyA6ICJhc2FtYXNfYXluYXNfYXNpbmFzX2FrcmFzX2Frd2FzX2FzaW13YXNfYXNp4biNeWFzIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAiYXNhbWFzX2F5bmFzX2FzaW5hc19ha3Jhc19ha3dhc19hc2ltd2FzX2FzaeG4jXlhcyIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICJhc2FtYXNfYXluYXNfYXNpbmFzX2FrcmFzX2Frd2FzX2FzaW13YXNfYXNp4biNeWFzIi5zcGxpdCgiXyIpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICJISDptbSIsCiAgICAgICAgICAgIEwgOiAiREQvTU0vWVlZWSIsCiAgICAgICAgICAgIExMIDogIkQgTU1NTSBZWVlZIiwKICAgICAgICAgICAgTExMIDogIkQgTU1NTSBZWVlZIExUIiwKICAgICAgICAgICAgTExMTCA6ICJkZGRkIEQgTU1NTSBZWVlZIExUIgogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICJbYXNka2ggZ10gTFQiLAogICAgICAgICAgICBuZXh0RGF5OiAnW2Fza2EgZ10gTFQnLAogICAgICAgICAgICBuZXh0V2VlazogJ2RkZGQgW2ddIExUJywKICAgICAgICAgICAgbGFzdERheTogJ1thc3NhbnQgZ10gTFQnLAogICAgICAgICAgICBsYXN0V2VlazogJ2RkZGQgW2ddIExUJywKICAgICAgICAgICAgc2FtZUVsc2U6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAiZGFka2ggcyB5YW4gJXMiLAogICAgICAgICAgICBwYXN0IDogInlhbiAlcyIsCiAgICAgICAgICAgIHMgOiAiaW1payIsCiAgICAgICAgICAgIG0gOiAibWludeG4jSIsCiAgICAgICAgICAgIG1tIDogIiVkIG1pbnXhuI0iLAogICAgICAgICAgICBoIDogInNhyZthIiwKICAgICAgICAgICAgaGggOiAiJWQgdGFzc2HJm2luIiwKICAgICAgICAgICAgZCA6ICJhc3MiLAogICAgICAgICAgICBkZCA6ICIlZCBvc3NhbiIsCiAgICAgICAgICAgIE0gOiAiYXlvd3IiLAogICAgICAgICAgICBNTSA6ICIlZCBpeXlpcm4iLAogICAgICAgICAgICB5IDogImFzZ2FzIiwKICAgICAgICAgICAgeXkgOiAiJWQgaXNnYXNuIgogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogNiwgLy8gU2F0dXJkYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogMTIgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDFzdCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiBNb3JvY2NvIENlbnRyYWwgQXRsYXMgVGFtYXppyaN0ICh0em0pCi8vIGF1dGhvciA6IEFiZGVsIFNhaWQgOiBodHRwczovL2dpdGh1Yi5jb20vYWJkZWxzYWlkCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5sYW5nKCd0em0nLCB7CiAgICAgICAgbW9udGhzIDogIuK1ieK1j+K1j+K0sOK1ouK1lF\/itLHitZXitLDitaLitZVf4rWO4rSw4rWV4rWaX+K1ieK0seK1lOK1ieK1lF\/itY7itLDitaLitaLitZNf4rWi4rWT4rWP4rWi4rWTX+K1ouK1k+K1jeK1ouK1k+K1o1\/itZbitZPitZvitZxf4rWb4rWT4rWc4rSw4rWP4rSx4rWJ4rWUX+K0veK1n+K1k+K0seK1lV\/itY\/itZPitaHitLDitY\/itLHitYnitZRf4rS34rWT4rWK4rWP4rSx4rWJ4rWUIi5zcGxpdCgiXyIpLAogICAgICAgIG1vbnRoc1Nob3J0IDogIuK1ieK1j+K1j+K0sOK1ouK1lF\/itLHitZXitLDitaLitZVf4rWO4rSw4rWV4rWaX+K1ieK0seK1lOK1ieK1lF\/itY7itLDitaLitaLitZNf4rWi4rWT4rWP4rWi4rWTX+K1ouK1k+K1jeK1ouK1k+K1o1\/itZbitZPitZvitZxf4rWb4rWT4rWc4rSw4rWP4rSx4rWJ4rWUX+K0veK1n+K1k+K0seK1lV\/itY\/itZPitaHitLDitY\/itLHitYnitZRf4rS34rWT4rWK4rWP4rSx4rWJ4rWUIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzIDogIuK0sOK1meK0sOK1juK0sOK1mV\/itLDitaLitY\/itLDitZlf4rSw4rWZ4rWJ4rWP4rSw4rWZX+K0sOK0veK1lOK0sOK1mV\/itLDitL3itaHitLDitZlf4rSw4rWZ4rWJ4rWO4rWh4rSw4rWZX+K0sOK1meK1ieK0ueK1ouK0sOK1mSIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogIuK0sOK1meK0sOK1juK0sOK1mV\/itLDitaLitY\/itLDitZlf4rSw4rWZ4rWJ4rWP4rSw4rWZX+K0sOK0veK1lOK0sOK1mV\/itLDitL3itaHitLDitZlf4rSw4rWZ4rWJ4rWO4rWh4rSw4rWZX+K0sOK1meK1ieK0ueK1ouK0sOK1mSIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICLitLDitZnitLDitY7itLDitZlf4rSw4rWi4rWP4rSw4rWZX+K0sOK1meK1ieK1j+K0sOK1mV\/itLDitL3itZTitLDitZlf4rSw4rS94rWh4rSw4rWZX+K0sOK1meK1ieK1juK1oeK0sOK1mV\/itLDitZnitYnitLnitaLitLDitZkiLnNwbGl0KCJfIiksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogIkhIOm1tIiwKICAgICAgICAgICAgTCA6ICJERC9NTS9ZWVlZIiwKICAgICAgICAgICAgTEwgOiAiRCBNTU1NIFlZWVkiLAogICAgICAgICAgICBMTEwgOiAiRCBNTU1NIFlZWVkgTFQiLAogICAgICAgICAgICBMTExMIDogImRkZGQgRCBNTU1NIFlZWVkgTFQiCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheTogIlvitLDitZnitLfitYUg4rS0XSBMVCIsCiAgICAgICAgICAgIG5leHREYXk6ICdb4rSw4rWZ4rS94rSwIOK0tF0gTFQnLAogICAgICAgICAgICBuZXh0V2VlazogJ2RkZGQgW+K0tF0gTFQnLAogICAgICAgICAgICBsYXN0RGF5OiAnW+K0sOK1muK0sOK1j+K1nCDitLRdIExUJywKICAgICAgICAgICAgbGFzdFdlZWs6ICdkZGRkIFvitLRdIExUJywKICAgICAgICAgICAgc2FtZUVsc2U6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAi4rS34rSw4rS34rWFIOK1mSDitaLitLDitY8gJXMiLAogICAgICAgICAgICBwYXN0IDogIuK1ouK0sOK1jyAlcyIsCiAgICAgICAgICAgIHMgOiAi4rWJ4rWO4rWJ4rS9IiwKICAgICAgICAgICAgbSA6ICLitY7itYnitY\/itZPitLoiLAogICAgICAgICAgICBtbSA6ICIlZCDitY7itYnitY\/itZPitLoiLAogICAgICAgICAgICBoIDogIuK1meK0sOK1hOK0sCIsCiAgICAgICAgICAgIGhoIDogIiVkIOK1nOK0sOK1meK1meK0sOK1hOK1ieK1jyIsCiAgICAgICAgICAgIGQgOiAi4rSw4rWZ4rWZIiwKICAgICAgICAgICAgZGQgOiAiJWQgb+K1meK1meK0sOK1jyIsCiAgICAgICAgICAgIE0gOiAi4rSw4rWib+K1k+K1lCIsCiAgICAgICAgICAgIE1NIDogIiVkIOK1ieK1ouK1ouK1ieK1lOK1jyIsCiAgICAgICAgICAgIHkgOiAi4rSw4rWZ4rSz4rSw4rWZIiwKICAgICAgICAgICAgeXkgOiAiJWQg4rWJ4rWZ4rSz4rSw4rWZ4rWPIgogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogNiwgLy8gU2F0dXJkYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogMTIgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDFzdCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiB1a3JhaW5pYW4gKHVrKQovLyBhdXRob3IgOiB6ZW1sYW5pbiA6IGh0dHBzOi8vZ2l0aHViLmNvbS96ZW1sYW5pbgovLyBBdXRob3IgOiBNZW5lbGlvbiBFbGVuc8O6bGUgOiBodHRwczovL2dpdGh1Yi5jb20vT2lyZQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIGZ1bmN0aW9uIHBsdXJhbCh3b3JkLCBudW0pIHsKICAgICAgICB2YXIgZm9ybXMgPSB3b3JkLnNwbGl0KCdfJyk7CiAgICAgICAgcmV0dXJuIG51bSAlIDEwID09PSAxICYmIG51bSAlIDEwMCAhPT0gMTEgPyBmb3Jtc1swXSA6IChudW0gJSAxMCA+PSAyICYmIG51bSAlIDEwIDw9IDQgJiYgKG51bSAlIDEwMCA8IDEwIHx8IG51bSAlIDEwMCA+PSAyMCkgPyBmb3Jtc1sxXSA6IGZvcm1zWzJdKTsKICAgIH0KCiAgICBmdW5jdGlvbiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsKG51bWJlciwgd2l0aG91dFN1ZmZpeCwga2V5KSB7CiAgICAgICAgdmFyIGZvcm1hdCA9IHsKICAgICAgICAgICAgJ21tJzogJ9GF0LLQuNC70LjQvdCwX9GF0LLQuNC70LjQvdC4X9GF0LLQuNC70LjQvScsCiAgICAgICAgICAgICdoaCc6ICfQs9C+0LTQuNC90LBf0LPQvtC00LjQvdC4X9Cz0L7QtNC40L0nLAogICAgICAgICAgICAnZGQnOiAn0LTQtdC90Yxf0LTQvdGWX9C00L3RltCyJywKICAgICAgICAgICAgJ01NJzogJ9C80ZbRgdGP0YbRjF\/QvNGW0YHRj9GG0ZZf0LzRltGB0Y\/RhtGW0LInLAogICAgICAgICAgICAneXknOiAn0YDRltC6X9GA0L7QutC4X9GA0L7QutGW0LInCiAgICAgICAgfTsKICAgICAgICBpZiAoa2V5ID09PSAnbScpIHsKICAgICAgICAgICAgcmV0dXJuIHdpdGhvdXRTdWZmaXggPyAn0YXQstC40LvQuNC90LAnIDogJ9GF0LLQuNC70LjQvdGDJzsKICAgICAgICB9CiAgICAgICAgZWxzZSBpZiAoa2V5ID09PSAnaCcpIHsKICAgICAgICAgICAgcmV0dXJuIHdpdGhvdXRTdWZmaXggPyAn0LPQvtC00LjQvdCwJyA6ICfQs9C+0LTQuNC90YMnOwogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICcgJyArIHBsdXJhbChmb3JtYXRba2V5XSwgK251bWJlcik7CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIG1vbnRoc0Nhc2VSZXBsYWNlKG0sIGZvcm1hdCkgewogICAgICAgIHZhciBtb250aHMgPSB7CiAgICAgICAgICAgICdub21pbmF0aXZlJzogJ9GB0ZbRh9C10L3RjF\/Qu9GO0YLQuNC5X9Cx0LXRgNC10LfQtdC90Yxf0LrQstGW0YLQtdC90Yxf0YLRgNCw0LLQtdC90Yxf0YfQtdGA0LLQtdC90Yxf0LvQuNC\/0LXQvdGMX9GB0LXRgNC\/0LXQvdGMX9Cy0LXRgNC10YHQtdC90Yxf0LbQvtCy0YLQtdC90Yxf0LvQuNGB0YLQvtC\/0LDQtF\/Qs9GA0YPQtNC10L3RjCcuc3BsaXQoJ18nKSwKICAgICAgICAgICAgJ2FjY3VzYXRpdmUnOiAn0YHRltGH0L3Rj1\/Qu9GO0YLQvtCz0L5f0LHQtdGA0LXQt9C90Y9f0LrQstGW0YLQvdGPX9GC0YDQsNCy0L3Rj1\/Rh9C10YDQstC90Y9f0LvQuNC\/0L3Rj1\/RgdC10YDQv9C90Y9f0LLQtdGA0LXRgdC90Y9f0LbQvtCy0YLQvdGPX9C70LjRgdGC0L7Qv9Cw0LTQsF\/Qs9GA0YPQtNC90Y8nLnNwbGl0KCdfJykKICAgICAgICB9LAoKICAgICAgICBub3VuQ2FzZSA9ICgvRFtvRF0\/ICpNTU1NPy8pLnRlc3QoZm9ybWF0KSA\/CiAgICAgICAgICAgICdhY2N1c2F0aXZlJyA6CiAgICAgICAgICAgICdub21pbmF0aXZlJzsKCiAgICAgICAgcmV0dXJuIG1vbnRoc1tub3VuQ2FzZV1bbS5tb250aCgpXTsKICAgIH0KCiAgICBmdW5jdGlvbiB3ZWVrZGF5c0Nhc2VSZXBsYWNlKG0sIGZvcm1hdCkgewogICAgICAgIHZhciB3ZWVrZGF5cyA9IHsKICAgICAgICAgICAgJ25vbWluYXRpdmUnOiAn0L3QtdC00ZbQu9GPX9C\/0L7QvdC10LTRltC70L7Qul\/QstGW0LLRgtC+0YDQvtC6X9GB0LXRgNC10LTQsF\/Rh9C10YLQstC10YBf0L\/igJnRj9GC0L3QuNGG0Y9f0YHRg9Cx0L7RgtCwJy5zcGxpdCgnXycpLAogICAgICAgICAgICAnYWNjdXNhdGl2ZSc6ICfQvdC10LTRltC70Y5f0L\/QvtC90LXQtNGW0LvQvtC6X9Cy0ZbQstGC0L7RgNC+0Lpf0YHQtdGA0LXQtNGDX9GH0LXRgtCy0LXRgF\/Qv+KAmdGP0YLQvdC40YbRjl\/RgdGD0LHQvtGC0YMnLnNwbGl0KCdfJyksCiAgICAgICAgICAgICdnZW5pdGl2ZSc6ICfQvdC10LTRltC70ZZf0L\/QvtC90LXQtNGW0LvQutCwX9Cy0ZbQstGC0L7RgNC60LBf0YHQtdGA0LXQtNC4X9GH0LXRgtCy0LXRgNCz0LBf0L\/igJnRj9GC0L3QuNGG0ZZf0YHRg9Cx0L7RgtC4Jy5zcGxpdCgnXycpCiAgICAgICAgfSwKCiAgICAgICAgbm91bkNhc2UgPSAoLyhcW1vQktCy0KPRg11cXSkgP2RkZGQvKS50ZXN0KGZvcm1hdCkgPwogICAgICAgICAgICAnYWNjdXNhdGl2ZScgOgogICAgICAgICAgICAoKC9cWz8oPzrQvNC40L3Rg9C70L7Rl3zQvdCw0YHRgtGD0L\/QvdC+0ZcpPyA\/XF0gP2RkZGQvKS50ZXN0KGZvcm1hdCkgPwogICAgICAgICAgICAgICAgJ2dlbml0aXZlJyA6CiAgICAgICAgICAgICAgICAnbm9taW5hdGl2ZScpOwoKICAgICAgICByZXR1cm4gd2Vla2RheXNbbm91bkNhc2VdW20uZGF5KCldOwogICAgfQoKICAgIGZ1bmN0aW9uIHByb2Nlc3NIb3Vyc0Z1bmN0aW9uKHN0cikgewogICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiBzdHIgKyAn0L4nICsgKHRoaXMuaG91cnMoKSA9PT0gMTEgPyAn0LEnIDogJycpICsgJ10gTFQnOwogICAgICAgIH07CiAgICB9CgogICAgcmV0dXJuIG1vbWVudC5sYW5nKCd1aycsIHsKICAgICAgICBtb250aHMgOiBtb250aHNDYXNlUmVwbGFjZSwKICAgICAgICBtb250aHNTaG9ydCA6ICLRgdGW0Ydf0LvRjtGCX9Cx0LXRgF\/QutCy0ZbRgl\/RgtGA0LDQsl\/Rh9C10YDQsl\/Qu9C40L9f0YHQtdGA0L9f0LLQtdGAX9C20L7QstGCX9C70LjRgdGCX9Cz0YDRg9C0Ii5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzIDogd2Vla2RheXNDYXNlUmVwbGFjZSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogItC90LRf0L\/QvV\/QstGCX9GB0YBf0YfRgl\/Qv9GCX9GB0LEiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNNaW4gOiAi0L3QtF\/Qv9C9X9Cy0YJf0YHRgF\/Rh9GCX9C\/0YJf0YHQsSIuc3BsaXQoIl8iKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAiSEg6bW0iLAogICAgICAgICAgICBMIDogIkRELk1NLllZWVkiLAogICAgICAgICAgICBMTCA6ICJEIE1NTU0gWVlZWSDRgC4iLAogICAgICAgICAgICBMTEwgOiAiRCBNTU1NIFlZWVkg0YAuLCBMVCIsCiAgICAgICAgICAgIExMTEwgOiAiZGRkZCwgRCBNTU1NIFlZWVkg0YAuLCBMVCIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5OiBwcm9jZXNzSG91cnNGdW5jdGlvbignW9Ch0YzQvtCz0L7QtNC90ZYgJyksCiAgICAgICAgICAgIG5leHREYXk6IHByb2Nlc3NIb3Vyc0Z1bmN0aW9uKCdb0JfQsNCy0YLRgNCwICcpLAogICAgICAgICAgICBsYXN0RGF5OiBwcm9jZXNzSG91cnNGdW5jdGlvbignW9CS0YfQvtGA0LAgJyksCiAgICAgICAgICAgIG5leHRXZWVrOiBwcm9jZXNzSG91cnNGdW5jdGlvbignW9CjXSBkZGRkIFsnKSwKICAgICAgICAgICAgbGFzdFdlZWs6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAodGhpcy5kYXkoKSkgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9jZXNzSG91cnNGdW5jdGlvbignW9Cc0LjQvdGD0LvQvtGXXSBkZGRkIFsnKS5jYWxsKHRoaXMpOwogICAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9jZXNzSG91cnNGdW5jdGlvbignW9Cc0LjQvdGD0LvQvtCz0L5dIGRkZGQgWycpLmNhbGwodGhpcyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNhbWVFbHNlOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogItC30LAgJXMiLAogICAgICAgICAgICBwYXN0IDogIiVzINGC0L7QvNGDIiwKICAgICAgICAgICAgcyA6ICLQtNC10LrRltC70YzQutCwINGB0LXQutGD0L3QtCIsCiAgICAgICAgICAgIG0gOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsLAogICAgICAgICAgICBtbSA6IHJlbGF0aXZlVGltZVdpdGhQbHVyYWwsCiAgICAgICAgICAgIGggOiAi0LPQvtC00LjQvdGDIiwKICAgICAgICAgICAgaGggOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsLAogICAgICAgICAgICBkIDogItC00LXQvdGMIiwKICAgICAgICAgICAgZGQgOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsLAogICAgICAgICAgICBNIDogItC80ZbRgdGP0YbRjCIsCiAgICAgICAgICAgIE1NIDogcmVsYXRpdmVUaW1lV2l0aFBsdXJhbCwKICAgICAgICAgICAgeSA6ICLRgNGW0LoiLAogICAgICAgICAgICB5eSA6IHJlbGF0aXZlVGltZVdpdGhQbHVyYWwKICAgICAgICB9LAoKICAgICAgICAvLyBNLiBFLjogdGhvc2UgdHdvIGFyZSB2aXJ0dWFsbHkgdW51c2VkIGJ1dCBhIHVzZXIgbWlnaHQgd2FudCB0byBpbXBsZW1lbnQgdGhlbSBmb3IgaGlzL2hlciB3ZWJzaXRlIGZvciBzb21lIHJlYXNvbgoKICAgICAgICBtZXJpZGllbSA6IGZ1bmN0aW9uIChob3VyLCBtaW51dGUsIGlzTG93ZXIpIHsKICAgICAgICAgICAgaWYgKGhvdXIgPCA0KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gItC90L7Rh9GWIjsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VyIDwgMTIpIHsKICAgICAgICAgICAgICAgIHJldHVybiAi0YDQsNC90LrRgyI7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaG91ciA8IDE3KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gItC00L3RjyI7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gItCy0LXRh9C+0YDQsCI7CiAgICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICBvcmRpbmFsOiBmdW5jdGlvbiAobnVtYmVyLCBwZXJpb2QpIHsKICAgICAgICAgICAgc3dpdGNoIChwZXJpb2QpIHsKICAgICAgICAgICAgY2FzZSAnTSc6CiAgICAgICAgICAgIGNhc2UgJ2QnOgogICAgICAgICAgICBjYXNlICdEREQnOgogICAgICAgICAgICBjYXNlICd3JzoKICAgICAgICAgICAgY2FzZSAnVyc6CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJy3QuSc7CiAgICAgICAgICAgIGNhc2UgJ0QnOgogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICct0LPQvic7CiAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyOwogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDcgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDFzdCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiB1emJlawovLyBhdXRob3IgOiBTYXJkb3IgTXVtaW5vdiA6IGh0dHBzOi8vZ2l0aHViLmNvbS9tdW1pbm9mZgoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQubGFuZygndXonLCB7CiAgICAgICAgbW9udGhzIDogItGP0L3QstCw0YDRjF\/RhNC10LLRgNCw0LvRjF\/QvNCw0YDRgl\/QsNC\/0YDQtdC70Yxf0LzQsNC5X9C40Y7QvdGMX9C40Y7Qu9GMX9Cw0LLQs9GD0YHRgl\/RgdC10L3RgtGP0LHRgNGMX9C+0LrRgtGP0LHRgNGMX9C90L7Rj9Cx0YDRjF\/QtNC10LrQsNCx0YDRjCIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydCA6ICLRj9C90LJf0YTQtdCyX9C80LDRgF\/QsNC\/0YBf0LzQsNC5X9C40Y7QvV\/QuNGO0Ltf0LDQstCzX9GB0LXQvV\/QvtC60YJf0L3QvtGPX9C00LXQuiIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5cyA6ICLQr9C60YjQsNC90LHQsF\/QlNGD0YjQsNC90LHQsF\/QodC10YjQsNC90LHQsF\/Qp9C+0YDRiNCw0L3QsdCwX9Cf0LDQudGI0LDQvdCx0LBf0JbRg9C80LBf0KjQsNC90LHQsCIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogItCv0LrRiF\/QlNGD0Yhf0KHQtdGIX9Cn0L7RgF\/Qn9Cw0Llf0JbRg9C8X9Co0LDQvSIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICLQr9C6X9CU0YNf0KHQtV\/Qp9C+X9Cf0LBf0JbRg1\/QqNCwIi5zcGxpdCgiXyIpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICJISDptbSIsCiAgICAgICAgICAgIEwgOiAiREQvTU0vWVlZWSIsCiAgICAgICAgICAgIExMIDogIkQgTU1NTSBZWVlZIiwKICAgICAgICAgICAgTExMIDogIkQgTU1NTSBZWVlZIExUIiwKICAgICAgICAgICAgTExMTCA6ICJEIE1NTU0gWVlZWSwgZGRkZCBMVCIKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1vQkdGD0LPRg9C9INGB0L7QsNGCXSBMVCBb0LTQsF0nLAogICAgICAgICAgICBuZXh0RGF5IDogJ1vQrdGA0YLQsNCz0LBdIExUIFvQtNCwXScsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgW9C60YPQvdC4INGB0L7QsNGCXSBMVCBb0LTQsF0nLAogICAgICAgICAgICBsYXN0RGF5IDogJ1vQmtC10YfQsCDRgdC+0LDRgl0gTFQgW9C00LBdJywKICAgICAgICAgICAgbGFzdFdlZWsgOiAnW9Cj0YLQs9Cw0L1dIGRkZGQgW9C60YPQvdC4INGB0L7QsNGCXSBMVCBb0LTQsF0nLAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAi0K\/QutC40L0gJXMg0LjRh9C40LTQsCIsCiAgICAgICAgICAgIHBhc3QgOiAi0JHQuNGAINC90LXRh9CwICVzINC+0LvQtNC40L0iLAogICAgICAgICAgICBzIDogItGE0YPRgNGB0LDRgiIsCiAgICAgICAgICAgIG0gOiAi0LHQuNGAINC00LDQutC40LrQsCIsCiAgICAgICAgICAgIG1tIDogIiVkINC00LDQutC40LrQsCIsCiAgICAgICAgICAgIGggOiAi0LHQuNGAINGB0L7QsNGCIiwKICAgICAgICAgICAgaGggOiAiJWQg0YHQvtCw0YIiLAogICAgICAgICAgICBkIDogItCx0LjRgCDQutGD0L0iLAogICAgICAgICAgICBkZCA6ICIlZCDQutGD0L0iLAogICAgICAgICAgICBNIDogItCx0LjRgCDQvtC5IiwKICAgICAgICAgICAgTU0gOiAiJWQg0L7QuSIsCiAgICAgICAgICAgIHkgOiAi0LHQuNGAINC50LjQuyIsCiAgICAgICAgICAgIHl5IDogIiVkINC50LjQuyIKICAgICAgICB9LAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA3ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiA0dGggaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogdmlldG5hbWVzZSAodm4pCi8vIGF1dGhvciA6IEJhbmcgTmd1eWVuIDogaHR0cHM6Ly9naXRodWIuY29tL2JhbmduawoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAgICAgZGVmaW5lKFsnbW9tZW50J10sIGZhY3RvcnkpOyAvLyBBTUQKICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4uL21vbWVudCcpKTsgLy8gTm9kZQogICAgfSBlbHNlIHsKICAgICAgICBmYWN0b3J5KHdpbmRvdy5tb21lbnQpOyAvLyBCcm93c2VyIGdsb2JhbAogICAgfQp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQubGFuZygndm4nLCB7CiAgICAgICAgbW9udGhzIDogInRow6FuZyAxX3Row6FuZyAyX3Row6FuZyAzX3Row6FuZyA0X3Row6FuZyA1X3Row6FuZyA2X3Row6FuZyA3X3Row6FuZyA4X3Row6FuZyA5X3Row6FuZyAxMF90aMOhbmcgMTFfdGjDoW5nIDEyIi5zcGxpdCgiXyIpLAogICAgICAgIG1vbnRoc1Nob3J0IDogIlRoMDFfVGgwMl9UaDAzX1RoMDRfVGgwNV9UaDA2X1RoMDdfVGgwOF9UaDA5X1RoMTBfVGgxMV9UaDEyIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzIDogImNo4bunIG5o4bqtdF90aOG7qSBoYWlfdGjhu6kgYmFfdGjhu6kgdMawX3Ro4bupIG7Eg21fdGjhu6kgc8OhdV90aOG7qSBi4bqjeSIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogIkNOX1QyX1QzX1Q0X1Q1X1Q2X1Q3Ii5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogIkNOX1QyX1QzX1Q0X1Q1X1Q2X1Q3Ii5zcGxpdCgiXyIpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICJISDptbSIsCiAgICAgICAgICAgIEwgOiAiREQvTU0vWVlZWSIsCiAgICAgICAgICAgIExMIDogIkQgTU1NTSBbbsSDbV0gWVlZWSIsCiAgICAgICAgICAgIExMTCA6ICJEIE1NTU0gW27Eg21dIFlZWVkgTFQiLAogICAgICAgICAgICBMTExMIDogImRkZGQsIEQgTU1NTSBbbsSDbV0gWVlZWSBMVCIsCiAgICAgICAgICAgIGwgOiAiREQvTS9ZWVlZIiwKICAgICAgICAgICAgbGwgOiAiRCBNTU0gWVlZWSIsCiAgICAgICAgICAgIGxsbCA6ICJEIE1NTSBZWVlZIExUIiwKICAgICAgICAgICAgbGxsbCA6ICJkZGQsIEQgTU1NIFlZWVkgTFQiCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheTogIltIw7RtIG5heSBsw7pjXSBMVCIsCiAgICAgICAgICAgIG5leHREYXk6ICdbTmfDoHkgbWFpIGzDumNdIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6ICdkZGRkIFt0deG6p24gdOG7m2kgbMO6Y10gTFQnLAogICAgICAgICAgICBsYXN0RGF5OiAnW0jDtG0gcXVhIGzDumNdIExUJywKICAgICAgICAgICAgbGFzdFdlZWs6ICdkZGRkIFt0deG6p24gcuG7k2kgbMO6Y10gTFQnLAogICAgICAgICAgICBzYW1lRWxzZTogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICIlcyB04bubaSIsCiAgICAgICAgICAgIHBhc3QgOiAiJXMgdHLGsOG7m2MiLAogICAgICAgICAgICBzIDogInbDoGkgZ2nDonkiLAogICAgICAgICAgICBtIDogIm3hu5l0IHBow7p0IiwKICAgICAgICAgICAgbW0gOiAiJWQgcGjDunQiLAogICAgICAgICAgICBoIDogIm3hu5l0IGdp4budIiwKICAgICAgICAgICAgaGggOiAiJWQgZ2nhu50iLAogICAgICAgICAgICBkIDogIm3hu5l0IG5nw6B5IiwKICAgICAgICAgICAgZGQgOiAiJWQgbmfDoHkiLAogICAgICAgICAgICBNIDogIm3hu5l0IHRow6FuZyIsCiAgICAgICAgICAgIE1NIDogIiVkIHRow6FuZyIsCiAgICAgICAgICAgIHkgOiAibeG7mXQgbsSDbSIsCiAgICAgICAgICAgIHl5IDogIiVkIG7Eg20iCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsIDogZnVuY3Rpb24gKG51bWJlcikgewogICAgICAgICAgICByZXR1cm4gbnVtYmVyOwogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwoKLy8gbW9tZW50LmpzIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24KLy8gbGFuZ3VhZ2UgOiBjaGluZXNlCi8vIGF1dGhvciA6IHN1dXBpYyA6IGh0dHBzOi8vZ2l0aHViLmNvbS9zdXVwaWMKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewogICAgICAgIGRlZmluZShbJ21vbWVudCddLCBmYWN0b3J5KTsgLy8gQU1ECiAgICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JykgewogICAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKCcuLi9tb21lbnQnKSk7IC8vIE5vZGUKICAgIH0gZWxzZSB7CiAgICAgICAgZmFjdG9yeSh3aW5kb3cubW9tZW50KTsgLy8gQnJvd3NlciBnbG9iYWwKICAgIH0KfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICByZXR1cm4gbW9tZW50LmxhbmcoJ3poLWNuJywgewogICAgICAgIG1vbnRocyA6ICLkuIDmnIhf5LqM5pyIX+S4ieaciF\/lm5vmnIhf5LqU5pyIX+WFreaciF\/kuIPmnIhf5YWr5pyIX+S5neaciF\/ljYHmnIhf5Y2B5LiA5pyIX+WNgeS6jOaciCIuc3BsaXQoIl8iKSwKICAgICAgICBtb250aHNTaG9ydCA6ICIx5pyIXzLmnIhfM+aciF805pyIXzXmnIhfNuaciF835pyIXzjmnIhfOeaciF8xMOaciF8xMeaciF8xMuaciCIuc3BsaXQoIl8iKSwKICAgICAgICB3ZWVrZGF5cyA6ICLmmJ\/mnJ\/ml6Vf5pif5pyf5LiAX+aYn+acn+S6jF\/mmJ\/mnJ\/kuIlf5pif5pyf5ZubX+aYn+acn+S6lF\/mmJ\/mnJ\/lha0iLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICLlkajml6Vf5ZGo5LiAX+WRqOS6jF\/lkajkuIlf5ZGo5ZubX+WRqOS6lF\/lkajlha0iLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXNNaW4gOiAi5pelX+S4gF\/kuoxf5LiJX+Wbm1\/kupRf5YWtIi5zcGxpdCgiXyIpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICJBaOeCuW1tIiwKICAgICAgICAgICAgTCA6ICJZWVlZ5bm0TU1NROaXpSIsCiAgICAgICAgICAgIExMIDogIllZWVnlubRNTU1E5pelIiwKICAgICAgICAgICAgTExMIDogIllZWVnlubRNTU1E5pelTFQiLAogICAgICAgICAgICBMTExMIDogIllZWVnlubRNTU1E5pelZGRkZExUIiwKICAgICAgICAgICAgbCA6ICJZWVlZ5bm0TU1NROaXpSIsCiAgICAgICAgICAgIGxsIDogIllZWVnlubRNTU1E5pelIiwKICAgICAgICAgICAgbGxsIDogIllZWVnlubRNTU1E5pelTFQiLAogICAgICAgICAgICBsbGxsIDogIllZWVnlubRNTU1E5pelZGRkZExUIgogICAgICAgIH0sCiAgICAgICAgbWVyaWRpZW0gOiBmdW5jdGlvbiAoaG91ciwgbWludXRlLCBpc0xvd2VyKSB7CiAgICAgICAgICAgIHZhciBobSA9IGhvdXIgKiAxMDAgKyBtaW51dGU7CiAgICAgICAgICAgIGlmIChobSA8IDkwMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICLml6nkuIoiOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhtIDwgMTEzMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICLkuIrljYgiOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhtIDwgMTIzMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICLkuK3ljYgiOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhtIDwgMTgwMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICLkuIvljYgiOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuICLmmZrkuIoiOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6ICdb5LuK5aSpXUxUJywKICAgICAgICAgICAgbmV4dERheSA6ICdb5piO5aSpXUxUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnW+S4i11kZGRkTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1vmmKjlpKldTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdb5LiKXWRkZGRMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsIDogZnVuY3Rpb24gKG51bWJlciwgcGVyaW9kKSB7CiAgICAgICAgICAgIHN3aXRjaCAocGVyaW9kKSB7CiAgICAgICAgICAgIGNhc2UgImQiIDoKICAgICAgICAgICAgY2FzZSAiRCIgOgogICAgICAgICAgICBjYXNlICJEREQiIDoKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAi5pelIjsKICAgICAgICAgICAgY2FzZSAiTSIgOgogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICLmnIgiOwogICAgICAgICAgICBjYXNlICJ3IiA6CiAgICAgICAgICAgIGNhc2UgIlciIDoKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAi5ZGoIjsKICAgICAgICAgICAgZGVmYXVsdCA6CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICIlc+WGhSIsCiAgICAgICAgICAgIHBhc3QgOiAiJXPliY0iLAogICAgICAgICAgICBzIDogIuWHoOenkiIsCiAgICAgICAgICAgIG0gOiAiMeWIhumSnyIsCiAgICAgICAgICAgIG1tIDogIiVk5YiG6ZKfIiwKICAgICAgICAgICAgaCA6ICIx5bCP5pe2IiwKICAgICAgICAgICAgaGggOiAiJWTlsI\/ml7YiLAogICAgICAgICAgICBkIDogIjHlpKkiLAogICAgICAgICAgICBkZCA6ICIlZOWkqSIsCiAgICAgICAgICAgIE0gOiAiMeS4quaciCIsCiAgICAgICAgICAgIE1NIDogIiVk5Liq5pyIIiwKICAgICAgICAgICAgeSA6ICIx5bm0IiwKICAgICAgICAgICAgeXkgOiAiJWTlubQiCiAgICAgICAgfQogICAgfSk7Cn0pKTsKCi8vIG1vbWVudC5qcyBsYW5ndWFnZSBjb25maWd1cmF0aW9uCi8vIGxhbmd1YWdlIDogdHJhZGl0aW9uYWwgY2hpbmVzZSAoemgtdHcpCi8vIGF1dGhvciA6IEJlbiA6IGh0dHBzOi8vZ2l0aHViLmNvbS9iZW4tbGluCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgICAgICBkZWZpbmUoWydtb21lbnQnXSwgZmFjdG9yeSk7IC8vIEFNRAogICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi4vbW9tZW50JykpOyAvLyBOb2RlCiAgICB9IGVsc2UgewogICAgICAgIGZhY3Rvcnkod2luZG93Lm1vbWVudCk7IC8vIEJyb3dzZXIgZ2xvYmFsCiAgICB9Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5sYW5nKCd6aC10dycsIHsKICAgICAgICBtb250aHMgOiAi5LiA5pyIX+S6jOaciF\/kuInmnIhf5Zub5pyIX+S6lOaciF\/lha3mnIhf5LiD5pyIX+WFq+aciF\/kuZ3mnIhf5Y2B5pyIX+WNgeS4gOaciF\/ljYHkuozmnIgiLnNwbGl0KCJfIiksCiAgICAgICAgbW9udGhzU2hvcnQgOiAiMeaciF8y5pyIXzPmnIhfNOaciF815pyIXzbmnIhfN+aciF845pyIXznmnIhfMTDmnIhfMTHmnIhfMTLmnIgiLnNwbGl0KCJfIiksCiAgICAgICAgd2Vla2RheXMgOiAi5pif5pyf5pelX+aYn+acn+S4gF\/mmJ\/mnJ\/kuoxf5pif5pyf5LiJX+aYn+acn+Wbm1\/mmJ\/mnJ\/kupRf5pif5pyf5YWtIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAi6YCx5pelX+mAseS4gF\/pgLHkuoxf6YCx5LiJX+mAseWbm1\/pgLHkupRf6YCx5YWtIi5zcGxpdCgiXyIpLAogICAgICAgIHdlZWtkYXlzTWluIDogIuaXpV\/kuIBf5LqMX+S4iV\/lm5tf5LqUX+WFrSIuc3BsaXQoIl8iKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAiQWjpu55tbSIsCiAgICAgICAgICAgIEwgOiAiWVlZWeW5tE1NTUTml6UiLAogICAgICAgICAgICBMTCA6ICJZWVlZ5bm0TU1NROaXpSIsCiAgICAgICAgICAgIExMTCA6ICJZWVlZ5bm0TU1NROaXpUxUIiwKICAgICAgICAgICAgTExMTCA6ICJZWVlZ5bm0TU1NROaXpWRkZGRMVCIsCiAgICAgICAgICAgIGwgOiAiWVlZWeW5tE1NTUTml6UiLAogICAgICAgICAgICBsbCA6ICJZWVlZ5bm0TU1NROaXpSIsCiAgICAgICAgICAgIGxsbCA6ICJZWVlZ5bm0TU1NROaXpUxUIiwKICAgICAgICAgICAgbGxsbCA6ICJZWVlZ5bm0TU1NROaXpWRkZGRMVCIKICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtIDogZnVuY3Rpb24gKGhvdXIsIG1pbnV0ZSwgaXNMb3dlcikgewogICAgICAgICAgICB2YXIgaG0gPSBob3VyICogMTAwICsgbWludXRlOwogICAgICAgICAgICBpZiAoaG0gPCA5MDApIHsKICAgICAgICAgICAgICAgIHJldHVybiAi5pep5LiKIjsKICAgICAgICAgICAgfSBlbHNlIGlmIChobSA8IDExMzApIHsKICAgICAgICAgICAgICAgIHJldHVybiAi5LiK5Y2IIjsKICAgICAgICAgICAgfSBlbHNlIGlmIChobSA8IDEyMzApIHsKICAgICAgICAgICAgICAgIHJldHVybiAi5Lit5Y2IIjsKICAgICAgICAgICAgfSBlbHNlIGlmIChobSA8IDE4MDApIHsKICAgICAgICAgICAgICAgIHJldHVybiAi5LiL5Y2IIjsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiAi5pma5LiKIjsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW+S7iuWkqV1MVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW+aYjuWkqV1MVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ1vkuItdZGRkZExUJywKICAgICAgICAgICAgbGFzdERheSA6ICdb5pio5aSpXUxUJywKICAgICAgICAgICAgbGFzdFdlZWsgOiAnW+S4il1kZGRkTFQnLAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIsIHBlcmlvZCkgewogICAgICAgICAgICBzd2l0Y2ggKHBlcmlvZCkgewogICAgICAgICAgICBjYXNlICJkIiA6CiAgICAgICAgICAgIGNhc2UgIkQiIDoKICAgICAgICAgICAgY2FzZSAiREREIiA6CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgIuaXpSI7CiAgICAgICAgICAgIGNhc2UgIk0iIDoKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAi5pyIIjsKICAgICAgICAgICAgY2FzZSAidyIgOgogICAgICAgICAgICBjYXNlICJXIiA6CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgIumAsSI7CiAgICAgICAgICAgIGRlZmF1bHQgOgogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlcjsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAiJXPlhaciLAogICAgICAgICAgICBwYXN0IDogIiVz5YmNIiwKICAgICAgICAgICAgcyA6ICLlub7np5IiLAogICAgICAgICAgICBtIDogIuS4gOWIhumQmCIsCiAgICAgICAgICAgIG1tIDogIiVk5YiG6ZCYIiwKICAgICAgICAgICAgaCA6ICLkuIDlsI\/mmYIiLAogICAgICAgICAgICBoaCA6ICIlZOWwj+aZgiIsCiAgICAgICAgICAgIGQgOiAi5LiA5aSpIiwKICAgICAgICAgICAgZGQgOiAiJWTlpKkiLAogICAgICAgICAgICBNIDogIuS4gOWAi+aciCIsCiAgICAgICAgICAgIE1NIDogIiVk5YCL5pyIIiwKICAgICAgICAgICAgeSA6ICLkuIDlubQiLAogICAgICAgICAgICB5eSA6ICIlZOW5tCIKICAgICAgICB9CiAgICB9KTsKfSkpOwo=",
    "size": "183425"
}