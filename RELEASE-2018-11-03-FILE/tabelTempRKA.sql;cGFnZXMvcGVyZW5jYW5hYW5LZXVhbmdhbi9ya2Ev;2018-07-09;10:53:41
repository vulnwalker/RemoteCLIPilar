{
    "namaFile": "pages\/perencanaanKeuangan\/rka\/tabelTempRKA.sql",
    "lastUpdate": "2018-07-09+10:53:41.66",
    "contentFile": "-- Adminer 4.6.2 MySQL dump

SET NAMES utf8;
SET time_zone = '+00:00';
SET foreign_key_checks = 0;
SET sql_mode = 'NO_AUTO_VALUE_ON_ZERO';

DROP TABLE IF EXISTS `temp_rekening_rka_belanja_langsung`;
CREATE TABLE `temp_rekening_rka_belanja_langsung` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `k` text NOT NULL,
  `l` text NOT NULL,
  `m` text NOT NULL,
  `n` text NOT NULL,
  `o` text NOT NULL,
  `username` text NOT NULL,
  `sumber_dana` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_rekening_rka_belanja_tidak_langsung`;
CREATE TABLE `temp_rekening_rka_belanja_tidak_langsung` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `k` text NOT NULL,
  `l` text NOT NULL,
  `m` text NOT NULL,
  `n` text NOT NULL,
  `o` text NOT NULL,
  `username` text NOT NULL,
  `sumber_dana` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_rekening_rka_pembiayaan_penerimaan`;
CREATE TABLE `temp_rekening_rka_pembiayaan_penerimaan` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `k` text NOT NULL,
  `l` text NOT NULL,
  `m` text NOT NULL,
  `n` text NOT NULL,
  `o` text NOT NULL,
  `username` text NOT NULL,
  `sumber_dana` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_rekening_rka_pembiayaan_pengeluaran`;
CREATE TABLE `temp_rekening_rka_pembiayaan_pengeluaran` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `k` text NOT NULL,
  `l` text NOT NULL,
  `m` text NOT NULL,
  `n` text NOT NULL,
  `o` text NOT NULL,
  `username` text NOT NULL,
  `sumber_dana` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_rekening_rka_pendapatan_dp`;
CREATE TABLE `temp_rekening_rka_pendapatan_dp` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `k` text NOT NULL,
  `l` text NOT NULL,
  `m` text NOT NULL,
  `n` text NOT NULL,
  `o` text NOT NULL,
  `username` text NOT NULL,
  `sumber_dana` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_rekening_rka_pendapatan_lp`;
CREATE TABLE `temp_rekening_rka_pendapatan_lp` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `k` text NOT NULL,
  `l` text NOT NULL,
  `m` text NOT NULL,
  `n` text NOT NULL,
  `o` text NOT NULL,
  `username` text NOT NULL,
  `sumber_dana` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_rekening_rka_pendapatan_pad`;
CREATE TABLE `temp_rekening_rka_pendapatan_pad` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `k` text NOT NULL,
  `l` text NOT NULL,
  `m` text NOT NULL,
  `n` text NOT NULL,
  `o` text NOT NULL,
  `username` text NOT NULL,
  `sumber_dana` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_remove_rka_1_dp`;
CREATE TABLE `temp_remove_rka_1_dp` (
  `id_rka` text COLLATE latin1_general_ci NOT NULL,
  `username` text COLLATE latin1_general_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;


DROP TABLE IF EXISTS `temp_remove_rka_1_lp`;
CREATE TABLE `temp_remove_rka_1_lp` (
  `id_rka` text COLLATE latin1_general_ci NOT NULL,
  `username` text COLLATE latin1_general_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;


DROP TABLE IF EXISTS `temp_remove_rka_1_pad`;
CREATE TABLE `temp_remove_rka_1_pad` (
  `id_rka` text COLLATE latin1_general_ci NOT NULL,
  `username` text COLLATE latin1_general_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;


DROP TABLE IF EXISTS `temp_remove_rka_21`;
CREATE TABLE `temp_remove_rka_21` (
  `id_rka` text COLLATE latin1_general_ci NOT NULL,
  `username` text COLLATE latin1_general_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;


DROP TABLE IF EXISTS `temp_remove_rka_221`;
CREATE TABLE `temp_remove_rka_221` (
  `id_rka` int(11) NOT NULL,
  `username` text COLLATE latin1_general_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;


DROP TABLE IF EXISTS `temp_remove_rka_31`;
CREATE TABLE `temp_remove_rka_31` (
  `id_rka` text COLLATE latin1_general_ci NOT NULL,
  `username` text COLLATE latin1_general_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;


DROP TABLE IF EXISTS `temp_remove_rka_32`;
CREATE TABLE `temp_remove_rka_32` (
  `id_rka` text COLLATE latin1_general_ci NOT NULL,
  `username` text COLLATE latin1_general_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;


DROP TABLE IF EXISTS `temp_rincian_belanja_langsung`;
CREATE TABLE `temp_rincian_belanja_langsung` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `id_rekening_belanja` text NOT NULL,
  `uraian` text NOT NULL,
  `username` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_rincian_belanja_modal`;
CREATE TABLE `temp_rincian_belanja_modal` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `f1` text NOT NULL,
  `f2` text NOT NULL,
  `f` text NOT NULL,
  `g` text NOT NULL,
  `h` text NOT NULL,
  `i` text NOT NULL,
  `j` text NOT NULL,
  `status` text NOT NULL,
  `username` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_rincian_belanja_tidak_langsung`;
CREATE TABLE `temp_rincian_belanja_tidak_langsung` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `id_rekening_belanja` text NOT NULL,
  `uraian` text NOT NULL,
  `username` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_rincian_pembiayaan_penerimaan`;
CREATE TABLE `temp_rincian_pembiayaan_penerimaan` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `id_rekening_belanja` text NOT NULL,
  `uraian` text NOT NULL,
  `username` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_rincian_pembiayaan_pengeluaran`;
CREATE TABLE `temp_rincian_pembiayaan_pengeluaran` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `id_rekening_belanja` text NOT NULL,
  `uraian` text NOT NULL,
  `username` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_rincian_pendapatan_dp`;
CREATE TABLE `temp_rincian_pendapatan_dp` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `id_rekening_belanja` text NOT NULL,
  `uraian` text NOT NULL,
  `username` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_rincian_pendapatan_lp`;
CREATE TABLE `temp_rincian_pendapatan_lp` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `id_rekening_belanja` text NOT NULL,
  `uraian` text NOT NULL,
  `username` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_rincian_pendapatan_pad`;
CREATE TABLE `temp_rincian_pendapatan_pad` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `id_rekening_belanja` text NOT NULL,
  `uraian` text NOT NULL,
  `username` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_sub_rincian_belanja_langsung`;
CREATE TABLE `temp_sub_rincian_belanja_langsung` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `id_rincian_belanja` text NOT NULL,
  `uraian` text NOT NULL,
  `f1` text NOT NULL,
  `f2` text NOT NULL,
  `f` text NOT NULL,
  `g` text NOT NULL,
  `h` text NOT NULL,
  `i` text NOT NULL,
  `j` text NOT NULL,
  `j1` text NOT NULL,
  `harga_satuan` text NOT NULL,
  `volume1` text NOT NULL,
  `volume2` text NOT NULL,
  `volume3` text NOT NULL,
  `rincian_volume` text NOT NULL,
  `satuan1` text NOT NULL,
  `satuan2` text NOT NULL,
  `satuan3` text NOT NULL,
  `username` text NOT NULL,
  `jenis_atribusi` text NOT NULL,
  `id_rka` text NOT NULL,
  `urutan_posisi` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_sub_rincian_belanja_tidak_langsung`;
CREATE TABLE `temp_sub_rincian_belanja_tidak_langsung` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `id_rincian_belanja` text NOT NULL,
  `uraian` text NOT NULL,
  `f1` text NOT NULL,
  `f2` text NOT NULL,
  `f` text NOT NULL,
  `g` text NOT NULL,
  `h` text NOT NULL,
  `i` text NOT NULL,
  `j` text NOT NULL,
  `j1` text NOT NULL,
  `harga_satuan` text NOT NULL,
  `volume1` text NOT NULL,
  `volume2` text NOT NULL,
  `volume3` text NOT NULL,
  `rincian_volume` text NOT NULL,
  `satuan1` text NOT NULL,
  `satuan2` text NOT NULL,
  `satuan3` text NOT NULL,
  `username` text NOT NULL,
  `jenis_atribusi` text NOT NULL,
  `id_rka` text NOT NULL,
  `urutan_posisi` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_sub_rincian_pembiayaan_penerimaan`;
CREATE TABLE `temp_sub_rincian_pembiayaan_penerimaan` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `id_rincian_belanja` text NOT NULL,
  `uraian` text NOT NULL,
  `f1` text NOT NULL,
  `f2` text NOT NULL,
  `f` text NOT NULL,
  `g` text NOT NULL,
  `h` text NOT NULL,
  `i` text NOT NULL,
  `j` text NOT NULL,
  `j1` text NOT NULL,
  `harga_satuan` text NOT NULL,
  `volume1` text NOT NULL,
  `volume2` text NOT NULL,
  `volume3` text NOT NULL,
  `rincian_volume` text NOT NULL,
  `satuan1` text NOT NULL,
  `satuan2` text NOT NULL,
  `satuan3` text NOT NULL,
  `username` text NOT NULL,
  `jenis_atribusi` text NOT NULL,
  `id_rka` text NOT NULL,
  `urutan_posisi` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_sub_rincian_pembiayaan_pengeluaran`;
CREATE TABLE `temp_sub_rincian_pembiayaan_pengeluaran` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `id_rincian_belanja` text NOT NULL,
  `uraian` text NOT NULL,
  `f1` text NOT NULL,
  `f2` text NOT NULL,
  `f` text NOT NULL,
  `g` text NOT NULL,
  `h` text NOT NULL,
  `i` text NOT NULL,
  `j` text NOT NULL,
  `j1` text NOT NULL,
  `harga_satuan` text NOT NULL,
  `volume1` text NOT NULL,
  `volume2` text NOT NULL,
  `volume3` text NOT NULL,
  `rincian_volume` text NOT NULL,
  `satuan1` text NOT NULL,
  `satuan2` text NOT NULL,
  `satuan3` text NOT NULL,
  `username` text NOT NULL,
  `jenis_atribusi` text NOT NULL,
  `id_rka` text NOT NULL,
  `urutan_posisi` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_sub_rincian_pendapatan_dp`;
CREATE TABLE `temp_sub_rincian_pendapatan_dp` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `id_rincian_belanja` text NOT NULL,
  `uraian` text NOT NULL,
  `f1` text NOT NULL,
  `f2` text NOT NULL,
  `f` text NOT NULL,
  `g` text NOT NULL,
  `h` text NOT NULL,
  `i` text NOT NULL,
  `j` text NOT NULL,
  `j1` text NOT NULL,
  `harga_satuan` text NOT NULL,
  `volume1` text NOT NULL,
  `volume2` text NOT NULL,
  `volume3` text NOT NULL,
  `rincian_volume` text NOT NULL,
  `satuan1` text NOT NULL,
  `satuan2` text NOT NULL,
  `satuan3` text NOT NULL,
  `username` text NOT NULL,
  `jenis_atribusi` text NOT NULL,
  `id_rka` text NOT NULL,
  `urutan_posisi` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_sub_rincian_pendapatan_lp`;
CREATE TABLE `temp_sub_rincian_pendapatan_lp` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `id_rincian_belanja` text NOT NULL,
  `uraian` text NOT NULL,
  `f1` text NOT NULL,
  `f2` text NOT NULL,
  `f` text NOT NULL,
  `g` text NOT NULL,
  `h` text NOT NULL,
  `i` text NOT NULL,
  `j` text NOT NULL,
  `j1` text NOT NULL,
  `harga_satuan` text NOT NULL,
  `volume1` text NOT NULL,
  `volume2` text NOT NULL,
  `volume3` text NOT NULL,
  `rincian_volume` text NOT NULL,
  `satuan1` text NOT NULL,
  `satuan2` text NOT NULL,
  `satuan3` text NOT NULL,
  `username` text NOT NULL,
  `jenis_atribusi` text NOT NULL,
  `id_rka` text NOT NULL,
  `urutan_posisi` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


DROP TABLE IF EXISTS `temp_sub_rincian_pendapatan_pad`;
CREATE TABLE `temp_sub_rincian_pendapatan_pad` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `id_rincian_belanja` text NOT NULL,
  `uraian` text NOT NULL,
  `f1` text NOT NULL,
  `f2` text NOT NULL,
  `f` text NOT NULL,
  `g` text NOT NULL,
  `h` text NOT NULL,
  `i` text NOT NULL,
  `j` text NOT NULL,
  `j1` text NOT NULL,
  `harga_satuan` text NOT NULL,
  `volume1` text NOT NULL,
  `volume2` text NOT NULL,
  `volume3` text NOT NULL,
  `rincian_volume` text NOT NULL,
  `satuan1` text NOT NULL,
  `satuan2` text NOT NULL,
  `satuan3` text NOT NULL,
  `username` text NOT NULL,
  `jenis_atribusi` text NOT NULL,
  `id_rka` text NOT NULL,
  `urutan_posisi` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


-- 2018-07-02 06:42:34",
    "size": "12692"
}