{
    "namaFile": "js\/penatausaha.js",
    "lastUpdate": "2018-10-30+16:12:11.29",
    "contentFile": "dmFyIFBlbmF0YXVzYWhhT2JqID0gZnVuY3Rpb24oKSB7CiAgdGhpcy5wcmVmaXggPSAicGVuYXRhdXNhaGEiOwogIHRoaXMuZWxDdXJyUGFnZSA9ICJIYWxEZWZhdWx0IjsKICB0aGlzLmVsQ292ZXIgPSB0aGlzLnByZWZpeCArICJfQ292ZXIiOwogIHRoaXMuZWxKbWxDZWsgPSB0aGlzLnByZWZpeCArICJfam1sY2VrIjsKICB0aGlzLmVsSm1sRGF0YVRhbXBpbCA9IHRoaXMucHJlZml4ICsgIl9qbWxkYXRhcGFnZSI7CiAgdGhpcy5lbENoZWNrQm94ID0gdGhpcy5wcmVmaXggKyAiX2NiIjsKICB0aGlzLmVsQ29udGVudFRvdGFsID0gImNudFRvdEhhcmdhIjsKICB0aGlzLmVsQ29udGVudEhhbCA9IHRoaXMucHJlZml4ICsgIl9jb250X2hhbCI7CiAgdGhpcy5lbENvbnRlbnREYWZ0YXIgPSB0aGlzLnByZWZpeCArICJfY29udF9saXN0IjsKICAvL3RoaXMudXJsID0gJ3BhZ2VzLnBocD9QZz0wNSZTUGc9MDMnOwogIHRoaXMuZm9ybU5hbWUgPSAiYWRtaW5Gb3JtIjsKICB0aGlzLmRhZnRhclBpbGloID0gbmV3IEFycmF5KCk7CiAgdGhpcy53aXRoS2VyYW5qYW5nID0gZmFsc2U7CiAgdGhpcy53aXRoUGlsaWggPSB0cnVlOwogIHRoaXMuZmlsdGVyQ2J4Q2hlY2tlZCA9IGZhbHNlOwoKCiAgdGhpcy50YW1waWxQSlJ1YW5nID0gZnVuY3Rpb24oKSB7CiAgICAvL2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwanJ1YW5nJykuaW5uZXJIVE1MID0gJ3p6enonOwogICAgJC5hamF4KHsKICAgICAgdHlwZTogIlBPU1QiLAogICAgICBkYXRhOiAkKCIjIiArIHRoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpICsgIiZ0ZXM9MSIsCiAgICAgIC8vZGF0YTondGVzPTEnLAogICAgICB1cmw6ICJwYWdlcy5waHA\\/IGNyZWF0ZVBhcmFtQnlGb3JtKHRoaXMuZm9ybU5hbWUpIDogIm51bGwiOyAvL2FsZXJ0KFBhcmFtcyk7CiAgICB0aGlzLkNvbW1pdChQYXJhbXMpOwogIH07CgogIHRoaXMubG9hZGluZyA9IGZ1bmN0aW9uKCkgewogICAgLy90aGlzLnNlbmRSZXEoIHsgaWRwcnM6IDAsIGRhZnRhclByb3NlczogbmV3IEFycmF5KCdsaXN0Jywnc3VtaGFsJyl9ICk7CiAgICB0aGlzLnNlbmRSZXEoeyBpZHByczogMCwgZGFmdGFyUHJvc2VzOiBuZXcgQXJyYXkoImxpc3QiLCAic3VtaGFsIikgfSk7CiAgfTsKICB0aGlzLnJlZnJlc2hMaXN0ID0gZnVuY3Rpb24ocmVzZXRQYWdlTm8pIHsKICAgIGlmIChyZXNldFBhZ2VObykgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5lbEN1cnJQYWdlKS52YWx1ZSA9IDE7CgogICAgLy9kb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmVsQ29udGVudFRvdGFsKS5pbm5lckhUTUwgPSAnJzsKICAgIHZhciBjdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmVsQ29udGVudERhZnRhcik7CiAgICBjdG4uaW5uZXJIVE1MID0KICAgIAkiPGRpdiBzdHlsZT0nIHBvc2l0aW9uOiBmaXhlZDsgY29sb3I6IHdoaXRlJz4mbmJzcDsmbmJzcCBMb2FkaW5nLi4uICZuYnNwOyZuYnNwIDxpbWcgc3JjPSdpbWFnZXMvd2FpdC5naWYnIGhlaWdodD0nMTYnIHN0eWxlPSdtYXJnaW46NDsnPjwvZGl2PiIKICAgIAkrY3RuLmlubmVySFRNTAogICAgCTsKCiAgICB2YXIgY292ZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY292ZXIiKTsKICAgIGlmIChjb3ZlcikgY292ZXIuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7CiAgICB2YXIgaGFsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5lbEN1cnJQYWdlKS52YWx1ZTsKCiAgICB2YXIgY3RuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5lbENvbnRlbnRIYWwpOwogICAgaWYgKGN0bikgewogICAgICAvL2FsZXJ0KGhhbCk7CiAgICAgIGN0bi5pbm5lckhUTUwgPQogICAgICAgICJMb2FkaW5nLi4uPGltZyBzcmM9J2ltYWdlcy93YWl0LmdpZicgaGVpZ2h0PScxNicgc3R5bGU9J21hcmdpbjo0Jz4iICsKICAgICAgICAiPGlucHV0IHR5cGU9J2hpZGRlbicgaWQ9JyIgKwogICAgICAgIHRoaXMuZWxDdXJyUGFnZSArCiAgICAgICAgIicgdmFsdWU9JyIgKwogICAgICAgIGhhbCArCiAgICAgICAgIic+IjsKICAgICAgdGhpcy5zZW5kUmVxKHsgaWRwcnM6IDAsIGRhZnRhclByb3NlczogbmV3IEFycmF5KCJsaXN0IiwgInN1bWhhbCIpIH0pOwogICAgfQoKICAgIC8vCWN0bi5pbm5lckhUTUw7CiAgICAvL2N0bi5zdHlsZS5kaXNwbGF5ID0gICJibG9jayIgOwogICAgLy9jdG4uZGlzYWJsZWQ9IHRydWU7CiAgICAvL3NsZWVwKDEwKTsKICB9OwogIHRoaXMuZmlsdGVyaW5nID0gZnVuY3Rpb24oKSB7CiAgICAvL3RoaXMucmVmcmVzaExpc3QoIHRydWUgKTsKICB9OwogIHRoaXMuZ290b0hhbGFtYW4gPSBmdW5jdGlvbihub3RoaW5nLCBIYWwpIHsKICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuZWxDdXJyUGFnZSkudmFsdWUgPSBIYWw7CiAgICAvL2RvY3VtZW50LmFkbWluRm9ybS5zdWJtaXQoKTsKICAgIHRoaXMucmVmcmVzaExpc3QoZmFsc2UpOwogIH07CiAgdGhpcy5lZGl0ID0gZnVuY3Rpb24oKSB7CiAgICAvKnZhciBqbWxDZWsgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggdGhpcy5lbEptbENlayApLnZhbHVlOwoJCXZhciBlcnJtc2cgPSAnJzsKCQlpZigoZXJybXNnPT0nJykgJiYgKCBqbWxDZWs+MSApKXsJZXJybXNnPSAnUGlsaWggSGFueWEgU2F0dSBEYXRhISc7CX0KCQlpZigoZXJybXNnPT0nJykgJiYgKCAoam1sQ2VrID09IDApfHwoam1sQ2VrID09ICcnKSAgKSl7CWVycm1zZz0gJ0RhdGEgYmVsdW0gZGlwaWxpaCEnOwl9CgkJaWYoZXJybXNnID09JycpewoKCQkJdmFyIGptbGRhdGE9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCB0aGlzLmVsSm1sRGF0YVRhbXBpbCApLnZhbHVlOwoJCQlmb3IodmFyIGk9MDsgaSA8IGptbGRhdGE7IGkrKyl7CgkJCQl2YXIgYm94ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIHRoaXMuZWxDaGVja0JveCArIGkpOwoJCQkJaWYoIGJveC5jaGVja2VkKXsKCQkJCQlpZiAoY29uZmlybSgnQmF0YWxrYW4gPycpKXsKCQkJCQkJdGhpcy5zZW5kUmVxKCB7IGlkcHJzOiAwLCBkYWZ0YXJQcm9zZXM6IG5ldyBBcnJheSgnZWRpdCcpICwgaWRwbGg6IGJveC52YWx1ZSB9ICk7CgkJCQkJfQoJCQkJfQoJCQl9CgkJfWVsc2V7CgkJCWFsZXJ0KGVycm1zZyk7CgkJfSovCiAgfTsKICB0aGlzLmNldGFrQnJnID0gZnVuY3Rpb24ob3ApIHsKICAgIC8qYWRtaW5Gb3JtLmFjdGlvbj0nP09wPScrb3ArJyZTUGc9Y2V0YWtfb25lJzsKCQlhZG1pbkZvcm0udGFyZ2V0PSdfYmxhbmsnOwoJCWFkbWluRm9ybS5zdWJtaXQoKTsJKi8KICB9OwogIHRoaXMuY2V0YWtIYWwgPSBmdW5jdGlvbihvcCkgewogICAgLyp2YXIgb3B0c3RyaW5nID0gSlNPTi5zdHJpbmdpZnkoIHsgaWRwcnM6IDAsIGRhZnRhclByb3NlczogbmV3IEFycmF5KCdjZXRha19oYWwnKSB9ICk7CgkJYWRtaW5Gb3JtLmFjdGlvbj0gdGhpcy51cmwrJyZvcHQ9JytlbmNvZGVVUkkob3B0c3RyaW5nKTsKCQkvL2FsZXJ0KGFkbWluRm9ybS5hY3Rpb24pOwoJCWFkbWluRm9ybS50YXJnZXQ9J19ibGFuayc7CgkJYWRtaW5Gb3JtLnN1Ym1pdCgpOwkqLwogIH07CiAgdGhpcy5jZXRha0FsbCA9IGZ1bmN0aW9uKG9wKSB7CiAgICAvL2FkbWluRm9ybS5hY3Rpb249Jz9PcD0nK29wKycmU1BnPWNldGFrX2FsbCc7CiAgICAvKnZhciBvcHRzdHJpbmcgPSBKU09OLnN0cmluZ2lmeSggeyBpZHByczogMCwgZGFmdGFyUHJvc2VzOiBuZXcgQXJyYXkoJ2NldGFrX2FsbCcpIH0gKTsKCQlhZG1pbkZvcm0uYWN0aW9uPSB0aGlzLnVybCsnJm9wdD0nK29wdHN0cmluZzsKCQlhZG1pbkZvcm0udGFyZ2V0PSdfYmxhbmsnOwoJCWFkbWluRm9ybS5zdWJtaXQoKTsJKi8KICB9OwogIHRoaXMuY2V0YWtLZXJ0YXNLZXJqYUtpYiA9IGZ1bmN0aW9uKHRpcGUsIHhscykgewogICAgLy90aGlzLnNldEZvcm1DZXRha0tLKCk7CiAgICAvL2lmKHRpcGU9PTApewogICAgLy92YXIgc3RhcnQgPSBkb2N1bWVudAogICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmbWxpbWl0ZGF0YSIpLmNoZWNrZWQpIHsKICAgICAgdmFyIGZtbGltaXRkYXRhID0gMDsKICAgIH0gZWxzZSB7CiAgICAgIHZhciBmbWxpbWl0ZGF0YSA9IDE7CiAgICB9CiAgICB2YXIgZm1saW1pdHN0YXJ0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZtbGltaXRzdGFydCIpLnZhbHVlOwogICAgdmFyIGZtbGltaXRlbmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZm1saW1pdGVuZCIpLnZhbHVlOwogICAgdmFyIGxpbWl0ID0KICAgICAgIiZmbWxpbWl0ZGF0YT0iICsKICAgICAgZm1saW1pdGRhdGEgKwogICAgICAiJmZtbGltaXRzdGFydD0iICsKICAgICAgZm1saW1pdHN0YXJ0ICsKICAgICAgIiZmbWxpbWl0ZW5kPSIgKwogICAgICBmbWxpbWl0ZW5kOwoKCgoJdmFyIGZtbGltaXRkYXRhRT0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTsKCWZtbGltaXRkYXRhRS5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnaGlkZGVuJyk7CglmbWxpbWl0ZGF0YUUuc2V0QXR0cmlidXRlKCduYW1lJywgJ2xpbWl0ZGF0YScpO2ZtbGltaXRkYXRhRS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2xpbWl0ZGF0YScpOwoJZm1saW1pdGRhdGFFLnNldEF0dHJpYnV0ZSgndmFsdWUnLCBmbWxpbWl0ZGF0YSk7YWRtaW5Gb3JtLmFwcGVuZENoaWxkKGZtbGltaXRkYXRhRSk7CgoJdmFyIGZtbGltaXRzdGFydEU9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7CglmbWxpbWl0c3RhcnRFLnNldEF0dHJpYnV0ZSgndHlwZScsICdoaWRkZW4nKTsKCWZtbGltaXRzdGFydEUuc2V0QXR0cmlidXRlKCduYW1lJywgJ2xpbWl0c3RhcnQnKTtmbWxpbWl0c3RhcnRFLnNldEF0dHJpYnV0ZSgnaWQnLCAnbGltaXRzdGFydCcpOwoJZm1saW1pdHN0YXJ0RS5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgZm1saW1pdHN0YXJ0KTsgYWRtaW5Gb3JtLmFwcGVuZENoaWxkKGZtbGltaXRzdGFydEUpOwoKCXZhciBmbWxpbWl0ZW5kRT0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTsKCWZtbGltaXRlbmRFLnNldEF0dHJpYnV0ZSgndHlwZScsICdoaWRkZW4nKTsKCWZtbGltaXRlbmRFLnNldEF0dHJpYnV0ZSgnbmFtZScsICdsaW1pdGVuZCcpO2ZtbGltaXRlbmRFLnNldEF0dHJpYnV0ZSgnaWQnLCAnbGltaXRlbmQnKTsKCWZtbGltaXRlbmRFLnNldEF0dHJpYnV0ZSgndmFsdWUnLCBmbWxpbWl0ZW5kKTsgYWRtaW5Gb3JtLmFwcGVuZENoaWxkKGZtbGltaXRlbmRFKTsKCiAgICBpZiAoIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJub1RpdGxleCIpLmNoZWNrZWQpIHsKICAgICAgbGltaXQgPSBsaW1pdCArICImbm9UaXRsZT0xIjsKCgkgIHZhciBub1RpdGxlRT0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTsKCQlub1RpdGxlRS5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnaGlkZGVuJyk7CgkJbm9UaXRsZUUuc2V0QXR0cmlidXRlKCduYW1lJywgJ25vVGl0bGUnKTtub1RpdGxlRS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ25vVGl0bGUnKTsKCQlub1RpdGxlRS5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgMSk7IGFkbWluRm9ybS5hcHBlbmRDaGlsZChub1RpdGxlRSk7CiAgICB9CgogICAgaWYgKCFkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibm9Gb290ZXJ4IikuY2hlY2tlZCkgewogICAgICBsaW1pdCA9IGxpbWl0ICsgIiZub0Zvb3Rlcj0xIjsKCSAgIHZhciBub0Zvb3RlckU9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7CgkJbm9Gb290ZXJFLnNldEF0dHJpYnV0ZSgndHlwZScsICdoaWRkZW4nKTsKCQlub0Zvb3RlckUuc2V0QXR0cmlidXRlKCduYW1lJywgJ25vRm9vdGVyJyk7bm9Gb290ZXJFLnNldEF0dHJpYnV0ZSgnaWQnLCAnbm9Gb290ZXInKTsKCQlub0Zvb3RlckUuc2V0QXR0cmlidXRlKCd2YWx1ZScsIDEpOyBhZG1pbkZvcm0uYXBwZW5kQ2hpbGQobm9Gb290ZXJFKTsKICAgIH0KCiAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInllc1N1bXgiKS5jaGVja2VkKSB7CiAgICAgIGxpbWl0ID0gbGltaXQgKyAiJnllc1N1bT0xIjsKCSAgdmFyIHllc1N1bUU9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7CgkJeWVzU3VtRS5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnaGlkZGVuJyk7CgkJeWVzU3VtRS5zZXRBdHRyaWJ1dGUoJ25hbWUnLCAneWVzU3VtJyk7eWVzU3VtRS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3llc1N1bScpOwoJCXllc1N1bUUuc2V0QXR0cmlidXRlKCd2YWx1ZScsIDEpOyBhZG1pbkZvcm0uYXBwZW5kQ2hpbGQoeWVzU3VtRSk7CiAgICB9CgogICAgaWYgKCFkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibm9TdW1oYWx4IikuY2hlY2tlZCkgewogICAgICBsaW1pdCA9IGxpbWl0ICsgIiZub1N1bWhhbD0xIjsKCSAgdmFyIG5vU3VtaGFsRT0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTsKCQlub1N1bWhhbEUuc2V0QXR0cmlidXRlKCd0eXBlJywgJ2hpZGRlbicpOwoJCW5vU3VtaGFsRS5zZXRBdHRyaWJ1dGUoJ25hbWUnLCAnbm9TdW1oYWwnKTtub1N1bWhhbEUuc2V0QXR0cmlidXRlKCdpZCcsICdub1N1bWhhbCcpOwoJCW5vU3VtaGFsRS5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgMSk7IGFkbWluRm9ybS5hcHBlbmRDaGlsZChub1N1bWhhbEUpOwogICAgfQoKCiAgICBpZiAoIXhscykgeGxzID0gMDsKCiAgICBpZiAoeGxzID09IDEpIHsKICAgICAgdmFyIHZ4bHMgPSAiJnhscz0xIjsKICAgIH0gZWxzZSB7CiAgICAgIHZhciB2eGxzID0gIiI7CiAgICB9CgogICAgc3dpdGNoICh0aXBlKSB7CiAgICAgIGNhc2UgImtpYl9hX2NldGFrIjoKICAgICAgICBhZG1pbkZvcm0uYWN0aW9uID0KICAgICAgICAgICJpbmRleC5waHA\/UGc9UFImU1BnPWtpYl9hX2NldGFrJmN0az0xIiArIGxpbWl0ICsgdnhsczsKCQl2YXIgc3BnXyA9ICdraWJfYV9jZXRhayc7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgImtpYl9iX2NldGFrIjoKICAgICAgICBhZG1pbkZvcm0uYWN0aW9uID0KICAgICAgICAgICJpbmRleC5waHA\/UGc9UFImU1BnPWtpYl9iX2NldGFrJmN0az0xIiArIGxpbWl0ICsgdnhsczsKCQl2YXIgc3BnXyA9ICdraWJfYl9jZXRhayc7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgImtpYl9jX2NldGFrIjoKICAgICAgICBhZG1pbkZvcm0uYWN0aW9uID0KICAgICAgICAgICJpbmRleC5waHA\/UGc9UFImU1BnPWtpYl9jX2NldGFrJmN0az0xIiArIGxpbWl0ICsgdnhsczsKICAgICAgICB2YXIgc3BnXyA9ICdraWJfY19jZXRhayc7CgkJYnJlYWs7CiAgICAgIGNhc2UgImtpYl9kX2NldGFrIjoKICAgICAgICBhZG1pbkZvcm0uYWN0aW9uID0KICAgICAgICAgICJpbmRleC5waHA\/UGc9UFImU1BnPWtpYl9kX2NldGFrJmN0az0xIiArIGxpbWl0ICsgdnhsczsKCQl2YXIgc3BnXyA9ICdraWJfZF9jZXRhayc7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgImtpYl9lX2NldGFrIjoKICAgICAgICBhZG1pbkZvcm0uYWN0aW9uID0KICAgICAgICAgICJpbmRleC5waHA\/UGc9UFImU1BnPWtpYl9lX2NldGFrJmN0az0xIiArIGxpbWl0ICsgdnhsczsKICAgICAgICB2YXIgc3BnXyA9ICdraWJfZV9jZXRhayc7CgkJYnJlYWs7CiAgICAgIGNhc2UgImtpYl9mX2NldGFrIjoKICAgICAgICBhZG1pbkZvcm0uYWN0aW9uID0KICAgICAgICAgICJpbmRleC5waHA\/UGc9UFImU1BnPWtpYl9mX2NldGFrJmN0az0xIiArIGxpbWl0ICsgdnhsczsKICAgICAgICB2YXIgc3BnXyA9ICdraWJfZl9jZXRhayc7CgkJYnJlYWs7CiAgICAgIGNhc2UgImtpYl9nX2NldGFrIjoKICAgICAgICBhZG1pbkZvcm0uYWN0aW9uID0KICAgICAgICAgICJpbmRleC5waHA\\\/UGc9cnVhbmcmdGlwZT1waWxpaFJ1YW5nS0lSIiwKICAgICAgdHlwZTogIlBPU1QiLAogICAgICBkYXRhOiAkKCIjYWRtaW5Gb3JtIikuc2VyaWFsaXplKCksIC8vZGF0YTokKCcjYWRtaW5Gb3JtJykuc2VyaWFsaXplKCksCiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKICAgICAgICB2YXIgcmVzcCA9IGV2YWwoIigiICsgZGF0YSArICIpIik7CiAgICAgICAgZGVsRWxlbShjb3Zlcik7CiAgICAgICAgaWYgKHJlc3AuZXJyID09ICIiKSB7CiAgICAgICAgICAvL21lLkNsb3NlKCk7CiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY2J4UnVhbmciKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQ7CiAgICAgICAgICBtZS5yZWZyZXNoTGlzdCh0cnVlKTsKICAgICAgICAgIC8vbWUucmVmcmVzaExpc3QodHJ1ZSk7CiAgICAgICAgICAvL2lmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdTZW5zdXNfY29udF9kYWZ0YXInKSkgbWUucmVmcmVzaExpc3QodHJ1ZSk7CiAgICAgICAgICAvL2lmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwZW5hdGF1c2FoYV9jb250X2xpc3QnKSkgUGVuYXRhdXNhaGEucmVmcmVzaExpc3QodHJ1ZSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGFsZXJ0KHJlc3AuZXJyKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogIH07Cn07ClBlbmF0YXVzYWhhT2JqLnByb3RvdHlwZSA9IG5ldyBhamF4KCk7ClBlbmF0YXVzYWhhID0gbmV3IFBlbmF0YXVzYWhhT2JqKCk7CgpmdW5jdGlvbiBkYWZ0YXJvcHNpX2NsaWNrKGhlaWdodG1heCkgewogIC8vYWxlcnQoJ3Rlc3MnKTsKICAvL3ZhciBoZWlnaHRtYXggPSAyMDA7Ly8kb3BzaV9oZWlnaHQ7CiAgdmFyIGhlaWdodG1pbiA9IDY0OwogIHZhciBpY29uX3VwID0gImltYWdlcy90dW1icy91cF8yLnBuZyI7CiAgdmFyIGljb25fZG93biA9ICJpbWFnZXMvdHVtYnMvZG93bl8yLnBuZyI7CiAgdmFyIGRpdl9pZCA9ICJkYWZ0YXJvcHNpX2RpdiI7CiAgdmFyIGRpdl9zbGlkZSA9ICJkYWZ0YXJvcHNpX3NsaWRlX2ltZyI7CgogIHZhciBkaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkaXZfaWQpOwogIHZhciBpbWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkaXZfc2xpZGUpOwogIHZhciBpbWdfc3JjID0gaW1nLmdldEF0dHJpYnV0ZSgic3JjIik7CiAgLy9pZiggaW1nX3NyYyA9PSdpbWFnZXMvdHVtYnMvZG93bi5wbmcnICl7CiAgaWYgKGltZ19zcmMgPT0gaWNvbl9kb3duKSB7CiAgICBpbWcuc2V0QXR0cmlidXRlKCJzcmMiLCBpY29uX3VwKTsKICAgIGRpdi5zdHlsZS5oZWlnaHQgPSBoZWlnaHRtYXg7CiAgfSBlbHNlIHsKICAgIGltZy5zZXRBdHRyaWJ1dGUoInNyYyIsIGljb25fZG93bik7CiAgICBkaXYuc3R5bGUuaGVpZ2h0ID0gaGVpZ2h0bWluOwogIH0KfQoKdmFyIFBlbmF0YXVzYWhhQ2FyaU9iaiA9IGZ1bmN0aW9uKCkgewogIHRoaXMucHJlZml4ID0gInBlbmF0YXVzYWhhIjsKICB0aGlzLmVsQ3VyclBhZ2UgPSAiSGFsRGVmYXVsdCI7CiAgdGhpcy5lbENvdmVyID0gdGhpcy5wcmVmaXggKyAiX0NvdmVyIjsKICB0aGlzLmVsSm1sQ2VrID0gdGhpcy5wcmVmaXggKyAiX2ptbGNlayI7CiAgdGhpcy5lbEptbERhdGFUYW1waWwgPSB0aGlzLnByZWZpeCArICJfam1sZGF0YXBhZ2UiOwogIHRoaXMuZWxDaGVja0JveCA9IHRoaXMucHJlZml4ICsgIl9jYiI7CiAgdGhpcy5lbENvbnRlbnRUb3RhbCA9ICJjbnRUb3RIYXJnYSI7CiAgdGhpcy5lbENvbnRlbnRIYWwgPSB0aGlzLnByZWZpeCArICJfY29udF9oYWwiOwogIHRoaXMuZWxDb250ZW50RGFmdGFyID0gdGhpcy5wcmVmaXggKyAiX2NvbnRfbGlzdCI7CiAgLy90aGlzLnVybCA9ICdwYWdlcy5waHA\/UGc9MDUmU1BnPTAzJzsKICB0aGlzLmZvcm1OYW1lID0gIlVzdWxhbkhhcHVzX2Zvcm1jYXJpIjsKICB0aGlzLnByb3Nlc0dlbmVyYXRlU3RhdHVzID0gMDsKCiAgdGhpcy5PblN1Y2Nlc3MgPSBmdW5jdGlvbigpIHsKICAgIC8vYmFyY29kZSBpbnB1dCAtLS0tLS0tLS0KICAgIC8qb25zY2FuID0gMDsKCQljb25zb2xlLmluZm8oJ3N1Y2NzZXMnK29uc2Nhbik7CgkJaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbnB1dGJhcmNvZGUnKSkgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2lucHV0YmFyY29kZScpLnZhbHVlPScnOwoJCSovCgogICAgdmFyIHJlc3AgPSBldmFsKCIoIiArIHRoaXMuR2V0UmVzcG9uc2VUZXh0KCkgKyAiKSIpOyAvL2FsZXJ0KCd0ZXNzJyk7CiAgICBpZiAocmVzcC5FcnJNc2cgPT0gIiIpIHsKICAgICAgc3dpdGNoIChyZXNwLmRhZnRhclByb3Nlc1tyZXNwLmlkcHJzXSkgewogICAgICAgIGNhc2UgImxpc3QiOgogICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5lbENvbnRlbnREYWZ0YXIpLmlubmVySFRNTCA9CiAgICAgICAgICAgIHJlc3AuY29udGVudC5saXN0OwogICAgICAgICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJjbnRUaXRsZSIpKQogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY250VGl0bGUiKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQudGl0bGU7CiAgICAgICAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImJveGNoZWNrZWQiKSkKICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImJveGNoZWNrZWQiKS52YWx1ZSA9ICIwIjsKICAgICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZm1JRExhbWEiKSkKICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZtSURMYW1hIikudmFsdWUgPSAiIjsKCiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICJzdW0iOgogICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5lbENvbnRlbnRUb3RhbCkuaW5uZXJIVE1MID0KICAgICAgICAgICAgcmVzcC5jb250ZW50LnN1bTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgInN1bWhhbCI6CiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmVsQ29udGVudFRvdGFsKS5pbm5lckhUTUwgPQogICAgICAgICAgICByZXNwLmNvbnRlbnQuc3VtOwogICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5lbENvbnRlbnRIYWwpLmlubmVySFRNTCA9CiAgICAgICAgICAgIHJlc3AuY29udGVudC5oYWw7CiAgICAgICAgICAvL2FsZXJ0KHJlc3AuY29udGVudC5qbWxEYXRhKTsKICAgICAgICAgIGlmIChyZXNwLmNvbnRlbnQuam1sRGF0YSA9PSAwKSBhbGVydCgiQmFyYW5nIFRpZGFrIERpdGVtdWthbiEhIik7CiAgICAgICAgICAvL2JhcmNvZGUucmVzZXQoKTsKICAgICAgICAgIGJyZWFrOwogICAgICB9CiAgICAgIC8vdmFyIGNvdmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvdmVyJyk7CiAgICAgIC8vY292ZXIuc3R5bGUuZGlzcGxheT0nbm9uZSc7CiAgICAgIC8vCWFsZXJ0KCd0ZXMnKTsKICAgIH0gZWxzZSB7CiAgICAgIGFsZXJ0KHJlc3AuRXJyTXNnKTsKICAgIH0KICAgIC8vbmV4dCAtLS0KICAgIHJlc3AuaWRwcnMrKzsKICAgIGlmIChyZXNwLmlkcHJzIDwgcmVzcC5kYWZ0YXJQcm9zZXMubGVuZ3RoKSB7CiAgICAgIHRoaXMuc2VuZFJlcSh7IGlkcHJzOiByZXNwLmlkcHJzLCBkYWZ0YXJQcm9zZXM6IHJlc3AuZGFmdGFyUHJvc2VzIH0pOwogICAgfQogIH07CiAgdGhpcy5zZW5kUmVxID0gZnVuY3Rpb24ob3B0KSB7CiAgICAvL2FsZXJ0KCJ0ZXMyIitvcHQuaWRwcnMpCiAgICB2YXIgb3B0c3RyaW5nID0gSlNPTi5zdHJpbmdpZnkob3B0KTsKICAgIHZhciBTUGcgPSAiMDMiOyAvL2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdHZXRTUGcnKS52YWx1ZTsKICAgIHZhciB1cmwgPSAicGFnZXMucGhwP1BnPTA1Y2FyaSZTUGc9IiArIFNQZyArICImb3B0PSIgKyBvcHRzdHJpbmc7IC8vdmFyIHVybCA9ICdwYWdlcy9wYXkvYWp4cHJzLnBocD9vcHQ9JytvcHRzdHJpbmc7CiAgICB0aGlzLkluaXRpYWxpemVSZXF1ZXN0KCJQT1NUIiwgdXJsKTsKICAgIHZhciBQYXJhbXMgPSB0aGlzLmZvcm0gIT0gIiIgPyBjcmVhdGVQYXJhbUJ5Rm9ybSh0aGlzLmZvcm1OYW1lKSA6ICJudWxsIjsgLy9hbGVydChQYXJhbXMpOwogICAgdGhpcy5Db21taXQoUGFyYW1zKTsKICB9OwogIHRoaXMubG9hZGluZyA9IGZ1bmN0aW9uKCkgewogICAgLy90aGlzLnNlbmRSZXEoIHsgaWRwcnM6IDAsIGRhZnRhclByb3NlczogbmV3IEFycmF5KCdsaXN0Jywnc3VtaGFsJyl9ICk7CiAgICB0aGlzLnNlbmRSZXEoeyBpZHByczogMCwgZGFmdGFyUHJvc2VzOiBuZXcgQXJyYXkoImxpc3QiLCAic3VtaGFsIikgfSk7CiAgfTsKICB0aGlzLnJlZnJlc2hMaXN0ID0gZnVuY3Rpb24ocmVzZXRQYWdlTm8pIHsKICAgIC8vaWYgKHJlc2V0UGFnZU5vKSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmVsQ3VyclBhZ2UpLnZhbHVlPTE7CiAgICAvL2FsZXJ0KCJ0ZXMiKQoKICAgIC8vdmFyIGNvdmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvdmVyJyk7CiAgICAvL2NvdmVyLnN0eWxlLmRpc3BsYXk9J2Jsb2NrJzsKICAgIHZhciBoYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiSGFsRGVmYXVsdCIpLnZhbHVlOyAvL2FsZXJ0KGhhbCkKICAgIHZhciBjdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmVsQ29udGVudEhhbCk7CiAgICBjdG4uaW5uZXJIVE1MID0KICAgICAgIkxvYWRpbmcuLi48aW1nIHNyYz0naW1hZ2VzL3dhaXQuZ2lmJyBoZWlnaHQ9JzE2JyBzdHlsZT0nbWFyZ2luOjQnPiIgKwogICAgICAiPGlucHV0IHR5cGU9J2hpZGRlbicgaWQ9JyIgKwogICAgICB0aGlzLmVsQ3VyclBhZ2UgKwogICAgICAiJyB2YWx1ZT0nIiArCiAgICAgIGhhbCArCiAgICAgICInPiI7CgogICAgdGhpcy5zZW5kUmVxKHsgaWRwcnM6IDAsIGRhZnRhclByb3NlczogbmV3IEFycmF5KCJsaXN0IiwgInN1bWhhbCIpIH0pOwogIH07CiAgdGhpcy5maWx0ZXJpbmcgPSBmdW5jdGlvbigpIHsKICAgIC8vdGhpcy5yZWZyZXNoTGlzdCggdHJ1ZSApOwogIH07CiAgdGhpcy5nb3RvSGFsYW1hbiA9IGZ1bmN0aW9uKG5vdGhpbmcsIEhhbCkgewogICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5lbEN1cnJQYWdlKS52YWx1ZSA9IEhhbDsKICAgIC8vZG9jdW1lbnQuYWRtaW5Gb3JtLnN1Ym1pdCgpOwogICAgdGhpcy5yZWZyZXNoTGlzdChmYWxzZSk7CiAgfTsKICB0aGlzLmVkaXQgPSBmdW5jdGlvbigpIHsKICAgIC8qdmFyIGptbENlayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCB0aGlzLmVsSm1sQ2VrICkudmFsdWU7CgkJdmFyIGVycm1zZyA9ICcnOwoJCWlmKChlcnJtc2c9PScnKSAmJiAoIGptbENlaz4xICkpewllcnJtc2c9ICdQaWxpaCBIYW55YSBTYXR1IERhdGEhJzsJfQoJCWlmKChlcnJtc2c9PScnKSAmJiAoIChqbWxDZWsgPT0gMCl8fChqbWxDZWsgPT0gJycpICApKXsJZXJybXNnPSAnRGF0YSBiZWx1bSBkaXBpbGloISc7CX0KCQlpZihlcnJtc2cgPT0nJyl7CgoJCQl2YXIgam1sZGF0YT0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIHRoaXMuZWxKbWxEYXRhVGFtcGlsICkudmFsdWU7CgkJCWZvcih2YXIgaT0wOyBpIDwgam1sZGF0YTsgaSsrKXsKCQkJCXZhciBib3ggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggdGhpcy5lbENoZWNrQm94ICsgaSk7CgkJCQlpZiggYm94LmNoZWNrZWQpewoJCQkJCWlmIChjb25maXJtKCdCYXRhbGthbiA\/JykpewoJCQkJCQl0aGlzLnNlbmRSZXEoIHsgaWRwcnM6IDAsIGRhZnRhclByb3NlczogbmV3IEFycmF5KCdlZGl0JykgLCBpZHBsaDogYm94LnZhbHVlIH0gKTsKCQkJCQl9CgkJCQl9CgkJCX0KCQl9ZWxzZXsKCQkJYWxlcnQoZXJybXNnKTsKCQl9Ki8KICB9OwogIHRoaXMuY2V0YWtCcmcgPSBmdW5jdGlvbihvcCkgewogICAgLyphZG1pbkZvcm0uYWN0aW9uPSc\/T3A9JytvcCsnJlNQZz1jZXRha19vbmUnOwoJCWFkbWluRm9ybS50YXJnZXQ9J19ibGFuayc7CgkJYWRtaW5Gb3JtLnN1Ym1pdCgpOwkqLwogIH07CiAgdGhpcy5jZXRha0hhbCA9IGZ1bmN0aW9uKG9wKSB7CiAgICAvKnZhciBvcHRzdHJpbmcgPSBKU09OLnN0cmluZ2lmeSggeyBpZHByczogMCwgZGFmdGFyUHJvc2VzOiBuZXcgQXJyYXkoJ2NldGFrX2hhbCcpIH0gKTsKCQlhZG1pbkZvcm0uYWN0aW9uPSB0aGlzLnVybCsnJm9wdD0nK2VuY29kZVVSSShvcHRzdHJpbmcpOwoJCS8vYWxlcnQoYWRtaW5Gb3JtLmFjdGlvbik7CgkJYWRtaW5Gb3JtLnRhcmdldD0nX2JsYW5rJzsKCQlhZG1pbkZvcm0uc3VibWl0KCk7CSovCiAgfTsKICB0aGlzLmNldGFrQWxsID0gZnVuY3Rpb24ob3ApIHsKICAgIC8vYWRtaW5Gb3JtLmFjdGlvbj0nP09wPScrb3ArJyZTUGc9Y2V0YWtfYWxsJzsKICAgIC8qdmFyIG9wdHN0cmluZyA9IEpTT04uc3RyaW5naWZ5KCB7IGlkcHJzOiAwLCBkYWZ0YXJQcm9zZXM6IG5ldyBBcnJheSgnY2V0YWtfYWxsJykgfSApOwoJCWFkbWluRm9ybS5hY3Rpb249IHRoaXMudXJsKycmb3B0PScrb3B0c3RyaW5nOwoJCWFkbWluRm9ybS50YXJnZXQ9J19ibGFuayc7CgkJYWRtaW5Gb3JtLnN1Ym1pdCgpOwkqLwogIH07CgogIC8vIGRhdGE6ewogIC8vICAgICBjMSA6ICQoIiNmbVVSVVNBTiIpLnZhbCgpLAogIC8vICAgICBjIDogJCgiI2ZtU0tQRCIpLnZhbCgpLAogIC8vICAgICBkIDogJCgiI2ZtVU5JVCIpLnZhbCgpLAogIC8vICAgICBlIDogJCgiI2ZtU1VCVU5JVCIpLnZhbCgpLAogIC8vICAgICBlMSA6ICQoIiNmbVNFS1NJIikudmFsKCksCiAgLy8gfSwKICB0aGlzLmZvcm1Ob3JlZyA9IGZ1bmN0aW9uKCkgewoJCXZhciBlcnI9Jyc7CgkJaWYgKGVyciA9PScnICl7CgkJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyS0InOwoJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOwoJCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CgkJCSQuYWpheCh7CgkJICAgICAgdHlwZTonUE9TVCcsCiAgICAgICAgICBkYXRhOiAkKCIjYWRtaW5Gb3JtIikuc2VyaWFsaXplKCkrIiZjMT0iKyQoIiNmbVVSVVNBTiIpLnZhbCgpKyImYz0iKyQoIiNmbVNLUEQiKS52YWwoKSsiJmQ9IiskKCIjZm1VTklUIikudmFsKCkrIiZlPSIrJCgiI2ZtU1VCVU5JVCIpLnZhbCgpKyImZTE9IiskKCIjZm1TRUtTSSIpLnZhbCgpLAoJCQkgIAl1cmw6ICdwYWdlcy5waHA\/UGc9Z2VuZXJhdGVOb1JlZyZ0aXBlPWZvcm1Ob3JlZycsCgkJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKCQkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CgkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsKCQkJICAJfQoJCQl9KTsKCQl9ZWxzZXsKCQkgCWFsZXJ0KGVycik7CgkJfQoKICB9OwogIHRoaXMuQ2xvc2VGb3JtTm9yZWcgPSBmdW5jdGlvbigpewoJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyS0InOwoJCWlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKSkgZGVsRWxlbShjb3Zlcik7CiAgICAvLyB2YXIgY292ZXIyID0gdGhpcy5wcmVmaXgrJ19mb3JtY292ZXJfbG9hZCc7CiAgICAvLyBpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcjIpKSBkZWxFbGVtKGNvdmVyMik7CgoJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2F1dG8nOwogICAgdGhpcy5wcm9zZXNHZW5lcmF0ZVN0YXR1cyA9MDsKCX07CiAgdGhpcy5hYm9ydFByb3NlcyA9IGZ1bmN0aW9uKCl7CiAgICB0aGlzLnByb3Nlc0dlbmVyYXRlU3RhdHVzID0wOwogICAgdGhpcy5DbG9zZUZvcm1Ob3JlZygpOwoJfTsKICB0aGlzLmdldEp1bWxhaERhdGEgPSBmdW5jdGlvbigpewogICAgdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3JtY292ZXJfbG9hZCc7CiAgICBhZGRDb3ZlclBhZ2UyKGNvdmVyLDU1NTUsdHJ1ZSxmYWxzZSk7CiAgICAkLmFqYXgoewoJCQkJdHlwZTonUE9TVCcsCgkJCQlkYXRhOnsKICAgICAgICAgICAgdGFodW4gOiAkKCIjZmlsdGVyVGFodW5CdWt1IikudmFsKCksCiAgICAgICAgICAgIGZpbHRlcktJQiA6ICQoIiNmaWx0ZXJLSUIiKS52YWwoKSwKICAgICAgICAgICAgYzEgOiAkKCIjZm1VUlVTQU4iKS52YWwoKSwKICAgICAgICAgICAgYyA6ICQoIiNmbVNLUEQiKS52YWwoKSwKICAgICAgICAgICAgZCA6ICQoIiNmbVVOSVQiKS52YWwoKSwKICAgICAgICAgICAgZSA6ICQoIiNmbVNVQlVOSVQiKS52YWwoKSwKICAgICAgICAgICAgZTEgOiAkKCIjZm1TRUtTSSIpLnZhbCgpLAogICAgICAgIH0sCgkJCQl1cmw6ICdwYWdlcy5waHA\/UGc9Z2VuZXJhdGVOb1JlZyZ0aXBlPWdldEp1bWxhaERhdGEnLAoJCQkJCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKICAgICAgICAgIGRlbEVsZW0oY292ZXIpOwoJCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsKCQkJCQlpZihyZXNwLmVycj09JycpewogICAgICAgICAgICAkKCIjanVtbGFoRGF0YUdlbmVyYXRlIikudmFsKHJlc3AuY29udGVudC5qdW1sYWhEYXRhR2VuZXJhdGUpOwogICAgICAgICAgICAkKCIjanVtbGFoRGF0YSIpLnZhbChyZXNwLmNvbnRlbnQuanVtbGFoRGF0YUdlbmVyYXRlKTsKCQkJCQl9ZWxzZXsKICAgICAgICAgICAgJCgiI2p1bWxhaERhdGFHZW5lcmF0ZSIpLnZhbCgnMCcpOwogICAgICAgICAgICAkKCIjanVtbGFoRGF0YSIpLnZhbCgnMCcpOwoJCQkJCQlhbGVydChyZXNwLmVycik7CgkJCQkJfQoJCQkJCX0KCQkJfSk7Cgl9OwoKICB0aGlzLmV4ZWN1dGVHZW5lcmF0ZU5vcmVnID0gZnVuY3Rpb24oKXsKCQl2YXIgbWU9IHRoaXM7CiAgICB2YXIgZXJyb3JzID0gIiI7CiAgICBpZigkKCIjanVtbGFoRGF0YUdlbmVyYXRlIikudmFsKCkgPiAkKCIjanVtbGFoRGF0YSIpLnZhbCgpKXsKICAgICAgZXJyb3JzID0gIkp1bWxhaCBHZW5lcmF0ZSBMZWJpaCI7CiAgICB9CiAgICBpZigkKCIjanVtbGFoRGF0YUdlbmVyYXRlIikudmFsKCkgPT0gJycgfHwgJCgiI2p1bWxhaERhdGFHZW5lcmF0ZSIpLnZhbCgpID09JzAnKXsKICAgICAgZXJyb3JzID0gImlzaSBqdW1sYWggR2VuZXJhdGUiOwogICAgfQoJCWlmKGVycm9ycyA9PSAiIil7CiAgICAgIHZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyX2xvYWQnOwogIAkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOwogIAkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsKICAJCSQuYWpheCh7CiAgCQkJCXR5cGU6J1BPU1QnLAogIAkJCQlkYXRhOnsKICAgICAgICAgICAgICB0YWh1biA6ICQoIiNmaWx0ZXJUYWh1bkJ1a3UiKS52YWwoKSwKICAgICAgICAgICAgICBqdW1sYWhEYXRhR2VuZXJhdGUgOiAkKCIjanVtbGFoRGF0YUdlbmVyYXRlIikudmFsKCksCiAgICAgICAgICAgICAgZmlsdGVyTm9SZWdLb2RlQmFyYW5nIDogJCgiI2ZpbHRlck5vUmVnS29kZUJhcmFuZyIpLnZhbCgpLAogICAgICAgICAgICAgIGZpbHRlcktJQiA6ICQoIiNmaWx0ZXJLSUIiKS52YWwoKSwKICAgICAgICAgICAgICBjMSA6ICQoIiNmbVVSVVNBTiIpLnZhbCgpLAogICAgICAgICAgICAgIGMgOiAkKCIjZm1TS1BEIikudmFsKCksCiAgICAgICAgICAgICAgZCA6ICQoIiNmbVVOSVQiKS52YWwoKSwKICAgICAgICAgICAgICBlIDogJCgiI2ZtU1VCVU5JVCIpLnZhbCgpLAogICAgICAgICAgICAgIGUxIDogJCgiI2ZtU0VLU0kiKS52YWwoKSwKICAgICAgICAgIH0sCiAgCQkJCXVybDogJ3BhZ2VzLnBocD9QZz1nZW5lcmF0ZU5vUmVnJnRpcGU9ZXhlY3V0ZUdlbmVyYXRlTm9yZWcnLAogIAkJCQkJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewogIAkJCQkJZGVsRWxlbShjb3Zlcik7CiAgCQkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CiAgCQkJCQlpZihyZXNwLmVycj09JycpewogICAgICAgICAgICAgICQoIiNidXR0b25FeGVjdXRlIikudmFsKCJTdG9wIik7CiAgICAgICAgICAgICAgJCgiI2J1dHRvbkV4ZWN1dGUiKS5hdHRyKCJvbmNsaWNrIiwiUGVuYXRhdXNhaGFDYXJpLmFib3J0UHJvc2VzKCk7Iik7CiAgCQkJCQkJaWYocmVzcC5jb250ZW50Lmp1bWxhaERhdGEgPT0gMCl7CiAgCQkJCQkJCS8vIGFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsKICAJCQkJCQkJLy8gZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsKICAJCQkJCQkJbWUuVXBkYXRlR2VuZXJhdGVEb25lKCk7CiAgCQkJCQkJfWVsc2V7CiAgCQkJCQkJCS8vIGFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsKICAJCQkJCQkJLy8gZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsKICAJCQkJCQkJbWUucHJvc2VzR2VuZXJhdGVOb1JlZygxLCAiYmVsb20iLHJlc3AuY29udGVudC5qdW1sYWhEYXRhLHJlc3AuY29udGVudC5kYXRhSGl0dW5nLHJlc3AuY29udGVudC5pZEhpc3RvcnkpOwogICAgICAgICAgICAgICAgJCgiI2ZpbHRlcktJQiIpLmF0dHIoImRpc2FibGVkIix0cnVlKTsKICAgICAgICAgICAgICAgICQoIiNqdW1sYWhEYXRhR2VuZXJhdGUiKS5hdHRyKCJyZWFkT25seSIsdHJ1ZSk7CiAgCQkJCQkJfQoKICAJCQkJCX1lbHNlewogIAkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsKICAJCQkJCX0KICAJCQkJCX0KICAJCQl9KTsKICAgIH1lbHNlewogICAgICBhbGVydChlcnJvcnMpOwogICAgfQoJfTsKICB0aGlzLmV4ZWN1dGVHZW5lcmF0ZU5vcmVnU2VsZWN0ZWQgPSBmdW5jdGlvbigpewoJCXZhciBtZT0gdGhpczsKICAgIHZhciBlcnJvcnMgPSAiIjsKCgkJaWYoZXJyb3JzID09ICIiKXsKICAgICAgdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3JtY292ZXJfbG9hZCc7CiAgCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CiAgCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOwogIAkJJC5hamF4KHsKICAJCQkJdHlwZTonUE9TVCcsCiAgCQkJCWRhdGE6ewogICAgICAgICAgICAgIHRhaHVuIDogJCgiI2ZpbHRlclRhaHVuQnVrdSIpLnZhbCgpLAogICAgICAgICAgICAgIGp1bWxhaERhdGFHZW5lcmF0ZSA6ICQoIiNqdW1sYWhEYXRhR2VuZXJhdGUiKS52YWwoKSwKICAgICAgICAgICAgICBsaXN0SWRCaSA6ICQoIiNsaXN0SWRCaSIpLnZhbCgpLAogICAgICAgICAgfSwKICAJCQkJdXJsOiAncGFnZXMucGhwP1BnPWdlbmVyYXRlTm9SZWcmdGlwZT1leGVjdXRlR2VuZXJhdGVOb3JlZ1NlbGVjdGVkJywKICAJCQkJCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKICAJCQkJCWRlbEVsZW0oY292ZXIpOwogIAkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwogIAkJCQkJaWYocmVzcC5lcnI9PScnKXsKICAgICAgICAgICAgICAkKCIjYnV0dG9uRXhlY3V0ZSIpLnZhbCgiU3RvcCIpOwogICAgICAgICAgICAgICQoIiNidXR0b25FeGVjdXRlIikuYXR0cigib25jbGljayIsIlBlbmF0YXVzYWhhQ2FyaS5hYm9ydFByb3NlcygpOyIpOwogIAkJCQkJCWlmKHJlc3AuY29udGVudC5qdW1sYWhEYXRhID09IDApewogIAkJCQkJCQkvLyBhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CiAgCQkJCQkJCS8vIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7CiAgCQkJCQkJCW1lLlVwZGF0ZUdlbmVyYXRlRG9uZSgpOwogIAkJCQkJCX1lbHNlewogIAkJCQkJCQkvLyBhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CiAgCQkJCQkJCS8vIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7CiAgCQkJCQkJCW1lLnByb3Nlc0dlbmVyYXRlTm9SZWcoMSwgImJlbG9tIixyZXNwLmNvbnRlbnQuanVtbGFoRGF0YSxyZXNwLmNvbnRlbnQuZGF0YUhpdHVuZyxyZXNwLmNvbnRlbnQuaWRIaXN0b3J5KTsKICAgICAgICAgICAgICAgICQoIiNmaWx0ZXJLSUIiKS5hdHRyKCJkaXNhYmxlZCIsdHJ1ZSk7CiAgICAgICAgICAgICAgICAkKCIjanVtbGFoRGF0YUdlbmVyYXRlIikuYXR0cigicmVhZE9ubHkiLHRydWUpOwogIAkJCQkJCX0KCiAgCQkJCQl9ZWxzZXsKICAJCQkJCQlhbGVydChyZXNwLmVycik7CiAgCQkJCQl9CiAgCQkJCQl9CiAgCQkJfSk7CiAgICB9ZWxzZXsKICAgICAgYWxlcnQoZXJyb3JzKTsKICAgIH0KCX07CgogIHRoaXMucHJvc2VzR2VuZXJhdGVOb1JlZyA9IGZ1bmN0aW9uKHVydXRhbixzdGF0dXNTZWxlc2FpLGp1bWxhaERhdGEsZGF0YUhpdHVuZyxpZEhpc3RvcnlNaWdyYXNpKXsKCQl2YXIgbWU9IHRoaXM7CgkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3JtY292ZXInOwoJCXZhciBvYmogPSBKU09OLnBhcnNlKGRhdGFIaXR1bmcpOwogICAgaWYodGhpcy5wcm9zZXNHZW5lcmF0ZVN0YXR1cyA9PSAxKXsKICAgICAgc3RhdHVzU2VsZXNhaSA9ICJPSyI7CiAgICB9CgkJaWYoc3RhdHVzU2VsZXNhaSAhPSAnT0snKXsKCQkkLmFqYXgoewoJCQkgdHlwZTonUE9TVCcsCgkJCSBkYXRhOnsKCQkJCQkJCW5vbW9yUG9zdCA6IHVydXRhbiwKCQkJCQkJCWlkTWFwcGluZyA6IG9ialt1cnV0YW4gLSAxXSwKCQkJCQkJCWp1bWxhaERhdGEgOiBqdW1sYWhEYXRhLAoJCQkJCQkJaWRIaXN0b3J5TWlncmFzaSA6IGlkSGlzdG9yeU1pZ3Jhc2ksCgkJCSB9LAoJCQkgdXJsOiAncGFnZXMucGhwP1BnPWdlbmVyYXRlTm9SZWcmdGlwZT1wcm9zZXNHZW5lcmF0ZU5vUmVnJywKCQkJICBlcnJvcjogZnVuY3Rpb24oKSB7CgkJCQkJCW1lLnByb3Nlc01pZ3Jhc2kodXJ1dGFuLHN0YXR1c1NlbGVzYWksanVtbGFoRGF0YSxkYXRhSGl0dW5nLGlkSGlzdG9yeU1pZ3Jhc2kpOwoJCQkJfSwKCQkJCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsKCQkJCWlmKHJlc3AuZXJyPT0nJyl7CiAgICAgICAgICB2YXIgc3NzID0gdXJ1dGFuIDsKCQkJCQl1cnV0YW4gPSB1cnV0YW4gKyAxOwoJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzdGF0dXN0eHQiKS5zdHlsZS53aWR0aCA9IHJlc3AuY29udGVudC5wZXJzZW4rIiUiOwoJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzdGF0dXN0eHQiKS5pbm5lckhUTUwgPSAiKCAiK3NzcysiLyIranVtbGFoRGF0YSsiICkgIiArIHJlc3AuY29udGVudC5wZXJzZW4rIiUiOwoJCQkJCW1lLnByb3Nlc0dlbmVyYXRlTm9SZWcodXJ1dGFuLCByZXNwLmNvbnRlbnQuc3RhdHVzU2VsZXNhaSxqdW1sYWhEYXRhLGRhdGFIaXR1bmcsaWRIaXN0b3J5TWlncmFzaSk7CgkJCQl9ZWxzZXsKCQkJCQlhbGVydChyZXNwLmVycik7CgkJCQkJc2V0VGltZW91dChmdW5jdGlvbiBteUZ1bmN0aW9uUGVyc2VuKCkge2RlbEVsZW0obWUucHJlZml4KydfZm9ybWNvdmVyX2xvYWQnKTt9LDUwMCk7CgkJCQl9CgkJCQl9CgkJfSk7CgkJfWVsc2V7CgkJCXNldFRpbWVvdXQoZnVuY3Rpb24gbXlGdW5jdGlvblBlcnNlbigpIHttZS5VcGRhdGVHZW5lcmF0ZURvbmUoKTt9LDExMCk7CgkJfQoJfTsKCiAgdGhpcy5VcGRhdGVHZW5lcmF0ZURvbmU9IGZ1bmN0aW9uKCl7CgkJdmFyIG1lID0gdGhpczsKICAgIGFsZXJ0KCJUZXJnZW5lcmF0ZSIpOwogICAgJCgiI2ZpbHRlcktJQiIpLmF0dHIoImRpc2FibGVkIixmYWxzZSk7CiAgICAkKCIjanVtbGFoRGF0YUdlbmVyYXRlIikuYXR0cigicmVhZE9ubHkiLGZhbHNlKTsKICAgIG1lLkNsb3NlRm9ybU5vcmVnKCk7CiAgICBQZW5hdGF1c2FoYS5yZWZyZXNoTGlzdCh0cnVlKTsKCgl9OwogIC8qdGhpcy5zaG93QXNldExhaW4gPWZ1bmN0aW9uKCl7CgkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZtS09OREJSRycpLnZhbHVlID0gMzsKCQlhZG1pbkZvcm0uYWN0aW9uPSc\/UGc9MDUmU1BnPTAzJzsKCQlhZG1pbkZvcm0udGFyZ2V0PScnOwoJCWFkbWluRm9ybS5zdWJtaXQoKTsKCX0qLwp9OwpQZW5hdGF1c2FoYUNhcmlPYmoucHJvdG90eXBlID0gbmV3IGFqYXgoKTsKUGVuYXRhdXNhaGFDYXJpID0gbmV3IFBlbmF0YXVzYWhhQ2FyaU9iaigpOwoKLyoKYmFyY29kZUNhcmlCYXJhbmdFeGVjID0gZnVuY3Rpb24oKXsKCS8vYWxlcnQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2JhcmNvZGVDYXJpQmFyYW5nX2lucHV0JykudmFsdWUpOwoJaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2JhcmNvZGVDYXJpQmFyYW5nX2lucHV0JykpewoKCgkJdmFyIGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYmFyY29kZUNhcmlCYXJhbmdfaW5wdXQnKTsKCQl2YXIgc3RyID0gZS52YWx1ZTsKCQlpZiAoc3RyLmxlbmd0aD49MjgpewoJCQkvL3RyaWdnZXIgaW5wdXQgYmFyY29kZSB0byBmaWx0ZXIgLy9hbGVydChzdHIpOwoJCQkvL21lLm9uc2NhbiA9IDE7CgkJCS8vZS5yZWFkT25seSA9IHRydWU7CS8vY29uc29sZS5pbmZvKCdyZXF1ZXN0Jyt0aGlzLm9uc2Nhbik7CgkJCS8vdGhpcy5rb2RlID0gc3RyOwoJCQkvL3RoaXMuc2V0SW5wdXRSZWFkeSgpOwkvL2NvbnNvbGUuaW5mbygnY2VrICcrIG1lLm9uc2NhbisnIG5hbWU6JyttZS5uYW1lKTsKCQkJUGVuYXRhdXNhaGEucmVmcmVzaExpc3QodHJ1ZSk7CgkJfQoJfQp9CgpzZXRJbnRlcnZhbChmdW5jdGlvbigpewoJCQlldmFsKCdiYXJjb2RlQ2FyaUJhcmFuZ0V4ZWMoKScpCgkJCX0sCgkJCTEwMDAKKTsKKi8K",
    "size": "43248"
}