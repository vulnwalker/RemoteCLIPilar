{
    "namaFile": "lib\/js\/calendar\/calendar_mini.js",
    "lastUpdate": "2013-12-16+17:18:27.00",
    "contentFile": "LyogIENvcHlyaWdodCBNaWhhaSBCYXpvbiwgMjAwMiAgfCAgaHR0cDovL3N0dWRlbnRzLmluZm9pYXNpLnJvL35taXNob28NCiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KICoNCiAqIFRoZSBESFRNTCBDYWxlbmRhciwgdmVyc2lvbiAwLjkuMiAiVGhlIGFydCBvZiBkYXRlIHNlbGVjdGlvbiINCiAqDQogKiBEZXRhaWxzIGFuZCBsYXRlc3QgdmVyc2lvbiBhdDoNCiAqIGh0dHA6Ly9zdHVkZW50cy5pbmZvaWFzaS5yby9+bWlzaG9vL3NpdGUvY2FsZW5kYXIuZXBsDQogKg0KICogRmVlbCBmcmVlIHRvIHVzZSB0aGlzIHNjcmlwdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbA0KICogUHVibGljIExpY2Vuc2UsIGFzIGxvbmcgYXMgeW91IGRvIG5vdCByZW1vdmUgb3IgYWx0ZXIgdGhpcyBub3RpY2UuDQogKi8NCg0KLy8gJElkOiBjYWxlbmRhcl9taW5pLmpzIDQ5IDIwMDUtMDktMTUgMDI6NTU6MjdaIHJodWsgJA0KDQpDYWxlbmRhciA9IGZ1bmN0aW9uIChtb25kYXlGaXJzdCwgZGF0ZVN0ciwgb25TZWxlY3RlZCwgb25DbG9zZSkgeyB0aGlzLmFjdGl2ZURpdiA9IG51bGw7IHRoaXMuY3VycmVudERhdGVFbCA9IG51bGw7IHRoaXMuY2hlY2tEaXNhYmxlZCA9IG51bGw7IHRoaXMudGltZW91dCA9IG51bGw7IHRoaXMub25TZWxlY3RlZCA9IG9uU2VsZWN0ZWQgfHwgbnVsbDsgdGhpcy5vbkNsb3NlID0gb25DbG9zZSB8fCBudWxsOyB0aGlzLmRyYWdnaW5nID0gZmFsc2U7IHRoaXMuaGlkZGVuID0gZmFsc2U7IHRoaXMubWluWWVhciA9IDE5NzA7IHRoaXMubWF4WWVhciA9IDIwNTA7IHRoaXMuZGF0ZUZvcm1hdCA9IENhbGVuZGFyLl9UVFsiREVGX0RBVEVfRk9STUFUIl07IHRoaXMudHREYXRlRm9ybWF0ID0gQ2FsZW5kYXIuX1RUWyJUVF9EQVRFX0ZPUk1BVCJdOyB0aGlzLmlzUG9wdXAgPSB0cnVlOyB0aGlzLndlZWtOdW1iZXJzID0gdHJ1ZTsgdGhpcy5tb25kYXlGaXJzdCA9IG1vbmRheUZpcnN0OyB0aGlzLmRhdGVTdHIgPSBkYXRlU3RyOyB0aGlzLmFyX2RheXMgPSBudWxsOyB0aGlzLnRhYmxlID0gbnVsbDsgdGhpcy5lbGVtZW50ID0gbnVsbDsgdGhpcy50Ym9keSA9IG51bGw7IHRoaXMuZmlyc3RkYXluYW1lID0gbnVsbDsgdGhpcy5tb250aHNDb21ibyA9IG51bGw7IHRoaXMueWVhcnNDb21ibyA9IG51bGw7IHRoaXMuaGlsaXRlZE1vbnRoID0gbnVsbDsgdGhpcy5hY3RpdmVNb250aCA9IG51bGw7IHRoaXMuaGlsaXRlZFllYXIgPSBudWxsOyB0aGlzLmFjdGl2ZVllYXIgPSBudWxsOyBpZiAoIUNhbGVuZGFyLl9ETjMpIHsgdmFyIGFyID0gbmV3IEFycmF5KCk7IGZvciAodmFyIGkgPSA4OyBpID4gMDspIHsgYXJbLS1pXSA9IENhbGVuZGFyLl9ETltpXS5zdWJzdHIoMCwgMyk7fQ0KQ2FsZW5kYXIuX0ROMyA9IGFyOyBhciA9IG5ldyBBcnJheSgpOyBmb3IgKHZhciBpID0gMTI7IGkgPiAwOykgeyBhclstLWldID0gQ2FsZW5kYXIuX01OW2ldLnN1YnN0cigwLCAzKTt9DQpDYWxlbmRhci5fTU4zID0gYXI7fQ0KfTsgQ2FsZW5kYXIuX0MgPSBudWxsOyBDYWxlbmRhci5pc19pZSA9ICggKG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5pbmRleE9mKCJtc2llIikgIT0gLTEpICYmDQoobmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLmluZGV4T2YoIm9wZXJhIikgPT0gLTEpICk7IENhbGVuZGFyLl9ETjMgPSBudWxsOyBDYWxlbmRhci5fTU4zID0gbnVsbDsgQ2FsZW5kYXIuZ2V0QWJzb2x1dGVQb3MgPSBmdW5jdGlvbihlbCkgeyB2YXIgciA9IHsgeDogZWwub2Zmc2V0TGVmdCwgeTogZWwub2Zmc2V0VG9wIH07IGlmIChlbC5vZmZzZXRQYXJlbnQpIHsgdmFyIHRtcCA9IENhbGVuZGFyLmdldEFic29sdXRlUG9zKGVsLm9mZnNldFBhcmVudCk7IHIueCArPSB0bXAueDsgci55ICs9IHRtcC55O30NCnJldHVybiByO307IENhbGVuZGFyLmlzUmVsYXRlZCA9IGZ1bmN0aW9uIChlbCwgZXZ0KSB7IHZhciByZWxhdGVkID0gZXZ0LnJlbGF0ZWRUYXJnZXQ7IGlmICghcmVsYXRlZCkgeyB2YXIgdHlwZSA9IGV2dC50eXBlOyBpZiAodHlwZSA9PSAibW91c2VvdmVyIikgeyByZWxhdGVkID0gZXZ0LmZyb21FbGVtZW50O30gZWxzZSBpZiAodHlwZSA9PSAibW91c2VvdXQiKSB7IHJlbGF0ZWQgPSBldnQudG9FbGVtZW50O30NCn0NCndoaWxlIChyZWxhdGVkKSB7IGlmIChyZWxhdGVkID09IGVsKSB7IHJldHVybiB0cnVlO30NCnJlbGF0ZWQgPSByZWxhdGVkLnBhcmVudE5vZGU7fQ0KcmV0dXJuIGZhbHNlO307IENhbGVuZGFyLnJlbW92ZUNsYXNzID0gZnVuY3Rpb24oZWwsIGNsYXNzTmFtZSkgeyBpZiAoIShlbCAmJiBlbC5jbGFzc05hbWUpKSB7IHJldHVybjt9DQp2YXIgY2xzID0gZWwuY2xhc3NOYW1lLnNwbGl0KCIgIik7IHZhciBhciA9IG5ldyBBcnJheSgpOyBmb3IgKHZhciBpID0gY2xzLmxlbmd0aDsgaSA+IDA7KSB7IGlmIChjbHNbLS1pXSAhPSBjbGFzc05hbWUpIHsgYXJbYXIubGVuZ3RoXSA9IGNsc1tpXTt9DQp9DQplbC5jbGFzc05hbWUgPSBhci5qb2luKCIgIik7fTsgQ2FsZW5kYXIuYWRkQ2xhc3MgPSBmdW5jdGlvbihlbCwgY2xhc3NOYW1lKSB7IENhbGVuZGFyLnJlbW92ZUNsYXNzKGVsLCBjbGFzc05hbWUpOyBlbC5jbGFzc05hbWUgKz0gIiAiICsgY2xhc3NOYW1lO307IENhbGVuZGFyLmdldEVsZW1lbnQgPSBmdW5jdGlvbihldikgeyBpZiAoQ2FsZW5kYXIuaXNfaWUpIHsgcmV0dXJuIHdpbmRvdy5ldmVudC5zcmNFbGVtZW50O30gZWxzZSB7IHJldHVybiBldi5jdXJyZW50VGFyZ2V0O30NCn07IENhbGVuZGFyLmdldFRhcmdldEVsZW1lbnQgPSBmdW5jdGlvbihldikgeyBpZiAoQ2FsZW5kYXIuaXNfaWUpIHsgcmV0dXJuIHdpbmRvdy5ldmVudC5zcmNFbGVtZW50O30gZWxzZSB7IHJldHVybiBldi50YXJnZXQ7fQ0KfTsgQ2FsZW5kYXIuc3RvcEV2ZW50ID0gZnVuY3Rpb24oZXYpIHsgaWYgKENhbGVuZGFyLmlzX2llKSB7IHdpbmRvdy5ldmVudC5jYW5jZWxCdWJibGUgPSB0cnVlOyB3aW5kb3cuZXZlbnQucmV0dXJuVmFsdWUgPSBmYWxzZTt9IGVsc2UgeyBldi5wcmV2ZW50RGVmYXVsdCgpOyBldi5zdG9wUHJvcGFnYXRpb24oKTt9DQp9OyBDYWxlbmRhci5hZGRFdmVudCA9IGZ1bmN0aW9uKGVsLCBldm5hbWUsIGZ1bmMpIHsgaWYgKENhbGVuZGFyLmlzX2llKSB7IGVsLmF0dGFjaEV2ZW50KCJvbiIgKyBldm5hbWUsIGZ1bmMpO30gZWxzZSB7IGVsLmFkZEV2ZW50TGlzdGVuZXIoZXZuYW1lLCBmdW5jLCB0cnVlKTt9DQp9OyBDYWxlbmRhci5yZW1vdmVFdmVudCA9IGZ1bmN0aW9uKGVsLCBldm5hbWUsIGZ1bmMpIHsgaWYgKENhbGVuZGFyLmlzX2llKSB7IGVsLmRldGFjaEV2ZW50KCJvbiIgKyBldm5hbWUsIGZ1bmMpO30gZWxzZSB7IGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZuYW1lLCBmdW5jLCB0cnVlKTt9DQp9OyBDYWxlbmRhci5jcmVhdGVFbGVtZW50ID0gZnVuY3Rpb24odHlwZSwgcGFyZW50KSB7IHZhciBlbCA9IG51bGw7IGlmIChkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMpIHsgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiLCB0eXBlKTt9IGVsc2UgeyBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodHlwZSk7fQ0KaWYgKHR5cGVvZiBwYXJlbnQgIT0gInVuZGVmaW5lZCIpIHsgcGFyZW50LmFwcGVuZENoaWxkKGVsKTt9DQpyZXR1cm4gZWw7fTsgQ2FsZW5kYXIuX2FkZF9ldnMgPSBmdW5jdGlvbihlbCkgeyB3aXRoIChDYWxlbmRhcikgeyBhZGRFdmVudChlbCwgIm1vdXNlb3ZlciIsIGRheU1vdXNlT3Zlcik7IGFkZEV2ZW50KGVsLCAibW91c2Vkb3duIiwgZGF5TW91c2VEb3duKTsgYWRkRXZlbnQoZWwsICJtb3VzZW91dCIsIGRheU1vdXNlT3V0KTsgaWYgKGlzX2llKSB7IGFkZEV2ZW50KGVsLCAiZGJsY2xpY2siLCBkYXlNb3VzZURibENsaWNrKTsgZWwuc2V0QXR0cmlidXRlKCJ1bnNlbGVjdGFibGUiLCB0cnVlKTt9DQp9DQp9OyBDYWxlbmRhci5maW5kTW9udGggPSBmdW5jdGlvbihlbCkgeyBpZiAodHlwZW9mIGVsLm1vbnRoICE9ICJ1bmRlZmluZWQiKSB7IHJldHVybiBlbDt9IGVsc2UgaWYgKHR5cGVvZiBlbC5wYXJlbnROb2RlLm1vbnRoICE9ICJ1bmRlZmluZWQiKSB7IHJldHVybiBlbC5wYXJlbnROb2RlO30NCnJldHVybiBudWxsO307IENhbGVuZGFyLmZpbmRZZWFyID0gZnVuY3Rpb24oZWwpIHsgaWYgKHR5cGVvZiBlbC55ZWFyICE9ICJ1bmRlZmluZWQiKSB7IHJldHVybiBlbDt9IGVsc2UgaWYgKHR5cGVvZiBlbC5wYXJlbnROb2RlLnllYXIgIT0gInVuZGVmaW5lZCIpIHsgcmV0dXJuIGVsLnBhcmVudE5vZGU7fQ0KcmV0dXJuIG51bGw7fTsgQ2FsZW5kYXIuc2hvd01vbnRoc0NvbWJvID0gZnVuY3Rpb24gKCkgeyB2YXIgY2FsID0gQ2FsZW5kYXIuX0M7IGlmICghY2FsKSB7IHJldHVybiBmYWxzZTt9DQp2YXIgY2FsID0gY2FsOyB2YXIgY2QgPSBjYWwuYWN0aXZlRGl2OyB2YXIgbWMgPSBjYWwubW9udGhzQ29tYm87IGlmIChjYWwuaGlsaXRlZE1vbnRoKSB7IENhbGVuZGFyLnJlbW92ZUNsYXNzKGNhbC5oaWxpdGVkTW9udGgsICJoaWxpdGUiKTt9DQppZiAoY2FsLmFjdGl2ZU1vbnRoKSB7IENhbGVuZGFyLnJlbW92ZUNsYXNzKGNhbC5hY3RpdmVNb250aCwgImFjdGl2ZSIpO30NCnZhciBtb24gPSBjYWwubW9udGhzQ29tYm8uZ2V0RWxlbWVudHNCeVRhZ05hbWUoImRpdiIpW2NhbC5kYXRlLmdldE1vbnRoKCldOyBDYWxlbmRhci5hZGRDbGFzcyhtb24sICJhY3RpdmUiKTsgY2FsLmFjdGl2ZU1vbnRoID0gbW9uOyBtYy5zdHlsZS5sZWZ0ID0gY2Qub2Zmc2V0TGVmdCArICJweCI7IG1jLnN0eWxlLnRvcCA9IChjZC5vZmZzZXRUb3AgKyBjZC5vZmZzZXRIZWlnaHQpICsgInB4IjsgbWMuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7fTsgQ2FsZW5kYXIuc2hvd1llYXJzQ29tYm8gPSBmdW5jdGlvbiAoZndkKSB7IHZhciBjYWwgPSBDYWxlbmRhci5fQzsgaWYgKCFjYWwpIHsgcmV0dXJuIGZhbHNlO30NCnZhciBjYWwgPSBjYWw7IHZhciBjZCA9IGNhbC5hY3RpdmVEaXY7IHZhciB5YyA9IGNhbC55ZWFyc0NvbWJvOyBpZiAoY2FsLmhpbGl0ZWRZZWFyKSB7IENhbGVuZGFyLnJlbW92ZUNsYXNzKGNhbC5oaWxpdGVkWWVhciwgImhpbGl0ZSIpO30NCmlmIChjYWwuYWN0aXZlWWVhcikgeyBDYWxlbmRhci5yZW1vdmVDbGFzcyhjYWwuYWN0aXZlWWVhciwgImFjdGl2ZSIpO30NCmNhbC5hY3RpdmVZZWFyID0gbnVsbDsgdmFyIFkgPSBjYWwuZGF0ZS5nZXRGdWxsWWVhcigpICsgKGZ3ZCA\/IDEgOiAtMSk7IHZhciB5ciA9IHljLmZpcnN0Q2hpbGQ7IHZhciBzaG93ID0gZmFsc2U7IGZvciAodmFyIGkgPSAxMjsgaSA+IDA7IC0taSkgeyBpZiAoWSA+PSBjYWwubWluWWVhciAmJiBZIDw9IGNhbC5tYXhZZWFyKSB7IHlyLmZpcnN0Q2hpbGQuZGF0YSA9IFk7IHlyLnllYXIgPSBZOyB5ci5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsgc2hvdyA9IHRydWU7fSBlbHNlIHsgeXIuc3R5bGUuZGlzcGxheSA9ICJub25lIjt9DQp5ciA9IHlyLm5leHRTaWJsaW5nOyBZICs9IGZ3ZCA\/IDIgOiAtMjt9DQppZiAoc2hvdykgeyB5Yy5zdHlsZS5sZWZ0ID0gY2Qub2Zmc2V0TGVmdCArICJweCI7IHljLnN0eWxlLnRvcCA9IChjZC5vZmZzZXRUb3AgKyBjZC5vZmZzZXRIZWlnaHQpICsgInB4IjsgeWMuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7fQ0KfTsgQ2FsZW5kYXIudGFibGVNb3VzZVVwID0gZnVuY3Rpb24oZXYpIHsgdmFyIGNhbCA9IENhbGVuZGFyLl9DOyBpZiAoIWNhbCkgeyByZXR1cm4gZmFsc2U7fQ0KaWYgKGNhbC50aW1lb3V0KSB7IGNsZWFyVGltZW91dChjYWwudGltZW91dCk7fQ0KdmFyIGVsID0gY2FsLmFjdGl2ZURpdjsgaWYgKCFlbCkgeyByZXR1cm4gZmFsc2U7fQ0KdmFyIHRhcmdldCA9IENhbGVuZGFyLmdldFRhcmdldEVsZW1lbnQoZXYpOyBDYWxlbmRhci5yZW1vdmVDbGFzcyhlbCwgImFjdGl2ZSIpOyBpZiAodGFyZ2V0ID09IGVsIHx8IHRhcmdldC5wYXJlbnROb2RlID09IGVsKSB7IENhbGVuZGFyLmNlbGxDbGljayhlbCk7fQ0KdmFyIG1vbiA9IENhbGVuZGFyLmZpbmRNb250aCh0YXJnZXQpOyB2YXIgZGF0ZSA9IG51bGw7IGlmIChtb24pIHsgZGF0ZSA9IG5ldyBEYXRlKGNhbC5kYXRlKTsgaWYgKG1vbi5tb250aCAhPSBkYXRlLmdldE1vbnRoKCkpIHsgZGF0ZS5zZXRNb250aChtb24ubW9udGgpOyBjYWwuc2V0RGF0ZShkYXRlKTt9DQp9IGVsc2UgeyB2YXIgeWVhciA9IENhbGVuZGFyLmZpbmRZZWFyKHRhcmdldCk7IGlmICh5ZWFyKSB7IGRhdGUgPSBuZXcgRGF0ZShjYWwuZGF0ZSk7IGlmICh5ZWFyLnllYXIgIT0gZGF0ZS5nZXRGdWxsWWVhcigpKSB7IGRhdGUuc2V0RnVsbFllYXIoeWVhci55ZWFyKTsgY2FsLnNldERhdGUoZGF0ZSk7fQ0KfQ0KfQ0Kd2l0aCAoQ2FsZW5kYXIpIHsgcmVtb3ZlRXZlbnQoZG9jdW1lbnQsICJtb3VzZXVwIiwgdGFibGVNb3VzZVVwKTsgcmVtb3ZlRXZlbnQoZG9jdW1lbnQsICJtb3VzZW92ZXIiLCB0YWJsZU1vdXNlT3Zlcik7IHJlbW92ZUV2ZW50KGRvY3VtZW50LCAibW91c2Vtb3ZlIiwgdGFibGVNb3VzZU92ZXIpOyBjYWwuX2hpZGVDb21ib3MoKTsgc3RvcEV2ZW50KGV2KTsgX0MgPSBudWxsO30NCn07IENhbGVuZGFyLnRhYmxlTW91c2VPdmVyID0gZnVuY3Rpb24gKGV2KSB7IHZhciBjYWwgPSBDYWxlbmRhci5fQzsgaWYgKCFjYWwpIHsgcmV0dXJuO30NCnZhciBlbCA9IGNhbC5hY3RpdmVEaXY7IHZhciB0YXJnZXQgPSBDYWxlbmRhci5nZXRUYXJnZXRFbGVtZW50KGV2KTsgaWYgKHRhcmdldCA9PSBlbCB8fCB0YXJnZXQucGFyZW50Tm9kZSA9PSBlbCkgeyBDYWxlbmRhci5hZGRDbGFzcyhlbCwgImhpbGl0ZSBhY3RpdmUiKTsgQ2FsZW5kYXIuYWRkQ2xhc3MoZWwucGFyZW50Tm9kZSwgInJvd2hpbGl0ZSIpO30gZWxzZSB7IENhbGVuZGFyLnJlbW92ZUNsYXNzKGVsLCAiYWN0aXZlIik7IENhbGVuZGFyLnJlbW92ZUNsYXNzKGVsLCAiaGlsaXRlIik7IENhbGVuZGFyLnJlbW92ZUNsYXNzKGVsLnBhcmVudE5vZGUsICJyb3doaWxpdGUiKTt9DQp2YXIgbW9uID0gQ2FsZW5kYXIuZmluZE1vbnRoKHRhcmdldCk7IGlmIChtb24pIHsgaWYgKG1vbi5tb250aCAhPSBjYWwuZGF0ZS5nZXRNb250aCgpKSB7IGlmIChjYWwuaGlsaXRlZE1vbnRoKSB7IENhbGVuZGFyLnJlbW92ZUNsYXNzKGNhbC5oaWxpdGVkTW9udGgsICJoaWxpdGUiKTt9DQpDYWxlbmRhci5hZGRDbGFzcyhtb24sICJoaWxpdGUiKTsgY2FsLmhpbGl0ZWRNb250aCA9IG1vbjt9IGVsc2UgaWYgKGNhbC5oaWxpdGVkTW9udGgpIHsgQ2FsZW5kYXIucmVtb3ZlQ2xhc3MoY2FsLmhpbGl0ZWRNb250aCwgImhpbGl0ZSIpO30NCn0gZWxzZSB7IHZhciB5ZWFyID0gQ2FsZW5kYXIuZmluZFllYXIodGFyZ2V0KTsgaWYgKHllYXIpIHsgaWYgKHllYXIueWVhciAhPSBjYWwuZGF0ZS5nZXRGdWxsWWVhcigpKSB7IGlmIChjYWwuaGlsaXRlZFllYXIpIHsgQ2FsZW5kYXIucmVtb3ZlQ2xhc3MoY2FsLmhpbGl0ZWRZZWFyLCAiaGlsaXRlIik7fQ0KQ2FsZW5kYXIuYWRkQ2xhc3MoeWVhciwgImhpbGl0ZSIpOyBjYWwuaGlsaXRlZFllYXIgPSB5ZWFyO30gZWxzZSBpZiAoY2FsLmhpbGl0ZWRZZWFyKSB7IENhbGVuZGFyLnJlbW92ZUNsYXNzKGNhbC5oaWxpdGVkWWVhciwgImhpbGl0ZSIpO30NCn0NCn0NCkNhbGVuZGFyLnN0b3BFdmVudChldik7fTsgQ2FsZW5kYXIudGFibGVNb3VzZURvd24gPSBmdW5jdGlvbiAoZXYpIHsgaWYgKENhbGVuZGFyLmdldFRhcmdldEVsZW1lbnQoZXYpID09IENhbGVuZGFyLmdldEVsZW1lbnQoZXYpKSB7IENhbGVuZGFyLnN0b3BFdmVudChldik7fQ0KfTsgQ2FsZW5kYXIuY2FsRHJhZ0l0ID0gZnVuY3Rpb24gKGV2KSB7IHZhciBjYWwgPSBDYWxlbmRhci5fQzsgaWYgKCEoY2FsICYmIGNhbC5kcmFnZ2luZykpIHsgcmV0dXJuIGZhbHNlO30NCnZhciBwb3NYOyB2YXIgcG9zWTsgaWYgKENhbGVuZGFyLmlzX2llKSB7IHBvc1kgPSB3aW5kb3cuZXZlbnQuY2xpZW50WSArIGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wOyBwb3NYID0gd2luZG93LmV2ZW50LmNsaWVudFggKyBkb2N1bWVudC5ib2R5LnNjcm9sbExlZnQ7fSBlbHNlIHsgcG9zWCA9IGV2LnBhZ2VYOyBwb3NZID0gZXYucGFnZVk7fQ0KY2FsLmhpZGVTaG93Q292ZXJlZCgpOyB2YXIgc3QgPSBjYWwuZWxlbWVudC5zdHlsZTsgc3QubGVmdCA9IChwb3NYIC0gY2FsLnhPZmZzKSArICJweCI7IHN0LnRvcCA9IChwb3NZIC0gY2FsLnlPZmZzKSArICJweCI7IENhbGVuZGFyLnN0b3BFdmVudChldik7fTsgQ2FsZW5kYXIuY2FsRHJhZ0VuZCA9IGZ1bmN0aW9uIChldikgeyB2YXIgY2FsID0gQ2FsZW5kYXIuX0M7IGlmICghY2FsKSB7IHJldHVybiBmYWxzZTt9DQpjYWwuZHJhZ2dpbmcgPSBmYWxzZTsgd2l0aCAoQ2FsZW5kYXIpIHsgcmVtb3ZlRXZlbnQoZG9jdW1lbnQsICJtb3VzZW1vdmUiLCBjYWxEcmFnSXQpOyByZW1vdmVFdmVudChkb2N1bWVudCwgIm1vdXNlb3ZlciIsIHN0b3BFdmVudCk7IHJlbW92ZUV2ZW50KGRvY3VtZW50LCAibW91c2V1cCIsIGNhbERyYWdFbmQpOyB0YWJsZU1vdXNlVXAoZXYpO30NCmNhbC5oaWRlU2hvd0NvdmVyZWQoKTt9OyBDYWxlbmRhci5kYXlNb3VzZURvd24gPSBmdW5jdGlvbihldikgeyB2YXIgZWwgPSBDYWxlbmRhci5nZXRFbGVtZW50KGV2KTsgaWYgKGVsLmRpc2FibGVkKSB7IHJldHVybiBmYWxzZTt9DQp2YXIgY2FsID0gZWwuY2FsZW5kYXI7IGNhbC5hY3RpdmVEaXYgPSBlbDsgQ2FsZW5kYXIuX0MgPSBjYWw7IGlmIChlbC5uYXZ0eXBlICE9IDMwMCkgd2l0aCAoQ2FsZW5kYXIpIHsgYWRkQ2xhc3MoZWwsICJoaWxpdGUgYWN0aXZlIik7IGFkZEV2ZW50KGRvY3VtZW50LCAibW91c2VvdmVyIiwgdGFibGVNb3VzZU92ZXIpOyBhZGRFdmVudChkb2N1bWVudCwgIm1vdXNlbW92ZSIsIHRhYmxlTW91c2VPdmVyKTsgYWRkRXZlbnQoZG9jdW1lbnQsICJtb3VzZXVwIiwgdGFibGVNb3VzZVVwKTt9IGVsc2UgaWYgKGNhbC5pc1BvcHVwKSB7IGNhbC5fZHJhZ1N0YXJ0KGV2KTt9DQpDYWxlbmRhci5zdG9wRXZlbnQoZXYpOyBpZiAoZWwubmF2dHlwZSA9PSAtMSB8fCBlbC5uYXZ0eXBlID09IDEpIHsgY2FsLnRpbWVvdXQgPSBzZXRUaW1lb3V0KCJDYWxlbmRhci5zaG93TW9udGhzQ29tYm8oKSIsIDI1MCk7fSBlbHNlIGlmIChlbC5uYXZ0eXBlID09IC0yIHx8IGVsLm5hdnR5cGUgPT0gMikgeyBjYWwudGltZW91dCA9IHNldFRpbWVvdXQoKGVsLm5hdnR5cGUgPiAwKSA\/ICJDYWxlbmRhci5zaG93WWVhcnNDb21ibyh0cnVlKSIgOiAiQ2FsZW5kYXIuc2hvd1llYXJzQ29tYm8oZmFsc2UpIiwgMjUwKTt9IGVsc2UgeyBjYWwudGltZW91dCA9IG51bGw7fQ0KfTsgQ2FsZW5kYXIuZGF5TW91c2VEYmxDbGljayA9IGZ1bmN0aW9uKGV2KSB7IENhbGVuZGFyLmNlbGxDbGljayhDYWxlbmRhci5nZXRFbGVtZW50KGV2KSk7IGlmIChDYWxlbmRhci5pc19pZSkgeyBkb2N1bWVudC5zZWxlY3Rpb24uZW1wdHkoKTt9DQp9OyBDYWxlbmRhci5kYXlNb3VzZU92ZXIgPSBmdW5jdGlvbihldikgeyB2YXIgZWwgPSBDYWxlbmRhci5nZXRFbGVtZW50KGV2KTsgaWYgKENhbGVuZGFyLmlzUmVsYXRlZChlbCwgZXYpIHx8IENhbGVuZGFyLl9DIHx8IGVsLmRpc2FibGVkKSB7IHJldHVybiBmYWxzZTt9DQppZiAoZWwudHRpcCkgeyBpZiAoZWwudHRpcC5zdWJzdHIoMCwgMSkgPT0gIl8iKSB7IHZhciBkYXRlID0gbnVsbDsgd2l0aCAoZWwuY2FsZW5kYXIuZGF0ZSkgeyBkYXRlID0gbmV3IERhdGUoZ2V0RnVsbFllYXIoKSwgZ2V0TW9udGgoKSwgZWwuY2FsZGF0ZSk7fQ0KZWwudHRpcCA9IGRhdGUucHJpbnQoZWwuY2FsZW5kYXIudHREYXRlRm9ybWF0KSArIGVsLnR0aXAuc3Vic3RyKDEpO30NCmVsLmNhbGVuZGFyLnRvb2x0aXBzLmZpcnN0Q2hpbGQuZGF0YSA9IGVsLnR0aXA7fQ0KaWYgKGVsLm5hdnR5cGUgIT0gMzAwKSB7IENhbGVuZGFyLmFkZENsYXNzKGVsLCAiaGlsaXRlIik7IGlmIChlbC5jYWxkYXRlKSB7IENhbGVuZGFyLmFkZENsYXNzKGVsLnBhcmVudE5vZGUsICJyb3doaWxpdGUiKTt9DQp9DQpDYWxlbmRhci5zdG9wRXZlbnQoZXYpO307IENhbGVuZGFyLmRheU1vdXNlT3V0ID0gZnVuY3Rpb24oZXYpIHsgd2l0aCAoQ2FsZW5kYXIpIHsgdmFyIGVsID0gZ2V0RWxlbWVudChldik7IGlmIChpc1JlbGF0ZWQoZWwsIGV2KSB8fCBfQyB8fCBlbC5kaXNhYmxlZCkgeyByZXR1cm4gZmFsc2U7fQ0KcmVtb3ZlQ2xhc3MoZWwsICJoaWxpdGUiKTsgaWYgKGVsLmNhbGRhdGUpIHsgcmVtb3ZlQ2xhc3MoZWwucGFyZW50Tm9kZSwgInJvd2hpbGl0ZSIpO30NCmVsLmNhbGVuZGFyLnRvb2x0aXBzLmZpcnN0Q2hpbGQuZGF0YSA9IF9UVFsiU0VMX0RBVEUiXTsgc3RvcEV2ZW50KGV2KTt9DQp9OyBDYWxlbmRhci5jZWxsQ2xpY2sgPSBmdW5jdGlvbihlbCkgeyB2YXIgY2FsID0gZWwuY2FsZW5kYXI7IHZhciBjbG9zaW5nID0gZmFsc2U7IHZhciBuZXdkYXRlID0gZmFsc2U7IHZhciBkYXRlID0gbnVsbDsgaWYgKHR5cGVvZiBlbC5uYXZ0eXBlID09ICJ1bmRlZmluZWQiKSB7IENhbGVuZGFyLnJlbW92ZUNsYXNzKGNhbC5jdXJyZW50RGF0ZUVsLCAic2VsZWN0ZWQiKTsgQ2FsZW5kYXIuYWRkQ2xhc3MoZWwsICJzZWxlY3RlZCIpOyBjbG9zaW5nID0gKGNhbC5jdXJyZW50RGF0ZUVsID09IGVsKTsgaWYgKCFjbG9zaW5nKSB7IGNhbC5jdXJyZW50RGF0ZUVsID0gZWw7fQ0KY2FsLmRhdGUuc2V0RGF0ZShlbC5jYWxkYXRlKTsgZGF0ZSA9IGNhbC5kYXRlOyBuZXdkYXRlID0gdHJ1ZTt9IGVsc2UgeyBpZiAoZWwubmF2dHlwZSA9PSAyMDApIHsgQ2FsZW5kYXIucmVtb3ZlQ2xhc3MoZWwsICJoaWxpdGUiKTsgY2FsLmNhbGxDbG9zZUhhbmRsZXIoKTsgcmV0dXJuO30NCmRhdGUgPSAoZWwubmF2dHlwZSA9PSAwKSA\/IG5ldyBEYXRlKCkgOiBuZXcgRGF0ZShjYWwuZGF0ZSk7IHZhciB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpOyB2YXIgbW9uID0gZGF0ZS5nZXRNb250aCgpOyBmdW5jdGlvbiBzZXRNb250aChtKSB7IHZhciBkYXkgPSBkYXRlLmdldERhdGUoKTsgdmFyIG1heCA9IGRhdGUuZ2V0TW9udGhEYXlzKG0pOyBpZiAoZGF5ID4gbWF4KSB7IGRhdGUuc2V0RGF0ZShtYXgpO30NCmRhdGUuc2V0TW9udGgobSk7fTsgc3dpdGNoIChlbC5uYXZ0eXBlKSB7IGNhc2UgLTI6DQppZiAoeWVhciA+IGNhbC5taW5ZZWFyKSB7IGRhdGUuc2V0RnVsbFllYXIoeWVhciAtIDEpO30NCmJyZWFrOyBjYXNlIC0xOg0KaWYgKG1vbiA+IDApIHsgc2V0TW9udGgobW9uIC0gMSk7fSBlbHNlIGlmICh5ZWFyLS0gPiBjYWwubWluWWVhcikgeyBkYXRlLnNldEZ1bGxZZWFyKHllYXIpOyBzZXRNb250aCgxMSk7fQ0KYnJlYWs7IGNhc2UgMToNCmlmIChtb24gPCAxMSkgeyBzZXRNb250aChtb24gKyAxKTt9IGVsc2UgaWYgKHllYXIgPCBjYWwubWF4WWVhcikgeyBkYXRlLnNldEZ1bGxZZWFyKHllYXIgKyAxKTsgc2V0TW9udGgoMCk7fQ0KYnJlYWs7IGNhc2UgMjoNCmlmICh5ZWFyIDwgY2FsLm1heFllYXIpIHsgZGF0ZS5zZXRGdWxsWWVhcih5ZWFyICsgMSk7fQ0KYnJlYWs7IGNhc2UgMTAwOg0KY2FsLnNldE1vbmRheUZpcnN0KCFjYWwubW9uZGF5Rmlyc3QpOyByZXR1cm47fQ0KaWYgKCFkYXRlLmVxdWFsc1RvKGNhbC5kYXRlKSkgeyBjYWwuc2V0RGF0ZShkYXRlKTsgbmV3ZGF0ZSA9IGVsLm5hdnR5cGUgPT0gMDt9DQp9DQppZiAobmV3ZGF0ZSkgeyBjYWwuY2FsbEhhbmRsZXIoKTt9DQppZiAoY2xvc2luZykgeyBDYWxlbmRhci5yZW1vdmVDbGFzcyhlbCwgImhpbGl0ZSIpOyBjYWwuY2FsbENsb3NlSGFuZGxlcigpO30NCn07IENhbGVuZGFyLnByb3RvdHlwZS5jcmVhdGUgPSBmdW5jdGlvbiAoX3BhcikgeyB2YXIgcGFyZW50ID0gbnVsbDsgaWYgKCEgX3BhcikgeyBwYXJlbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYm9keSIpWzBdOyB0aGlzLmlzUG9wdXAgPSB0cnVlO30gZWxzZSB7IHBhcmVudCA9IF9wYXI7IHRoaXMuaXNQb3B1cCA9IGZhbHNlO30NCnRoaXMuZGF0ZSA9IHRoaXMuZGF0ZVN0ciA\/IG5ldyBEYXRlKHRoaXMuZGF0ZVN0cikgOiBuZXcgRGF0ZSgpOyB2YXIgdGFibGUgPSBDYWxlbmRhci5jcmVhdGVFbGVtZW50KCJ0YWJsZSIpOyB0aGlzLnRhYmxlID0gdGFibGU7IHRhYmxlLmNlbGxTcGFjaW5nID0gMDsgdGFibGUuY2VsbFBhZGRpbmcgPSAwOyB0YWJsZS5jYWxlbmRhciA9IHRoaXM7IENhbGVuZGFyLmFkZEV2ZW50KHRhYmxlLCAibW91c2Vkb3duIiwgQ2FsZW5kYXIudGFibGVNb3VzZURvd24pOyB2YXIgZGl2ID0gQ2FsZW5kYXIuY3JlYXRlRWxlbWVudCgiZGl2Iik7IHRoaXMuZWxlbWVudCA9IGRpdjsgZGl2LmNsYXNzTmFtZSA9ICJjYWxlbmRhciI7IGlmICh0aGlzLmlzUG9wdXApIHsgZGl2LnN0eWxlLnBvc2l0aW9uID0gImFic29sdXRlIjsgZGl2LnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7fQ0KZGl2LmFwcGVuZENoaWxkKHRhYmxlKTsgdmFyIHRoZWFkID0gQ2FsZW5kYXIuY3JlYXRlRWxlbWVudCgidGhlYWQiLCB0YWJsZSk7IHZhciBjZWxsID0gbnVsbDsgdmFyIHJvdyA9IG51bGw7IHZhciBjYWwgPSB0aGlzOyB2YXIgaGggPSBmdW5jdGlvbiAodGV4dCwgY3MsIG5hdnR5cGUpIHsgY2VsbCA9IENhbGVuZGFyLmNyZWF0ZUVsZW1lbnQoInRkIiwgcm93KTsgY2VsbC5jb2xTcGFuID0gY3M7IGNlbGwuY2xhc3NOYW1lID0gImJ1dHRvbiI7IENhbGVuZGFyLl9hZGRfZXZzKGNlbGwpOyBjZWxsLmNhbGVuZGFyID0gY2FsOyBjZWxsLm5hdnR5cGUgPSBuYXZ0eXBlOyBpZiAodGV4dC5zdWJzdHIoMCwgMSkgIT0gIiYiKSB7IGNlbGwuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodGV4dCkpO30NCmVsc2UgeyBjZWxsLmlubmVySFRNTCA9IHRleHQ7fQ0KcmV0dXJuIGNlbGw7fTsgcm93ID0gQ2FsZW5kYXIuY3JlYXRlRWxlbWVudCgidHIiLCB0aGVhZCk7IHZhciB0aXRsZV9sZW5ndGggPSA2OyAodGhpcy5pc1BvcHVwKSAmJiAtLXRpdGxlX2xlbmd0aDsgKHRoaXMud2Vla051bWJlcnMpICYmICsrdGl0bGVfbGVuZ3RoOyBoaCgiLSIsIDEsIDEwMCkudHRpcCA9IENhbGVuZGFyLl9UVFsiVE9HR0xFIl07IHRoaXMudGl0bGUgPSBoaCgiIiwgdGl0bGVfbGVuZ3RoLCAzMDApOyB0aGlzLnRpdGxlLmNsYXNzTmFtZSA9ICJ0aXRsZSI7IGlmICh0aGlzLmlzUG9wdXApIHsgdGhpcy50aXRsZS50dGlwID0gQ2FsZW5kYXIuX1RUWyJEUkFHX1RPX01PVkUiXTsgdGhpcy50aXRsZS5zdHlsZS5jdXJzb3IgPSAibW92ZSI7IGhoKCImI3gwMGQ3OyIsIDEsIDIwMCkudHRpcCA9IENhbGVuZGFyLl9UVFsiQ0xPU0UiXTt9DQpyb3cgPSBDYWxlbmRhci5jcmVhdGVFbGVtZW50KCJ0ciIsIHRoZWFkKTsgcm93LmNsYXNzTmFtZSA9ICJoZWFkcm93IjsgdGhpcy5fbmF2X3B5ID0gaGgoIiYjeDAwYWI7IiwgMSwgLTIpOyB0aGlzLl9uYXZfcHkudHRpcCA9IENhbGVuZGFyLl9UVFsiUFJFVl9ZRUFSIl07IHRoaXMuX25hdl9wbSA9IGhoKCImI3gyMDM5OyIsIDEsIC0xKTsgdGhpcy5fbmF2X3BtLnR0aXAgPSBDYWxlbmRhci5fVFRbIlBSRVZfTU9OVEgiXTsgdGhpcy5fbmF2X25vdyA9IGhoKENhbGVuZGFyLl9UVFsiVE9EQVkiXSwgdGhpcy53ZWVrTnVtYmVycyA\/IDQgOiAzLCAwKTsgdGhpcy5fbmF2X25vdy50dGlwID0gQ2FsZW5kYXIuX1RUWyJHT19UT0RBWSJdOyB0aGlzLl9uYXZfbm0gPSBoaCgiJiN4MjAzYTsiLCAxLCAxKTsgdGhpcy5fbmF2X25tLnR0aXAgPSBDYWxlbmRhci5fVFRbIk5FWFRfTU9OVEgiXTsgdGhpcy5fbmF2X255ID0gaGgoIiYjeDAwYmI7IiwgMSwgMik7IHRoaXMuX25hdl9ueS50dGlwID0gQ2FsZW5kYXIuX1RUWyJORVhUX1lFQVIiXQ0Kcm93ID0gQ2FsZW5kYXIuY3JlYXRlRWxlbWVudCgidHIiLCB0aGVhZCk7IHJvdy5jbGFzc05hbWUgPSAiZGF5bmFtZXMiOyBpZiAodGhpcy53ZWVrTnVtYmVycykgeyBjZWxsID0gQ2FsZW5kYXIuY3JlYXRlRWxlbWVudCgidGQiLCByb3cpOyBjZWxsLmNsYXNzTmFtZSA9ICJuYW1lIHduIjsgY2VsbC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShDYWxlbmRhci5fVFRbIldLIl0pKTt9DQpmb3IgKHZhciBpID0gNzsgaSA+IDA7IC0taSkgeyBjZWxsID0gQ2FsZW5kYXIuY3JlYXRlRWxlbWVudCgidGQiLCByb3cpOyBjZWxsLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCIiKSk7IGlmICghaSkgeyBjZWxsLm5hdnR5cGUgPSAxMDA7IGNlbGwuY2FsZW5kYXIgPSB0aGlzOyBDYWxlbmRhci5fYWRkX2V2cyhjZWxsKTt9DQp9DQp0aGlzLmZpcnN0ZGF5bmFtZSA9ICh0aGlzLndlZWtOdW1iZXJzKSA\/IHJvdy5maXJzdENoaWxkLm5leHRTaWJsaW5nIDogcm93LmZpcnN0Q2hpbGQ7IHRoaXMuX2Rpc3BsYXlXZWVrZGF5cygpOyB2YXIgdGJvZHkgPSBDYWxlbmRhci5jcmVhdGVFbGVtZW50KCJ0Ym9keSIsIHRhYmxlKTsgdGhpcy50Ym9keSA9IHRib2R5OyBmb3IgKGkgPSA2OyBpID4gMDsgLS1pKSB7IHJvdyA9IENhbGVuZGFyLmNyZWF0ZUVsZW1lbnQoInRyIiwgdGJvZHkpOyBpZiAodGhpcy53ZWVrTnVtYmVycykgeyBjZWxsID0gQ2FsZW5kYXIuY3JlYXRlRWxlbWVudCgidGQiLCByb3cpOyBjZWxsLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCIiKSk7fQ0KZm9yICh2YXIgaiA9IDc7IGogPiAwOyAtLWopIHsgY2VsbCA9IENhbGVuZGFyLmNyZWF0ZUVsZW1lbnQoInRkIiwgcm93KTsgY2VsbC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiIikpOyBjZWxsLmNhbGVuZGFyID0gdGhpczsgQ2FsZW5kYXIuX2FkZF9ldnMoY2VsbCk7fQ0KfQ0KdmFyIHRmb290ID0gQ2FsZW5kYXIuY3JlYXRlRWxlbWVudCgidGZvb3QiLCB0YWJsZSk7IHJvdyA9IENhbGVuZGFyLmNyZWF0ZUVsZW1lbnQoInRyIiwgdGZvb3QpOyByb3cuY2xhc3NOYW1lID0gImZvb3Ryb3ciOyBjZWxsID0gaGgoQ2FsZW5kYXIuX1RUWyJTRUxfREFURSJdLCB0aGlzLndlZWtOdW1iZXJzID8gOCA6IDcsIDMwMCk7IGNlbGwuY2xhc3NOYW1lID0gInR0aXAiOyBpZiAodGhpcy5pc1BvcHVwKSB7IGNlbGwudHRpcCA9IENhbGVuZGFyLl9UVFsiRFJBR19UT19NT1ZFIl07IGNlbGwuc3R5bGUuY3Vyc29yID0gIm1vdmUiO30NCnRoaXMudG9vbHRpcHMgPSBjZWxsOyBkaXYgPSBDYWxlbmRhci5jcmVhdGVFbGVtZW50KCJkaXYiLCB0aGlzLmVsZW1lbnQpOyB0aGlzLm1vbnRoc0NvbWJvID0gZGl2OyBkaXYuY2xhc3NOYW1lID0gImNvbWJvIjsgZm9yIChpID0gMDsgaSA8IENhbGVuZGFyLl9NTi5sZW5ndGg7ICsraSkgeyB2YXIgbW4gPSBDYWxlbmRhci5jcmVhdGVFbGVtZW50KCJkaXYiKTsgbW4uY2xhc3NOYW1lID0gImxhYmVsIjsgbW4ubW9udGggPSBpOyBtbi5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShDYWxlbmRhci5fTU4zW2ldKSk7IGRpdi5hcHBlbmRDaGlsZChtbik7fQ0KZGl2ID0gQ2FsZW5kYXIuY3JlYXRlRWxlbWVudCgiZGl2IiwgdGhpcy5lbGVtZW50KTsgdGhpcy55ZWFyc0NvbWJvID0gZGl2OyBkaXYuY2xhc3NOYW1lID0gImNvbWJvIjsgZm9yIChpID0gMTI7IGkgPiAwOyAtLWkpIHsgdmFyIHlyID0gQ2FsZW5kYXIuY3JlYXRlRWxlbWVudCgiZGl2Iik7IHlyLmNsYXNzTmFtZSA9ICJsYWJlbCI7IHlyLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCIiKSk7IGRpdi5hcHBlbmRDaGlsZCh5cik7fQ0KdGhpcy5faW5pdCh0aGlzLm1vbmRheUZpcnN0LCB0aGlzLmRhdGUpOyBwYXJlbnQuYXBwZW5kQ2hpbGQodGhpcy5lbGVtZW50KTt9OyBDYWxlbmRhci5fa2V5RXZlbnQgPSBmdW5jdGlvbihldikgeyBpZiAoIXdpbmRvdy5jYWxlbmRhcikgeyByZXR1cm4gZmFsc2U7fQ0KKENhbGVuZGFyLmlzX2llKSAmJiAoZXYgPSB3aW5kb3cuZXZlbnQpOyB2YXIgY2FsID0gd2luZG93LmNhbGVuZGFyOyB2YXIgYWN0ID0gKENhbGVuZGFyLmlzX2llIHx8IGV2LnR5cGUgPT0gImtleXByZXNzIik7IGlmIChldi5jdHJsS2V5KSB7IHN3aXRjaCAoZXYua2V5Q29kZSkgeyBjYXNlIDM3Og0KYWN0ICYmIENhbGVuZGFyLmNlbGxDbGljayhjYWwuX25hdl9wbSk7IGJyZWFrOyBjYXNlIDM4Og0KYWN0ICYmIENhbGVuZGFyLmNlbGxDbGljayhjYWwuX25hdl9weSk7IGJyZWFrOyBjYXNlIDM5Og0KYWN0ICYmIENhbGVuZGFyLmNlbGxDbGljayhjYWwuX25hdl9ubSk7IGJyZWFrOyBjYXNlIDQwOg0KYWN0ICYmIENhbGVuZGFyLmNlbGxDbGljayhjYWwuX25hdl9ueSk7IGJyZWFrOyBkZWZhdWx0Og0KcmV0dXJuIGZhbHNlO30NCn0gZWxzZSBzd2l0Y2ggKGV2LmtleUNvZGUpIHsgY2FzZSAzMjoNCkNhbGVuZGFyLmNlbGxDbGljayhjYWwuX25hdl9ub3cpOyBicmVhazsgY2FzZSAyNzoNCmFjdCAmJiBjYWwuaGlkZSgpOyBicmVhazsgY2FzZSAzNzoNCmNhc2UgMzg6DQpjYXNlIDM5Og0KY2FzZSA0MDoNCmlmIChhY3QpIHsgdmFyIGRhdGUgPSBjYWwuZGF0ZS5nZXREYXRlKCkgLSAxOyB2YXIgZWwgPSBjYWwuY3VycmVudERhdGVFbDsgdmFyIG5lID0gbnVsbDsgdmFyIHByZXYgPSAoZXYua2V5Q29kZSA9PSAzNykgfHwgKGV2LmtleUNvZGUgPT0gMzgpOyBzd2l0Y2ggKGV2LmtleUNvZGUpIHsgY2FzZSAzNzoNCigtLWRhdGUgPj0gMCkgJiYgKG5lID0gY2FsLmFyX2RheXNbZGF0ZV0pOyBicmVhazsgY2FzZSAzODoNCmRhdGUgLT0gNzsgKGRhdGUgPj0gMCkgJiYgKG5lID0gY2FsLmFyX2RheXNbZGF0ZV0pOyBicmVhazsgY2FzZSAzOToNCigrK2RhdGUgPCBjYWwuYXJfZGF5cy5sZW5ndGgpICYmIChuZSA9IGNhbC5hcl9kYXlzW2RhdGVdKTsgYnJlYWs7IGNhc2UgNDA6DQpkYXRlICs9IDc7IChkYXRlIDwgY2FsLmFyX2RheXMubGVuZ3RoKSAmJiAobmUgPSBjYWwuYXJfZGF5c1tkYXRlXSk7IGJyZWFrO30NCmlmICghbmUpIHsgaWYgKHByZXYpIHsgQ2FsZW5kYXIuY2VsbENsaWNrKGNhbC5fbmF2X3BtKTt9IGVsc2UgeyBDYWxlbmRhci5jZWxsQ2xpY2soY2FsLl9uYXZfbm0pO30NCmRhdGUgPSAocHJldikgPyBjYWwuZGF0ZS5nZXRNb250aERheXMoKSA6IDE7IGVsID0gY2FsLmN1cnJlbnREYXRlRWw7IG5lID0gY2FsLmFyX2RheXNbZGF0ZSAtIDFdO30NCkNhbGVuZGFyLnJlbW92ZUNsYXNzKGVsLCAic2VsZWN0ZWQiKTsgQ2FsZW5kYXIuYWRkQ2xhc3MobmUsICJzZWxlY3RlZCIpOyBjYWwuZGF0ZS5zZXREYXRlKG5lLmNhbGRhdGUpOyBjYWwuY3VycmVudERhdGVFbCA9IG5lO30NCmJyZWFrOyBjYXNlIDEzOg0KaWYgKGFjdCkgeyBjYWwuY2FsbEhhbmRsZXIoKTsgY2FsLmhpZGUoKTt9DQpicmVhazsgZGVmYXVsdDoNCnJldHVybiBmYWxzZTt9DQpDYWxlbmRhci5zdG9wRXZlbnQoZXYpO307IENhbGVuZGFyLnByb3RvdHlwZS5faW5pdCA9IGZ1bmN0aW9uIChtb25kYXlGaXJzdCwgZGF0ZSkgeyB2YXIgdG9kYXkgPSBuZXcgRGF0ZSgpOyB2YXIgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTsgaWYgKHllYXIgPCB0aGlzLm1pblllYXIpIHsgeWVhciA9IHRoaXMubWluWWVhcjsgZGF0ZS5zZXRGdWxsWWVhcih5ZWFyKTt9IGVsc2UgaWYgKHllYXIgPiB0aGlzLm1heFllYXIpIHsgeWVhciA9IHRoaXMubWF4WWVhcjsgZGF0ZS5zZXRGdWxsWWVhcih5ZWFyKTt9DQp0aGlzLm1vbmRheUZpcnN0ID0gbW9uZGF5Rmlyc3Q7IHRoaXMuZGF0ZSA9IG5ldyBEYXRlKGRhdGUpOyB2YXIgbW9udGggPSBkYXRlLmdldE1vbnRoKCk7IHZhciBtZGF5ID0gZGF0ZS5nZXREYXRlKCk7IHZhciBub19kYXlzID0gZGF0ZS5nZXRNb250aERheXMoKTsgZGF0ZS5zZXREYXRlKDEpOyB2YXIgd2RheSA9IGRhdGUuZ2V0RGF5KCk7IHZhciBNT04gPSBtb25kYXlGaXJzdCA\/IDEgOiAwOyB2YXIgU0FUID0gbW9uZGF5Rmlyc3QgPyA1IDogNjsgdmFyIFNVTiA9IG1vbmRheUZpcnN0ID8gNiA6IDA7IGlmIChtb25kYXlGaXJzdCkgeyB3ZGF5ID0gKHdkYXkgPiAwKSA\\/ICgiMCIgKyBkKSA6IGQ7IHNbIm0iXSA9IDErbTsgc1sibW0iXSA9IChtIDwgOSkgPyAoIjAiICsgKDErbSkpIDogKDErbSk7IHNbInkiXSA9IHk7IHNbInl5Il0gPSBuZXcgU3RyaW5nKHkpLnN1YnN0cigyLCAyKTsgc1sidyJdID0gd247IHNbInd3Il0gPSAod24gPCAxMCkgPyAoIjAiICsgd24pIDogd247IHdpdGggKENhbGVuZGFyKSB7IHNbIkQiXSA9IF9ETjNbd107IHNbIkREIl0gPSBfRE5bd107IHNbIk0iXSA9IF9NTjNbbV07IHNbIk1NIl0gPSBfTU5bbV07fQ0KdmFyIHJlID0gLyguKikoXFd8XikoZHxkZHxtfG1tfHl8eXl8TU18TXxERHxEfHd8d3cpKFxXfCQpKC4qKS87IHdoaWxlIChyZS5leGVjKHN0cikgIT0gbnVsbCkgeyBzdHIgPSBSZWdFeHAuJDEgKyBSZWdFeHAuJDIgKyBzW1JlZ0V4cC4kM10gKyBSZWdFeHAuJDQgKyBSZWdFeHAuJDU7fQ0KcmV0dXJuIHN0cjt9OyB3aW5kb3cuY2FsZW5kYXIgPSBudWxsOyA=",
    "size": "27140"
}