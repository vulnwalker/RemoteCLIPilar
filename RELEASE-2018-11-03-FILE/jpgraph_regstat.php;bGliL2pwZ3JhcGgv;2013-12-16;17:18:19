{
    "namaFile": "lib\/jpgraph\/jpgraph_regstat.php",
    "lastUpdate": "2013-12-16+17:18:19.00",
    "contentFile": "",
    "size": "7284"
}