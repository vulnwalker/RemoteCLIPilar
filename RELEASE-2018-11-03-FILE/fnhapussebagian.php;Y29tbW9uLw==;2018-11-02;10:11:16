{
    "namaFile": "common\/fnhapussebagian.php",
    "lastUpdate": "2018-11-02+10:11:16.78",
    "contentFile": "\/J2NoZWNrZWQnOicnOwokc3BhY2UgPSBmb3JtRW50cnlCYXNlMignJywnJywnJywiIiwiIiwnJywndmFsaWduPSJtaWRkbGUiIGhlaWdodD0iOCInKTsKCXJldHVybiAiCgkJPEEgTkFNRT0nRk9STUVOVFJZJz48L0E+CgkJPGRpdj48ZGl2PiRGb3JtRW50cnlfU2NyaXB0CgkJCgkKCQkkRm9ybUVudHJ5X0hpZGRlbgoJCTxpbnB1dCB0eXBlPSdoaWRkZW4nIG5hbWU9J2lkYmlfYXdhbCcgaWQ9J2lkYmlfYXdhbCcgdmFsdWU9JyIuJGlkYmlfYXdhbC4iJyA+CgkJPGlucHV0IHR5cGU9J2hpZGRlbicgbmFtZT0naWRwbGgnIGlkPSdpZHBsaCcgdmFsdWU9JyIuJF9HRVRbJ2lkcGxoJ10uIicgPgoJCTxpbnB1dCB0eXBlPSdoaWRkZW4nIG5hbWU9J2Ztc3QnIGlkPSdmbXN0JyB2YWx1ZT0nIi4kX0dFVFsnZm1zdCddLiInID4KCQk8aW5wdXQgdHlwZT0naGlkZGVuJyBuYW1lPSdpZGJpX2F3YWwnIGlkPSdpZGJpX2F3YWwnIHZhbHVlPSciLiRpZGJpLiInID4KCgkJPC9kaXY+PC9kaXY+CgkKCTx0YWJsZSB3aWR0aD1cIjEwMCVcIiAgaGVpZ2h0PScxMDAlJyBjbGFzcz1cImFkbWluZm9ybVwiIHN0eWxlPSdib3JkZXItd2lkdGg6MCc+PHRyPjx0ZCB2YWxpZ249J3RvcCcgc3R5bGU9J3BhZGRpbmc6ODsnPgoJPHRhYmxlIHdpZHRoPScxMDAlJz4KCgkKCQkJCgkiLmZvcm1FbnRyeUJhc2UyKCdUYW5nZ2FsIEJ1a3UgUGVuZ2hhcHVzYW4nLCc6JywKCQkJCWNyZWF0ZUVudHJ5VGdsKCdmbVRBTkdHQUxQRU5HSEFQVVNBTicsICRmbVRBTkdHQUxQRU5HSEFQVVNBTiwgZmFsc2UsICcnLCcnLCdGb3JtSGFwdXNTZWJhZ2lhbicsJzInKS4KCQkJCScmbmJzcCZuYnNwPHNwYW4gc3R5bGU9ImNvbG9yOiByZWQ7Ij48L3NwYW4+JwoJCQkJLCJzdHlsZT0nd2lkdGg6MTgwJyIsInN0eWxlPSd3aWR0aDoxMCciLCcnLCd2YWxpZ249Im1pZGRsZSIgaGVpZ2h0PSIyMSInKS4iCgkKCSIuZm9ybUVudHJ5QmFzZTIoJ1RhbmdnYWwgUGVyb2xlaGFuJywnOicsCgkJCQljcmVhdGVFbnRyeVRnbCgnZm1UQU5HR0FMUEVST0xFSEFOJywkZm1UQU5HR0FMUEVST0xFSEFOLCBmYWxzZSwgJycsJycsJ0Zvcm1IYXB1c1NlYmFnaWFuJykuCgkJCQknJm5ic3AmbmJzcDxzcGFuIHN0eWxlPSJjb2xvcjogcmVkOyI+PC9zcGFuPicKCQkJCSwic3R5bGU9JyciLCJzdHlsZT0nJyIsJycsJ3ZhbGlnbj0ibWlkZGxlIiBoZWlnaHQ9IjIxIicpLiIKCgkiLmZvcm1FbnRyeUJhc2UyKCdVcmFpYW4nLCc6JywKCQkiPHRleHRhcmVhIG5hbWU9XCJmbVVSQUlBTlwiICBpZD1cImZtVVJBSUFOXCIgY29scz0nNDcnID4kZm1VUkFJQU48L3RleHRhcmVhPiIKCQksInN0eWxlPScnIiwic3R5bGU9JyciLCcnLCd2YWxpZ249InRvcCIgaGVpZ2h0PSIyMSInKS4iCgoJIi5mb3JtRW50cnlCYXNlMignU3VyYXQgS2VwdXR1c2FuJywnJywnJywic3R5bGU9JyciLCJzdHlsZT0nJyIsJycsJ3ZhbGlnbj0ibWlkZGxlIiBoZWlnaHQ9IjIxIicpLiIKCgkJCgkiLmZvcm1FbnRyeUJhc2UyKCcmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDtOb21vcicsJzonLAoJCXR4dEZpZWxkKCdmbVNVUkFUTk9NT1InLCRmbVNVUkFUTk9NT1IsJzEwMCcsJzQ2JywndGV4dCcpCgkJLCJzdHlsZT0nJyIsInN0eWxlPScnIiwnJywndmFsaWduPSJtaWRkbGUiIGhlaWdodD0iMjEiJykuIgoJCgkiLmZvcm1FbnRyeUJhc2UyKCcmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDtUYW5nZ2FsJywnOicsCgkJCQljcmVhdGVFbnRyeVRnbCgnZm1TVVJBVFRBTkdHQUwnLCAkZm1TVVJBVFRBTkdHQUwsIGZhbHNlLCAnJywgJycsJ0Zvcm1IYXB1c1NlYmFnaWFuJykuCgkJCQknJm5ic3AmbmJzcDxzcGFuIHN0eWxlPSJjb2xvcjogcmVkOyI+PC9zcGFuPicKCQkJCSwnJywnJywnJywndmFsaWduPSJtaWRkbGUiIGhlaWdodD0iMjQiJykuIgoKCSIuZm9ybUVudHJ5QmFzZTIoJ05pbGFpIFBlcm9sZWhhbicsJzonLAoJCQknUnAuJy5pbnB1dEZvcm1hdFJpYnVhbmN1c3RvbSgiZm1IQVJHQV9BV0FMIiwgJ3JlYWRvbmx5JyApLCcnLCcnLCcnLCd2YWxpZ249InRvcCIgaGVpZ2h0PSIyMSInKS4iCQoKCgkiLmZvcm1FbnRyeUJhc2UyKCdOaWxhaSBQZW5naGFwdXNhbicsJzonLAoJCQknUnAuJy5pbnB1dEZvcm1hdFJpYnVhbmN1c3RvbSgiZm1IQVJHQV9IQVBVUyIsIAoJCQkgCSgkZW50cnlNdXRhc2k9PUZBTFNFPyAnJzonIHJlYWRvbmx5PSIiICcpICksJycsJycsJycsJ3ZhbGlnbj0idG9wIiBoZWlnaHQ9IjIxIicpLiIJCgkKCSIuZm9ybUVudHJ5QmFzZTIoJ05pbGFpIFNjcmFwL1Npc2EnLCc6JywKCQkJIlJwLjxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSdmbUhBUkdBX1NDUkFQJyBpZD0nZm1IQVJHQV9TQ1JBUCcgdmFsdWU9JyRmbUhBUkdBX1NDUkFQJyByZWFkb25seT4mbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDs8c3BhbiBpZD0nZm1IQVJHQV9TQ1JBUDInIHN0eWxlPSdjb2xvcjpyZWQ7Zm9udC13ZWlnaHQ6IGJvbGQ7JyA+Jm5ic3A7PC9zcGFuPiIsJycsJycsJycsJ3ZhbGlnbj0idG9wIiBoZWlnaHQ9IjIxIicpLiIJCgoJCgkiLmZvcm1FbnRyeUJhc2UyKCdLZXRlcmFuZ2FuJywnOicsCgkJIjx0ZXh0YXJlYSBuYW1lPVwiZm1LRVRcIiAgaWQ9XCJmbUtFVFwiIGNvbHM9JzQ3JyA+JGZtS0VUPC90ZXh0YXJlYT4iCgkJLCJzdHlsZT0nJyIsInN0eWxlPScnIiwnJywndmFsaWduPSJ0b3AiIGhlaWdodD0iMjEiJykuIgoJPC90YWJsZT48L3RkPjwvdHI+Cgk8L3RhYmxlPgoJCgkiOwp9CgpmdW5jdGlvbiBpbnB1dEZvcm1hdFJpYnVhbmN1c3RvbSgkb2JqPSJvYmoiLCAkcGFyYW1zPSIiLCAkdmFsdWU9MCwgJGtldD0nIHBlbWlzYWggcGVjYWhhbiBkZW5nYW4gdGl0aWsgKG1pczogMS41KScpIHsKICAgIGdsb2JhbCAkJG9iajsgLy8kJG9iaiA9IHJvdW5kKCQkb2JqLDApOwogICAgLy9vbktleVByZXNzPVwicmV0dXJuIGlzTnVtYmVyS2V5KGV2ZW50KTsgXCIKCS8vJHN0ciA9ICIgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cIiRvYmpcIiBpZD1cIiRvYmpcIiB2YWx1ZT1cIiIgLiAkdmFsdWUgLiAiXCIKCWlmICgkdmFsdWUgPT0gMCl7CgkJJHZhbHVlID0gJCRvYmo7Cgl9CiAgICAkc3RyID0gIiA8aW5wdXQgdHlwZT1cInRleHRcIiBuYW1lPVwiJG9ialwiIGlkPVwiJG9ialwiIHZhbHVlPVwiIiAuICR2YWx1ZSAuICJcIgoJCQkkcGFyYW1zCgkJCW9uS2V5RG93biA9IFwib2xkVmFsdWU9dGhpcy52YWx1ZTtcIiAKCQkJIG9uS2V5UHJlc3M9XCJyZXR1cm4gaXNOdW1iZXJLZXkoZXZlbnQpOyBcIgoJCQkgb25rZXl1cD1cImphdmFzY3JpcHQ6VGFtcGlsVWFuZygnVGFtcGlsJG9iaicsdGhpcy52YWx1ZSk7IEdldE5pbGFpU2NhcnAoKTtcIgoJCQkgCgkJCSAvPiAKCQkJJm5ic3A7Jm5ic3AKCQkJPGI+CQoJCQk8c3BhbiBpZD1cIlRhbXBpbCRvYmpcIiBzdHlsZT0nY29sb3I6cmVkJz4mbmJzcDs8L3NwYW4+PC9iPiAKCQkJJm5ic3A7Jm5ic3A8YnI+IAoJCQkJPHNwYW4gc3R5bGU9J2NvbG9yOnJlZCc+JGtldDwvc3Bhbj4iOwogICAgcmV0dXJuICRzdHI7Cn0KCmZ1bmN0aW9uIEhhcHVzU2ViYWdpYW5fTGlzdCgkVGJsLCAkRmllbGRzPScqJywgJEtvbmRpc2k9JycsICRMaW1pdD0nJywgJE9yZGVyPScnLCAkU3R5bGU9MSwgJFRibFN0eWxlQ2xhc3M9J2tvcHRhYmxlJywgCgkkQ2V0YWs9RkFMU0UsJE5vQXdhbD0wLCAkUmVhZE9ubHk9RkFMU0UsICRmbUtJQj0nJywkeGxzPUZBTFNFKXsKCS8vc3R5bGUobGlzdCxoZWFkZXIsIGptbCBoYWwsIGptbCB0b3QsIGhhbCwgbWVudSkKCQoJZ2xvYmFsICRNYWluLCAkam1sVGFtcGlsUExIOwoJCgkkVGRTdHlsZT0kQ2V0YWsgPyAnR2FyaXNDZXRhayc6J0dhcmlzRGFmdGFyJzsKCQoJLy9saXN0IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoJLy9pZiAoJFN0eWxlWzBdPT0xKXsKCSRubz0kTm9Bd2FsOy8vJE1haW4tPlBhZ2VQZXJIYWwgKiAoKCRIYWxQTEgqMSkgLSAxKTsKCSRqbWxUYW1waWxQTEg9IDA7CgkkY2IgPSAwOwkJCgkkYXFyeT0ic2VsZWN0ICRGaWVsZHMgZnJvbSAkVGJsICRLb25kaXNpICRPcmRlciAkTGltaXQgIjsgIC8vZWNobyAiICRhcXJ5PGJyPiI7CgkkUXJ5ID0gbXlzcWxfcXVlcnkoJGFxcnkpOwkKCQoJd2hpbGUgKCRpc2kgPSBteXNxbF9mZXRjaF9hcnJheSgkUXJ5KSl7CgkKCQkkam1sVGFtcGlsUExIKys7CgkJJG5vKys7CgkJJGptbFRvdGFsSGFyZ2FEaXNwbGF5ICs9ICRpc2lbJ2hhcmdhX2hhcHVzJ107CgkJJGptbFRvdGFsU2NyYXBEaXNwbGF5ICs9ICRpc2lbJ2hhcmdhX3NjcmFwJ107CgkJJGptbFRvdGFsQXdhbERpc3BsYXkgKz0gJGlzaVsnaGFyZ2FfYXdhbCddOwoJCSRqbWxUb3RhbE5pbGFpQnVrdURpc3BsYXkgKz0gJGlzaVsnbmlsYWlfYnVrdSddOwoJCSRqbWxUb3RhbE5pbGFpU3VzdXREaXNwbGF5ICs9ICRpc2lbJ25pbGFpX3N1c3V0J107CgkJJGNvbmNhdGtkID0gJE1haW4tPktEX0JBUkFOR19QMTA4PyJmMSxmMixmLGcsaCxpLGoiOiJmLGcsaCxpLGoiOwoJCSRwZXJzZW5faGFwdXM9KCRpc2lbJ2hhcmdhX2hhcHVzJ10vJGlzaVsnaGFyZ2FfYXdhbCddKSoxMDA7CgkJJGtkQmFyYW5nID0gJE1haW4tPktEX0JBUkFOR19QMTA4PyRpc2lbJ2YxJ10uJGlzaVsnZjInXS4kaXNpWydmJ10uJGlzaVsnZyddLiRpc2lbJ2gnXS4kaXNpWydpJ10uJGlzaVsnaiddOiRpc2lbJ2YnXS4kaXNpWydnJ10uJGlzaVsnaCddLiRpc2lbJ2knXS4kaXNpWydqJ107CgkJJGtkS2VsQmFyYW5nID0gJE1haW4tPktEX0JBUkFOR19QMTA4PyRpc2lbJ2YxJ10uJGlzaVsnZjInXS4kaXNpWydmJ10uJGlzaVsnZyddLiIwMCI6JGlzaVsnZiddLiRpc2lbJ2cnXS4iMDAiOwoJCSRubUJhcmFuZyA9IG15c3FsX2ZldGNoX2FycmF5KG15c3FsX3F1ZXJ5KCJzZWxlY3QgKiBmcm9tIHJlZl9iYXJhbmcgd2hlcmUgY29uY2F0KCRjb25jYXRrZCk9JyRrZEJhcmFuZyciKSk7CgkJJG5tS2VsQmFyYW5nID0gbXlzcWxfZmV0Y2hfYXJyYXkobXlzcWxfcXVlcnkoInNlbGVjdCAqIGZyb20gcmVmX2JhcmFuZyB3aGVyZSBjb25jYXQoZixnLGgpPScka2RLZWxCYXJhbmcnIikpOwoJCSRjbFJvdyA9ICRubyAlIDIgPT0gMCA\/InJvdzEiOiJyb3cwIjsKCQkKCQlnbG9iYWwgJElTSTUsICRJU0k2OwkJCQkJCQkJCQkKCQkkSVNJNSA9ICcnOyAkSVNJNiA9ICcnOwkJCQoJCSRLb25kRiA9ICRNYWluLT5LRF9CQVJBTkdfUDEwOD8iZjEgPSAneyRpc2lbJ2YxJ119JyBhbmQgZjIgPSAneyRpc2lbJ2YyJ119JyBhbmQgZiA9ICd7JGlzaVsnZiddfScgYW5kIGcgPSAneyRpc2lbJ2cnXX0nIGFuZCBoID0gJ3skaXNpWydoJ119JyBhbmQgaSA9ICd7JGlzaVsnaSddfScgYW5kIGogPSAneyRpc2lbJ2onXX0nIjoiZiA9ICd7JGlzaVsnZiddfScgYW5kIGcgPSAneyRpc2lbJ2cnXX0nIGFuZCBoID0gJ3skaXNpWydoJ119JyBhbmQgaSA9ICd7JGlzaVsnaSddfScgYW5kIGogPSAneyRpc2lbJ2onXX0nIjsKCQkKCQkkS29uZGlzaUtJQiA9ICIJd2hlcmUgYTE9ICd7JGlzaVsnYTEnXX0nIGFuZCBhID0gJ3skaXNpWydhJ119JyBhbmQgCWMgPSAneyRpc2lbJ2MnXX0nIGFuZCBkID0gJ3skaXNpWydkJ119JyBhbmQgZSA9ICd7JGlzaVsnZSddfScgYW5kIGUxID0gJ3skaXNpWydlMSddfScgYW5kIAoJCQkJCSRLb25kRiBhbmQgCgkJCQkJdGFodW4gPSAneyRpc2lbJ3Robl9wZXJvbGVoYW4nXX0nIGFuZCBub3JlZyA9ICd7JGlzaVsnbm9yZWcnXX0nICAiOwoJCQkJLy9lY2hvICJLb25kaXNpS0lCPSRLb25kaXNpS0lCIjsKCQlpZigkZm1LSUI9PScnKXsKCQkJUGVuYXRhdXNhaGFhbl9CSUdldEtpYigkaXNpWydmJ10sICRLb25kaXNpS0lCICk7CgkJfWVsc2V7CgkJCVBlbmF0YXVzYWhhYW5fQklHZXRLaWJfaGFwdXMoJGlzaVsnZiddLCAkS29uZGlzaUtJQiApOwkKCQl9CgkJJHRhbXBpbEFsYW1hdCA9ICRTdHlsZSA9PTE\/ICcnOgoJCSI8dGQgY2xhc3M9JyRUZFN0eWxlJyBhbGlnbj1sZWZ0PiRJU0k1PC90ZD4JPHRkIGNsYXNzPSckVGRTdHlsZScgYWxpZ249bGVmdD4kSVNJNjwvdGQ+CSI7CgkJCgkJJFRhbXBpbENoZWNrQm94ID0gJENldGFrPyAnJyA6ICI8dGQgY2xhc3M9XCIkVGRTdHlsZVwiIGFsaWduPSdjZW50ZXInPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBpZD1cImNiUExIJGNiXCIgbmFtZT1cImNpZFBMSFtdXCIgdmFsdWU9XCJ7JGlzaVsnaWQnXX1cIiBvbkNsaWNrPVwiaXNDaGVja2VkMih0aGlzLmNoZWNrZWQsJ0hhcHVzU2ViYWdpYW5fY2hlY2tib3gnKTtcIiAvPiZuYnNwOzwvdGQ+IjsKCQkkVGFtcGlsQ2hlY2tCb3hLb2wxID0gJFN0eWxlPT0xPyAnJyA6ICRUYW1waWxDaGVja0JveDsJCgkJCgkJJFRhbXBpbENoZWNrQm94S29sMiA9ICRTdHlsZT09MT8gJFRhbXBpbENoZWNrQm94CTogJyc7CQoJCQoJCSRpc2lGID0gJE1haW4tPktEX0JBUkFOR19QMTA4PyRpc2lbJ2YxJ10uJy4nLiRpc2lbJ2YyJ10uJy4nLiRpc2lbJ2YnXS4nLicuJGlzaVsnZyddLicuJy4kaXNpWydoJ10uJy4nLiRpc2lbJ2knXS4nLicuJGlzaVsnaiddOiRpc2lbJ2YnXS4nLicuJGlzaVsnZyddLicuJy4kaXNpWydoJ10uJy4nLiRpc2lbJ2knXS4nLicuJGlzaVsnaiddOwoJCSRMaXN0XyA9ICRTdHlsZT09Mj8KCQkJIjx0ZCBjbGFzcz1cIiRUZFN0eWxlXCIgYWxpZ249Y2VudGVyPiRpc2lGPC90ZD4KCQkJPHRkIGNsYXNzPVwiJFRkU3R5bGVcIiBhbGlnbj1jZW50ZXI+eyRpc2lbJ25vcmVnJ119PC90ZD4KCQkJPHRkIGNsYXNzPVwiJFRkU3R5bGVcIj57JGlzaVsnaWRfYnVrdWluZHVrJ119L3skaXNpWydpZGJpX2F3YWwnXX08L3RkPgoJCQk8dGQgY2xhc3M9XCIkVGRTdHlsZVwiPnskbm1CYXJhbmdbJ25tX2JhcmFuZyddfSA8L3RkPgoJCQk8dGQgY2xhc3M9XCIkVGRTdHlsZVwiPiRJU0k1PC90ZD4KCQkJPHRkIGNsYXNzPVwiJFRkU3R5bGVcIiBhbGlnbj1jZW50ZXI+eyRpc2lbJ3Robl9wZXJvbGVoYW4nXX08L3RkPiIKCQkJOiIiOwkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoJCS8qJENoZWNrQm94ID0gJFN0eWxlPT0xPwoJCQkiPHRkIGNsYXNzPVwiJFRkU3R5bGVcIiBhbGlnbj0nY2VudGVyJz48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgaWQ9XCJjYlBMSCRjYlwiIG5hbWU9XCJjaWRQTEhbXVwiIHZhbHVlPVwieyRpc2lbJ2lkJ119XCIgb25DbGljaz1cImlzQ2hlY2tlZDIodGhpcy5jaGVja2VkLCdQZWxpaGFyYV9jaGVja2JveCcpO1wiIC8+Jm5ic3A7PC90ZD4iCgkJCToiIjsKCQkqLwoJCSRMaXN0XyA9IAoJCQkiPHRkIGNsYXNzPVwiJFRkU3R5bGVcIiBhbGlnbj1jZW50ZXIgdmFsaWduPXRvcD4kaXNpRjwvdGQ+CgkJCTx0ZCBjbGFzcz1cIiRUZFN0eWxlXCIgYWxpZ249Y2VudGVyIHZhbGlnbj10b3A+PGRpdiBjbGFzcz1uZm10Mz57JGlzaVsnbm9yZWcnXX08L2Rpdj48L3RkPgoJCQk8dGQgY2xhc3M9XCIkVGRTdHlsZVwiID57JGlzaVsnaWRfYnVrdWluZHVrJ119L3skaXNpWydpZGJpX2F3YWwnXX0gPC90ZD4KCQkJPHRkIGNsYXNzPVwiJFRkU3R5bGVcIiB2YWxpZ249dG9wPnskbm1CYXJhbmdbJ25tX2JhcmFuZyddfSA8L3RkPgoJCQk8dGQgY2xhc3M9XCIkVGRTdHlsZVwiPiRJU0k1PC90ZD4KCQkJPHRkIGNsYXNzPVwiJFRkU3R5bGVcIiBhbGlnbj1jZW50ZXIgdmFsaWduPXRvcD57JGlzaVsndGhuX3Blcm9sZWhhbiddfTwvdGQ+IjsKCQlpZiAoJHhscyl7CQkJCQkKCQkJJExpc3REYXRhIC49ICIJCgkJCTx0ciBjbGFzcz0nJGNsUm93JyBoZWlnaHQ9JzIxJz4KCQkJPHRkIGNsYXNzPVwiJFRkU3R5bGVcIiBhbGlnbj1jZW50ZXIgdmFsaWduPXRvcD4kbm88L3RkPgoJCQkkVGFtcGlsQ2hlY2tCb3hLb2wxCgkJCSRMaXN0XwoJCQk8IS0tPHRkIGNsYXNzPVwiJFRkU3R5bGVcIiB2YWxpZ249dG9wPnskaXNpWyd1cmFpYW4nXX08L3RkPi0tPgoJCQk8dGQgY2xhc3M9XCIkVGRTdHlsZVwiIHZhbGlnbj10b3A+eyRpc2lbJ3N1cmF0X25vJ119PC90ZD4KCQkJPHRkIGNsYXNzPVwiJFRkU3R5bGVcIiBhbGlnbj1jZW50ZXIgdmFsaWduPXRvcD4iLlRnbEluZCgkaXNpWydzdXJhdF90Z2wnXSkuIjwvdGQ+CgkJCTx0ZCBjbGFzcz1cIiRUZFN0eWxlXCIgYWxpZ249cmlnaHQ+Ii5udW1iZXJfZm9ybWF0KCgkaXNpWydoYXJnYV9oYXB1cyddKSwgMiwgJywnLCAnLicpLiI8L3RkPgoJCQk8dGQgY2xhc3M9XCIkVGRTdHlsZVwiIGFsaWduPXJpZ2h0PiIubnVtYmVyX2Zvcm1hdCgoJGlzaVsnaGFyZ2Ffc2NyYXAnXSksIDIsICcsJywgJy4nKS4iPC90ZD4KCQkJPHRkIGNsYXNzPVwiJFRkU3R5bGVcIiBhbGlnbj1yaWdodD4iLm51bWJlcl9mb3JtYXQoKCRpc2lbJ2hhcmdhX2F3YWwnXSksIDIsICcsJywgJy4nKS4iPC90ZD4KCQkJPCEtLTx0ZCBjbGFzcz1cIiRUZFN0eWxlXCIgYWxpZ249cmlnaHQ+Ii5udW1iZXJfZm9ybWF0KCgkaXNpWyduaWxhaV9idWt1J10pLCAyLCAnLCcsICcuJykuIjwvdGQ+CgkJCTx0ZCBjbGFzcz1cIiRUZFN0eWxlXCIgYWxpZ249cmlnaHQ+Ii5udW1iZXJfZm9ybWF0KCgkaXNpWyduaWxhaV9zdXN1dCddKSwgMiwgJywnLCAnLicpLiI8L3RkPi0tPgoJCQk8dGQgY2xhc3M9XCIkVGRTdHlsZVwiIHZhbGlnbj10b3A+eyRpc2lbJ2tldCddfTxicj4iLlRnbEluZCgkaXNpWyd0Z2xfcGVuZ2hhcHVzYW4nXSkuIjwvdGQ+CgkJCTx0ZCBjbGFzcz1cIiRUZFN0eWxlXCIgYWxpZ249Y2VudGVyPiIuVGdsSW5kKCRpc2lbJ3RnbF9wZXJvbGVoYW4nXSkuIjwvdGQ+CgkJCSRUYW1waWxDaGVja0JveEtvbDIKCQkJPC90cj4KCQkiOwoJCQkKCQl9IGVsc2UgewoJCQkkTGlzdERhdGEgLj0gIgkKCQkJPHRyIGNsYXNzPSckY2xSb3cnIGhlaWdodD0nMjEnPgoJCQk8dGQgY2xhc3M9XCIkVGRTdHlsZVwiIGFsaWduPWNlbnRlcj4kbm88L3RkPgoJCQkkVGFtcGlsQ2hlY2tCb3hLb2wxCgkJCSRMaXN0XwoJCQk8IS0tPHRkIGNsYXNzPVwiJFRkU3R5bGVcIj57JGlzaVsndXJhaWFuJ119PC90ZD4tLT4KCQkJPHRkIGNsYXNzPVwiJFRkU3R5bGVcIj57JGlzaVsnc3VyYXRfbm8nXX08L3RkPgoJCQk8dGQgY2xhc3M9XCIkVGRTdHlsZVwiIGFsaWduPWNlbnRlcj4iLlRnbEluZCgkaXNpWydzdXJhdF90Z2wnXSkuIjwvdGQ+CgkJCTx0ZCBjbGFzcz1cIiRUZFN0eWxlXCIgYWxpZ249cmlnaHQ+Ii5udW1iZXJfZm9ybWF0KCgkaXNpWydoYXJnYV9oYXB1cyddKSwgMiwgJywnLCAnLicpLiI8L3RkPgoJCQk8dGQgY2xhc3M9XCIkVGRTdHlsZVwiIGFsaWduPXJpZ2h0PiIubnVtYmVyX2Zvcm1hdCgoJGlzaVsnaGFyZ2Ffc2NyYXAnXSksIDIsICcsJywgJy4nKS4iPC90ZD4KCQkJPHRkIGNsYXNzPVwiJFRkU3R5bGVcIiBhbGlnbj1yaWdodD4iLm51bWJlcl9mb3JtYXQoKCRpc2lbJ2hhcmdhX2F3YWwnXSksIDIsICcsJywgJy4nKS4iPC90ZD4KCQkJPCEtLTx0ZCBjbGFzcz1cIiRUZFN0eWxlXCIgYWxpZ249cmlnaHQ+Ii5udW1iZXJfZm9ybWF0KCgkaXNpWyduaWxhaV9idWt1J10pLCAyLCAnLCcsICcuJykuIjwvdGQ+CgkJCTx0ZCBjbGFzcz1cIiRUZFN0eWxlXCIgYWxpZ249cmlnaHQ+Ii5udW1iZXJfZm9ybWF0KCgkaXNpWyduaWxhaV9zdXN1dCddKSwgMiwgJywnLCAnLicpLiI8L3RkPi0tPgoJCQk8dGQgY2xhc3M9XCIkVGRTdHlsZVwiPnskaXNpWydrZXQnXX08YnI+Ii5UZ2xJbmQoJGlzaVsndGdsX3BlbmdoYXB1c2FuJ10pLiI8L3RkPgoJCQk8dGQgY2xhc3M9XCIkVGRTdHlsZVwiPiIuVGdsSW5kKCRpc2lbJ3RnbF9wZXJvbGVoYW4nXSkuIjwvdGQ+CgkJCSRUYW1waWxDaGVja0JveEtvbDIKCQkJPC90cj4KCQkiOwoJCQkKCQl9CgkJJGNiKys7Cgl9CgkJCgkvL30KCQoJLy9oZWFkZXItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQkKCWlmKCRmbUtJQj09JzAxJyB8fCAkZm1LSUI9PScwMycgfHwgJGZtS0lCPT0nMDQnIHx8ICRmbUtJQj09JzA2JyApewoJCSR0YW1waWxNZXJrID0gIjx0aCBjbGFzcz0ndGgwMScgc3R5bGU9J3dpZHRoOjIwMCc+QWxhbWF0PC90aD4iOwoJfWVsc2V7CgkJJHRhbXBpbE1lcmsgPSAiPHRoIGNsYXNzPSd0aDAxJyB3aWR0aD0nNzAnPk1lcmsvIFRpcGU8L3RoPiI7CQoJfQoJaWYoJGZtS0lCPT0nMDEnICl7CgkJJHRhbXBpbFNlcnQgPSAiPHRoIGNsYXNzPVwidGgwMVwiIHdpZHRoPSc3ICAwJz5Oby4gU2VydGlmaWthdC8gVGFuZ2dhbC8gSGFrPC90aD4iOwoJfWVsc2UgaWYoICRmbUtJQj09JzAzJyB8fCAkZm1LSUI9PScwNCcgfHwgJGZtS0lCPT0nMDYnICl7CgkJJHRhbXBpbFNlcnQgPSAiPHRoIGNsYXNzPVwidGgwMVwiIHdpZHRoPSc3MCc+Tm8uIERva3VtZW4vIFRhbmdnYWwgPC90aD4iOwoJfWVsc2V7CgkJJHRhbXBpbFNlcnQgPSAiPHRoIGNsYXNzPVwidGgwMVwiIHdpZHRoPSc3MCc+Tm8uIFNlcnRpZmlrYXQvIE5vLiBQYWJyaWsvIE5vLiBDaGFzaXMvIE5vLiBNZXNpbjwvdGg+IjsJCgl9CgkkdGFtcGlsU2VydE1lcmsJPSAkdGFtcGlsTWVyayAuJHRhbXBpbFNlcnQ7CQoJJFRhbXBpbENoZWNrQm94ID0gJENldGFrPyAnJyA6ICI8VEggY2xhc3M9XCJ0aDAxXCIgIHN0eWxlPSd3aWR0aDozMCc+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJIYXB1c1NlYmFnaWFuX3RvZ2dsZVwiIHZhbHVlPVwiXCIgb25DbGljaz1cImNoZWNrQWxsMWIoJGptbFRhbXBpbFBMSCwnY2JQTEgnLCdIYXB1c1NlYmFnaWFuX3RvZ2dsZScsJ0hhcHVzU2ViYWdpYW5fY2hlY2tib3gnKTtcIiAvPjwvVEg+IjsKCSRUYW1waWxDaGVja0JveEtvbDEgPSAkU3R5bGU9PTE\/ICcnIDogJFRhbXBpbENoZWNrQm94OwkKCSRUYW1waWxDaGVja0JveEtvbDIgPSAkU3R5bGU9PTE\/ICRUYW1waWxDaGVja0JveAk6ICcnOwkKCQoJJEhlYWQxID0gJFN0eWxlPT0yPwoJCSIKCQk8VEggY2xhc3M9XCJ0aDAxXCIgcm93c3Bhbj0yIHN0eWxlPSd3aWR0aDoyMDAnPklEIEJhcmFuZyAvIElEIEF3YWw8L1RIPgkJCgkJPFRIIGNsYXNzPVwidGgwMVwiIHJvd3NwYW49MiBzdHlsZT0nd2lkdGg6MjAwJz5OYW1hIEJhcmFuZzwvVEg+CQkKCQk8VEggY2xhc3M9XCJ0aDAxXCIgcm93c3Bhbj0yIHN0eWxlPSd3aWR0aDoyMDAnPkFsYW1hdDwvVEg+CQkKCQk8VEggY2xhc3M9XCJ0aDAxXCIgcm93c3Bhbj0yPlRhaHVuPGJyPlBlcm9sZWhhbjwvVEg+IgoJCToiIjsKCSRIZWFkMiA9ICAkU3R5bGU9PTI\\/Jyc6Jy0nKSArICcnICsgbnVtICsgJywnICsgY2VudHMpOwoJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbUhBUkdBX1NDUkFQJykudmFsdWUgPSBocmdfYXdhbCAtIGhyZ19oYXB1czsKCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1IQVJHQV9TQ1JBUDInKS5pbm5lckhUTUwgPSAoKChzaWduKT8nJzonLScpICsgJycgKyBudW0pOwoJCQkJCQkJCQoJCQkJfQoJCQkiOwkJCgkJCWJyZWFrOwoJCX0KCQljYXNlIDI6ewoJCQkkcmVmcmVzaD0gJ2FkbWluRm9ybS5zdWJtaXQoKSc7Ly9kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcJ2J0VGFtcGlsXCcpLmNsaWNrKCknOwoJCQlyZXR1cm4gIgoJCQkJPGRpdj48ZGl2PjxzY3JpcHQ+CgkJCQlIYXB1c1NlYmFnaWFuU2ltcGFuPSBuZXcgQWp4U2ltcGFuT2JqKCdIYXB1c1NlYmFnaWFuU2ltcGFuJywnSGFwdXNTZWJhZ2lhblNpbXBhbl9jb3ZlcicsCgkJCQkJbmV3IEFycmF5KCdmbVRBTkdHQUxQRU5HSEFQVVNBTicsJ2ZtVVJBSUFOJywKCQkJCQkJJ2ZtU1VSQVROT01PUicsJ2ZtU1VSQVRUQU5HR0FMJywnZm1IQVJHQV9BV0FMJywnZm1IQVJHQV9IQVBVUycsJ2ZtSEFSR0FfU0NSQVAnLAoJCQkJCQknZm1LRVQnLCdpZHBsaCcsJ2Ztc3QnLCAnZm1UQU5HR0FMUEVST0xFSEFOJywgJ2lkYmlfYXdhbCcpLAoJCQkJCQknSGFwdXNTZWJhZ2lhbkZvcm0uQ2xvc2UoKTskcmVmcmVzaCcgKTsKCQkJCUhhcHVzU2ViYWdpYW5Gb3JtPSBuZXcgQWp4Rm9ybU9iaignSGFwdXNTZWJhZ2lhbkZvcm0nLCdIYXB1c1NlYmFnaWFuX2NvdmVyJywnSGFwdXNTZWJhZ2lhbl9jaGVja2JveCcsJ2ptbFRhbXBpbFBMSCcsIAoJCQkJCSdjYlBMSCcsIG5ldyBBcnJheSgpLCAnZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCdmbVRBTkdHQUxQRU5HSEFQVVNBTl90Z2xcJykuZm9jdXMoKScpOwoJCQkJSGFwdXNTZWJhZ2lhbkhhcHVzPSBuZXcgQWp4SGFwdXNPYmooJ0hhcHVzU2ViYWdpYW5IYXB1cycsICAnSGFwdXNTZWJhZ2lhbl9jb3ZlcicsICdIYXB1c1NlYmFnaWFuX2NoZWNrYm94JywgJ2ptbFRhbXBpbFBMSCcsIAoJCQkJCSdjYlBMSCcsICdjaWRQTEgnLCAnJHJlZnJlc2gnKTsJCgkJCQlmdW5jdGlvbiBHZXROaWxhaVNjYXJwKCl7CgkJCQkJdmFyIGhyZ19hd2FsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZtSEFSR0FfQVdBTCcpLnZhbHVlOyAKCQkJCQl2YXIgaHJnX2hhcHVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZtSEFSR0FfSEFQVVMnKS52YWx1ZTsKCQkJCQl2YXIgbnVtID0gIGhyZ19hd2FsIC0gaHJnX2hhcHVzOwoJCQkJCW51bSA9IG51bS50b1N0cmluZygpLnJlcGxhY2UoL1wkfFwsL2csJycpOwoJCQkJCWlmKGlzTmFOKG51bSkpCgkJCQkJbnVtID0gJzAnOwoJCQkJCXNpZ24gPSAobnVtID09IChudW0gPSBNYXRoLmFicyhudW0pKSk7CgkJCQkJbnVtID0gTWF0aC5mbG9vcihudW0qMTAwKzAuNTAwMDAwMDAwMDEpOwoJCQkJCWNlbnRzID0gbnVtJTEwMDsKCQkJCQludW0gPSBNYXRoLmZsb29yKG51bS8xMDApLnRvU3RyaW5nKCk7CgkJCQkJaWYoY2VudHM8MTApCgkJCQkJY2VudHMgPSAnMCcgKyBjZW50czsKCQkJCQlmb3IgKHZhciBpID0gMDsgaSA8IE1hdGguZmxvb3IoKG51bS5sZW5ndGgtKDEraSkpLzMpOyBpKyspCgkJCQkJbnVtID0gbnVtLnN1YnN0cmluZygwLG51bS5sZW5ndGgtKDQqaSszKSkrJy4nKwoJCQkJCW51bS5zdWJzdHJpbmcobnVtLmxlbmd0aC0oNCppKzMpKTsKCQkJCQkvL3JldHVybiAoKChzaWduKT8nJzonLScpICsgJycgKyBudW0gKyAnLCcgKyBjZW50cyk7CgkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZtSEFSR0FfU0NSQVAnKS52YWx1ZSA9IGhyZ19hd2FsIC0gaHJnX2hhcHVzOwoJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmbUhBUkdBX1NDUkFQMicpLmlubmVySFRNTCA9ICgoKHNpZ24pPycnOictJykgKyAnJyArIG51bSk7CgkJCQkJCQkJCgkJCQl9CQkKCQkJCTwvc2NyaXB0PjwvZGl2PjwvZGl2PgoJCQkiOwkJCgkJCWJyZWFrOwoJCX0KCQkKCX0gCgkKfQoKCmZ1bmN0aW9uIEhhcHVzU2ViYWdpYW5fQ2VrZGF0YUN1dG9mZigkbW9kZT0naW5zZXJ0JywkaWQ9JycsJHRnbD0nJywkaWRiaT0nJyl7Cmdsb2JhbCAkTWFpbjsKCiR1c3JsZXZlbD0kTWFpbi0+VXNlckxldmVsOwokZXJybXNnPScnOwppZiAoJHVzcmxldmVsIT0nMScpewoJCgokdGdsY3V0b2ZmPSRNYWluLT5UQUhVTl9DVVRPRkYuIi0xMi0zMSI7Cgpzd2l0Y2ggKCRtb2RlKXsKCQoKY2FzZSAnaW5zZXJ0Jzp7CglpZiAoJHRnbDwkdGdsY3V0b2ZmKSAkZXJybXNnPSJUZ2wuIHBlbmdoYXB1c2FuKCIuJHRnbC4iKSBsZWJpaCBrZWNpbCBkYXJpICB0Z2wuIGN1dCBvZmYgKCIuJHRnbGN1dG9mZi4iKSI7CgoJCSAJCglicmVhazsKfQpjYXNlICdlZGl0Jzp7Ci8vCWlmICgkdGdsPCR0Z2xjdXRvZmYpICRlcnJtc2c9IkRhdGEgZGVuZ2FuIHRnbC4gcGVuZ2hhcHVzYW4gbGViaWgga2VjaWwgZGFyaSB0Z2wuICIuJHRnbGN1dG9mZjsgCgkJCS8vY2VrIHRhbmdnYWwgYnVrdQoJaWYgKCRlcnJtc2c9PScnKXsKCQkJJGRhdGF4ID0gbXlzcWxfZmV0Y2hfYXJyYXkobXlzcWxfcXVlcnkoCgkJCQkic2VsZWN0ICogZnJvbSBwZW5naGFwdXNhbl9zZWJhZ2lhbiB3aGVyZSBpZD0nJGlkJyIpKTsKCQkJJHRnbD0kZGF0YXhbJ3RnbF9wZW5naGFwdXNhbiddOwkJCgkJCWlmICgkdGdsPD0kdGdsY3V0b2ZmKQoJCQkJJGVycm1zZz0iRGF0YSBkZW5nYW4gdGdsLiBwZW5naGFwdXNhbigiLiR0Z2wuIikgbGViaWgga2VjaWwgZGFyaSB0Z2wuIGN1dCBvZmYgKCIuJHRnbGN1dG9mZi4iKSB0aWRhayBkYXBhdCBkaWVkaXQiOwoJfQoJCglicmVhazsKfQpjYXNlICdoYXB1cyc6ewoJaWYgKCRlcnJtc2c9PScnKXsKCQkJJGRhdGF4ID0gbXlzcWxfZmV0Y2hfYXJyYXkobXlzcWxfcXVlcnkoCgkJCQkic2VsZWN0ICogZnJvbSBwZW5naGFwdXNhbl9zZWJhZ2lhbiB3aGVyZSBpZD0nJGlkJyIpKTsKCQkJJHRnbD0kZGF0YXhbJ3RnbF9wZW5naGFwdXNhbiddOwkKCQkJaWYgKCR0Z2w8PSR0Z2xjdXRvZmYpCgkJCQkkZXJybXNnPSJEYXRhIGRlbmdhbiB0Z2wuIHBlbmdoYXB1c2FuKCIuJHRnbC4iKSBsZWJpaCBrZWNpbCBkYXJpIHRnbC4gY3V0IG9mZiAoIi4kdGdsY3V0b2ZmLiIpIHRpZGFrIGRhcGF0IGRpaGFwdXMiOwoJfQoJCglicmVhazsKfQkKfQoKfQpyZXR1cm4gJGVycm1zZzsKCn0KZnVuY3Rpb24gSGFwdXNTZWJhZ2lhbl9HZXRIYXJnYVBlcm9sZWhhbkJJKCRpZD0nJykKewoJCQkkZGF0YXggPSBteXNxbF9mZXRjaF9hcnJheShteXNxbF9xdWVyeSgKCQkJCSJzZWxlY3Qgam1sX2hhcmdhIGZyb20gYnVrdV9pbmR1ayB3aGVyZSBpZD0nJGlkJyBsaW1pdCAxIikpOwkKCQkJcmV0dXJuICRkYXRheFsnam1sX2hhcmdhJ107CgkKfQoKPz4=",
    "size": "42638"
}