{
    "namaFile": "js\/master\/ref_template\/jquery-ui.min.js",
    "lastUpdate": "2017-08-28+16:22:48.73",
    "contentFile": "CS8qISBqUXVlcnkgVUkgLSB2MS4xMi4xIC0gMjAxNi0wOS0xNA0KKiBodHRwOi8vanF1ZXJ5dWkuY29tDQoqIEluY2x1ZGVzOiB3aWRnZXQuanMsIHBvc2l0aW9uLmpzLCBkYXRhLmpzLCBkaXNhYmxlLXNlbGVjdGlvbi5qcywgZWZmZWN0LmpzLCBlZmZlY3RzL2VmZmVjdC1ibGluZC5qcywgZWZmZWN0cy9lZmZlY3QtYm91bmNlLmpzLCBlZmZlY3RzL2VmZmVjdC1jbGlwLmpzLCBlZmZlY3RzL2VmZmVjdC1kcm9wLmpzLCBlZmZlY3RzL2VmZmVjdC1leHBsb2RlLmpzLCBlZmZlY3RzL2VmZmVjdC1mYWRlLmpzLCBlZmZlY3RzL2VmZmVjdC1mb2xkLmpzLCBlZmZlY3RzL2VmZmVjdC1oaWdobGlnaHQuanMsIGVmZmVjdHMvZWZmZWN0LXB1ZmYuanMsIGVmZmVjdHMvZWZmZWN0LXB1bHNhdGUuanMsIGVmZmVjdHMvZWZmZWN0LXNjYWxlLmpzLCBlZmZlY3RzL2VmZmVjdC1zaGFrZS5qcywgZWZmZWN0cy9lZmZlY3Qtc2l6ZS5qcywgZWZmZWN0cy9lZmZlY3Qtc2xpZGUuanMsIGVmZmVjdHMvZWZmZWN0LXRyYW5zZmVyLmpzLCBmb2N1c2FibGUuanMsIGZvcm0tcmVzZXQtbWl4aW4uanMsIGpxdWVyeS0xLTcuanMsIGtleWNvZGUuanMsIGxhYmVscy5qcywgc2Nyb2xsLXBhcmVudC5qcywgdGFiYmFibGUuanMsIHVuaXF1ZS1pZC5qcywgd2lkZ2V0cy9hY2NvcmRpb24uanMsIHdpZGdldHMvYXV0b2NvbXBsZXRlLmpzLCB3aWRnZXRzL2J1dHRvbi5qcywgd2lkZ2V0cy9jaGVja2JveHJhZGlvLmpzLCB3aWRnZXRzL2NvbnRyb2xncm91cC5qcywgd2lkZ2V0cy9kYXRlcGlja2VyLmpzLCB3aWRnZXRzL2RpYWxvZy5qcywgd2lkZ2V0cy9kcmFnZ2FibGUuanMsIHdpZGdldHMvZHJvcHBhYmxlLmpzLCB3aWRnZXRzL21lbnUuanMsIHdpZGdldHMvbW91c2UuanMsIHdpZGdldHMvcHJvZ3Jlc3NiYXIuanMsIHdpZGdldHMvcmVzaXphYmxlLmpzLCB3aWRnZXRzL3NlbGVjdGFibGUuanMsIHdpZGdldHMvc2VsZWN0bWVudS5qcywgd2lkZ2V0cy9zbGlkZXIuanMsIHdpZGdldHMvc29ydGFibGUuanMsIHdpZGdldHMvc3Bpbm5lci5qcywgd2lkZ2V0cy90YWJzLmpzLCB3aWRnZXRzL3Rvb2x0aXAuanMNCiogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnM7IExpY2Vuc2VkIE1JVCAqLw0KDQooZnVuY3Rpb24oIGZhY3RvcnkgKSB7DQoJaWYgKCB0eXBlb2YgZGVmaW5lID09PSAiZnVuY3Rpb24iICYmIGRlZmluZS5hbWQgKSB7DQoNCgkJLy8gQU1ELiBSZWdpc3RlciBhcyBhbiBhbm9ueW1vdXMgbW9kdWxlLg0KCQlkZWZpbmUoWyAianF1ZXJ5IiBdLCBmYWN0b3J5ICk7DQoJfSBlbHNlIHsNCg0KCQkvLyBCcm93c2VyIGdsb2JhbHMNCgkJZmFjdG9yeSggalF1ZXJ5ICk7DQoJfQ0KfShmdW5jdGlvbiggJCApIHsNCg0KJC51aSA9ICQudWkgfHwge307DQoNCnZhciB2ZXJzaW9uID0gJC51aS52ZXJzaW9uID0gIjEuMTIuMSI7DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgV2lkZ2V0IDEuMTIuMQ0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKi8NCg0KLy8+PmxhYmVsOiBXaWRnZXQNCi8vPj5ncm91cDogQ29yZQ0KLy8+PmRlc2NyaXB0aW9uOiBQcm92aWRlcyBhIGZhY3RvcnkgZm9yIGNyZWF0aW5nIHN0YXRlZnVsIHdpZGdldHMgd2l0aCBhIGNvbW1vbiBBUEkuDQovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20valF1ZXJ5LndpZGdldC8NCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS93aWRnZXQvDQoNCg0KDQp2YXIgd2lkZ2V0VXVpZCA9IDA7DQp2YXIgd2lkZ2V0U2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7DQoNCiQuY2xlYW5EYXRhID0gKCBmdW5jdGlvbiggb3JpZyApIHsNCglyZXR1cm4gZnVuY3Rpb24oIGVsZW1zICkgew0KCQl2YXIgZXZlbnRzLCBlbGVtLCBpOw0KCQlmb3IgKCBpID0gMDsgKCBlbGVtID0gZWxlbXNbIGkgXSApICE9IG51bGw7IGkrKyApIHsNCgkJCXRyeSB7DQoNCgkJCQkvLyBPbmx5IHRyaWdnZXIgcmVtb3ZlIHdoZW4gbmVjZXNzYXJ5IHRvIHNhdmUgdGltZQ0KCQkJCWV2ZW50cyA9ICQuX2RhdGEoIGVsZW0sICJldmVudHMiICk7DQoJCQkJaWYgKCBldmVudHMgJiYgZXZlbnRzLnJlbW92ZSApIHsNCgkJCQkJJCggZWxlbSApLnRyaWdnZXJIYW5kbGVyKCAicmVtb3ZlIiApOw0KCQkJCX0NCg0KCQkJLy8gSHR0cDovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvODIzNQ0KCQkJfSBjYXRjaCAoIGUgKSB7fQ0KCQl9DQoJCW9yaWcoIGVsZW1zICk7DQoJfTsNCn0gKSggJC5jbGVhbkRhdGEgKTsNCg0KJC53aWRnZXQgPSBmdW5jdGlvbiggbmFtZSwgYmFzZSwgcHJvdG90eXBlICkgew0KCXZhciBleGlzdGluZ0NvbnN0cnVjdG9yLCBjb25zdHJ1Y3RvciwgYmFzZVByb3RvdHlwZTsNCg0KCS8vIFByb3hpZWRQcm90b3R5cGUgYWxsb3dzIHRoZSBwcm92aWRlZCBwcm90b3R5cGUgdG8gcmVtYWluIHVubW9kaWZpZWQNCgkvLyBzbyB0aGF0IGl0IGNhbiBiZSB1c2VkIGFzIGEgbWl4aW4gZm9yIG11bHRpcGxlIHdpZGdldHMgKCM4ODc2KQ0KCXZhciBwcm94aWVkUHJvdG90eXBlID0ge307DQoNCgl2YXIgbmFtZXNwYWNlID0gbmFtZS5zcGxpdCggIi4iIClbIDAgXTsNCgluYW1lID0gbmFtZS5zcGxpdCggIi4iIClbIDEgXTsNCgl2YXIgZnVsbE5hbWUgPSBuYW1lc3BhY2UgKyAiLSIgKyBuYW1lOw0KDQoJaWYgKCAhcHJvdG90eXBlICkgew0KCQlwcm90b3R5cGUgPSBiYXNlOw0KCQliYXNlID0gJC5XaWRnZXQ7DQoJfQ0KDQoJaWYgKCAkLmlzQXJyYXkoIHByb3RvdHlwZSApICkgew0KCQlwcm90b3R5cGUgPSAkLmV4dGVuZC5hcHBseSggbnVsbCwgWyB7fSBdLmNvbmNhdCggcHJvdG90eXBlICkgKTsNCgl9DQoNCgkvLyBDcmVhdGUgc2VsZWN0b3IgZm9yIHBsdWdpbg0KCSQuZXhwclsgIjoiIF1bIGZ1bGxOYW1lLnRvTG93ZXJDYXNlKCkgXSA9IGZ1bmN0aW9uKCBlbGVtICkgew0KCQlyZXR1cm4gISEkLmRhdGEoIGVsZW0sIGZ1bGxOYW1lICk7DQoJfTsNCg0KCSRbIG5hbWVzcGFjZSBdID0gJFsgbmFtZXNwYWNlIF0gfHwge307DQoJZXhpc3RpbmdDb25zdHJ1Y3RvciA9ICRbIG5hbWVzcGFjZSBdWyBuYW1lIF07DQoJY29uc3RydWN0b3IgPSAkWyBuYW1lc3BhY2UgXVsgbmFtZSBdID0gZnVuY3Rpb24oIG9wdGlvbnMsIGVsZW1lbnQgKSB7DQoNCgkJLy8gQWxsb3cgaW5zdGFudGlhdGlvbiB3aXRob3V0ICJuZXciIGtleXdvcmQNCgkJaWYgKCAhdGhpcy5fY3JlYXRlV2lkZ2V0ICkgew0KCQkJcmV0dXJuIG5ldyBjb25zdHJ1Y3Rvciggb3B0aW9ucywgZWxlbWVudCApOw0KCQl9DQoNCgkJLy8gQWxsb3cgaW5zdGFudGlhdGlvbiB3aXRob3V0IGluaXRpYWxpemluZyBmb3Igc2ltcGxlIGluaGVyaXRhbmNlDQoJCS8vIG11c3QgdXNlICJuZXciIGtleXdvcmQgKHRoZSBjb2RlIGFib3ZlIGFsd2F5cyBwYXNzZXMgYXJncykNCgkJaWYgKCBhcmd1bWVudHMubGVuZ3RoICkgew0KCQkJdGhpcy5fY3JlYXRlV2lkZ2V0KCBvcHRpb25zLCBlbGVtZW50ICk7DQoJCX0NCgl9Ow0KDQoJLy8gRXh0ZW5kIHdpdGggdGhlIGV4aXN0aW5nIGNvbnN0cnVjdG9yIHRvIGNhcnJ5IG92ZXIgYW55IHN0YXRpYyBwcm9wZXJ0aWVzDQoJJC5leHRlbmQoIGNvbnN0cnVjdG9yLCBleGlzdGluZ0NvbnN0cnVjdG9yLCB7DQoJCXZlcnNpb246IHByb3RvdHlwZS52ZXJzaW9uLA0KDQoJCS8vIENvcHkgdGhlIG9iamVjdCB1c2VkIHRvIGNyZWF0ZSB0aGUgcHJvdG90eXBlIGluIGNhc2Ugd2UgbmVlZCB0bw0KCQkvLyByZWRlZmluZSB0aGUgd2lkZ2V0IGxhdGVyDQoJCV9wcm90bzogJC5leHRlbmQoIHt9LCBwcm90b3R5cGUgKSwNCg0KCQkvLyBUcmFjayB3aWRnZXRzIHRoYXQgaW5oZXJpdCBmcm9tIHRoaXMgd2lkZ2V0IGluIGNhc2UgdGhpcyB3aWRnZXQgaXMNCgkJLy8gcmVkZWZpbmVkIGFmdGVyIGEgd2lkZ2V0IGluaGVyaXRzIGZyb20gaXQNCgkJX2NoaWxkQ29uc3RydWN0b3JzOiBbXQ0KCX0gKTsNCg0KCWJhc2VQcm90b3R5cGUgPSBuZXcgYmFzZSgpOw0KDQoJLy8gV2UgbmVlZCB0byBtYWtlIHRoZSBvcHRpb25zIGhhc2ggYSBwcm9wZXJ0eSBkaXJlY3RseSBvbiB0aGUgbmV3IGluc3RhbmNlDQoJLy8gb3RoZXJ3aXNlIHdlJ2xsIG1vZGlmeSB0aGUgb3B0aW9ucyBoYXNoIG9uIHRoZSBwcm90b3R5cGUgdGhhdCB3ZSdyZQ0KCS8vIGluaGVyaXRpbmcgZnJvbQ0KCWJhc2VQcm90b3R5cGUub3B0aW9ucyA9ICQud2lkZ2V0LmV4dGVuZCgge30sIGJhc2VQcm90b3R5cGUub3B0aW9ucyApOw0KCSQuZWFjaCggcHJvdG90eXBlLCBmdW5jdGlvbiggcHJvcCwgdmFsdWUgKSB7DQoJCWlmICggISQuaXNGdW5jdGlvbiggdmFsdWUgKSApIHsNCgkJCXByb3hpZWRQcm90b3R5cGVbIHByb3AgXSA9IHZhbHVlOw0KCQkJcmV0dXJuOw0KCQl9DQoJCXByb3hpZWRQcm90b3R5cGVbIHByb3AgXSA9ICggZnVuY3Rpb24oKSB7DQoJCQlmdW5jdGlvbiBfc3VwZXIoKSB7DQoJCQkJcmV0dXJuIGJhc2UucHJvdG90eXBlWyBwcm9wIF0uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOw0KCQkJfQ0KDQoJCQlmdW5jdGlvbiBfc3VwZXJBcHBseSggYXJncyApIHsNCgkJCQlyZXR1cm4gYmFzZS5wcm90b3R5cGVbIHByb3AgXS5hcHBseSggdGhpcywgYXJncyApOw0KCQkJfQ0KDQoJCQlyZXR1cm4gZnVuY3Rpb24oKSB7DQoJCQkJdmFyIF9fc3VwZXIgPSB0aGlzLl9zdXBlcjsNCgkJCQl2YXIgX19zdXBlckFwcGx5ID0gdGhpcy5fc3VwZXJBcHBseTsNCgkJCQl2YXIgcmV0dXJuVmFsdWU7DQoNCgkJCQl0aGlzLl9zdXBlciA9IF9zdXBlcjsNCgkJCQl0aGlzLl9zdXBlckFwcGx5ID0gX3N1cGVyQXBwbHk7DQoNCgkJCQlyZXR1cm5WYWx1ZSA9IHZhbHVlLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsNCg0KCQkJCXRoaXMuX3N1cGVyID0gX19zdXBlcjsNCgkJCQl0aGlzLl9zdXBlckFwcGx5ID0gX19zdXBlckFwcGx5Ow0KDQoJCQkJcmV0dXJuIHJldHVyblZhbHVlOw0KCQkJfTsNCgkJfSApKCk7DQoJfSApOw0KCWNvbnN0cnVjdG9yLnByb3RvdHlwZSA9ICQud2lkZ2V0LmV4dGVuZCggYmFzZVByb3RvdHlwZSwgew0KDQoJCS8vIFRPRE86IHJlbW92ZSBzdXBwb3J0IGZvciB3aWRnZXRFdmVudFByZWZpeA0KCQkvLyBhbHdheXMgdXNlIHRoZSBuYW1lICsgYSBjb2xvbiBhcyB0aGUgcHJlZml4LCBlLmcuLCBkcmFnZ2FibGU6c3RhcnQNCgkJLy8gZG9uJ3QgcHJlZml4IGZvciB3aWRnZXRzIHRoYXQgYXJlbid0IERPTS1iYXNlZA0KCQl3aWRnZXRFdmVudFByZWZpeDogZXhpc3RpbmdDb25zdHJ1Y3RvciA\\/IG51bGwgOiBjdXJPcHRpb25bIGtleSBdOw0KCQkJCX0NCgkJCQljdXJPcHRpb25bIGtleSBdID0gdmFsdWU7DQoJCQl9IGVsc2Ugew0KCQkJCWlmICggYXJndW1lbnRzLmxlbmd0aCA9PT0gMSApIHsNCgkJCQkJcmV0dXJuIHRoaXMub3B0aW9uc1sga2V5IF0gPT09IHVuZGVmaW5lZCA\/IG51bGwgOiB0aGlzLm9wdGlvbnNbIGtleSBdOw0KCQkJCX0NCgkJCQlvcHRpb25zWyBrZXkgXSA9IHZhbHVlOw0KCQkJfQ0KCQl9DQoNCgkJdGhpcy5fc2V0T3B0aW9ucyggb3B0aW9ucyApOw0KDQoJCXJldHVybiB0aGlzOw0KCX0sDQoNCglfc2V0T3B0aW9uczogZnVuY3Rpb24oIG9wdGlvbnMgKSB7DQoJCXZhciBrZXk7DQoNCgkJZm9yICgga2V5IGluIG9wdGlvbnMgKSB7DQoJCQl0aGlzLl9zZXRPcHRpb24oIGtleSwgb3B0aW9uc1sga2V5IF0gKTsNCgkJfQ0KDQoJCXJldHVybiB0aGlzOw0KCX0sDQoNCglfc2V0T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsNCgkJaWYgKCBrZXkgPT09ICJjbGFzc2VzIiApIHsNCgkJCXRoaXMuX3NldE9wdGlvbkNsYXNzZXMoIHZhbHVlICk7DQoJCX0NCg0KCQl0aGlzLm9wdGlvbnNbIGtleSBdID0gdmFsdWU7DQoNCgkJaWYgKCBrZXkgPT09ICJkaXNhYmxlZCIgKSB7DQoJCQl0aGlzLl9zZXRPcHRpb25EaXNhYmxlZCggdmFsdWUgKTsNCgkJfQ0KDQoJCXJldHVybiB0aGlzOw0KCX0sDQoNCglfc2V0T3B0aW9uQ2xhc3NlczogZnVuY3Rpb24oIHZhbHVlICkgew0KCQl2YXIgY2xhc3NLZXksIGVsZW1lbnRzLCBjdXJyZW50RWxlbWVudHM7DQoNCgkJZm9yICggY2xhc3NLZXkgaW4gdmFsdWUgKSB7DQoJCQljdXJyZW50RWxlbWVudHMgPSB0aGlzLmNsYXNzZXNFbGVtZW50TG9va3VwWyBjbGFzc0tleSBdOw0KCQkJaWYgKCB2YWx1ZVsgY2xhc3NLZXkgXSA9PT0gdGhpcy5vcHRpb25zLmNsYXNzZXNbIGNsYXNzS2V5IF0gfHwNCgkJCQkJIWN1cnJlbnRFbGVtZW50cyB8fA0KCQkJCQkhY3VycmVudEVsZW1lbnRzLmxlbmd0aCApIHsNCgkJCQljb250aW51ZTsNCgkJCX0NCg0KCQkJLy8gV2UgYXJlIGRvaW5nIHRoaXMgdG8gY3JlYXRlIGEgbmV3IGpRdWVyeSBvYmplY3QgYmVjYXVzZSB0aGUgX3JlbW92ZUNsYXNzKCkgY2FsbA0KCQkJLy8gb24gdGhlIG5leHQgbGluZSBpcyBnb2luZyB0byBkZXN0cm95IHRoZSByZWZlcmVuY2UgdG8gdGhlIGN1cnJlbnQgZWxlbWVudHMgYmVpbmcNCgkJCS8vIHRyYWNrZWQuIFdlIG5lZWQgdG8gc2F2ZSBhIGNvcHkgb2YgdGhpcyBjb2xsZWN0aW9uIHNvIHRoYXQgd2UgY2FuIGFkZCB0aGUgbmV3IGNsYXNzZXMNCgkJCS8vIGJlbG93Lg0KCQkJZWxlbWVudHMgPSAkKCBjdXJyZW50RWxlbWVudHMuZ2V0KCkgKTsNCgkJCXRoaXMuX3JlbW92ZUNsYXNzKCBjdXJyZW50RWxlbWVudHMsIGNsYXNzS2V5ICk7DQoNCgkJCS8vIFdlIGRvbid0IHVzZSBfYWRkQ2xhc3MoKSBoZXJlLCBiZWNhdXNlIHRoYXQgdXNlcyB0aGlzLm9wdGlvbnMuY2xhc3Nlcw0KCQkJLy8gZm9yIGdlbmVyYXRpbmcgdGhlIHN0cmluZyBvZiBjbGFzc2VzLiBXZSB3YW50IHRvIHVzZSB0aGUgdmFsdWUgcGFzc2VkIGluIGZyb20NCgkJCS8vIF9zZXRPcHRpb24oKSwgdGhpcyBpcyB0aGUgbmV3IHZhbHVlIG9mIHRoZSBjbGFzc2VzIG9wdGlvbiB3aGljaCB3YXMgcGFzc2VkIHRvDQoJCQkvLyBfc2V0T3B0aW9uKCkuIFdlIHBhc3MgdGhpcyB2YWx1ZSBkaXJlY3RseSB0byBfY2xhc3NlcygpLg0KCQkJZWxlbWVudHMuYWRkQ2xhc3MoIHRoaXMuX2NsYXNzZXMoIHsNCgkJCQllbGVtZW50OiBlbGVtZW50cywNCgkJCQlrZXlzOiBjbGFzc0tleSwNCgkJCQljbGFzc2VzOiB2YWx1ZSwNCgkJCQlhZGQ6IHRydWUNCgkJCX0gKSApOw0KCQl9DQoJfSwNCg0KCV9zZXRPcHRpb25EaXNhYmxlZDogZnVuY3Rpb24oIHZhbHVlICkgew0KCQl0aGlzLl90b2dnbGVDbGFzcyggdGhpcy53aWRnZXQoKSwgdGhpcy53aWRnZXRGdWxsTmFtZSArICItZGlzYWJsZWQiLCBudWxsLCAhIXZhbHVlICk7DQoNCgkJLy8gSWYgdGhlIHdpZGdldCBpcyBiZWNvbWluZyBkaXNhYmxlZCwgdGhlbiBub3RoaW5nIGlzIGludGVyYWN0aXZlDQoJCWlmICggdmFsdWUgKSB7DQoJCQl0aGlzLl9yZW1vdmVDbGFzcyggdGhpcy5ob3ZlcmFibGUsIG51bGwsICJ1aS1zdGF0ZS1ob3ZlciIgKTsNCgkJCXRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLmZvY3VzYWJsZSwgbnVsbCwgInVpLXN0YXRlLWZvY3VzIiApOw0KCQl9DQoJfSwNCg0KCWVuYWJsZTogZnVuY3Rpb24oKSB7DQoJCXJldHVybiB0aGlzLl9zZXRPcHRpb25zKCB7IGRpc2FibGVkOiBmYWxzZSB9ICk7DQoJfSwNCg0KCWRpc2FibGU6IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gdGhpcy5fc2V0T3B0aW9ucyggeyBkaXNhYmxlZDogdHJ1ZSB9ICk7DQoJfSwNCg0KCV9jbGFzc2VzOiBmdW5jdGlvbiggb3B0aW9ucyApIHsNCgkJdmFyIGZ1bGwgPSBbXTsNCgkJdmFyIHRoYXQgPSB0aGlzOw0KDQoJCW9wdGlvbnMgPSAkLmV4dGVuZCggew0KCQkJZWxlbWVudDogdGhpcy5lbGVtZW50LA0KCQkJY2xhc3NlczogdGhpcy5vcHRpb25zLmNsYXNzZXMgfHwge30NCgkJfSwgb3B0aW9ucyApOw0KDQoJCWZ1bmN0aW9uIHByb2Nlc3NDbGFzc1N0cmluZyggY2xhc3NlcywgY2hlY2tPcHRpb24gKSB7DQoJCQl2YXIgY3VycmVudCwgaTsNCgkJCWZvciAoIGkgPSAwOyBpIDwgY2xhc3Nlcy5sZW5ndGg7IGkrKyApIHsNCgkJCQljdXJyZW50ID0gdGhhdC5jbGFzc2VzRWxlbWVudExvb2t1cFsgY2xhc3Nlc1sgaSBdIF0gfHwgJCgpOw0KCQkJCWlmICggb3B0aW9ucy5hZGQgKSB7DQoJCQkJCWN1cnJlbnQgPSAkKCAkLnVuaXF1ZSggY3VycmVudC5nZXQoKS5jb25jYXQoIG9wdGlvbnMuZWxlbWVudC5nZXQoKSApICkgKTsNCgkJCQl9IGVsc2Ugew0KCQkJCQljdXJyZW50ID0gJCggY3VycmVudC5ub3QoIG9wdGlvbnMuZWxlbWVudCApLmdldCgpICk7DQoJCQkJfQ0KCQkJCXRoYXQuY2xhc3Nlc0VsZW1lbnRMb29rdXBbIGNsYXNzZXNbIGkgXSBdID0gY3VycmVudDsNCgkJCQlmdWxsLnB1c2goIGNsYXNzZXNbIGkgXSApOw0KCQkJCWlmICggY2hlY2tPcHRpb24gJiYgb3B0aW9ucy5jbGFzc2VzWyBjbGFzc2VzWyBpIF0gXSApIHsNCgkJCQkJZnVsbC5wdXNoKCBvcHRpb25zLmNsYXNzZXNbIGNsYXNzZXNbIGkgXSBdICk7DQoJCQkJfQ0KCQkJfQ0KCQl9DQoNCgkJdGhpcy5fb24oIG9wdGlvbnMuZWxlbWVudCwgew0KCQkJInJlbW92ZSI6ICJfdW50cmFja0NsYXNzZXNFbGVtZW50Ig0KCQl9ICk7DQoNCgkJaWYgKCBvcHRpb25zLmtleXMgKSB7DQoJCQlwcm9jZXNzQ2xhc3NTdHJpbmcoIG9wdGlvbnMua2V5cy5tYXRjaCggL1xTKy9nICkgfHwgW10sIHRydWUgKTsNCgkJfQ0KCQlpZiAoIG9wdGlvbnMuZXh0cmEgKSB7DQoJCQlwcm9jZXNzQ2xhc3NTdHJpbmcoIG9wdGlvbnMuZXh0cmEubWF0Y2goIC9cUysvZyApIHx8IFtdICk7DQoJCX0NCg0KCQlyZXR1cm4gZnVsbC5qb2luKCAiICIgKTsNCgl9LA0KDQoJX3VudHJhY2tDbGFzc2VzRWxlbWVudDogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQl2YXIgdGhhdCA9IHRoaXM7DQoJCSQuZWFjaCggdGhhdC5jbGFzc2VzRWxlbWVudExvb2t1cCwgZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7DQoJCQlpZiAoICQuaW5BcnJheSggZXZlbnQudGFyZ2V0LCB2YWx1ZSApICE9PSAtMSApIHsNCgkJCQl0aGF0LmNsYXNzZXNFbGVtZW50TG9va3VwWyBrZXkgXSA9ICQoIHZhbHVlLm5vdCggZXZlbnQudGFyZ2V0ICkuZ2V0KCkgKTsNCgkJCX0NCgkJfSApOw0KCX0sDQoNCglfcmVtb3ZlQ2xhc3M6IGZ1bmN0aW9uKCBlbGVtZW50LCBrZXlzLCBleHRyYSApIHsNCgkJcmV0dXJuIHRoaXMuX3RvZ2dsZUNsYXNzKCBlbGVtZW50LCBrZXlzLCBleHRyYSwgZmFsc2UgKTsNCgl9LA0KDQoJX2FkZENsYXNzOiBmdW5jdGlvbiggZWxlbWVudCwga2V5cywgZXh0cmEgKSB7DQoJCXJldHVybiB0aGlzLl90b2dnbGVDbGFzcyggZWxlbWVudCwga2V5cywgZXh0cmEsIHRydWUgKTsNCgl9LA0KDQoJX3RvZ2dsZUNsYXNzOiBmdW5jdGlvbiggZWxlbWVudCwga2V5cywgZXh0cmEsIGFkZCApIHsNCgkJYWRkID0gKCB0eXBlb2YgYWRkID09PSAiYm9vbGVhbiIgKSA\/IGFkZCA6IGV4dHJhOw0KCQl2YXIgc2hpZnQgPSAoIHR5cGVvZiBlbGVtZW50ID09PSAic3RyaW5nIiB8fCBlbGVtZW50ID09PSBudWxsICksDQoJCQlvcHRpb25zID0gew0KCQkJCWV4dHJhOiBzaGlmdCA\/IGtleXMgOiBleHRyYSwNCgkJCQlrZXlzOiBzaGlmdCA\/IGVsZW1lbnQgOiBrZXlzLA0KCQkJCWVsZW1lbnQ6IHNoaWZ0ID8gdGhpcy5lbGVtZW50IDogZWxlbWVudCwNCgkJCQlhZGQ6IGFkZA0KCQkJfTsNCgkJb3B0aW9ucy5lbGVtZW50LnRvZ2dsZUNsYXNzKCB0aGlzLl9jbGFzc2VzKCBvcHRpb25zICksIGFkZCApOw0KCQlyZXR1cm4gdGhpczsNCgl9LA0KDQoJX29uOiBmdW5jdGlvbiggc3VwcHJlc3NEaXNhYmxlZENoZWNrLCBlbGVtZW50LCBoYW5kbGVycyApIHsNCgkJdmFyIGRlbGVnYXRlRWxlbWVudDsNCgkJdmFyIGluc3RhbmNlID0gdGhpczsNCg0KCQkvLyBObyBzdXBwcmVzc0Rpc2FibGVkQ2hlY2sgZmxhZywgc2h1ZmZsZSBhcmd1bWVudHMNCgkJaWYgKCB0eXBlb2Ygc3VwcHJlc3NEaXNhYmxlZENoZWNrICE9PSAiYm9vbGVhbiIgKSB7DQoJCQloYW5kbGVycyA9IGVsZW1lbnQ7DQoJCQllbGVtZW50ID0gc3VwcHJlc3NEaXNhYmxlZENoZWNrOw0KCQkJc3VwcHJlc3NEaXNhYmxlZENoZWNrID0gZmFsc2U7DQoJCX0NCg0KCQkvLyBObyBlbGVtZW50IGFyZ3VtZW50LCBzaHVmZmxlIGFuZCB1c2UgdGhpcy5lbGVtZW50DQoJCWlmICggIWhhbmRsZXJzICkgew0KCQkJaGFuZGxlcnMgPSBlbGVtZW50Ow0KCQkJZWxlbWVudCA9IHRoaXMuZWxlbWVudDsNCgkJCWRlbGVnYXRlRWxlbWVudCA9IHRoaXMud2lkZ2V0KCk7DQoJCX0gZWxzZSB7DQoJCQllbGVtZW50ID0gZGVsZWdhdGVFbGVtZW50ID0gJCggZWxlbWVudCApOw0KCQkJdGhpcy5iaW5kaW5ncyA9IHRoaXMuYmluZGluZ3MuYWRkKCBlbGVtZW50ICk7DQoJCX0NCg0KCQkkLmVhY2goIGhhbmRsZXJzLCBmdW5jdGlvbiggZXZlbnQsIGhhbmRsZXIgKSB7DQoJCQlmdW5jdGlvbiBoYW5kbGVyUHJveHkoKSB7DQoNCgkJCQkvLyBBbGxvdyB3aWRnZXRzIHRvIGN1c3RvbWl6ZSB0aGUgZGlzYWJsZWQgaGFuZGxpbmcNCgkJCQkvLyAtIGRpc2FibGVkIGFzIGFuIGFycmF5IGluc3RlYWQgb2YgYm9vbGVhbg0KCQkJCS8vIC0gZGlzYWJsZWQgY2xhc3MgYXMgbWV0aG9kIGZvciBkaXNhYmxpbmcgaW5kaXZpZHVhbCBwYXJ0cw0KCQkJCWlmICggIXN1cHByZXNzRGlzYWJsZWRDaGVjayAmJg0KCQkJCQkJKCBpbnN0YW5jZS5vcHRpb25zLmRpc2FibGVkID09PSB0cnVlIHx8DQoJCQkJCQkkKCB0aGlzICkuaGFzQ2xhc3MoICJ1aS1zdGF0ZS1kaXNhYmxlZCIgKSApICkgew0KCQkJCQlyZXR1cm47DQoJCQkJfQ0KCQkJCXJldHVybiAoIHR5cGVvZiBoYW5kbGVyID09PSAic3RyaW5nIiA\/IGluc3RhbmNlWyBoYW5kbGVyIF0gOiBoYW5kbGVyICkNCgkJCQkJLmFwcGx5KCBpbnN0YW5jZSwgYXJndW1lbnRzICk7DQoJCQl9DQoNCgkJCS8vIENvcHkgdGhlIGd1aWQgc28gZGlyZWN0IHVuYmluZGluZyB3b3Jrcw0KCQkJaWYgKCB0eXBlb2YgaGFuZGxlciAhPT0gInN0cmluZyIgKSB7DQoJCQkJaGFuZGxlclByb3h5Lmd1aWQgPSBoYW5kbGVyLmd1aWQgPQ0KCQkJCQloYW5kbGVyLmd1aWQgfHwgaGFuZGxlclByb3h5Lmd1aWQgfHwgJC5ndWlkKys7DQoJCQl9DQoNCgkJCXZhciBtYXRjaCA9IGV2ZW50Lm1hdGNoKCAvXihbXHc6LV0qKVxzKiguKikkLyApOw0KCQkJdmFyIGV2ZW50TmFtZSA9IG1hdGNoWyAxIF0gKyBpbnN0YW5jZS5ldmVudE5hbWVzcGFjZTsNCgkJCXZhciBzZWxlY3RvciA9IG1hdGNoWyAyIF07DQoNCgkJCWlmICggc2VsZWN0b3IgKSB7DQoJCQkJZGVsZWdhdGVFbGVtZW50Lm9uKCBldmVudE5hbWUsIHNlbGVjdG9yLCBoYW5kbGVyUHJveHkgKTsNCgkJCX0gZWxzZSB7DQoJCQkJZWxlbWVudC5vbiggZXZlbnROYW1lLCBoYW5kbGVyUHJveHkgKTsNCgkJCX0NCgkJfSApOw0KCX0sDQoNCglfb2ZmOiBmdW5jdGlvbiggZWxlbWVudCwgZXZlbnROYW1lICkgew0KCQlldmVudE5hbWUgPSAoIGV2ZW50TmFtZSB8fCAiIiApLnNwbGl0KCAiICIgKS5qb2luKCB0aGlzLmV2ZW50TmFtZXNwYWNlICsgIiAiICkgKw0KCQkJdGhpcy5ldmVudE5hbWVzcGFjZTsNCgkJZWxlbWVudC5vZmYoIGV2ZW50TmFtZSApLm9mZiggZXZlbnROYW1lICk7DQoNCgkJLy8gQ2xlYXIgdGhlIHN0YWNrIHRvIGF2b2lkIG1lbW9yeSBsZWFrcyAoIzEwMDU2KQ0KCQl0aGlzLmJpbmRpbmdzID0gJCggdGhpcy5iaW5kaW5ncy5ub3QoIGVsZW1lbnQgKS5nZXQoKSApOw0KCQl0aGlzLmZvY3VzYWJsZSA9ICQoIHRoaXMuZm9jdXNhYmxlLm5vdCggZWxlbWVudCApLmdldCgpICk7DQoJCXRoaXMuaG92ZXJhYmxlID0gJCggdGhpcy5ob3ZlcmFibGUubm90KCBlbGVtZW50ICkuZ2V0KCkgKTsNCgl9LA0KDQoJX2RlbGF5OiBmdW5jdGlvbiggaGFuZGxlciwgZGVsYXkgKSB7DQoJCWZ1bmN0aW9uIGhhbmRsZXJQcm94eSgpIHsNCgkJCXJldHVybiAoIHR5cGVvZiBoYW5kbGVyID09PSAic3RyaW5nIiA\/IGluc3RhbmNlWyBoYW5kbGVyIF0gOiBoYW5kbGVyICkNCgkJCQkuYXBwbHkoIGluc3RhbmNlLCBhcmd1bWVudHMgKTsNCgkJfQ0KCQl2YXIgaW5zdGFuY2UgPSB0aGlzOw0KCQlyZXR1cm4gc2V0VGltZW91dCggaGFuZGxlclByb3h5LCBkZWxheSB8fCAwICk7DQoJfSwNCg0KCV9ob3ZlcmFibGU6IGZ1bmN0aW9uKCBlbGVtZW50ICkgew0KCQl0aGlzLmhvdmVyYWJsZSA9IHRoaXMuaG92ZXJhYmxlLmFkZCggZWxlbWVudCApOw0KCQl0aGlzLl9vbiggZWxlbWVudCwgew0KCQkJbW91c2VlbnRlcjogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQkJCXRoaXMuX2FkZENsYXNzKCAkKCBldmVudC5jdXJyZW50VGFyZ2V0ICksIG51bGwsICJ1aS1zdGF0ZS1ob3ZlciIgKTsNCgkJCX0sDQoJCQltb3VzZWxlYXZlOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQkJdGhpcy5fcmVtb3ZlQ2xhc3MoICQoIGV2ZW50LmN1cnJlbnRUYXJnZXQgKSwgbnVsbCwgInVpLXN0YXRlLWhvdmVyIiApOw0KCQkJfQ0KCQl9ICk7DQoJfSwNCg0KCV9mb2N1c2FibGU6IGZ1bmN0aW9uKCBlbGVtZW50ICkgew0KCQl0aGlzLmZvY3VzYWJsZSA9IHRoaXMuZm9jdXNhYmxlLmFkZCggZWxlbWVudCApOw0KCQl0aGlzLl9vbiggZWxlbWVudCwgew0KCQkJZm9jdXNpbjogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQkJCXRoaXMuX2FkZENsYXNzKCAkKCBldmVudC5jdXJyZW50VGFyZ2V0ICksIG51bGwsICJ1aS1zdGF0ZS1mb2N1cyIgKTsNCgkJCX0sDQoJCQlmb2N1c291dDogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQkJCXRoaXMuX3JlbW92ZUNsYXNzKCAkKCBldmVudC5jdXJyZW50VGFyZ2V0ICksIG51bGwsICJ1aS1zdGF0ZS1mb2N1cyIgKTsNCgkJCX0NCgkJfSApOw0KCX0sDQoNCglfdHJpZ2dlcjogZnVuY3Rpb24oIHR5cGUsIGV2ZW50LCBkYXRhICkgew0KCQl2YXIgcHJvcCwgb3JpZzsNCgkJdmFyIGNhbGxiYWNrID0gdGhpcy5vcHRpb25zWyB0eXBlIF07DQoNCgkJZGF0YSA9IGRhdGEgfHwge307DQoJCWV2ZW50ID0gJC5FdmVudCggZXZlbnQgKTsNCgkJZXZlbnQudHlwZSA9ICggdHlwZSA9PT0gdGhpcy53aWRnZXRFdmVudFByZWZpeCA\/DQoJCQl0eXBlIDoNCgkJCXRoaXMud2lkZ2V0RXZlbnRQcmVmaXggKyB0eXBlICkudG9Mb3dlckNhc2UoKTsNCg0KCQkvLyBUaGUgb3JpZ2luYWwgZXZlbnQgbWF5IGNvbWUgZnJvbSBhbnkgZWxlbWVudA0KCQkvLyBzbyB3ZSBuZWVkIHRvIHJlc2V0IHRoZSB0YXJnZXQgb24gdGhlIG5ldyBldmVudA0KCQlldmVudC50YXJnZXQgPSB0aGlzLmVsZW1lbnRbIDAgXTsNCg0KCQkvLyBDb3B5IG9yaWdpbmFsIGV2ZW50IHByb3BlcnRpZXMgb3ZlciB0byB0aGUgbmV3IGV2ZW50DQoJCW9yaWcgPSBldmVudC5vcmlnaW5hbEV2ZW50Ow0KCQlpZiAoIG9yaWcgKSB7DQoJCQlmb3IgKCBwcm9wIGluIG9yaWcgKSB7DQoJCQkJaWYgKCAhKCBwcm9wIGluIGV2ZW50ICkgKSB7DQoJCQkJCWV2ZW50WyBwcm9wIF0gPSBvcmlnWyBwcm9wIF07DQoJCQkJfQ0KCQkJfQ0KCQl9DQoNCgkJdGhpcy5lbGVtZW50LnRyaWdnZXIoIGV2ZW50LCBkYXRhICk7DQoJCXJldHVybiAhKCAkLmlzRnVuY3Rpb24oIGNhbGxiYWNrICkgJiYNCgkJCWNhbGxiYWNrLmFwcGx5KCB0aGlzLmVsZW1lbnRbIDAgXSwgWyBldmVudCBdLmNvbmNhdCggZGF0YSApICkgPT09IGZhbHNlIHx8DQoJCQlldmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSApOw0KCX0NCn07DQoNCiQuZWFjaCggeyBzaG93OiAiZmFkZUluIiwgaGlkZTogImZhZGVPdXQiIH0sIGZ1bmN0aW9uKCBtZXRob2QsIGRlZmF1bHRFZmZlY3QgKSB7DQoJJC5XaWRnZXQucHJvdG90eXBlWyAiXyIgKyBtZXRob2QgXSA9IGZ1bmN0aW9uKCBlbGVtZW50LCBvcHRpb25zLCBjYWxsYmFjayApIHsNCgkJaWYgKCB0eXBlb2Ygb3B0aW9ucyA9PT0gInN0cmluZyIgKSB7DQoJCQlvcHRpb25zID0geyBlZmZlY3Q6IG9wdGlvbnMgfTsNCgkJfQ0KDQoJCXZhciBoYXNPcHRpb25zOw0KCQl2YXIgZWZmZWN0TmFtZSA9ICFvcHRpb25zID8NCgkJCW1ldGhvZCA6DQoJCQlvcHRpb25zID09PSB0cnVlIHx8IHR5cGVvZiBvcHRpb25zID09PSAibnVtYmVyIiA\/DQoJCQkJZGVmYXVsdEVmZmVjdCA6DQoJCQkJb3B0aW9ucy5lZmZlY3QgfHwgZGVmYXVsdEVmZmVjdDsNCg0KCQlvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsNCgkJaWYgKCB0eXBlb2Ygb3B0aW9ucyA9PT0gIm51bWJlciIgKSB7DQoJCQlvcHRpb25zID0geyBkdXJhdGlvbjogb3B0aW9ucyB9Ow0KCQl9DQoNCgkJaGFzT3B0aW9ucyA9ICEkLmlzRW1wdHlPYmplY3QoIG9wdGlvbnMgKTsNCgkJb3B0aW9ucy5jb21wbGV0ZSA9IGNhbGxiYWNrOw0KDQoJCWlmICggb3B0aW9ucy5kZWxheSApIHsNCgkJCWVsZW1lbnQuZGVsYXkoIG9wdGlvbnMuZGVsYXkgKTsNCgkJfQ0KDQoJCWlmICggaGFzT3B0aW9ucyAmJiAkLmVmZmVjdHMgJiYgJC5lZmZlY3RzLmVmZmVjdFsgZWZmZWN0TmFtZSBdICkgew0KCQkJZWxlbWVudFsgbWV0aG9kIF0oIG9wdGlvbnMgKTsNCgkJfSBlbHNlIGlmICggZWZmZWN0TmFtZSAhPT0gbWV0aG9kICYmIGVsZW1lbnRbIGVmZmVjdE5hbWUgXSApIHsNCgkJCWVsZW1lbnRbIGVmZmVjdE5hbWUgXSggb3B0aW9ucy5kdXJhdGlvbiwgb3B0aW9ucy5lYXNpbmcsIGNhbGxiYWNrICk7DQoJCX0gZWxzZSB7DQoJCQllbGVtZW50LnF1ZXVlKCBmdW5jdGlvbiggbmV4dCApIHsNCgkJCQkkKCB0aGlzIClbIG1ldGhvZCBdKCk7DQoJCQkJaWYgKCBjYWxsYmFjayApIHsNCgkJCQkJY2FsbGJhY2suY2FsbCggZWxlbWVudFsgMCBdICk7DQoJCQkJfQ0KCQkJCW5leHQoKTsNCgkJCX0gKTsNCgkJfQ0KCX07DQp9ICk7DQoNCnZhciB3aWRnZXQgPSAkLndpZGdldDsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBQb3NpdGlvbiAxLjEyLjENCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICoNCiAqIGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3Bvc2l0aW9uLw0KICovDQoNCi8vPj5sYWJlbDogUG9zaXRpb24NCi8vPj5ncm91cDogQ29yZQ0KLy8+PmRlc2NyaXB0aW9uOiBQb3NpdGlvbnMgZWxlbWVudHMgcmVsYXRpdmUgdG8gb3RoZXIgZWxlbWVudHMuDQovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vcG9zaXRpb24vDQovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vcG9zaXRpb24vDQoNCg0KKCBmdW5jdGlvbigpIHsNCnZhciBjYWNoZWRTY3JvbGxiYXJXaWR0aCwNCgltYXggPSBNYXRoLm1heCwNCglhYnMgPSBNYXRoLmFicywNCglyaG9yaXpvbnRhbCA9IC9sZWZ0fGNlbnRlcnxyaWdodC8sDQoJcnZlcnRpY2FsID0gL3RvcHxjZW50ZXJ8Ym90dG9tLywNCglyb2Zmc2V0ID0gL1tcK1wtXVxkKyhcLltcZF0rKT8lPy8sDQoJcnBvc2l0aW9uID0gL15cdysvLA0KCXJwZXJjZW50ID0gLyUkLywNCglfcG9zaXRpb24gPSAkLmZuLnBvc2l0aW9uOw0KDQpmdW5jdGlvbiBnZXRPZmZzZXRzKCBvZmZzZXRzLCB3aWR0aCwgaGVpZ2h0ICkgew0KCXJldHVybiBbDQoJCXBhcnNlRmxvYXQoIG9mZnNldHNbIDAgXSApICogKCBycGVyY2VudC50ZXN0KCBvZmZzZXRzWyAwIF0gKSA\/IHdpZHRoIC8gMTAwIDogMSApLA0KCQlwYXJzZUZsb2F0KCBvZmZzZXRzWyAxIF0gKSAqICggcnBlcmNlbnQudGVzdCggb2Zmc2V0c1sgMSBdICkgPyBoZWlnaHQgLyAxMDAgOiAxICkNCgldOw0KfQ0KDQpmdW5jdGlvbiBwYXJzZUNzcyggZWxlbWVudCwgcHJvcGVydHkgKSB7DQoJcmV0dXJuIHBhcnNlSW50KCAkLmNzcyggZWxlbWVudCwgcHJvcGVydHkgKSwgMTAgKSB8fCAwOw0KfQ0KDQpmdW5jdGlvbiBnZXREaW1lbnNpb25zKCBlbGVtICkgew0KCXZhciByYXcgPSBlbGVtWyAwIF07DQoJaWYgKCByYXcubm9kZVR5cGUgPT09IDkgKSB7DQoJCXJldHVybiB7DQoJCQl3aWR0aDogZWxlbS53aWR0aCgpLA0KCQkJaGVpZ2h0OiBlbGVtLmhlaWdodCgpLA0KCQkJb2Zmc2V0OiB7IHRvcDogMCwgbGVmdDogMCB9DQoJCX07DQoJfQ0KCWlmICggJC5pc1dpbmRvdyggcmF3ICkgKSB7DQoJCXJldHVybiB7DQoJCQl3aWR0aDogZWxlbS53aWR0aCgpLA0KCQkJaGVpZ2h0OiBlbGVtLmhlaWdodCgpLA0KCQkJb2Zmc2V0OiB7IHRvcDogZWxlbS5zY3JvbGxUb3AoKSwgbGVmdDogZWxlbS5zY3JvbGxMZWZ0KCkgfQ0KCQl9Ow0KCX0NCglpZiAoIHJhdy5wcmV2ZW50RGVmYXVsdCApIHsNCgkJcmV0dXJuIHsNCgkJCXdpZHRoOiAwLA0KCQkJaGVpZ2h0OiAwLA0KCQkJb2Zmc2V0OiB7IHRvcDogcmF3LnBhZ2VZLCBsZWZ0OiByYXcucGFnZVggfQ0KCQl9Ow0KCX0NCglyZXR1cm4gew0KCQl3aWR0aDogZWxlbS5vdXRlcldpZHRoKCksDQoJCWhlaWdodDogZWxlbS5vdXRlckhlaWdodCgpLA0KCQlvZmZzZXQ6IGVsZW0ub2Zmc2V0KCkNCgl9Ow0KfQ0KDQokLnBvc2l0aW9uID0gew0KCXNjcm9sbGJhcldpZHRoOiBmdW5jdGlvbigpIHsNCgkJaWYgKCBjYWNoZWRTY3JvbGxiYXJXaWR0aCAhPT0gdW5kZWZpbmVkICkgew0KCQkJcmV0dXJuIGNhY2hlZFNjcm9sbGJhcldpZHRoOw0KCQl9DQoJCXZhciB3MSwgdzIsDQoJCQlkaXYgPSAkKCAiPGRpdiAiICsNCgkJCQkic3R5bGU9J2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6NTBweDtoZWlnaHQ6NTBweDtvdmVyZmxvdzpoaWRkZW47Jz4iICsNCgkJCQkiPGRpdiBzdHlsZT0naGVpZ2h0OjEwMHB4O3dpZHRoOmF1dG87Jz48L2Rpdj48L2Rpdj4iICksDQoJCQlpbm5lckRpdiA9IGRpdi5jaGlsZHJlbigpWyAwIF07DQoNCgkJJCggImJvZHkiICkuYXBwZW5kKCBkaXYgKTsNCgkJdzEgPSBpbm5lckRpdi5vZmZzZXRXaWR0aDsNCgkJZGl2LmNzcyggIm92ZXJmbG93IiwgInNjcm9sbCIgKTsNCg0KCQl3MiA9IGlubmVyRGl2Lm9mZnNldFdpZHRoOw0KDQoJCWlmICggdzEgPT09IHcyICkgew0KCQkJdzIgPSBkaXZbIDAgXS5jbGllbnRXaWR0aDsNCgkJfQ0KDQoJCWRpdi5yZW1vdmUoKTsNCg0KCQlyZXR1cm4gKCBjYWNoZWRTY3JvbGxiYXJXaWR0aCA9IHcxIC0gdzIgKTsNCgl9LA0KCWdldFNjcm9sbEluZm86IGZ1bmN0aW9uKCB3aXRoaW4gKSB7DQoJCXZhciBvdmVyZmxvd1ggPSB3aXRoaW4uaXNXaW5kb3cgfHwgd2l0aGluLmlzRG9jdW1lbnQgPyAiIiA6DQoJCQkJd2l0aGluLmVsZW1lbnQuY3NzKCAib3ZlcmZsb3cteCIgKSwNCgkJCW92ZXJmbG93WSA9IHdpdGhpbi5pc1dpbmRvdyB8fCB3aXRoaW4uaXNEb2N1bWVudCA\/ICIiIDoNCgkJCQl3aXRoaW4uZWxlbWVudC5jc3MoICJvdmVyZmxvdy15IiApLA0KCQkJaGFzT3ZlcmZsb3dYID0gb3ZlcmZsb3dYID09PSAic2Nyb2xsIiB8fA0KCQkJCSggb3ZlcmZsb3dYID09PSAiYXV0byIgJiYgd2l0aGluLndpZHRoIDwgd2l0aGluLmVsZW1lbnRbIDAgXS5zY3JvbGxXaWR0aCApLA0KCQkJaGFzT3ZlcmZsb3dZID0gb3ZlcmZsb3dZID09PSAic2Nyb2xsIiB8fA0KCQkJCSggb3ZlcmZsb3dZID09PSAiYXV0byIgJiYgd2l0aGluLmhlaWdodCA8IHdpdGhpbi5lbGVtZW50WyAwIF0uc2Nyb2xsSGVpZ2h0ICk7DQoJCXJldHVybiB7DQoJCQl3aWR0aDogaGFzT3ZlcmZsb3dZID8gJC5wb3NpdGlvbi5zY3JvbGxiYXJXaWR0aCgpIDogMCwNCgkJCWhlaWdodDogaGFzT3ZlcmZsb3dYID8gJC5wb3NpdGlvbi5zY3JvbGxiYXJXaWR0aCgpIDogMA0KCQl9Ow0KCX0sDQoJZ2V0V2l0aGluSW5mbzogZnVuY3Rpb24oIGVsZW1lbnQgKSB7DQoJCXZhciB3aXRoaW5FbGVtZW50ID0gJCggZWxlbWVudCB8fCB3aW5kb3cgKSwNCgkJCWlzV2luZG93ID0gJC5pc1dpbmRvdyggd2l0aGluRWxlbWVudFsgMCBdICksDQoJCQlpc0RvY3VtZW50ID0gISF3aXRoaW5FbGVtZW50WyAwIF0gJiYgd2l0aGluRWxlbWVudFsgMCBdLm5vZGVUeXBlID09PSA5LA0KCQkJaGFzT2Zmc2V0ID0gIWlzV2luZG93ICYmICFpc0RvY3VtZW50Ow0KCQlyZXR1cm4gew0KCQkJZWxlbWVudDogd2l0aGluRWxlbWVudCwNCgkJCWlzV2luZG93OiBpc1dpbmRvdywNCgkJCWlzRG9jdW1lbnQ6IGlzRG9jdW1lbnQsDQoJCQlvZmZzZXQ6IGhhc09mZnNldCA\/ICQoIGVsZW1lbnQgKS5vZmZzZXQoKSA6IHsgbGVmdDogMCwgdG9wOiAwIH0sDQoJCQlzY3JvbGxMZWZ0OiB3aXRoaW5FbGVtZW50LnNjcm9sbExlZnQoKSwNCgkJCXNjcm9sbFRvcDogd2l0aGluRWxlbWVudC5zY3JvbGxUb3AoKSwNCgkJCXdpZHRoOiB3aXRoaW5FbGVtZW50Lm91dGVyV2lkdGgoKSwNCgkJCWhlaWdodDogd2l0aGluRWxlbWVudC5vdXRlckhlaWdodCgpDQoJCX07DQoJfQ0KfTsNCg0KJC5mbi5wb3NpdGlvbiA9IGZ1bmN0aW9uKCBvcHRpb25zICkgew0KCWlmICggIW9wdGlvbnMgfHwgIW9wdGlvbnMub2YgKSB7DQoJCXJldHVybiBfcG9zaXRpb24uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOw0KCX0NCg0KCS8vIE1ha2UgYSBjb3B5LCB3ZSBkb24ndCB3YW50IHRvIG1vZGlmeSBhcmd1bWVudHMNCglvcHRpb25zID0gJC5leHRlbmQoIHt9LCBvcHRpb25zICk7DQoNCgl2YXIgYXRPZmZzZXQsIHRhcmdldFdpZHRoLCB0YXJnZXRIZWlnaHQsIHRhcmdldE9mZnNldCwgYmFzZVBvc2l0aW9uLCBkaW1lbnNpb25zLA0KCQl0YXJnZXQgPSAkKCBvcHRpb25zLm9mICksDQoJCXdpdGhpbiA9ICQucG9zaXRpb24uZ2V0V2l0aGluSW5mbyggb3B0aW9ucy53aXRoaW4gKSwNCgkJc2Nyb2xsSW5mbyA9ICQucG9zaXRpb24uZ2V0U2Nyb2xsSW5mbyggd2l0aGluICksDQoJCWNvbGxpc2lvbiA9ICggb3B0aW9ucy5jb2xsaXNpb24gfHwgImZsaXAiICkuc3BsaXQoICIgIiApLA0KCQlvZmZzZXRzID0ge307DQoNCglkaW1lbnNpb25zID0gZ2V0RGltZW5zaW9ucyggdGFyZ2V0ICk7DQoJaWYgKCB0YXJnZXRbIDAgXS5wcmV2ZW50RGVmYXVsdCApIHsNCg0KCQkvLyBGb3JjZSBsZWZ0IHRvcCB0byBhbGxvdyBmbGlwcGluZw0KCQlvcHRpb25zLmF0ID0gImxlZnQgdG9wIjsNCgl9DQoJdGFyZ2V0V2lkdGggPSBkaW1lbnNpb25zLndpZHRoOw0KCXRhcmdldEhlaWdodCA9IGRpbWVuc2lvbnMuaGVpZ2h0Ow0KCXRhcmdldE9mZnNldCA9IGRpbWVuc2lvbnMub2Zmc2V0Ow0KDQoJLy8gQ2xvbmUgdG8gcmV1c2Ugb3JpZ2luYWwgdGFyZ2V0T2Zmc2V0IGxhdGVyDQoJYmFzZVBvc2l0aW9uID0gJC5leHRlbmQoIHt9LCB0YXJnZXRPZmZzZXQgKTsNCg0KCS8vIEZvcmNlIG15IGFuZCBhdCB0byBoYXZlIHZhbGlkIGhvcml6b250YWwgYW5kIHZlcnRpY2FsIHBvc2l0aW9ucw0KCS8vIGlmIGEgdmFsdWUgaXMgbWlzc2luZyBvciBpbnZhbGlkLCBpdCB3aWxsIGJlIGNvbnZlcnRlZCB0byBjZW50ZXINCgkkLmVhY2goIFsgIm15IiwgImF0IiBdLCBmdW5jdGlvbigpIHsNCgkJdmFyIHBvcyA9ICggb3B0aW9uc1sgdGhpcyBdIHx8ICIiICkuc3BsaXQoICIgIiApLA0KCQkJaG9yaXpvbnRhbE9mZnNldCwNCgkJCXZlcnRpY2FsT2Zmc2V0Ow0KDQoJCWlmICggcG9zLmxlbmd0aCA9PT0gMSApIHsNCgkJCXBvcyA9IHJob3Jpem9udGFsLnRlc3QoIHBvc1sgMCBdICkgPw0KCQkJCXBvcy5jb25jYXQoIFsgImNlbnRlciIgXSApIDoNCgkJCQlydmVydGljYWwudGVzdCggcG9zWyAwIF0gKSA\/DQoJCQkJCVsgImNlbnRlciIgXS5jb25jYXQoIHBvcyApIDoNCgkJCQkJWyAiY2VudGVyIiwgImNlbnRlciIgXTsNCgkJfQ0KCQlwb3NbIDAgXSA9IHJob3Jpem9udGFsLnRlc3QoIHBvc1sgMCBdICkgPyBwb3NbIDAgXSA6ICJjZW50ZXIiOw0KCQlwb3NbIDEgXSA9IHJ2ZXJ0aWNhbC50ZXN0KCBwb3NbIDEgXSApID8gcG9zWyAxIF0gOiAiY2VudGVyIjsNCg0KCQkvLyBDYWxjdWxhdGUgb2Zmc2V0cw0KCQlob3Jpem9udGFsT2Zmc2V0ID0gcm9mZnNldC5leGVjKCBwb3NbIDAgXSApOw0KCQl2ZXJ0aWNhbE9mZnNldCA9IHJvZmZzZXQuZXhlYyggcG9zWyAxIF0gKTsNCgkJb2Zmc2V0c1sgdGhpcyBdID0gWw0KCQkJaG9yaXpvbnRhbE9mZnNldCA\/IGhvcml6b250YWxPZmZzZXRbIDAgXSA6IDAsDQoJCQl2ZXJ0aWNhbE9mZnNldCA\/IHZlcnRpY2FsT2Zmc2V0WyAwIF0gOiAwDQoJCV07DQoNCgkJLy8gUmVkdWNlIHRvIGp1c3QgdGhlIHBvc2l0aW9ucyB3aXRob3V0IHRoZSBvZmZzZXRzDQoJCW9wdGlvbnNbIHRoaXMgXSA9IFsNCgkJCXJwb3NpdGlvbi5leGVjKCBwb3NbIDAgXSApWyAwIF0sDQoJCQlycG9zaXRpb24uZXhlYyggcG9zWyAxIF0gKVsgMCBdDQoJCV07DQoJfSApOw0KDQoJLy8gTm9ybWFsaXplIGNvbGxpc2lvbiBvcHRpb24NCglpZiAoIGNvbGxpc2lvbi5sZW5ndGggPT09IDEgKSB7DQoJCWNvbGxpc2lvblsgMSBdID0gY29sbGlzaW9uWyAwIF07DQoJfQ0KDQoJaWYgKCBvcHRpb25zLmF0WyAwIF0gPT09ICJyaWdodCIgKSB7DQoJCWJhc2VQb3NpdGlvbi5sZWZ0ICs9IHRhcmdldFdpZHRoOw0KCX0gZWxzZSBpZiAoIG9wdGlvbnMuYXRbIDAgXSA9PT0gImNlbnRlciIgKSB7DQoJCWJhc2VQb3NpdGlvbi5sZWZ0ICs9IHRhcmdldFdpZHRoIC8gMjsNCgl9DQoNCglpZiAoIG9wdGlvbnMuYXRbIDEgXSA9PT0gImJvdHRvbSIgKSB7DQoJCWJhc2VQb3NpdGlvbi50b3AgKz0gdGFyZ2V0SGVpZ2h0Ow0KCX0gZWxzZSBpZiAoIG9wdGlvbnMuYXRbIDEgXSA9PT0gImNlbnRlciIgKSB7DQoJCWJhc2VQb3NpdGlvbi50b3AgKz0gdGFyZ2V0SGVpZ2h0IC8gMjsNCgl9DQoNCglhdE9mZnNldCA9IGdldE9mZnNldHMoIG9mZnNldHMuYXQsIHRhcmdldFdpZHRoLCB0YXJnZXRIZWlnaHQgKTsNCgliYXNlUG9zaXRpb24ubGVmdCArPSBhdE9mZnNldFsgMCBdOw0KCWJhc2VQb3NpdGlvbi50b3AgKz0gYXRPZmZzZXRbIDEgXTsNCg0KCXJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkgew0KCQl2YXIgY29sbGlzaW9uUG9zaXRpb24sIHVzaW5nLA0KCQkJZWxlbSA9ICQoIHRoaXMgKSwNCgkJCWVsZW1XaWR0aCA9IGVsZW0ub3V0ZXJXaWR0aCgpLA0KCQkJZWxlbUhlaWdodCA9IGVsZW0ub3V0ZXJIZWlnaHQoKSwNCgkJCW1hcmdpbkxlZnQgPSBwYXJzZUNzcyggdGhpcywgIm1hcmdpbkxlZnQiICksDQoJCQltYXJnaW5Ub3AgPSBwYXJzZUNzcyggdGhpcywgIm1hcmdpblRvcCIgKSwNCgkJCWNvbGxpc2lvbldpZHRoID0gZWxlbVdpZHRoICsgbWFyZ2luTGVmdCArIHBhcnNlQ3NzKCB0aGlzLCAibWFyZ2luUmlnaHQiICkgKw0KCQkJCXNjcm9sbEluZm8ud2lkdGgsDQoJCQljb2xsaXNpb25IZWlnaHQgPSBlbGVtSGVpZ2h0ICsgbWFyZ2luVG9wICsgcGFyc2VDc3MoIHRoaXMsICJtYXJnaW5Cb3R0b20iICkgKw0KCQkJCXNjcm9sbEluZm8uaGVpZ2h0LA0KCQkJcG9zaXRpb24gPSAkLmV4dGVuZCgge30sIGJhc2VQb3NpdGlvbiApLA0KCQkJbXlPZmZzZXQgPSBnZXRPZmZzZXRzKCBvZmZzZXRzLm15LCBlbGVtLm91dGVyV2lkdGgoKSwgZWxlbS5vdXRlckhlaWdodCgpICk7DQoNCgkJaWYgKCBvcHRpb25zLm15WyAwIF0gPT09ICJyaWdodCIgKSB7DQoJCQlwb3NpdGlvbi5sZWZ0IC09IGVsZW1XaWR0aDsNCgkJfSBlbHNlIGlmICggb3B0aW9ucy5teVsgMCBdID09PSAiY2VudGVyIiApIHsNCgkJCXBvc2l0aW9uLmxlZnQgLT0gZWxlbVdpZHRoIC8gMjsNCgkJfQ0KDQoJCWlmICggb3B0aW9ucy5teVsgMSBdID09PSAiYm90dG9tIiApIHsNCgkJCXBvc2l0aW9uLnRvcCAtPSBlbGVtSGVpZ2h0Ow0KCQl9IGVsc2UgaWYgKCBvcHRpb25zLm15WyAxIF0gPT09ICJjZW50ZXIiICkgew0KCQkJcG9zaXRpb24udG9wIC09IGVsZW1IZWlnaHQgLyAyOw0KCQl9DQoNCgkJcG9zaXRpb24ubGVmdCArPSBteU9mZnNldFsgMCBdOw0KCQlwb3NpdGlvbi50b3AgKz0gbXlPZmZzZXRbIDEgXTsNCg0KCQljb2xsaXNpb25Qb3NpdGlvbiA9IHsNCgkJCW1hcmdpbkxlZnQ6IG1hcmdpbkxlZnQsDQoJCQltYXJnaW5Ub3A6IG1hcmdpblRvcA0KCQl9Ow0KDQoJCSQuZWFjaCggWyAibGVmdCIsICJ0b3AiIF0sIGZ1bmN0aW9uKCBpLCBkaXIgKSB7DQoJCQlpZiAoICQudWkucG9zaXRpb25bIGNvbGxpc2lvblsgaSBdIF0gKSB7DQoJCQkJJC51aS5wb3NpdGlvblsgY29sbGlzaW9uWyBpIF0gXVsgZGlyIF0oIHBvc2l0aW9uLCB7DQoJCQkJCXRhcmdldFdpZHRoOiB0YXJnZXRXaWR0aCwNCgkJCQkJdGFyZ2V0SGVpZ2h0OiB0YXJnZXRIZWlnaHQsDQoJCQkJCWVsZW1XaWR0aDogZWxlbVdpZHRoLA0KCQkJCQllbGVtSGVpZ2h0OiBlbGVtSGVpZ2h0LA0KCQkJCQljb2xsaXNpb25Qb3NpdGlvbjogY29sbGlzaW9uUG9zaXRpb24sDQoJCQkJCWNvbGxpc2lvbldpZHRoOiBjb2xsaXNpb25XaWR0aCwNCgkJCQkJY29sbGlzaW9uSGVpZ2h0OiBjb2xsaXNpb25IZWlnaHQsDQoJCQkJCW9mZnNldDogWyBhdE9mZnNldFsgMCBdICsgbXlPZmZzZXRbIDAgXSwgYXRPZmZzZXQgWyAxIF0gKyBteU9mZnNldFsgMSBdIF0sDQoJCQkJCW15OiBvcHRpb25zLm15LA0KCQkJCQlhdDogb3B0aW9ucy5hdCwNCgkJCQkJd2l0aGluOiB3aXRoaW4sDQoJCQkJCWVsZW06IGVsZW0NCgkJCQl9ICk7DQoJCQl9DQoJCX0gKTsNCg0KCQlpZiAoIG9wdGlvbnMudXNpbmcgKSB7DQoNCgkJCS8vIEFkZHMgZmVlZGJhY2sgYXMgc2Vjb25kIGFyZ3VtZW50IHRvIHVzaW5nIGNhbGxiYWNrLCBpZiBwcmVzZW50DQoJCQl1c2luZyA9IGZ1bmN0aW9uKCBwcm9wcyApIHsNCgkJCQl2YXIgbGVmdCA9IHRhcmdldE9mZnNldC5sZWZ0IC0gcG9zaXRpb24ubGVmdCwNCgkJCQkJcmlnaHQgPSBsZWZ0ICsgdGFyZ2V0V2lkdGggLSBlbGVtV2lkdGgsDQoJCQkJCXRvcCA9IHRhcmdldE9mZnNldC50b3AgLSBwb3NpdGlvbi50b3AsDQoJCQkJCWJvdHRvbSA9IHRvcCArIHRhcmdldEhlaWdodCAtIGVsZW1IZWlnaHQsDQoJCQkJCWZlZWRiYWNrID0gew0KCQkJCQkJdGFyZ2V0OiB7DQoJCQkJCQkJZWxlbWVudDogdGFyZ2V0LA0KCQkJCQkJCWxlZnQ6IHRhcmdldE9mZnNldC5sZWZ0LA0KCQkJCQkJCXRvcDogdGFyZ2V0T2Zmc2V0LnRvcCwNCgkJCQkJCQl3aWR0aDogdGFyZ2V0V2lkdGgsDQoJCQkJCQkJaGVpZ2h0OiB0YXJnZXRIZWlnaHQNCgkJCQkJCX0sDQoJCQkJCQllbGVtZW50OiB7DQoJCQkJCQkJZWxlbWVudDogZWxlbSwNCgkJCQkJCQlsZWZ0OiBwb3NpdGlvbi5sZWZ0LA0KCQkJCQkJCXRvcDogcG9zaXRpb24udG9wLA0KCQkJCQkJCXdpZHRoOiBlbGVtV2lkdGgsDQoJCQkJCQkJaGVpZ2h0OiBlbGVtSGVpZ2h0DQoJCQkJCQl9LA0KCQkJCQkJaG9yaXpvbnRhbDogcmlnaHQgPCAwID8gImxlZnQiIDogbGVmdCA+IDAgPyAicmlnaHQiIDogImNlbnRlciIsDQoJCQkJCQl2ZXJ0aWNhbDogYm90dG9tIDwgMCA\/ICJ0b3AiIDogdG9wID4gMCA\/ICJib3R0b20iIDogIm1pZGRsZSINCgkJCQkJfTsNCgkJCQlpZiAoIHRhcmdldFdpZHRoIDwgZWxlbVdpZHRoICYmIGFicyggbGVmdCArIHJpZ2h0ICkgPCB0YXJnZXRXaWR0aCApIHsNCgkJCQkJZmVlZGJhY2suaG9yaXpvbnRhbCA9ICJjZW50ZXIiOw0KCQkJCX0NCgkJCQlpZiAoIHRhcmdldEhlaWdodCA8IGVsZW1IZWlnaHQgJiYgYWJzKCB0b3AgKyBib3R0b20gKSA8IHRhcmdldEhlaWdodCApIHsNCgkJCQkJZmVlZGJhY2sudmVydGljYWwgPSAibWlkZGxlIjsNCgkJCQl9DQoJCQkJaWYgKCBtYXgoIGFicyggbGVmdCApLCBhYnMoIHJpZ2h0ICkgKSA+IG1heCggYWJzKCB0b3AgKSwgYWJzKCBib3R0b20gKSApICkgew0KCQkJCQlmZWVkYmFjay5pbXBvcnRhbnQgPSAiaG9yaXpvbnRhbCI7DQoJCQkJfSBlbHNlIHsNCgkJCQkJZmVlZGJhY2suaW1wb3J0YW50ID0gInZlcnRpY2FsIjsNCgkJCQl9DQoJCQkJb3B0aW9ucy51c2luZy5jYWxsKCB0aGlzLCBwcm9wcywgZmVlZGJhY2sgKTsNCgkJCX07DQoJCX0NCg0KCQllbGVtLm9mZnNldCggJC5leHRlbmQoIHBvc2l0aW9uLCB7IHVzaW5nOiB1c2luZyB9ICkgKTsNCgl9ICk7DQp9Ow0KDQokLnVpLnBvc2l0aW9uID0gew0KCWZpdDogew0KCQlsZWZ0OiBmdW5jdGlvbiggcG9zaXRpb24sIGRhdGEgKSB7DQoJCQl2YXIgd2l0aGluID0gZGF0YS53aXRoaW4sDQoJCQkJd2l0aGluT2Zmc2V0ID0gd2l0aGluLmlzV2luZG93ID8gd2l0aGluLnNjcm9sbExlZnQgOiB3aXRoaW4ub2Zmc2V0LmxlZnQsDQoJCQkJb3V0ZXJXaWR0aCA9IHdpdGhpbi53aWR0aCwNCgkJCQljb2xsaXNpb25Qb3NMZWZ0ID0gcG9zaXRpb24ubGVmdCAtIGRhdGEuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luTGVmdCwNCgkJCQlvdmVyTGVmdCA9IHdpdGhpbk9mZnNldCAtIGNvbGxpc2lvblBvc0xlZnQsDQoJCQkJb3ZlclJpZ2h0ID0gY29sbGlzaW9uUG9zTGVmdCArIGRhdGEuY29sbGlzaW9uV2lkdGggLSBvdXRlcldpZHRoIC0gd2l0aGluT2Zmc2V0LA0KCQkJCW5ld092ZXJSaWdodDsNCg0KCQkJLy8gRWxlbWVudCBpcyB3aWRlciB0aGFuIHdpdGhpbg0KCQkJaWYgKCBkYXRhLmNvbGxpc2lvbldpZHRoID4gb3V0ZXJXaWR0aCApIHsNCg0KCQkJCS8vIEVsZW1lbnQgaXMgaW5pdGlhbGx5IG92ZXIgdGhlIGxlZnQgc2lkZSBvZiB3aXRoaW4NCgkJCQlpZiAoIG92ZXJMZWZ0ID4gMCAmJiBvdmVyUmlnaHQgPD0gMCApIHsNCgkJCQkJbmV3T3ZlclJpZ2h0ID0gcG9zaXRpb24ubGVmdCArIG92ZXJMZWZ0ICsgZGF0YS5jb2xsaXNpb25XaWR0aCAtIG91dGVyV2lkdGggLQ0KCQkJCQkJd2l0aGluT2Zmc2V0Ow0KCQkJCQlwb3NpdGlvbi5sZWZ0ICs9IG92ZXJMZWZ0IC0gbmV3T3ZlclJpZ2h0Ow0KDQoJCQkJLy8gRWxlbWVudCBpcyBpbml0aWFsbHkgb3ZlciByaWdodCBzaWRlIG9mIHdpdGhpbg0KCQkJCX0gZWxzZSBpZiAoIG92ZXJSaWdodCA+IDAgJiYgb3ZlckxlZnQgPD0gMCApIHsNCgkJCQkJcG9zaXRpb24ubGVmdCA9IHdpdGhpbk9mZnNldDsNCg0KCQkJCS8vIEVsZW1lbnQgaXMgaW5pdGlhbGx5IG92ZXIgYm90aCBsZWZ0IGFuZCByaWdodCBzaWRlcyBvZiB3aXRoaW4NCgkJCQl9IGVsc2Ugew0KCQkJCQlpZiAoIG92ZXJMZWZ0ID4gb3ZlclJpZ2h0ICkgew0KCQkJCQkJcG9zaXRpb24ubGVmdCA9IHdpdGhpbk9mZnNldCArIG91dGVyV2lkdGggLSBkYXRhLmNvbGxpc2lvbldpZHRoOw0KCQkJCQl9IGVsc2Ugew0KCQkJCQkJcG9zaXRpb24ubGVmdCA9IHdpdGhpbk9mZnNldDsNCgkJCQkJfQ0KCQkJCX0NCg0KCQkJLy8gVG9vIGZhciBsZWZ0IC0+IGFsaWduIHdpdGggbGVmdCBlZGdlDQoJCQl9IGVsc2UgaWYgKCBvdmVyTGVmdCA+IDAgKSB7DQoJCQkJcG9zaXRpb24ubGVmdCArPSBvdmVyTGVmdDsNCg0KCQkJLy8gVG9vIGZhciByaWdodCAtPiBhbGlnbiB3aXRoIHJpZ2h0IGVkZ2UNCgkJCX0gZWxzZSBpZiAoIG92ZXJSaWdodCA+IDAgKSB7DQoJCQkJcG9zaXRpb24ubGVmdCAtPSBvdmVyUmlnaHQ7DQoNCgkJCS8vIEFkanVzdCBiYXNlZCBvbiBwb3NpdGlvbiBhbmQgbWFyZ2luDQoJCQl9IGVsc2Ugew0KCQkJCXBvc2l0aW9uLmxlZnQgPSBtYXgoIHBvc2l0aW9uLmxlZnQgLSBjb2xsaXNpb25Qb3NMZWZ0LCBwb3NpdGlvbi5sZWZ0ICk7DQoJCQl9DQoJCX0sDQoJCXRvcDogZnVuY3Rpb24oIHBvc2l0aW9uLCBkYXRhICkgew0KCQkJdmFyIHdpdGhpbiA9IGRhdGEud2l0aGluLA0KCQkJCXdpdGhpbk9mZnNldCA9IHdpdGhpbi5pc1dpbmRvdyA\/IHdpdGhpbi5zY3JvbGxUb3AgOiB3aXRoaW4ub2Zmc2V0LnRvcCwNCgkJCQlvdXRlckhlaWdodCA9IGRhdGEud2l0aGluLmhlaWdodCwNCgkJCQljb2xsaXNpb25Qb3NUb3AgPSBwb3NpdGlvbi50b3AgLSBkYXRhLmNvbGxpc2lvblBvc2l0aW9uLm1hcmdpblRvcCwNCgkJCQlvdmVyVG9wID0gd2l0aGluT2Zmc2V0IC0gY29sbGlzaW9uUG9zVG9wLA0KCQkJCW92ZXJCb3R0b20gPSBjb2xsaXNpb25Qb3NUb3AgKyBkYXRhLmNvbGxpc2lvbkhlaWdodCAtIG91dGVySGVpZ2h0IC0gd2l0aGluT2Zmc2V0LA0KCQkJCW5ld092ZXJCb3R0b207DQoNCgkJCS8vIEVsZW1lbnQgaXMgdGFsbGVyIHRoYW4gd2l0aGluDQoJCQlpZiAoIGRhdGEuY29sbGlzaW9uSGVpZ2h0ID4gb3V0ZXJIZWlnaHQgKSB7DQoNCgkJCQkvLyBFbGVtZW50IGlzIGluaXRpYWxseSBvdmVyIHRoZSB0b3Agb2Ygd2l0aGluDQoJCQkJaWYgKCBvdmVyVG9wID4gMCAmJiBvdmVyQm90dG9tIDw9IDAgKSB7DQoJCQkJCW5ld092ZXJCb3R0b20gPSBwb3NpdGlvbi50b3AgKyBvdmVyVG9wICsgZGF0YS5jb2xsaXNpb25IZWlnaHQgLSBvdXRlckhlaWdodCAtDQoJCQkJCQl3aXRoaW5PZmZzZXQ7DQoJCQkJCXBvc2l0aW9uLnRvcCArPSBvdmVyVG9wIC0gbmV3T3ZlckJvdHRvbTsNCg0KCQkJCS8vIEVsZW1lbnQgaXMgaW5pdGlhbGx5IG92ZXIgYm90dG9tIG9mIHdpdGhpbg0KCQkJCX0gZWxzZSBpZiAoIG92ZXJCb3R0b20gPiAwICYmIG92ZXJUb3AgPD0gMCApIHsNCgkJCQkJcG9zaXRpb24udG9wID0gd2l0aGluT2Zmc2V0Ow0KDQoJCQkJLy8gRWxlbWVudCBpcyBpbml0aWFsbHkgb3ZlciBib3RoIHRvcCBhbmQgYm90dG9tIG9mIHdpdGhpbg0KCQkJCX0gZWxzZSB7DQoJCQkJCWlmICggb3ZlclRvcCA+IG92ZXJCb3R0b20gKSB7DQoJCQkJCQlwb3NpdGlvbi50b3AgPSB3aXRoaW5PZmZzZXQgKyBvdXRlckhlaWdodCAtIGRhdGEuY29sbGlzaW9uSGVpZ2h0Ow0KCQkJCQl9IGVsc2Ugew0KCQkJCQkJcG9zaXRpb24udG9wID0gd2l0aGluT2Zmc2V0Ow0KCQkJCQl9DQoJCQkJfQ0KDQoJCQkvLyBUb28gZmFyIHVwIC0+IGFsaWduIHdpdGggdG9wDQoJCQl9IGVsc2UgaWYgKCBvdmVyVG9wID4gMCApIHsNCgkJCQlwb3NpdGlvbi50b3AgKz0gb3ZlclRvcDsNCg0KCQkJLy8gVG9vIGZhciBkb3duIC0+IGFsaWduIHdpdGggYm90dG9tIGVkZ2UNCgkJCX0gZWxzZSBpZiAoIG92ZXJCb3R0b20gPiAwICkgew0KCQkJCXBvc2l0aW9uLnRvcCAtPSBvdmVyQm90dG9tOw0KDQoJCQkvLyBBZGp1c3QgYmFzZWQgb24gcG9zaXRpb24gYW5kIG1hcmdpbg0KCQkJfSBlbHNlIHsNCgkJCQlwb3NpdGlvbi50b3AgPSBtYXgoIHBvc2l0aW9uLnRvcCAtIGNvbGxpc2lvblBvc1RvcCwgcG9zaXRpb24udG9wICk7DQoJCQl9DQoJCX0NCgl9LA0KCWZsaXA6IHsNCgkJbGVmdDogZnVuY3Rpb24oIHBvc2l0aW9uLCBkYXRhICkgew0KCQkJdmFyIHdpdGhpbiA9IGRhdGEud2l0aGluLA0KCQkJCXdpdGhpbk9mZnNldCA9IHdpdGhpbi5vZmZzZXQubGVmdCArIHdpdGhpbi5zY3JvbGxMZWZ0LA0KCQkJCW91dGVyV2lkdGggPSB3aXRoaW4ud2lkdGgsDQoJCQkJb2Zmc2V0TGVmdCA9IHdpdGhpbi5pc1dpbmRvdyA\/IHdpdGhpbi5zY3JvbGxMZWZ0IDogd2l0aGluLm9mZnNldC5sZWZ0LA0KCQkJCWNvbGxpc2lvblBvc0xlZnQgPSBwb3NpdGlvbi5sZWZ0IC0gZGF0YS5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5MZWZ0LA0KCQkJCW92ZXJMZWZ0ID0gY29sbGlzaW9uUG9zTGVmdCAtIG9mZnNldExlZnQsDQoJCQkJb3ZlclJpZ2h0ID0gY29sbGlzaW9uUG9zTGVmdCArIGRhdGEuY29sbGlzaW9uV2lkdGggLSBvdXRlcldpZHRoIC0gb2Zmc2V0TGVmdCwNCgkJCQlteU9mZnNldCA9IGRhdGEubXlbIDAgXSA9PT0gImxlZnQiID8NCgkJCQkJLWRhdGEuZWxlbVdpZHRoIDoNCgkJCQkJZGF0YS5teVsgMCBdID09PSAicmlnaHQiID8NCgkJCQkJCWRhdGEuZWxlbVdpZHRoIDoNCgkJCQkJCTAsDQoJCQkJYXRPZmZzZXQgPSBkYXRhLmF0WyAwIF0gPT09ICJsZWZ0IiA\/DQoJCQkJCWRhdGEudGFyZ2V0V2lkdGggOg0KCQkJCQlkYXRhLmF0WyAwIF0gPT09ICJyaWdodCIgPw0KCQkJCQkJLWRhdGEudGFyZ2V0V2lkdGggOg0KCQkJCQkJMCwNCgkJCQlvZmZzZXQgPSAtMiAqIGRhdGEub2Zmc2V0WyAwIF0sDQoJCQkJbmV3T3ZlclJpZ2h0LA0KCQkJCW5ld092ZXJMZWZ0Ow0KDQoJCQlpZiAoIG92ZXJMZWZ0IDwgMCApIHsNCgkJCQluZXdPdmVyUmlnaHQgPSBwb3NpdGlvbi5sZWZ0ICsgbXlPZmZzZXQgKyBhdE9mZnNldCArIG9mZnNldCArIGRhdGEuY29sbGlzaW9uV2lkdGggLQ0KCQkJCQlvdXRlcldpZHRoIC0gd2l0aGluT2Zmc2V0Ow0KCQkJCWlmICggbmV3T3ZlclJpZ2h0IDwgMCB8fCBuZXdPdmVyUmlnaHQgPCBhYnMoIG92ZXJMZWZ0ICkgKSB7DQoJCQkJCXBvc2l0aW9uLmxlZnQgKz0gbXlPZmZzZXQgKyBhdE9mZnNldCArIG9mZnNldDsNCgkJCQl9DQoJCQl9IGVsc2UgaWYgKCBvdmVyUmlnaHQgPiAwICkgew0KCQkJCW5ld092ZXJMZWZ0ID0gcG9zaXRpb24ubGVmdCAtIGRhdGEuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luTGVmdCArIG15T2Zmc2V0ICsNCgkJCQkJYXRPZmZzZXQgKyBvZmZzZXQgLSBvZmZzZXRMZWZ0Ow0KCQkJCWlmICggbmV3T3ZlckxlZnQgPiAwIHx8IGFicyggbmV3T3ZlckxlZnQgKSA8IG92ZXJSaWdodCApIHsNCgkJCQkJcG9zaXRpb24ubGVmdCArPSBteU9mZnNldCArIGF0T2Zmc2V0ICsgb2Zmc2V0Ow0KCQkJCX0NCgkJCX0NCgkJfSwNCgkJdG9wOiBmdW5jdGlvbiggcG9zaXRpb24sIGRhdGEgKSB7DQoJCQl2YXIgd2l0aGluID0gZGF0YS53aXRoaW4sDQoJCQkJd2l0aGluT2Zmc2V0ID0gd2l0aGluLm9mZnNldC50b3AgKyB3aXRoaW4uc2Nyb2xsVG9wLA0KCQkJCW91dGVySGVpZ2h0ID0gd2l0aGluLmhlaWdodCwNCgkJCQlvZmZzZXRUb3AgPSB3aXRoaW4uaXNXaW5kb3cgPyB3aXRoaW4uc2Nyb2xsVG9wIDogd2l0aGluLm9mZnNldC50b3AsDQoJCQkJY29sbGlzaW9uUG9zVG9wID0gcG9zaXRpb24udG9wIC0gZGF0YS5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5Ub3AsDQoJCQkJb3ZlclRvcCA9IGNvbGxpc2lvblBvc1RvcCAtIG9mZnNldFRvcCwNCgkJCQlvdmVyQm90dG9tID0gY29sbGlzaW9uUG9zVG9wICsgZGF0YS5jb2xsaXNpb25IZWlnaHQgLSBvdXRlckhlaWdodCAtIG9mZnNldFRvcCwNCgkJCQl0b3AgPSBkYXRhLm15WyAxIF0gPT09ICJ0b3AiLA0KCQkJCW15T2Zmc2V0ID0gdG9wID8NCgkJCQkJLWRhdGEuZWxlbUhlaWdodCA6DQoJCQkJCWRhdGEubXlbIDEgXSA9PT0gImJvdHRvbSIgPw0KCQkJCQkJZGF0YS5lbGVtSGVpZ2h0IDoNCgkJCQkJCTAsDQoJCQkJYXRPZmZzZXQgPSBkYXRhLmF0WyAxIF0gPT09ICJ0b3AiID8NCgkJCQkJZGF0YS50YXJnZXRIZWlnaHQgOg0KCQkJCQlkYXRhLmF0WyAxIF0gPT09ICJib3R0b20iID8NCgkJCQkJCS1kYXRhLnRhcmdldEhlaWdodCA6DQoJCQkJCQkwLA0KCQkJCW9mZnNldCA9IC0yICogZGF0YS5vZmZzZXRbIDEgXSwNCgkJCQluZXdPdmVyVG9wLA0KCQkJCW5ld092ZXJCb3R0b207DQoJCQlpZiAoIG92ZXJUb3AgPCAwICkgew0KCQkJCW5ld092ZXJCb3R0b20gPSBwb3NpdGlvbi50b3AgKyBteU9mZnNldCArIGF0T2Zmc2V0ICsgb2Zmc2V0ICsgZGF0YS5jb2xsaXNpb25IZWlnaHQgLQ0KCQkJCQlvdXRlckhlaWdodCAtIHdpdGhpbk9mZnNldDsNCgkJCQlpZiAoIG5ld092ZXJCb3R0b20gPCAwIHx8IG5ld092ZXJCb3R0b20gPCBhYnMoIG92ZXJUb3AgKSApIHsNCgkJCQkJcG9zaXRpb24udG9wICs9IG15T2Zmc2V0ICsgYXRPZmZzZXQgKyBvZmZzZXQ7DQoJCQkJfQ0KCQkJfSBlbHNlIGlmICggb3ZlckJvdHRvbSA+IDAgKSB7DQoJCQkJbmV3T3ZlclRvcCA9IHBvc2l0aW9uLnRvcCAtIGRhdGEuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luVG9wICsgbXlPZmZzZXQgKyBhdE9mZnNldCArDQoJCQkJCW9mZnNldCAtIG9mZnNldFRvcDsNCgkJCQlpZiAoIG5ld092ZXJUb3AgPiAwIHx8IGFicyggbmV3T3ZlclRvcCApIDwgb3ZlckJvdHRvbSApIHsNCgkJCQkJcG9zaXRpb24udG9wICs9IG15T2Zmc2V0ICsgYXRPZmZzZXQgKyBvZmZzZXQ7DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJfSwNCglmbGlwZml0OiB7DQoJCWxlZnQ6IGZ1bmN0aW9uKCkgew0KCQkJJC51aS5wb3NpdGlvbi5mbGlwLmxlZnQuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOw0KCQkJJC51aS5wb3NpdGlvbi5maXQubGVmdC5hcHBseSggdGhpcywgYXJndW1lbnRzICk7DQoJCX0sDQoJCXRvcDogZnVuY3Rpb24oKSB7DQoJCQkkLnVpLnBvc2l0aW9uLmZsaXAudG9wLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsNCgkJCSQudWkucG9zaXRpb24uZml0LnRvcC5hcHBseSggdGhpcywgYXJndW1lbnRzICk7DQoJCX0NCgl9DQp9Ow0KDQp9ICkoKTsNCg0KdmFyIHBvc2l0aW9uID0gJC51aS5wb3NpdGlvbjsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSA6ZGF0YSAxLjEyLjENCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICovDQoNCi8vPj5sYWJlbDogOmRhdGEgU2VsZWN0b3INCi8vPj5ncm91cDogQ29yZQ0KLy8+PmRlc2NyaXB0aW9uOiBTZWxlY3RzIGVsZW1lbnRzIHdoaWNoIGhhdmUgZGF0YSBzdG9yZWQgdW5kZXIgdGhlIHNwZWNpZmllZCBrZXkuDQovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vZGF0YS1zZWxlY3Rvci8NCg0KDQp2YXIgZGF0YSA9ICQuZXh0ZW5kKCAkLmV4cHJbICI6IiBdLCB7DQoJZGF0YTogJC5leHByLmNyZWF0ZVBzZXVkbyA\/DQoJCSQuZXhwci5jcmVhdGVQc2V1ZG8oIGZ1bmN0aW9uKCBkYXRhTmFtZSApIHsNCgkJCXJldHVybiBmdW5jdGlvbiggZWxlbSApIHsNCgkJCQlyZXR1cm4gISEkLmRhdGEoIGVsZW0sIGRhdGFOYW1lICk7DQoJCQl9Ow0KCQl9ICkgOg0KDQoJCS8vIFN1cHBvcnQ6IGpRdWVyeSA8MS44DQoJCWZ1bmN0aW9uKCBlbGVtLCBpLCBtYXRjaCApIHsNCgkJCXJldHVybiAhISQuZGF0YSggZWxlbSwgbWF0Y2hbIDMgXSApOw0KCQl9DQp9ICk7DQoNCi8qIQ0KICogalF1ZXJ5IFVJIERpc2FibGUgU2VsZWN0aW9uIDEuMTIuMQ0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKi8NCg0KLy8+PmxhYmVsOiBkaXNhYmxlU2VsZWN0aW9uDQovLz4+Z3JvdXA6IENvcmUNCi8vPj5kZXNjcmlwdGlvbjogRGlzYWJsZSBzZWxlY3Rpb24gb2YgdGV4dCBjb250ZW50IHdpdGhpbiB0aGUgc2V0IG9mIG1hdGNoZWQgZWxlbWVudHMuDQovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vZGlzYWJsZVNlbGVjdGlvbi8NCg0KLy8gVGhpcyBmaWxlIGlzIGRlcHJlY2F0ZWQNCg0KDQp2YXIgZGlzYWJsZVNlbGVjdGlvbiA9ICQuZm4uZXh0ZW5kKCB7DQoJZGlzYWJsZVNlbGVjdGlvbjogKCBmdW5jdGlvbigpIHsNCgkJdmFyIGV2ZW50VHlwZSA9ICJvbnNlbGVjdHN0YXJ0IiBpbiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCAiZGl2IiApID8NCgkJCSJzZWxlY3RzdGFydCIgOg0KCQkJIm1vdXNlZG93biI7DQoNCgkJcmV0dXJuIGZ1bmN0aW9uKCkgew0KCQkJcmV0dXJuIHRoaXMub24oIGV2ZW50VHlwZSArICIudWktZGlzYWJsZVNlbGVjdGlvbiIsIGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOw0KCQkJfSApOw0KCQl9Ow0KCX0gKSgpLA0KDQoJZW5hYmxlU2VsZWN0aW9uOiBmdW5jdGlvbigpIHsNCgkJcmV0dXJuIHRoaXMub2ZmKCAiLnVpLWRpc2FibGVTZWxlY3Rpb24iICk7DQoJfQ0KfSApOw0KDQoNCi8qIQ0KICogalF1ZXJ5IFVJIEVmZmVjdHMgMS4xMi4xDQogKiBodHRwOi8vanF1ZXJ5dWkuY29tDQogKg0KICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqLw0KDQovLz4+bGFiZWw6IEVmZmVjdHMgQ29yZQ0KLy8+Pmdyb3VwOiBFZmZlY3RzDQovLyBqc2NzOmRpc2FibGUgbWF4aW11bUxpbmVMZW5ndGgNCi8vPj5kZXNjcmlwdGlvbjogRXh0ZW5kcyB0aGUgaW50ZXJuYWwgalF1ZXJ5IGVmZmVjdHMuIEluY2x1ZGVzIG1vcnBoaW5nIGFuZCBlYXNpbmcuIFJlcXVpcmVkIGJ5IGFsbCBvdGhlciBlZmZlY3RzLg0KLy8ganNjczplbmFibGUgbWF4aW11bUxpbmVMZW5ndGgNCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9jYXRlZ29yeS9lZmZlY3RzLWNvcmUvDQovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vZWZmZWN0Lw0KDQoNCg0KdmFyIGRhdGFTcGFjZSA9ICJ1aS1lZmZlY3RzLSIsDQoJZGF0YVNwYWNlU3R5bGUgPSAidWktZWZmZWN0cy1zdHlsZSIsDQoJZGF0YVNwYWNlQW5pbWF0ZWQgPSAidWktZWZmZWN0cy1hbmltYXRlZCIsDQoNCgkvLyBDcmVhdGUgYSBsb2NhbCBqUXVlcnkgYmVjYXVzZSBqUXVlcnkgQ29sb3IgcmVsaWVzIG9uIGl0IGFuZCB0aGUNCgkvLyBnbG9iYWwgbWF5IG5vdCBleGlzdCB3aXRoIEFNRCBhbmQgYSBjdXN0b20gYnVpbGQgKCMxMDE5OSkNCglqUXVlcnkgPSAkOw0KDQokLmVmZmVjdHMgPSB7DQoJZWZmZWN0OiB7fQ0KfTsNCg0KLyohDQogKiBqUXVlcnkgQ29sb3IgQW5pbWF0aW9ucyB2Mi4xLjINCiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvanF1ZXJ5LWNvbG9yDQogKg0KICogQ29weXJpZ2h0IDIwMTQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICoNCiAqIERhdGU6IFdlZCBKYW4gMTYgMDg6NDc6MDkgMjAxMyAtMDYwMA0KICovDQooIGZ1bmN0aW9uKCBqUXVlcnksIHVuZGVmaW5lZCApIHsNCg0KCXZhciBzdGVwSG9va3MgPSAiYmFja2dyb3VuZENvbG9yIGJvcmRlckJvdHRvbUNvbG9yIGJvcmRlckxlZnRDb2xvciBib3JkZXJSaWdodENvbG9yICIgKw0KCQkiYm9yZGVyVG9wQ29sb3IgY29sb3IgY29sdW1uUnVsZUNvbG9yIG91dGxpbmVDb2xvciB0ZXh0RGVjb3JhdGlvbkNvbG9yIHRleHRFbXBoYXNpc0NvbG9yIiwNCg0KCS8vIFBsdXNlcXVhbHMgdGVzdCBmb3IgKz0gMTAwIC09IDEwMA0KCXJwbHVzZXF1YWxzID0gL14oW1wtK10pPVxzKihcZCtcLj9cZCopLywNCg0KCS8vIEEgc2V0IG9mIFJFJ3MgdGhhdCBjYW4gbWF0Y2ggc3RyaW5ncyBhbmQgZ2VuZXJhdGUgY29sb3IgdHVwbGVzLg0KCXN0cmluZ1BhcnNlcnMgPSBbIHsNCgkJCXJlOiAvcmdiYT9cKFxzKihcZHsxLDN9KVxzKixccyooXGR7MSwzfSlccyosXHMqKFxkezEsM30pXHMqKD86LFxzKihcZD8oPzpcLlxkKyk\/KVxzKik\/XCkvLA0KCQkJcGFyc2U6IGZ1bmN0aW9uKCBleGVjUmVzdWx0ICkgew0KCQkJCXJldHVybiBbDQoJCQkJCWV4ZWNSZXN1bHRbIDEgXSwNCgkJCQkJZXhlY1Jlc3VsdFsgMiBdLA0KCQkJCQlleGVjUmVzdWx0WyAzIF0sDQoJCQkJCWV4ZWNSZXN1bHRbIDQgXQ0KCQkJCV07DQoJCQl9DQoJCX0sIHsNCgkJCXJlOiAvcmdiYT9cKFxzKihcZCsoPzpcLlxkKyk\/KVwlXHMqLFxzKihcZCsoPzpcLlxkKyk\/KVwlXHMqLFxzKihcZCsoPzpcLlxkKyk\/KVwlXHMqKD86LFxzKihcZD8oPzpcLlxkKyk\/KVxzKik\/XCkvLA0KCQkJcGFyc2U6IGZ1bmN0aW9uKCBleGVjUmVzdWx0ICkgew0KCQkJCXJldHVybiBbDQoJCQkJCWV4ZWNSZXN1bHRbIDEgXSAqIDIuNTUsDQoJCQkJCWV4ZWNSZXN1bHRbIDIgXSAqIDIuNTUsDQoJCQkJCWV4ZWNSZXN1bHRbIDMgXSAqIDIuNTUsDQoJCQkJCWV4ZWNSZXN1bHRbIDQgXQ0KCQkJCV07DQoJCQl9DQoJCX0sIHsNCg0KCQkJLy8gVGhpcyByZWdleCBpZ25vcmVzIEEtRiBiZWNhdXNlIGl0J3MgY29tcGFyZWQgYWdhaW5zdCBhbiBhbHJlYWR5IGxvd2VyY2FzZWQgc3RyaW5nDQoJCQlyZTogLyMoW2EtZjAtOV17Mn0pKFthLWYwLTldezJ9KShbYS1mMC05XXsyfSkvLA0KCQkJcGFyc2U6IGZ1bmN0aW9uKCBleGVjUmVzdWx0ICkgew0KCQkJCXJldHVybiBbDQoJCQkJCXBhcnNlSW50KCBleGVjUmVzdWx0WyAxIF0sIDE2ICksDQoJCQkJCXBhcnNlSW50KCBleGVjUmVzdWx0WyAyIF0sIDE2ICksDQoJCQkJCXBhcnNlSW50KCBleGVjUmVzdWx0WyAzIF0sIDE2ICkNCgkJCQldOw0KCQkJfQ0KCQl9LCB7DQoNCgkJCS8vIFRoaXMgcmVnZXggaWdub3JlcyBBLUYgYmVjYXVzZSBpdCdzIGNvbXBhcmVkIGFnYWluc3QgYW4gYWxyZWFkeSBsb3dlcmNhc2VkIHN0cmluZw0KCQkJcmU6IC8jKFthLWYwLTldKShbYS1mMC05XSkoW2EtZjAtOV0pLywNCgkJCXBhcnNlOiBmdW5jdGlvbiggZXhlY1Jlc3VsdCApIHsNCgkJCQlyZXR1cm4gWw0KCQkJCQlwYXJzZUludCggZXhlY1Jlc3VsdFsgMSBdICsgZXhlY1Jlc3VsdFsgMSBdLCAxNiApLA0KCQkJCQlwYXJzZUludCggZXhlY1Jlc3VsdFsgMiBdICsgZXhlY1Jlc3VsdFsgMiBdLCAxNiApLA0KCQkJCQlwYXJzZUludCggZXhlY1Jlc3VsdFsgMyBdICsgZXhlY1Jlc3VsdFsgMyBdLCAxNiApDQoJCQkJXTsNCgkJCX0NCgkJfSwgew0KCQkJcmU6IC9oc2xhP1woXHMqKFxkKyg\/OlwuXGQrKT8pXHMqLFxzKihcZCsoPzpcLlxkKyk\/KVwlXHMqLFxzKihcZCsoPzpcLlxkKyk\/KVwlXHMqKD86LFxzKihcZD8oPzpcLlxkKyk\/KVxzKik\/XCkvLA0KCQkJc3BhY2U6ICJoc2xhIiwNCgkJCXBhcnNlOiBmdW5jdGlvbiggZXhlY1Jlc3VsdCApIHsNCgkJCQlyZXR1cm4gWw0KCQkJCQlleGVjUmVzdWx0WyAxIF0sDQoJCQkJCWV4ZWNSZXN1bHRbIDIgXSAvIDEwMCwNCgkJCQkJZXhlY1Jlc3VsdFsgMyBdIC8gMTAwLA0KCQkJCQlleGVjUmVzdWx0WyA0IF0NCgkJCQldOw0KCQkJfQ0KCQl9IF0sDQoNCgkvLyBKUXVlcnkuQ29sb3IoICkNCgljb2xvciA9IGpRdWVyeS5Db2xvciA9IGZ1bmN0aW9uKCBjb2xvciwgZ3JlZW4sIGJsdWUsIGFscGhhICkgew0KCQlyZXR1cm4gbmV3IGpRdWVyeS5Db2xvci5mbi5wYXJzZSggY29sb3IsIGdyZWVuLCBibHVlLCBhbHBoYSApOw0KCX0sDQoJc3BhY2VzID0gew0KCQlyZ2JhOiB7DQoJCQlwcm9wczogew0KCQkJCXJlZDogew0KCQkJCQlpZHg6IDAsDQoJCQkJCXR5cGU6ICJieXRlIg0KCQkJCX0sDQoJCQkJZ3JlZW46IHsNCgkJCQkJaWR4OiAxLA0KCQkJCQl0eXBlOiAiYnl0ZSINCgkJCQl9LA0KCQkJCWJsdWU6IHsNCgkJCQkJaWR4OiAyLA0KCQkJCQl0eXBlOiAiYnl0ZSINCgkJCQl9DQoJCQl9DQoJCX0sDQoNCgkJaHNsYTogew0KCQkJcHJvcHM6IHsNCgkJCQlodWU6IHsNCgkJCQkJaWR4OiAwLA0KCQkJCQl0eXBlOiAiZGVncmVlcyINCgkJCQl9LA0KCQkJCXNhdHVyYXRpb246IHsNCgkJCQkJaWR4OiAxLA0KCQkJCQl0eXBlOiAicGVyY2VudCINCgkJCQl9LA0KCQkJCWxpZ2h0bmVzczogew0KCQkJCQlpZHg6IDIsDQoJCQkJCXR5cGU6ICJwZXJjZW50Ig0KCQkJCX0NCgkJCX0NCgkJfQ0KCX0sDQoJcHJvcFR5cGVzID0gew0KCQkiYnl0ZSI6IHsNCgkJCWZsb29yOiB0cnVlLA0KCQkJbWF4OiAyNTUNCgkJfSwNCgkJInBlcmNlbnQiOiB7DQoJCQltYXg6IDENCgkJfSwNCgkJImRlZ3JlZXMiOiB7DQoJCQltb2Q6IDM2MCwNCgkJCWZsb29yOiB0cnVlDQoJCX0NCgl9LA0KCXN1cHBvcnQgPSBjb2xvci5zdXBwb3J0ID0ge30sDQoNCgkvLyBFbGVtZW50IGZvciBzdXBwb3J0IHRlc3RzDQoJc3VwcG9ydEVsZW0gPSBqUXVlcnkoICI8cD4iIClbIDAgXSwNCg0KCS8vIENvbG9ycyA9IGpRdWVyeS5Db2xvci5uYW1lcw0KCWNvbG9ycywNCg0KCS8vIExvY2FsIGFsaWFzZXMgb2YgZnVuY3Rpb25zIGNhbGxlZCBvZnRlbg0KCWVhY2ggPSBqUXVlcnkuZWFjaDsNCg0KLy8gRGV0ZXJtaW5lIHJnYmEgc3VwcG9ydCBpbW1lZGlhdGVseQ0Kc3VwcG9ydEVsZW0uc3R5bGUuY3NzVGV4dCA9ICJiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMSwxLDEsLjUpIjsNCnN1cHBvcnQucmdiYSA9IHN1cHBvcnRFbGVtLnN0eWxlLmJhY2tncm91bmRDb2xvci5pbmRleE9mKCAicmdiYSIgKSA+IC0xOw0KDQovLyBEZWZpbmUgY2FjaGUgbmFtZSBhbmQgYWxwaGEgcHJvcGVydGllcw0KLy8gZm9yIHJnYmEgYW5kIGhzbGEgc3BhY2VzDQplYWNoKCBzcGFjZXMsIGZ1bmN0aW9uKCBzcGFjZU5hbWUsIHNwYWNlICkgew0KCXNwYWNlLmNhY2hlID0gIl8iICsgc3BhY2VOYW1lOw0KCXNwYWNlLnByb3BzLmFscGhhID0gew0KCQlpZHg6IDMsDQoJCXR5cGU6ICJwZXJjZW50IiwNCgkJZGVmOiAxDQoJfTsNCn0gKTsNCg0KZnVuY3Rpb24gY2xhbXAoIHZhbHVlLCBwcm9wLCBhbGxvd0VtcHR5ICkgew0KCXZhciB0eXBlID0gcHJvcFR5cGVzWyBwcm9wLnR5cGUgXSB8fCB7fTsNCg0KCWlmICggdmFsdWUgPT0gbnVsbCApIHsNCgkJcmV0dXJuICggYWxsb3dFbXB0eSB8fCAhcHJvcC5kZWYgKSA\/IG51bGwgOiBwcm9wLmRlZjsNCgl9DQoNCgkvLyB+fiBpcyBhbiBzaG9ydCB3YXkgb2YgZG9pbmcgZmxvb3IgZm9yIHBvc2l0aXZlIG51bWJlcnMNCgl2YWx1ZSA9IHR5cGUuZmxvb3IgPyB+fnZhbHVlIDogcGFyc2VGbG9hdCggdmFsdWUgKTsNCg0KCS8vIElFIHdpbGwgcGFzcyBpbiBlbXB0eSBzdHJpbmdzIGFzIHZhbHVlIGZvciBhbHBoYSwNCgkvLyB3aGljaCB3aWxsIGhpdCB0aGlzIGNhc2UNCglpZiAoIGlzTmFOKCB2YWx1ZSApICkgew0KCQlyZXR1cm4gcHJvcC5kZWY7DQoJfQ0KDQoJaWYgKCB0eXBlLm1vZCApIHsNCg0KCQkvLyBXZSBhZGQgbW9kIGJlZm9yZSBtb2RkaW5nIHRvIG1ha2Ugc3VyZSB0aGF0IG5lZ2F0aXZlcyB2YWx1ZXMNCgkJLy8gZ2V0IGNvbnZlcnRlZCBwcm9wZXJseTogLTEwIC0+IDM1MA0KCQlyZXR1cm4gKCB2YWx1ZSArIHR5cGUubW9kICkgJSB0eXBlLm1vZDsNCgl9DQoNCgkvLyBGb3Igbm93IGFsbCBwcm9wZXJ0eSB0eXBlcyB3aXRob3V0IG1vZCBoYXZlIG1pbiBhbmQgbWF4DQoJcmV0dXJuIDAgPiB2YWx1ZSA\/IDAgOiB0eXBlLm1heCA8IHZhbHVlID8gdHlwZS5tYXggOiB2YWx1ZTsNCn0NCg0KZnVuY3Rpb24gc3RyaW5nUGFyc2UoIHN0cmluZyApIHsNCgl2YXIgaW5zdCA9IGNvbG9yKCksDQoJCXJnYmEgPSBpbnN0Ll9yZ2JhID0gW107DQoNCglzdHJpbmcgPSBzdHJpbmcudG9Mb3dlckNhc2UoKTsNCg0KCWVhY2goIHN0cmluZ1BhcnNlcnMsIGZ1bmN0aW9uKCBpLCBwYXJzZXIgKSB7DQoJCXZhciBwYXJzZWQsDQoJCQltYXRjaCA9IHBhcnNlci5yZS5leGVjKCBzdHJpbmcgKSwNCgkJCXZhbHVlcyA9IG1hdGNoICYmIHBhcnNlci5wYXJzZSggbWF0Y2ggKSwNCgkJCXNwYWNlTmFtZSA9IHBhcnNlci5zcGFjZSB8fCAicmdiYSI7DQoNCgkJaWYgKCB2YWx1ZXMgKSB7DQoJCQlwYXJzZWQgPSBpbnN0WyBzcGFjZU5hbWUgXSggdmFsdWVzICk7DQoNCgkJCS8vIElmIHRoaXMgd2FzIGFuIHJnYmEgcGFyc2UgdGhlIGFzc2lnbm1lbnQgbWlnaHQgaGFwcGVuIHR3aWNlDQoJCQkvLyBvaCB3ZWxsLi4uLg0KCQkJaW5zdFsgc3BhY2VzWyBzcGFjZU5hbWUgXS5jYWNoZSBdID0gcGFyc2VkWyBzcGFjZXNbIHNwYWNlTmFtZSBdLmNhY2hlIF07DQoJCQlyZ2JhID0gaW5zdC5fcmdiYSA9IHBhcnNlZC5fcmdiYTsNCg0KCQkJLy8gRXhpdCBlYWNoKCBzdHJpbmdQYXJzZXJzICkgaGVyZSBiZWNhdXNlIHdlIG1hdGNoZWQNCgkJCXJldHVybiBmYWxzZTsNCgkJfQ0KCX0gKTsNCg0KCS8vIEZvdW5kIGEgc3RyaW5nUGFyc2VyIHRoYXQgaGFuZGxlZCBpdA0KCWlmICggcmdiYS5sZW5ndGggKSB7DQoNCgkJLy8gSWYgdGhpcyBjYW1lIGZyb20gYSBwYXJzZWQgc3RyaW5nLCBmb3JjZSAidHJhbnNwYXJlbnQiIHdoZW4gYWxwaGEgaXMgMA0KCQkvLyBjaHJvbWUsIChhbmQgbWF5YmUgb3RoZXJzKSByZXR1cm4gInRyYW5zcGFyZW50IiBhcyByZ2JhKDAsMCwwLDApDQoJCWlmICggcmdiYS5qb2luKCkgPT09ICIwLDAsMCwwIiApIHsNCgkJCWpRdWVyeS5leHRlbmQoIHJnYmEsIGNvbG9ycy50cmFuc3BhcmVudCApOw0KCQl9DQoJCXJldHVybiBpbnN0Ow0KCX0NCg0KCS8vIE5hbWVkIGNvbG9ycw0KCXJldHVybiBjb2xvcnNbIHN0cmluZyBdOw0KfQ0KDQpjb2xvci5mbiA9IGpRdWVyeS5leHRlbmQoIGNvbG9yLnByb3RvdHlwZSwgew0KCXBhcnNlOiBmdW5jdGlvbiggcmVkLCBncmVlbiwgYmx1ZSwgYWxwaGEgKSB7DQoJCWlmICggcmVkID09PSB1bmRlZmluZWQgKSB7DQoJCQl0aGlzLl9yZ2JhID0gWyBudWxsLCBudWxsLCBudWxsLCBudWxsIF07DQoJCQlyZXR1cm4gdGhpczsNCgkJfQ0KCQlpZiAoIHJlZC5qcXVlcnkgfHwgcmVkLm5vZGVUeXBlICkgew0KCQkJcmVkID0galF1ZXJ5KCByZWQgKS5jc3MoIGdyZWVuICk7DQoJCQlncmVlbiA9IHVuZGVmaW5lZDsNCgkJfQ0KDQoJCXZhciBpbnN0ID0gdGhpcywNCgkJCXR5cGUgPSBqUXVlcnkudHlwZSggcmVkICksDQoJCQlyZ2JhID0gdGhpcy5fcmdiYSA9IFtdOw0KDQoJCS8vIE1vcmUgdGhhbiAxIGFyZ3VtZW50IHNwZWNpZmllZCAtIGFzc3VtZSAoIHJlZCwgZ3JlZW4sIGJsdWUsIGFscGhhICkNCgkJaWYgKCBncmVlbiAhPT0gdW5kZWZpbmVkICkgew0KCQkJcmVkID0gWyByZWQsIGdyZWVuLCBibHVlLCBhbHBoYSBdOw0KCQkJdHlwZSA9ICJhcnJheSI7DQoJCX0NCg0KCQlpZiAoIHR5cGUgPT09ICJzdHJpbmciICkgew0KCQkJcmV0dXJuIHRoaXMucGFyc2UoIHN0cmluZ1BhcnNlKCByZWQgKSB8fCBjb2xvcnMuX2RlZmF1bHQgKTsNCgkJfQ0KDQoJCWlmICggdHlwZSA9PT0gImFycmF5IiApIHsNCgkJCWVhY2goIHNwYWNlcy5yZ2JhLnByb3BzLCBmdW5jdGlvbigga2V5LCBwcm9wICkgew0KCQkJCXJnYmFbIHByb3AuaWR4IF0gPSBjbGFtcCggcmVkWyBwcm9wLmlkeCBdLCBwcm9wICk7DQoJCQl9ICk7DQoJCQlyZXR1cm4gdGhpczsNCgkJfQ0KDQoJCWlmICggdHlwZSA9PT0gIm9iamVjdCIgKSB7DQoJCQlpZiAoIHJlZCBpbnN0YW5jZW9mIGNvbG9yICkgew0KCQkJCWVhY2goIHNwYWNlcywgZnVuY3Rpb24oIHNwYWNlTmFtZSwgc3BhY2UgKSB7DQoJCQkJCWlmICggcmVkWyBzcGFjZS5jYWNoZSBdICkgew0KCQkJCQkJaW5zdFsgc3BhY2UuY2FjaGUgXSA9IHJlZFsgc3BhY2UuY2FjaGUgXS5zbGljZSgpOw0KCQkJCQl9DQoJCQkJfSApOw0KCQkJfSBlbHNlIHsNCgkJCQllYWNoKCBzcGFjZXMsIGZ1bmN0aW9uKCBzcGFjZU5hbWUsIHNwYWNlICkgew0KCQkJCQl2YXIgY2FjaGUgPSBzcGFjZS5jYWNoZTsNCgkJCQkJZWFjaCggc3BhY2UucHJvcHMsIGZ1bmN0aW9uKCBrZXksIHByb3AgKSB7DQoNCgkJCQkJCS8vIElmIHRoZSBjYWNoZSBkb2Vzbid0IGV4aXN0LCBhbmQgd2Uga25vdyBob3cgdG8gY29udmVydA0KCQkJCQkJaWYgKCAhaW5zdFsgY2FjaGUgXSAmJiBzcGFjZS50byApIHsNCg0KCQkJCQkJCS8vIElmIHRoZSB2YWx1ZSB3YXMgbnVsbCwgd2UgZG9uJ3QgbmVlZCB0byBjb3B5IGl0DQoJCQkJCQkJLy8gaWYgdGhlIGtleSB3YXMgYWxwaGEsIHdlIGRvbid0IG5lZWQgdG8gY29weSBpdCBlaXRoZXINCgkJCQkJCQlpZiAoIGtleSA9PT0gImFscGhhIiB8fCByZWRbIGtleSBdID09IG51bGwgKSB7DQoJCQkJCQkJCXJldHVybjsNCgkJCQkJCQl9DQoJCQkJCQkJaW5zdFsgY2FjaGUgXSA9IHNwYWNlLnRvKCBpbnN0Ll9yZ2JhICk7DQoJCQkJCQl9DQoNCgkJCQkJCS8vIFRoaXMgaXMgdGhlIG9ubHkgY2FzZSB3aGVyZSB3ZSBhbGxvdyBudWxscyBmb3IgQUxMIHByb3BlcnRpZXMuDQoJCQkJCQkvLyBjYWxsIGNsYW1wIHdpdGggYWx3YXlzQWxsb3dFbXB0eQ0KCQkJCQkJaW5zdFsgY2FjaGUgXVsgcHJvcC5pZHggXSA9IGNsYW1wKCByZWRbIGtleSBdLCBwcm9wLCB0cnVlICk7DQoJCQkJCX0gKTsNCg0KCQkJCQkvLyBFdmVyeXRoaW5nIGRlZmluZWQgYnV0IGFscGhhPw0KCQkJCQlpZiAoIGluc3RbIGNhY2hlIF0gJiYNCgkJCQkJCQlqUXVlcnkuaW5BcnJheSggbnVsbCwgaW5zdFsgY2FjaGUgXS5zbGljZSggMCwgMyApICkgPCAwICkgew0KDQoJCQkJCQkvLyBVc2UgdGhlIGRlZmF1bHQgb2YgMQ0KCQkJCQkJaW5zdFsgY2FjaGUgXVsgMyBdID0gMTsNCgkJCQkJCWlmICggc3BhY2UuZnJvbSApIHsNCgkJCQkJCQlpbnN0Ll9yZ2JhID0gc3BhY2UuZnJvbSggaW5zdFsgY2FjaGUgXSApOw0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJfSApOw0KCQkJfQ0KCQkJcmV0dXJuIHRoaXM7DQoJCX0NCgl9LA0KCWlzOiBmdW5jdGlvbiggY29tcGFyZSApIHsNCgkJdmFyIGlzID0gY29sb3IoIGNvbXBhcmUgKSwNCgkJCXNhbWUgPSB0cnVlLA0KCQkJaW5zdCA9IHRoaXM7DQoNCgkJZWFjaCggc3BhY2VzLCBmdW5jdGlvbiggXywgc3BhY2UgKSB7DQoJCQl2YXIgbG9jYWxDYWNoZSwNCgkJCQlpc0NhY2hlID0gaXNbIHNwYWNlLmNhY2hlIF07DQoJCQlpZiAoIGlzQ2FjaGUgKSB7DQoJCQkJbG9jYWxDYWNoZSA9IGluc3RbIHNwYWNlLmNhY2hlIF0gfHwgc3BhY2UudG8gJiYgc3BhY2UudG8oIGluc3QuX3JnYmEgKSB8fCBbXTsNCgkJCQllYWNoKCBzcGFjZS5wcm9wcywgZnVuY3Rpb24oIF8sIHByb3AgKSB7DQoJCQkJCWlmICggaXNDYWNoZVsgcHJvcC5pZHggXSAhPSBudWxsICkgew0KCQkJCQkJc2FtZSA9ICggaXNDYWNoZVsgcHJvcC5pZHggXSA9PT0gbG9jYWxDYWNoZVsgcHJvcC5pZHggXSApOw0KCQkJCQkJcmV0dXJuIHNhbWU7DQoJCQkJCX0NCgkJCQl9ICk7DQoJCQl9DQoJCQlyZXR1cm4gc2FtZTsNCgkJfSApOw0KCQlyZXR1cm4gc2FtZTsNCgl9LA0KCV9zcGFjZTogZnVuY3Rpb24oKSB7DQoJCXZhciB1c2VkID0gW10sDQoJCQlpbnN0ID0gdGhpczsNCgkJZWFjaCggc3BhY2VzLCBmdW5jdGlvbiggc3BhY2VOYW1lLCBzcGFjZSApIHsNCgkJCWlmICggaW5zdFsgc3BhY2UuY2FjaGUgXSApIHsNCgkJCQl1c2VkLnB1c2goIHNwYWNlTmFtZSApOw0KCQkJfQ0KCQl9ICk7DQoJCXJldHVybiB1c2VkLnBvcCgpOw0KCX0sDQoJdHJhbnNpdGlvbjogZnVuY3Rpb24oIG90aGVyLCBkaXN0YW5jZSApIHsNCgkJdmFyIGVuZCA9IGNvbG9yKCBvdGhlciApLA0KCQkJc3BhY2VOYW1lID0gZW5kLl9zcGFjZSgpLA0KCQkJc3BhY2UgPSBzcGFjZXNbIHNwYWNlTmFtZSBdLA0KCQkJc3RhcnRDb2xvciA9IHRoaXMuYWxwaGEoKSA9PT0gMCA\/IGNvbG9yKCAidHJhbnNwYXJlbnQiICkgOiB0aGlzLA0KCQkJc3RhcnQgPSBzdGFydENvbG9yWyBzcGFjZS5jYWNoZSBdIHx8IHNwYWNlLnRvKCBzdGFydENvbG9yLl9yZ2JhICksDQoJCQlyZXN1bHQgPSBzdGFydC5zbGljZSgpOw0KDQoJCWVuZCA9IGVuZFsgc3BhY2UuY2FjaGUgXTsNCgkJZWFjaCggc3BhY2UucHJvcHMsIGZ1bmN0aW9uKCBrZXksIHByb3AgKSB7DQoJCQl2YXIgaW5kZXggPSBwcm9wLmlkeCwNCgkJCQlzdGFydFZhbHVlID0gc3RhcnRbIGluZGV4IF0sDQoJCQkJZW5kVmFsdWUgPSBlbmRbIGluZGV4IF0sDQoJCQkJdHlwZSA9IHByb3BUeXBlc1sgcHJvcC50eXBlIF0gfHwge307DQoNCgkJCS8vIElmIG51bGwsIGRvbid0IG92ZXJyaWRlIHN0YXJ0IHZhbHVlDQoJCQlpZiAoIGVuZFZhbHVlID09PSBudWxsICkgew0KCQkJCXJldHVybjsNCgkJCX0NCg0KCQkJLy8gSWYgbnVsbCAtIHVzZSBlbmQNCgkJCWlmICggc3RhcnRWYWx1ZSA9PT0gbnVsbCApIHsNCgkJCQlyZXN1bHRbIGluZGV4IF0gPSBlbmRWYWx1ZTsNCgkJCX0gZWxzZSB7DQoJCQkJaWYgKCB0eXBlLm1vZCApIHsNCgkJCQkJaWYgKCBlbmRWYWx1ZSAtIHN0YXJ0VmFsdWUgPiB0eXBlLm1vZCAvIDIgKSB7DQoJCQkJCQlzdGFydFZhbHVlICs9IHR5cGUubW9kOw0KCQkJCQl9IGVsc2UgaWYgKCBzdGFydFZhbHVlIC0gZW5kVmFsdWUgPiB0eXBlLm1vZCAvIDIgKSB7DQoJCQkJCQlzdGFydFZhbHVlIC09IHR5cGUubW9kOw0KCQkJCQl9DQoJCQkJfQ0KCQkJCXJlc3VsdFsgaW5kZXggXSA9IGNsYW1wKCAoIGVuZFZhbHVlIC0gc3RhcnRWYWx1ZSApICogZGlzdGFuY2UgKyBzdGFydFZhbHVlLCBwcm9wICk7DQoJCQl9DQoJCX0gKTsNCgkJcmV0dXJuIHRoaXNbIHNwYWNlTmFtZSBdKCByZXN1bHQgKTsNCgl9LA0KCWJsZW5kOiBmdW5jdGlvbiggb3BhcXVlICkgew0KDQoJCS8vIElmIHdlIGFyZSBhbHJlYWR5IG9wYXF1ZSAtIHJldHVybiBvdXJzZWxmDQoJCWlmICggdGhpcy5fcmdiYVsgMyBdID09PSAxICkgew0KCQkJcmV0dXJuIHRoaXM7DQoJCX0NCg0KCQl2YXIgcmdiID0gdGhpcy5fcmdiYS5zbGljZSgpLA0KCQkJYSA9IHJnYi5wb3AoKSwNCgkJCWJsZW5kID0gY29sb3IoIG9wYXF1ZSApLl9yZ2JhOw0KDQoJCXJldHVybiBjb2xvciggalF1ZXJ5Lm1hcCggcmdiLCBmdW5jdGlvbiggdiwgaSApIHsNCgkJCXJldHVybiAoIDEgLSBhICkgKiBibGVuZFsgaSBdICsgYSAqIHY7DQoJCX0gKSApOw0KCX0sDQoJdG9SZ2JhU3RyaW5nOiBmdW5jdGlvbigpIHsNCgkJdmFyIHByZWZpeCA9ICJyZ2JhKCIsDQoJCQlyZ2JhID0galF1ZXJ5Lm1hcCggdGhpcy5fcmdiYSwgZnVuY3Rpb24oIHYsIGkgKSB7DQoJCQkJcmV0dXJuIHYgPT0gbnVsbCA\/ICggaSA+IDIgPyAxIDogMCApIDogdjsNCgkJCX0gKTsNCg0KCQlpZiAoIHJnYmFbIDMgXSA9PT0gMSApIHsNCgkJCXJnYmEucG9wKCk7DQoJCQlwcmVmaXggPSAicmdiKCI7DQoJCX0NCg0KCQlyZXR1cm4gcHJlZml4ICsgcmdiYS5qb2luKCkgKyAiKSI7DQoJfSwNCgl0b0hzbGFTdHJpbmc6IGZ1bmN0aW9uKCkgew0KCQl2YXIgcHJlZml4ID0gImhzbGEoIiwNCgkJCWhzbGEgPSBqUXVlcnkubWFwKCB0aGlzLmhzbGEoKSwgZnVuY3Rpb24oIHYsIGkgKSB7DQoJCQkJaWYgKCB2ID09IG51bGwgKSB7DQoJCQkJCXYgPSBpID4gMiA\/IDEgOiAwOw0KCQkJCX0NCg0KCQkJCS8vIENhdGNoIDEgYW5kIDINCgkJCQlpZiAoIGkgJiYgaSA8IDMgKSB7DQoJCQkJCXYgPSBNYXRoLnJvdW5kKCB2ICogMTAwICkgKyAiJSI7DQoJCQkJfQ0KCQkJCXJldHVybiB2Ow0KCQkJfSApOw0KDQoJCWlmICggaHNsYVsgMyBdID09PSAxICkgew0KCQkJaHNsYS5wb3AoKTsNCgkJCXByZWZpeCA9ICJoc2woIjsNCgkJfQ0KCQlyZXR1cm4gcHJlZml4ICsgaHNsYS5qb2luKCkgKyAiKSI7DQoJfSwNCgl0b0hleFN0cmluZzogZnVuY3Rpb24oIGluY2x1ZGVBbHBoYSApIHsNCgkJdmFyIHJnYmEgPSB0aGlzLl9yZ2JhLnNsaWNlKCksDQoJCQlhbHBoYSA9IHJnYmEucG9wKCk7DQoNCgkJaWYgKCBpbmNsdWRlQWxwaGEgKSB7DQoJCQlyZ2JhLnB1c2goIH5+KCBhbHBoYSAqIDI1NSApICk7DQoJCX0NCg0KCQlyZXR1cm4gIiMiICsgalF1ZXJ5Lm1hcCggcmdiYSwgZnVuY3Rpb24oIHYgKSB7DQoNCgkJCS8vIERlZmF1bHQgdG8gMCB3aGVuIG51bGxzIGV4aXN0DQoJCQl2ID0gKCB2IHx8IDAgKS50b1N0cmluZyggMTYgKTsNCgkJCXJldHVybiB2Lmxlbmd0aCA9PT0gMSA\/ICIwIiArIHYgOiB2Ow0KCQl9ICkuam9pbiggIiIgKTsNCgl9LA0KCXRvU3RyaW5nOiBmdW5jdGlvbigpIHsNCgkJcmV0dXJuIHRoaXMuX3JnYmFbIDMgXSA9PT0gMCA\/ICJ0cmFuc3BhcmVudCIgOiB0aGlzLnRvUmdiYVN0cmluZygpOw0KCX0NCn0gKTsNCmNvbG9yLmZuLnBhcnNlLnByb3RvdHlwZSA9IGNvbG9yLmZuOw0KDQovLyBIc2xhIGNvbnZlcnNpb25zIGFkYXB0ZWQgZnJvbToNCi8vIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvbWFhc2hhYWNrL3NvdXJjZS9icm93c2UvcGFja2FnZXMvZ3JhcGhpY3MvdHJ1bmsvc3JjL2dyYXBoaWNzL2NvbG9ycy9IVUUyUkdCLmFzP3I9NTAyMQ0KDQpmdW5jdGlvbiBodWUycmdiKCBwLCBxLCBoICkgew0KCWggPSAoIGggKyAxICkgJSAxOw0KCWlmICggaCAqIDYgPCAxICkgew0KCQlyZXR1cm4gcCArICggcSAtIHAgKSAqIGggKiA2Ow0KCX0NCglpZiAoIGggKiAyIDwgMSApIHsNCgkJcmV0dXJuIHE7DQoJfQ0KCWlmICggaCAqIDMgPCAyICkgew0KCQlyZXR1cm4gcCArICggcSAtIHAgKSAqICggKCAyIC8gMyApIC0gaCApICogNjsNCgl9DQoJcmV0dXJuIHA7DQp9DQoNCnNwYWNlcy5oc2xhLnRvID0gZnVuY3Rpb24oIHJnYmEgKSB7DQoJaWYgKCByZ2JhWyAwIF0gPT0gbnVsbCB8fCByZ2JhWyAxIF0gPT0gbnVsbCB8fCByZ2JhWyAyIF0gPT0gbnVsbCApIHsNCgkJcmV0dXJuIFsgbnVsbCwgbnVsbCwgbnVsbCwgcmdiYVsgMyBdIF07DQoJfQ0KCXZhciByID0gcmdiYVsgMCBdIC8gMjU1LA0KCQlnID0gcmdiYVsgMSBdIC8gMjU1LA0KCQliID0gcmdiYVsgMiBdIC8gMjU1LA0KCQlhID0gcmdiYVsgMyBdLA0KCQltYXggPSBNYXRoLm1heCggciwgZywgYiApLA0KCQltaW4gPSBNYXRoLm1pbiggciwgZywgYiApLA0KCQlkaWZmID0gbWF4IC0gbWluLA0KCQlhZGQgPSBtYXggKyBtaW4sDQoJCWwgPSBhZGQgKiAwLjUsDQoJCWgsIHM7DQoNCglpZiAoIG1pbiA9PT0gbWF4ICkgew0KCQloID0gMDsNCgl9IGVsc2UgaWYgKCByID09PSBtYXggKSB7DQoJCWggPSAoIDYwICogKCBnIC0gYiApIC8gZGlmZiApICsgMzYwOw0KCX0gZWxzZSBpZiAoIGcgPT09IG1heCApIHsNCgkJaCA9ICggNjAgKiAoIGIgLSByICkgLyBkaWZmICkgKyAxMjA7DQoJfSBlbHNlIHsNCgkJaCA9ICggNjAgKiAoIHIgLSBnICkgLyBkaWZmICkgKyAyNDA7DQoJfQ0KDQoJLy8gQ2hyb21hIChkaWZmKSA9PSAwIG1lYW5zIGdyZXlzY2FsZSB3aGljaCwgYnkgZGVmaW5pdGlvbiwgc2F0dXJhdGlvbiA9IDAlDQoJLy8gb3RoZXJ3aXNlLCBzYXR1cmF0aW9uIGlzIGJhc2VkIG9uIHRoZSByYXRpbyBvZiBjaHJvbWEgKGRpZmYpIHRvIGxpZ2h0bmVzcyAoYWRkKQ0KCWlmICggZGlmZiA9PT0gMCApIHsNCgkJcyA9IDA7DQoJfSBlbHNlIGlmICggbCA8PSAwLjUgKSB7DQoJCXMgPSBkaWZmIC8gYWRkOw0KCX0gZWxzZSB7DQoJCXMgPSBkaWZmIC8gKCAyIC0gYWRkICk7DQoJfQ0KCXJldHVybiBbIE1hdGgucm91bmQoIGggKSAlIDM2MCwgcywgbCwgYSA9PSBudWxsID8gMSA6IGEgXTsNCn07DQoNCnNwYWNlcy5oc2xhLmZyb20gPSBmdW5jdGlvbiggaHNsYSApIHsNCglpZiAoIGhzbGFbIDAgXSA9PSBudWxsIHx8IGhzbGFbIDEgXSA9PSBudWxsIHx8IGhzbGFbIDIgXSA9PSBudWxsICkgew0KCQlyZXR1cm4gWyBudWxsLCBudWxsLCBudWxsLCBoc2xhWyAzIF0gXTsNCgl9DQoJdmFyIGggPSBoc2xhWyAwIF0gLyAzNjAsDQoJCXMgPSBoc2xhWyAxIF0sDQoJCWwgPSBoc2xhWyAyIF0sDQoJCWEgPSBoc2xhWyAzIF0sDQoJCXEgPSBsIDw9IDAuNSA\/IGwgKiAoIDEgKyBzICkgOiBsICsgcyAtIGwgKiBzLA0KCQlwID0gMiAqIGwgLSBxOw0KDQoJcmV0dXJuIFsNCgkJTWF0aC5yb3VuZCggaHVlMnJnYiggcCwgcSwgaCArICggMSAvIDMgKSApICogMjU1ICksDQoJCU1hdGgucm91bmQoIGh1ZTJyZ2IoIHAsIHEsIGggKSAqIDI1NSApLA0KCQlNYXRoLnJvdW5kKCBodWUycmdiKCBwLCBxLCBoIC0gKCAxIC8gMyApICkgKiAyNTUgKSwNCgkJYQ0KCV07DQp9Ow0KDQplYWNoKCBzcGFjZXMsIGZ1bmN0aW9uKCBzcGFjZU5hbWUsIHNwYWNlICkgew0KCXZhciBwcm9wcyA9IHNwYWNlLnByb3BzLA0KCQljYWNoZSA9IHNwYWNlLmNhY2hlLA0KCQl0byA9IHNwYWNlLnRvLA0KCQlmcm9tID0gc3BhY2UuZnJvbTsNCg0KCS8vIE1ha2VzIHJnYmEoKSBhbmQgaHNsYSgpDQoJY29sb3IuZm5bIHNwYWNlTmFtZSBdID0gZnVuY3Rpb24oIHZhbHVlICkgew0KDQoJCS8vIEdlbmVyYXRlIGEgY2FjaGUgZm9yIHRoaXMgc3BhY2UgaWYgaXQgZG9lc24ndCBleGlzdA0KCQlpZiAoIHRvICYmICF0aGlzWyBjYWNoZSBdICkgew0KCQkJdGhpc1sgY2FjaGUgXSA9IHRvKCB0aGlzLl9yZ2JhICk7DQoJCX0NCgkJaWYgKCB2YWx1ZSA9PT0gdW5kZWZpbmVkICkgew0KCQkJcmV0dXJuIHRoaXNbIGNhY2hlIF0uc2xpY2UoKTsNCgkJfQ0KDQoJCXZhciByZXQsDQoJCQl0eXBlID0galF1ZXJ5LnR5cGUoIHZhbHVlICksDQoJCQlhcnIgPSAoIHR5cGUgPT09ICJhcnJheSIgfHwgdHlwZSA9PT0gIm9iamVjdCIgKSA\/IHZhbHVlIDogYXJndW1lbnRzLA0KCQkJbG9jYWwgPSB0aGlzWyBjYWNoZSBdLnNsaWNlKCk7DQoNCgkJZWFjaCggcHJvcHMsIGZ1bmN0aW9uKCBrZXksIHByb3AgKSB7DQoJCQl2YXIgdmFsID0gYXJyWyB0eXBlID09PSAib2JqZWN0IiA\\/ICggKCBwZXJjZW50IHx8IDEwMCApIC8gMTAwICkgOiAxLA0KCQkJeSA9IGRpcmVjdGlvbiAhPT0gInZlcnRpY2FsIiA\/ICggKCBwZXJjZW50IHx8IDEwMCApIC8gMTAwICkgOiAxOw0KDQoJCXJldHVybiB7DQoJCQloZWlnaHQ6IGVsZW1lbnQuaGVpZ2h0KCkgKiB5LA0KCQkJd2lkdGg6IGVsZW1lbnQud2lkdGgoKSAqIHgsDQoJCQlvdXRlckhlaWdodDogZWxlbWVudC5vdXRlckhlaWdodCgpICogeSwNCgkJCW91dGVyV2lkdGg6IGVsZW1lbnQub3V0ZXJXaWR0aCgpICogeA0KCQl9Ow0KDQoJfSwNCg0KCWNsaXBUb0JveDogZnVuY3Rpb24oIGFuaW1hdGlvbiApIHsNCgkJcmV0dXJuIHsNCgkJCXdpZHRoOiBhbmltYXRpb24uY2xpcC5yaWdodCAtIGFuaW1hdGlvbi5jbGlwLmxlZnQsDQoJCQloZWlnaHQ6IGFuaW1hdGlvbi5jbGlwLmJvdHRvbSAtIGFuaW1hdGlvbi5jbGlwLnRvcCwNCgkJCWxlZnQ6IGFuaW1hdGlvbi5jbGlwLmxlZnQsDQoJCQl0b3A6IGFuaW1hdGlvbi5jbGlwLnRvcA0KCQl9Ow0KCX0sDQoNCgkvLyBJbmplY3RzIHJlY2VudGx5IHF1ZXVlZCBmdW5jdGlvbnMgdG8gYmUgZmlyc3QgaW4gbGluZSAoYWZ0ZXIgImlucHJvZ3Jlc3MiKQ0KCXVuc2hpZnQ6IGZ1bmN0aW9uKCBlbGVtZW50LCBxdWV1ZUxlbmd0aCwgY291bnQgKSB7DQoJCXZhciBxdWV1ZSA9IGVsZW1lbnQucXVldWUoKTsNCg0KCQlpZiAoIHF1ZXVlTGVuZ3RoID4gMSApIHsNCgkJCXF1ZXVlLnNwbGljZS5hcHBseSggcXVldWUsDQoJCQkJWyAxLCAwIF0uY29uY2F0KCBxdWV1ZS5zcGxpY2UoIHF1ZXVlTGVuZ3RoLCBjb3VudCApICkgKTsNCgkJfQ0KCQllbGVtZW50LmRlcXVldWUoKTsNCgl9LA0KDQoJc2F2ZVN0eWxlOiBmdW5jdGlvbiggZWxlbWVudCApIHsNCgkJZWxlbWVudC5kYXRhKCBkYXRhU3BhY2VTdHlsZSwgZWxlbWVudFsgMCBdLnN0eWxlLmNzc1RleHQgKTsNCgl9LA0KDQoJcmVzdG9yZVN0eWxlOiBmdW5jdGlvbiggZWxlbWVudCApIHsNCgkJZWxlbWVudFsgMCBdLnN0eWxlLmNzc1RleHQgPSBlbGVtZW50LmRhdGEoIGRhdGFTcGFjZVN0eWxlICkgfHwgIiI7DQoJCWVsZW1lbnQucmVtb3ZlRGF0YSggZGF0YVNwYWNlU3R5bGUgKTsNCgl9LA0KDQoJbW9kZTogZnVuY3Rpb24oIGVsZW1lbnQsIG1vZGUgKSB7DQoJCXZhciBoaWRkZW4gPSBlbGVtZW50LmlzKCAiOmhpZGRlbiIgKTsNCg0KCQlpZiAoIG1vZGUgPT09ICJ0b2dnbGUiICkgew0KCQkJbW9kZSA9IGhpZGRlbiA\/ICJzaG93IiA6ICJoaWRlIjsNCgkJfQ0KCQlpZiAoIGhpZGRlbiA\/IG1vZGUgPT09ICJoaWRlIiA6IG1vZGUgPT09ICJzaG93IiApIHsNCgkJCW1vZGUgPSAibm9uZSI7DQoJCX0NCgkJcmV0dXJuIG1vZGU7DQoJfSwNCg0KCS8vIFRyYW5zbGF0ZXMgYSBbdG9wLGxlZnRdIGFycmF5IGludG8gYSBiYXNlbGluZSB2YWx1ZQ0KCWdldEJhc2VsaW5lOiBmdW5jdGlvbiggb3JpZ2luLCBvcmlnaW5hbCApIHsNCgkJdmFyIHksIHg7DQoNCgkJc3dpdGNoICggb3JpZ2luWyAwIF0gKSB7DQoJCWNhc2UgInRvcCI6DQoJCQl5ID0gMDsNCgkJCWJyZWFrOw0KCQljYXNlICJtaWRkbGUiOg0KCQkJeSA9IDAuNTsNCgkJCWJyZWFrOw0KCQljYXNlICJib3R0b20iOg0KCQkJeSA9IDE7DQoJCQlicmVhazsNCgkJZGVmYXVsdDoNCgkJCXkgPSBvcmlnaW5bIDAgXSAvIG9yaWdpbmFsLmhlaWdodDsNCgkJfQ0KDQoJCXN3aXRjaCAoIG9yaWdpblsgMSBdICkgew0KCQljYXNlICJsZWZ0IjoNCgkJCXggPSAwOw0KCQkJYnJlYWs7DQoJCWNhc2UgImNlbnRlciI6DQoJCQl4ID0gMC41Ow0KCQkJYnJlYWs7DQoJCWNhc2UgInJpZ2h0IjoNCgkJCXggPSAxOw0KCQkJYnJlYWs7DQoJCWRlZmF1bHQ6DQoJCQl4ID0gb3JpZ2luWyAxIF0gLyBvcmlnaW5hbC53aWR0aDsNCgkJfQ0KDQoJCXJldHVybiB7DQoJCQl4OiB4LA0KCQkJeTogeQ0KCQl9Ow0KCX0sDQoNCgkvLyBDcmVhdGVzIGEgcGxhY2Vob2xkZXIgZWxlbWVudCBzbyB0aGF0IHRoZSBvcmlnaW5hbCBlbGVtZW50IGNhbiBiZSBtYWRlIGFic29sdXRlDQoJY3JlYXRlUGxhY2Vob2xkZXI6IGZ1bmN0aW9uKCBlbGVtZW50ICkgew0KCQl2YXIgcGxhY2Vob2xkZXIsDQoJCQljc3NQb3NpdGlvbiA9IGVsZW1lbnQuY3NzKCAicG9zaXRpb24iICksDQoJCQlwb3NpdGlvbiA9IGVsZW1lbnQucG9zaXRpb24oKTsNCg0KCQkvLyBMb2NrIGluIG1hcmdpbnMgZmlyc3QgdG8gYWNjb3VudCBmb3IgZm9ybSBlbGVtZW50cywgd2hpY2gNCgkJLy8gd2lsbCBjaGFuZ2UgbWFyZ2luIGlmIHlvdSBleHBsaWNpdGx5IHNldCBoZWlnaHQNCgkJLy8gc2VlOiBodHRwOi8vanNmaWRkbGUubmV0L0paU010LzMvIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xMDczODANCgkJLy8gU3VwcG9ydDogU2FmYXJpDQoJCWVsZW1lbnQuY3NzKCB7DQoJCQltYXJnaW5Ub3A6IGVsZW1lbnQuY3NzKCAibWFyZ2luVG9wIiApLA0KCQkJbWFyZ2luQm90dG9tOiBlbGVtZW50LmNzcyggIm1hcmdpbkJvdHRvbSIgKSwNCgkJCW1hcmdpbkxlZnQ6IGVsZW1lbnQuY3NzKCAibWFyZ2luTGVmdCIgKSwNCgkJCW1hcmdpblJpZ2h0OiBlbGVtZW50LmNzcyggIm1hcmdpblJpZ2h0IiApDQoJCX0gKQ0KCQkub3V0ZXJXaWR0aCggZWxlbWVudC5vdXRlcldpZHRoKCkgKQ0KCQkub3V0ZXJIZWlnaHQoIGVsZW1lbnQub3V0ZXJIZWlnaHQoKSApOw0KDQoJCWlmICggL14oc3RhdGljfHJlbGF0aXZlKS8udGVzdCggY3NzUG9zaXRpb24gKSApIHsNCgkJCWNzc1Bvc2l0aW9uID0gImFic29sdXRlIjsNCg0KCQkJcGxhY2Vob2xkZXIgPSAkKCAiPCIgKyBlbGVtZW50WyAwIF0ubm9kZU5hbWUgKyAiPiIgKS5pbnNlcnRBZnRlciggZWxlbWVudCApLmNzcyggew0KDQoJCQkJLy8gQ29udmVydCBpbmxpbmUgdG8gaW5saW5lIGJsb2NrIHRvIGFjY291bnQgZm9yIGlubGluZSBlbGVtZW50cw0KCQkJCS8vIHRoYXQgdHVybiB0byBpbmxpbmUgYmxvY2sgYmFzZWQgb24gY29udGVudCAobGlrZSBpbWcpDQoJCQkJZGlzcGxheTogL14oaW5saW5lfHJ1YnkpLy50ZXN0KCBlbGVtZW50LmNzcyggImRpc3BsYXkiICkgKSA\/DQoJCQkJCSJpbmxpbmUtYmxvY2siIDoNCgkJCQkJImJsb2NrIiwNCgkJCQl2aXNpYmlsaXR5OiAiaGlkZGVuIiwNCg0KCQkJCS8vIE1hcmdpbnMgbmVlZCB0byBiZSBzZXQgdG8gYWNjb3VudCBmb3IgbWFyZ2luIGNvbGxhcHNlDQoJCQkJbWFyZ2luVG9wOiBlbGVtZW50LmNzcyggIm1hcmdpblRvcCIgKSwNCgkJCQltYXJnaW5Cb3R0b206IGVsZW1lbnQuY3NzKCAibWFyZ2luQm90dG9tIiApLA0KCQkJCW1hcmdpbkxlZnQ6IGVsZW1lbnQuY3NzKCAibWFyZ2luTGVmdCIgKSwNCgkJCQltYXJnaW5SaWdodDogZWxlbWVudC5jc3MoICJtYXJnaW5SaWdodCIgKSwNCgkJCQkiZmxvYXQiOiBlbGVtZW50LmNzcyggImZsb2F0IiApDQoJCQl9ICkNCgkJCS5vdXRlcldpZHRoKCBlbGVtZW50Lm91dGVyV2lkdGgoKSApDQoJCQkub3V0ZXJIZWlnaHQoIGVsZW1lbnQub3V0ZXJIZWlnaHQoKSApDQoJCQkuYWRkQ2xhc3MoICJ1aS1lZmZlY3RzLXBsYWNlaG9sZGVyIiApOw0KDQoJCQllbGVtZW50LmRhdGEoIGRhdGFTcGFjZSArICJwbGFjZWhvbGRlciIsIHBsYWNlaG9sZGVyICk7DQoJCX0NCg0KCQllbGVtZW50LmNzcyggew0KCQkJcG9zaXRpb246IGNzc1Bvc2l0aW9uLA0KCQkJbGVmdDogcG9zaXRpb24ubGVmdCwNCgkJCXRvcDogcG9zaXRpb24udG9wDQoJCX0gKTsNCg0KCQlyZXR1cm4gcGxhY2Vob2xkZXI7DQoJfSwNCg0KCXJlbW92ZVBsYWNlaG9sZGVyOiBmdW5jdGlvbiggZWxlbWVudCApIHsNCgkJdmFyIGRhdGFLZXkgPSBkYXRhU3BhY2UgKyAicGxhY2Vob2xkZXIiLA0KCQkJCXBsYWNlaG9sZGVyID0gZWxlbWVudC5kYXRhKCBkYXRhS2V5ICk7DQoNCgkJaWYgKCBwbGFjZWhvbGRlciApIHsNCgkJCXBsYWNlaG9sZGVyLnJlbW92ZSgpOw0KCQkJZWxlbWVudC5yZW1vdmVEYXRhKCBkYXRhS2V5ICk7DQoJCX0NCgl9LA0KDQoJLy8gUmVtb3ZlcyBhIHBsYWNlaG9sZGVyIGlmIGl0IGV4aXN0cyBhbmQgcmVzdG9yZXMNCgkvLyBwcm9wZXJ0aWVzIHRoYXQgd2VyZSBtb2RpZmllZCBkdXJpbmcgcGxhY2Vob2xkZXIgY3JlYXRpb24NCgljbGVhblVwOiBmdW5jdGlvbiggZWxlbWVudCApIHsNCgkJJC5lZmZlY3RzLnJlc3RvcmVTdHlsZSggZWxlbWVudCApOw0KCQkkLmVmZmVjdHMucmVtb3ZlUGxhY2Vob2xkZXIoIGVsZW1lbnQgKTsNCgl9LA0KDQoJc2V0VHJhbnNpdGlvbjogZnVuY3Rpb24oIGVsZW1lbnQsIGxpc3QsIGZhY3RvciwgdmFsdWUgKSB7DQoJCXZhbHVlID0gdmFsdWUgfHwge307DQoJCSQuZWFjaCggbGlzdCwgZnVuY3Rpb24oIGksIHggKSB7DQoJCQl2YXIgdW5pdCA9IGVsZW1lbnQuY3NzVW5pdCggeCApOw0KCQkJaWYgKCB1bml0WyAwIF0gPiAwICkgew0KCQkJCXZhbHVlWyB4IF0gPSB1bml0WyAwIF0gKiBmYWN0b3IgKyB1bml0WyAxIF07DQoJCQl9DQoJCX0gKTsNCgkJcmV0dXJuIHZhbHVlOw0KCX0NCn0gKTsNCg0KLy8gUmV0dXJuIGFuIGVmZmVjdCBvcHRpb25zIG9iamVjdCBmb3IgdGhlIGdpdmVuIHBhcmFtZXRlcnM6DQpmdW5jdGlvbiBfbm9ybWFsaXplQXJndW1lbnRzKCBlZmZlY3QsIG9wdGlvbnMsIHNwZWVkLCBjYWxsYmFjayApIHsNCg0KCS8vIEFsbG93IHBhc3NpbmcgYWxsIG9wdGlvbnMgYXMgdGhlIGZpcnN0IHBhcmFtZXRlcg0KCWlmICggJC5pc1BsYWluT2JqZWN0KCBlZmZlY3QgKSApIHsNCgkJb3B0aW9ucyA9IGVmZmVjdDsNCgkJZWZmZWN0ID0gZWZmZWN0LmVmZmVjdDsNCgl9DQoNCgkvLyBDb252ZXJ0IHRvIGFuIG9iamVjdA0KCWVmZmVjdCA9IHsgZWZmZWN0OiBlZmZlY3QgfTsNCg0KCS8vIENhdGNoIChlZmZlY3QsIG51bGwsIC4uLikNCglpZiAoIG9wdGlvbnMgPT0gbnVsbCApIHsNCgkJb3B0aW9ucyA9IHt9Ow0KCX0NCg0KCS8vIENhdGNoIChlZmZlY3QsIGNhbGxiYWNrKQ0KCWlmICggJC5pc0Z1bmN0aW9uKCBvcHRpb25zICkgKSB7DQoJCWNhbGxiYWNrID0gb3B0aW9uczsNCgkJc3BlZWQgPSBudWxsOw0KCQlvcHRpb25zID0ge307DQoJfQ0KDQoJLy8gQ2F0Y2ggKGVmZmVjdCwgc3BlZWQsID8pDQoJaWYgKCB0eXBlb2Ygb3B0aW9ucyA9PT0gIm51bWJlciIgfHwgJC5meC5zcGVlZHNbIG9wdGlvbnMgXSApIHsNCgkJY2FsbGJhY2sgPSBzcGVlZDsNCgkJc3BlZWQgPSBvcHRpb25zOw0KCQlvcHRpb25zID0ge307DQoJfQ0KDQoJLy8gQ2F0Y2ggKGVmZmVjdCwgb3B0aW9ucywgY2FsbGJhY2spDQoJaWYgKCAkLmlzRnVuY3Rpb24oIHNwZWVkICkgKSB7DQoJCWNhbGxiYWNrID0gc3BlZWQ7DQoJCXNwZWVkID0gbnVsbDsNCgl9DQoNCgkvLyBBZGQgb3B0aW9ucyB0byBlZmZlY3QNCglpZiAoIG9wdGlvbnMgKSB7DQoJCSQuZXh0ZW5kKCBlZmZlY3QsIG9wdGlvbnMgKTsNCgl9DQoNCglzcGVlZCA9IHNwZWVkIHx8IG9wdGlvbnMuZHVyYXRpb247DQoJZWZmZWN0LmR1cmF0aW9uID0gJC5meC5vZmYgPyAwIDoNCgkJdHlwZW9mIHNwZWVkID09PSAibnVtYmVyIiA\/IHNwZWVkIDoNCgkJc3BlZWQgaW4gJC5meC5zcGVlZHMgPyAkLmZ4LnNwZWVkc1sgc3BlZWQgXSA6DQoJCSQuZnguc3BlZWRzLl9kZWZhdWx0Ow0KDQoJZWZmZWN0LmNvbXBsZXRlID0gY2FsbGJhY2sgfHwgb3B0aW9ucy5jb21wbGV0ZTsNCg0KCXJldHVybiBlZmZlY3Q7DQp9DQoNCmZ1bmN0aW9uIHN0YW5kYXJkQW5pbWF0aW9uT3B0aW9uKCBvcHRpb24gKSB7DQoNCgkvLyBWYWxpZCBzdGFuZGFyZCBzcGVlZHMgKG5vdGhpbmcsIG51bWJlciwgbmFtZWQgc3BlZWQpDQoJaWYgKCAhb3B0aW9uIHx8IHR5cGVvZiBvcHRpb24gPT09ICJudW1iZXIiIHx8ICQuZnguc3BlZWRzWyBvcHRpb24gXSApIHsNCgkJcmV0dXJuIHRydWU7DQoJfQ0KDQoJLy8gSW52YWxpZCBzdHJpbmdzIC0gdHJlYXQgYXMgIm5vcm1hbCIgc3BlZWQNCglpZiAoIHR5cGVvZiBvcHRpb24gPT09ICJzdHJpbmciICYmICEkLmVmZmVjdHMuZWZmZWN0WyBvcHRpb24gXSApIHsNCgkJcmV0dXJuIHRydWU7DQoJfQ0KDQoJLy8gQ29tcGxldGUgY2FsbGJhY2sNCglpZiAoICQuaXNGdW5jdGlvbiggb3B0aW9uICkgKSB7DQoJCXJldHVybiB0cnVlOw0KCX0NCg0KCS8vIE9wdGlvbnMgaGFzaCAoYnV0IG5vdCBuYW1pbmcgYW4gZWZmZWN0KQ0KCWlmICggdHlwZW9mIG9wdGlvbiA9PT0gIm9iamVjdCIgJiYgIW9wdGlvbi5lZmZlY3QgKSB7DQoJCXJldHVybiB0cnVlOw0KCX0NCg0KCS8vIERpZG4ndCBtYXRjaCBhbnkgc3RhbmRhcmQgQVBJDQoJcmV0dXJuIGZhbHNlOw0KfQ0KDQokLmZuLmV4dGVuZCggew0KCWVmZmVjdDogZnVuY3Rpb24oIC8qIGVmZmVjdCwgb3B0aW9ucywgc3BlZWQsIGNhbGxiYWNrICovICkgew0KCQl2YXIgYXJncyA9IF9ub3JtYWxpemVBcmd1bWVudHMuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApLA0KCQkJZWZmZWN0TWV0aG9kID0gJC5lZmZlY3RzLmVmZmVjdFsgYXJncy5lZmZlY3QgXSwNCgkJCWRlZmF1bHRNb2RlID0gZWZmZWN0TWV0aG9kLm1vZGUsDQoJCQlxdWV1ZSA9IGFyZ3MucXVldWUsDQoJCQlxdWV1ZU5hbWUgPSBxdWV1ZSB8fCAiZngiLA0KCQkJY29tcGxldGUgPSBhcmdzLmNvbXBsZXRlLA0KCQkJbW9kZSA9IGFyZ3MubW9kZSwNCgkJCW1vZGVzID0gW10sDQoJCQlwcmVmaWx0ZXIgPSBmdW5jdGlvbiggbmV4dCApIHsNCgkJCQl2YXIgZWwgPSAkKCB0aGlzICksDQoJCQkJCW5vcm1hbGl6ZWRNb2RlID0gJC5lZmZlY3RzLm1vZGUoIGVsLCBtb2RlICkgfHwgZGVmYXVsdE1vZGU7DQoNCgkJCQkvLyBTZW50aW5lbCBmb3IgZHVjay1wdW5jaGluZyB0aGUgOmFuaW1hdGVkIHBzdWVkby1zZWxlY3Rvcg0KCQkJCWVsLmRhdGEoIGRhdGFTcGFjZUFuaW1hdGVkLCB0cnVlICk7DQoNCgkJCQkvLyBTYXZlIGVmZmVjdCBtb2RlIGZvciBsYXRlciB1c2UsDQoJCQkJLy8gd2UgY2FuJ3QganVzdCBjYWxsICQuZWZmZWN0cy5tb2RlIGFnYWluIGxhdGVyLA0KCQkJCS8vIGFzIHRoZSAuc2hvdygpIGJlbG93IGRlc3Ryb3lzIHRoZSBpbml0aWFsIHN0YXRlDQoJCQkJbW9kZXMucHVzaCggbm9ybWFsaXplZE1vZGUgKTsNCg0KCQkJCS8vIFNlZSAkLnVpQmFja0NvbXBhdCBpbnNpZGUgb2YgcnVuKCkgZm9yIHJlbW92YWwgb2YgZGVmYXVsdE1vZGUgaW4gMS4xMw0KCQkJCWlmICggZGVmYXVsdE1vZGUgJiYgKCBub3JtYWxpemVkTW9kZSA9PT0gInNob3ciIHx8DQoJCQkJCQkoIG5vcm1hbGl6ZWRNb2RlID09PSBkZWZhdWx0TW9kZSAmJiBub3JtYWxpemVkTW9kZSA9PT0gImhpZGUiICkgKSApIHsNCgkJCQkJZWwuc2hvdygpOw0KCQkJCX0NCg0KCQkJCWlmICggIWRlZmF1bHRNb2RlIHx8IG5vcm1hbGl6ZWRNb2RlICE9PSAibm9uZSIgKSB7DQoJCQkJCSQuZWZmZWN0cy5zYXZlU3R5bGUoIGVsICk7DQoJCQkJfQ0KDQoJCQkJaWYgKCAkLmlzRnVuY3Rpb24oIG5leHQgKSApIHsNCgkJCQkJbmV4dCgpOw0KCQkJCX0NCgkJCX07DQoNCgkJaWYgKCAkLmZ4Lm9mZiB8fCAhZWZmZWN0TWV0aG9kICkgew0KDQoJCQkvLyBEZWxlZ2F0ZSB0byB0aGUgb3JpZ2luYWwgbWV0aG9kIChlLmcuLCAuc2hvdygpKSBpZiBwb3NzaWJsZQ0KCQkJaWYgKCBtb2RlICkgew0KCQkJCXJldHVybiB0aGlzWyBtb2RlIF0oIGFyZ3MuZHVyYXRpb24sIGNvbXBsZXRlICk7DQoJCQl9IGVsc2Ugew0KCQkJCXJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkgew0KCQkJCQlpZiAoIGNvbXBsZXRlICkgew0KCQkJCQkJY29tcGxldGUuY2FsbCggdGhpcyApOw0KCQkJCQl9DQoJCQkJfSApOw0KCQkJfQ0KCQl9DQoNCgkJZnVuY3Rpb24gcnVuKCBuZXh0ICkgew0KCQkJdmFyIGVsZW0gPSAkKCB0aGlzICk7DQoNCgkJCWZ1bmN0aW9uIGNsZWFudXAoKSB7DQoJCQkJZWxlbS5yZW1vdmVEYXRhKCBkYXRhU3BhY2VBbmltYXRlZCApOw0KDQoJCQkJJC5lZmZlY3RzLmNsZWFuVXAoIGVsZW0gKTsNCg0KCQkJCWlmICggYXJncy5tb2RlID09PSAiaGlkZSIgKSB7DQoJCQkJCWVsZW0uaGlkZSgpOw0KCQkJCX0NCg0KCQkJCWRvbmUoKTsNCgkJCX0NCg0KCQkJZnVuY3Rpb24gZG9uZSgpIHsNCgkJCQlpZiAoICQuaXNGdW5jdGlvbiggY29tcGxldGUgKSApIHsNCgkJCQkJY29tcGxldGUuY2FsbCggZWxlbVsgMCBdICk7DQoJCQkJfQ0KDQoJCQkJaWYgKCAkLmlzRnVuY3Rpb24oIG5leHQgKSApIHsNCgkJCQkJbmV4dCgpOw0KCQkJCX0NCgkJCX0NCg0KCQkJLy8gT3ZlcnJpZGUgbW9kZSBvcHRpb24gb24gYSBwZXIgZWxlbWVudCBiYXNpcywNCgkJCS8vIGFzIHRvZ2dsZSBjYW4gYmUgZWl0aGVyIHNob3cgb3IgaGlkZSBkZXBlbmRpbmcgb24gZWxlbWVudCBzdGF0ZQ0KCQkJYXJncy5tb2RlID0gbW9kZXMuc2hpZnQoKTsNCg0KCQkJaWYgKCAkLnVpQmFja0NvbXBhdCAhPT0gZmFsc2UgJiYgIWRlZmF1bHRNb2RlICkgew0KCQkJCWlmICggZWxlbS5pcyggIjpoaWRkZW4iICkgPyBtb2RlID09PSAiaGlkZSIgOiBtb2RlID09PSAic2hvdyIgKSB7DQoNCgkJCQkJLy8gQ2FsbCB0aGUgY29yZSBtZXRob2QgdG8gdHJhY2sgIm9sZGRpc3BsYXkiIHByb3Blcmx5DQoJCQkJCWVsZW1bIG1vZGUgXSgpOw0KCQkJCQlkb25lKCk7DQoJCQkJfSBlbHNlIHsNCgkJCQkJZWZmZWN0TWV0aG9kLmNhbGwoIGVsZW1bIDAgXSwgYXJncywgZG9uZSApOw0KCQkJCX0NCgkJCX0gZWxzZSB7DQoJCQkJaWYgKCBhcmdzLm1vZGUgPT09ICJub25lIiApIHsNCg0KCQkJCQkvLyBDYWxsIHRoZSBjb3JlIG1ldGhvZCB0byB0cmFjayAib2xkZGlzcGxheSIgcHJvcGVybHkNCgkJCQkJZWxlbVsgbW9kZSBdKCk7DQoJCQkJCWRvbmUoKTsNCgkJCQl9IGVsc2Ugew0KCQkJCQllZmZlY3RNZXRob2QuY2FsbCggZWxlbVsgMCBdLCBhcmdzLCBjbGVhbnVwICk7DQoJCQkJfQ0KCQkJfQ0KCQl9DQoNCgkJLy8gUnVuIHByZWZpbHRlciBvbiBhbGwgZWxlbWVudHMgZmlyc3QgdG8gZW5zdXJlIHRoYXQNCgkJLy8gYW55IHNob3dpbmcgb3IgaGlkaW5nIGhhcHBlbnMgYmVmb3JlIHBsYWNlaG9sZGVyIGNyZWF0aW9uLA0KCQkvLyB3aGljaCBlbnN1cmVzIHRoYXQgYW55IGxheW91dCBjaGFuZ2VzIGFyZSBjb3JyZWN0bHkgY2FwdHVyZWQuDQoJCXJldHVybiBxdWV1ZSA9PT0gZmFsc2UgPw0KCQkJdGhpcy5lYWNoKCBwcmVmaWx0ZXIgKS5lYWNoKCBydW4gKSA6DQoJCQl0aGlzLnF1ZXVlKCBxdWV1ZU5hbWUsIHByZWZpbHRlciApLnF1ZXVlKCBxdWV1ZU5hbWUsIHJ1biApOw0KCX0sDQoNCglzaG93OiAoIGZ1bmN0aW9uKCBvcmlnICkgew0KCQlyZXR1cm4gZnVuY3Rpb24oIG9wdGlvbiApIHsNCgkJCWlmICggc3RhbmRhcmRBbmltYXRpb25PcHRpb24oIG9wdGlvbiApICkgew0KCQkJCXJldHVybiBvcmlnLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsNCgkJCX0gZWxzZSB7DQoJCQkJdmFyIGFyZ3MgPSBfbm9ybWFsaXplQXJndW1lbnRzLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsNCgkJCQlhcmdzLm1vZGUgPSAic2hvdyI7DQoJCQkJcmV0dXJuIHRoaXMuZWZmZWN0LmNhbGwoIHRoaXMsIGFyZ3MgKTsNCgkJCX0NCgkJfTsNCgl9ICkoICQuZm4uc2hvdyApLA0KDQoJaGlkZTogKCBmdW5jdGlvbiggb3JpZyApIHsNCgkJcmV0dXJuIGZ1bmN0aW9uKCBvcHRpb24gKSB7DQoJCQlpZiAoIHN0YW5kYXJkQW5pbWF0aW9uT3B0aW9uKCBvcHRpb24gKSApIHsNCgkJCQlyZXR1cm4gb3JpZy5hcHBseSggdGhpcywgYXJndW1lbnRzICk7DQoJCQl9IGVsc2Ugew0KCQkJCXZhciBhcmdzID0gX25vcm1hbGl6ZUFyZ3VtZW50cy5hcHBseSggdGhpcywgYXJndW1lbnRzICk7DQoJCQkJYXJncy5tb2RlID0gImhpZGUiOw0KCQkJCXJldHVybiB0aGlzLmVmZmVjdC5jYWxsKCB0aGlzLCBhcmdzICk7DQoJCQl9DQoJCX07DQoJfSApKCAkLmZuLmhpZGUgKSwNCg0KCXRvZ2dsZTogKCBmdW5jdGlvbiggb3JpZyApIHsNCgkJcmV0dXJuIGZ1bmN0aW9uKCBvcHRpb24gKSB7DQoJCQlpZiAoIHN0YW5kYXJkQW5pbWF0aW9uT3B0aW9uKCBvcHRpb24gKSB8fCB0eXBlb2Ygb3B0aW9uID09PSAiYm9vbGVhbiIgKSB7DQoJCQkJcmV0dXJuIG9yaWcuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOw0KCQkJfSBlbHNlIHsNCgkJCQl2YXIgYXJncyA9IF9ub3JtYWxpemVBcmd1bWVudHMuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOw0KCQkJCWFyZ3MubW9kZSA9ICJ0b2dnbGUiOw0KCQkJCXJldHVybiB0aGlzLmVmZmVjdC5jYWxsKCB0aGlzLCBhcmdzICk7DQoJCQl9DQoJCX07DQoJfSApKCAkLmZuLnRvZ2dsZSApLA0KDQoJY3NzVW5pdDogZnVuY3Rpb24oIGtleSApIHsNCgkJdmFyIHN0eWxlID0gdGhpcy5jc3MoIGtleSApLA0KCQkJdmFsID0gW107DQoNCgkJJC5lYWNoKCBbICJlbSIsICJweCIsICIlIiwgInB0IiBdLCBmdW5jdGlvbiggaSwgdW5pdCApIHsNCgkJCWlmICggc3R5bGUuaW5kZXhPZiggdW5pdCApID4gMCApIHsNCgkJCQl2YWwgPSBbIHBhcnNlRmxvYXQoIHN0eWxlICksIHVuaXQgXTsNCgkJCX0NCgkJfSApOw0KCQlyZXR1cm4gdmFsOw0KCX0sDQoNCgljc3NDbGlwOiBmdW5jdGlvbiggY2xpcE9iaiApIHsNCgkJaWYgKCBjbGlwT2JqICkgew0KCQkJcmV0dXJuIHRoaXMuY3NzKCAiY2xpcCIsICJyZWN0KCIgKyBjbGlwT2JqLnRvcCArICJweCAiICsgY2xpcE9iai5yaWdodCArICJweCAiICsNCgkJCQljbGlwT2JqLmJvdHRvbSArICJweCAiICsgY2xpcE9iai5sZWZ0ICsgInB4KSIgKTsNCgkJfQ0KCQlyZXR1cm4gcGFyc2VDbGlwKCB0aGlzLmNzcyggImNsaXAiICksIHRoaXMgKTsNCgl9LA0KDQoJdHJhbnNmZXI6IGZ1bmN0aW9uKCBvcHRpb25zLCBkb25lICkgew0KCQl2YXIgZWxlbWVudCA9ICQoIHRoaXMgKSwNCgkJCXRhcmdldCA9ICQoIG9wdGlvbnMudG8gKSwNCgkJCXRhcmdldEZpeGVkID0gdGFyZ2V0LmNzcyggInBvc2l0aW9uIiApID09PSAiZml4ZWQiLA0KCQkJYm9keSA9ICQoICJib2R5IiApLA0KCQkJZml4VG9wID0gdGFyZ2V0Rml4ZWQgPyBib2R5LnNjcm9sbFRvcCgpIDogMCwNCgkJCWZpeExlZnQgPSB0YXJnZXRGaXhlZCA\/IGJvZHkuc2Nyb2xsTGVmdCgpIDogMCwNCgkJCWVuZFBvc2l0aW9uID0gdGFyZ2V0Lm9mZnNldCgpLA0KCQkJYW5pbWF0aW9uID0gew0KCQkJCXRvcDogZW5kUG9zaXRpb24udG9wIC0gZml4VG9wLA0KCQkJCWxlZnQ6IGVuZFBvc2l0aW9uLmxlZnQgLSBmaXhMZWZ0LA0KCQkJCWhlaWdodDogdGFyZ2V0LmlubmVySGVpZ2h0KCksDQoJCQkJd2lkdGg6IHRhcmdldC5pbm5lcldpZHRoKCkNCgkJCX0sDQoJCQlzdGFydFBvc2l0aW9uID0gZWxlbWVudC5vZmZzZXQoKSwNCgkJCXRyYW5zZmVyID0gJCggIjxkaXYgY2xhc3M9J3VpLWVmZmVjdHMtdHJhbnNmZXInPjwvZGl2PiIgKQ0KCQkJCS5hcHBlbmRUbyggImJvZHkiICkNCgkJCQkuYWRkQ2xhc3MoIG9wdGlvbnMuY2xhc3NOYW1lICkNCgkJCQkuY3NzKCB7DQoJCQkJCXRvcDogc3RhcnRQb3NpdGlvbi50b3AgLSBmaXhUb3AsDQoJCQkJCWxlZnQ6IHN0YXJ0UG9zaXRpb24ubGVmdCAtIGZpeExlZnQsDQoJCQkJCWhlaWdodDogZWxlbWVudC5pbm5lckhlaWdodCgpLA0KCQkJCQl3aWR0aDogZWxlbWVudC5pbm5lcldpZHRoKCksDQoJCQkJCXBvc2l0aW9uOiB0YXJnZXRGaXhlZCA\/ICJmaXhlZCIgOiAiYWJzb2x1dGUiDQoJCQkJfSApDQoJCQkJLmFuaW1hdGUoIGFuaW1hdGlvbiwgb3B0aW9ucy5kdXJhdGlvbiwgb3B0aW9ucy5lYXNpbmcsIGZ1bmN0aW9uKCkgew0KCQkJCQl0cmFuc2Zlci5yZW1vdmUoKTsNCgkJCQkJaWYgKCAkLmlzRnVuY3Rpb24oIGRvbmUgKSApIHsNCgkJCQkJCWRvbmUoKTsNCgkJCQkJfQ0KCQkJCX0gKTsNCgl9DQp9ICk7DQoNCmZ1bmN0aW9uIHBhcnNlQ2xpcCggc3RyLCBlbGVtZW50ICkgew0KCQl2YXIgb3V0ZXJXaWR0aCA9IGVsZW1lbnQub3V0ZXJXaWR0aCgpLA0KCQkJb3V0ZXJIZWlnaHQgPSBlbGVtZW50Lm91dGVySGVpZ2h0KCksDQoJCQljbGlwUmVnZXggPSAvXnJlY3RcKCgtP1xkKlwuP1xkKnB4fC0\/XGQrJXxhdXRvKSw\/XHMqKC0\/XGQqXC4\/XGQqcHh8LT9cZCslfGF1dG8pLD9ccyooLT9cZCpcLj9cZCpweHwtP1xkKyV8YXV0byksP1xzKigtP1xkKlwuP1xkKnB4fC0\/XGQrJXxhdXRvKVwpJC8sDQoJCQl2YWx1ZXMgPSBjbGlwUmVnZXguZXhlYyggc3RyICkgfHwgWyAiIiwgMCwgb3V0ZXJXaWR0aCwgb3V0ZXJIZWlnaHQsIDAgXTsNCg0KCQlyZXR1cm4gew0KCQkJdG9wOiBwYXJzZUZsb2F0KCB2YWx1ZXNbIDEgXSApIHx8IDAsDQoJCQlyaWdodDogdmFsdWVzWyAyIF0gPT09ICJhdXRvIiA\/IG91dGVyV2lkdGggOiBwYXJzZUZsb2F0KCB2YWx1ZXNbIDIgXSApLA0KCQkJYm90dG9tOiB2YWx1ZXNbIDMgXSA9PT0gImF1dG8iID8gb3V0ZXJIZWlnaHQgOiBwYXJzZUZsb2F0KCB2YWx1ZXNbIDMgXSApLA0KCQkJbGVmdDogcGFyc2VGbG9hdCggdmFsdWVzWyA0IF0gKSB8fCAwDQoJCX07DQp9DQoNCiQuZnguc3RlcC5jbGlwID0gZnVuY3Rpb24oIGZ4ICkgew0KCWlmICggIWZ4LmNsaXBJbml0ICkgew0KCQlmeC5zdGFydCA9ICQoIGZ4LmVsZW0gKS5jc3NDbGlwKCk7DQoJCWlmICggdHlwZW9mIGZ4LmVuZCA9PT0gInN0cmluZyIgKSB7DQoJCQlmeC5lbmQgPSBwYXJzZUNsaXAoIGZ4LmVuZCwgZnguZWxlbSApOw0KCQl9DQoJCWZ4LmNsaXBJbml0ID0gdHJ1ZTsNCgl9DQoNCgkkKCBmeC5lbGVtICkuY3NzQ2xpcCggew0KCQl0b3A6IGZ4LnBvcyAqICggZnguZW5kLnRvcCAtIGZ4LnN0YXJ0LnRvcCApICsgZnguc3RhcnQudG9wLA0KCQlyaWdodDogZngucG9zICogKCBmeC5lbmQucmlnaHQgLSBmeC5zdGFydC5yaWdodCApICsgZnguc3RhcnQucmlnaHQsDQoJCWJvdHRvbTogZngucG9zICogKCBmeC5lbmQuYm90dG9tIC0gZnguc3RhcnQuYm90dG9tICkgKyBmeC5zdGFydC5ib3R0b20sDQoJCWxlZnQ6IGZ4LnBvcyAqICggZnguZW5kLmxlZnQgLSBmeC5zdGFydC5sZWZ0ICkgKyBmeC5zdGFydC5sZWZ0DQoJfSApOw0KfTsNCg0KfSApKCk7DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogRUFTSU5HICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCg0KKCBmdW5jdGlvbigpIHsNCg0KLy8gQmFzZWQgb24gZWFzaW5nIGVxdWF0aW9ucyBmcm9tIFJvYmVydCBQZW5uZXIgKGh0dHA6Ly93d3cucm9iZXJ0cGVubmVyLmNvbS9lYXNpbmcpDQoNCnZhciBiYXNlRWFzaW5ncyA9IHt9Ow0KDQokLmVhY2goIFsgIlF1YWQiLCAiQ3ViaWMiLCAiUXVhcnQiLCAiUXVpbnQiLCAiRXhwbyIgXSwgZnVuY3Rpb24oIGksIG5hbWUgKSB7DQoJYmFzZUVhc2luZ3NbIG5hbWUgXSA9IGZ1bmN0aW9uKCBwICkgew0KCQlyZXR1cm4gTWF0aC5wb3coIHAsIGkgKyAyICk7DQoJfTsNCn0gKTsNCg0KJC5leHRlbmQoIGJhc2VFYXNpbmdzLCB7DQoJU2luZTogZnVuY3Rpb24oIHAgKSB7DQoJCXJldHVybiAxIC0gTWF0aC5jb3MoIHAgKiBNYXRoLlBJIC8gMiApOw0KCX0sDQoJQ2lyYzogZnVuY3Rpb24oIHAgKSB7DQoJCXJldHVybiAxIC0gTWF0aC5zcXJ0KCAxIC0gcCAqIHAgKTsNCgl9LA0KCUVsYXN0aWM6IGZ1bmN0aW9uKCBwICkgew0KCQlyZXR1cm4gcCA9PT0gMCB8fCBwID09PSAxID8gcCA6DQoJCQktTWF0aC5wb3coIDIsIDggKiAoIHAgLSAxICkgKSAqIE1hdGguc2luKCAoICggcCAtIDEgKSAqIDgwIC0gNy41ICkgKiBNYXRoLlBJIC8gMTUgKTsNCgl9LA0KCUJhY2s6IGZ1bmN0aW9uKCBwICkgew0KCQlyZXR1cm4gcCAqIHAgKiAoIDMgKiBwIC0gMiApOw0KCX0sDQoJQm91bmNlOiBmdW5jdGlvbiggcCApIHsNCgkJdmFyIHBvdzIsDQoJCQlib3VuY2UgPSA0Ow0KDQoJCXdoaWxlICggcCA8ICggKCBwb3cyID0gTWF0aC5wb3coIDIsIC0tYm91bmNlICkgKSAtIDEgKSAvIDExICkge30NCgkJcmV0dXJuIDEgLyBNYXRoLnBvdyggNCwgMyAtIGJvdW5jZSApIC0gNy41NjI1ICogTWF0aC5wb3coICggcG93MiAqIDMgLSAyICkgLyAyMiAtIHAsIDIgKTsNCgl9DQp9ICk7DQoNCiQuZWFjaCggYmFzZUVhc2luZ3MsIGZ1bmN0aW9uKCBuYW1lLCBlYXNlSW4gKSB7DQoJJC5lYXNpbmdbICJlYXNlSW4iICsgbmFtZSBdID0gZWFzZUluOw0KCSQuZWFzaW5nWyAiZWFzZU91dCIgKyBuYW1lIF0gPSBmdW5jdGlvbiggcCApIHsNCgkJcmV0dXJuIDEgLSBlYXNlSW4oIDEgLSBwICk7DQoJfTsNCgkkLmVhc2luZ1sgImVhc2VJbk91dCIgKyBuYW1lIF0gPSBmdW5jdGlvbiggcCApIHsNCgkJcmV0dXJuIHAgPCAwLjUgPw0KCQkJZWFzZUluKCBwICogMiApIC8gMiA6DQoJCQkxIC0gZWFzZUluKCBwICogLTIgKyAyICkgLyAyOw0KCX07DQp9ICk7DQoNCn0gKSgpOw0KDQp2YXIgZWZmZWN0ID0gJC5lZmZlY3RzOw0KDQoNCi8qIQ0KICogalF1ZXJ5IFVJIEVmZmVjdHMgQmxpbmQgMS4xMi4xDQogKiBodHRwOi8vanF1ZXJ5dWkuY29tDQogKg0KICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqLw0KDQovLz4+bGFiZWw6IEJsaW5kIEVmZmVjdA0KLy8+Pmdyb3VwOiBFZmZlY3RzDQovLz4+ZGVzY3JpcHRpb246IEJsaW5kcyB0aGUgZWxlbWVudC4NCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9ibGluZC1lZmZlY3QvDQovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vZWZmZWN0Lw0KDQoNCg0KdmFyIGVmZmVjdHNFZmZlY3RCbGluZCA9ICQuZWZmZWN0cy5kZWZpbmUoICJibGluZCIsICJoaWRlIiwgZnVuY3Rpb24oIG9wdGlvbnMsIGRvbmUgKSB7DQoJdmFyIG1hcCA9IHsNCgkJCXVwOiBbICJib3R0b20iLCAidG9wIiBdLA0KCQkJdmVydGljYWw6IFsgImJvdHRvbSIsICJ0b3AiIF0sDQoJCQlkb3duOiBbICJ0b3AiLCAiYm90dG9tIiBdLA0KCQkJbGVmdDogWyAicmlnaHQiLCAibGVmdCIgXSwNCgkJCWhvcml6b250YWw6IFsgInJpZ2h0IiwgImxlZnQiIF0sDQoJCQlyaWdodDogWyAibGVmdCIsICJyaWdodCIgXQ0KCQl9LA0KCQllbGVtZW50ID0gJCggdGhpcyApLA0KCQlkaXJlY3Rpb24gPSBvcHRpb25zLmRpcmVjdGlvbiB8fCAidXAiLA0KCQlzdGFydCA9IGVsZW1lbnQuY3NzQ2xpcCgpLA0KCQlhbmltYXRlID0geyBjbGlwOiAkLmV4dGVuZCgge30sIHN0YXJ0ICkgfSwNCgkJcGxhY2Vob2xkZXIgPSAkLmVmZmVjdHMuY3JlYXRlUGxhY2Vob2xkZXIoIGVsZW1lbnQgKTsNCg0KCWFuaW1hdGUuY2xpcFsgbWFwWyBkaXJlY3Rpb24gXVsgMCBdIF0gPSBhbmltYXRlLmNsaXBbIG1hcFsgZGlyZWN0aW9uIF1bIDEgXSBdOw0KDQoJaWYgKCBvcHRpb25zLm1vZGUgPT09ICJzaG93IiApIHsNCgkJZWxlbWVudC5jc3NDbGlwKCBhbmltYXRlLmNsaXAgKTsNCgkJaWYgKCBwbGFjZWhvbGRlciApIHsNCgkJCXBsYWNlaG9sZGVyLmNzcyggJC5lZmZlY3RzLmNsaXBUb0JveCggYW5pbWF0ZSApICk7DQoJCX0NCg0KCQlhbmltYXRlLmNsaXAgPSBzdGFydDsNCgl9DQoNCglpZiAoIHBsYWNlaG9sZGVyICkgew0KCQlwbGFjZWhvbGRlci5hbmltYXRlKCAkLmVmZmVjdHMuY2xpcFRvQm94KCBhbmltYXRlICksIG9wdGlvbnMuZHVyYXRpb24sIG9wdGlvbnMuZWFzaW5nICk7DQoJfQ0KDQoJZWxlbWVudC5hbmltYXRlKCBhbmltYXRlLCB7DQoJCXF1ZXVlOiBmYWxzZSwNCgkJZHVyYXRpb246IG9wdGlvbnMuZHVyYXRpb24sDQoJCWVhc2luZzogb3B0aW9ucy5lYXNpbmcsDQoJCWNvbXBsZXRlOiBkb25lDQoJfSApOw0KfSApOw0KDQoNCi8qIQ0KICogalF1ZXJ5IFVJIEVmZmVjdHMgQm91bmNlIDEuMTIuMQ0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKi8NCg0KLy8+PmxhYmVsOiBCb3VuY2UgRWZmZWN0DQovLz4+Z3JvdXA6IEVmZmVjdHMNCi8vPj5kZXNjcmlwdGlvbjogQm91bmNlcyBhbiBlbGVtZW50IGhvcml6b250YWxseSBvciB2ZXJ0aWNhbGx5IG4gdGltZXMuDQovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vYm91bmNlLWVmZmVjdC8NCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9lZmZlY3QvDQoNCg0KDQp2YXIgZWZmZWN0c0VmZmVjdEJvdW5jZSA9ICQuZWZmZWN0cy5kZWZpbmUoICJib3VuY2UiLCBmdW5jdGlvbiggb3B0aW9ucywgZG9uZSApIHsNCgl2YXIgdXBBbmltLCBkb3duQW5pbSwgcmVmVmFsdWUsDQoJCWVsZW1lbnQgPSAkKCB0aGlzICksDQoNCgkJLy8gRGVmYXVsdHM6DQoJCW1vZGUgPSBvcHRpb25zLm1vZGUsDQoJCWhpZGUgPSBtb2RlID09PSAiaGlkZSIsDQoJCXNob3cgPSBtb2RlID09PSAic2hvdyIsDQoJCWRpcmVjdGlvbiA9IG9wdGlvbnMuZGlyZWN0aW9uIHx8ICJ1cCIsDQoJCWRpc3RhbmNlID0gb3B0aW9ucy5kaXN0YW5jZSwNCgkJdGltZXMgPSBvcHRpb25zLnRpbWVzIHx8IDUsDQoNCgkJLy8gTnVtYmVyIG9mIGludGVybmFsIGFuaW1hdGlvbnMNCgkJYW5pbXMgPSB0aW1lcyAqIDIgKyAoIHNob3cgfHwgaGlkZSA\/IDEgOiAwICksDQoJCXNwZWVkID0gb3B0aW9ucy5kdXJhdGlvbiAvIGFuaW1zLA0KCQllYXNpbmcgPSBvcHRpb25zLmVhc2luZywNCg0KCQkvLyBVdGlsaXR5Og0KCQlyZWYgPSAoIGRpcmVjdGlvbiA9PT0gInVwIiB8fCBkaXJlY3Rpb24gPT09ICJkb3duIiApID8gInRvcCIgOiAibGVmdCIsDQoJCW1vdGlvbiA9ICggZGlyZWN0aW9uID09PSAidXAiIHx8IGRpcmVjdGlvbiA9PT0gImxlZnQiICksDQoJCWkgPSAwLA0KDQoJCXF1ZXVlbGVuID0gZWxlbWVudC5xdWV1ZSgpLmxlbmd0aDsNCg0KCSQuZWZmZWN0cy5jcmVhdGVQbGFjZWhvbGRlciggZWxlbWVudCApOw0KDQoJcmVmVmFsdWUgPSBlbGVtZW50LmNzcyggcmVmICk7DQoNCgkvLyBEZWZhdWx0IGRpc3RhbmNlIGZvciB0aGUgQklHR0VTVCBib3VuY2UgaXMgdGhlIG91dGVyIERpc3RhbmNlIC8gMw0KCWlmICggIWRpc3RhbmNlICkgew0KCQlkaXN0YW5jZSA9IGVsZW1lbnRbIHJlZiA9PT0gInRvcCIgPyAib3V0ZXJIZWlnaHQiIDogIm91dGVyV2lkdGgiIF0oKSAvIDM7DQoJfQ0KDQoJaWYgKCBzaG93ICkgew0KCQlkb3duQW5pbSA9IHsgb3BhY2l0eTogMSB9Ow0KCQlkb3duQW5pbVsgcmVmIF0gPSByZWZWYWx1ZTsNCg0KCQkvLyBJZiB3ZSBhcmUgc2hvd2luZywgZm9yY2Ugb3BhY2l0eSAwIGFuZCBzZXQgdGhlIGluaXRpYWwgcG9zaXRpb24NCgkJLy8gdGhlbiBkbyB0aGUgImZpcnN0IiBhbmltYXRpb24NCgkJZWxlbWVudA0KCQkJLmNzcyggIm9wYWNpdHkiLCAwICkNCgkJCS5jc3MoIHJlZiwgbW90aW9uID8gLWRpc3RhbmNlICogMiA6IGRpc3RhbmNlICogMiApDQoJCQkuYW5pbWF0ZSggZG93bkFuaW0sIHNwZWVkLCBlYXNpbmcgKTsNCgl9DQoNCgkvLyBTdGFydCBhdCB0aGUgc21hbGxlc3QgZGlzdGFuY2UgaWYgd2UgYXJlIGhpZGluZw0KCWlmICggaGlkZSApIHsNCgkJZGlzdGFuY2UgPSBkaXN0YW5jZSAvIE1hdGgucG93KCAyLCB0aW1lcyAtIDEgKTsNCgl9DQoNCglkb3duQW5pbSA9IHt9Ow0KCWRvd25BbmltWyByZWYgXSA9IHJlZlZhbHVlOw0KDQoJLy8gQm91bmNlcyB1cC9kb3duL2xlZnQvcmlnaHQgdGhlbiBiYWNrIHRvIDAgLS0gdGltZXMgKiAyIGFuaW1hdGlvbnMgaGFwcGVuIGhlcmUNCglmb3IgKCA7IGkgPCB0aW1lczsgaSsrICkgew0KCQl1cEFuaW0gPSB7fTsNCgkJdXBBbmltWyByZWYgXSA9ICggbW90aW9uID8gIi09IiA6ICIrPSIgKSArIGRpc3RhbmNlOw0KDQoJCWVsZW1lbnQNCgkJCS5hbmltYXRlKCB1cEFuaW0sIHNwZWVkLCBlYXNpbmcgKQ0KCQkJLmFuaW1hdGUoIGRvd25BbmltLCBzcGVlZCwgZWFzaW5nICk7DQoNCgkJZGlzdGFuY2UgPSBoaWRlID8gZGlzdGFuY2UgKiAyIDogZGlzdGFuY2UgLyAyOw0KCX0NCg0KCS8vIExhc3QgQm91bmNlIHdoZW4gSGlkaW5nDQoJaWYgKCBoaWRlICkgew0KCQl1cEFuaW0gPSB7IG9wYWNpdHk6IDAgfTsNCgkJdXBBbmltWyByZWYgXSA9ICggbW90aW9uID8gIi09IiA6ICIrPSIgKSArIGRpc3RhbmNlOw0KDQoJCWVsZW1lbnQuYW5pbWF0ZSggdXBBbmltLCBzcGVlZCwgZWFzaW5nICk7DQoJfQ0KDQoJZWxlbWVudC5xdWV1ZSggZG9uZSApOw0KDQoJJC5lZmZlY3RzLnVuc2hpZnQoIGVsZW1lbnQsIHF1ZXVlbGVuLCBhbmltcyArIDEgKTsNCn0gKTsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBFZmZlY3RzIENsaXAgMS4xMi4xDQogKiBodHRwOi8vanF1ZXJ5dWkuY29tDQogKg0KICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqLw0KDQovLz4+bGFiZWw6IENsaXAgRWZmZWN0DQovLz4+Z3JvdXA6IEVmZmVjdHMNCi8vPj5kZXNjcmlwdGlvbjogQ2xpcHMgdGhlIGVsZW1lbnQgb24gYW5kIG9mZiBsaWtlIGFuIG9sZCBUVi4NCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9jbGlwLWVmZmVjdC8NCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9lZmZlY3QvDQoNCg0KDQp2YXIgZWZmZWN0c0VmZmVjdENsaXAgPSAkLmVmZmVjdHMuZGVmaW5lKCAiY2xpcCIsICJoaWRlIiwgZnVuY3Rpb24oIG9wdGlvbnMsIGRvbmUgKSB7DQoJdmFyIHN0YXJ0LA0KCQlhbmltYXRlID0ge30sDQoJCWVsZW1lbnQgPSAkKCB0aGlzICksDQoJCWRpcmVjdGlvbiA9IG9wdGlvbnMuZGlyZWN0aW9uIHx8ICJ2ZXJ0aWNhbCIsDQoJCWJvdGggPSBkaXJlY3Rpb24gPT09ICJib3RoIiwNCgkJaG9yaXpvbnRhbCA9IGJvdGggfHwgZGlyZWN0aW9uID09PSAiaG9yaXpvbnRhbCIsDQoJCXZlcnRpY2FsID0gYm90aCB8fCBkaXJlY3Rpb24gPT09ICJ2ZXJ0aWNhbCI7DQoNCglzdGFydCA9IGVsZW1lbnQuY3NzQ2xpcCgpOw0KCWFuaW1hdGUuY2xpcCA9IHsNCgkJdG9wOiB2ZXJ0aWNhbCA\/ICggc3RhcnQuYm90dG9tIC0gc3RhcnQudG9wICkgLyAyIDogc3RhcnQudG9wLA0KCQlyaWdodDogaG9yaXpvbnRhbCA\/ICggc3RhcnQucmlnaHQgLSBzdGFydC5sZWZ0ICkgLyAyIDogc3RhcnQucmlnaHQsDQoJCWJvdHRvbTogdmVydGljYWwgPyAoIHN0YXJ0LmJvdHRvbSAtIHN0YXJ0LnRvcCApIC8gMiA6IHN0YXJ0LmJvdHRvbSwNCgkJbGVmdDogaG9yaXpvbnRhbCA\/ICggc3RhcnQucmlnaHQgLSBzdGFydC5sZWZ0ICkgLyAyIDogc3RhcnQubGVmdA0KCX07DQoNCgkkLmVmZmVjdHMuY3JlYXRlUGxhY2Vob2xkZXIoIGVsZW1lbnQgKTsNCg0KCWlmICggb3B0aW9ucy5tb2RlID09PSAic2hvdyIgKSB7DQoJCWVsZW1lbnQuY3NzQ2xpcCggYW5pbWF0ZS5jbGlwICk7DQoJCWFuaW1hdGUuY2xpcCA9IHN0YXJ0Ow0KCX0NCg0KCWVsZW1lbnQuYW5pbWF0ZSggYW5pbWF0ZSwgew0KCQlxdWV1ZTogZmFsc2UsDQoJCWR1cmF0aW9uOiBvcHRpb25zLmR1cmF0aW9uLA0KCQllYXNpbmc6IG9wdGlvbnMuZWFzaW5nLA0KCQljb21wbGV0ZTogZG9uZQ0KCX0gKTsNCg0KfSApOw0KDQoNCi8qIQ0KICogalF1ZXJ5IFVJIEVmZmVjdHMgRHJvcCAxLjEyLjENCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICovDQoNCi8vPj5sYWJlbDogRHJvcCBFZmZlY3QNCi8vPj5ncm91cDogRWZmZWN0cw0KLy8+PmRlc2NyaXB0aW9uOiBNb3ZlcyBhbiBlbGVtZW50IGluIG9uZSBkaXJlY3Rpb24gYW5kIGhpZGVzIGl0IGF0IHRoZSBzYW1lIHRpbWUuDQovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vZHJvcC1lZmZlY3QvDQovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vZWZmZWN0Lw0KDQoNCg0KdmFyIGVmZmVjdHNFZmZlY3REcm9wID0gJC5lZmZlY3RzLmRlZmluZSggImRyb3AiLCAiaGlkZSIsIGZ1bmN0aW9uKCBvcHRpb25zLCBkb25lICkgew0KDQoJdmFyIGRpc3RhbmNlLA0KCQllbGVtZW50ID0gJCggdGhpcyApLA0KCQltb2RlID0gb3B0aW9ucy5tb2RlLA0KCQlzaG93ID0gbW9kZSA9PT0gInNob3ciLA0KCQlkaXJlY3Rpb24gPSBvcHRpb25zLmRpcmVjdGlvbiB8fCAibGVmdCIsDQoJCXJlZiA9ICggZGlyZWN0aW9uID09PSAidXAiIHx8IGRpcmVjdGlvbiA9PT0gImRvd24iICkgPyAidG9wIiA6ICJsZWZ0IiwNCgkJbW90aW9uID0gKCBkaXJlY3Rpb24gPT09ICJ1cCIgfHwgZGlyZWN0aW9uID09PSAibGVmdCIgKSA\/ICItPSIgOiAiKz0iLA0KCQlvcHBvc2l0ZU1vdGlvbiA9ICggbW90aW9uID09PSAiKz0iICkgPyAiLT0iIDogIis9IiwNCgkJYW5pbWF0aW9uID0gew0KCQkJb3BhY2l0eTogMA0KCQl9Ow0KDQoJJC5lZmZlY3RzLmNyZWF0ZVBsYWNlaG9sZGVyKCBlbGVtZW50ICk7DQoNCglkaXN0YW5jZSA9IG9wdGlvbnMuZGlzdGFuY2UgfHwNCgkJZWxlbWVudFsgcmVmID09PSAidG9wIiA\/ICJvdXRlckhlaWdodCIgOiAib3V0ZXJXaWR0aCIgXSggdHJ1ZSApIC8gMjsNCg0KCWFuaW1hdGlvblsgcmVmIF0gPSBtb3Rpb24gKyBkaXN0YW5jZTsNCg0KCWlmICggc2hvdyApIHsNCgkJZWxlbWVudC5jc3MoIGFuaW1hdGlvbiApOw0KDQoJCWFuaW1hdGlvblsgcmVmIF0gPSBvcHBvc2l0ZU1vdGlvbiArIGRpc3RhbmNlOw0KCQlhbmltYXRpb24ub3BhY2l0eSA9IDE7DQoJfQ0KDQoJLy8gQW5pbWF0ZQ0KCWVsZW1lbnQuYW5pbWF0ZSggYW5pbWF0aW9uLCB7DQoJCXF1ZXVlOiBmYWxzZSwNCgkJZHVyYXRpb246IG9wdGlvbnMuZHVyYXRpb24sDQoJCWVhc2luZzogb3B0aW9ucy5lYXNpbmcsDQoJCWNvbXBsZXRlOiBkb25lDQoJfSApOw0KfSApOw0KDQoNCi8qIQ0KICogalF1ZXJ5IFVJIEVmZmVjdHMgRXhwbG9kZSAxLjEyLjENCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICovDQoNCi8vPj5sYWJlbDogRXhwbG9kZSBFZmZlY3QNCi8vPj5ncm91cDogRWZmZWN0cw0KLy8ganNjczpkaXNhYmxlIG1heGltdW1MaW5lTGVuZ3RoDQovLz4+ZGVzY3JpcHRpb246IEV4cGxvZGVzIGFuIGVsZW1lbnQgaW4gYWxsIGRpcmVjdGlvbnMgaW50byBuIHBpZWNlcy4gSW1wbG9kZXMgYW4gZWxlbWVudCB0byBpdHMgb3JpZ2luYWwgd2hvbGVuZXNzLg0KLy8ganNjczplbmFibGUgbWF4aW11bUxpbmVMZW5ndGgNCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9leHBsb2RlLWVmZmVjdC8NCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9lZmZlY3QvDQoNCg0KDQp2YXIgZWZmZWN0c0VmZmVjdEV4cGxvZGUgPSAkLmVmZmVjdHMuZGVmaW5lKCAiZXhwbG9kZSIsICJoaWRlIiwgZnVuY3Rpb24oIG9wdGlvbnMsIGRvbmUgKSB7DQoNCgl2YXIgaSwgaiwgbGVmdCwgdG9wLCBteCwgbXksDQoJCXJvd3MgPSBvcHRpb25zLnBpZWNlcyA\/IE1hdGgucm91bmQoIE1hdGguc3FydCggb3B0aW9ucy5waWVjZXMgKSApIDogMywNCgkJY2VsbHMgPSByb3dzLA0KCQllbGVtZW50ID0gJCggdGhpcyApLA0KCQltb2RlID0gb3B0aW9ucy5tb2RlLA0KCQlzaG93ID0gbW9kZSA9PT0gInNob3ciLA0KDQoJCS8vIFNob3cgYW5kIHRoZW4gdmlzaWJpbGl0eTpoaWRkZW4gdGhlIGVsZW1lbnQgYmVmb3JlIGNhbGN1bGF0aW5nIG9mZnNldA0KCQlvZmZzZXQgPSBlbGVtZW50LnNob3coKS5jc3MoICJ2aXNpYmlsaXR5IiwgImhpZGRlbiIgKS5vZmZzZXQoKSwNCg0KCQkvLyBXaWR0aCBhbmQgaGVpZ2h0IG9mIGEgcGllY2UNCgkJd2lkdGggPSBNYXRoLmNlaWwoIGVsZW1lbnQub3V0ZXJXaWR0aCgpIC8gY2VsbHMgKSwNCgkJaGVpZ2h0ID0gTWF0aC5jZWlsKCBlbGVtZW50Lm91dGVySGVpZ2h0KCkgLyByb3dzICksDQoJCXBpZWNlcyA9IFtdOw0KDQoJLy8gQ2hpbGRyZW4gYW5pbWF0ZSBjb21wbGV0ZToNCglmdW5jdGlvbiBjaGlsZENvbXBsZXRlKCkgew0KCQlwaWVjZXMucHVzaCggdGhpcyApOw0KCQlpZiAoIHBpZWNlcy5sZW5ndGggPT09IHJvd3MgKiBjZWxscyApIHsNCgkJCWFuaW1Db21wbGV0ZSgpOw0KCQl9DQoJfQ0KDQoJLy8gQ2xvbmUgdGhlIGVsZW1lbnQgZm9yIGVhY2ggcm93IGFuZCBjZWxsLg0KCWZvciAoIGkgPSAwOyBpIDwgcm93czsgaSsrICkgeyAvLyA9PT0+DQoJCXRvcCA9IG9mZnNldC50b3AgKyBpICogaGVpZ2h0Ow0KCQlteSA9IGkgLSAoIHJvd3MgLSAxICkgLyAyOw0KDQoJCWZvciAoIGogPSAwOyBqIDwgY2VsbHM7IGorKyApIHsgLy8gfHx8DQoJCQlsZWZ0ID0gb2Zmc2V0LmxlZnQgKyBqICogd2lkdGg7DQoJCQlteCA9IGogLSAoIGNlbGxzIC0gMSApIC8gMjsNCg0KCQkJLy8gQ3JlYXRlIGEgY2xvbmUgb2YgdGhlIG5vdyBoaWRkZW4gbWFpbiBlbGVtZW50IHRoYXQgd2lsbCBiZSBhYnNvbHV0ZSBwb3NpdGlvbmVkDQoJCQkvLyB3aXRoaW4gYSB3cmFwcGVyIGRpdiBvZmYgdGhlIC1sZWZ0IGFuZCAtdG9wIGVxdWFsIHRvIHNpemUgb2Ygb3VyIHBpZWNlcw0KCQkJZWxlbWVudA0KCQkJCS5jbG9uZSgpDQoJCQkJLmFwcGVuZFRvKCAiYm9keSIgKQ0KCQkJCS53cmFwKCAiPGRpdj48L2Rpdj4iICkNCgkJCQkuY3NzKCB7DQoJCQkJCXBvc2l0aW9uOiAiYWJzb2x1dGUiLA0KCQkJCQl2aXNpYmlsaXR5OiAidmlzaWJsZSIsDQoJCQkJCWxlZnQ6IC1qICogd2lkdGgsDQoJCQkJCXRvcDogLWkgKiBoZWlnaHQNCgkJCQl9ICkNCg0KCQkJCS8vIFNlbGVjdCB0aGUgd3JhcHBlciAtIG1ha2UgaXQgb3ZlcmZsb3c6IGhpZGRlbiBhbmQgYWJzb2x1dGUgcG9zaXRpb25lZCBiYXNlZCBvbg0KCQkJCS8vIHdoZXJlIHRoZSBvcmlnaW5hbCB3YXMgbG9jYXRlZCArbGVmdCBhbmQgK3RvcCBlcXVhbCB0byB0aGUgc2l6ZSBvZiBwaWVjZXMNCgkJCQkucGFyZW50KCkNCgkJCQkJLmFkZENsYXNzKCAidWktZWZmZWN0cy1leHBsb2RlIiApDQoJCQkJCS5jc3MoIHsNCgkJCQkJCXBvc2l0aW9uOiAiYWJzb2x1dGUiLA0KCQkJCQkJb3ZlcmZsb3c6ICJoaWRkZW4iLA0KCQkJCQkJd2lkdGg6IHdpZHRoLA0KCQkJCQkJaGVpZ2h0OiBoZWlnaHQsDQoJCQkJCQlsZWZ0OiBsZWZ0ICsgKCBzaG93ID8gbXggKiB3aWR0aCA6IDAgKSwNCgkJCQkJCXRvcDogdG9wICsgKCBzaG93ID8gbXkgKiBoZWlnaHQgOiAwICksDQoJCQkJCQlvcGFjaXR5OiBzaG93ID8gMCA6IDENCgkJCQkJfSApDQoJCQkJCS5hbmltYXRlKCB7DQoJCQkJCQlsZWZ0OiBsZWZ0ICsgKCBzaG93ID8gMCA6IG14ICogd2lkdGggKSwNCgkJCQkJCXRvcDogdG9wICsgKCBzaG93ID8gMCA6IG15ICogaGVpZ2h0ICksDQoJCQkJCQlvcGFjaXR5OiBzaG93ID8gMSA6IDANCgkJCQkJfSwgb3B0aW9ucy5kdXJhdGlvbiB8fCA1MDAsIG9wdGlvbnMuZWFzaW5nLCBjaGlsZENvbXBsZXRlICk7DQoJCX0NCgl9DQoNCglmdW5jdGlvbiBhbmltQ29tcGxldGUoKSB7DQoJCWVsZW1lbnQuY3NzKCB7DQoJCQl2aXNpYmlsaXR5OiAidmlzaWJsZSINCgkJfSApOw0KCQkkKCBwaWVjZXMgKS5yZW1vdmUoKTsNCgkJZG9uZSgpOw0KCX0NCn0gKTsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBFZmZlY3RzIEZhZGUgMS4xMi4xDQogKiBodHRwOi8vanF1ZXJ5dWkuY29tDQogKg0KICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqLw0KDQovLz4+bGFiZWw6IEZhZGUgRWZmZWN0DQovLz4+Z3JvdXA6IEVmZmVjdHMNCi8vPj5kZXNjcmlwdGlvbjogRmFkZXMgdGhlIGVsZW1lbnQuDQovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vZmFkZS1lZmZlY3QvDQovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vZWZmZWN0Lw0KDQoNCg0KdmFyIGVmZmVjdHNFZmZlY3RGYWRlID0gJC5lZmZlY3RzLmRlZmluZSggImZhZGUiLCAidG9nZ2xlIiwgZnVuY3Rpb24oIG9wdGlvbnMsIGRvbmUgKSB7DQoJdmFyIHNob3cgPSBvcHRpb25zLm1vZGUgPT09ICJzaG93IjsNCg0KCSQoIHRoaXMgKQ0KCQkuY3NzKCAib3BhY2l0eSIsIHNob3cgPyAwIDogMSApDQoJCS5hbmltYXRlKCB7DQoJCQlvcGFjaXR5OiBzaG93ID8gMSA6IDANCgkJfSwgew0KCQkJcXVldWU6IGZhbHNlLA0KCQkJZHVyYXRpb246IG9wdGlvbnMuZHVyYXRpb24sDQoJCQllYXNpbmc6IG9wdGlvbnMuZWFzaW5nLA0KCQkJY29tcGxldGU6IGRvbmUNCgkJfSApOw0KfSApOw0KDQoNCi8qIQ0KICogalF1ZXJ5IFVJIEVmZmVjdHMgRm9sZCAxLjEyLjENCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICovDQoNCi8vPj5sYWJlbDogRm9sZCBFZmZlY3QNCi8vPj5ncm91cDogRWZmZWN0cw0KLy8+PmRlc2NyaXB0aW9uOiBGb2xkcyBhbiBlbGVtZW50IGZpcnN0IGhvcml6b250YWxseSBhbmQgdGhlbiB2ZXJ0aWNhbGx5Lg0KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2ZvbGQtZWZmZWN0Lw0KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL2VmZmVjdC8NCg0KDQoNCnZhciBlZmZlY3RzRWZmZWN0Rm9sZCA9ICQuZWZmZWN0cy5kZWZpbmUoICJmb2xkIiwgImhpZGUiLCBmdW5jdGlvbiggb3B0aW9ucywgZG9uZSApIHsNCg0KCS8vIENyZWF0ZSBlbGVtZW50DQoJdmFyIGVsZW1lbnQgPSAkKCB0aGlzICksDQoJCW1vZGUgPSBvcHRpb25zLm1vZGUsDQoJCXNob3cgPSBtb2RlID09PSAic2hvdyIsDQoJCWhpZGUgPSBtb2RlID09PSAiaGlkZSIsDQoJCXNpemUgPSBvcHRpb25zLnNpemUgfHwgMTUsDQoJCXBlcmNlbnQgPSAvKFswLTldKyklLy5leGVjKCBzaXplICksDQoJCWhvcml6Rmlyc3QgPSAhIW9wdGlvbnMuaG9yaXpGaXJzdCwNCgkJcmVmID0gaG9yaXpGaXJzdCA\/IFsgInJpZ2h0IiwgImJvdHRvbSIgXSA6IFsgImJvdHRvbSIsICJyaWdodCIgXSwNCgkJZHVyYXRpb24gPSBvcHRpb25zLmR1cmF0aW9uIC8gMiwNCg0KCQlwbGFjZWhvbGRlciA9ICQuZWZmZWN0cy5jcmVhdGVQbGFjZWhvbGRlciggZWxlbWVudCApLA0KDQoJCXN0YXJ0ID0gZWxlbWVudC5jc3NDbGlwKCksDQoJCWFuaW1hdGlvbjEgPSB7IGNsaXA6ICQuZXh0ZW5kKCB7fSwgc3RhcnQgKSB9LA0KCQlhbmltYXRpb24yID0geyBjbGlwOiAkLmV4dGVuZCgge30sIHN0YXJ0ICkgfSwNCg0KCQlkaXN0YW5jZSA9IFsgc3RhcnRbIHJlZlsgMCBdIF0sIHN0YXJ0WyByZWZbIDEgXSBdIF0sDQoNCgkJcXVldWVsZW4gPSBlbGVtZW50LnF1ZXVlKCkubGVuZ3RoOw0KDQoJaWYgKCBwZXJjZW50ICkgew0KCQlzaXplID0gcGFyc2VJbnQoIHBlcmNlbnRbIDEgXSwgMTAgKSAvIDEwMCAqIGRpc3RhbmNlWyBoaWRlID8gMCA6IDEgXTsNCgl9DQoJYW5pbWF0aW9uMS5jbGlwWyByZWZbIDAgXSBdID0gc2l6ZTsNCglhbmltYXRpb24yLmNsaXBbIHJlZlsgMCBdIF0gPSBzaXplOw0KCWFuaW1hdGlvbjIuY2xpcFsgcmVmWyAxIF0gXSA9IDA7DQoNCglpZiAoIHNob3cgKSB7DQoJCWVsZW1lbnQuY3NzQ2xpcCggYW5pbWF0aW9uMi5jbGlwICk7DQoJCWlmICggcGxhY2Vob2xkZXIgKSB7DQoJCQlwbGFjZWhvbGRlci5jc3MoICQuZWZmZWN0cy5jbGlwVG9Cb3goIGFuaW1hdGlvbjIgKSApOw0KCQl9DQoNCgkJYW5pbWF0aW9uMi5jbGlwID0gc3RhcnQ7DQoJfQ0KDQoJLy8gQW5pbWF0ZQ0KCWVsZW1lbnQNCgkJLnF1ZXVlKCBmdW5jdGlvbiggbmV4dCApIHsNCgkJCWlmICggcGxhY2Vob2xkZXIgKSB7DQoJCQkJcGxhY2Vob2xkZXINCgkJCQkJLmFuaW1hdGUoICQuZWZmZWN0cy5jbGlwVG9Cb3goIGFuaW1hdGlvbjEgKSwgZHVyYXRpb24sIG9wdGlvbnMuZWFzaW5nICkNCgkJCQkJLmFuaW1hdGUoICQuZWZmZWN0cy5jbGlwVG9Cb3goIGFuaW1hdGlvbjIgKSwgZHVyYXRpb24sIG9wdGlvbnMuZWFzaW5nICk7DQoJCQl9DQoNCgkJCW5leHQoKTsNCgkJfSApDQoJCS5hbmltYXRlKCBhbmltYXRpb24xLCBkdXJhdGlvbiwgb3B0aW9ucy5lYXNpbmcgKQ0KCQkuYW5pbWF0ZSggYW5pbWF0aW9uMiwgZHVyYXRpb24sIG9wdGlvbnMuZWFzaW5nICkNCgkJLnF1ZXVlKCBkb25lICk7DQoNCgkkLmVmZmVjdHMudW5zaGlmdCggZWxlbWVudCwgcXVldWVsZW4sIDQgKTsNCn0gKTsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBFZmZlY3RzIEhpZ2hsaWdodCAxLjEyLjENCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICovDQoNCi8vPj5sYWJlbDogSGlnaGxpZ2h0IEVmZmVjdA0KLy8+Pmdyb3VwOiBFZmZlY3RzDQovLz4+ZGVzY3JpcHRpb246IEhpZ2hsaWdodHMgdGhlIGJhY2tncm91bmQgb2YgYW4gZWxlbWVudCBpbiBhIGRlZmluZWQgY29sb3IgZm9yIGEgY3VzdG9tIGR1cmF0aW9uLg0KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2hpZ2hsaWdodC1lZmZlY3QvDQovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vZWZmZWN0Lw0KDQoNCg0KdmFyIGVmZmVjdHNFZmZlY3RIaWdobGlnaHQgPSAkLmVmZmVjdHMuZGVmaW5lKCAiaGlnaGxpZ2h0IiwgInNob3ciLCBmdW5jdGlvbiggb3B0aW9ucywgZG9uZSApIHsNCgl2YXIgZWxlbWVudCA9ICQoIHRoaXMgKSwNCgkJYW5pbWF0aW9uID0gew0KCQkJYmFja2dyb3VuZENvbG9yOiBlbGVtZW50LmNzcyggImJhY2tncm91bmRDb2xvciIgKQ0KCQl9Ow0KDQoJaWYgKCBvcHRpb25zLm1vZGUgPT09ICJoaWRlIiApIHsNCgkJYW5pbWF0aW9uLm9wYWNpdHkgPSAwOw0KCX0NCg0KCSQuZWZmZWN0cy5zYXZlU3R5bGUoIGVsZW1lbnQgKTsNCg0KCWVsZW1lbnQNCgkJLmNzcyggew0KCQkJYmFja2dyb3VuZEltYWdlOiAibm9uZSIsDQoJCQliYWNrZ3JvdW5kQ29sb3I6IG9wdGlvbnMuY29sb3IgfHwgIiNmZmZmOTkiDQoJCX0gKQ0KCQkuYW5pbWF0ZSggYW5pbWF0aW9uLCB7DQoJCQlxdWV1ZTogZmFsc2UsDQoJCQlkdXJhdGlvbjogb3B0aW9ucy5kdXJhdGlvbiwNCgkJCWVhc2luZzogb3B0aW9ucy5lYXNpbmcsDQoJCQljb21wbGV0ZTogZG9uZQ0KCQl9ICk7DQp9ICk7DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgRWZmZWN0cyBTaXplIDEuMTIuMQ0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKi8NCg0KLy8+PmxhYmVsOiBTaXplIEVmZmVjdA0KLy8+Pmdyb3VwOiBFZmZlY3RzDQovLz4+ZGVzY3JpcHRpb246IFJlc2l6ZSBhbiBlbGVtZW50IHRvIGEgc3BlY2lmaWVkIHdpZHRoIGFuZCBoZWlnaHQuDQovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vc2l6ZS1lZmZlY3QvDQovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vZWZmZWN0Lw0KDQoNCg0KdmFyIGVmZmVjdHNFZmZlY3RTaXplID0gJC5lZmZlY3RzLmRlZmluZSggInNpemUiLCBmdW5jdGlvbiggb3B0aW9ucywgZG9uZSApIHsNCg0KCS8vIENyZWF0ZSBlbGVtZW50DQoJdmFyIGJhc2VsaW5lLCBmYWN0b3IsIHRlbXAsDQoJCWVsZW1lbnQgPSAkKCB0aGlzICksDQoNCgkJLy8gQ29weSBmb3IgY2hpbGRyZW4NCgkJY1Byb3BzID0gWyAiZm9udFNpemUiIF0sDQoJCXZQcm9wcyA9IFsgImJvcmRlclRvcFdpZHRoIiwgImJvcmRlckJvdHRvbVdpZHRoIiwgInBhZGRpbmdUb3AiLCAicGFkZGluZ0JvdHRvbSIgXSwNCgkJaFByb3BzID0gWyAiYm9yZGVyTGVmdFdpZHRoIiwgImJvcmRlclJpZ2h0V2lkdGgiLCAicGFkZGluZ0xlZnQiLCAicGFkZGluZ1JpZ2h0IiBdLA0KDQoJCS8vIFNldCBvcHRpb25zDQoJCW1vZGUgPSBvcHRpb25zLm1vZGUsDQoJCXJlc3RvcmUgPSBtb2RlICE9PSAiZWZmZWN0IiwNCgkJc2NhbGUgPSBvcHRpb25zLnNjYWxlIHx8ICJib3RoIiwNCgkJb3JpZ2luID0gb3B0aW9ucy5vcmlnaW4gfHwgWyAibWlkZGxlIiwgImNlbnRlciIgXSwNCgkJcG9zaXRpb24gPSBlbGVtZW50LmNzcyggInBvc2l0aW9uIiApLA0KCQlwb3MgPSBlbGVtZW50LnBvc2l0aW9uKCksDQoJCW9yaWdpbmFsID0gJC5lZmZlY3RzLnNjYWxlZERpbWVuc2lvbnMoIGVsZW1lbnQgKSwNCgkJZnJvbSA9IG9wdGlvbnMuZnJvbSB8fCBvcmlnaW5hbCwNCgkJdG8gPSBvcHRpb25zLnRvIHx8ICQuZWZmZWN0cy5zY2FsZWREaW1lbnNpb25zKCBlbGVtZW50LCAwICk7DQoNCgkkLmVmZmVjdHMuY3JlYXRlUGxhY2Vob2xkZXIoIGVsZW1lbnQgKTsNCg0KCWlmICggbW9kZSA9PT0gInNob3ciICkgew0KCQl0ZW1wID0gZnJvbTsNCgkJZnJvbSA9IHRvOw0KCQl0byA9IHRlbXA7DQoJfQ0KDQoJLy8gU2V0IHNjYWxpbmcgZmFjdG9yDQoJZmFjdG9yID0gew0KCQlmcm9tOiB7DQoJCQl5OiBmcm9tLmhlaWdodCAvIG9yaWdpbmFsLmhlaWdodCwNCgkJCXg6IGZyb20ud2lkdGggLyBvcmlnaW5hbC53aWR0aA0KCQl9LA0KCQl0bzogew0KCQkJeTogdG8uaGVpZ2h0IC8gb3JpZ2luYWwuaGVpZ2h0LA0KCQkJeDogdG8ud2lkdGggLyBvcmlnaW5hbC53aWR0aA0KCQl9DQoJfTsNCg0KCS8vIFNjYWxlIHRoZSBjc3MgYm94DQoJaWYgKCBzY2FsZSA9PT0gImJveCIgfHwgc2NhbGUgPT09ICJib3RoIiApIHsNCg0KCQkvLyBWZXJ0aWNhbCBwcm9wcyBzY2FsaW5nDQoJCWlmICggZmFjdG9yLmZyb20ueSAhPT0gZmFjdG9yLnRvLnkgKSB7DQoJCQlmcm9tID0gJC5lZmZlY3RzLnNldFRyYW5zaXRpb24oIGVsZW1lbnQsIHZQcm9wcywgZmFjdG9yLmZyb20ueSwgZnJvbSApOw0KCQkJdG8gPSAkLmVmZmVjdHMuc2V0VHJhbnNpdGlvbiggZWxlbWVudCwgdlByb3BzLCBmYWN0b3IudG8ueSwgdG8gKTsNCgkJfQ0KDQoJCS8vIEhvcml6b250YWwgcHJvcHMgc2NhbGluZw0KCQlpZiAoIGZhY3Rvci5mcm9tLnggIT09IGZhY3Rvci50by54ICkgew0KCQkJZnJvbSA9ICQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKCBlbGVtZW50LCBoUHJvcHMsIGZhY3Rvci5mcm9tLngsIGZyb20gKTsNCgkJCXRvID0gJC5lZmZlY3RzLnNldFRyYW5zaXRpb24oIGVsZW1lbnQsIGhQcm9wcywgZmFjdG9yLnRvLngsIHRvICk7DQoJCX0NCgl9DQoNCgkvLyBTY2FsZSB0aGUgY29udGVudA0KCWlmICggc2NhbGUgPT09ICJjb250ZW50IiB8fCBzY2FsZSA9PT0gImJvdGgiICkgew0KDQoJCS8vIFZlcnRpY2FsIHByb3BzIHNjYWxpbmcNCgkJaWYgKCBmYWN0b3IuZnJvbS55ICE9PSBmYWN0b3IudG8ueSApIHsNCgkJCWZyb20gPSAkLmVmZmVjdHMuc2V0VHJhbnNpdGlvbiggZWxlbWVudCwgY1Byb3BzLCBmYWN0b3IuZnJvbS55LCBmcm9tICk7DQoJCQl0byA9ICQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKCBlbGVtZW50LCBjUHJvcHMsIGZhY3Rvci50by55LCB0byApOw0KCQl9DQoJfQ0KDQoJLy8gQWRqdXN0IHRoZSBwb3NpdGlvbiBwcm9wZXJ0aWVzIGJhc2VkIG9uIHRoZSBwcm92aWRlZCBvcmlnaW4gcG9pbnRzDQoJaWYgKCBvcmlnaW4gKSB7DQoJCWJhc2VsaW5lID0gJC5lZmZlY3RzLmdldEJhc2VsaW5lKCBvcmlnaW4sIG9yaWdpbmFsICk7DQoJCWZyb20udG9wID0gKCBvcmlnaW5hbC5vdXRlckhlaWdodCAtIGZyb20ub3V0ZXJIZWlnaHQgKSAqIGJhc2VsaW5lLnkgKyBwb3MudG9wOw0KCQlmcm9tLmxlZnQgPSAoIG9yaWdpbmFsLm91dGVyV2lkdGggLSBmcm9tLm91dGVyV2lkdGggKSAqIGJhc2VsaW5lLnggKyBwb3MubGVmdDsNCgkJdG8udG9wID0gKCBvcmlnaW5hbC5vdXRlckhlaWdodCAtIHRvLm91dGVySGVpZ2h0ICkgKiBiYXNlbGluZS55ICsgcG9zLnRvcDsNCgkJdG8ubGVmdCA9ICggb3JpZ2luYWwub3V0ZXJXaWR0aCAtIHRvLm91dGVyV2lkdGggKSAqIGJhc2VsaW5lLnggKyBwb3MubGVmdDsNCgl9DQoJZWxlbWVudC5jc3MoIGZyb20gKTsNCg0KCS8vIEFuaW1hdGUgdGhlIGNoaWxkcmVuIGlmIGRlc2lyZWQNCglpZiAoIHNjYWxlID09PSAiY29udGVudCIgfHwgc2NhbGUgPT09ICJib3RoIiApIHsNCg0KCQl2UHJvcHMgPSB2UHJvcHMuY29uY2F0KCBbICJtYXJnaW5Ub3AiLCAibWFyZ2luQm90dG9tIiBdICkuY29uY2F0KCBjUHJvcHMgKTsNCgkJaFByb3BzID0gaFByb3BzLmNvbmNhdCggWyAibWFyZ2luTGVmdCIsICJtYXJnaW5SaWdodCIgXSApOw0KDQoJCS8vIE9ubHkgYW5pbWF0ZSBjaGlsZHJlbiB3aXRoIHdpZHRoIGF0dHJpYnV0ZXMgc3BlY2lmaWVkDQoJCS8vIFRPRE86IGlzIHRoaXMgcmlnaHQ\/IHNob3VsZCB3ZSBpbmNsdWRlIGFueXRoaW5nIHdpdGggY3NzIHdpZHRoIHNwZWNpZmllZCBhcyB3ZWxsDQoJCWVsZW1lbnQuZmluZCggIipbd2lkdGhdIiApLmVhY2goIGZ1bmN0aW9uKCkgew0KCQkJdmFyIGNoaWxkID0gJCggdGhpcyApLA0KCQkJCWNoaWxkT3JpZ2luYWwgPSAkLmVmZmVjdHMuc2NhbGVkRGltZW5zaW9ucyggY2hpbGQgKSwNCgkJCQljaGlsZEZyb20gPSB7DQoJCQkJCWhlaWdodDogY2hpbGRPcmlnaW5hbC5oZWlnaHQgKiBmYWN0b3IuZnJvbS55LA0KCQkJCQl3aWR0aDogY2hpbGRPcmlnaW5hbC53aWR0aCAqIGZhY3Rvci5mcm9tLngsDQoJCQkJCW91dGVySGVpZ2h0OiBjaGlsZE9yaWdpbmFsLm91dGVySGVpZ2h0ICogZmFjdG9yLmZyb20ueSwNCgkJCQkJb3V0ZXJXaWR0aDogY2hpbGRPcmlnaW5hbC5vdXRlcldpZHRoICogZmFjdG9yLmZyb20ueA0KCQkJCX0sDQoJCQkJY2hpbGRUbyA9IHsNCgkJCQkJaGVpZ2h0OiBjaGlsZE9yaWdpbmFsLmhlaWdodCAqIGZhY3Rvci50by55LA0KCQkJCQl3aWR0aDogY2hpbGRPcmlnaW5hbC53aWR0aCAqIGZhY3Rvci50by54LA0KCQkJCQlvdXRlckhlaWdodDogY2hpbGRPcmlnaW5hbC5oZWlnaHQgKiBmYWN0b3IudG8ueSwNCgkJCQkJb3V0ZXJXaWR0aDogY2hpbGRPcmlnaW5hbC53aWR0aCAqIGZhY3Rvci50by54DQoJCQkJfTsNCg0KCQkJLy8gVmVydGljYWwgcHJvcHMgc2NhbGluZw0KCQkJaWYgKCBmYWN0b3IuZnJvbS55ICE9PSBmYWN0b3IudG8ueSApIHsNCgkJCQljaGlsZEZyb20gPSAkLmVmZmVjdHMuc2V0VHJhbnNpdGlvbiggY2hpbGQsIHZQcm9wcywgZmFjdG9yLmZyb20ueSwgY2hpbGRGcm9tICk7DQoJCQkJY2hpbGRUbyA9ICQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKCBjaGlsZCwgdlByb3BzLCBmYWN0b3IudG8ueSwgY2hpbGRUbyApOw0KCQkJfQ0KDQoJCQkvLyBIb3Jpem9udGFsIHByb3BzIHNjYWxpbmcNCgkJCWlmICggZmFjdG9yLmZyb20ueCAhPT0gZmFjdG9yLnRvLnggKSB7DQoJCQkJY2hpbGRGcm9tID0gJC5lZmZlY3RzLnNldFRyYW5zaXRpb24oIGNoaWxkLCBoUHJvcHMsIGZhY3Rvci5mcm9tLngsIGNoaWxkRnJvbSApOw0KCQkJCWNoaWxkVG8gPSAkLmVmZmVjdHMuc2V0VHJhbnNpdGlvbiggY2hpbGQsIGhQcm9wcywgZmFjdG9yLnRvLngsIGNoaWxkVG8gKTsNCgkJCX0NCg0KCQkJaWYgKCByZXN0b3JlICkgew0KCQkJCSQuZWZmZWN0cy5zYXZlU3R5bGUoIGNoaWxkICk7DQoJCQl9DQoNCgkJCS8vIEFuaW1hdGUgY2hpbGRyZW4NCgkJCWNoaWxkLmNzcyggY2hpbGRGcm9tICk7DQoJCQljaGlsZC5hbmltYXRlKCBjaGlsZFRvLCBvcHRpb25zLmR1cmF0aW9uLCBvcHRpb25zLmVhc2luZywgZnVuY3Rpb24oKSB7DQoNCgkJCQkvLyBSZXN0b3JlIGNoaWxkcmVuDQoJCQkJaWYgKCByZXN0b3JlICkgew0KCQkJCQkkLmVmZmVjdHMucmVzdG9yZVN0eWxlKCBjaGlsZCApOw0KCQkJCX0NCgkJCX0gKTsNCgkJfSApOw0KCX0NCg0KCS8vIEFuaW1hdGUNCgllbGVtZW50LmFuaW1hdGUoIHRvLCB7DQoJCXF1ZXVlOiBmYWxzZSwNCgkJZHVyYXRpb246IG9wdGlvbnMuZHVyYXRpb24sDQoJCWVhc2luZzogb3B0aW9ucy5lYXNpbmcsDQoJCWNvbXBsZXRlOiBmdW5jdGlvbigpIHsNCg0KCQkJdmFyIG9mZnNldCA9IGVsZW1lbnQub2Zmc2V0KCk7DQoNCgkJCWlmICggdG8ub3BhY2l0eSA9PT0gMCApIHsNCgkJCQllbGVtZW50LmNzcyggIm9wYWNpdHkiLCBmcm9tLm9wYWNpdHkgKTsNCgkJCX0NCg0KCQkJaWYgKCAhcmVzdG9yZSApIHsNCgkJCQllbGVtZW50DQoJCQkJCS5jc3MoICJwb3NpdGlvbiIsIHBvc2l0aW9uID09PSAic3RhdGljIiA\/ICJyZWxhdGl2ZSIgOiBwb3NpdGlvbiApDQoJCQkJCS5vZmZzZXQoIG9mZnNldCApOw0KDQoJCQkJLy8gTmVlZCB0byBzYXZlIHN0eWxlIGhlcmUgc28gdGhhdCBhdXRvbWF0aWMgc3R5bGUgcmVzdG9yYXRpb24NCgkJCQkvLyBkb2Vzbid0IHJlc3RvcmUgdG8gdGhlIG9yaWdpbmFsIHN0eWxlcyBmcm9tIGJlZm9yZSB0aGUgYW5pbWF0aW9uLg0KCQkJCSQuZWZmZWN0cy5zYXZlU3R5bGUoIGVsZW1lbnQgKTsNCgkJCX0NCg0KCQkJZG9uZSgpOw0KCQl9DQoJfSApOw0KDQp9ICk7DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgRWZmZWN0cyBTY2FsZSAxLjEyLjENCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICovDQoNCi8vPj5sYWJlbDogU2NhbGUgRWZmZWN0DQovLz4+Z3JvdXA6IEVmZmVjdHMNCi8vPj5kZXNjcmlwdGlvbjogR3Jvd3Mgb3Igc2hyaW5rcyBhbiBlbGVtZW50IGFuZCBpdHMgY29udGVudC4NCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9zY2FsZS1lZmZlY3QvDQovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vZWZmZWN0Lw0KDQoNCg0KdmFyIGVmZmVjdHNFZmZlY3RTY2FsZSA9ICQuZWZmZWN0cy5kZWZpbmUoICJzY2FsZSIsIGZ1bmN0aW9uKCBvcHRpb25zLCBkb25lICkgew0KDQoJLy8gQ3JlYXRlIGVsZW1lbnQNCgl2YXIgZWwgPSAkKCB0aGlzICksDQoJCW1vZGUgPSBvcHRpb25zLm1vZGUsDQoJCXBlcmNlbnQgPSBwYXJzZUludCggb3B0aW9ucy5wZXJjZW50LCAxMCApIHx8DQoJCQkoIHBhcnNlSW50KCBvcHRpb25zLnBlcmNlbnQsIDEwICkgPT09IDAgPyAwIDogKCBtb2RlICE9PSAiZWZmZWN0IiA\/IDAgOiAxMDAgKSApLA0KDQoJCW5ld09wdGlvbnMgPSAkLmV4dGVuZCggdHJ1ZSwgew0KCQkJZnJvbTogJC5lZmZlY3RzLnNjYWxlZERpbWVuc2lvbnMoIGVsICksDQoJCQl0bzogJC5lZmZlY3RzLnNjYWxlZERpbWVuc2lvbnMoIGVsLCBwZXJjZW50LCBvcHRpb25zLmRpcmVjdGlvbiB8fCAiYm90aCIgKSwNCgkJCW9yaWdpbjogb3B0aW9ucy5vcmlnaW4gfHwgWyAibWlkZGxlIiwgImNlbnRlciIgXQ0KCQl9LCBvcHRpb25zICk7DQoNCgkvLyBGYWRlIG9wdGlvbiB0byBzdXBwb3J0IHB1ZmYNCglpZiAoIG9wdGlvbnMuZmFkZSApIHsNCgkJbmV3T3B0aW9ucy5mcm9tLm9wYWNpdHkgPSAxOw0KCQluZXdPcHRpb25zLnRvLm9wYWNpdHkgPSAwOw0KCX0NCg0KCSQuZWZmZWN0cy5lZmZlY3Quc2l6ZS5jYWxsKCB0aGlzLCBuZXdPcHRpb25zLCBkb25lICk7DQp9ICk7DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgRWZmZWN0cyBQdWZmIDEuMTIuMQ0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKi8NCg0KLy8+PmxhYmVsOiBQdWZmIEVmZmVjdA0KLy8+Pmdyb3VwOiBFZmZlY3RzDQovLz4+ZGVzY3JpcHRpb246IENyZWF0ZXMgYSBwdWZmIGVmZmVjdCBieSBzY2FsaW5nIHRoZSBlbGVtZW50IHVwIGFuZCBoaWRpbmcgaXQgYXQgdGhlIHNhbWUgdGltZS4NCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9wdWZmLWVmZmVjdC8NCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9lZmZlY3QvDQoNCg0KDQp2YXIgZWZmZWN0c0VmZmVjdFB1ZmYgPSAkLmVmZmVjdHMuZGVmaW5lKCAicHVmZiIsICJoaWRlIiwgZnVuY3Rpb24oIG9wdGlvbnMsIGRvbmUgKSB7DQoJdmFyIG5ld09wdGlvbnMgPSAkLmV4dGVuZCggdHJ1ZSwge30sIG9wdGlvbnMsIHsNCgkJZmFkZTogdHJ1ZSwNCgkJcGVyY2VudDogcGFyc2VJbnQoIG9wdGlvbnMucGVyY2VudCwgMTAgKSB8fCAxNTANCgl9ICk7DQoNCgkkLmVmZmVjdHMuZWZmZWN0LnNjYWxlLmNhbGwoIHRoaXMsIG5ld09wdGlvbnMsIGRvbmUgKTsNCn0gKTsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBFZmZlY3RzIFB1bHNhdGUgMS4xMi4xDQogKiBodHRwOi8vanF1ZXJ5dWkuY29tDQogKg0KICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqLw0KDQovLz4+bGFiZWw6IFB1bHNhdGUgRWZmZWN0DQovLz4+Z3JvdXA6IEVmZmVjdHMNCi8vPj5kZXNjcmlwdGlvbjogUHVsc2F0ZXMgYW4gZWxlbWVudCBuIHRpbWVzIGJ5IGNoYW5naW5nIHRoZSBvcGFjaXR5IHRvIHplcm8gYW5kIGJhY2suDQovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vcHVsc2F0ZS1lZmZlY3QvDQovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vZWZmZWN0Lw0KDQoNCg0KdmFyIGVmZmVjdHNFZmZlY3RQdWxzYXRlID0gJC5lZmZlY3RzLmRlZmluZSggInB1bHNhdGUiLCAic2hvdyIsIGZ1bmN0aW9uKCBvcHRpb25zLCBkb25lICkgew0KCXZhciBlbGVtZW50ID0gJCggdGhpcyApLA0KCQltb2RlID0gb3B0aW9ucy5tb2RlLA0KCQlzaG93ID0gbW9kZSA9PT0gInNob3ciLA0KCQloaWRlID0gbW9kZSA9PT0gImhpZGUiLA0KCQlzaG93aGlkZSA9IHNob3cgfHwgaGlkZSwNCg0KCQkvLyBTaG93aW5nIG9yIGhpZGluZyBsZWF2ZXMgb2ZmIHRoZSAibGFzdCIgYW5pbWF0aW9uDQoJCWFuaW1zID0gKCAoIG9wdGlvbnMudGltZXMgfHwgNSApICogMiApICsgKCBzaG93aGlkZSA\/IDEgOiAwICksDQoJCWR1cmF0aW9uID0gb3B0aW9ucy5kdXJhdGlvbiAvIGFuaW1zLA0KCQlhbmltYXRlVG8gPSAwLA0KCQlpID0gMSwNCgkJcXVldWVsZW4gPSBlbGVtZW50LnF1ZXVlKCkubGVuZ3RoOw0KDQoJaWYgKCBzaG93IHx8ICFlbGVtZW50LmlzKCAiOnZpc2libGUiICkgKSB7DQoJCWVsZW1lbnQuY3NzKCAib3BhY2l0eSIsIDAgKS5zaG93KCk7DQoJCWFuaW1hdGVUbyA9IDE7DQoJfQ0KDQoJLy8gQW5pbXMgLSAxIG9wYWNpdHkgInRvZ2dsZXMiDQoJZm9yICggOyBpIDwgYW5pbXM7IGkrKyApIHsNCgkJZWxlbWVudC5hbmltYXRlKCB7IG9wYWNpdHk6IGFuaW1hdGVUbyB9LCBkdXJhdGlvbiwgb3B0aW9ucy5lYXNpbmcgKTsNCgkJYW5pbWF0ZVRvID0gMSAtIGFuaW1hdGVUbzsNCgl9DQoNCgllbGVtZW50LmFuaW1hdGUoIHsgb3BhY2l0eTogYW5pbWF0ZVRvIH0sIGR1cmF0aW9uLCBvcHRpb25zLmVhc2luZyApOw0KDQoJZWxlbWVudC5xdWV1ZSggZG9uZSApOw0KDQoJJC5lZmZlY3RzLnVuc2hpZnQoIGVsZW1lbnQsIHF1ZXVlbGVuLCBhbmltcyArIDEgKTsNCn0gKTsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBFZmZlY3RzIFNoYWtlIDEuMTIuMQ0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKi8NCg0KLy8+PmxhYmVsOiBTaGFrZSBFZmZlY3QNCi8vPj5ncm91cDogRWZmZWN0cw0KLy8+PmRlc2NyaXB0aW9uOiBTaGFrZXMgYW4gZWxlbWVudCBob3Jpem9udGFsbHkgb3IgdmVydGljYWxseSBuIHRpbWVzLg0KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3NoYWtlLWVmZmVjdC8NCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9lZmZlY3QvDQoNCg0KDQp2YXIgZWZmZWN0c0VmZmVjdFNoYWtlID0gJC5lZmZlY3RzLmRlZmluZSggInNoYWtlIiwgZnVuY3Rpb24oIG9wdGlvbnMsIGRvbmUgKSB7DQoNCgl2YXIgaSA9IDEsDQoJCWVsZW1lbnQgPSAkKCB0aGlzICksDQoJCWRpcmVjdGlvbiA9IG9wdGlvbnMuZGlyZWN0aW9uIHx8ICJsZWZ0IiwNCgkJZGlzdGFuY2UgPSBvcHRpb25zLmRpc3RhbmNlIHx8IDIwLA0KCQl0aW1lcyA9IG9wdGlvbnMudGltZXMgfHwgMywNCgkJYW5pbXMgPSB0aW1lcyAqIDIgKyAxLA0KCQlzcGVlZCA9IE1hdGgucm91bmQoIG9wdGlvbnMuZHVyYXRpb24gLyBhbmltcyApLA0KCQlyZWYgPSAoIGRpcmVjdGlvbiA9PT0gInVwIiB8fCBkaXJlY3Rpb24gPT09ICJkb3duIiApID8gInRvcCIgOiAibGVmdCIsDQoJCXBvc2l0aXZlTW90aW9uID0gKCBkaXJlY3Rpb24gPT09ICJ1cCIgfHwgZGlyZWN0aW9uID09PSAibGVmdCIgKSwNCgkJYW5pbWF0aW9uID0ge30sDQoJCWFuaW1hdGlvbjEgPSB7fSwNCgkJYW5pbWF0aW9uMiA9IHt9LA0KDQoJCXF1ZXVlbGVuID0gZWxlbWVudC5xdWV1ZSgpLmxlbmd0aDsNCg0KCSQuZWZmZWN0cy5jcmVhdGVQbGFjZWhvbGRlciggZWxlbWVudCApOw0KDQoJLy8gQW5pbWF0aW9uDQoJYW5pbWF0aW9uWyByZWYgXSA9ICggcG9zaXRpdmVNb3Rpb24gPyAiLT0iIDogIis9IiApICsgZGlzdGFuY2U7DQoJYW5pbWF0aW9uMVsgcmVmIF0gPSAoIHBvc2l0aXZlTW90aW9uID8gIis9IiA6ICItPSIgKSArIGRpc3RhbmNlICogMjsNCglhbmltYXRpb24yWyByZWYgXSA9ICggcG9zaXRpdmVNb3Rpb24gPyAiLT0iIDogIis9IiApICsgZGlzdGFuY2UgKiAyOw0KDQoJLy8gQW5pbWF0ZQ0KCWVsZW1lbnQuYW5pbWF0ZSggYW5pbWF0aW9uLCBzcGVlZCwgb3B0aW9ucy5lYXNpbmcgKTsNCg0KCS8vIFNoYWtlcw0KCWZvciAoIDsgaSA8IHRpbWVzOyBpKysgKSB7DQoJCWVsZW1lbnQNCgkJCS5hbmltYXRlKCBhbmltYXRpb24xLCBzcGVlZCwgb3B0aW9ucy5lYXNpbmcgKQ0KCQkJLmFuaW1hdGUoIGFuaW1hdGlvbjIsIHNwZWVkLCBvcHRpb25zLmVhc2luZyApOw0KCX0NCg0KCWVsZW1lbnQNCgkJLmFuaW1hdGUoIGFuaW1hdGlvbjEsIHNwZWVkLCBvcHRpb25zLmVhc2luZyApDQoJCS5hbmltYXRlKCBhbmltYXRpb24sIHNwZWVkIC8gMiwgb3B0aW9ucy5lYXNpbmcgKQ0KCQkucXVldWUoIGRvbmUgKTsNCg0KCSQuZWZmZWN0cy51bnNoaWZ0KCBlbGVtZW50LCBxdWV1ZWxlbiwgYW5pbXMgKyAxICk7DQp9ICk7DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgRWZmZWN0cyBTbGlkZSAxLjEyLjENCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICovDQoNCi8vPj5sYWJlbDogU2xpZGUgRWZmZWN0DQovLz4+Z3JvdXA6IEVmZmVjdHMNCi8vPj5kZXNjcmlwdGlvbjogU2xpZGVzIGFuIGVsZW1lbnQgaW4gYW5kIG91dCBvZiB0aGUgdmlld3BvcnQuDQovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vc2xpZGUtZWZmZWN0Lw0KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL2VmZmVjdC8NCg0KDQoNCnZhciBlZmZlY3RzRWZmZWN0U2xpZGUgPSAkLmVmZmVjdHMuZGVmaW5lKCAic2xpZGUiLCAic2hvdyIsIGZ1bmN0aW9uKCBvcHRpb25zLCBkb25lICkgew0KCXZhciBzdGFydENsaXAsIHN0YXJ0UmVmLA0KCQllbGVtZW50ID0gJCggdGhpcyApLA0KCQltYXAgPSB7DQoJCQl1cDogWyAiYm90dG9tIiwgInRvcCIgXSwNCgkJCWRvd246IFsgInRvcCIsICJib3R0b20iIF0sDQoJCQlsZWZ0OiBbICJyaWdodCIsICJsZWZ0IiBdLA0KCQkJcmlnaHQ6IFsgImxlZnQiLCAicmlnaHQiIF0NCgkJfSwNCgkJbW9kZSA9IG9wdGlvbnMubW9kZSwNCgkJZGlyZWN0aW9uID0gb3B0aW9ucy5kaXJlY3Rpb24gfHwgImxlZnQiLA0KCQlyZWYgPSAoIGRpcmVjdGlvbiA9PT0gInVwIiB8fCBkaXJlY3Rpb24gPT09ICJkb3duIiApID8gInRvcCIgOiAibGVmdCIsDQoJCXBvc2l0aXZlTW90aW9uID0gKCBkaXJlY3Rpb24gPT09ICJ1cCIgfHwgZGlyZWN0aW9uID09PSAibGVmdCIgKSwNCgkJZGlzdGFuY2UgPSBvcHRpb25zLmRpc3RhbmNlIHx8DQoJCQllbGVtZW50WyByZWYgPT09ICJ0b3AiID8gIm91dGVySGVpZ2h0IiA6ICJvdXRlcldpZHRoIiBdKCB0cnVlICksDQoJCWFuaW1hdGlvbiA9IHt9Ow0KDQoJJC5lZmZlY3RzLmNyZWF0ZVBsYWNlaG9sZGVyKCBlbGVtZW50ICk7DQoNCglzdGFydENsaXAgPSBlbGVtZW50LmNzc0NsaXAoKTsNCglzdGFydFJlZiA9IGVsZW1lbnQucG9zaXRpb24oKVsgcmVmIF07DQoNCgkvLyBEZWZpbmUgaGlkZSBhbmltYXRpb24NCglhbmltYXRpb25bIHJlZiBdID0gKCBwb3NpdGl2ZU1vdGlvbiA\/IC0xIDogMSApICogZGlzdGFuY2UgKyBzdGFydFJlZjsNCglhbmltYXRpb24uY2xpcCA9IGVsZW1lbnQuY3NzQ2xpcCgpOw0KCWFuaW1hdGlvbi5jbGlwWyBtYXBbIGRpcmVjdGlvbiBdWyAxIF0gXSA9IGFuaW1hdGlvbi5jbGlwWyBtYXBbIGRpcmVjdGlvbiBdWyAwIF0gXTsNCg0KCS8vIFJldmVyc2UgdGhlIGFuaW1hdGlvbiBpZiB3ZSdyZSBzaG93aW5nDQoJaWYgKCBtb2RlID09PSAic2hvdyIgKSB7DQoJCWVsZW1lbnQuY3NzQ2xpcCggYW5pbWF0aW9uLmNsaXAgKTsNCgkJZWxlbWVudC5jc3MoIHJlZiwgYW5pbWF0aW9uWyByZWYgXSApOw0KCQlhbmltYXRpb24uY2xpcCA9IHN0YXJ0Q2xpcDsNCgkJYW5pbWF0aW9uWyByZWYgXSA9IHN0YXJ0UmVmOw0KCX0NCg0KCS8vIEFjdHVhbGx5IGFuaW1hdGUNCgllbGVtZW50LmFuaW1hdGUoIGFuaW1hdGlvbiwgew0KCQlxdWV1ZTogZmFsc2UsDQoJCWR1cmF0aW9uOiBvcHRpb25zLmR1cmF0aW9uLA0KCQllYXNpbmc6IG9wdGlvbnMuZWFzaW5nLA0KCQljb21wbGV0ZTogZG9uZQ0KCX0gKTsNCn0gKTsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBFZmZlY3RzIFRyYW5zZmVyIDEuMTIuMQ0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKi8NCg0KLy8+PmxhYmVsOiBUcmFuc2ZlciBFZmZlY3QNCi8vPj5ncm91cDogRWZmZWN0cw0KLy8+PmRlc2NyaXB0aW9uOiBEaXNwbGF5cyBhIHRyYW5zZmVyIGVmZmVjdCBmcm9tIG9uZSBlbGVtZW50IHRvIGFub3RoZXIuDQovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vdHJhbnNmZXItZWZmZWN0Lw0KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL2VmZmVjdC8NCg0KDQoNCnZhciBlZmZlY3Q7DQppZiAoICQudWlCYWNrQ29tcGF0ICE9PSBmYWxzZSApIHsNCgllZmZlY3QgPSAkLmVmZmVjdHMuZGVmaW5lKCAidHJhbnNmZXIiLCBmdW5jdGlvbiggb3B0aW9ucywgZG9uZSApIHsNCgkJJCggdGhpcyApLnRyYW5zZmVyKCBvcHRpb25zLCBkb25lICk7DQoJfSApOw0KfQ0KdmFyIGVmZmVjdHNFZmZlY3RUcmFuc2ZlciA9IGVmZmVjdDsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBGb2N1c2FibGUgMS4xMi4xDQogKiBodHRwOi8vanF1ZXJ5dWkuY29tDQogKg0KICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqLw0KDQovLz4+bGFiZWw6IDpmb2N1c2FibGUgU2VsZWN0b3INCi8vPj5ncm91cDogQ29yZQ0KLy8+PmRlc2NyaXB0aW9uOiBTZWxlY3RzIGVsZW1lbnRzIHdoaWNoIGNhbiBiZSBmb2N1c2VkLg0KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2ZvY3VzYWJsZS1zZWxlY3Rvci8NCg0KDQoNCi8vIFNlbGVjdG9ycw0KJC51aS5mb2N1c2FibGUgPSBmdW5jdGlvbiggZWxlbWVudCwgaGFzVGFiaW5kZXggKSB7DQoJdmFyIG1hcCwgbWFwTmFtZSwgaW1nLCBmb2N1c2FibGVJZlZpc2libGUsIGZpZWxkc2V0LA0KCQlub2RlTmFtZSA9IGVsZW1lbnQubm9kZU5hbWUudG9Mb3dlckNhc2UoKTsNCg0KCWlmICggImFyZWEiID09PSBub2RlTmFtZSApIHsNCgkJbWFwID0gZWxlbWVudC5wYXJlbnROb2RlOw0KCQltYXBOYW1lID0gbWFwLm5hbWU7DQoJCWlmICggIWVsZW1lbnQuaHJlZiB8fCAhbWFwTmFtZSB8fCBtYXAubm9kZU5hbWUudG9Mb3dlckNhc2UoKSAhPT0gIm1hcCIgKSB7DQoJCQlyZXR1cm4gZmFsc2U7DQoJCX0NCgkJaW1nID0gJCggImltZ1t1c2VtYXA9JyMiICsgbWFwTmFtZSArICInXSIgKTsNCgkJcmV0dXJuIGltZy5sZW5ndGggPiAwICYmIGltZy5pcyggIjp2aXNpYmxlIiApOw0KCX0NCg0KCWlmICggL14oaW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbnxvYmplY3QpJC8udGVzdCggbm9kZU5hbWUgKSApIHsNCgkJZm9jdXNhYmxlSWZWaXNpYmxlID0gIWVsZW1lbnQuZGlzYWJsZWQ7DQoNCgkJaWYgKCBmb2N1c2FibGVJZlZpc2libGUgKSB7DQoNCgkJCS8vIEZvcm0gY29udHJvbHMgd2l0aGluIGEgZGlzYWJsZWQgZmllbGRzZXQgYXJlIGRpc2FibGVkLg0KCQkJLy8gSG93ZXZlciwgY29udHJvbHMgd2l0aGluIHRoZSBmaWVsZHNldCdzIGxlZ2VuZCBkbyBub3QgZ2V0IGRpc2FibGVkLg0KCQkJLy8gU2luY2UgY29udHJvbHMgZ2VuZXJhbGx5IGFyZW4ndCBwbGFjZWQgaW5zaWRlIGxlZ2VuZHMsIHdlIHNraXANCgkJCS8vIHRoaXMgcG9ydGlvbiBvZiB0aGUgY2hlY2suDQoJCQlmaWVsZHNldCA9ICQoIGVsZW1lbnQgKS5jbG9zZXN0KCAiZmllbGRzZXQiIClbIDAgXTsNCgkJCWlmICggZmllbGRzZXQgKSB7DQoJCQkJZm9jdXNhYmxlSWZWaXNpYmxlID0gIWZpZWxkc2V0LmRpc2FibGVkOw0KCQkJfQ0KCQl9DQoJfSBlbHNlIGlmICggImEiID09PSBub2RlTmFtZSApIHsNCgkJZm9jdXNhYmxlSWZWaXNpYmxlID0gZWxlbWVudC5ocmVmIHx8IGhhc1RhYmluZGV4Ow0KCX0gZWxzZSB7DQoJCWZvY3VzYWJsZUlmVmlzaWJsZSA9IGhhc1RhYmluZGV4Ow0KCX0NCg0KCXJldHVybiBmb2N1c2FibGVJZlZpc2libGUgJiYgJCggZWxlbWVudCApLmlzKCAiOnZpc2libGUiICkgJiYgdmlzaWJsZSggJCggZWxlbWVudCApICk7DQp9Ow0KDQovLyBTdXBwb3J0OiBJRSA4IG9ubHkNCi8vIElFIDggZG9lc24ndCByZXNvbHZlIGluaGVyaXQgdG8gdmlzaWJsZS9oaWRkZW4gZm9yIGNvbXB1dGVkIHZhbHVlcw0KZnVuY3Rpb24gdmlzaWJsZSggZWxlbWVudCApIHsNCgl2YXIgdmlzaWJpbGl0eSA9IGVsZW1lbnQuY3NzKCAidmlzaWJpbGl0eSIgKTsNCgl3aGlsZSAoIHZpc2liaWxpdHkgPT09ICJpbmhlcml0IiApIHsNCgkJZWxlbWVudCA9IGVsZW1lbnQucGFyZW50KCk7DQoJCXZpc2liaWxpdHkgPSBlbGVtZW50LmNzcyggInZpc2liaWxpdHkiICk7DQoJfQ0KCXJldHVybiB2aXNpYmlsaXR5ICE9PSAiaGlkZGVuIjsNCn0NCg0KJC5leHRlbmQoICQuZXhwclsgIjoiIF0sIHsNCglmb2N1c2FibGU6IGZ1bmN0aW9uKCBlbGVtZW50ICkgew0KCQlyZXR1cm4gJC51aS5mb2N1c2FibGUoIGVsZW1lbnQsICQuYXR0ciggZWxlbWVudCwgInRhYmluZGV4IiApICE9IG51bGwgKTsNCgl9DQp9ICk7DQoNCnZhciBmb2N1c2FibGUgPSAkLnVpLmZvY3VzYWJsZTsNCg0KDQoNCg0KLy8gU3VwcG9ydDogSUU4IE9ubHkNCi8vIElFOCBkb2VzIG5vdCBzdXBwb3J0IHRoZSBmb3JtIGF0dHJpYnV0ZSBhbmQgd2hlbiBpdCBpcyBzdXBwbGllZC4gSXQgb3ZlcndyaXRlcyB0aGUgZm9ybSBwcm9wDQovLyB3aXRoIGEgc3RyaW5nLCBzbyB3ZSBuZWVkIHRvIGZpbmQgdGhlIHByb3BlciBmb3JtLg0KdmFyIGZvcm0gPSAkLmZuLmZvcm0gPSBmdW5jdGlvbigpIHsNCglyZXR1cm4gdHlwZW9mIHRoaXNbIDAgXS5mb3JtID09PSAic3RyaW5nIiA\/IHRoaXMuY2xvc2VzdCggImZvcm0iICkgOiAkKCB0aGlzWyAwIF0uZm9ybSApOw0KfTsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBGb3JtIFJlc2V0IE1peGluIDEuMTIuMQ0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKi8NCg0KLy8+PmxhYmVsOiBGb3JtIFJlc2V0IE1peGluDQovLz4+Z3JvdXA6IENvcmUNCi8vPj5kZXNjcmlwdGlvbjogUmVmcmVzaCBpbnB1dCB3aWRnZXRzIHdoZW4gdGhlaXIgZm9ybSBpcyByZXNldA0KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2Zvcm0tcmVzZXQtbWl4aW4vDQoNCg0KDQp2YXIgZm9ybVJlc2V0TWl4aW4gPSAkLnVpLmZvcm1SZXNldE1peGluID0gew0KCV9mb3JtUmVzZXRIYW5kbGVyOiBmdW5jdGlvbigpIHsNCgkJdmFyIGZvcm0gPSAkKCB0aGlzICk7DQoNCgkJLy8gV2FpdCBmb3IgdGhlIGZvcm0gcmVzZXQgdG8gYWN0dWFsbHkgaGFwcGVuIGJlZm9yZSByZWZyZXNoaW5nDQoJCXNldFRpbWVvdXQoIGZ1bmN0aW9uKCkgew0KCQkJdmFyIGluc3RhbmNlcyA9IGZvcm0uZGF0YSggInVpLWZvcm0tcmVzZXQtaW5zdGFuY2VzIiApOw0KCQkJJC5lYWNoKCBpbnN0YW5jZXMsIGZ1bmN0aW9uKCkgew0KCQkJCXRoaXMucmVmcmVzaCgpOw0KCQkJfSApOw0KCQl9ICk7DQoJfSwNCg0KCV9iaW5kRm9ybVJlc2V0SGFuZGxlcjogZnVuY3Rpb24oKSB7DQoJCXRoaXMuZm9ybSA9IHRoaXMuZWxlbWVudC5mb3JtKCk7DQoJCWlmICggIXRoaXMuZm9ybS5sZW5ndGggKSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQl2YXIgaW5zdGFuY2VzID0gdGhpcy5mb3JtLmRhdGEoICJ1aS1mb3JtLXJlc2V0LWluc3RhbmNlcyIgKSB8fCBbXTsNCgkJaWYgKCAhaW5zdGFuY2VzLmxlbmd0aCApIHsNCg0KCQkJLy8gV2UgZG9uJ3QgdXNlIF9vbigpIGhlcmUgYmVjYXVzZSB3ZSB1c2UgYSBzaW5nbGUgZXZlbnQgaGFuZGxlciBwZXIgZm9ybQ0KCQkJdGhpcy5mb3JtLm9uKCAicmVzZXQudWktZm9ybS1yZXNldCIsIHRoaXMuX2Zvcm1SZXNldEhhbmRsZXIgKTsNCgkJfQ0KCQlpbnN0YW5jZXMucHVzaCggdGhpcyApOw0KCQl0aGlzLmZvcm0uZGF0YSggInVpLWZvcm0tcmVzZXQtaW5zdGFuY2VzIiwgaW5zdGFuY2VzICk7DQoJfSwNCg0KCV91bmJpbmRGb3JtUmVzZXRIYW5kbGVyOiBmdW5jdGlvbigpIHsNCgkJaWYgKCAhdGhpcy5mb3JtLmxlbmd0aCApIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCXZhciBpbnN0YW5jZXMgPSB0aGlzLmZvcm0uZGF0YSggInVpLWZvcm0tcmVzZXQtaW5zdGFuY2VzIiApOw0KCQlpbnN0YW5jZXMuc3BsaWNlKCAkLmluQXJyYXkoIHRoaXMsIGluc3RhbmNlcyApLCAxICk7DQoJCWlmICggaW5zdGFuY2VzLmxlbmd0aCApIHsNCgkJCXRoaXMuZm9ybS5kYXRhKCAidWktZm9ybS1yZXNldC1pbnN0YW5jZXMiLCBpbnN0YW5jZXMgKTsNCgkJfSBlbHNlIHsNCgkJCXRoaXMuZm9ybQ0KCQkJCS5yZW1vdmVEYXRhKCAidWktZm9ybS1yZXNldC1pbnN0YW5jZXMiICkNCgkJCQkub2ZmKCAicmVzZXQudWktZm9ybS1yZXNldCIgKTsNCgkJfQ0KCX0NCn07DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgU3VwcG9ydCBmb3IgalF1ZXJ5IGNvcmUgMS43LnggMS4xMi4xDQogKiBodHRwOi8vanF1ZXJ5dWkuY29tDQogKg0KICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqDQogKi8NCg0KLy8+PmxhYmVsOiBqUXVlcnkgMS43IFN1cHBvcnQNCi8vPj5ncm91cDogQ29yZQ0KLy8+PmRlc2NyaXB0aW9uOiBTdXBwb3J0IHZlcnNpb24gMS43Lnggb2YgalF1ZXJ5IGNvcmUNCg0KDQoNCi8vIFN1cHBvcnQ6IGpRdWVyeSAxLjcgb25seQ0KLy8gTm90IGEgZ3JlYXQgd2F5IHRvIGNoZWNrIHZlcnNpb25zLCBidXQgc2luY2Ugd2Ugb25seSBzdXBwb3J0IDEuNysgYW5kIG9ubHkNCi8vIG5lZWQgdG8gZGV0ZWN0IDwxLjgsIHRoaXMgaXMgYSBzaW1wbGUgY2hlY2sgdGhhdCBzaG91bGQgc3VmZmljZS4gQ2hlY2tpbmcNCi8vIGZvciAiMS43LiIgd291bGQgYmUgYSBiaXQgc2FmZXIsIGJ1dCB0aGUgdmVyc2lvbiBzdHJpbmcgaXMgMS43LCBub3QgMS43LjANCi8vIGFuZCB3ZSdsbCBuZXZlciByZWFjaCAxLjcwLjAgKGlmIHdlIGRvLCB3ZSBjZXJ0YWlubHkgd29uJ3QgYmUgc3VwcG9ydGluZw0KLy8gMS43IGFueW1vcmUpLiBTZWUgIzExMTk3IGZvciB3aHkgd2UncmUgbm90IHVzaW5nIGZlYXR1cmUgZGV0ZWN0aW9uLg0KaWYgKCAkLmZuLmpxdWVyeS5zdWJzdHJpbmcoIDAsIDMgKSA9PT0gIjEuNyIgKSB7DQoNCgkvLyBTZXR0ZXJzIGZvciAuaW5uZXJXaWR0aCgpLCAuaW5uZXJIZWlnaHQoKSwgLm91dGVyV2lkdGgoKSwgLm91dGVySGVpZ2h0KCkNCgkvLyBVbmxpa2UgalF1ZXJ5IENvcmUgMS44KywgdGhlc2Ugb25seSBzdXBwb3J0IG51bWVyaWMgdmFsdWVzIHRvIHNldCB0aGUNCgkvLyBkaW1lbnNpb25zIGluIHBpeGVscw0KCSQuZWFjaCggWyAiV2lkdGgiLCAiSGVpZ2h0IiBdLCBmdW5jdGlvbiggaSwgbmFtZSApIHsNCgkJdmFyIHNpZGUgPSBuYW1lID09PSAiV2lkdGgiID8gWyAiTGVmdCIsICJSaWdodCIgXSA6IFsgIlRvcCIsICJCb3R0b20iIF0sDQoJCQl0eXBlID0gbmFtZS50b0xvd2VyQ2FzZSgpLA0KCQkJb3JpZyA9IHsNCgkJCQlpbm5lcldpZHRoOiAkLmZuLmlubmVyV2lkdGgsDQoJCQkJaW5uZXJIZWlnaHQ6ICQuZm4uaW5uZXJIZWlnaHQsDQoJCQkJb3V0ZXJXaWR0aDogJC5mbi5vdXRlcldpZHRoLA0KCQkJCW91dGVySGVpZ2h0OiAkLmZuLm91dGVySGVpZ2h0DQoJCQl9Ow0KDQoJCWZ1bmN0aW9uIHJlZHVjZSggZWxlbSwgc2l6ZSwgYm9yZGVyLCBtYXJnaW4gKSB7DQoJCQkkLmVhY2goIHNpZGUsIGZ1bmN0aW9uKCkgew0KCQkJCXNpemUgLT0gcGFyc2VGbG9hdCggJC5jc3MoIGVsZW0sICJwYWRkaW5nIiArIHRoaXMgKSApIHx8IDA7DQoJCQkJaWYgKCBib3JkZXIgKSB7DQoJCQkJCXNpemUgLT0gcGFyc2VGbG9hdCggJC5jc3MoIGVsZW0sICJib3JkZXIiICsgdGhpcyArICJXaWR0aCIgKSApIHx8IDA7DQoJCQkJfQ0KCQkJCWlmICggbWFyZ2luICkgew0KCQkJCQlzaXplIC09IHBhcnNlRmxvYXQoICQuY3NzKCBlbGVtLCAibWFyZ2luIiArIHRoaXMgKSApIHx8IDA7DQoJCQkJfQ0KCQkJfSApOw0KCQkJcmV0dXJuIHNpemU7DQoJCX0NCg0KCQkkLmZuWyAiaW5uZXIiICsgbmFtZSBdID0gZnVuY3Rpb24oIHNpemUgKSB7DQoJCQlpZiAoIHNpemUgPT09IHVuZGVmaW5lZCApIHsNCgkJCQlyZXR1cm4gb3JpZ1sgImlubmVyIiArIG5hbWUgXS5jYWxsKCB0aGlzICk7DQoJCQl9DQoNCgkJCXJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkgew0KCQkJCSQoIHRoaXMgKS5jc3MoIHR5cGUsIHJlZHVjZSggdGhpcywgc2l6ZSApICsgInB4IiApOw0KCQkJfSApOw0KCQl9Ow0KDQoJCSQuZm5bICJvdXRlciIgKyBuYW1lIF0gPSBmdW5jdGlvbiggc2l6ZSwgbWFyZ2luICkgew0KCQkJaWYgKCB0eXBlb2Ygc2l6ZSAhPT0gIm51bWJlciIgKSB7DQoJCQkJcmV0dXJuIG9yaWdbICJvdXRlciIgKyBuYW1lIF0uY2FsbCggdGhpcywgc2l6ZSApOw0KCQkJfQ0KDQoJCQlyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHsNCgkJCQkkKCB0aGlzICkuY3NzKCB0eXBlLCByZWR1Y2UoIHRoaXMsIHNpemUsIHRydWUsIG1hcmdpbiApICsgInB4IiApOw0KCQkJfSApOw0KCQl9Ow0KCX0gKTsNCg0KCSQuZm4uYWRkQmFjayA9IGZ1bmN0aW9uKCBzZWxlY3RvciApIHsNCgkJcmV0dXJuIHRoaXMuYWRkKCBzZWxlY3RvciA9PSBudWxsID8NCgkJCXRoaXMucHJldk9iamVjdCA6IHRoaXMucHJldk9iamVjdC5maWx0ZXIoIHNlbGVjdG9yICkNCgkJKTsNCgl9Ow0KfQ0KDQo7DQovKiENCiAqIGpRdWVyeSBVSSBLZXljb2RlIDEuMTIuMQ0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKi8NCg0KLy8+PmxhYmVsOiBLZXljb2RlDQovLz4+Z3JvdXA6IENvcmUNCi8vPj5kZXNjcmlwdGlvbjogUHJvdmlkZSBrZXljb2RlcyBhcyBrZXluYW1lcw0KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2pRdWVyeS51aS5rZXlDb2RlLw0KDQoNCnZhciBrZXljb2RlID0gJC51aS5rZXlDb2RlID0gew0KCUJBQ0tTUEFDRTogOCwNCglDT01NQTogMTg4LA0KCURFTEVURTogNDYsDQoJRE9XTjogNDAsDQoJRU5EOiAzNSwNCglFTlRFUjogMTMsDQoJRVNDQVBFOiAyNywNCglIT01FOiAzNiwNCglMRUZUOiAzNywNCglQQUdFX0RPV046IDM0LA0KCVBBR0VfVVA6IDMzLA0KCVBFUklPRDogMTkwLA0KCVJJR0hUOiAzOSwNCglTUEFDRTogMzIsDQoJVEFCOiA5LA0KCVVQOiAzOA0KfTsNCg0KDQoNCg0KLy8gSW50ZXJuYWwgdXNlIG9ubHkNCnZhciBlc2NhcGVTZWxlY3RvciA9ICQudWkuZXNjYXBlU2VsZWN0b3IgPSAoIGZ1bmN0aW9uKCkgew0KCXZhciBzZWxlY3RvckVzY2FwZSA9IC8oWyEiIyQlJicoKSorLC4vOjs8PT4\/QFtcXV5ge3x9fl0pL2c7DQoJcmV0dXJuIGZ1bmN0aW9uKCBzZWxlY3RvciApIHsNCgkJcmV0dXJuIHNlbGVjdG9yLnJlcGxhY2UoIHNlbGVjdG9yRXNjYXBlLCAiXFwkMSIgKTsNCgl9Ow0KfSApKCk7DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgTGFiZWxzIDEuMTIuMQ0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKi8NCg0KLy8+PmxhYmVsOiBsYWJlbHMNCi8vPj5ncm91cDogQ29yZQ0KLy8+PmRlc2NyaXB0aW9uOiBGaW5kIGFsbCB0aGUgbGFiZWxzIGFzc29jaWF0ZWQgd2l0aCBhIGdpdmVuIGlucHV0DQovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vbGFiZWxzLw0KDQoNCg0KdmFyIGxhYmVscyA9ICQuZm4ubGFiZWxzID0gZnVuY3Rpb24oKSB7DQoJdmFyIGFuY2VzdG9yLCBzZWxlY3RvciwgaWQsIGxhYmVscywgYW5jZXN0b3JzOw0KDQoJLy8gQ2hlY2sgY29udHJvbC5sYWJlbHMgZmlyc3QNCglpZiAoIHRoaXNbIDAgXS5sYWJlbHMgJiYgdGhpc1sgMCBdLmxhYmVscy5sZW5ndGggKSB7DQoJCXJldHVybiB0aGlzLnB1c2hTdGFjayggdGhpc1sgMCBdLmxhYmVscyApOw0KCX0NCg0KCS8vIFN1cHBvcnQ6IElFIDw9IDExLCBGRiA8PSAzNywgQW5kcm9pZCA8PSAyLjMgb25seQ0KCS8vIEFib3ZlIGJyb3dzZXJzIGRvIG5vdCBzdXBwb3J0IGNvbnRyb2wubGFiZWxzLiBFdmVyeXRoaW5nIGJlbG93IGlzIHRvIHN1cHBvcnQgdGhlbQ0KCS8vIGFzIHdlbGwgYXMgZG9jdW1lbnQgZnJhZ21lbnRzLiBjb250cm9sLmxhYmVscyBkb2VzIG5vdCB3b3JrIG9uIGRvY3VtZW50IGZyYWdtZW50cw0KCWxhYmVscyA9IHRoaXMuZXEoIDAgKS5wYXJlbnRzKCAibGFiZWwiICk7DQoNCgkvLyBMb29rIGZvciB0aGUgbGFiZWwgYmFzZWQgb24gdGhlIGlkDQoJaWQgPSB0aGlzLmF0dHIoICJpZCIgKTsNCglpZiAoIGlkICkgew0KDQoJCS8vIFdlIGRvbid0IHNlYXJjaCBhZ2FpbnN0IHRoZSBkb2N1bWVudCBpbiBjYXNlIHRoZSBlbGVtZW50DQoJCS8vIGlzIGRpc2Nvbm5lY3RlZCBmcm9tIHRoZSBET00NCgkJYW5jZXN0b3IgPSB0aGlzLmVxKCAwICkucGFyZW50cygpLmxhc3QoKTsNCg0KCQkvLyBHZXQgYSBmdWxsIHNldCBvZiB0b3AgbGV2ZWwgYW5jZXN0b3JzDQoJCWFuY2VzdG9ycyA9IGFuY2VzdG9yLmFkZCggYW5jZXN0b3IubGVuZ3RoID8gYW5jZXN0b3Iuc2libGluZ3MoKSA6IHRoaXMuc2libGluZ3MoKSApOw0KDQoJCS8vIENyZWF0ZSBhIHNlbGVjdG9yIGZvciB0aGUgbGFiZWwgYmFzZWQgb24gdGhlIGlkDQoJCXNlbGVjdG9yID0gImxhYmVsW2Zvcj0nIiArICQudWkuZXNjYXBlU2VsZWN0b3IoIGlkICkgKyAiJ10iOw0KDQoJCWxhYmVscyA9IGxhYmVscy5hZGQoIGFuY2VzdG9ycy5maW5kKCBzZWxlY3RvciApLmFkZEJhY2soIHNlbGVjdG9yICkgKTsNCg0KCX0NCg0KCS8vIFJldHVybiB3aGF0ZXZlciB3ZSBoYXZlIGZvdW5kIGZvciBsYWJlbHMNCglyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGxhYmVscyApOw0KfTsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBTY3JvbGwgUGFyZW50IDEuMTIuMQ0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKi8NCg0KLy8+PmxhYmVsOiBzY3JvbGxQYXJlbnQNCi8vPj5ncm91cDogQ29yZQ0KLy8+PmRlc2NyaXB0aW9uOiBHZXQgdGhlIGNsb3Nlc3QgYW5jZXN0b3IgZWxlbWVudCB0aGF0IGlzIHNjcm9sbGFibGUuDQovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vc2Nyb2xsUGFyZW50Lw0KDQoNCg0KdmFyIHNjcm9sbFBhcmVudCA9ICQuZm4uc2Nyb2xsUGFyZW50ID0gZnVuY3Rpb24oIGluY2x1ZGVIaWRkZW4gKSB7DQoJdmFyIHBvc2l0aW9uID0gdGhpcy5jc3MoICJwb3NpdGlvbiIgKSwNCgkJZXhjbHVkZVN0YXRpY1BhcmVudCA9IHBvc2l0aW9uID09PSAiYWJzb2x1dGUiLA0KCQlvdmVyZmxvd1JlZ2V4ID0gaW5jbHVkZUhpZGRlbiA\\/ICQoKSA6IGNsaWNrZWQubmV4dCgpLA0KCQkJdG9IaWRlID0gYWN0aXZlLm5leHQoKSwNCgkJCWV2ZW50RGF0YSA9IHsNCgkJCQlvbGRIZWFkZXI6IGFjdGl2ZSwNCgkJCQlvbGRQYW5lbDogdG9IaWRlLA0KCQkJCW5ld0hlYWRlcjogY29sbGFwc2luZyA\/ICQoKSA6IGNsaWNrZWQsDQoJCQkJbmV3UGFuZWw6IHRvU2hvdw0KCQkJfTsNCg0KCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOw0KDQoJCWlmICgNCg0KCQkJCS8vIGNsaWNrIG9uIGFjdGl2ZSBoZWFkZXIsIGJ1dCBub3QgY29sbGFwc2libGUNCgkJCQkoIGNsaWNrZWRJc0FjdGl2ZSAmJiAhb3B0aW9ucy5jb2xsYXBzaWJsZSApIHx8DQoNCgkJCQkvLyBhbGxvdyBjYW5jZWxpbmcgYWN0aXZhdGlvbg0KCQkJCSggdGhpcy5fdHJpZ2dlciggImJlZm9yZUFjdGl2YXRlIiwgZXZlbnQsIGV2ZW50RGF0YSApID09PSBmYWxzZSApICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJb3B0aW9ucy5hY3RpdmUgPSBjb2xsYXBzaW5nID8gZmFsc2UgOiB0aGlzLmhlYWRlcnMuaW5kZXgoIGNsaWNrZWQgKTsNCg0KCQkvLyBXaGVuIHRoZSBjYWxsIHRvIC5fdG9nZ2xlKCkgY29tZXMgYWZ0ZXIgdGhlIGNsYXNzIGNoYW5nZXMNCgkJLy8gaXQgY2F1c2VzIGEgdmVyeSBvZGQgYnVnIGluIElFIDggKHNlZSAjNjcyMCkNCgkJdGhpcy5hY3RpdmUgPSBjbGlja2VkSXNBY3RpdmUgPyAkKCkgOiBjbGlja2VkOw0KCQl0aGlzLl90b2dnbGUoIGV2ZW50RGF0YSApOw0KDQoJCS8vIFN3aXRjaCBjbGFzc2VzDQoJCS8vIGNvcm5lciBjbGFzc2VzIG9uIHRoZSBwcmV2aW91c2x5IGFjdGl2ZSBoZWFkZXIgc3RheSBhZnRlciB0aGUgYW5pbWF0aW9uDQoJCXRoaXMuX3JlbW92ZUNsYXNzKCBhY3RpdmUsICJ1aS1hY2NvcmRpb24taGVhZGVyLWFjdGl2ZSIsICJ1aS1zdGF0ZS1hY3RpdmUiICk7DQoJCWlmICggb3B0aW9ucy5pY29ucyApIHsNCgkJCWFjdGl2ZUNoaWxkcmVuID0gYWN0aXZlLmNoaWxkcmVuKCAiLnVpLWFjY29yZGlvbi1oZWFkZXItaWNvbiIgKTsNCgkJCXRoaXMuX3JlbW92ZUNsYXNzKCBhY3RpdmVDaGlsZHJlbiwgbnVsbCwgb3B0aW9ucy5pY29ucy5hY3RpdmVIZWFkZXIgKQ0KCQkJCS5fYWRkQ2xhc3MoIGFjdGl2ZUNoaWxkcmVuLCBudWxsLCBvcHRpb25zLmljb25zLmhlYWRlciApOw0KCQl9DQoNCgkJaWYgKCAhY2xpY2tlZElzQWN0aXZlICkgew0KCQkJdGhpcy5fcmVtb3ZlQ2xhc3MoIGNsaWNrZWQsICJ1aS1hY2NvcmRpb24taGVhZGVyLWNvbGxhcHNlZCIgKQ0KCQkJCS5fYWRkQ2xhc3MoIGNsaWNrZWQsICJ1aS1hY2NvcmRpb24taGVhZGVyLWFjdGl2ZSIsICJ1aS1zdGF0ZS1hY3RpdmUiICk7DQoJCQlpZiAoIG9wdGlvbnMuaWNvbnMgKSB7DQoJCQkJY2xpY2tlZENoaWxkcmVuID0gY2xpY2tlZC5jaGlsZHJlbiggIi51aS1hY2NvcmRpb24taGVhZGVyLWljb24iICk7DQoJCQkJdGhpcy5fcmVtb3ZlQ2xhc3MoIGNsaWNrZWRDaGlsZHJlbiwgbnVsbCwgb3B0aW9ucy5pY29ucy5oZWFkZXIgKQ0KCQkJCQkuX2FkZENsYXNzKCBjbGlja2VkQ2hpbGRyZW4sIG51bGwsIG9wdGlvbnMuaWNvbnMuYWN0aXZlSGVhZGVyICk7DQoJCQl9DQoNCgkJCXRoaXMuX2FkZENsYXNzKCBjbGlja2VkLm5leHQoKSwgInVpLWFjY29yZGlvbi1jb250ZW50LWFjdGl2ZSIgKTsNCgkJfQ0KCX0sDQoNCglfdG9nZ2xlOiBmdW5jdGlvbiggZGF0YSApIHsNCgkJdmFyIHRvU2hvdyA9IGRhdGEubmV3UGFuZWwsDQoJCQl0b0hpZGUgPSB0aGlzLnByZXZTaG93Lmxlbmd0aCA\\/ICJmaXJzdCIgOiAibGFzdCIgXSgpICk7DQoJCX0NCgl9LA0KDQoJcHJldmlvdXNQYWdlOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCXZhciBpdGVtLCBiYXNlLCBoZWlnaHQ7DQoJCWlmICggIXRoaXMuYWN0aXZlICkgew0KCQkJdGhpcy5uZXh0KCBldmVudCApOw0KCQkJcmV0dXJuOw0KCQl9DQoJCWlmICggdGhpcy5pc0ZpcnN0SXRlbSgpICkgew0KCQkJcmV0dXJuOw0KCQl9DQoJCWlmICggdGhpcy5faGFzU2Nyb2xsKCkgKSB7DQoJCQliYXNlID0gdGhpcy5hY3RpdmUub2Zmc2V0KCkudG9wOw0KCQkJaGVpZ2h0ID0gdGhpcy5lbGVtZW50LmhlaWdodCgpOw0KCQkJdGhpcy5hY3RpdmUucHJldkFsbCggIi51aS1tZW51LWl0ZW0iICkuZWFjaCggZnVuY3Rpb24oKSB7DQoJCQkJaXRlbSA9ICQoIHRoaXMgKTsNCgkJCQlyZXR1cm4gaXRlbS5vZmZzZXQoKS50b3AgLSBiYXNlICsgaGVpZ2h0ID4gMDsNCgkJCX0gKTsNCg0KCQkJdGhpcy5mb2N1cyggZXZlbnQsIGl0ZW0gKTsNCgkJfSBlbHNlIHsNCgkJCXRoaXMuZm9jdXMoIGV2ZW50LCB0aGlzLmFjdGl2ZU1lbnUuZmluZCggdGhpcy5vcHRpb25zLml0ZW1zICkuZmlyc3QoKSApOw0KCQl9DQoJfSwNCg0KCV9oYXNTY3JvbGw6IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gdGhpcy5lbGVtZW50Lm91dGVySGVpZ2h0KCkgPCB0aGlzLmVsZW1lbnQucHJvcCggInNjcm9sbEhlaWdodCIgKTsNCgl9LA0KDQoJc2VsZWN0OiBmdW5jdGlvbiggZXZlbnQgKSB7DQoNCgkJLy8gVE9ETzogSXQgc2hvdWxkIG5ldmVyIGJlIHBvc3NpYmxlIHRvIG5vdCBoYXZlIGFuIGFjdGl2ZSBpdGVtIGF0IHRoaXMNCgkJLy8gcG9pbnQsIGJ1dCB0aGUgdGVzdHMgZG9uJ3QgdHJpZ2dlciBtb3VzZWVudGVyIGJlZm9yZSBjbGljay4NCgkJdGhpcy5hY3RpdmUgPSB0aGlzLmFjdGl2ZSB8fCAkKCBldmVudC50YXJnZXQgKS5jbG9zZXN0KCAiLnVpLW1lbnUtaXRlbSIgKTsNCgkJdmFyIHVpID0geyBpdGVtOiB0aGlzLmFjdGl2ZSB9Ow0KCQlpZiAoICF0aGlzLmFjdGl2ZS5oYXMoICIudWktbWVudSIgKS5sZW5ndGggKSB7DQoJCQl0aGlzLmNvbGxhcHNlQWxsKCBldmVudCwgdHJ1ZSApOw0KCQl9DQoJCXRoaXMuX3RyaWdnZXIoICJzZWxlY3QiLCBldmVudCwgdWkgKTsNCgl9LA0KDQoJX2ZpbHRlck1lbnVJdGVtczogZnVuY3Rpb24oIGNoYXJhY3RlciApIHsNCgkJdmFyIGVzY2FwZWRDaGFyYWN0ZXIgPSBjaGFyYWN0ZXIucmVwbGFjZSggL1tcLVxbXF17fSgpKis\/LixcXFxeJHwjXHNdL2csICJcXCQmIiApLA0KCQkJcmVnZXggPSBuZXcgUmVnRXhwKCAiXiIgKyBlc2NhcGVkQ2hhcmFjdGVyLCAiaSIgKTsNCg0KCQlyZXR1cm4gdGhpcy5hY3RpdmVNZW51DQoJCQkuZmluZCggdGhpcy5vcHRpb25zLml0ZW1zICkNCg0KCQkJCS8vIE9ubHkgbWF0Y2ggb24gaXRlbXMsIG5vdCBkaXZpZGVycyBvciBvdGhlciBjb250ZW50ICgjMTA1NzEpDQoJCQkJLmZpbHRlciggIi51aS1tZW51LWl0ZW0iICkNCgkJCQkJLmZpbHRlciggZnVuY3Rpb24oKSB7DQoJCQkJCQlyZXR1cm4gcmVnZXgudGVzdCgNCgkJCQkJCQkkLnRyaW0oICQoIHRoaXMgKS5jaGlsZHJlbiggIi51aS1tZW51LWl0ZW0td3JhcHBlciIgKS50ZXh0KCkgKSApOw0KCQkJCQl9ICk7DQoJfQ0KfSApOw0KDQoNCi8qIQ0KICogalF1ZXJ5IFVJIEF1dG9jb21wbGV0ZSAxLjEyLjENCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICovDQoNCi8vPj5sYWJlbDogQXV0b2NvbXBsZXRlDQovLz4+Z3JvdXA6IFdpZGdldHMNCi8vPj5kZXNjcmlwdGlvbjogTGlzdHMgc3VnZ2VzdGVkIHdvcmRzIGFzIHRoZSB1c2VyIGlzIHR5cGluZy4NCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9hdXRvY29tcGxldGUvDQovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vYXV0b2NvbXBsZXRlLw0KLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL2NvcmUuY3NzDQovLz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4vdGhlbWVzL2Jhc2UvYXV0b2NvbXBsZXRlLmNzcw0KLy8+PmNzcy50aGVtZTogLi4vLi4vdGhlbWVzL2Jhc2UvdGhlbWUuY3NzDQoNCg0KDQokLndpZGdldCggInVpLmF1dG9jb21wbGV0ZSIsIHsNCgl2ZXJzaW9uOiAiMS4xMi4xIiwNCglkZWZhdWx0RWxlbWVudDogIjxpbnB1dD4iLA0KCW9wdGlvbnM6IHsNCgkJYXBwZW5kVG86IG51bGwsDQoJCWF1dG9Gb2N1czogZmFsc2UsDQoJCWRlbGF5OiAzMDAsDQoJCW1pbkxlbmd0aDogMSwNCgkJcG9zaXRpb246IHsNCgkJCW15OiAibGVmdCB0b3AiLA0KCQkJYXQ6ICJsZWZ0IGJvdHRvbSIsDQoJCQljb2xsaXNpb246ICJub25lIg0KCQl9LA0KCQlzb3VyY2U6IG51bGwsDQoNCgkJLy8gQ2FsbGJhY2tzDQoJCWNoYW5nZTogbnVsbCwNCgkJY2xvc2U6IG51bGwsDQoJCWZvY3VzOiBudWxsLA0KCQlvcGVuOiBudWxsLA0KCQlyZXNwb25zZTogbnVsbCwNCgkJc2VhcmNoOiBudWxsLA0KCQlzZWxlY3Q6IG51bGwNCgl9LA0KDQoJcmVxdWVzdEluZGV4OiAwLA0KCXBlbmRpbmc6IDAsDQoNCglfY3JlYXRlOiBmdW5jdGlvbigpIHsNCg0KCQkvLyBTb21lIGJyb3dzZXJzIG9ubHkgcmVwZWF0IGtleWRvd24gZXZlbnRzLCBub3Qga2V5cHJlc3MgZXZlbnRzLA0KCQkvLyBzbyB3ZSB1c2UgdGhlIHN1cHByZXNzS2V5UHJlc3MgZmxhZyB0byBkZXRlcm1pbmUgaWYgd2UndmUgYWxyZWFkeQ0KCQkvLyBoYW5kbGVkIHRoZSBrZXlkb3duIGV2ZW50LiAjNzI2OQ0KCQkvLyBVbmZvcnR1bmF0ZWx5IHRoZSBjb2RlIGZvciAmIGluIGtleXByZXNzIGlzIHRoZSBzYW1lIGFzIHRoZSB1cCBhcnJvdywNCgkJLy8gc28gd2UgdXNlIHRoZSBzdXBwcmVzc0tleVByZXNzUmVwZWF0IGZsYWcgdG8gYXZvaWQgaGFuZGxpbmcga2V5cHJlc3MNCgkJLy8gZXZlbnRzIHdoZW4gd2Uga25vdyB0aGUga2V5ZG93biBldmVudCB3YXMgdXNlZCB0byBtb2RpZnkgdGhlDQoJCS8vIHNlYXJjaCB0ZXJtLiAjNzc5OQ0KCQl2YXIgc3VwcHJlc3NLZXlQcmVzcywgc3VwcHJlc3NLZXlQcmVzc1JlcGVhdCwgc3VwcHJlc3NJbnB1dCwNCgkJCW5vZGVOYW1lID0gdGhpcy5lbGVtZW50WyAwIF0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSwNCgkJCWlzVGV4dGFyZWEgPSBub2RlTmFtZSA9PT0gInRleHRhcmVhIiwNCgkJCWlzSW5wdXQgPSBub2RlTmFtZSA9PT0gImlucHV0IjsNCg0KCQkvLyBUZXh0YXJlYXMgYXJlIGFsd2F5cyBtdWx0aS1saW5lDQoJCS8vIElucHV0cyBhcmUgYWx3YXlzIHNpbmdsZS1saW5lLCBldmVuIGlmIGluc2lkZSBhIGNvbnRlbnRFZGl0YWJsZSBlbGVtZW50DQoJCS8vIElFIGFsc28gdHJlYXRzIGlucHV0cyBhcyBjb250ZW50RWRpdGFibGUNCgkJLy8gQWxsIG90aGVyIGVsZW1lbnQgdHlwZXMgYXJlIGRldGVybWluZWQgYnkgd2hldGhlciBvciBub3QgdGhleSdyZSBjb250ZW50RWRpdGFibGUNCgkJdGhpcy5pc011bHRpTGluZSA9IGlzVGV4dGFyZWEgfHwgIWlzSW5wdXQgJiYgdGhpcy5faXNDb250ZW50RWRpdGFibGUoIHRoaXMuZWxlbWVudCApOw0KDQoJCXRoaXMudmFsdWVNZXRob2QgPSB0aGlzLmVsZW1lbnRbIGlzVGV4dGFyZWEgfHwgaXNJbnB1dCA\\/IHZhbHVlIDogdGhpcy5fdmFsdWUoKTsNCg0KCQkvLyBBbHdheXMgc2F2ZSB0aGUgYWN0dWFsIHZhbHVlLCBub3QgdGhlIG9uZSBwYXNzZWQgYXMgYW4gYXJndW1lbnQNCgkJdGhpcy50ZXJtID0gdGhpcy5fdmFsdWUoKTsNCg0KCQlpZiAoIHZhbHVlLmxlbmd0aCA8IHRoaXMub3B0aW9ucy5taW5MZW5ndGggKSB7DQoJCQlyZXR1cm4gdGhpcy5jbG9zZSggZXZlbnQgKTsNCgkJfQ0KDQoJCWlmICggdGhpcy5fdHJpZ2dlciggInNlYXJjaCIsIGV2ZW50ICkgPT09IGZhbHNlICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJcmV0dXJuIHRoaXMuX3NlYXJjaCggdmFsdWUgKTsNCgl9LA0KDQoJX3NlYXJjaDogZnVuY3Rpb24oIHZhbHVlICkgew0KCQl0aGlzLnBlbmRpbmcrKzsNCgkJdGhpcy5fYWRkQ2xhc3MoICJ1aS1hdXRvY29tcGxldGUtbG9hZGluZyIgKTsNCgkJdGhpcy5jYW5jZWxTZWFyY2ggPSBmYWxzZTsNCg0KCQl0aGlzLnNvdXJjZSggeyB0ZXJtOiB2YWx1ZSB9LCB0aGlzLl9yZXNwb25zZSgpICk7DQoJfSwNCg0KCV9yZXNwb25zZTogZnVuY3Rpb24oKSB7DQoJCXZhciBpbmRleCA9ICsrdGhpcy5yZXF1ZXN0SW5kZXg7DQoNCgkJcmV0dXJuICQucHJveHkoIGZ1bmN0aW9uKCBjb250ZW50ICkgew0KCQkJaWYgKCBpbmRleCA9PT0gdGhpcy5yZXF1ZXN0SW5kZXggKSB7DQoJCQkJdGhpcy5fX3Jlc3BvbnNlKCBjb250ZW50ICk7DQoJCQl9DQoNCgkJCXRoaXMucGVuZGluZy0tOw0KCQkJaWYgKCAhdGhpcy5wZW5kaW5nICkgew0KCQkJCXRoaXMuX3JlbW92ZUNsYXNzKCAidWktYXV0b2NvbXBsZXRlLWxvYWRpbmciICk7DQoJCQl9DQoJCX0sIHRoaXMgKTsNCgl9LA0KDQoJX19yZXNwb25zZTogZnVuY3Rpb24oIGNvbnRlbnQgKSB7DQoJCWlmICggY29udGVudCApIHsNCgkJCWNvbnRlbnQgPSB0aGlzLl9ub3JtYWxpemUoIGNvbnRlbnQgKTsNCgkJfQ0KCQl0aGlzLl90cmlnZ2VyKCAicmVzcG9uc2UiLCBudWxsLCB7IGNvbnRlbnQ6IGNvbnRlbnQgfSApOw0KCQlpZiAoICF0aGlzLm9wdGlvbnMuZGlzYWJsZWQgJiYgY29udGVudCAmJiBjb250ZW50Lmxlbmd0aCAmJiAhdGhpcy5jYW5jZWxTZWFyY2ggKSB7DQoJCQl0aGlzLl9zdWdnZXN0KCBjb250ZW50ICk7DQoJCQl0aGlzLl90cmlnZ2VyKCAib3BlbiIgKTsNCgkJfSBlbHNlIHsNCg0KCQkJLy8gdXNlIC5fY2xvc2UoKSBpbnN0ZWFkIG9mIC5jbG9zZSgpIHNvIHdlIGRvbid0IGNhbmNlbCBmdXR1cmUgc2VhcmNoZXMNCgkJCXRoaXMuX2Nsb3NlKCk7DQoJCX0NCgl9LA0KDQoJY2xvc2U6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJdGhpcy5jYW5jZWxTZWFyY2ggPSB0cnVlOw0KCQl0aGlzLl9jbG9zZSggZXZlbnQgKTsNCgl9LA0KDQoJX2Nsb3NlOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoNCgkJLy8gUmVtb3ZlIHRoZSBoYW5kbGVyIHRoYXQgY2xvc2VzIHRoZSBtZW51IG9uIG91dHNpZGUgY2xpY2tzDQoJCXRoaXMuX29mZiggdGhpcy5kb2N1bWVudCwgIm1vdXNlZG93biIgKTsNCg0KCQlpZiAoIHRoaXMubWVudS5lbGVtZW50LmlzKCAiOnZpc2libGUiICkgKSB7DQoJCQl0aGlzLm1lbnUuZWxlbWVudC5oaWRlKCk7DQoJCQl0aGlzLm1lbnUuYmx1cigpOw0KCQkJdGhpcy5pc05ld01lbnUgPSB0cnVlOw0KCQkJdGhpcy5fdHJpZ2dlciggImNsb3NlIiwgZXZlbnQgKTsNCgkJfQ0KCX0sDQoNCglfY2hhbmdlOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCWlmICggdGhpcy5wcmV2aW91cyAhPT0gdGhpcy5fdmFsdWUoKSApIHsNCgkJCXRoaXMuX3RyaWdnZXIoICJjaGFuZ2UiLCBldmVudCwgeyBpdGVtOiB0aGlzLnNlbGVjdGVkSXRlbSB9ICk7DQoJCX0NCgl9LA0KDQoJX25vcm1hbGl6ZTogZnVuY3Rpb24oIGl0ZW1zICkgew0KDQoJCS8vIGFzc3VtZSBhbGwgaXRlbXMgaGF2ZSB0aGUgcmlnaHQgZm9ybWF0IHdoZW4gdGhlIGZpcnN0IGl0ZW0gaXMgY29tcGxldGUNCgkJaWYgKCBpdGVtcy5sZW5ndGggJiYgaXRlbXNbIDAgXS5sYWJlbCAmJiBpdGVtc1sgMCBdLnZhbHVlICkgew0KCQkJcmV0dXJuIGl0ZW1zOw0KCQl9DQoJCXJldHVybiAkLm1hcCggaXRlbXMsIGZ1bmN0aW9uKCBpdGVtICkgew0KCQkJaWYgKCB0eXBlb2YgaXRlbSA9PT0gInN0cmluZyIgKSB7DQoJCQkJcmV0dXJuIHsNCgkJCQkJbGFiZWw6IGl0ZW0sDQoJCQkJCXZhbHVlOiBpdGVtDQoJCQkJfTsNCgkJCX0NCgkJCXJldHVybiAkLmV4dGVuZCgge30sIGl0ZW0sIHsNCgkJCQlsYWJlbDogaXRlbS5sYWJlbCB8fCBpdGVtLnZhbHVlLA0KCQkJCXZhbHVlOiBpdGVtLnZhbHVlIHx8IGl0ZW0ubGFiZWwNCgkJCX0gKTsNCgkJfSApOw0KCX0sDQoNCglfc3VnZ2VzdDogZnVuY3Rpb24oIGl0ZW1zICkgew0KCQl2YXIgdWwgPSB0aGlzLm1lbnUuZWxlbWVudC5lbXB0eSgpOw0KCQl0aGlzLl9yZW5kZXJNZW51KCB1bCwgaXRlbXMgKTsNCgkJdGhpcy5pc05ld01lbnUgPSB0cnVlOw0KCQl0aGlzLm1lbnUucmVmcmVzaCgpOw0KDQoJCS8vIFNpemUgYW5kIHBvc2l0aW9uIG1lbnUNCgkJdWwuc2hvdygpOw0KCQl0aGlzLl9yZXNpemVNZW51KCk7DQoJCXVsLnBvc2l0aW9uKCAkLmV4dGVuZCggew0KCQkJb2Y6IHRoaXMuZWxlbWVudA0KCQl9LCB0aGlzLm9wdGlvbnMucG9zaXRpb24gKSApOw0KDQoJCWlmICggdGhpcy5vcHRpb25zLmF1dG9Gb2N1cyApIHsNCgkJCXRoaXMubWVudS5uZXh0KCk7DQoJCX0NCg0KCQkvLyBMaXN0ZW4gZm9yIGludGVyYWN0aW9ucyBvdXRzaWRlIG9mIHRoZSB3aWRnZXQgKCM2NjQyKQ0KCQl0aGlzLl9vbiggdGhpcy5kb2N1bWVudCwgew0KCQkJbW91c2Vkb3duOiAiX2Nsb3NlT25DbGlja091dHNpZGUiDQoJCX0gKTsNCgl9LA0KDQoJX3Jlc2l6ZU1lbnU6IGZ1bmN0aW9uKCkgew0KCQl2YXIgdWwgPSB0aGlzLm1lbnUuZWxlbWVudDsNCgkJdWwub3V0ZXJXaWR0aCggTWF0aC5tYXgoDQoNCgkJCS8vIEZpcmVmb3ggd3JhcHMgbG9uZyB0ZXh0IChwb3NzaWJseSBhIHJvdW5kaW5nIGJ1ZykNCgkJCS8vIHNvIHdlIGFkZCAxcHggdG8gYXZvaWQgdGhlIHdyYXBwaW5nICgjNzUxMykNCgkJCXVsLndpZHRoKCAiIiApLm91dGVyV2lkdGgoKSArIDEsDQoJCQl0aGlzLmVsZW1lbnQub3V0ZXJXaWR0aCgpDQoJCSkgKTsNCgl9LA0KDQoJX3JlbmRlck1lbnU6IGZ1bmN0aW9uKCB1bCwgaXRlbXMgKSB7DQoJCXZhciB0aGF0ID0gdGhpczsNCgkJJC5lYWNoKCBpdGVtcywgZnVuY3Rpb24oIGluZGV4LCBpdGVtICkgew0KCQkJdGhhdC5fcmVuZGVySXRlbURhdGEoIHVsLCBpdGVtICk7DQoJCX0gKTsNCgl9LA0KDQoJX3JlbmRlckl0ZW1EYXRhOiBmdW5jdGlvbiggdWwsIGl0ZW0gKSB7DQoJCXJldHVybiB0aGlzLl9yZW5kZXJJdGVtKCB1bCwgaXRlbSApLmRhdGEoICJ1aS1hdXRvY29tcGxldGUtaXRlbSIsIGl0ZW0gKTsNCgl9LA0KDQoJX3JlbmRlckl0ZW06IGZ1bmN0aW9uKCB1bCwgaXRlbSApIHsNCgkJcmV0dXJuICQoICI8bGk+IiApDQoJCQkuYXBwZW5kKCAkKCAiPGRpdj4iICkudGV4dCggaXRlbS5sYWJlbCApICkNCgkJCS5hcHBlbmRUbyggdWwgKTsNCgl9LA0KDQoJX21vdmU6IGZ1bmN0aW9uKCBkaXJlY3Rpb24sIGV2ZW50ICkgew0KCQlpZiAoICF0aGlzLm1lbnUuZWxlbWVudC5pcyggIjp2aXNpYmxlIiApICkgew0KCQkJdGhpcy5zZWFyY2goIG51bGwsIGV2ZW50ICk7DQoJCQlyZXR1cm47DQoJCX0NCgkJaWYgKCB0aGlzLm1lbnUuaXNGaXJzdEl0ZW0oKSAmJiAvXnByZXZpb3VzLy50ZXN0KCBkaXJlY3Rpb24gKSB8fA0KCQkJCXRoaXMubWVudS5pc0xhc3RJdGVtKCkgJiYgL15uZXh0Ly50ZXN0KCBkaXJlY3Rpb24gKSApIHsNCg0KCQkJaWYgKCAhdGhpcy5pc011bHRpTGluZSApIHsNCgkJCQl0aGlzLl92YWx1ZSggdGhpcy50ZXJtICk7DQoJCQl9DQoNCgkJCXRoaXMubWVudS5ibHVyKCk7DQoJCQlyZXR1cm47DQoJCX0NCgkJdGhpcy5tZW51WyBkaXJlY3Rpb24gXSggZXZlbnQgKTsNCgl9LA0KDQoJd2lkZ2V0OiBmdW5jdGlvbigpIHsNCgkJcmV0dXJuIHRoaXMubWVudS5lbGVtZW50Ow0KCX0sDQoNCglfdmFsdWU6IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gdGhpcy52YWx1ZU1ldGhvZC5hcHBseSggdGhpcy5lbGVtZW50LCBhcmd1bWVudHMgKTsNCgl9LA0KDQoJX2tleUV2ZW50OiBmdW5jdGlvbigga2V5RXZlbnQsIGV2ZW50ICkgew0KCQlpZiAoICF0aGlzLmlzTXVsdGlMaW5lIHx8IHRoaXMubWVudS5lbGVtZW50LmlzKCAiOnZpc2libGUiICkgKSB7DQoJCQl0aGlzLl9tb3ZlKCBrZXlFdmVudCwgZXZlbnQgKTsNCg0KCQkJLy8gUHJldmVudHMgbW92aW5nIGN1cnNvciB0byBiZWdpbm5pbmcvZW5kIG9mIHRoZSB0ZXh0IGZpZWxkIGluIHNvbWUgYnJvd3NlcnMNCgkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7DQoJCX0NCgl9LA0KDQoJLy8gU3VwcG9ydDogQ2hyb21lIDw9NTANCgkvLyBXZSBzaG91bGQgYmUgYWJsZSB0byBqdXN0IHVzZSB0aGlzLmVsZW1lbnQucHJvcCggImlzQ29udGVudEVkaXRhYmxlIiApDQoJLy8gYnV0IGhpZGRlbiBlbGVtZW50cyBhbHdheXMgcmVwb3J0IGZhbHNlIGluIENocm9tZS4NCgkvLyBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw\/aWQ9MzEzMDgyDQoJX2lzQ29udGVudEVkaXRhYmxlOiBmdW5jdGlvbiggZWxlbWVudCApIHsNCgkJaWYgKCAhZWxlbWVudC5sZW5ndGggKSB7DQoJCQlyZXR1cm4gZmFsc2U7DQoJCX0NCg0KCQl2YXIgZWRpdGFibGUgPSBlbGVtZW50LnByb3AoICJjb250ZW50RWRpdGFibGUiICk7DQoNCgkJaWYgKCBlZGl0YWJsZSA9PT0gImluaGVyaXQiICkgew0KCQkgIHJldHVybiB0aGlzLl9pc0NvbnRlbnRFZGl0YWJsZSggZWxlbWVudC5wYXJlbnQoKSApOw0KCQl9DQoNCgkJcmV0dXJuIGVkaXRhYmxlID09PSAidHJ1ZSI7DQoJfQ0KfSApOw0KDQokLmV4dGVuZCggJC51aS5hdXRvY29tcGxldGUsIHsNCgllc2NhcGVSZWdleDogZnVuY3Rpb24oIHZhbHVlICkgew0KCQlyZXR1cm4gdmFsdWUucmVwbGFjZSggL1tcLVxbXF17fSgpKis\/LixcXFxeJHwjXHNdL2csICJcXCQmIiApOw0KCX0sDQoJZmlsdGVyOiBmdW5jdGlvbiggYXJyYXksIHRlcm0gKSB7DQoJCXZhciBtYXRjaGVyID0gbmV3IFJlZ0V4cCggJC51aS5hdXRvY29tcGxldGUuZXNjYXBlUmVnZXgoIHRlcm0gKSwgImkiICk7DQoJCXJldHVybiAkLmdyZXAoIGFycmF5LCBmdW5jdGlvbiggdmFsdWUgKSB7DQoJCQlyZXR1cm4gbWF0Y2hlci50ZXN0KCB2YWx1ZS5sYWJlbCB8fCB2YWx1ZS52YWx1ZSB8fCB2YWx1ZSApOw0KCQl9ICk7DQoJfQ0KfSApOw0KDQovLyBMaXZlIHJlZ2lvbiBleHRlbnNpb24sIGFkZGluZyBhIGBtZXNzYWdlc2Agb3B0aW9uDQovLyBOT1RFOiBUaGlzIGlzIGFuIGV4cGVyaW1lbnRhbCBBUEkuIFdlIGFyZSBzdGlsbCBpbnZlc3RpZ2F0aW5nDQovLyBhIGZ1bGwgc29sdXRpb24gZm9yIHN0cmluZyBtYW5pcHVsYXRpb24gYW5kIGludGVybmF0aW9uYWxpemF0aW9uLg0KJC53aWRnZXQoICJ1aS5hdXRvY29tcGxldGUiLCAkLnVpLmF1dG9jb21wbGV0ZSwgew0KCW9wdGlvbnM6IHsNCgkJbWVzc2FnZXM6IHsNCgkJCW5vUmVzdWx0czogIk5vIHNlYXJjaCByZXN1bHRzLiIsDQoJCQlyZXN1bHRzOiBmdW5jdGlvbiggYW1vdW50ICkgew0KCQkJCXJldHVybiBhbW91bnQgKyAoIGFtb3VudCA+IDEgPyAiIHJlc3VsdHMgYXJlIiA6ICIgcmVzdWx0IGlzIiApICsNCgkJCQkJIiBhdmFpbGFibGUsIHVzZSB1cCBhbmQgZG93biBhcnJvdyBrZXlzIHRvIG5hdmlnYXRlLiI7DQoJCQl9DQoJCX0NCgl9LA0KDQoJX19yZXNwb25zZTogZnVuY3Rpb24oIGNvbnRlbnQgKSB7DQoJCXZhciBtZXNzYWdlOw0KCQl0aGlzLl9zdXBlckFwcGx5KCBhcmd1bWVudHMgKTsNCgkJaWYgKCB0aGlzLm9wdGlvbnMuZGlzYWJsZWQgfHwgdGhpcy5jYW5jZWxTZWFyY2ggKSB7DQoJCQlyZXR1cm47DQoJCX0NCgkJaWYgKCBjb250ZW50ICYmIGNvbnRlbnQubGVuZ3RoICkgew0KCQkJbWVzc2FnZSA9IHRoaXMub3B0aW9ucy5tZXNzYWdlcy5yZXN1bHRzKCBjb250ZW50Lmxlbmd0aCApOw0KCQl9IGVsc2Ugew0KCQkJbWVzc2FnZSA9IHRoaXMub3B0aW9ucy5tZXNzYWdlcy5ub1Jlc3VsdHM7DQoJCX0NCgkJdGhpcy5saXZlUmVnaW9uLmNoaWxkcmVuKCkuaGlkZSgpOw0KCQkkKCAiPGRpdj4iICkudGV4dCggbWVzc2FnZSApLmFwcGVuZFRvKCB0aGlzLmxpdmVSZWdpb24gKTsNCgl9DQp9ICk7DQoNCnZhciB3aWRnZXRzQXV0b2NvbXBsZXRlID0gJC51aS5hdXRvY29tcGxldGU7DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgQ29udHJvbGdyb3VwIDEuMTIuMQ0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKi8NCg0KLy8+PmxhYmVsOiBDb250cm9sZ3JvdXANCi8vPj5ncm91cDogV2lkZ2V0cw0KLy8+PmRlc2NyaXB0aW9uOiBWaXN1YWxseSBncm91cHMgZm9ybSBjb250cm9sIHdpZGdldHMNCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9jb250cm9sZ3JvdXAvDQovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vY29udHJvbGdyb3VwLw0KLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL2NvcmUuY3NzDQovLz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4vdGhlbWVzL2Jhc2UvY29udHJvbGdyb3VwLmNzcw0KLy8+PmNzcy50aGVtZTogLi4vLi4vdGhlbWVzL2Jhc2UvdGhlbWUuY3NzDQoNCg0KdmFyIGNvbnRyb2xncm91cENvcm5lclJlZ2V4ID0gL3VpLWNvcm5lci0oW2Etel0pezIsNn0vZzsNCg0KdmFyIHdpZGdldHNDb250cm9sZ3JvdXAgPSAkLndpZGdldCggInVpLmNvbnRyb2xncm91cCIsIHsNCgl2ZXJzaW9uOiAiMS4xMi4xIiwNCglkZWZhdWx0RWxlbWVudDogIjxkaXY+IiwNCglvcHRpb25zOiB7DQoJCWRpcmVjdGlvbjogImhvcml6b250YWwiLA0KCQlkaXNhYmxlZDogbnVsbCwNCgkJb25seVZpc2libGU6IHRydWUsDQoJCWl0ZW1zOiB7DQoJCQkiYnV0dG9uIjogImlucHV0W3R5cGU9YnV0dG9uXSwgaW5wdXRbdHlwZT1zdWJtaXRdLCBpbnB1dFt0eXBlPXJlc2V0XSwgYnV0dG9uLCBhIiwNCgkJCSJjb250cm9sZ3JvdXBMYWJlbCI6ICIudWktY29udHJvbGdyb3VwLWxhYmVsIiwNCgkJCSJjaGVja2JveHJhZGlvIjogImlucHV0W3R5cGU9J2NoZWNrYm94J10sIGlucHV0W3R5cGU9J3JhZGlvJ10iLA0KCQkJInNlbGVjdG1lbnUiOiAic2VsZWN0IiwNCgkJCSJzcGlubmVyIjogIi51aS1zcGlubmVyLWlucHV0Ig0KCQl9DQoJfSwNCg0KCV9jcmVhdGU6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLl9lbmhhbmNlKCk7DQoJfSwNCg0KCS8vIFRvIHN1cHBvcnQgdGhlIGVuaGFuY2VkIG9wdGlvbiBpbiBqUXVlcnkgTW9iaWxlLCB3ZSBpc29sYXRlIERPTSBtYW5pcHVsYXRpb24NCglfZW5oYW5jZTogZnVuY3Rpb24oKSB7DQoJCXRoaXMuZWxlbWVudC5hdHRyKCAicm9sZSIsICJ0b29sYmFyIiApOw0KCQl0aGlzLnJlZnJlc2goKTsNCgl9LA0KDQoJX2Rlc3Ryb3k6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLl9jYWxsQ2hpbGRNZXRob2QoICJkZXN0cm95IiApOw0KCQl0aGlzLmNoaWxkV2lkZ2V0cy5yZW1vdmVEYXRhKCAidWktY29udHJvbGdyb3VwLWRhdGEiICk7DQoJCXRoaXMuZWxlbWVudC5yZW1vdmVBdHRyKCAicm9sZSIgKTsNCgkJaWYgKCB0aGlzLm9wdGlvbnMuaXRlbXMuY29udHJvbGdyb3VwTGFiZWwgKSB7DQoJCQl0aGlzLmVsZW1lbnQNCgkJCQkuZmluZCggdGhpcy5vcHRpb25zLml0ZW1zLmNvbnRyb2xncm91cExhYmVsICkNCgkJCQkuZmluZCggIi51aS1jb250cm9sZ3JvdXAtbGFiZWwtY29udGVudHMiICkNCgkJCQkuY29udGVudHMoKS51bndyYXAoKTsNCgkJfQ0KCX0sDQoNCglfaW5pdFdpZGdldHM6IGZ1bmN0aW9uKCkgew0KCQl2YXIgdGhhdCA9IHRoaXMsDQoJCQljaGlsZFdpZGdldHMgPSBbXTsNCg0KCQkvLyBGaXJzdCB3ZSBpdGVyYXRlIG92ZXIgZWFjaCBvZiB0aGUgaXRlbXMgb3B0aW9ucw0KCQkkLmVhY2goIHRoaXMub3B0aW9ucy5pdGVtcywgZnVuY3Rpb24oIHdpZGdldCwgc2VsZWN0b3IgKSB7DQoJCQl2YXIgbGFiZWxzOw0KCQkJdmFyIG9wdGlvbnMgPSB7fTsNCg0KCQkJLy8gTWFrZSBzdXJlIHRoZSB3aWRnZXQgaGFzIGEgc2VsZWN0b3Igc2V0DQoJCQlpZiAoICFzZWxlY3RvciApIHsNCgkJCQlyZXR1cm47DQoJCQl9DQoNCgkJCWlmICggd2lkZ2V0ID09PSAiY29udHJvbGdyb3VwTGFiZWwiICkgew0KCQkJCWxhYmVscyA9IHRoYXQuZWxlbWVudC5maW5kKCBzZWxlY3RvciApOw0KCQkJCWxhYmVscy5lYWNoKCBmdW5jdGlvbigpIHsNCgkJCQkJdmFyIGVsZW1lbnQgPSAkKCB0aGlzICk7DQoNCgkJCQkJaWYgKCBlbGVtZW50LmNoaWxkcmVuKCAiLnVpLWNvbnRyb2xncm91cC1sYWJlbC1jb250ZW50cyIgKS5sZW5ndGggKSB7DQoJCQkJCQlyZXR1cm47DQoJCQkJCX0NCgkJCQkJZWxlbWVudC5jb250ZW50cygpDQoJCQkJCQkud3JhcEFsbCggIjxzcGFuIGNsYXNzPSd1aS1jb250cm9sZ3JvdXAtbGFiZWwtY29udGVudHMnPjwvc3Bhbj4iICk7DQoJCQkJfSApOw0KCQkJCXRoYXQuX2FkZENsYXNzKCBsYWJlbHMsIG51bGwsICJ1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktc3RhdGUtZGVmYXVsdCIgKTsNCgkJCQljaGlsZFdpZGdldHMgPSBjaGlsZFdpZGdldHMuY29uY2F0KCBsYWJlbHMuZ2V0KCkgKTsNCgkJCQlyZXR1cm47DQoJCQl9DQoNCgkJCS8vIE1ha2Ugc3VyZSB0aGUgd2lkZ2V0IGFjdHVhbGx5IGV4aXN0cw0KCQkJaWYgKCAhJC5mblsgd2lkZ2V0IF0gKSB7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KDQoJCQkvLyBXZSBhc3N1bWUgZXZlcnl0aGluZyBpcyBpbiB0aGUgbWlkZGxlIHRvIHN0YXJ0IGJlY2F1c2Ugd2UgY2FuJ3QgZGV0ZXJtaW5lDQoJCQkvLyBmaXJzdCAvIGxhc3QgZWxlbWVudHMgdW50aWwgYWxsIGVuaGFuY21lbnRzIGFyZSBkb25lLg0KCQkJaWYgKCB0aGF0WyAiXyIgKyB3aWRnZXQgKyAiT3B0aW9ucyIgXSApIHsNCgkJCQlvcHRpb25zID0gdGhhdFsgIl8iICsgd2lkZ2V0ICsgIk9wdGlvbnMiIF0oICJtaWRkbGUiICk7DQoJCQl9IGVsc2Ugew0KCQkJCW9wdGlvbnMgPSB7IGNsYXNzZXM6IHt9IH07DQoJCQl9DQoNCgkJCS8vIEZpbmQgaW5zdGFuY2VzIG9mIHRoaXMgd2lkZ2V0IGluc2lkZSBjb250cm9sZ3JvdXAgYW5kIGluaXQgdGhlbQ0KCQkJdGhhdC5lbGVtZW50DQoJCQkJLmZpbmQoIHNlbGVjdG9yICkNCgkJCQkuZWFjaCggZnVuY3Rpb24oKSB7DQoJCQkJCXZhciBlbGVtZW50ID0gJCggdGhpcyApOw0KCQkJCQl2YXIgaW5zdGFuY2UgPSBlbGVtZW50WyB3aWRnZXQgXSggImluc3RhbmNlIiApOw0KDQoJCQkJCS8vIFdlIG5lZWQgdG8gY2xvbmUgdGhlIGRlZmF1bHQgb3B0aW9ucyBmb3IgdGhpcyB0eXBlIG9mIHdpZGdldCB0byBhdm9pZA0KCQkJCQkvLyBwb2xsdXRpbmcgdGhlIHZhcmlhYmxlIG9wdGlvbnMgd2hpY2ggaGFzIGEgd2lkZXIgc2NvcGUgdGhhbiBhIHNpbmdsZSB3aWRnZXQuDQoJCQkJCXZhciBpbnN0YW5jZU9wdGlvbnMgPSAkLndpZGdldC5leHRlbmQoIHt9LCBvcHRpb25zICk7DQoNCgkJCQkJLy8gSWYgdGhlIGJ1dHRvbiBpcyB0aGUgY2hpbGQgb2YgYSBzcGlubmVyIGlnbm9yZSBpdA0KCQkJCQkvLyBUT0RPOiBGaW5kIGEgbW9yZSBnZW5lcmljIHNvbHV0aW9uDQoJCQkJCWlmICggd2lkZ2V0ID09PSAiYnV0dG9uIiAmJiBlbGVtZW50LnBhcmVudCggIi51aS1zcGlubmVyIiApLmxlbmd0aCApIHsNCgkJCQkJCXJldHVybjsNCgkJCQkJfQ0KDQoJCQkJCS8vIENyZWF0ZSB0aGUgd2lkZ2V0IGlmIGl0IGRvZXNuJ3QgZXhpc3QNCgkJCQkJaWYgKCAhaW5zdGFuY2UgKSB7DQoJCQkJCQlpbnN0YW5jZSA9IGVsZW1lbnRbIHdpZGdldCBdKClbIHdpZGdldCBdKCAiaW5zdGFuY2UiICk7DQoJCQkJCX0NCgkJCQkJaWYgKCBpbnN0YW5jZSApIHsNCgkJCQkJCWluc3RhbmNlT3B0aW9ucy5jbGFzc2VzID0NCgkJCQkJCQl0aGF0Ll9yZXNvbHZlQ2xhc3Nlc1ZhbHVlcyggaW5zdGFuY2VPcHRpb25zLmNsYXNzZXMsIGluc3RhbmNlICk7DQoJCQkJCX0NCgkJCQkJZWxlbWVudFsgd2lkZ2V0IF0oIGluc3RhbmNlT3B0aW9ucyApOw0KDQoJCQkJCS8vIFN0b3JlIGFuIGluc3RhbmNlIG9mIHRoZSBjb250cm9sZ3JvdXAgdG8gYmUgYWJsZSB0byByZWZlcmVuY2UNCgkJCQkJLy8gZnJvbSB0aGUgb3V0ZXJtb3N0IGVsZW1lbnQgZm9yIGNoYW5naW5nIG9wdGlvbnMgYW5kIHJlZnJlc2gNCgkJCQkJdmFyIHdpZGdldEVsZW1lbnQgPSBlbGVtZW50WyB3aWRnZXQgXSggIndpZGdldCIgKTsNCgkJCQkJJC5kYXRhKCB3aWRnZXRFbGVtZW50WyAwIF0sICJ1aS1jb250cm9sZ3JvdXAtZGF0YSIsDQoJCQkJCQlpbnN0YW5jZSA\/IGluc3RhbmNlIDogZWxlbWVudFsgd2lkZ2V0IF0oICJpbnN0YW5jZSIgKSApOw0KDQoJCQkJCWNoaWxkV2lkZ2V0cy5wdXNoKCB3aWRnZXRFbGVtZW50WyAwIF0gKTsNCgkJCQl9ICk7DQoJCX0gKTsNCg0KCQl0aGlzLmNoaWxkV2lkZ2V0cyA9ICQoICQudW5pcXVlKCBjaGlsZFdpZGdldHMgKSApOw0KCQl0aGlzLl9hZGRDbGFzcyggdGhpcy5jaGlsZFdpZGdldHMsICJ1aS1jb250cm9sZ3JvdXAtaXRlbSIgKTsNCgl9LA0KDQoJX2NhbGxDaGlsZE1ldGhvZDogZnVuY3Rpb24oIG1ldGhvZCApIHsNCgkJdGhpcy5jaGlsZFdpZGdldHMuZWFjaCggZnVuY3Rpb24oKSB7DQoJCQl2YXIgZWxlbWVudCA9ICQoIHRoaXMgKSwNCgkJCQlkYXRhID0gZWxlbWVudC5kYXRhKCAidWktY29udHJvbGdyb3VwLWRhdGEiICk7DQoJCQlpZiAoIGRhdGEgJiYgZGF0YVsgbWV0aG9kIF0gKSB7DQoJCQkJZGF0YVsgbWV0aG9kIF0oKTsNCgkJCX0NCgkJfSApOw0KCX0sDQoNCglfdXBkYXRlQ29ybmVyQ2xhc3M6IGZ1bmN0aW9uKCBlbGVtZW50LCBwb3NpdGlvbiApIHsNCgkJdmFyIHJlbW92ZSA9ICJ1aS1jb3JuZXItdG9wIHVpLWNvcm5lci1ib3R0b20gdWktY29ybmVyLWxlZnQgdWktY29ybmVyLXJpZ2h0IHVpLWNvcm5lci1hbGwiOw0KCQl2YXIgYWRkID0gdGhpcy5fYnVpbGRTaW1wbGVPcHRpb25zKCBwb3NpdGlvbiwgImxhYmVsIiApLmNsYXNzZXMubGFiZWw7DQoNCgkJdGhpcy5fcmVtb3ZlQ2xhc3MoIGVsZW1lbnQsIG51bGwsIHJlbW92ZSApOw0KCQl0aGlzLl9hZGRDbGFzcyggZWxlbWVudCwgbnVsbCwgYWRkICk7DQoJfSwNCg0KCV9idWlsZFNpbXBsZU9wdGlvbnM6IGZ1bmN0aW9uKCBwb3NpdGlvbiwga2V5ICkgew0KCQl2YXIgZGlyZWN0aW9uID0gdGhpcy5vcHRpb25zLmRpcmVjdGlvbiA9PT0gInZlcnRpY2FsIjsNCgkJdmFyIHJlc3VsdCA9IHsNCgkJCWNsYXNzZXM6IHt9DQoJCX07DQoJCXJlc3VsdC5jbGFzc2VzWyBrZXkgXSA9IHsNCgkJCSJtaWRkbGUiOiAiIiwNCgkJCSJmaXJzdCI6ICJ1aS1jb3JuZXItIiArICggZGlyZWN0aW9uID8gInRvcCIgOiAibGVmdCIgKSwNCgkJCSJsYXN0IjogInVpLWNvcm5lci0iICsgKCBkaXJlY3Rpb24gPyAiYm90dG9tIiA6ICJyaWdodCIgKSwNCgkJCSJvbmx5IjogInVpLWNvcm5lci1hbGwiDQoJCX1bIHBvc2l0aW9uIF07DQoNCgkJcmV0dXJuIHJlc3VsdDsNCgl9LA0KDQoJX3NwaW5uZXJPcHRpb25zOiBmdW5jdGlvbiggcG9zaXRpb24gKSB7DQoJCXZhciBvcHRpb25zID0gdGhpcy5fYnVpbGRTaW1wbGVPcHRpb25zKCBwb3NpdGlvbiwgInVpLXNwaW5uZXIiICk7DQoNCgkJb3B0aW9ucy5jbGFzc2VzWyAidWktc3Bpbm5lci11cCIgXSA9ICIiOw0KCQlvcHRpb25zLmNsYXNzZXNbICJ1aS1zcGlubmVyLWRvd24iIF0gPSAiIjsNCg0KCQlyZXR1cm4gb3B0aW9uczsNCgl9LA0KDQoJX2J1dHRvbk9wdGlvbnM6IGZ1bmN0aW9uKCBwb3NpdGlvbiApIHsNCgkJcmV0dXJuIHRoaXMuX2J1aWxkU2ltcGxlT3B0aW9ucyggcG9zaXRpb24sICJ1aS1idXR0b24iICk7DQoJfSwNCg0KCV9jaGVja2JveHJhZGlvT3B0aW9uczogZnVuY3Rpb24oIHBvc2l0aW9uICkgew0KCQlyZXR1cm4gdGhpcy5fYnVpbGRTaW1wbGVPcHRpb25zKCBwb3NpdGlvbiwgInVpLWNoZWNrYm94cmFkaW8tbGFiZWwiICk7DQoJfSwNCg0KCV9zZWxlY3RtZW51T3B0aW9uczogZnVuY3Rpb24oIHBvc2l0aW9uICkgew0KCQl2YXIgZGlyZWN0aW9uID0gdGhpcy5vcHRpb25zLmRpcmVjdGlvbiA9PT0gInZlcnRpY2FsIjsNCgkJcmV0dXJuIHsNCgkJCXdpZHRoOiBkaXJlY3Rpb24gPyAiYXV0byIgOiBmYWxzZSwNCgkJCWNsYXNzZXM6IHsNCgkJCQltaWRkbGU6IHsNCgkJCQkJInVpLXNlbGVjdG1lbnUtYnV0dG9uLW9wZW4iOiAiIiwNCgkJCQkJInVpLXNlbGVjdG1lbnUtYnV0dG9uLWNsb3NlZCI6ICIiDQoJCQkJfSwNCgkJCQlmaXJzdDogew0KCQkJCQkidWktc2VsZWN0bWVudS1idXR0b24tb3BlbiI6ICJ1aS1jb3JuZXItIiArICggZGlyZWN0aW9uID8gInRvcCIgOiAidGwiICksDQoJCQkJCSJ1aS1zZWxlY3RtZW51LWJ1dHRvbi1jbG9zZWQiOiAidWktY29ybmVyLSIgKyAoIGRpcmVjdGlvbiA\\\\/IGJ1dHRvblRleHQgOiAkKCAiPGltZy8+IiApLmF0dHIoDQoJCQkJCXsgc3JjOmJ1dHRvbkltYWdlLCBhbHQ6YnV0dG9uVGV4dCwgdGl0bGU6YnV0dG9uVGV4dCB9ICkgKSApOw0KCQkJaW5wdXRbIGlzUlRMID8gImJlZm9yZSIgOiAiYWZ0ZXIiIF0oIGluc3QudHJpZ2dlciApOw0KCQkJaW5zdC50cmlnZ2VyLm9uKCAiY2xpY2siLCBmdW5jdGlvbigpIHsNCgkJCQlpZiAoICQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcgJiYgJC5kYXRlcGlja2VyLl9sYXN0SW5wdXQgPT09IGlucHV0WyAwIF0gKSB7DQoJCQkJCSQuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIoKTsNCgkJCQl9IGVsc2UgaWYgKCAkLmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nICYmICQuZGF0ZXBpY2tlci5fbGFzdElucHV0ICE9PSBpbnB1dFsgMCBdICkgew0KCQkJCQkkLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCk7DQoJCQkJCSQuZGF0ZXBpY2tlci5fc2hvd0RhdGVwaWNrZXIoIGlucHV0WyAwIF0gKTsNCgkJCQl9IGVsc2Ugew0KCQkJCQkkLmRhdGVwaWNrZXIuX3Nob3dEYXRlcGlja2VyKCBpbnB1dFsgMCBdICk7DQoJCQkJfQ0KCQkJCXJldHVybiBmYWxzZTsNCgkJCX0gKTsNCgkJfQ0KCX0sDQoNCgkvKiBBcHBseSB0aGUgbWF4aW11bSBsZW5ndGggZm9yIHRoZSBkYXRlIGZvcm1hdC4gKi8NCglfYXV0b1NpemU6IGZ1bmN0aW9uKCBpbnN0ICkgew0KCQlpZiAoIHRoaXMuX2dldCggaW5zdCwgImF1dG9TaXplIiApICYmICFpbnN0LmlubGluZSApIHsNCgkJCXZhciBmaW5kTWF4LCBtYXgsIG1heEksIGksDQoJCQkJZGF0ZSA9IG5ldyBEYXRlKCAyMDA5LCAxMiAtIDEsIDIwICksIC8vIEVuc3VyZSBkb3VibGUgZGlnaXRzDQoJCQkJZGF0ZUZvcm1hdCA9IHRoaXMuX2dldCggaW5zdCwgImRhdGVGb3JtYXQiICk7DQoNCgkJCWlmICggZGF0ZUZvcm1hdC5tYXRjaCggL1tETV0vICkgKSB7DQoJCQkJZmluZE1heCA9IGZ1bmN0aW9uKCBuYW1lcyApIHsNCgkJCQkJbWF4ID0gMDsNCgkJCQkJbWF4SSA9IDA7DQoJCQkJCWZvciAoIGkgPSAwOyBpIDwgbmFtZXMubGVuZ3RoOyBpKysgKSB7DQoJCQkJCQlpZiAoIG5hbWVzWyBpIF0ubGVuZ3RoID4gbWF4ICkgew0KCQkJCQkJCW1heCA9IG5hbWVzWyBpIF0ubGVuZ3RoOw0KCQkJCQkJCW1heEkgPSBpOw0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJCXJldHVybiBtYXhJOw0KCQkJCX07DQoJCQkJZGF0ZS5zZXRNb250aCggZmluZE1heCggdGhpcy5fZ2V0KCBpbnN0LCAoIGRhdGVGb3JtYXQubWF0Y2goIC9NTS8gKSA\/DQoJCQkJCSJtb250aE5hbWVzIiA6ICJtb250aE5hbWVzU2hvcnQiICkgKSApICk7DQoJCQkJZGF0ZS5zZXREYXRlKCBmaW5kTWF4KCB0aGlzLl9nZXQoIGluc3QsICggZGF0ZUZvcm1hdC5tYXRjaCggL0RELyApID8NCgkJCQkJImRheU5hbWVzIiA6ICJkYXlOYW1lc1Nob3J0IiApICkgKSArIDIwIC0gZGF0ZS5nZXREYXkoKSApOw0KCQkJfQ0KCQkJaW5zdC5pbnB1dC5hdHRyKCAic2l6ZSIsIHRoaXMuX2Zvcm1hdERhdGUoIGluc3QsIGRhdGUgKS5sZW5ndGggKTsNCgkJfQ0KCX0sDQoNCgkvKiBBdHRhY2ggYW4gaW5saW5lIGRhdGUgcGlja2VyIHRvIGEgZGl2LiAqLw0KCV9pbmxpbmVEYXRlcGlja2VyOiBmdW5jdGlvbiggdGFyZ2V0LCBpbnN0ICkgew0KCQl2YXIgZGl2U3BhbiA9ICQoIHRhcmdldCApOw0KCQlpZiAoIGRpdlNwYW4uaGFzQ2xhc3MoIHRoaXMubWFya2VyQ2xhc3NOYW1lICkgKSB7DQoJCQlyZXR1cm47DQoJCX0NCgkJZGl2U3Bhbi5hZGRDbGFzcyggdGhpcy5tYXJrZXJDbGFzc05hbWUgKS5hcHBlbmQoIGluc3QuZHBEaXYgKTsNCgkJJC5kYXRhKCB0YXJnZXQsICJkYXRlcGlja2VyIiwgaW5zdCApOw0KCQl0aGlzLl9zZXREYXRlKCBpbnN0LCB0aGlzLl9nZXREZWZhdWx0RGF0ZSggaW5zdCApLCB0cnVlICk7DQoJCXRoaXMuX3VwZGF0ZURhdGVwaWNrZXIoIGluc3QgKTsNCgkJdGhpcy5fdXBkYXRlQWx0ZXJuYXRlKCBpbnN0ICk7DQoNCgkJLy9JZiBkaXNhYmxlZCBvcHRpb24gaXMgdHJ1ZSwgZGlzYWJsZSB0aGUgZGF0ZXBpY2tlciBiZWZvcmUgc2hvd2luZyBpdCAoc2VlIHRpY2tldCAjNTY2NSkNCgkJaWYgKCBpbnN0LnNldHRpbmdzLmRpc2FibGVkICkgew0KCQkJdGhpcy5fZGlzYWJsZURhdGVwaWNrZXIoIHRhcmdldCApOw0KCQl9DQoNCgkJLy8gU2V0IGRpc3BsYXk6YmxvY2sgaW4gcGxhY2Ugb2YgaW5zdC5kcERpdi5zaG93KCkgd2hpY2ggd29uJ3Qgd29yayBvbiBkaXNjb25uZWN0ZWQgZWxlbWVudHMNCgkJLy8gaHR0cDovL2J1Z3MuanF1ZXJ5dWkuY29tL3RpY2tldC83NTUyIC0gQSBEYXRlcGlja2VyIGNyZWF0ZWQgb24gYSBkZXRhY2hlZCBkaXYgaGFzIHplcm8gaGVpZ2h0DQoJCWluc3QuZHBEaXYuY3NzKCAiZGlzcGxheSIsICJibG9jayIgKTsNCgl9LA0KDQoJLyogUG9wLXVwIHRoZSBkYXRlIHBpY2tlciBpbiBhICJkaWFsb2ciIGJveC4NCgkgKiBAcGFyYW0gIGlucHV0IGVsZW1lbnQgLSBpZ25vcmVkDQoJICogQHBhcmFtICBkYXRlCXN0cmluZyBvciBEYXRlIC0gdGhlIGluaXRpYWwgZGF0ZSB0byBkaXNwbGF5DQoJICogQHBhcmFtICBvblNlbGVjdCAgZnVuY3Rpb24gLSB0aGUgZnVuY3Rpb24gdG8gY2FsbCB3aGVuIGEgZGF0ZSBpcyBzZWxlY3RlZA0KCSAqIEBwYXJhbSAgc2V0dGluZ3MgIG9iamVjdCAtIHVwZGF0ZSB0aGUgZGlhbG9nIGRhdGUgcGlja2VyIGluc3RhbmNlJ3Mgc2V0dGluZ3MgKGFub255bW91cyBvYmplY3QpDQoJICogQHBhcmFtICBwb3MgaW50WzJdIC0gY29vcmRpbmF0ZXMgZm9yIHRoZSBkaWFsb2cncyBwb3NpdGlvbiB3aXRoaW4gdGhlIHNjcmVlbiBvcg0KCSAqCQkJCQlldmVudCAtIHdpdGggeC95IGNvb3JkaW5hdGVzIG9yDQoJICoJCQkJCWxlYXZlIGVtcHR5IGZvciBkZWZhdWx0IChzY3JlZW4gY2VudHJlKQ0KCSAqIEByZXR1cm4gdGhlIG1hbmFnZXIgb2JqZWN0DQoJICovDQoJX2RpYWxvZ0RhdGVwaWNrZXI6IGZ1bmN0aW9uKCBpbnB1dCwgZGF0ZSwgb25TZWxlY3QsIHNldHRpbmdzLCBwb3MgKSB7DQoJCXZhciBpZCwgYnJvd3NlcldpZHRoLCBicm93c2VySGVpZ2h0LCBzY3JvbGxYLCBzY3JvbGxZLA0KCQkJaW5zdCA9IHRoaXMuX2RpYWxvZ0luc3Q7IC8vIGludGVybmFsIGluc3RhbmNlDQoNCgkJaWYgKCAhaW5zdCApIHsNCgkJCXRoaXMudXVpZCArPSAxOw0KCQkJaWQgPSAiZHAiICsgdGhpcy51dWlkOw0KCQkJdGhpcy5fZGlhbG9nSW5wdXQgPSAkKCAiPGlucHV0IHR5cGU9J3RleHQnIGlkPSciICsgaWQgKw0KCQkJCSInIHN0eWxlPSdwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogLTEwMHB4OyB3aWR0aDogMHB4OycvPiIgKTsNCgkJCXRoaXMuX2RpYWxvZ0lucHV0Lm9uKCAia2V5ZG93biIsIHRoaXMuX2RvS2V5RG93biApOw0KCQkJJCggImJvZHkiICkuYXBwZW5kKCB0aGlzLl9kaWFsb2dJbnB1dCApOw0KCQkJaW5zdCA9IHRoaXMuX2RpYWxvZ0luc3QgPSB0aGlzLl9uZXdJbnN0KCB0aGlzLl9kaWFsb2dJbnB1dCwgZmFsc2UgKTsNCgkJCWluc3Quc2V0dGluZ3MgPSB7fTsNCgkJCSQuZGF0YSggdGhpcy5fZGlhbG9nSW5wdXRbIDAgXSwgImRhdGVwaWNrZXIiLCBpbnN0ICk7DQoJCX0NCgkJZGF0ZXBpY2tlcl9leHRlbmRSZW1vdmUoIGluc3Quc2V0dGluZ3MsIHNldHRpbmdzIHx8IHt9ICk7DQoJCWRhdGUgPSAoIGRhdGUgJiYgZGF0ZS5jb25zdHJ1Y3RvciA9PT0gRGF0ZSA\/IHRoaXMuX2Zvcm1hdERhdGUoIGluc3QsIGRhdGUgKSA6IGRhdGUgKTsNCgkJdGhpcy5fZGlhbG9nSW5wdXQudmFsKCBkYXRlICk7DQoNCgkJdGhpcy5fcG9zID0gKCBwb3MgPyAoIHBvcy5sZW5ndGggPyBwb3MgOiBbIHBvcy5wYWdlWCwgcG9zLnBhZ2VZIF0gKSA6IG51bGwgKTsNCgkJaWYgKCAhdGhpcy5fcG9zICkgew0KCQkJYnJvd3NlcldpZHRoID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoOw0KCQkJYnJvd3NlckhlaWdodCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQ7DQoJCQlzY3JvbGxYID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnQgfHwgZG9jdW1lbnQuYm9keS5zY3JvbGxMZWZ0Ow0KCQkJc2Nyb2xsWSA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgfHwgZG9jdW1lbnQuYm9keS5zY3JvbGxUb3A7DQoJCQl0aGlzLl9wb3MgPSAvLyBzaG91bGQgdXNlIGFjdHVhbCB3aWR0aC9oZWlnaHQgYmVsb3cNCgkJCQlbICggYnJvd3NlcldpZHRoIC8gMiApIC0gMTAwICsgc2Nyb2xsWCwgKCBicm93c2VySGVpZ2h0IC8gMiApIC0gMTUwICsgc2Nyb2xsWSBdOw0KCQl9DQoNCgkJLy8gTW92ZSBpbnB1dCBvbiBzY3JlZW4gZm9yIGZvY3VzLCBidXQgaGlkZGVuIGJlaGluZCBkaWFsb2cNCgkJdGhpcy5fZGlhbG9nSW5wdXQuY3NzKCAibGVmdCIsICggdGhpcy5fcG9zWyAwIF0gKyAyMCApICsgInB4IiApLmNzcyggInRvcCIsIHRoaXMuX3Bvc1sgMSBdICsgInB4IiApOw0KCQlpbnN0LnNldHRpbmdzLm9uU2VsZWN0ID0gb25TZWxlY3Q7DQoJCXRoaXMuX2luRGlhbG9nID0gdHJ1ZTsNCgkJdGhpcy5kcERpdi5hZGRDbGFzcyggdGhpcy5fZGlhbG9nQ2xhc3MgKTsNCgkJdGhpcy5fc2hvd0RhdGVwaWNrZXIoIHRoaXMuX2RpYWxvZ0lucHV0WyAwIF0gKTsNCgkJaWYgKCAkLmJsb2NrVUkgKSB7DQoJCQkkLmJsb2NrVUkoIHRoaXMuZHBEaXYgKTsNCgkJfQ0KCQkkLmRhdGEoIHRoaXMuX2RpYWxvZ0lucHV0WyAwIF0sICJkYXRlcGlja2VyIiwgaW5zdCApOw0KCQlyZXR1cm4gdGhpczsNCgl9LA0KDQoJLyogRGV0YWNoIGEgZGF0ZXBpY2tlciBmcm9tIGl0cyBjb250cm9sLg0KCSAqIEBwYXJhbSAgdGFyZ2V0CWVsZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uIG9yIHNwYW4NCgkgKi8NCglfZGVzdHJveURhdGVwaWNrZXI6IGZ1bmN0aW9uKCB0YXJnZXQgKSB7DQoJCXZhciBub2RlTmFtZSwNCgkJCSR0YXJnZXQgPSAkKCB0YXJnZXQgKSwNCgkJCWluc3QgPSAkLmRhdGEoIHRhcmdldCwgImRhdGVwaWNrZXIiICk7DQoNCgkJaWYgKCAhJHRhcmdldC5oYXNDbGFzcyggdGhpcy5tYXJrZXJDbGFzc05hbWUgKSApIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCW5vZGVOYW1lID0gdGFyZ2V0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7DQoJCSQucmVtb3ZlRGF0YSggdGFyZ2V0LCAiZGF0ZXBpY2tlciIgKTsNCgkJaWYgKCBub2RlTmFtZSA9PT0gImlucHV0IiApIHsNCgkJCWluc3QuYXBwZW5kLnJlbW92ZSgpOw0KCQkJaW5zdC50cmlnZ2VyLnJlbW92ZSgpOw0KCQkJJHRhcmdldC5yZW1vdmVDbGFzcyggdGhpcy5tYXJrZXJDbGFzc05hbWUgKS4NCgkJCQlvZmYoICJmb2N1cyIsIHRoaXMuX3Nob3dEYXRlcGlja2VyICkuDQoJCQkJb2ZmKCAia2V5ZG93biIsIHRoaXMuX2RvS2V5RG93biApLg0KCQkJCW9mZiggImtleXByZXNzIiwgdGhpcy5fZG9LZXlQcmVzcyApLg0KCQkJCW9mZiggImtleXVwIiwgdGhpcy5fZG9LZXlVcCApOw0KCQl9IGVsc2UgaWYgKCBub2RlTmFtZSA9PT0gImRpdiIgfHwgbm9kZU5hbWUgPT09ICJzcGFuIiApIHsNCgkJCSR0YXJnZXQucmVtb3ZlQ2xhc3MoIHRoaXMubWFya2VyQ2xhc3NOYW1lICkuZW1wdHkoKTsNCgkJfQ0KDQoJCWlmICggZGF0ZXBpY2tlcl9pbnN0QWN0aXZlID09PSBpbnN0ICkgew0KCQkJZGF0ZXBpY2tlcl9pbnN0QWN0aXZlID0gbnVsbDsNCgkJfQ0KCX0sDQoNCgkvKiBFbmFibGUgdGhlIGRhdGUgcGlja2VyIHRvIGEgalF1ZXJ5IHNlbGVjdGlvbi4NCgkgKiBAcGFyYW0gIHRhcmdldAllbGVtZW50IC0gdGhlIHRhcmdldCBpbnB1dCBmaWVsZCBvciBkaXZpc2lvbiBvciBzcGFuDQoJICovDQoJX2VuYWJsZURhdGVwaWNrZXI6IGZ1bmN0aW9uKCB0YXJnZXQgKSB7DQoJCXZhciBub2RlTmFtZSwgaW5saW5lLA0KCQkJJHRhcmdldCA9ICQoIHRhcmdldCApLA0KCQkJaW5zdCA9ICQuZGF0YSggdGFyZ2V0LCAiZGF0ZXBpY2tlciIgKTsNCg0KCQlpZiAoICEkdGFyZ2V0Lmhhc0NsYXNzKCB0aGlzLm1hcmtlckNsYXNzTmFtZSApICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJbm9kZU5hbWUgPSB0YXJnZXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKTsNCgkJaWYgKCBub2RlTmFtZSA9PT0gImlucHV0IiApIHsNCgkJCXRhcmdldC5kaXNhYmxlZCA9IGZhbHNlOw0KCQkJaW5zdC50cmlnZ2VyLmZpbHRlciggImJ1dHRvbiIgKS4NCgkJCQllYWNoKCBmdW5jdGlvbigpIHsgdGhpcy5kaXNhYmxlZCA9IGZhbHNlOyB9ICkuZW5kKCkuDQoJCQkJZmlsdGVyKCAiaW1nIiApLmNzcyggeyBvcGFjaXR5OiAiMS4wIiwgY3Vyc29yOiAiIiB9ICk7DQoJCX0gZWxzZSBpZiAoIG5vZGVOYW1lID09PSAiZGl2IiB8fCBub2RlTmFtZSA9PT0gInNwYW4iICkgew0KCQkJaW5saW5lID0gJHRhcmdldC5jaGlsZHJlbiggIi4iICsgdGhpcy5faW5saW5lQ2xhc3MgKTsNCgkJCWlubGluZS5jaGlsZHJlbigpLnJlbW92ZUNsYXNzKCAidWktc3RhdGUtZGlzYWJsZWQiICk7DQoJCQlpbmxpbmUuZmluZCggInNlbGVjdC51aS1kYXRlcGlja2VyLW1vbnRoLCBzZWxlY3QudWktZGF0ZXBpY2tlci15ZWFyIiApLg0KCQkJCXByb3AoICJkaXNhYmxlZCIsIGZhbHNlICk7DQoJCX0NCgkJdGhpcy5fZGlzYWJsZWRJbnB1dHMgPSAkLm1hcCggdGhpcy5fZGlzYWJsZWRJbnB1dHMsDQoJCQlmdW5jdGlvbiggdmFsdWUgKSB7IHJldHVybiAoIHZhbHVlID09PSB0YXJnZXQgPyBudWxsIDogdmFsdWUgKTsgfSApOyAvLyBkZWxldGUgZW50cnkNCgl9LA0KDQoJLyogRGlzYWJsZSB0aGUgZGF0ZSBwaWNrZXIgdG8gYSBqUXVlcnkgc2VsZWN0aW9uLg0KCSAqIEBwYXJhbSAgdGFyZ2V0CWVsZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uIG9yIHNwYW4NCgkgKi8NCglfZGlzYWJsZURhdGVwaWNrZXI6IGZ1bmN0aW9uKCB0YXJnZXQgKSB7DQoJCXZhciBub2RlTmFtZSwgaW5saW5lLA0KCQkJJHRhcmdldCA9ICQoIHRhcmdldCApLA0KCQkJaW5zdCA9ICQuZGF0YSggdGFyZ2V0LCAiZGF0ZXBpY2tlciIgKTsNCg0KCQlpZiAoICEkdGFyZ2V0Lmhhc0NsYXNzKCB0aGlzLm1hcmtlckNsYXNzTmFtZSApICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJbm9kZU5hbWUgPSB0YXJnZXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKTsNCgkJaWYgKCBub2RlTmFtZSA9PT0gImlucHV0IiApIHsNCgkJCXRhcmdldC5kaXNhYmxlZCA9IHRydWU7DQoJCQlpbnN0LnRyaWdnZXIuZmlsdGVyKCAiYnV0dG9uIiApLg0KCQkJCWVhY2goIGZ1bmN0aW9uKCkgeyB0aGlzLmRpc2FibGVkID0gdHJ1ZTsgfSApLmVuZCgpLg0KCQkJCWZpbHRlciggImltZyIgKS5jc3MoIHsgb3BhY2l0eTogIjAuNSIsIGN1cnNvcjogImRlZmF1bHQiIH0gKTsNCgkJfSBlbHNlIGlmICggbm9kZU5hbWUgPT09ICJkaXYiIHx8IG5vZGVOYW1lID09PSAic3BhbiIgKSB7DQoJCQlpbmxpbmUgPSAkdGFyZ2V0LmNoaWxkcmVuKCAiLiIgKyB0aGlzLl9pbmxpbmVDbGFzcyApOw0KCQkJaW5saW5lLmNoaWxkcmVuKCkuYWRkQ2xhc3MoICJ1aS1zdGF0ZS1kaXNhYmxlZCIgKTsNCgkJCWlubGluZS5maW5kKCAic2VsZWN0LnVpLWRhdGVwaWNrZXItbW9udGgsIHNlbGVjdC51aS1kYXRlcGlja2VyLXllYXIiICkuDQoJCQkJcHJvcCggImRpc2FibGVkIiwgdHJ1ZSApOw0KCQl9DQoJCXRoaXMuX2Rpc2FibGVkSW5wdXRzID0gJC5tYXAoIHRoaXMuX2Rpc2FibGVkSW5wdXRzLA0KCQkJZnVuY3Rpb24oIHZhbHVlICkgeyByZXR1cm4gKCB2YWx1ZSA9PT0gdGFyZ2V0ID8gbnVsbCA6IHZhbHVlICk7IH0gKTsgLy8gZGVsZXRlIGVudHJ5DQoJCXRoaXMuX2Rpc2FibGVkSW5wdXRzWyB0aGlzLl9kaXNhYmxlZElucHV0cy5sZW5ndGggXSA9IHRhcmdldDsNCgl9LA0KDQoJLyogSXMgdGhlIGZpcnN0IGZpZWxkIGluIGEgalF1ZXJ5IGNvbGxlY3Rpb24gZGlzYWJsZWQgYXMgYSBkYXRlcGlja2VyPw0KCSAqIEBwYXJhbSAgdGFyZ2V0CWVsZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uIG9yIHNwYW4NCgkgKiBAcmV0dXJuIGJvb2xlYW4gLSB0cnVlIGlmIGRpc2FibGVkLCBmYWxzZSBpZiBlbmFibGVkDQoJICovDQoJX2lzRGlzYWJsZWREYXRlcGlja2VyOiBmdW5jdGlvbiggdGFyZ2V0ICkgew0KCQlpZiAoICF0YXJnZXQgKSB7DQoJCQlyZXR1cm4gZmFsc2U7DQoJCX0NCgkJZm9yICggdmFyIGkgPSAwOyBpIDwgdGhpcy5fZGlzYWJsZWRJbnB1dHMubGVuZ3RoOyBpKysgKSB7DQoJCQlpZiAoIHRoaXMuX2Rpc2FibGVkSW5wdXRzWyBpIF0gPT09IHRhcmdldCApIHsNCgkJCQlyZXR1cm4gdHJ1ZTsNCgkJCX0NCgkJfQ0KCQlyZXR1cm4gZmFsc2U7DQoJfSwNCg0KCS8qIFJldHJpZXZlIHRoZSBpbnN0YW5jZSBkYXRhIGZvciB0aGUgdGFyZ2V0IGNvbnRyb2wuDQoJICogQHBhcmFtICB0YXJnZXQgIGVsZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uIG9yIHNwYW4NCgkgKiBAcmV0dXJuICBvYmplY3QgLSB0aGUgYXNzb2NpYXRlZCBpbnN0YW5jZSBkYXRhDQoJICogQHRocm93cyAgZXJyb3IgaWYgYSBqUXVlcnkgcHJvYmxlbSBnZXR0aW5nIGRhdGENCgkgKi8NCglfZ2V0SW5zdDogZnVuY3Rpb24oIHRhcmdldCApIHsNCgkJdHJ5IHsNCgkJCXJldHVybiAkLmRhdGEoIHRhcmdldCwgImRhdGVwaWNrZXIiICk7DQoJCX0NCgkJY2F0Y2ggKCBlcnIgKSB7DQoJCQl0aHJvdyAiTWlzc2luZyBpbnN0YW5jZSBkYXRhIGZvciB0aGlzIGRhdGVwaWNrZXIiOw0KCQl9DQoJfSwNCg0KCS8qIFVwZGF0ZSBvciByZXRyaWV2ZSB0aGUgc2V0dGluZ3MgZm9yIGEgZGF0ZSBwaWNrZXIgYXR0YWNoZWQgdG8gYW4gaW5wdXQgZmllbGQgb3IgZGl2aXNpb24uDQoJICogQHBhcmFtICB0YXJnZXQgIGVsZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uIG9yIHNwYW4NCgkgKiBAcGFyYW0gIG5hbWUJb2JqZWN0IC0gdGhlIG5ldyBzZXR0aW5ncyB0byB1cGRhdGUgb3INCgkgKgkJCQlzdHJpbmcgLSB0aGUgbmFtZSBvZiB0aGUgc2V0dGluZyB0byBjaGFuZ2Ugb3IgcmV0cmlldmUsDQoJICoJCQkJd2hlbiByZXRyaWV2aW5nIGFsc28gImFsbCIgZm9yIGFsbCBpbnN0YW5jZSBzZXR0aW5ncyBvcg0KCSAqCQkJCSJkZWZhdWx0cyIgZm9yIGFsbCBnbG9iYWwgZGVmYXVsdHMNCgkgKiBAcGFyYW0gIHZhbHVlICAgYW55IC0gdGhlIG5ldyB2YWx1ZSBmb3IgdGhlIHNldHRpbmcNCgkgKgkJCQkob21pdCBpZiBhYm92ZSBpcyBhbiBvYmplY3Qgb3IgdG8gcmV0cmlldmUgYSB2YWx1ZSkNCgkgKi8NCglfb3B0aW9uRGF0ZXBpY2tlcjogZnVuY3Rpb24oIHRhcmdldCwgbmFtZSwgdmFsdWUgKSB7DQoJCXZhciBzZXR0aW5ncywgZGF0ZSwgbWluRGF0ZSwgbWF4RGF0ZSwNCgkJCWluc3QgPSB0aGlzLl9nZXRJbnN0KCB0YXJnZXQgKTsNCg0KCQlpZiAoIGFyZ3VtZW50cy5sZW5ndGggPT09IDIgJiYgdHlwZW9mIG5hbWUgPT09ICJzdHJpbmciICkgew0KCQkJcmV0dXJuICggbmFtZSA9PT0gImRlZmF1bHRzIiA\/ICQuZXh0ZW5kKCB7fSwgJC5kYXRlcGlja2VyLl9kZWZhdWx0cyApIDoNCgkJCQkoIGluc3QgPyAoIG5hbWUgPT09ICJhbGwiID8gJC5leHRlbmQoIHt9LCBpbnN0LnNldHRpbmdzICkgOg0KCQkJCXRoaXMuX2dldCggaW5zdCwgbmFtZSApICkgOiBudWxsICkgKTsNCgkJfQ0KDQoJCXNldHRpbmdzID0gbmFtZSB8fCB7fTsNCgkJaWYgKCB0eXBlb2YgbmFtZSA9PT0gInN0cmluZyIgKSB7DQoJCQlzZXR0aW5ncyA9IHt9Ow0KCQkJc2V0dGluZ3NbIG5hbWUgXSA9IHZhbHVlOw0KCQl9DQoNCgkJaWYgKCBpbnN0ICkgew0KCQkJaWYgKCB0aGlzLl9jdXJJbnN0ID09PSBpbnN0ICkgew0KCQkJCXRoaXMuX2hpZGVEYXRlcGlja2VyKCk7DQoJCQl9DQoNCgkJCWRhdGUgPSB0aGlzLl9nZXREYXRlRGF0ZXBpY2tlciggdGFyZ2V0LCB0cnVlICk7DQoJCQltaW5EYXRlID0gdGhpcy5fZ2V0TWluTWF4RGF0ZSggaW5zdCwgIm1pbiIgKTsNCgkJCW1heERhdGUgPSB0aGlzLl9nZXRNaW5NYXhEYXRlKCBpbnN0LCAibWF4IiApOw0KCQkJZGF0ZXBpY2tlcl9leHRlbmRSZW1vdmUoIGluc3Quc2V0dGluZ3MsIHNldHRpbmdzICk7DQoNCgkJCS8vIHJlZm9ybWF0IHRoZSBvbGQgbWluRGF0ZS9tYXhEYXRlIHZhbHVlcyBpZiBkYXRlRm9ybWF0IGNoYW5nZXMgYW5kIGEgbmV3IG1pbkRhdGUvbWF4RGF0ZSBpc24ndCBwcm92aWRlZA0KCQkJaWYgKCBtaW5EYXRlICE9PSBudWxsICYmIHNldHRpbmdzLmRhdGVGb3JtYXQgIT09IHVuZGVmaW5lZCAmJiBzZXR0aW5ncy5taW5EYXRlID09PSB1bmRlZmluZWQgKSB7DQoJCQkJaW5zdC5zZXR0aW5ncy5taW5EYXRlID0gdGhpcy5fZm9ybWF0RGF0ZSggaW5zdCwgbWluRGF0ZSApOw0KCQkJfQ0KCQkJaWYgKCBtYXhEYXRlICE9PSBudWxsICYmIHNldHRpbmdzLmRhdGVGb3JtYXQgIT09IHVuZGVmaW5lZCAmJiBzZXR0aW5ncy5tYXhEYXRlID09PSB1bmRlZmluZWQgKSB7DQoJCQkJaW5zdC5zZXR0aW5ncy5tYXhEYXRlID0gdGhpcy5fZm9ybWF0RGF0ZSggaW5zdCwgbWF4RGF0ZSApOw0KCQkJfQ0KCQkJaWYgKCAiZGlzYWJsZWQiIGluIHNldHRpbmdzICkgew0KCQkJCWlmICggc2V0dGluZ3MuZGlzYWJsZWQgKSB7DQoJCQkJCXRoaXMuX2Rpc2FibGVEYXRlcGlja2VyKCB0YXJnZXQgKTsNCgkJCQl9IGVsc2Ugew0KCQkJCQl0aGlzLl9lbmFibGVEYXRlcGlja2VyKCB0YXJnZXQgKTsNCgkJCQl9DQoJCQl9DQoJCQl0aGlzLl9hdHRhY2htZW50cyggJCggdGFyZ2V0ICksIGluc3QgKTsNCgkJCXRoaXMuX2F1dG9TaXplKCBpbnN0ICk7DQoJCQl0aGlzLl9zZXREYXRlKCBpbnN0LCBkYXRlICk7DQoJCQl0aGlzLl91cGRhdGVBbHRlcm5hdGUoIGluc3QgKTsNCgkJCXRoaXMuX3VwZGF0ZURhdGVwaWNrZXIoIGluc3QgKTsNCgkJfQ0KCX0sDQoNCgkvLyBDaGFuZ2UgbWV0aG9kIGRlcHJlY2F0ZWQNCglfY2hhbmdlRGF0ZXBpY2tlcjogZnVuY3Rpb24oIHRhcmdldCwgbmFtZSwgdmFsdWUgKSB7DQoJCXRoaXMuX29wdGlvbkRhdGVwaWNrZXIoIHRhcmdldCwgbmFtZSwgdmFsdWUgKTsNCgl9LA0KDQoJLyogUmVkcmF3IHRoZSBkYXRlIHBpY2tlciBhdHRhY2hlZCB0byBhbiBpbnB1dCBmaWVsZCBvciBkaXZpc2lvbi4NCgkgKiBAcGFyYW0gIHRhcmdldCAgZWxlbWVudCAtIHRoZSB0YXJnZXQgaW5wdXQgZmllbGQgb3IgZGl2aXNpb24gb3Igc3Bhbg0KCSAqLw0KCV9yZWZyZXNoRGF0ZXBpY2tlcjogZnVuY3Rpb24oIHRhcmdldCApIHsNCgkJdmFyIGluc3QgPSB0aGlzLl9nZXRJbnN0KCB0YXJnZXQgKTsNCgkJaWYgKCBpbnN0ICkgew0KCQkJdGhpcy5fdXBkYXRlRGF0ZXBpY2tlciggaW5zdCApOw0KCQl9DQoJfSwNCg0KCS8qIFNldCB0aGUgZGF0ZXMgZm9yIGEgalF1ZXJ5IHNlbGVjdGlvbi4NCgkgKiBAcGFyYW0gIHRhcmdldCBlbGVtZW50IC0gdGhlIHRhcmdldCBpbnB1dCBmaWVsZCBvciBkaXZpc2lvbiBvciBzcGFuDQoJICogQHBhcmFtICBkYXRlCURhdGUgLSB0aGUgbmV3IGRhdGUNCgkgKi8NCglfc2V0RGF0ZURhdGVwaWNrZXI6IGZ1bmN0aW9uKCB0YXJnZXQsIGRhdGUgKSB7DQoJCXZhciBpbnN0ID0gdGhpcy5fZ2V0SW5zdCggdGFyZ2V0ICk7DQoJCWlmICggaW5zdCApIHsNCgkJCXRoaXMuX3NldERhdGUoIGluc3QsIGRhdGUgKTsNCgkJCXRoaXMuX3VwZGF0ZURhdGVwaWNrZXIoIGluc3QgKTsNCgkJCXRoaXMuX3VwZGF0ZUFsdGVybmF0ZSggaW5zdCApOw0KCQl9DQoJfSwNCg0KCS8qIEdldCB0aGUgZGF0ZShzKSBmb3IgdGhlIGZpcnN0IGVudHJ5IGluIGEgalF1ZXJ5IHNlbGVjdGlvbi4NCgkgKiBAcGFyYW0gIHRhcmdldCBlbGVtZW50IC0gdGhlIHRhcmdldCBpbnB1dCBmaWVsZCBvciBkaXZpc2lvbiBvciBzcGFuDQoJICogQHBhcmFtICBub0RlZmF1bHQgYm9vbGVhbiAtIHRydWUgaWYgbm8gZGVmYXVsdCBkYXRlIGlzIHRvIGJlIHVzZWQNCgkgKiBAcmV0dXJuIERhdGUgLSB0aGUgY3VycmVudCBkYXRlDQoJICovDQoJX2dldERhdGVEYXRlcGlja2VyOiBmdW5jdGlvbiggdGFyZ2V0LCBub0RlZmF1bHQgKSB7DQoJCXZhciBpbnN0ID0gdGhpcy5fZ2V0SW5zdCggdGFyZ2V0ICk7DQoJCWlmICggaW5zdCAmJiAhaW5zdC5pbmxpbmUgKSB7DQoJCQl0aGlzLl9zZXREYXRlRnJvbUZpZWxkKCBpbnN0LCBub0RlZmF1bHQgKTsNCgkJfQ0KCQlyZXR1cm4gKCBpbnN0ID8gdGhpcy5fZ2V0RGF0ZSggaW5zdCApIDogbnVsbCApOw0KCX0sDQoNCgkvKiBIYW5kbGUga2V5c3Ryb2tlcy4gKi8NCglfZG9LZXlEb3duOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCXZhciBvblNlbGVjdCwgZGF0ZVN0ciwgc2VsLA0KCQkJaW5zdCA9ICQuZGF0ZXBpY2tlci5fZ2V0SW5zdCggZXZlbnQudGFyZ2V0ICksDQoJCQloYW5kbGVkID0gdHJ1ZSwNCgkJCWlzUlRMID0gaW5zdC5kcERpdi5pcyggIi51aS1kYXRlcGlja2VyLXJ0bCIgKTsNCg0KCQlpbnN0Ll9rZXlFdmVudCA9IHRydWU7DQoJCWlmICggJC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZyApIHsNCgkJCXN3aXRjaCAoIGV2ZW50LmtleUNvZGUgKSB7DQoJCQkJY2FzZSA5OiAkLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCk7DQoJCQkJCQloYW5kbGVkID0gZmFsc2U7DQoJCQkJCQlicmVhazsgLy8gaGlkZSBvbiB0YWIgb3V0DQoJCQkJY2FzZSAxMzogc2VsID0gJCggInRkLiIgKyAkLmRhdGVwaWNrZXIuX2RheU92ZXJDbGFzcyArICI6bm90KC4iICsNCgkJCQkJCQkJCSQuZGF0ZXBpY2tlci5fY3VycmVudENsYXNzICsgIikiLCBpbnN0LmRwRGl2ICk7DQoJCQkJCQlpZiAoIHNlbFsgMCBdICkgew0KCQkJCQkJCSQuZGF0ZXBpY2tlci5fc2VsZWN0RGF5KCBldmVudC50YXJnZXQsIGluc3Quc2VsZWN0ZWRNb250aCwgaW5zdC5zZWxlY3RlZFllYXIsIHNlbFsgMCBdICk7DQoJCQkJCQl9DQoNCgkJCQkJCW9uU2VsZWN0ID0gJC5kYXRlcGlja2VyLl9nZXQoIGluc3QsICJvblNlbGVjdCIgKTsNCgkJCQkJCWlmICggb25TZWxlY3QgKSB7DQoJCQkJCQkJZGF0ZVN0ciA9ICQuZGF0ZXBpY2tlci5fZm9ybWF0RGF0ZSggaW5zdCApOw0KDQoJCQkJCQkJLy8gVHJpZ2dlciBjdXN0b20gY2FsbGJhY2sNCgkJCQkJCQlvblNlbGVjdC5hcHBseSggKCBpbnN0LmlucHV0ID8gaW5zdC5pbnB1dFsgMCBdIDogbnVsbCApLCBbIGRhdGVTdHIsIGluc3QgXSApOw0KCQkJCQkJfSBlbHNlIHsNCgkJCQkJCQkkLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCk7DQoJCQkJCQl9DQoNCgkJCQkJCXJldHVybiBmYWxzZTsgLy8gZG9uJ3Qgc3VibWl0IHRoZSBmb3JtDQoJCQkJY2FzZSAyNzogJC5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlcigpOw0KCQkJCQkJYnJlYWs7IC8vIGhpZGUgb24gZXNjYXBlDQoJCQkJY2FzZSAzMzogJC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKCBldmVudC50YXJnZXQsICggZXZlbnQuY3RybEtleSA\/DQoJCQkJCQkJLSQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAic3RlcEJpZ01vbnRocyIgKSA6DQoJCQkJCQkJLSQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAic3RlcE1vbnRocyIgKSApLCAiTSIgKTsNCgkJCQkJCWJyZWFrOyAvLyBwcmV2aW91cyBtb250aC95ZWFyIG9uIHBhZ2UgdXAvKyBjdHJsDQoJCQkJY2FzZSAzNDogJC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKCBldmVudC50YXJnZXQsICggZXZlbnQuY3RybEtleSA\/DQoJCQkJCQkJKyQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAic3RlcEJpZ01vbnRocyIgKSA6DQoJCQkJCQkJKyQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAic3RlcE1vbnRocyIgKSApLCAiTSIgKTsNCgkJCQkJCWJyZWFrOyAvLyBuZXh0IG1vbnRoL3llYXIgb24gcGFnZSBkb3duLysgY3RybA0KCQkJCWNhc2UgMzU6IGlmICggZXZlbnQuY3RybEtleSB8fCBldmVudC5tZXRhS2V5ICkgew0KCQkJCQkJCSQuZGF0ZXBpY2tlci5fY2xlYXJEYXRlKCBldmVudC50YXJnZXQgKTsNCgkJCQkJCX0NCgkJCQkJCWhhbmRsZWQgPSBldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXk7DQoJCQkJCQlicmVhazsgLy8gY2xlYXIgb24gY3RybCBvciBjb21tYW5kICtlbmQNCgkJCQljYXNlIDM2OiBpZiAoIGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleSApIHsNCgkJCQkJCQkkLmRhdGVwaWNrZXIuX2dvdG9Ub2RheSggZXZlbnQudGFyZ2V0ICk7DQoJCQkJCQl9DQoJCQkJCQloYW5kbGVkID0gZXZlbnQuY3RybEtleSB8fCBldmVudC5tZXRhS2V5Ow0KCQkJCQkJYnJlYWs7IC8vIGN1cnJlbnQgb24gY3RybCBvciBjb21tYW5kICtob21lDQoJCQkJY2FzZSAzNzogaWYgKCBldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXkgKSB7DQoJCQkJCQkJJC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKCBldmVudC50YXJnZXQsICggaXNSVEwgPyArMSA6IC0xICksICJEIiApOw0KCQkJCQkJfQ0KCQkJCQkJaGFuZGxlZCA9IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleTsNCg0KCQkJCQkJLy8gLTEgZGF5IG9uIGN0cmwgb3IgY29tbWFuZCArbGVmdA0KCQkJCQkJaWYgKCBldmVudC5vcmlnaW5hbEV2ZW50LmFsdEtleSApIHsNCgkJCQkJCQkkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoIGV2ZW50LnRhcmdldCwgKCBldmVudC5jdHJsS2V5ID8NCgkJCQkJCQkJLSQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAic3RlcEJpZ01vbnRocyIgKSA6DQoJCQkJCQkJCS0kLmRhdGVwaWNrZXIuX2dldCggaW5zdCwgInN0ZXBNb250aHMiICkgKSwgIk0iICk7DQoJCQkJCQl9DQoNCgkJCQkJCS8vIG5leHQgbW9udGgveWVhciBvbiBhbHQgK2xlZnQgb24gTWFjDQoJCQkJCQlicmVhazsNCgkJCQljYXNlIDM4OiBpZiAoIGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleSApIHsNCgkJCQkJCQkkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoIGV2ZW50LnRhcmdldCwgLTcsICJEIiApOw0KCQkJCQkJfQ0KCQkJCQkJaGFuZGxlZCA9IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleTsNCgkJCQkJCWJyZWFrOyAvLyAtMSB3ZWVrIG9uIGN0cmwgb3IgY29tbWFuZCArdXANCgkJCQljYXNlIDM5OiBpZiAoIGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleSApIHsNCgkJCQkJCQkkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoIGV2ZW50LnRhcmdldCwgKCBpc1JUTCA\/IC0xIDogKzEgKSwgIkQiICk7DQoJCQkJCQl9DQoJCQkJCQloYW5kbGVkID0gZXZlbnQuY3RybEtleSB8fCBldmVudC5tZXRhS2V5Ow0KDQoJCQkJCQkvLyArMSBkYXkgb24gY3RybCBvciBjb21tYW5kICtyaWdodA0KCQkJCQkJaWYgKCBldmVudC5vcmlnaW5hbEV2ZW50LmFsdEtleSApIHsNCgkJCQkJCQkkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoIGV2ZW50LnRhcmdldCwgKCBldmVudC5jdHJsS2V5ID8NCgkJCQkJCQkJKyQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAic3RlcEJpZ01vbnRocyIgKSA6DQoJCQkJCQkJCSskLmRhdGVwaWNrZXIuX2dldCggaW5zdCwgInN0ZXBNb250aHMiICkgKSwgIk0iICk7DQoJCQkJCQl9DQoNCgkJCQkJCS8vIG5leHQgbW9udGgveWVhciBvbiBhbHQgK3JpZ2h0DQoJCQkJCQlicmVhazsNCgkJCQljYXNlIDQwOiBpZiAoIGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleSApIHsNCgkJCQkJCQkkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoIGV2ZW50LnRhcmdldCwgKzcsICJEIiApOw0KCQkJCQkJfQ0KCQkJCQkJaGFuZGxlZCA9IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleTsNCgkJCQkJCWJyZWFrOyAvLyArMSB3ZWVrIG9uIGN0cmwgb3IgY29tbWFuZCArZG93bg0KCQkJCWRlZmF1bHQ6IGhhbmRsZWQgPSBmYWxzZTsNCgkJCX0NCgkJfSBlbHNlIGlmICggZXZlbnQua2V5Q29kZSA9PT0gMzYgJiYgZXZlbnQuY3RybEtleSApIHsgLy8gZGlzcGxheSB0aGUgZGF0ZSBwaWNrZXIgb24gY3RybCtob21lDQoJCQkkLmRhdGVwaWNrZXIuX3Nob3dEYXRlcGlja2VyKCB0aGlzICk7DQoJCX0gZWxzZSB7DQoJCQloYW5kbGVkID0gZmFsc2U7DQoJCX0NCg0KCQlpZiAoIGhhbmRsZWQgKSB7DQoJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOw0KCQkJZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7DQoJCX0NCgl9LA0KDQoJLyogRmlsdGVyIGVudGVyZWQgY2hhcmFjdGVycyAtIGJhc2VkIG9uIGRhdGUgZm9ybWF0LiAqLw0KCV9kb0tleVByZXNzOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCXZhciBjaGFycywgY2hyLA0KCQkJaW5zdCA9ICQuZGF0ZXBpY2tlci5fZ2V0SW5zdCggZXZlbnQudGFyZ2V0ICk7DQoNCgkJaWYgKCAkLmRhdGVwaWNrZXIuX2dldCggaW5zdCwgImNvbnN0cmFpbklucHV0IiApICkgew0KCQkJY2hhcnMgPSAkLmRhdGVwaWNrZXIuX3Bvc3NpYmxlQ2hhcnMoICQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAiZGF0ZUZvcm1hdCIgKSApOw0KCQkJY2hyID0gU3RyaW5nLmZyb21DaGFyQ29kZSggZXZlbnQuY2hhckNvZGUgPT0gbnVsbCA\/IGV2ZW50LmtleUNvZGUgOiBldmVudC5jaGFyQ29kZSApOw0KCQkJcmV0dXJuIGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleSB8fCAoIGNociA8ICIgIiB8fCAhY2hhcnMgfHwgY2hhcnMuaW5kZXhPZiggY2hyICkgPiAtMSApOw0KCQl9DQoJfSwNCg0KCS8qIFN5bmNocm9uaXNlIG1hbnVhbCBlbnRyeSBhbmQgZmllbGQvYWx0ZXJuYXRlIGZpZWxkLiAqLw0KCV9kb0tleVVwOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCXZhciBkYXRlLA0KCQkJaW5zdCA9ICQuZGF0ZXBpY2tlci5fZ2V0SW5zdCggZXZlbnQudGFyZ2V0ICk7DQoNCgkJaWYgKCBpbnN0LmlucHV0LnZhbCgpICE9PSBpbnN0Lmxhc3RWYWwgKSB7DQoJCQl0cnkgew0KCQkJCWRhdGUgPSAkLmRhdGVwaWNrZXIucGFyc2VEYXRlKCAkLmRhdGVwaWNrZXIuX2dldCggaW5zdCwgImRhdGVGb3JtYXQiICksDQoJCQkJCSggaW5zdC5pbnB1dCA\/IGluc3QuaW5wdXQudmFsKCkgOiBudWxsICksDQoJCQkJCSQuZGF0ZXBpY2tlci5fZ2V0Rm9ybWF0Q29uZmlnKCBpbnN0ICkgKTsNCg0KCQkJCWlmICggZGF0ZSApIHsgLy8gb25seSBpZiB2YWxpZA0KCQkJCQkkLmRhdGVwaWNrZXIuX3NldERhdGVGcm9tRmllbGQoIGluc3QgKTsNCgkJCQkJJC5kYXRlcGlja2VyLl91cGRhdGVBbHRlcm5hdGUoIGluc3QgKTsNCgkJCQkJJC5kYXRlcGlja2VyLl91cGRhdGVEYXRlcGlja2VyKCBpbnN0ICk7DQoJCQkJfQ0KCQkJfQ0KCQkJY2F0Y2ggKCBlcnIgKSB7DQoJCQl9DQoJCX0NCgkJcmV0dXJuIHRydWU7DQoJfSwNCg0KCS8qIFBvcC11cCB0aGUgZGF0ZSBwaWNrZXIgZm9yIGEgZ2l2ZW4gaW5wdXQgZmllbGQuDQoJICogSWYgZmFsc2UgcmV0dXJuZWQgZnJvbSBiZWZvcmVTaG93IGV2ZW50IGhhbmRsZXIgZG8gbm90IHNob3cuDQoJICogQHBhcmFtICBpbnB1dCAgZWxlbWVudCAtIHRoZSBpbnB1dCBmaWVsZCBhdHRhY2hlZCB0byB0aGUgZGF0ZSBwaWNrZXIgb3INCgkgKgkJCQkJZXZlbnQgLSBpZiB0cmlnZ2VyZWQgYnkgZm9jdXMNCgkgKi8NCglfc2hvd0RhdGVwaWNrZXI6IGZ1bmN0aW9uKCBpbnB1dCApIHsNCgkJaW5wdXQgPSBpbnB1dC50YXJnZXQgfHwgaW5wdXQ7DQoJCWlmICggaW5wdXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSAhPT0gImlucHV0IiApIHsgLy8gZmluZCBmcm9tIGJ1dHRvbi9pbWFnZSB0cmlnZ2VyDQoJCQlpbnB1dCA9ICQoICJpbnB1dCIsIGlucHV0LnBhcmVudE5vZGUgKVsgMCBdOw0KCQl9DQoNCgkJaWYgKCAkLmRhdGVwaWNrZXIuX2lzRGlzYWJsZWREYXRlcGlja2VyKCBpbnB1dCApIHx8ICQuZGF0ZXBpY2tlci5fbGFzdElucHV0ID09PSBpbnB1dCApIHsgLy8gYWxyZWFkeSBoZXJlDQoJCQlyZXR1cm47DQoJCX0NCg0KCQl2YXIgaW5zdCwgYmVmb3JlU2hvdywgYmVmb3JlU2hvd1NldHRpbmdzLCBpc0ZpeGVkLA0KCQkJb2Zmc2V0LCBzaG93QW5pbSwgZHVyYXRpb247DQoNCgkJaW5zdCA9ICQuZGF0ZXBpY2tlci5fZ2V0SW5zdCggaW5wdXQgKTsNCgkJaWYgKCAkLmRhdGVwaWNrZXIuX2N1ckluc3QgJiYgJC5kYXRlcGlja2VyLl9jdXJJbnN0ICE9PSBpbnN0ICkgew0KCQkJJC5kYXRlcGlja2VyLl9jdXJJbnN0LmRwRGl2LnN0b3AoIHRydWUsIHRydWUgKTsNCgkJCWlmICggaW5zdCAmJiAkLmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nICkgew0KCQkJCSQuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIoICQuZGF0ZXBpY2tlci5fY3VySW5zdC5pbnB1dFsgMCBdICk7DQoJCQl9DQoJCX0NCg0KCQliZWZvcmVTaG93ID0gJC5kYXRlcGlja2VyLl9nZXQoIGluc3QsICJiZWZvcmVTaG93IiApOw0KCQliZWZvcmVTaG93U2V0dGluZ3MgPSBiZWZvcmVTaG93ID8gYmVmb3JlU2hvdy5hcHBseSggaW5wdXQsIFsgaW5wdXQsIGluc3QgXSApIDoge307DQoJCWlmICggYmVmb3JlU2hvd1NldHRpbmdzID09PSBmYWxzZSApIHsNCgkJCXJldHVybjsNCgkJfQ0KCQlkYXRlcGlja2VyX2V4dGVuZFJlbW92ZSggaW5zdC5zZXR0aW5ncywgYmVmb3JlU2hvd1NldHRpbmdzICk7DQoNCgkJaW5zdC5sYXN0VmFsID0gbnVsbDsNCgkJJC5kYXRlcGlja2VyLl9sYXN0SW5wdXQgPSBpbnB1dDsNCgkJJC5kYXRlcGlja2VyLl9zZXREYXRlRnJvbUZpZWxkKCBpbnN0ICk7DQoNCgkJaWYgKCAkLmRhdGVwaWNrZXIuX2luRGlhbG9nICkgeyAvLyBoaWRlIGN1cnNvcg0KCQkJaW5wdXQudmFsdWUgPSAiIjsNCgkJfQ0KCQlpZiAoICEkLmRhdGVwaWNrZXIuX3BvcyApIHsgLy8gcG9zaXRpb24gYmVsb3cgaW5wdXQNCgkJCSQuZGF0ZXBpY2tlci5fcG9zID0gJC5kYXRlcGlja2VyLl9maW5kUG9zKCBpbnB1dCApOw0KCQkJJC5kYXRlcGlja2VyLl9wb3NbIDEgXSArPSBpbnB1dC5vZmZzZXRIZWlnaHQ7IC8vIGFkZCB0aGUgaGVpZ2h0DQoJCX0NCg0KCQlpc0ZpeGVkID0gZmFsc2U7DQoJCSQoIGlucHV0ICkucGFyZW50cygpLmVhY2goIGZ1bmN0aW9uKCkgew0KCQkJaXNGaXhlZCB8PSAkKCB0aGlzICkuY3NzKCAicG9zaXRpb24iICkgPT09ICJmaXhlZCI7DQoJCQlyZXR1cm4gIWlzRml4ZWQ7DQoJCX0gKTsNCg0KCQlvZmZzZXQgPSB7IGxlZnQ6ICQuZGF0ZXBpY2tlci5fcG9zWyAwIF0sIHRvcDogJC5kYXRlcGlja2VyLl9wb3NbIDEgXSB9Ow0KCQkkLmRhdGVwaWNrZXIuX3BvcyA9IG51bGw7DQoNCgkJLy90byBhdm9pZCBmbGFzaGVzIG9uIEZpcmVmb3gNCgkJaW5zdC5kcERpdi5lbXB0eSgpOw0KDQoJCS8vIGRldGVybWluZSBzaXppbmcgb2Zmc2NyZWVuDQoJCWluc3QuZHBEaXYuY3NzKCB7IHBvc2l0aW9uOiAiYWJzb2x1dGUiLCBkaXNwbGF5OiAiYmxvY2siLCB0b3A6ICItMTAwMHB4IiB9ICk7DQoJCSQuZGF0ZXBpY2tlci5fdXBkYXRlRGF0ZXBpY2tlciggaW5zdCApOw0KDQoJCS8vIGZpeCB3aWR0aCBmb3IgZHluYW1pYyBudW1iZXIgb2YgZGF0ZSBwaWNrZXJzDQoJCS8vIGFuZCBhZGp1c3QgcG9zaXRpb24gYmVmb3JlIHNob3dpbmcNCgkJb2Zmc2V0ID0gJC5kYXRlcGlja2VyLl9jaGVja09mZnNldCggaW5zdCwgb2Zmc2V0LCBpc0ZpeGVkICk7DQoJCWluc3QuZHBEaXYuY3NzKCB7IHBvc2l0aW9uOiAoICQuZGF0ZXBpY2tlci5faW5EaWFsb2cgJiYgJC5ibG9ja1VJID8NCgkJCSJzdGF0aWMiIDogKCBpc0ZpeGVkID8gImZpeGVkIiA6ICJhYnNvbHV0ZSIgKSApLCBkaXNwbGF5OiAibm9uZSIsDQoJCQlsZWZ0OiBvZmZzZXQubGVmdCArICJweCIsIHRvcDogb2Zmc2V0LnRvcCArICJweCIgfSApOw0KDQoJCWlmICggIWluc3QuaW5saW5lICkgew0KCQkJc2hvd0FuaW0gPSAkLmRhdGVwaWNrZXIuX2dldCggaW5zdCwgInNob3dBbmltIiApOw0KCQkJZHVyYXRpb24gPSAkLmRhdGVwaWNrZXIuX2dldCggaW5zdCwgImR1cmF0aW9uIiApOw0KCQkJaW5zdC5kcERpdi5jc3MoICJ6LWluZGV4IiwgZGF0ZXBpY2tlcl9nZXRaaW5kZXgoICQoIGlucHV0ICkgKSArIDEgKTsNCgkJCSQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcgPSB0cnVlOw0KDQoJCQlpZiAoICQuZWZmZWN0cyAmJiAkLmVmZmVjdHMuZWZmZWN0WyBzaG93QW5pbSBdICkgew0KCQkJCWluc3QuZHBEaXYuc2hvdyggc2hvd0FuaW0sICQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAic2hvd09wdGlvbnMiICksIGR1cmF0aW9uICk7DQoJCQl9IGVsc2Ugew0KCQkJCWluc3QuZHBEaXZbIHNob3dBbmltIHx8ICJzaG93IiBdKCBzaG93QW5pbSA\/IGR1cmF0aW9uIDogbnVsbCApOw0KCQkJfQ0KDQoJCQlpZiAoICQuZGF0ZXBpY2tlci5fc2hvdWxkRm9jdXNJbnB1dCggaW5zdCApICkgew0KCQkJCWluc3QuaW5wdXQudHJpZ2dlciggImZvY3VzIiApOw0KCQkJfQ0KDQoJCQkkLmRhdGVwaWNrZXIuX2N1ckluc3QgPSBpbnN0Ow0KCQl9DQoJfSwNCg0KCS8qIEdlbmVyYXRlIHRoZSBkYXRlIHBpY2tlciBjb250ZW50LiAqLw0KCV91cGRhdGVEYXRlcGlja2VyOiBmdW5jdGlvbiggaW5zdCApIHsNCgkJdGhpcy5tYXhSb3dzID0gNDsgLy9SZXNldCB0aGUgbWF4IG51bWJlciBvZiByb3dzIGJlaW5nIGRpc3BsYXllZCAoc2VlICM3MDQzKQ0KCQlkYXRlcGlja2VyX2luc3RBY3RpdmUgPSBpbnN0OyAvLyBmb3IgZGVsZWdhdGUgaG92ZXIgZXZlbnRzDQoJCWluc3QuZHBEaXYuZW1wdHkoKS5hcHBlbmQoIHRoaXMuX2dlbmVyYXRlSFRNTCggaW5zdCApICk7DQoJCXRoaXMuX2F0dGFjaEhhbmRsZXJzKCBpbnN0ICk7DQoNCgkJdmFyIG9yaWd5ZWFyc2h0bWwsDQoJCQludW1Nb250aHMgPSB0aGlzLl9nZXROdW1iZXJPZk1vbnRocyggaW5zdCApLA0KCQkJY29scyA9IG51bU1vbnRoc1sgMSBdLA0KCQkJd2lkdGggPSAxNywNCgkJCWFjdGl2ZUNlbGwgPSBpbnN0LmRwRGl2LmZpbmQoICIuIiArIHRoaXMuX2RheU92ZXJDbGFzcyArICIgYSIgKTsNCg0KCQlpZiAoIGFjdGl2ZUNlbGwubGVuZ3RoID4gMCApIHsNCgkJCWRhdGVwaWNrZXJfaGFuZGxlTW91c2VvdmVyLmFwcGx5KCBhY3RpdmVDZWxsLmdldCggMCApICk7DQoJCX0NCg0KCQlpbnN0LmRwRGl2LnJlbW92ZUNsYXNzKCAidWktZGF0ZXBpY2tlci1tdWx0aS0yIHVpLWRhdGVwaWNrZXItbXVsdGktMyB1aS1kYXRlcGlja2VyLW11bHRpLTQiICkud2lkdGgoICIiICk7DQoJCWlmICggY29scyA+IDEgKSB7DQoJCQlpbnN0LmRwRGl2LmFkZENsYXNzKCAidWktZGF0ZXBpY2tlci1tdWx0aS0iICsgY29scyApLmNzcyggIndpZHRoIiwgKCB3aWR0aCAqIGNvbHMgKSArICJlbSIgKTsNCgkJfQ0KCQlpbnN0LmRwRGl2WyAoIG51bU1vbnRoc1sgMCBdICE9PSAxIHx8IG51bU1vbnRoc1sgMSBdICE9PSAxID8gImFkZCIgOiAicmVtb3ZlIiApICsNCgkJCSJDbGFzcyIgXSggInVpLWRhdGVwaWNrZXItbXVsdGkiICk7DQoJCWluc3QuZHBEaXZbICggdGhpcy5fZ2V0KCBpbnN0LCAiaXNSVEwiICkgPyAiYWRkIiA6ICJyZW1vdmUiICkgKw0KCQkJIkNsYXNzIiBdKCAidWktZGF0ZXBpY2tlci1ydGwiICk7DQoNCgkJaWYgKCBpbnN0ID09PSAkLmRhdGVwaWNrZXIuX2N1ckluc3QgJiYgJC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZyAmJiAkLmRhdGVwaWNrZXIuX3Nob3VsZEZvY3VzSW5wdXQoIGluc3QgKSApIHsNCgkJCWluc3QuaW5wdXQudHJpZ2dlciggImZvY3VzIiApOw0KCQl9DQoNCgkJLy8gRGVmZmVyZWQgcmVuZGVyIG9mIHRoZSB5ZWFycyBzZWxlY3QgKHRvIGF2b2lkIGZsYXNoZXMgb24gRmlyZWZveCkNCgkJaWYgKCBpbnN0LnllYXJzaHRtbCApIHsNCgkJCW9yaWd5ZWFyc2h0bWwgPSBpbnN0LnllYXJzaHRtbDsNCgkJCXNldFRpbWVvdXQoIGZ1bmN0aW9uKCkgew0KDQoJCQkJLy9hc3N1cmUgdGhhdCBpbnN0LnllYXJzaHRtbCBkaWRuJ3QgY2hhbmdlLg0KCQkJCWlmICggb3JpZ3llYXJzaHRtbCA9PT0gaW5zdC55ZWFyc2h0bWwgJiYgaW5zdC55ZWFyc2h0bWwgKSB7DQoJCQkJCWluc3QuZHBEaXYuZmluZCggInNlbGVjdC51aS1kYXRlcGlja2VyLXllYXI6Zmlyc3QiICkucmVwbGFjZVdpdGgoIGluc3QueWVhcnNodG1sICk7DQoJCQkJfQ0KCQkJCW9yaWd5ZWFyc2h0bWwgPSBpbnN0LnllYXJzaHRtbCA9IG51bGw7DQoJCQl9LCAwICk7DQoJCX0NCgl9LA0KDQoJLy8gIzY2OTQgLSBkb24ndCBmb2N1cyB0aGUgaW5wdXQgaWYgaXQncyBhbHJlYWR5IGZvY3VzZWQNCgkvLyB0aGlzIGJyZWFrcyB0aGUgY2hhbmdlIGV2ZW50IGluIElFDQoJLy8gU3VwcG9ydDogSUUgYW5kIGpRdWVyeSA8MS45DQoJX3Nob3VsZEZvY3VzSW5wdXQ6IGZ1bmN0aW9uKCBpbnN0ICkgew0KCQlyZXR1cm4gaW5zdC5pbnB1dCAmJiBpbnN0LmlucHV0LmlzKCAiOnZpc2libGUiICkgJiYgIWluc3QuaW5wdXQuaXMoICI6ZGlzYWJsZWQiICkgJiYgIWluc3QuaW5wdXQuaXMoICI6Zm9jdXMiICk7DQoJfSwNCg0KCS8qIENoZWNrIHBvc2l0aW9uaW5nIHRvIHJlbWFpbiBvbiBzY3JlZW4uICovDQoJX2NoZWNrT2Zmc2V0OiBmdW5jdGlvbiggaW5zdCwgb2Zmc2V0LCBpc0ZpeGVkICkgew0KCQl2YXIgZHBXaWR0aCA9IGluc3QuZHBEaXYub3V0ZXJXaWR0aCgpLA0KCQkJZHBIZWlnaHQgPSBpbnN0LmRwRGl2Lm91dGVySGVpZ2h0KCksDQoJCQlpbnB1dFdpZHRoID0gaW5zdC5pbnB1dCA\/IGluc3QuaW5wdXQub3V0ZXJXaWR0aCgpIDogMCwNCgkJCWlucHV0SGVpZ2h0ID0gaW5zdC5pbnB1dCA\/IGluc3QuaW5wdXQub3V0ZXJIZWlnaHQoKSA6IDAsDQoJCQl2aWV3V2lkdGggPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGggKyAoIGlzRml4ZWQgPyAwIDogJCggZG9jdW1lbnQgKS5zY3JvbGxMZWZ0KCkgKSwNCgkJCXZpZXdIZWlnaHQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0ICsgKCBpc0ZpeGVkID8gMCA6ICQoIGRvY3VtZW50ICkuc2Nyb2xsVG9wKCkgKTsNCg0KCQlvZmZzZXQubGVmdCAtPSAoIHRoaXMuX2dldCggaW5zdCwgImlzUlRMIiApID8gKCBkcFdpZHRoIC0gaW5wdXRXaWR0aCApIDogMCApOw0KCQlvZmZzZXQubGVmdCAtPSAoIGlzRml4ZWQgJiYgb2Zmc2V0LmxlZnQgPT09IGluc3QuaW5wdXQub2Zmc2V0KCkubGVmdCApID8gJCggZG9jdW1lbnQgKS5zY3JvbGxMZWZ0KCkgOiAwOw0KCQlvZmZzZXQudG9wIC09ICggaXNGaXhlZCAmJiBvZmZzZXQudG9wID09PSAoIGluc3QuaW5wdXQub2Zmc2V0KCkudG9wICsgaW5wdXRIZWlnaHQgKSApID8gJCggZG9jdW1lbnQgKS5zY3JvbGxUb3AoKSA6IDA7DQoNCgkJLy8gTm93IGNoZWNrIGlmIGRhdGVwaWNrZXIgaXMgc2hvd2luZyBvdXRzaWRlIHdpbmRvdyB2aWV3cG9ydCAtIG1vdmUgdG8gYSBiZXR0ZXIgcGxhY2UgaWYgc28uDQoJCW9mZnNldC5sZWZ0IC09IE1hdGgubWluKCBvZmZzZXQubGVmdCwgKCBvZmZzZXQubGVmdCArIGRwV2lkdGggPiB2aWV3V2lkdGggJiYgdmlld1dpZHRoID4gZHBXaWR0aCApID8NCgkJCU1hdGguYWJzKCBvZmZzZXQubGVmdCArIGRwV2lkdGggLSB2aWV3V2lkdGggKSA6IDAgKTsNCgkJb2Zmc2V0LnRvcCAtPSBNYXRoLm1pbiggb2Zmc2V0LnRvcCwgKCBvZmZzZXQudG9wICsgZHBIZWlnaHQgPiB2aWV3SGVpZ2h0ICYmIHZpZXdIZWlnaHQgPiBkcEhlaWdodCApID8NCgkJCU1hdGguYWJzKCBkcEhlaWdodCArIGlucHV0SGVpZ2h0ICkgOiAwICk7DQoNCgkJcmV0dXJuIG9mZnNldDsNCgl9LA0KDQoJLyogRmluZCBhbiBvYmplY3QncyBwb3NpdGlvbiBvbiB0aGUgc2NyZWVuLiAqLw0KCV9maW5kUG9zOiBmdW5jdGlvbiggb2JqICkgew0KCQl2YXIgcG9zaXRpb24sDQoJCQlpbnN0ID0gdGhpcy5fZ2V0SW5zdCggb2JqICksDQoJCQlpc1JUTCA9IHRoaXMuX2dldCggaW5zdCwgImlzUlRMIiApOw0KDQoJCXdoaWxlICggb2JqICYmICggb2JqLnR5cGUgPT09ICJoaWRkZW4iIHx8IG9iai5ub2RlVHlwZSAhPT0gMSB8fCAkLmV4cHIuZmlsdGVycy5oaWRkZW4oIG9iaiApICkgKSB7DQoJCQlvYmogPSBvYmpbIGlzUlRMID8gInByZXZpb3VzU2libGluZyIgOiAibmV4dFNpYmxpbmciIF07DQoJCX0NCg0KCQlwb3NpdGlvbiA9ICQoIG9iaiApLm9mZnNldCgpOw0KCQlyZXR1cm4gWyBwb3NpdGlvbi5sZWZ0LCBwb3NpdGlvbi50b3AgXTsNCgl9LA0KDQoJLyogSGlkZSB0aGUgZGF0ZSBwaWNrZXIgZnJvbSB2aWV3Lg0KCSAqIEBwYXJhbSAgaW5wdXQgIGVsZW1lbnQgLSB0aGUgaW5wdXQgZmllbGQgYXR0YWNoZWQgdG8gdGhlIGRhdGUgcGlja2VyDQoJICovDQoJX2hpZGVEYXRlcGlja2VyOiBmdW5jdGlvbiggaW5wdXQgKSB7DQoJCXZhciBzaG93QW5pbSwgZHVyYXRpb24sIHBvc3RQcm9jZXNzLCBvbkNsb3NlLA0KCQkJaW5zdCA9IHRoaXMuX2N1ckluc3Q7DQoNCgkJaWYgKCAhaW5zdCB8fCAoIGlucHV0ICYmIGluc3QgIT09ICQuZGF0YSggaW5wdXQsICJkYXRlcGlja2VyIiApICkgKSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQlpZiAoIHRoaXMuX2RhdGVwaWNrZXJTaG93aW5nICkgew0KCQkJc2hvd0FuaW0gPSB0aGlzLl9nZXQoIGluc3QsICJzaG93QW5pbSIgKTsNCgkJCWR1cmF0aW9uID0gdGhpcy5fZ2V0KCBpbnN0LCAiZHVyYXRpb24iICk7DQoJCQlwb3N0UHJvY2VzcyA9IGZ1bmN0aW9uKCkgew0KCQkJCSQuZGF0ZXBpY2tlci5fdGlkeURpYWxvZyggaW5zdCApOw0KCQkJfTsNCg0KCQkJLy8gREVQUkVDQVRFRDogYWZ0ZXIgQkMgZm9yIDEuOC54ICQuZWZmZWN0c1sgc2hvd0FuaW0gXSBpcyBub3QgbmVlZGVkDQoJCQlpZiAoICQuZWZmZWN0cyAmJiAoICQuZWZmZWN0cy5lZmZlY3RbIHNob3dBbmltIF0gfHwgJC5lZmZlY3RzWyBzaG93QW5pbSBdICkgKSB7DQoJCQkJaW5zdC5kcERpdi5oaWRlKCBzaG93QW5pbSwgJC5kYXRlcGlja2VyLl9nZXQoIGluc3QsICJzaG93T3B0aW9ucyIgKSwgZHVyYXRpb24sIHBvc3RQcm9jZXNzICk7DQoJCQl9IGVsc2Ugew0KCQkJCWluc3QuZHBEaXZbICggc2hvd0FuaW0gPT09ICJzbGlkZURvd24iID8gInNsaWRlVXAiIDoNCgkJCQkJKCBzaG93QW5pbSA9PT0gImZhZGVJbiIgPyAiZmFkZU91dCIgOiAiaGlkZSIgKSApIF0oICggc2hvd0FuaW0gPyBkdXJhdGlvbiA6IG51bGwgKSwgcG9zdFByb2Nlc3MgKTsNCgkJCX0NCg0KCQkJaWYgKCAhc2hvd0FuaW0gKSB7DQoJCQkJcG9zdFByb2Nlc3MoKTsNCgkJCX0NCgkJCXRoaXMuX2RhdGVwaWNrZXJTaG93aW5nID0gZmFsc2U7DQoNCgkJCW9uQ2xvc2UgPSB0aGlzLl9nZXQoIGluc3QsICJvbkNsb3NlIiApOw0KCQkJaWYgKCBvbkNsb3NlICkgew0KCQkJCW9uQ2xvc2UuYXBwbHkoICggaW5zdC5pbnB1dCA\/IGluc3QuaW5wdXRbIDAgXSA6IG51bGwgKSwgWyAoIGluc3QuaW5wdXQgPyBpbnN0LmlucHV0LnZhbCgpIDogIiIgKSwgaW5zdCBdICk7DQoJCQl9DQoNCgkJCXRoaXMuX2xhc3RJbnB1dCA9IG51bGw7DQoJCQlpZiAoIHRoaXMuX2luRGlhbG9nICkgew0KCQkJCXRoaXMuX2RpYWxvZ0lucHV0LmNzcyggeyBwb3NpdGlvbjogImFic29sdXRlIiwgbGVmdDogIjAiLCB0b3A6ICItMTAwcHgiIH0gKTsNCgkJCQlpZiAoICQuYmxvY2tVSSApIHsNCgkJCQkJJC51bmJsb2NrVUkoKTsNCgkJCQkJJCggImJvZHkiICkuYXBwZW5kKCB0aGlzLmRwRGl2ICk7DQoJCQkJfQ0KCQkJfQ0KCQkJdGhpcy5faW5EaWFsb2cgPSBmYWxzZTsNCgkJfQ0KCX0sDQoNCgkvKiBUaWR5IHVwIGFmdGVyIGEgZGlhbG9nIGRpc3BsYXkuICovDQoJX3RpZHlEaWFsb2c6IGZ1bmN0aW9uKCBpbnN0ICkgew0KCQlpbnN0LmRwRGl2LnJlbW92ZUNsYXNzKCB0aGlzLl9kaWFsb2dDbGFzcyApLm9mZiggIi51aS1kYXRlcGlja2VyLWNhbGVuZGFyIiApOw0KCX0sDQoNCgkvKiBDbG9zZSBkYXRlIHBpY2tlciBpZiBjbGlja2VkIGVsc2V3aGVyZS4gKi8NCglfY2hlY2tFeHRlcm5hbENsaWNrOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCWlmICggISQuZGF0ZXBpY2tlci5fY3VySW5zdCApIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCXZhciAkdGFyZ2V0ID0gJCggZXZlbnQudGFyZ2V0ICksDQoJCQlpbnN0ID0gJC5kYXRlcGlja2VyLl9nZXRJbnN0KCAkdGFyZ2V0WyAwIF0gKTsNCg0KCQlpZiAoICggKCAkdGFyZ2V0WyAwIF0uaWQgIT09ICQuZGF0ZXBpY2tlci5fbWFpbkRpdklkICYmDQoJCQkJJHRhcmdldC5wYXJlbnRzKCAiIyIgKyAkLmRhdGVwaWNrZXIuX21haW5EaXZJZCApLmxlbmd0aCA9PT0gMCAmJg0KCQkJCSEkdGFyZ2V0Lmhhc0NsYXNzKCAkLmRhdGVwaWNrZXIubWFya2VyQ2xhc3NOYW1lICkgJiYNCgkJCQkhJHRhcmdldC5jbG9zZXN0KCAiLiIgKyAkLmRhdGVwaWNrZXIuX3RyaWdnZXJDbGFzcyApLmxlbmd0aCAmJg0KCQkJCSQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcgJiYgISggJC5kYXRlcGlja2VyLl9pbkRpYWxvZyAmJiAkLmJsb2NrVUkgKSApICkgfHwNCgkJCSggJHRhcmdldC5oYXNDbGFzcyggJC5kYXRlcGlja2VyLm1hcmtlckNsYXNzTmFtZSApICYmICQuZGF0ZXBpY2tlci5fY3VySW5zdCAhPT0gaW5zdCApICkgew0KCQkJCSQuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIoKTsNCgkJfQ0KCX0sDQoNCgkvKiBBZGp1c3Qgb25lIG9mIHRoZSBkYXRlIHN1Yi1maWVsZHMuICovDQoJX2FkanVzdERhdGU6IGZ1bmN0aW9uKCBpZCwgb2Zmc2V0LCBwZXJpb2QgKSB7DQoJCXZhciB0YXJnZXQgPSAkKCBpZCApLA0KCQkJaW5zdCA9IHRoaXMuX2dldEluc3QoIHRhcmdldFsgMCBdICk7DQoNCgkJaWYgKCB0aGlzLl9pc0Rpc2FibGVkRGF0ZXBpY2tlciggdGFyZ2V0WyAwIF0gKSApIHsNCgkJCXJldHVybjsNCgkJfQ0KCQl0aGlzLl9hZGp1c3RJbnN0RGF0ZSggaW5zdCwgb2Zmc2V0ICsNCgkJCSggcGVyaW9kID09PSAiTSIgPyB0aGlzLl9nZXQoIGluc3QsICJzaG93Q3VycmVudEF0UG9zIiApIDogMCApLCAvLyB1bmRvIHBvc2l0aW9uaW5nDQoJCQlwZXJpb2QgKTsNCgkJdGhpcy5fdXBkYXRlRGF0ZXBpY2tlciggaW5zdCApOw0KCX0sDQoNCgkvKiBBY3Rpb24gZm9yIGN1cnJlbnQgbGluay4gKi8NCglfZ290b1RvZGF5OiBmdW5jdGlvbiggaWQgKSB7DQoJCXZhciBkYXRlLA0KCQkJdGFyZ2V0ID0gJCggaWQgKSwNCgkJCWluc3QgPSB0aGlzLl9nZXRJbnN0KCB0YXJnZXRbIDAgXSApOw0KDQoJCWlmICggdGhpcy5fZ2V0KCBpbnN0LCAiZ290b0N1cnJlbnQiICkgJiYgaW5zdC5jdXJyZW50RGF5ICkgew0KCQkJaW5zdC5zZWxlY3RlZERheSA9IGluc3QuY3VycmVudERheTsNCgkJCWluc3QuZHJhd01vbnRoID0gaW5zdC5zZWxlY3RlZE1vbnRoID0gaW5zdC5jdXJyZW50TW9udGg7DQoJCQlpbnN0LmRyYXdZZWFyID0gaW5zdC5zZWxlY3RlZFllYXIgPSBpbnN0LmN1cnJlbnRZZWFyOw0KCQl9IGVsc2Ugew0KCQkJZGF0ZSA9IG5ldyBEYXRlKCk7DQoJCQlpbnN0LnNlbGVjdGVkRGF5ID0gZGF0ZS5nZXREYXRlKCk7DQoJCQlpbnN0LmRyYXdNb250aCA9IGluc3Quc2VsZWN0ZWRNb250aCA9IGRhdGUuZ2V0TW9udGgoKTsNCgkJCWluc3QuZHJhd1llYXIgPSBpbnN0LnNlbGVjdGVkWWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTsNCgkJfQ0KCQl0aGlzLl9ub3RpZnlDaGFuZ2UoIGluc3QgKTsNCgkJdGhpcy5fYWRqdXN0RGF0ZSggdGFyZ2V0ICk7DQoJfSwNCg0KCS8qIEFjdGlvbiBmb3Igc2VsZWN0aW5nIGEgbmV3IG1vbnRoL3llYXIuICovDQoJX3NlbGVjdE1vbnRoWWVhcjogZnVuY3Rpb24oIGlkLCBzZWxlY3QsIHBlcmlvZCApIHsNCgkJdmFyIHRhcmdldCA9ICQoIGlkICksDQoJCQlpbnN0ID0gdGhpcy5fZ2V0SW5zdCggdGFyZ2V0WyAwIF0gKTsNCg0KCQlpbnN0WyAic2VsZWN0ZWQiICsgKCBwZXJpb2QgPT09ICJNIiA\/ICJNb250aCIgOiAiWWVhciIgKSBdID0NCgkJaW5zdFsgImRyYXciICsgKCBwZXJpb2QgPT09ICJNIiA\/ICJNb250aCIgOiAiWWVhciIgKSBdID0NCgkJCXBhcnNlSW50KCBzZWxlY3Qub3B0aW9uc1sgc2VsZWN0LnNlbGVjdGVkSW5kZXggXS52YWx1ZSwgMTAgKTsNCg0KCQl0aGlzLl9ub3RpZnlDaGFuZ2UoIGluc3QgKTsNCgkJdGhpcy5fYWRqdXN0RGF0ZSggdGFyZ2V0ICk7DQoJfSwNCg0KCS8qIEFjdGlvbiBmb3Igc2VsZWN0aW5nIGEgZGF5LiAqLw0KCV9zZWxlY3REYXk6IGZ1bmN0aW9uKCBpZCwgbW9udGgsIHllYXIsIHRkICkgew0KCQl2YXIgaW5zdCwNCgkJCXRhcmdldCA9ICQoIGlkICk7DQoNCgkJaWYgKCAkKCB0ZCApLmhhc0NsYXNzKCB0aGlzLl91bnNlbGVjdGFibGVDbGFzcyApIHx8IHRoaXMuX2lzRGlzYWJsZWREYXRlcGlja2VyKCB0YXJnZXRbIDAgXSApICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJaW5zdCA9IHRoaXMuX2dldEluc3QoIHRhcmdldFsgMCBdICk7DQoJCWluc3Quc2VsZWN0ZWREYXkgPSBpbnN0LmN1cnJlbnREYXkgPSAkKCAiYSIsIHRkICkuaHRtbCgpOw0KCQlpbnN0LnNlbGVjdGVkTW9udGggPSBpbnN0LmN1cnJlbnRNb250aCA9IG1vbnRoOw0KCQlpbnN0LnNlbGVjdGVkWWVhciA9IGluc3QuY3VycmVudFllYXIgPSB5ZWFyOw0KCQl0aGlzLl9zZWxlY3REYXRlKCBpZCwgdGhpcy5fZm9ybWF0RGF0ZSggaW5zdCwNCgkJCWluc3QuY3VycmVudERheSwgaW5zdC5jdXJyZW50TW9udGgsIGluc3QuY3VycmVudFllYXIgKSApOw0KCX0sDQoNCgkvKiBFcmFzZSB0aGUgaW5wdXQgZmllbGQgYW5kIGhpZGUgdGhlIGRhdGUgcGlja2VyLiAqLw0KCV9jbGVhckRhdGU6IGZ1bmN0aW9uKCBpZCApIHsNCgkJdmFyIHRhcmdldCA9ICQoIGlkICk7DQoJCXRoaXMuX3NlbGVjdERhdGUoIHRhcmdldCwgIiIgKTsNCgl9LA0KDQoJLyogVXBkYXRlIHRoZSBpbnB1dCBmaWVsZCB3aXRoIHRoZSBzZWxlY3RlZCBkYXRlLiAqLw0KCV9zZWxlY3REYXRlOiBmdW5jdGlvbiggaWQsIGRhdGVTdHIgKSB7DQoJCXZhciBvblNlbGVjdCwNCgkJCXRhcmdldCA9ICQoIGlkICksDQoJCQlpbnN0ID0gdGhpcy5fZ2V0SW5zdCggdGFyZ2V0WyAwIF0gKTsNCg0KCQlkYXRlU3RyID0gKCBkYXRlU3RyICE9IG51bGwgPyBkYXRlU3RyIDogdGhpcy5fZm9ybWF0RGF0ZSggaW5zdCApICk7DQoJCWlmICggaW5zdC5pbnB1dCApIHsNCgkJCWluc3QuaW5wdXQudmFsKCBkYXRlU3RyICk7DQoJCX0NCgkJdGhpcy5fdXBkYXRlQWx0ZXJuYXRlKCBpbnN0ICk7DQoNCgkJb25TZWxlY3QgPSB0aGlzLl9nZXQoIGluc3QsICJvblNlbGVjdCIgKTsNCgkJaWYgKCBvblNlbGVjdCApIHsNCgkJCW9uU2VsZWN0LmFwcGx5KCAoIGluc3QuaW5wdXQgPyBpbnN0LmlucHV0WyAwIF0gOiBudWxsICksIFsgZGF0ZVN0ciwgaW5zdCBdICk7ICAvLyB0cmlnZ2VyIGN1c3RvbSBjYWxsYmFjaw0KCQl9IGVsc2UgaWYgKCBpbnN0LmlucHV0ICkgew0KCQkJaW5zdC5pbnB1dC50cmlnZ2VyKCAiY2hhbmdlIiApOyAvLyBmaXJlIHRoZSBjaGFuZ2UgZXZlbnQNCgkJfQ0KDQoJCWlmICggaW5zdC5pbmxpbmUgKSB7DQoJCQl0aGlzLl91cGRhdGVEYXRlcGlja2VyKCBpbnN0ICk7DQoJCX0gZWxzZSB7DQoJCQl0aGlzLl9oaWRlRGF0ZXBpY2tlcigpOw0KCQkJdGhpcy5fbGFzdElucHV0ID0gaW5zdC5pbnB1dFsgMCBdOw0KCQkJaWYgKCB0eXBlb2YoIGluc3QuaW5wdXRbIDAgXSApICE9PSAib2JqZWN0IiApIHsNCgkJCQlpbnN0LmlucHV0LnRyaWdnZXIoICJmb2N1cyIgKTsgLy8gcmVzdG9yZSBmb2N1cw0KCQkJfQ0KCQkJdGhpcy5fbGFzdElucHV0ID0gbnVsbDsNCgkJfQ0KCX0sDQoNCgkvKiBVcGRhdGUgYW55IGFsdGVybmF0ZSBmaWVsZCB0byBzeW5jaHJvbmlzZSB3aXRoIHRoZSBtYWluIGZpZWxkLiAqLw0KCV91cGRhdGVBbHRlcm5hdGU6IGZ1bmN0aW9uKCBpbnN0ICkgew0KCQl2YXIgYWx0Rm9ybWF0LCBkYXRlLCBkYXRlU3RyLA0KCQkJYWx0RmllbGQgPSB0aGlzLl9nZXQoIGluc3QsICJhbHRGaWVsZCIgKTsNCg0KCQlpZiAoIGFsdEZpZWxkICkgeyAvLyB1cGRhdGUgYWx0ZXJuYXRlIGZpZWxkIHRvbw0KCQkJYWx0Rm9ybWF0ID0gdGhpcy5fZ2V0KCBpbnN0LCAiYWx0Rm9ybWF0IiApIHx8IHRoaXMuX2dldCggaW5zdCwgImRhdGVGb3JtYXQiICk7DQoJCQlkYXRlID0gdGhpcy5fZ2V0RGF0ZSggaW5zdCApOw0KCQkJZGF0ZVN0ciA9IHRoaXMuZm9ybWF0RGF0ZSggYWx0Rm9ybWF0LCBkYXRlLCB0aGlzLl9nZXRGb3JtYXRDb25maWcoIGluc3QgKSApOw0KCQkJJCggYWx0RmllbGQgKS52YWwoIGRhdGVTdHIgKTsNCgkJfQ0KCX0sDQoNCgkvKiBTZXQgYXMgYmVmb3JlU2hvd0RheSBmdW5jdGlvbiB0byBwcmV2ZW50IHNlbGVjdGlvbiBvZiB3ZWVrZW5kcy4NCgkgKiBAcGFyYW0gIGRhdGUgIERhdGUgLSB0aGUgZGF0ZSB0byBjdXN0b21pc2UNCgkgKiBAcmV0dXJuIFtib29sZWFuLCBzdHJpbmddIC0gaXMgdGhpcyBkYXRlIHNlbGVjdGFibGU\/LCB3aGF0IGlzIGl0cyBDU1MgY2xhc3M\/DQoJICovDQoJbm9XZWVrZW5kczogZnVuY3Rpb24oIGRhdGUgKSB7DQoJCXZhciBkYXkgPSBkYXRlLmdldERheSgpOw0KCQlyZXR1cm4gWyAoIGRheSA+IDAgJiYgZGF5IDwgNiApLCAiIiBdOw0KCX0sDQoNCgkvKiBTZXQgYXMgY2FsY3VsYXRlV2VlayB0byBkZXRlcm1pbmUgdGhlIHdlZWsgb2YgdGhlIHllYXIgYmFzZWQgb24gdGhlIElTTyA4NjAxIGRlZmluaXRpb24uDQoJICogQHBhcmFtICBkYXRlICBEYXRlIC0gdGhlIGRhdGUgdG8gZ2V0IHRoZSB3ZWVrIGZvcg0KCSAqIEByZXR1cm4gIG51bWJlciAtIHRoZSBudW1iZXIgb2YgdGhlIHdlZWsgd2l0aGluIHRoZSB5ZWFyIHRoYXQgY29udGFpbnMgdGhpcyBkYXRlDQoJICovDQoJaXNvODYwMVdlZWs6IGZ1bmN0aW9uKCBkYXRlICkgew0KCQl2YXIgdGltZSwNCgkJCWNoZWNrRGF0ZSA9IG5ldyBEYXRlKCBkYXRlLmdldFRpbWUoKSApOw0KDQoJCS8vIEZpbmQgVGh1cnNkYXkgb2YgdGhpcyB3ZWVrIHN0YXJ0aW5nIG9uIE1vbmRheQ0KCQljaGVja0RhdGUuc2V0RGF0ZSggY2hlY2tEYXRlLmdldERhdGUoKSArIDQgLSAoIGNoZWNrRGF0ZS5nZXREYXkoKSB8fCA3ICkgKTsNCg0KCQl0aW1lID0gY2hlY2tEYXRlLmdldFRpbWUoKTsNCgkJY2hlY2tEYXRlLnNldE1vbnRoKCAwICk7IC8vIENvbXBhcmUgd2l0aCBKYW4gMQ0KCQljaGVja0RhdGUuc2V0RGF0ZSggMSApOw0KCQlyZXR1cm4gTWF0aC5mbG9vciggTWF0aC5yb3VuZCggKCB0aW1lIC0gY2hlY2tEYXRlICkgLyA4NjQwMDAwMCApIC8gNyApICsgMTsNCgl9LA0KDQoJLyogUGFyc2UgYSBzdHJpbmcgdmFsdWUgaW50byBhIGRhdGUgb2JqZWN0Lg0KCSAqIFNlZSBmb3JtYXREYXRlIGJlbG93IGZvciB0aGUgcG9zc2libGUgZm9ybWF0cy4NCgkgKg0KCSAqIEBwYXJhbSAgZm9ybWF0IHN0cmluZyAtIHRoZSBleHBlY3RlZCBmb3JtYXQgb2YgdGhlIGRhdGUNCgkgKiBAcGFyYW0gIHZhbHVlIHN0cmluZyAtIHRoZSBkYXRlIGluIHRoZSBhYm92ZSBmb3JtYXQNCgkgKiBAcGFyYW0gIHNldHRpbmdzIE9iamVjdCAtIGF0dHJpYnV0ZXMgaW5jbHVkZToNCgkgKgkJCQkJc2hvcnRZZWFyQ3V0b2ZmICBudW1iZXIgLSB0aGUgY3V0b2ZmIHllYXIgZm9yIGRldGVybWluaW5nIHRoZSBjZW50dXJ5IChvcHRpb25hbCkNCgkgKgkJCQkJZGF5TmFtZXNTaG9ydAlzdHJpbmdbN10gLSBhYmJyZXZpYXRlZCBuYW1lcyBvZiB0aGUgZGF5cyBmcm9tIFN1bmRheSAob3B0aW9uYWwpDQoJICoJCQkJCWRheU5hbWVzCQlzdHJpbmdbN10gLSBuYW1lcyBvZiB0aGUgZGF5cyBmcm9tIFN1bmRheSAob3B0aW9uYWwpDQoJICoJCQkJCW1vbnRoTmFtZXNTaG9ydCBzdHJpbmdbMTJdIC0gYWJicmV2aWF0ZWQgbmFtZXMgb2YgdGhlIG1vbnRocyAob3B0aW9uYWwpDQoJICoJCQkJCW1vbnRoTmFtZXMJCXN0cmluZ1sxMl0gLSBuYW1lcyBvZiB0aGUgbW9udGhzIChvcHRpb25hbCkNCgkgKiBAcmV0dXJuICBEYXRlIC0gdGhlIGV4dHJhY3RlZCBkYXRlIHZhbHVlIG9yIG51bGwgaWYgdmFsdWUgaXMgYmxhbmsNCgkgKi8NCglwYXJzZURhdGU6IGZ1bmN0aW9uKCBmb3JtYXQsIHZhbHVlLCBzZXR0aW5ncyApIHsNCgkJaWYgKCBmb3JtYXQgPT0gbnVsbCB8fCB2YWx1ZSA9PSBudWxsICkgew0KCQkJdGhyb3cgIkludmFsaWQgYXJndW1lbnRzIjsNCgkJfQ0KDQoJCXZhbHVlID0gKCB0eXBlb2YgdmFsdWUgPT09ICJvYmplY3QiID8gdmFsdWUudG9TdHJpbmcoKSA6IHZhbHVlICsgIiIgKTsNCgkJaWYgKCB2YWx1ZSA9PT0gIiIgKSB7DQoJCQlyZXR1cm4gbnVsbDsNCgkJfQ0KDQoJCXZhciBpRm9ybWF0LCBkaW0sIGV4dHJhLA0KCQkJaVZhbHVlID0gMCwNCgkJCXNob3J0WWVhckN1dG9mZlRlbXAgPSAoIHNldHRpbmdzID8gc2V0dGluZ3Muc2hvcnRZZWFyQ3V0b2ZmIDogbnVsbCApIHx8IHRoaXMuX2RlZmF1bHRzLnNob3J0WWVhckN1dG9mZiwNCgkJCXNob3J0WWVhckN1dG9mZiA9ICggdHlwZW9mIHNob3J0WWVhckN1dG9mZlRlbXAgIT09ICJzdHJpbmciID8gc2hvcnRZZWFyQ3V0b2ZmVGVtcCA6DQoJCQkJbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpICUgMTAwICsgcGFyc2VJbnQoIHNob3J0WWVhckN1dG9mZlRlbXAsIDEwICkgKSwNCgkJCWRheU5hbWVzU2hvcnQgPSAoIHNldHRpbmdzID8gc2V0dGluZ3MuZGF5TmFtZXNTaG9ydCA6IG51bGwgKSB8fCB0aGlzLl9kZWZhdWx0cy5kYXlOYW1lc1Nob3J0LA0KCQkJZGF5TmFtZXMgPSAoIHNldHRpbmdzID8gc2V0dGluZ3MuZGF5TmFtZXMgOiBudWxsICkgfHwgdGhpcy5fZGVmYXVsdHMuZGF5TmFtZXMsDQoJCQltb250aE5hbWVzU2hvcnQgPSAoIHNldHRpbmdzID8gc2V0dGluZ3MubW9udGhOYW1lc1Nob3J0IDogbnVsbCApIHx8IHRoaXMuX2RlZmF1bHRzLm1vbnRoTmFtZXNTaG9ydCwNCgkJCW1vbnRoTmFtZXMgPSAoIHNldHRpbmdzID8gc2V0dGluZ3MubW9udGhOYW1lcyA6IG51bGwgKSB8fCB0aGlzLl9kZWZhdWx0cy5tb250aE5hbWVzLA0KCQkJeWVhciA9IC0xLA0KCQkJbW9udGggPSAtMSwNCgkJCWRheSA9IC0xLA0KCQkJZG95ID0gLTEsDQoJCQlsaXRlcmFsID0gZmFsc2UsDQoJCQlkYXRlLA0KDQoJCQkvLyBDaGVjayB3aGV0aGVyIGEgZm9ybWF0IGNoYXJhY3RlciBpcyBkb3VibGVkDQoJCQlsb29rQWhlYWQgPSBmdW5jdGlvbiggbWF0Y2ggKSB7DQoJCQkJdmFyIG1hdGNoZXMgPSAoIGlGb3JtYXQgKyAxIDwgZm9ybWF0Lmxlbmd0aCAmJiBmb3JtYXQuY2hhckF0KCBpRm9ybWF0ICsgMSApID09PSBtYXRjaCApOw0KCQkJCWlmICggbWF0Y2hlcyApIHsNCgkJCQkJaUZvcm1hdCsrOw0KCQkJCX0NCgkJCQlyZXR1cm4gbWF0Y2hlczsNCgkJCX0sDQoNCgkJCS8vIEV4dHJhY3QgYSBudW1iZXIgZnJvbSB0aGUgc3RyaW5nIHZhbHVlDQoJCQlnZXROdW1iZXIgPSBmdW5jdGlvbiggbWF0Y2ggKSB7DQoJCQkJdmFyIGlzRG91YmxlZCA9IGxvb2tBaGVhZCggbWF0Y2ggKSwNCgkJCQkJc2l6ZSA9ICggbWF0Y2ggPT09ICJAIiA\/IDE0IDogKCBtYXRjaCA9PT0gIiEiID8gMjAgOg0KCQkJCQkoIG1hdGNoID09PSAieSIgJiYgaXNEb3VibGVkID8gNCA6ICggbWF0Y2ggPT09ICJvIiA\/IDMgOiAyICkgKSApICksDQoJCQkJCW1pblNpemUgPSAoIG1hdGNoID09PSAieSIgPyBzaXplIDogMSApLA0KCQkJCQlkaWdpdHMgPSBuZXcgUmVnRXhwKCAiXlxcZHsiICsgbWluU2l6ZSArICIsIiArIHNpemUgKyAifSIgKSwNCgkJCQkJbnVtID0gdmFsdWUuc3Vic3RyaW5nKCBpVmFsdWUgKS5tYXRjaCggZGlnaXRzICk7DQoJCQkJaWYgKCAhbnVtICkgew0KCQkJCQl0aHJvdyAiTWlzc2luZyBudW1iZXIgYXQgcG9zaXRpb24gIiArIGlWYWx1ZTsNCgkJCQl9DQoJCQkJaVZhbHVlICs9IG51bVsgMCBdLmxlbmd0aDsNCgkJCQlyZXR1cm4gcGFyc2VJbnQoIG51bVsgMCBdLCAxMCApOw0KCQkJfSwNCg0KCQkJLy8gRXh0cmFjdCBhIG5hbWUgZnJvbSB0aGUgc3RyaW5nIHZhbHVlIGFuZCBjb252ZXJ0IHRvIGFuIGluZGV4DQoJCQlnZXROYW1lID0gZnVuY3Rpb24oIG1hdGNoLCBzaG9ydE5hbWVzLCBsb25nTmFtZXMgKSB7DQoJCQkJdmFyIGluZGV4ID0gLTEsDQoJCQkJCW5hbWVzID0gJC5tYXAoIGxvb2tBaGVhZCggbWF0Y2ggKSA\/IGxvbmdOYW1lcyA6IHNob3J0TmFtZXMsIGZ1bmN0aW9uKCB2LCBrICkgew0KCQkJCQkJcmV0dXJuIFsgWyBrLCB2IF0gXTsNCgkJCQkJfSApLnNvcnQoIGZ1bmN0aW9uKCBhLCBiICkgew0KCQkJCQkJcmV0dXJuIC0oIGFbIDEgXS5sZW5ndGggLSBiWyAxIF0ubGVuZ3RoICk7DQoJCQkJCX0gKTsNCg0KCQkJCSQuZWFjaCggbmFtZXMsIGZ1bmN0aW9uKCBpLCBwYWlyICkgew0KCQkJCQl2YXIgbmFtZSA9IHBhaXJbIDEgXTsNCgkJCQkJaWYgKCB2YWx1ZS5zdWJzdHIoIGlWYWx1ZSwgbmFtZS5sZW5ndGggKS50b0xvd2VyQ2FzZSgpID09PSBuYW1lLnRvTG93ZXJDYXNlKCkgKSB7DQoJCQkJCQlpbmRleCA9IHBhaXJbIDAgXTsNCgkJCQkJCWlWYWx1ZSArPSBuYW1lLmxlbmd0aDsNCgkJCQkJCXJldHVybiBmYWxzZTsNCgkJCQkJfQ0KCQkJCX0gKTsNCgkJCQlpZiAoIGluZGV4ICE9PSAtMSApIHsNCgkJCQkJcmV0dXJuIGluZGV4ICsgMTsNCgkJCQl9IGVsc2Ugew0KCQkJCQl0aHJvdyAiVW5rbm93biBuYW1lIGF0IHBvc2l0aW9uICIgKyBpVmFsdWU7DQoJCQkJfQ0KCQkJfSwNCg0KCQkJLy8gQ29uZmlybSB0aGF0IGEgbGl0ZXJhbCBjaGFyYWN0ZXIgbWF0Y2hlcyB0aGUgc3RyaW5nIHZhbHVlDQoJCQljaGVja0xpdGVyYWwgPSBmdW5jdGlvbigpIHsNCgkJCQlpZiAoIHZhbHVlLmNoYXJBdCggaVZhbHVlICkgIT09IGZvcm1hdC5jaGFyQXQoIGlGb3JtYXQgKSApIHsNCgkJCQkJdGhyb3cgIlVuZXhwZWN0ZWQgbGl0ZXJhbCBhdCBwb3NpdGlvbiAiICsgaVZhbHVlOw0KCQkJCX0NCgkJCQlpVmFsdWUrKzsNCgkJCX07DQoNCgkJZm9yICggaUZvcm1hdCA9IDA7IGlGb3JtYXQgPCBmb3JtYXQubGVuZ3RoOyBpRm9ybWF0KysgKSB7DQoJCQlpZiAoIGxpdGVyYWwgKSB7DQoJCQkJaWYgKCBmb3JtYXQuY2hhckF0KCBpRm9ybWF0ICkgPT09ICInIiAmJiAhbG9va0FoZWFkKCAiJyIgKSApIHsNCgkJCQkJbGl0ZXJhbCA9IGZhbHNlOw0KCQkJCX0gZWxzZSB7DQoJCQkJCWNoZWNrTGl0ZXJhbCgpOw0KCQkJCX0NCgkJCX0gZWxzZSB7DQoJCQkJc3dpdGNoICggZm9ybWF0LmNoYXJBdCggaUZvcm1hdCApICkgew0KCQkJCQljYXNlICJkIjoNCgkJCQkJCWRheSA9IGdldE51bWJlciggImQiICk7DQoJCQkJCQlicmVhazsNCgkJCQkJY2FzZSAiRCI6DQoJCQkJCQlnZXROYW1lKCAiRCIsIGRheU5hbWVzU2hvcnQsIGRheU5hbWVzICk7DQoJCQkJCQlicmVhazsNCgkJCQkJY2FzZSAibyI6DQoJCQkJCQlkb3kgPSBnZXROdW1iZXIoICJvIiApOw0KCQkJCQkJYnJlYWs7DQoJCQkJCWNhc2UgIm0iOg0KCQkJCQkJbW9udGggPSBnZXROdW1iZXIoICJtIiApOw0KCQkJCQkJYnJlYWs7DQoJCQkJCWNhc2UgIk0iOg0KCQkJCQkJbW9udGggPSBnZXROYW1lKCAiTSIsIG1vbnRoTmFtZXNTaG9ydCwgbW9udGhOYW1lcyApOw0KCQkJCQkJYnJlYWs7DQoJCQkJCWNhc2UgInkiOg0KCQkJCQkJeWVhciA9IGdldE51bWJlciggInkiICk7DQoJCQkJCQlicmVhazsNCgkJCQkJY2FzZSAiQCI6DQoJCQkJCQlkYXRlID0gbmV3IERhdGUoIGdldE51bWJlciggIkAiICkgKTsNCgkJCQkJCXllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7DQoJCQkJCQltb250aCA9IGRhdGUuZ2V0TW9udGgoKSArIDE7DQoJCQkJCQlkYXkgPSBkYXRlLmdldERhdGUoKTsNCgkJCQkJCWJyZWFrOw0KCQkJCQljYXNlICIhIjoNCgkJCQkJCWRhdGUgPSBuZXcgRGF0ZSggKCBnZXROdW1iZXIoICIhIiApIC0gdGhpcy5fdGlja3NUbzE5NzAgKSAvIDEwMDAwICk7DQoJCQkJCQl5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpOw0KCQkJCQkJbW9udGggPSBkYXRlLmdldE1vbnRoKCkgKyAxOw0KCQkJCQkJZGF5ID0gZGF0ZS5nZXREYXRlKCk7DQoJCQkJCQlicmVhazsNCgkJCQkJY2FzZSAiJyI6DQoJCQkJCQlpZiAoIGxvb2tBaGVhZCggIiciICkgKSB7DQoJCQkJCQkJY2hlY2tMaXRlcmFsKCk7DQoJCQkJCQl9IGVsc2Ugew0KCQkJCQkJCWxpdGVyYWwgPSB0cnVlOw0KCQkJCQkJfQ0KCQkJCQkJYnJlYWs7DQoJCQkJCWRlZmF1bHQ6DQoJCQkJCQljaGVja0xpdGVyYWwoKTsNCgkJCQl9DQoJCQl9DQoJCX0NCg0KCQlpZiAoIGlWYWx1ZSA8IHZhbHVlLmxlbmd0aCApIHsNCgkJCWV4dHJhID0gdmFsdWUuc3Vic3RyKCBpVmFsdWUgKTsNCgkJCWlmICggIS9eXHMrLy50ZXN0KCBleHRyYSApICkgew0KCQkJCXRocm93ICJFeHRyYS91bnBhcnNlZCBjaGFyYWN0ZXJzIGZvdW5kIGluIGRhdGU6ICIgKyBleHRyYTsNCgkJCX0NCgkJfQ0KDQoJCWlmICggeWVhciA9PT0gLTEgKSB7DQoJCQl5ZWFyID0gbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpOw0KCQl9IGVsc2UgaWYgKCB5ZWFyIDwgMTAwICkgew0KCQkJeWVhciArPSBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCkgLSBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCkgJSAxMDAgKw0KCQkJCSggeWVhciA8PSBzaG9ydFllYXJDdXRvZmYgPyAwIDogLTEwMCApOw0KCQl9DQoNCgkJaWYgKCBkb3kgPiAtMSApIHsNCgkJCW1vbnRoID0gMTsNCgkJCWRheSA9IGRveTsNCgkJCWRvIHsNCgkJCQlkaW0gPSB0aGlzLl9nZXREYXlzSW5Nb250aCggeWVhciwgbW9udGggLSAxICk7DQoJCQkJaWYgKCBkYXkgPD0gZGltICkgew0KCQkJCQlicmVhazsNCgkJCQl9DQoJCQkJbW9udGgrKzsNCgkJCQlkYXkgLT0gZGltOw0KCQkJfSB3aGlsZSAoIHRydWUgKTsNCgkJfQ0KDQoJCWRhdGUgPSB0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdCggbmV3IERhdGUoIHllYXIsIG1vbnRoIC0gMSwgZGF5ICkgKTsNCgkJaWYgKCBkYXRlLmdldEZ1bGxZZWFyKCkgIT09IHllYXIgfHwgZGF0ZS5nZXRNb250aCgpICsgMSAhPT0gbW9udGggfHwgZGF0ZS5nZXREYXRlKCkgIT09IGRheSApIHsNCgkJCXRocm93ICJJbnZhbGlkIGRhdGUiOyAvLyBFLmcuIDMxLzAyLzAwDQoJCX0NCgkJcmV0dXJuIGRhdGU7DQoJfSwNCg0KCS8qIFN0YW5kYXJkIGRhdGUgZm9ybWF0cy4gKi8NCglBVE9NOiAieXktbW0tZGQiLCAvLyBSRkMgMzMzOSAoSVNPIDg2MDEpDQoJQ09PS0lFOiAiRCwgZGQgTSB5eSIsDQoJSVNPXzg2MDE6ICJ5eS1tbS1kZCIsDQoJUkZDXzgyMjogIkQsIGQgTSB5IiwNCglSRkNfODUwOiAiREQsIGRkLU0teSIsDQoJUkZDXzEwMzY6ICJELCBkIE0geSIsDQoJUkZDXzExMjM6ICJELCBkIE0geXkiLA0KCVJGQ18yODIyOiAiRCwgZCBNIHl5IiwNCglSU1M6ICJELCBkIE0geSIsIC8vIFJGQyA4MjINCglUSUNLUzogIiEiLA0KCVRJTUVTVEFNUDogIkAiLA0KCVczQzogInl5LW1tLWRkIiwgLy8gSVNPIDg2MDENCg0KCV90aWNrc1RvMTk3MDogKCAoICggMTk3MCAtIDEgKSAqIDM2NSArIE1hdGguZmxvb3IoIDE5NzAgLyA0ICkgLSBNYXRoLmZsb29yKCAxOTcwIC8gMTAwICkgKw0KCQlNYXRoLmZsb29yKCAxOTcwIC8gNDAwICkgKSAqIDI0ICogNjAgKiA2MCAqIDEwMDAwMDAwICksDQoNCgkvKiBGb3JtYXQgYSBkYXRlIG9iamVjdCBpbnRvIGEgc3RyaW5nIHZhbHVlLg0KCSAqIFRoZSBmb3JtYXQgY2FuIGJlIGNvbWJpbmF0aW9ucyBvZiB0aGUgZm9sbG93aW5nOg0KCSAqIGQgIC0gZGF5IG9mIG1vbnRoIChubyBsZWFkaW5nIHplcm8pDQoJICogZGQgLSBkYXkgb2YgbW9udGggKHR3byBkaWdpdCkNCgkgKiBvICAtIGRheSBvZiB5ZWFyIChubyBsZWFkaW5nIHplcm9zKQ0KCSAqIG9vIC0gZGF5IG9mIHllYXIgKHRocmVlIGRpZ2l0KQ0KCSAqIEQgIC0gZGF5IG5hbWUgc2hvcnQNCgkgKiBERCAtIGRheSBuYW1lIGxvbmcNCgkgKiBtICAtIG1vbnRoIG9mIHllYXIgKG5vIGxlYWRpbmcgemVybykNCgkgKiBtbSAtIG1vbnRoIG9mIHllYXIgKHR3byBkaWdpdCkNCgkgKiBNICAtIG1vbnRoIG5hbWUgc2hvcnQNCgkgKiBNTSAtIG1vbnRoIG5hbWUgbG9uZw0KCSAqIHkgIC0geWVhciAodHdvIGRpZ2l0KQ0KCSAqIHl5IC0geWVhciAoZm91ciBkaWdpdCkNCgkgKiBAIC0gVW5peCB0aW1lc3RhbXAgKG1zIHNpbmNlIDAxLzAxLzE5NzApDQoJICogISAtIFdpbmRvd3MgdGlja3MgKDEwMG5zIHNpbmNlIDAxLzAxLzAwMDEpDQoJICogIi4uLiIgLSBsaXRlcmFsIHRleHQNCgkgKiAnJyAtIHNpbmdsZSBxdW90ZQ0KCSAqDQoJICogQHBhcmFtICBmb3JtYXQgc3RyaW5nIC0gdGhlIGRlc2lyZWQgZm9ybWF0IG9mIHRoZSBkYXRlDQoJICogQHBhcmFtICBkYXRlIERhdGUgLSB0aGUgZGF0ZSB2YWx1ZSB0byBmb3JtYXQNCgkgKiBAcGFyYW0gIHNldHRpbmdzIE9iamVjdCAtIGF0dHJpYnV0ZXMgaW5jbHVkZToNCgkgKgkJCQkJZGF5TmFtZXNTaG9ydAlzdHJpbmdbN10gLSBhYmJyZXZpYXRlZCBuYW1lcyBvZiB0aGUgZGF5cyBmcm9tIFN1bmRheSAob3B0aW9uYWwpDQoJICoJCQkJCWRheU5hbWVzCQlzdHJpbmdbN10gLSBuYW1lcyBvZiB0aGUgZGF5cyBmcm9tIFN1bmRheSAob3B0aW9uYWwpDQoJICoJCQkJCW1vbnRoTmFtZXNTaG9ydCBzdHJpbmdbMTJdIC0gYWJicmV2aWF0ZWQgbmFtZXMgb2YgdGhlIG1vbnRocyAob3B0aW9uYWwpDQoJICoJCQkJCW1vbnRoTmFtZXMJCXN0cmluZ1sxMl0gLSBuYW1lcyBvZiB0aGUgbW9udGhzIChvcHRpb25hbCkNCgkgKiBAcmV0dXJuICBzdHJpbmcgLSB0aGUgZGF0ZSBpbiB0aGUgYWJvdmUgZm9ybWF0DQoJICovDQoJZm9ybWF0RGF0ZTogZnVuY3Rpb24oIGZvcm1hdCwgZGF0ZSwgc2V0dGluZ3MgKSB7DQoJCWlmICggIWRhdGUgKSB7DQoJCQlyZXR1cm4gIiI7DQoJCX0NCg0KCQl2YXIgaUZvcm1hdCwNCgkJCWRheU5hbWVzU2hvcnQgPSAoIHNldHRpbmdzID8gc2V0dGluZ3MuZGF5TmFtZXNTaG9ydCA6IG51bGwgKSB8fCB0aGlzLl9kZWZhdWx0cy5kYXlOYW1lc1Nob3J0LA0KCQkJZGF5TmFtZXMgPSAoIHNldHRpbmdzID8gc2V0dGluZ3MuZGF5TmFtZXMgOiBudWxsICkgfHwgdGhpcy5fZGVmYXVsdHMuZGF5TmFtZXMsDQoJCQltb250aE5hbWVzU2hvcnQgPSAoIHNldHRpbmdzID8gc2V0dGluZ3MubW9udGhOYW1lc1Nob3J0IDogbnVsbCApIHx8IHRoaXMuX2RlZmF1bHRzLm1vbnRoTmFtZXNTaG9ydCwNCgkJCW1vbnRoTmFtZXMgPSAoIHNldHRpbmdzID8gc2V0dGluZ3MubW9udGhOYW1lcyA6IG51bGwgKSB8fCB0aGlzLl9kZWZhdWx0cy5tb250aE5hbWVzLA0KDQoJCQkvLyBDaGVjayB3aGV0aGVyIGEgZm9ybWF0IGNoYXJhY3RlciBpcyBkb3VibGVkDQoJCQlsb29rQWhlYWQgPSBmdW5jdGlvbiggbWF0Y2ggKSB7DQoJCQkJdmFyIG1hdGNoZXMgPSAoIGlGb3JtYXQgKyAxIDwgZm9ybWF0Lmxlbmd0aCAmJiBmb3JtYXQuY2hhckF0KCBpRm9ybWF0ICsgMSApID09PSBtYXRjaCApOw0KCQkJCWlmICggbWF0Y2hlcyApIHsNCgkJCQkJaUZvcm1hdCsrOw0KCQkJCX0NCgkJCQlyZXR1cm4gbWF0Y2hlczsNCgkJCX0sDQoNCgkJCS8vIEZvcm1hdCBhIG51bWJlciwgd2l0aCBsZWFkaW5nIHplcm8gaWYgbmVjZXNzYXJ5DQoJCQlmb3JtYXROdW1iZXIgPSBmdW5jdGlvbiggbWF0Y2gsIHZhbHVlLCBsZW4gKSB7DQoJCQkJdmFyIG51bSA9ICIiICsgdmFsdWU7DQoJCQkJaWYgKCBsb29rQWhlYWQoIG1hdGNoICkgKSB7DQoJCQkJCXdoaWxlICggbnVtLmxlbmd0aCA8IGxlbiApIHsNCgkJCQkJCW51bSA9ICIwIiArIG51bTsNCgkJCQkJfQ0KCQkJCX0NCgkJCQlyZXR1cm4gbnVtOw0KCQkJfSwNCg0KCQkJLy8gRm9ybWF0IGEgbmFtZSwgc2hvcnQgb3IgbG9uZyBhcyByZXF1ZXN0ZWQNCgkJCWZvcm1hdE5hbWUgPSBmdW5jdGlvbiggbWF0Y2gsIHZhbHVlLCBzaG9ydE5hbWVzLCBsb25nTmFtZXMgKSB7DQoJCQkJcmV0dXJuICggbG9va0FoZWFkKCBtYXRjaCApID8gbG9uZ05hbWVzWyB2YWx1ZSBdIDogc2hvcnROYW1lc1sgdmFsdWUgXSApOw0KCQkJfSwNCgkJCW91dHB1dCA9ICIiLA0KCQkJbGl0ZXJhbCA9IGZhbHNlOw0KDQoJCWlmICggZGF0ZSApIHsNCgkJCWZvciAoIGlGb3JtYXQgPSAwOyBpRm9ybWF0IDwgZm9ybWF0Lmxlbmd0aDsgaUZvcm1hdCsrICkgew0KCQkJCWlmICggbGl0ZXJhbCApIHsNCgkJCQkJaWYgKCBmb3JtYXQuY2hhckF0KCBpRm9ybWF0ICkgPT09ICInIiAmJiAhbG9va0FoZWFkKCAiJyIgKSApIHsNCgkJCQkJCWxpdGVyYWwgPSBmYWxzZTsNCgkJCQkJfSBlbHNlIHsNCgkJCQkJCW91dHB1dCArPSBmb3JtYXQuY2hhckF0KCBpRm9ybWF0ICk7DQoJCQkJCX0NCgkJCQl9IGVsc2Ugew0KCQkJCQlzd2l0Y2ggKCBmb3JtYXQuY2hhckF0KCBpRm9ybWF0ICkgKSB7DQoJCQkJCQljYXNlICJkIjoNCgkJCQkJCQlvdXRwdXQgKz0gZm9ybWF0TnVtYmVyKCAiZCIsIGRhdGUuZ2V0RGF0ZSgpLCAyICk7DQoJCQkJCQkJYnJlYWs7DQoJCQkJCQljYXNlICJEIjoNCgkJCQkJCQlvdXRwdXQgKz0gZm9ybWF0TmFtZSggIkQiLCBkYXRlLmdldERheSgpLCBkYXlOYW1lc1Nob3J0LCBkYXlOYW1lcyApOw0KCQkJCQkJCWJyZWFrOw0KCQkJCQkJY2FzZSAibyI6DQoJCQkJCQkJb3V0cHV0ICs9IGZvcm1hdE51bWJlciggIm8iLA0KCQkJCQkJCQlNYXRoLnJvdW5kKCAoIG5ldyBEYXRlKCBkYXRlLmdldEZ1bGxZZWFyKCksIGRhdGUuZ2V0TW9udGgoKSwgZGF0ZS5nZXREYXRlKCkgKS5nZXRUaW1lKCkgLSBuZXcgRGF0ZSggZGF0ZS5nZXRGdWxsWWVhcigpLCAwLCAwICkuZ2V0VGltZSgpICkgLyA4NjQwMDAwMCApLCAzICk7DQoJCQkJCQkJYnJlYWs7DQoJCQkJCQljYXNlICJtIjoNCgkJCQkJCQlvdXRwdXQgKz0gZm9ybWF0TnVtYmVyKCAibSIsIGRhdGUuZ2V0TW9udGgoKSArIDEsIDIgKTsNCgkJCQkJCQlicmVhazsNCgkJCQkJCWNhc2UgIk0iOg0KCQkJCQkJCW91dHB1dCArPSBmb3JtYXROYW1lKCAiTSIsIGRhdGUuZ2V0TW9udGgoKSwgbW9udGhOYW1lc1Nob3J0LCBtb250aE5hbWVzICk7DQoJCQkJCQkJYnJlYWs7DQoJCQkJCQljYXNlICJ5IjoNCgkJCQkJCQlvdXRwdXQgKz0gKCBsb29rQWhlYWQoICJ5IiApID8gZGF0ZS5nZXRGdWxsWWVhcigpIDoNCgkJCQkJCQkJKCBkYXRlLmdldEZ1bGxZZWFyKCkgJSAxMDAgPCAxMCA\/ICIwIiA6ICIiICkgKyBkYXRlLmdldEZ1bGxZZWFyKCkgJSAxMDAgKTsNCgkJCQkJCQlicmVhazsNCgkJCQkJCWNhc2UgIkAiOg0KCQkJCQkJCW91dHB1dCArPSBkYXRlLmdldFRpbWUoKTsNCgkJCQkJCQlicmVhazsNCgkJCQkJCWNhc2UgIiEiOg0KCQkJCQkJCW91dHB1dCArPSBkYXRlLmdldFRpbWUoKSAqIDEwMDAwICsgdGhpcy5fdGlja3NUbzE5NzA7DQoJCQkJCQkJYnJlYWs7DQoJCQkJCQljYXNlICInIjoNCgkJCQkJCQlpZiAoIGxvb2tBaGVhZCggIiciICkgKSB7DQoJCQkJCQkJCW91dHB1dCArPSAiJyI7DQoJCQkJCQkJfSBlbHNlIHsNCgkJCQkJCQkJbGl0ZXJhbCA9IHRydWU7DQoJCQkJCQkJfQ0KCQkJCQkJCWJyZWFrOw0KCQkJCQkJZGVmYXVsdDoNCgkJCQkJCQlvdXRwdXQgKz0gZm9ybWF0LmNoYXJBdCggaUZvcm1hdCApOw0KCQkJCQl9DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJCXJldHVybiBvdXRwdXQ7DQoJfSwNCg0KCS8qIEV4dHJhY3QgYWxsIHBvc3NpYmxlIGNoYXJhY3RlcnMgZnJvbSB0aGUgZGF0ZSBmb3JtYXQuICovDQoJX3Bvc3NpYmxlQ2hhcnM6IGZ1bmN0aW9uKCBmb3JtYXQgKSB7DQoJCXZhciBpRm9ybWF0LA0KCQkJY2hhcnMgPSAiIiwNCgkJCWxpdGVyYWwgPSBmYWxzZSwNCg0KCQkJLy8gQ2hlY2sgd2hldGhlciBhIGZvcm1hdCBjaGFyYWN0ZXIgaXMgZG91YmxlZA0KCQkJbG9va0FoZWFkID0gZnVuY3Rpb24oIG1hdGNoICkgew0KCQkJCXZhciBtYXRjaGVzID0gKCBpRm9ybWF0ICsgMSA8IGZvcm1hdC5sZW5ndGggJiYgZm9ybWF0LmNoYXJBdCggaUZvcm1hdCArIDEgKSA9PT0gbWF0Y2ggKTsNCgkJCQlpZiAoIG1hdGNoZXMgKSB7DQoJCQkJCWlGb3JtYXQrKzsNCgkJCQl9DQoJCQkJcmV0dXJuIG1hdGNoZXM7DQoJCQl9Ow0KDQoJCWZvciAoIGlGb3JtYXQgPSAwOyBpRm9ybWF0IDwgZm9ybWF0Lmxlbmd0aDsgaUZvcm1hdCsrICkgew0KCQkJaWYgKCBsaXRlcmFsICkgew0KCQkJCWlmICggZm9ybWF0LmNoYXJBdCggaUZvcm1hdCApID09PSAiJyIgJiYgIWxvb2tBaGVhZCggIiciICkgKSB7DQoJCQkJCWxpdGVyYWwgPSBmYWxzZTsNCgkJCQl9IGVsc2Ugew0KCQkJCQljaGFycyArPSBmb3JtYXQuY2hhckF0KCBpRm9ybWF0ICk7DQoJCQkJfQ0KCQkJfSBlbHNlIHsNCgkJCQlzd2l0Y2ggKCBmb3JtYXQuY2hhckF0KCBpRm9ybWF0ICkgKSB7DQoJCQkJCWNhc2UgImQiOiBjYXNlICJtIjogY2FzZSAieSI6IGNhc2UgIkAiOg0KCQkJCQkJY2hhcnMgKz0gIjAxMjM0NTY3ODkiOw0KCQkJCQkJYnJlYWs7DQoJCQkJCWNhc2UgIkQiOiBjYXNlICJNIjoNCgkJCQkJCXJldHVybiBudWxsOyAvLyBBY2NlcHQgYW55dGhpbmcNCgkJCQkJY2FzZSAiJyI6DQoJCQkJCQlpZiAoIGxvb2tBaGVhZCggIiciICkgKSB7DQoJCQkJCQkJY2hhcnMgKz0gIiciOw0KCQkJCQkJfSBlbHNlIHsNCgkJCQkJCQlsaXRlcmFsID0gdHJ1ZTsNCgkJCQkJCX0NCgkJCQkJCWJyZWFrOw0KCQkJCQlkZWZhdWx0Og0KCQkJCQkJY2hhcnMgKz0gZm9ybWF0LmNoYXJBdCggaUZvcm1hdCApOw0KCQkJCX0NCgkJCX0NCgkJfQ0KCQlyZXR1cm4gY2hhcnM7DQoJfSwNCg0KCS8qIEdldCBhIHNldHRpbmcgdmFsdWUsIGRlZmF1bHRpbmcgaWYgbmVjZXNzYXJ5LiAqLw0KCV9nZXQ6IGZ1bmN0aW9uKCBpbnN0LCBuYW1lICkgew0KCQlyZXR1cm4gaW5zdC5zZXR0aW5nc1sgbmFtZSBdICE9PSB1bmRlZmluZWQgPw0KCQkJaW5zdC5zZXR0aW5nc1sgbmFtZSBdIDogdGhpcy5fZGVmYXVsdHNbIG5hbWUgXTsNCgl9LA0KDQoJLyogUGFyc2UgZXhpc3RpbmcgZGF0ZSBhbmQgaW5pdGlhbGlzZSBkYXRlIHBpY2tlci4gKi8NCglfc2V0RGF0ZUZyb21GaWVsZDogZnVuY3Rpb24oIGluc3QsIG5vRGVmYXVsdCApIHsNCgkJaWYgKCBpbnN0LmlucHV0LnZhbCgpID09PSBpbnN0Lmxhc3RWYWwgKSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQl2YXIgZGF0ZUZvcm1hdCA9IHRoaXMuX2dldCggaW5zdCwgImRhdGVGb3JtYXQiICksDQoJCQlkYXRlcyA9IGluc3QubGFzdFZhbCA9IGluc3QuaW5wdXQgPyBpbnN0LmlucHV0LnZhbCgpIDogbnVsbCwNCgkJCWRlZmF1bHREYXRlID0gdGhpcy5fZ2V0RGVmYXVsdERhdGUoIGluc3QgKSwNCgkJCWRhdGUgPSBkZWZhdWx0RGF0ZSwNCgkJCXNldHRpbmdzID0gdGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKCBpbnN0ICk7DQoNCgkJdHJ5IHsNCgkJCWRhdGUgPSB0aGlzLnBhcnNlRGF0ZSggZGF0ZUZvcm1hdCwgZGF0ZXMsIHNldHRpbmdzICkgfHwgZGVmYXVsdERhdGU7DQoJCX0gY2F0Y2ggKCBldmVudCApIHsNCgkJCWRhdGVzID0gKCBub0RlZmF1bHQgPyAiIiA6IGRhdGVzICk7DQoJCX0NCgkJaW5zdC5zZWxlY3RlZERheSA9IGRhdGUuZ2V0RGF0ZSgpOw0KCQlpbnN0LmRyYXdNb250aCA9IGluc3Quc2VsZWN0ZWRNb250aCA9IGRhdGUuZ2V0TW9udGgoKTsNCgkJaW5zdC5kcmF3WWVhciA9IGluc3Quc2VsZWN0ZWRZZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpOw0KCQlpbnN0LmN1cnJlbnREYXkgPSAoIGRhdGVzID8gZGF0ZS5nZXREYXRlKCkgOiAwICk7DQoJCWluc3QuY3VycmVudE1vbnRoID0gKCBkYXRlcyA\/IGRhdGUuZ2V0TW9udGgoKSA6IDAgKTsNCgkJaW5zdC5jdXJyZW50WWVhciA9ICggZGF0ZXMgPyBkYXRlLmdldEZ1bGxZZWFyKCkgOiAwICk7DQoJCXRoaXMuX2FkanVzdEluc3REYXRlKCBpbnN0ICk7DQoJfSwNCg0KCS8qIFJldHJpZXZlIHRoZSBkZWZhdWx0IGRhdGUgc2hvd24gb24gb3BlbmluZy4gKi8NCglfZ2V0RGVmYXVsdERhdGU6IGZ1bmN0aW9uKCBpbnN0ICkgew0KCQlyZXR1cm4gdGhpcy5fcmVzdHJpY3RNaW5NYXgoIGluc3QsDQoJCQl0aGlzLl9kZXRlcm1pbmVEYXRlKCBpbnN0LCB0aGlzLl9nZXQoIGluc3QsICJkZWZhdWx0RGF0ZSIgKSwgbmV3IERhdGUoKSApICk7DQoJfSwNCg0KCS8qIEEgZGF0ZSBtYXkgYmUgc3BlY2lmaWVkIGFzIGFuIGV4YWN0IHZhbHVlIG9yIGEgcmVsYXRpdmUgb25lLiAqLw0KCV9kZXRlcm1pbmVEYXRlOiBmdW5jdGlvbiggaW5zdCwgZGF0ZSwgZGVmYXVsdERhdGUgKSB7DQoJCXZhciBvZmZzZXROdW1lcmljID0gZnVuY3Rpb24oIG9mZnNldCApIHsNCgkJCQl2YXIgZGF0ZSA9IG5ldyBEYXRlKCk7DQoJCQkJZGF0ZS5zZXREYXRlKCBkYXRlLmdldERhdGUoKSArIG9mZnNldCApOw0KCQkJCXJldHVybiBkYXRlOw0KCQkJfSwNCgkJCW9mZnNldFN0cmluZyA9IGZ1bmN0aW9uKCBvZmZzZXQgKSB7DQoJCQkJdHJ5IHsNCgkJCQkJcmV0dXJuICQuZGF0ZXBpY2tlci5wYXJzZURhdGUoICQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAiZGF0ZUZvcm1hdCIgKSwNCgkJCQkJCW9mZnNldCwgJC5kYXRlcGlja2VyLl9nZXRGb3JtYXRDb25maWcoIGluc3QgKSApOw0KCQkJCX0NCgkJCQljYXRjaCAoIGUgKSB7DQoNCgkJCQkJLy8gSWdub3JlDQoJCQkJfQ0KDQoJCQkJdmFyIGRhdGUgPSAoIG9mZnNldC50b0xvd2VyQ2FzZSgpLm1hdGNoKCAvXmMvICkgPw0KCQkJCQkkLmRhdGVwaWNrZXIuX2dldERhdGUoIGluc3QgKSA6IG51bGwgKSB8fCBuZXcgRGF0ZSgpLA0KCQkJCQl5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpLA0KCQkJCQltb250aCA9IGRhdGUuZ2V0TW9udGgoKSwNCgkJCQkJZGF5ID0gZGF0ZS5nZXREYXRlKCksDQoJCQkJCXBhdHRlcm4gPSAvKFsrXC1dP1swLTldKylccyooZHxEfHd8V3xtfE18eXxZKT8vZywNCgkJCQkJbWF0Y2hlcyA9IHBhdHRlcm4uZXhlYyggb2Zmc2V0ICk7DQoNCgkJCQl3aGlsZSAoIG1hdGNoZXMgKSB7DQoJCQkJCXN3aXRjaCAoIG1hdGNoZXNbIDIgXSB8fCAiZCIgKSB7DQoJCQkJCQljYXNlICJkIiA6IGNhc2UgIkQiIDoNCgkJCQkJCQlkYXkgKz0gcGFyc2VJbnQoIG1hdGNoZXNbIDEgXSwgMTAgKTsgYnJlYWs7DQoJCQkJCQljYXNlICJ3IiA6IGNhc2UgIlciIDoNCgkJCQkJCQlkYXkgKz0gcGFyc2VJbnQoIG1hdGNoZXNbIDEgXSwgMTAgKSAqIDc7IGJyZWFrOw0KCQkJCQkJY2FzZSAibSIgOiBjYXNlICJNIiA6DQoJCQkJCQkJbW9udGggKz0gcGFyc2VJbnQoIG1hdGNoZXNbIDEgXSwgMTAgKTsNCgkJCQkJCQlkYXkgPSBNYXRoLm1pbiggZGF5LCAkLmRhdGVwaWNrZXIuX2dldERheXNJbk1vbnRoKCB5ZWFyLCBtb250aCApICk7DQoJCQkJCQkJYnJlYWs7DQoJCQkJCQljYXNlICJ5IjogY2FzZSAiWSIgOg0KCQkJCQkJCXllYXIgKz0gcGFyc2VJbnQoIG1hdGNoZXNbIDEgXSwgMTAgKTsNCgkJCQkJCQlkYXkgPSBNYXRoLm1pbiggZGF5LCAkLmRhdGVwaWNrZXIuX2dldERheXNJbk1vbnRoKCB5ZWFyLCBtb250aCApICk7DQoJCQkJCQkJYnJlYWs7DQoJCQkJCX0NCgkJCQkJbWF0Y2hlcyA9IHBhdHRlcm4uZXhlYyggb2Zmc2V0ICk7DQoJCQkJfQ0KCQkJCXJldHVybiBuZXcgRGF0ZSggeWVhciwgbW9udGgsIGRheSApOw0KCQkJfSwNCgkJCW5ld0RhdGUgPSAoIGRhdGUgPT0gbnVsbCB8fCBkYXRlID09PSAiIiA\/IGRlZmF1bHREYXRlIDogKCB0eXBlb2YgZGF0ZSA9PT0gInN0cmluZyIgPyBvZmZzZXRTdHJpbmcoIGRhdGUgKSA6DQoJCQkJKCB0eXBlb2YgZGF0ZSA9PT0gIm51bWJlciIgPyAoIGlzTmFOKCBkYXRlICkgPyBkZWZhdWx0RGF0ZSA6IG9mZnNldE51bWVyaWMoIGRhdGUgKSApIDogbmV3IERhdGUoIGRhdGUuZ2V0VGltZSgpICkgKSApICk7DQoNCgkJbmV3RGF0ZSA9ICggbmV3RGF0ZSAmJiBuZXdEYXRlLnRvU3RyaW5nKCkgPT09ICJJbnZhbGlkIERhdGUiID8gZGVmYXVsdERhdGUgOiBuZXdEYXRlICk7DQoJCWlmICggbmV3RGF0ZSApIHsNCgkJCW5ld0RhdGUuc2V0SG91cnMoIDAgKTsNCgkJCW5ld0RhdGUuc2V0TWludXRlcyggMCApOw0KCQkJbmV3RGF0ZS5zZXRTZWNvbmRzKCAwICk7DQoJCQluZXdEYXRlLnNldE1pbGxpc2Vjb25kcyggMCApOw0KCQl9DQoJCXJldHVybiB0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdCggbmV3RGF0ZSApOw0KCX0sDQoNCgkvKiBIYW5kbGUgc3dpdGNoIHRvL2Zyb20gZGF5bGlnaHQgc2F2aW5nLg0KCSAqIEhvdXJzIG1heSBiZSBub24temVybyBvbiBkYXlsaWdodCBzYXZpbmcgY3V0LW92ZXI6DQoJICogPiAxMiB3aGVuIG1pZG5pZ2h0IGNoYW5nZW92ZXIsIGJ1dCB0aGVuIGNhbm5vdCBnZW5lcmF0ZQ0KCSAqIG1pZG5pZ2h0IGRhdGV0aW1lLCBzbyBqdW1wIHRvIDFBTSwgb3RoZXJ3aXNlIHJlc2V0Lg0KCSAqIEBwYXJhbSAgZGF0ZSAgKERhdGUpIHRoZSBkYXRlIHRvIGNoZWNrDQoJICogQHJldHVybiAgKERhdGUpIHRoZSBjb3JyZWN0ZWQgZGF0ZQ0KCSAqLw0KCV9kYXlsaWdodFNhdmluZ0FkanVzdDogZnVuY3Rpb24oIGRhdGUgKSB7DQoJCWlmICggIWRhdGUgKSB7DQoJCQlyZXR1cm4gbnVsbDsNCgkJfQ0KCQlkYXRlLnNldEhvdXJzKCBkYXRlLmdldEhvdXJzKCkgPiAxMiA\/IGRhdGUuZ2V0SG91cnMoKSArIDIgOiAwICk7DQoJCXJldHVybiBkYXRlOw0KCX0sDQoNCgkvKiBTZXQgdGhlIGRhdGUocykgZGlyZWN0bHkuICovDQoJX3NldERhdGU6IGZ1bmN0aW9uKCBpbnN0LCBkYXRlLCBub0NoYW5nZSApIHsNCgkJdmFyIGNsZWFyID0gIWRhdGUsDQoJCQlvcmlnTW9udGggPSBpbnN0LnNlbGVjdGVkTW9udGgsDQoJCQlvcmlnWWVhciA9IGluc3Quc2VsZWN0ZWRZZWFyLA0KCQkJbmV3RGF0ZSA9IHRoaXMuX3Jlc3RyaWN0TWluTWF4KCBpbnN0LCB0aGlzLl9kZXRlcm1pbmVEYXRlKCBpbnN0LCBkYXRlLCBuZXcgRGF0ZSgpICkgKTsNCg0KCQlpbnN0LnNlbGVjdGVkRGF5ID0gaW5zdC5jdXJyZW50RGF5ID0gbmV3RGF0ZS5nZXREYXRlKCk7DQoJCWluc3QuZHJhd01vbnRoID0gaW5zdC5zZWxlY3RlZE1vbnRoID0gaW5zdC5jdXJyZW50TW9udGggPSBuZXdEYXRlLmdldE1vbnRoKCk7DQoJCWluc3QuZHJhd1llYXIgPSBpbnN0LnNlbGVjdGVkWWVhciA9IGluc3QuY3VycmVudFllYXIgPSBuZXdEYXRlLmdldEZ1bGxZZWFyKCk7DQoJCWlmICggKCBvcmlnTW9udGggIT09IGluc3Quc2VsZWN0ZWRNb250aCB8fCBvcmlnWWVhciAhPT0gaW5zdC5zZWxlY3RlZFllYXIgKSAmJiAhbm9DaGFuZ2UgKSB7DQoJCQl0aGlzLl9ub3RpZnlDaGFuZ2UoIGluc3QgKTsNCgkJfQ0KCQl0aGlzLl9hZGp1c3RJbnN0RGF0ZSggaW5zdCApOw0KCQlpZiAoIGluc3QuaW5wdXQgKSB7DQoJCQlpbnN0LmlucHV0LnZhbCggY2xlYXIgPyAiIiA6IHRoaXMuX2Zvcm1hdERhdGUoIGluc3QgKSApOw0KCQl9DQoJfSwNCg0KCS8qIFJldHJpZXZlIHRoZSBkYXRlKHMpIGRpcmVjdGx5LiAqLw0KCV9nZXREYXRlOiBmdW5jdGlvbiggaW5zdCApIHsNCgkJdmFyIHN0YXJ0RGF0ZSA9ICggIWluc3QuY3VycmVudFllYXIgfHwgKCBpbnN0LmlucHV0ICYmIGluc3QuaW5wdXQudmFsKCkgPT09ICIiICkgPyBudWxsIDoNCgkJCXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KCBuZXcgRGF0ZSgNCgkJCWluc3QuY3VycmVudFllYXIsIGluc3QuY3VycmVudE1vbnRoLCBpbnN0LmN1cnJlbnREYXkgKSApICk7DQoJCQlyZXR1cm4gc3RhcnREYXRlOw0KCX0sDQoNCgkvKiBBdHRhY2ggdGhlIG9ueHh4IGhhbmRsZXJzLiAgVGhlc2UgYXJlIGRlY2xhcmVkIHN0YXRpY2FsbHkgc28NCgkgKiB0aGV5IHdvcmsgd2l0aCBzdGF0aWMgY29kZSB0cmFuc2Zvcm1lcnMgbGlrZSBDYWphLg0KCSAqLw0KCV9hdHRhY2hIYW5kbGVyczogZnVuY3Rpb24oIGluc3QgKSB7DQoJCXZhciBzdGVwTW9udGhzID0gdGhpcy5fZ2V0KCBpbnN0LCAic3RlcE1vbnRocyIgKSwNCgkJCWlkID0gIiMiICsgaW5zdC5pZC5yZXBsYWNlKCAvXFxcXC9nLCAiXFwiICk7DQoJCWluc3QuZHBEaXYuZmluZCggIltkYXRhLWhhbmRsZXJdIiApLm1hcCggZnVuY3Rpb24oKSB7DQoJCQl2YXIgaGFuZGxlciA9IHsNCgkJCQlwcmV2OiBmdW5jdGlvbigpIHsNCgkJCQkJJC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKCBpZCwgLXN0ZXBNb250aHMsICJNIiApOw0KCQkJCX0sDQoJCQkJbmV4dDogZnVuY3Rpb24oKSB7DQoJCQkJCSQuZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZSggaWQsICtzdGVwTW9udGhzLCAiTSIgKTsNCgkJCQl9LA0KCQkJCWhpZGU6IGZ1bmN0aW9uKCkgew0KCQkJCQkkLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCk7DQoJCQkJfSwNCgkJCQl0b2RheTogZnVuY3Rpb24oKSB7DQoJCQkJCSQuZGF0ZXBpY2tlci5fZ290b1RvZGF5KCBpZCApOw0KCQkJCX0sDQoJCQkJc2VsZWN0RGF5OiBmdW5jdGlvbigpIHsNCgkJCQkJJC5kYXRlcGlja2VyLl9zZWxlY3REYXkoIGlkLCArdGhpcy5nZXRBdHRyaWJ1dGUoICJkYXRhLW1vbnRoIiApLCArdGhpcy5nZXRBdHRyaWJ1dGUoICJkYXRhLXllYXIiICksIHRoaXMgKTsNCgkJCQkJcmV0dXJuIGZhbHNlOw0KCQkJCX0sDQoJCQkJc2VsZWN0TW9udGg6IGZ1bmN0aW9uKCkgew0KCQkJCQkkLmRhdGVwaWNrZXIuX3NlbGVjdE1vbnRoWWVhciggaWQsIHRoaXMsICJNIiApOw0KCQkJCQlyZXR1cm4gZmFsc2U7DQoJCQkJfSwNCgkJCQlzZWxlY3RZZWFyOiBmdW5jdGlvbigpIHsNCgkJCQkJJC5kYXRlcGlja2VyLl9zZWxlY3RNb250aFllYXIoIGlkLCB0aGlzLCAiWSIgKTsNCgkJCQkJcmV0dXJuIGZhbHNlOw0KCQkJCX0NCgkJCX07DQoJCQkkKCB0aGlzICkub24oIHRoaXMuZ2V0QXR0cmlidXRlKCAiZGF0YS1ldmVudCIgKSwgaGFuZGxlclsgdGhpcy5nZXRBdHRyaWJ1dGUoICJkYXRhLWhhbmRsZXIiICkgXSApOw0KCQl9ICk7DQoJfSwNCg0KCS8qIEdlbmVyYXRlIHRoZSBIVE1MIGZvciB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgZGF0ZSBwaWNrZXIuICovDQoJX2dlbmVyYXRlSFRNTDogZnVuY3Rpb24oIGluc3QgKSB7DQoJCXZhciBtYXhEcmF3LCBwcmV2VGV4dCwgcHJldiwgbmV4dFRleHQsIG5leHQsIGN1cnJlbnRUZXh0LCBnb3RvRGF0ZSwNCgkJCWNvbnRyb2xzLCBidXR0b25QYW5lbCwgZmlyc3REYXksIHNob3dXZWVrLCBkYXlOYW1lcywgZGF5TmFtZXNNaW4sDQoJCQltb250aE5hbWVzLCBtb250aE5hbWVzU2hvcnQsIGJlZm9yZVNob3dEYXksIHNob3dPdGhlck1vbnRocywNCgkJCXNlbGVjdE90aGVyTW9udGhzLCBkZWZhdWx0RGF0ZSwgaHRtbCwgZG93LCByb3csIGdyb3VwLCBjb2wsIHNlbGVjdGVkRGF0ZSwNCgkJCWNvcm5lckNsYXNzLCBjYWxlbmRlciwgdGhlYWQsIGRheSwgZGF5c0luTW9udGgsIGxlYWREYXlzLCBjdXJSb3dzLCBudW1Sb3dzLA0KCQkJcHJpbnREYXRlLCBkUm93LCB0Ym9keSwgZGF5U2V0dGluZ3MsIG90aGVyTW9udGgsIHVuc2VsZWN0YWJsZSwNCgkJCXRlbXBEYXRlID0gbmV3IERhdGUoKSwNCgkJCXRvZGF5ID0gdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoDQoJCQkJbmV3IERhdGUoIHRlbXBEYXRlLmdldEZ1bGxZZWFyKCksIHRlbXBEYXRlLmdldE1vbnRoKCksIHRlbXBEYXRlLmdldERhdGUoKSApICksIC8vIGNsZWFyIHRpbWUNCgkJCWlzUlRMID0gdGhpcy5fZ2V0KCBpbnN0LCAiaXNSVEwiICksDQoJCQlzaG93QnV0dG9uUGFuZWwgPSB0aGlzLl9nZXQoIGluc3QsICJzaG93QnV0dG9uUGFuZWwiICksDQoJCQloaWRlSWZOb1ByZXZOZXh0ID0gdGhpcy5fZ2V0KCBpbnN0LCAiaGlkZUlmTm9QcmV2TmV4dCIgKSwNCgkJCW5hdmlnYXRpb25Bc0RhdGVGb3JtYXQgPSB0aGlzLl9nZXQoIGluc3QsICJuYXZpZ2F0aW9uQXNEYXRlRm9ybWF0IiApLA0KCQkJbnVtTW9udGhzID0gdGhpcy5fZ2V0TnVtYmVyT2ZNb250aHMoIGluc3QgKSwNCgkJCXNob3dDdXJyZW50QXRQb3MgPSB0aGlzLl9nZXQoIGluc3QsICJzaG93Q3VycmVudEF0UG9zIiApLA0KCQkJc3RlcE1vbnRocyA9IHRoaXMuX2dldCggaW5zdCwgInN0ZXBNb250aHMiICksDQoJCQlpc011bHRpTW9udGggPSAoIG51bU1vbnRoc1sgMCBdICE9PSAxIHx8IG51bU1vbnRoc1sgMSBdICE9PSAxICksDQoJCQljdXJyZW50RGF0ZSA9IHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KCAoICFpbnN0LmN1cnJlbnREYXkgPyBuZXcgRGF0ZSggOTk5OSwgOSwgOSApIDoNCgkJCQluZXcgRGF0ZSggaW5zdC5jdXJyZW50WWVhciwgaW5zdC5jdXJyZW50TW9udGgsIGluc3QuY3VycmVudERheSApICkgKSwNCgkJCW1pbkRhdGUgPSB0aGlzLl9nZXRNaW5NYXhEYXRlKCBpbnN0LCAibWluIiApLA0KCQkJbWF4RGF0ZSA9IHRoaXMuX2dldE1pbk1heERhdGUoIGluc3QsICJtYXgiICksDQoJCQlkcmF3TW9udGggPSBpbnN0LmRyYXdNb250aCAtIHNob3dDdXJyZW50QXRQb3MsDQoJCQlkcmF3WWVhciA9IGluc3QuZHJhd1llYXI7DQoNCgkJaWYgKCBkcmF3TW9udGggPCAwICkgew0KCQkJZHJhd01vbnRoICs9IDEyOw0KCQkJZHJhd1llYXItLTsNCgkJfQ0KCQlpZiAoIG1heERhdGUgKSB7DQoJCQltYXhEcmF3ID0gdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoIG5ldyBEYXRlKCBtYXhEYXRlLmdldEZ1bGxZZWFyKCksDQoJCQkJbWF4RGF0ZS5nZXRNb250aCgpIC0gKCBudW1Nb250aHNbIDAgXSAqIG51bU1vbnRoc1sgMSBdICkgKyAxLCBtYXhEYXRlLmdldERhdGUoKSApICk7DQoJCQltYXhEcmF3ID0gKCBtaW5EYXRlICYmIG1heERyYXcgPCBtaW5EYXRlID8gbWluRGF0ZSA6IG1heERyYXcgKTsNCgkJCXdoaWxlICggdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoIG5ldyBEYXRlKCBkcmF3WWVhciwgZHJhd01vbnRoLCAxICkgKSA+IG1heERyYXcgKSB7DQoJCQkJZHJhd01vbnRoLS07DQoJCQkJaWYgKCBkcmF3TW9udGggPCAwICkgew0KCQkJCQlkcmF3TW9udGggPSAxMTsNCgkJCQkJZHJhd1llYXItLTsNCgkJCQl9DQoJCQl9DQoJCX0NCgkJaW5zdC5kcmF3TW9udGggPSBkcmF3TW9udGg7DQoJCWluc3QuZHJhd1llYXIgPSBkcmF3WWVhcjsNCg0KCQlwcmV2VGV4dCA9IHRoaXMuX2dldCggaW5zdCwgInByZXZUZXh0IiApOw0KCQlwcmV2VGV4dCA9ICggIW5hdmlnYXRpb25Bc0RhdGVGb3JtYXQgPyBwcmV2VGV4dCA6IHRoaXMuZm9ybWF0RGF0ZSggcHJldlRleHQsDQoJCQl0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdCggbmV3IERhdGUoIGRyYXdZZWFyLCBkcmF3TW9udGggLSBzdGVwTW9udGhzLCAxICkgKSwNCgkJCXRoaXMuX2dldEZvcm1hdENvbmZpZyggaW5zdCApICkgKTsNCg0KCQlwcmV2ID0gKCB0aGlzLl9jYW5BZGp1c3RNb250aCggaW5zdCwgLTEsIGRyYXdZZWFyLCBkcmF3TW9udGggKSA\/DQoJCQkiPGEgY2xhc3M9J3VpLWRhdGVwaWNrZXItcHJldiB1aS1jb3JuZXItYWxsJyBkYXRhLWhhbmRsZXI9J3ByZXYnIGRhdGEtZXZlbnQ9J2NsaWNrJyIgKw0KCQkJIiB0aXRsZT0nIiArIHByZXZUZXh0ICsgIic+PHNwYW4gY2xhc3M9J3VpLWljb24gdWktaWNvbi1jaXJjbGUtdHJpYW5nbGUtIiArICggaXNSVEwgPyAiZSIgOiAidyIgKSArICInPiIgKyBwcmV2VGV4dCArICI8L3NwYW4+PC9hPiIgOg0KCQkJKCBoaWRlSWZOb1ByZXZOZXh0ID8gIiIgOiAiPGEgY2xhc3M9J3VpLWRhdGVwaWNrZXItcHJldiB1aS1jb3JuZXItYWxsIHVpLXN0YXRlLWRpc2FibGVkJyB0aXRsZT0nIiArIHByZXZUZXh0ICsgIic+PHNwYW4gY2xhc3M9J3VpLWljb24gdWktaWNvbi1jaXJjbGUtdHJpYW5nbGUtIiArICggaXNSVEwgPyAiZSIgOiAidyIgKSArICInPiIgKyBwcmV2VGV4dCArICI8L3NwYW4+PC9hPiIgKSApOw0KDQoJCW5leHRUZXh0ID0gdGhpcy5fZ2V0KCBpbnN0LCAibmV4dFRleHQiICk7DQoJCW5leHRUZXh0ID0gKCAhbmF2aWdhdGlvbkFzRGF0ZUZvcm1hdCA\/IG5leHRUZXh0IDogdGhpcy5mb3JtYXREYXRlKCBuZXh0VGV4dCwNCgkJCXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KCBuZXcgRGF0ZSggZHJhd1llYXIsIGRyYXdNb250aCArIHN0ZXBNb250aHMsIDEgKSApLA0KCQkJdGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKCBpbnN0ICkgKSApOw0KDQoJCW5leHQgPSAoIHRoaXMuX2NhbkFkanVzdE1vbnRoKCBpbnN0LCArMSwgZHJhd1llYXIsIGRyYXdNb250aCApID8NCgkJCSI8YSBjbGFzcz0ndWktZGF0ZXBpY2tlci1uZXh0IHVpLWNvcm5lci1hbGwnIGRhdGEtaGFuZGxlcj0nbmV4dCcgZGF0YS1ldmVudD0nY2xpY2snIiArDQoJCQkiIHRpdGxlPSciICsgbmV4dFRleHQgKyAiJz48c3BhbiBjbGFzcz0ndWktaWNvbiB1aS1pY29uLWNpcmNsZS10cmlhbmdsZS0iICsgKCBpc1JUTCA\/ICJ3IiA6ICJlIiApICsgIic+IiArIG5leHRUZXh0ICsgIjwvc3Bhbj48L2E+IiA6DQoJCQkoIGhpZGVJZk5vUHJldk5leHQgPyAiIiA6ICI8YSBjbGFzcz0ndWktZGF0ZXBpY2tlci1uZXh0IHVpLWNvcm5lci1hbGwgdWktc3RhdGUtZGlzYWJsZWQnIHRpdGxlPSciICsgbmV4dFRleHQgKyAiJz48c3BhbiBjbGFzcz0ndWktaWNvbiB1aS1pY29uLWNpcmNsZS10cmlhbmdsZS0iICsgKCBpc1JUTCA\/ICJ3IiA6ICJlIiApICsgIic+IiArIG5leHRUZXh0ICsgIjwvc3Bhbj48L2E+IiApICk7DQoNCgkJY3VycmVudFRleHQgPSB0aGlzLl9nZXQoIGluc3QsICJjdXJyZW50VGV4dCIgKTsNCgkJZ290b0RhdGUgPSAoIHRoaXMuX2dldCggaW5zdCwgImdvdG9DdXJyZW50IiApICYmIGluc3QuY3VycmVudERheSA\/IGN1cnJlbnREYXRlIDogdG9kYXkgKTsNCgkJY3VycmVudFRleHQgPSAoICFuYXZpZ2F0aW9uQXNEYXRlRm9ybWF0ID8gY3VycmVudFRleHQgOg0KCQkJdGhpcy5mb3JtYXREYXRlKCBjdXJyZW50VGV4dCwgZ290b0RhdGUsIHRoaXMuX2dldEZvcm1hdENvbmZpZyggaW5zdCApICkgKTsNCg0KCQljb250cm9scyA9ICggIWluc3QuaW5saW5lID8gIjxidXR0b24gdHlwZT0nYnV0dG9uJyBjbGFzcz0ndWktZGF0ZXBpY2tlci1jbG9zZSB1aS1zdGF0ZS1kZWZhdWx0IHVpLXByaW9yaXR5LXByaW1hcnkgdWktY29ybmVyLWFsbCcgZGF0YS1oYW5kbGVyPSdoaWRlJyBkYXRhLWV2ZW50PSdjbGljayc+IiArDQoJCQl0aGlzLl9nZXQoIGluc3QsICJjbG9zZVRleHQiICkgKyAiPC9idXR0b24+IiA6ICIiICk7DQoNCgkJYnV0dG9uUGFuZWwgPSAoIHNob3dCdXR0b25QYW5lbCApID8gIjxkaXYgY2xhc3M9J3VpLWRhdGVwaWNrZXItYnV0dG9ucGFuZSB1aS13aWRnZXQtY29udGVudCc+IiArICggaXNSVEwgPyBjb250cm9scyA6ICIiICkgKw0KCQkJKCB0aGlzLl9pc0luUmFuZ2UoIGluc3QsIGdvdG9EYXRlICkgPyAiPGJ1dHRvbiB0eXBlPSdidXR0b24nIGNsYXNzPSd1aS1kYXRlcGlja2VyLWN1cnJlbnQgdWktc3RhdGUtZGVmYXVsdCB1aS1wcmlvcml0eS1zZWNvbmRhcnkgdWktY29ybmVyLWFsbCcgZGF0YS1oYW5kbGVyPSd0b2RheScgZGF0YS1ldmVudD0nY2xpY2snIiArDQoJCQkiPiIgKyBjdXJyZW50VGV4dCArICI8L2J1dHRvbj4iIDogIiIgKSArICggaXNSVEwgPyAiIiA6IGNvbnRyb2xzICkgKyAiPC9kaXY+IiA6ICIiOw0KDQoJCWZpcnN0RGF5ID0gcGFyc2VJbnQoIHRoaXMuX2dldCggaW5zdCwgImZpcnN0RGF5IiApLCAxMCApOw0KCQlmaXJzdERheSA9ICggaXNOYU4oIGZpcnN0RGF5ICkgPyAwIDogZmlyc3REYXkgKTsNCg0KCQlzaG93V2VlayA9IHRoaXMuX2dldCggaW5zdCwgInNob3dXZWVrIiApOw0KCQlkYXlOYW1lcyA9IHRoaXMuX2dldCggaW5zdCwgImRheU5hbWVzIiApOw0KCQlkYXlOYW1lc01pbiA9IHRoaXMuX2dldCggaW5zdCwgImRheU5hbWVzTWluIiApOw0KCQltb250aE5hbWVzID0gdGhpcy5fZ2V0KCBpbnN0LCAibW9udGhOYW1lcyIgKTsNCgkJbW9udGhOYW1lc1Nob3J0ID0gdGhpcy5fZ2V0KCBpbnN0LCAibW9udGhOYW1lc1Nob3J0IiApOw0KCQliZWZvcmVTaG93RGF5ID0gdGhpcy5fZ2V0KCBpbnN0LCAiYmVmb3JlU2hvd0RheSIgKTsNCgkJc2hvd090aGVyTW9udGhzID0gdGhpcy5fZ2V0KCBpbnN0LCAic2hvd090aGVyTW9udGhzIiApOw0KCQlzZWxlY3RPdGhlck1vbnRocyA9IHRoaXMuX2dldCggaW5zdCwgInNlbGVjdE90aGVyTW9udGhzIiApOw0KCQlkZWZhdWx0RGF0ZSA9IHRoaXMuX2dldERlZmF1bHREYXRlKCBpbnN0ICk7DQoJCWh0bWwgPSAiIjsNCg0KCQlmb3IgKCByb3cgPSAwOyByb3cgPCBudW1Nb250aHNbIDAgXTsgcm93KysgKSB7DQoJCQlncm91cCA9ICIiOw0KCQkJdGhpcy5tYXhSb3dzID0gNDsNCgkJCWZvciAoIGNvbCA9IDA7IGNvbCA8IG51bU1vbnRoc1sgMSBdOyBjb2wrKyApIHsNCgkJCQlzZWxlY3RlZERhdGUgPSB0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdCggbmV3IERhdGUoIGRyYXdZZWFyLCBkcmF3TW9udGgsIGluc3Quc2VsZWN0ZWREYXkgKSApOw0KCQkJCWNvcm5lckNsYXNzID0gIiB1aS1jb3JuZXItYWxsIjsNCgkJCQljYWxlbmRlciA9ICIiOw0KCQkJCWlmICggaXNNdWx0aU1vbnRoICkgew0KCQkJCQljYWxlbmRlciArPSAiPGRpdiBjbGFzcz0ndWktZGF0ZXBpY2tlci1ncm91cCI7DQoJCQkJCWlmICggbnVtTW9udGhzWyAxIF0gPiAxICkgew0KCQkJCQkJc3dpdGNoICggY29sICkgew0KCQkJCQkJCWNhc2UgMDogY2FsZW5kZXIgKz0gIiB1aS1kYXRlcGlja2VyLWdyb3VwLWZpcnN0IjsNCgkJCQkJCQkJY29ybmVyQ2xhc3MgPSAiIHVpLWNvcm5lci0iICsgKCBpc1JUTCA\/ICJyaWdodCIgOiAibGVmdCIgKTsgYnJlYWs7DQoJCQkJCQkJY2FzZSBudW1Nb250aHNbIDEgXSAtIDE6IGNhbGVuZGVyICs9ICIgdWktZGF0ZXBpY2tlci1ncm91cC1sYXN0IjsNCgkJCQkJCQkJY29ybmVyQ2xhc3MgPSAiIHVpLWNvcm5lci0iICsgKCBpc1JUTCA\/ICJsZWZ0IiA6ICJyaWdodCIgKTsgYnJlYWs7DQoJCQkJCQkJZGVmYXVsdDogY2FsZW5kZXIgKz0gIiB1aS1kYXRlcGlja2VyLWdyb3VwLW1pZGRsZSI7IGNvcm5lckNsYXNzID0gIiI7IGJyZWFrOw0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJCWNhbGVuZGVyICs9ICInPiI7DQoJCQkJfQ0KCQkJCWNhbGVuZGVyICs9ICI8ZGl2IGNsYXNzPSd1aS1kYXRlcGlja2VyLWhlYWRlciB1aS13aWRnZXQtaGVhZGVyIHVpLWhlbHBlci1jbGVhcmZpeCIgKyBjb3JuZXJDbGFzcyArICInPiIgKw0KCQkJCQkoIC9hbGx8bGVmdC8udGVzdCggY29ybmVyQ2xhc3MgKSAmJiByb3cgPT09IDAgPyAoIGlzUlRMID8gbmV4dCA6IHByZXYgKSA6ICIiICkgKw0KCQkJCQkoIC9hbGx8cmlnaHQvLnRlc3QoIGNvcm5lckNsYXNzICkgJiYgcm93ID09PSAwID8gKCBpc1JUTCA\/IHByZXYgOiBuZXh0ICkgOiAiIiApICsNCgkJCQkJdGhpcy5fZ2VuZXJhdGVNb250aFllYXJIZWFkZXIoIGluc3QsIGRyYXdNb250aCwgZHJhd1llYXIsIG1pbkRhdGUsIG1heERhdGUsDQoJCQkJCXJvdyA+IDAgfHwgY29sID4gMCwgbW9udGhOYW1lcywgbW9udGhOYW1lc1Nob3J0ICkgKyAvLyBkcmF3IG1vbnRoIGhlYWRlcnMNCgkJCQkJIjwvZGl2Pjx0YWJsZSBjbGFzcz0ndWktZGF0ZXBpY2tlci1jYWxlbmRhcic+PHRoZWFkPiIgKw0KCQkJCQkiPHRyPiI7DQoJCQkJdGhlYWQgPSAoIHNob3dXZWVrID8gIjx0aCBjbGFzcz0ndWktZGF0ZXBpY2tlci13ZWVrLWNvbCc+IiArIHRoaXMuX2dldCggaW5zdCwgIndlZWtIZWFkZXIiICkgKyAiPC90aD4iIDogIiIgKTsNCgkJCQlmb3IgKCBkb3cgPSAwOyBkb3cgPCA3OyBkb3crKyApIHsgLy8gZGF5cyBvZiB0aGUgd2Vlaw0KCQkJCQlkYXkgPSAoIGRvdyArIGZpcnN0RGF5ICkgJSA3Ow0KCQkJCQl0aGVhZCArPSAiPHRoIHNjb3BlPSdjb2wnIiArICggKCBkb3cgKyBmaXJzdERheSArIDYgKSAlIDcgPj0gNSA\/ICIgY2xhc3M9J3VpLWRhdGVwaWNrZXItd2Vlay1lbmQnIiA6ICIiICkgKyAiPiIgKw0KCQkJCQkJIjxzcGFuIHRpdGxlPSciICsgZGF5TmFtZXNbIGRheSBdICsgIic+IiArIGRheU5hbWVzTWluWyBkYXkgXSArICI8L3NwYW4+PC90aD4iOw0KCQkJCX0NCgkJCQljYWxlbmRlciArPSB0aGVhZCArICI8L3RyPjwvdGhlYWQ+PHRib2R5PiI7DQoJCQkJZGF5c0luTW9udGggPSB0aGlzLl9nZXREYXlzSW5Nb250aCggZHJhd1llYXIsIGRyYXdNb250aCApOw0KCQkJCWlmICggZHJhd1llYXIgPT09IGluc3Quc2VsZWN0ZWRZZWFyICYmIGRyYXdNb250aCA9PT0gaW5zdC5zZWxlY3RlZE1vbnRoICkgew0KCQkJCQlpbnN0LnNlbGVjdGVkRGF5ID0gTWF0aC5taW4oIGluc3Quc2VsZWN0ZWREYXksIGRheXNJbk1vbnRoICk7DQoJCQkJfQ0KCQkJCWxlYWREYXlzID0gKCB0aGlzLl9nZXRGaXJzdERheU9mTW9udGgoIGRyYXdZZWFyLCBkcmF3TW9udGggKSAtIGZpcnN0RGF5ICsgNyApICUgNzsNCgkJCQljdXJSb3dzID0gTWF0aC5jZWlsKCAoIGxlYWREYXlzICsgZGF5c0luTW9udGggKSAvIDcgKTsgLy8gY2FsY3VsYXRlIHRoZSBudW1iZXIgb2Ygcm93cyB0byBnZW5lcmF0ZQ0KCQkJCW51bVJvd3MgPSAoIGlzTXVsdGlNb250aCA\/IHRoaXMubWF4Um93cyA+IGN1clJvd3MgPyB0aGlzLm1heFJvd3MgOiBjdXJSb3dzIDogY3VyUm93cyApOyAvL0lmIG11bHRpcGxlIG1vbnRocywgdXNlIHRoZSBoaWdoZXIgbnVtYmVyIG9mIHJvd3MgKHNlZSAjNzA0MykNCgkJCQl0aGlzLm1heFJvd3MgPSBudW1Sb3dzOw0KCQkJCXByaW50RGF0ZSA9IHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KCBuZXcgRGF0ZSggZHJhd1llYXIsIGRyYXdNb250aCwgMSAtIGxlYWREYXlzICkgKTsNCgkJCQlmb3IgKCBkUm93ID0gMDsgZFJvdyA8IG51bVJvd3M7IGRSb3crKyApIHsgLy8gY3JlYXRlIGRhdGUgcGlja2VyIHJvd3MNCgkJCQkJY2FsZW5kZXIgKz0gIjx0cj4iOw0KCQkJCQl0Ym9keSA9ICggIXNob3dXZWVrID8gIiIgOiAiPHRkIGNsYXNzPSd1aS1kYXRlcGlja2VyLXdlZWstY29sJz4iICsNCgkJCQkJCXRoaXMuX2dldCggaW5zdCwgImNhbGN1bGF0ZVdlZWsiICkoIHByaW50RGF0ZSApICsgIjwvdGQ+IiApOw0KCQkJCQlmb3IgKCBkb3cgPSAwOyBkb3cgPCA3OyBkb3crKyApIHsgLy8gY3JlYXRlIGRhdGUgcGlja2VyIGRheXMNCgkJCQkJCWRheVNldHRpbmdzID0gKCBiZWZvcmVTaG93RGF5ID8NCgkJCQkJCQliZWZvcmVTaG93RGF5LmFwcGx5KCAoIGluc3QuaW5wdXQgPyBpbnN0LmlucHV0WyAwIF0gOiBudWxsICksIFsgcHJpbnREYXRlIF0gKSA6IFsgdHJ1ZSwgIiIgXSApOw0KCQkJCQkJb3RoZXJNb250aCA9ICggcHJpbnREYXRlLmdldE1vbnRoKCkgIT09IGRyYXdNb250aCApOw0KCQkJCQkJdW5zZWxlY3RhYmxlID0gKCBvdGhlck1vbnRoICYmICFzZWxlY3RPdGhlck1vbnRocyApIHx8ICFkYXlTZXR0aW5nc1sgMCBdIHx8DQoJCQkJCQkJKCBtaW5EYXRlICYmIHByaW50RGF0ZSA8IG1pbkRhdGUgKSB8fCAoIG1heERhdGUgJiYgcHJpbnREYXRlID4gbWF4RGF0ZSApOw0KCQkJCQkJdGJvZHkgKz0gIjx0ZCBjbGFzcz0nIiArDQoJCQkJCQkJKCAoIGRvdyArIGZpcnN0RGF5ICsgNiApICUgNyA+PSA1ID8gIiB1aS1kYXRlcGlja2VyLXdlZWstZW5kIiA6ICIiICkgKyAvLyBoaWdobGlnaHQgd2Vla2VuZHMNCgkJCQkJCQkoIG90aGVyTW9udGggPyAiIHVpLWRhdGVwaWNrZXItb3RoZXItbW9udGgiIDogIiIgKSArIC8vIGhpZ2hsaWdodCBkYXlzIGZyb20gb3RoZXIgbW9udGhzDQoJCQkJCQkJKCAoIHByaW50RGF0ZS5nZXRUaW1lKCkgPT09IHNlbGVjdGVkRGF0ZS5nZXRUaW1lKCkgJiYgZHJhd01vbnRoID09PSBpbnN0LnNlbGVjdGVkTW9udGggJiYgaW5zdC5fa2V5RXZlbnQgKSB8fCAvLyB1c2VyIHByZXNzZWQga2V5DQoJCQkJCQkJKCBkZWZhdWx0RGF0ZS5nZXRUaW1lKCkgPT09IHByaW50RGF0ZS5nZXRUaW1lKCkgJiYgZGVmYXVsdERhdGUuZ2V0VGltZSgpID09PSBzZWxlY3RlZERhdGUuZ2V0VGltZSgpICkgPw0KDQoJCQkJCQkJLy8gb3IgZGVmYXVsdERhdGUgaXMgY3VycmVudCBwcmludGVkRGF0ZSBhbmQgZGVmYXVsdERhdGUgaXMgc2VsZWN0ZWREYXRlDQoJCQkJCQkJIiAiICsgdGhpcy5fZGF5T3ZlckNsYXNzIDogIiIgKSArIC8vIGhpZ2hsaWdodCBzZWxlY3RlZCBkYXkNCgkJCQkJCQkoIHVuc2VsZWN0YWJsZSA\/ICIgIiArIHRoaXMuX3Vuc2VsZWN0YWJsZUNsYXNzICsgIiB1aS1zdGF0ZS1kaXNhYmxlZCIgOiAiIiApICsgIC8vIGhpZ2hsaWdodCB1bnNlbGVjdGFibGUgZGF5cw0KCQkJCQkJCSggb3RoZXJNb250aCAmJiAhc2hvd090aGVyTW9udGhzID8gIiIgOiAiICIgKyBkYXlTZXR0aW5nc1sgMSBdICsgLy8gaGlnaGxpZ2h0IGN1c3RvbSBkYXRlcw0KCQkJCQkJCSggcHJpbnREYXRlLmdldFRpbWUoKSA9PT0gY3VycmVudERhdGUuZ2V0VGltZSgpID8gIiAiICsgdGhpcy5fY3VycmVudENsYXNzIDogIiIgKSArIC8vIGhpZ2hsaWdodCBzZWxlY3RlZCBkYXkNCgkJCQkJCQkoIHByaW50RGF0ZS5nZXRUaW1lKCkgPT09IHRvZGF5LmdldFRpbWUoKSA\/ICIgdWktZGF0ZXBpY2tlci10b2RheSIgOiAiIiApICkgKyAiJyIgKyAvLyBoaWdobGlnaHQgdG9kYXkgKGlmIGRpZmZlcmVudCkNCgkJCQkJCQkoICggIW90aGVyTW9udGggfHwgc2hvd090aGVyTW9udGhzICkgJiYgZGF5U2V0dGluZ3NbIDIgXSA\/ICIgdGl0bGU9JyIgKyBkYXlTZXR0aW5nc1sgMiBdLnJlcGxhY2UoIC8nL2csICImIzM5OyIgKSArICInIiA6ICIiICkgKyAvLyBjZWxsIHRpdGxlDQoJCQkJCQkJKCB1bnNlbGVjdGFibGUgPyAiIiA6ICIgZGF0YS1oYW5kbGVyPSdzZWxlY3REYXknIGRhdGEtZXZlbnQ9J2NsaWNrJyBkYXRhLW1vbnRoPSciICsgcHJpbnREYXRlLmdldE1vbnRoKCkgKyAiJyBkYXRhLXllYXI9JyIgKyBwcmludERhdGUuZ2V0RnVsbFllYXIoKSArICInIiApICsgIj4iICsgLy8gYWN0aW9ucw0KCQkJCQkJCSggb3RoZXJNb250aCAmJiAhc2hvd090aGVyTW9udGhzID8gIiYjeGEwOyIgOiAvLyBkaXNwbGF5IGZvciBvdGhlciBtb250aHMNCgkJCQkJCQkoIHVuc2VsZWN0YWJsZSA\/ICI8c3BhbiBjbGFzcz0ndWktc3RhdGUtZGVmYXVsdCc+IiArIHByaW50RGF0ZS5nZXREYXRlKCkgKyAiPC9zcGFuPiIgOiAiPGEgY2xhc3M9J3VpLXN0YXRlLWRlZmF1bHQiICsNCgkJCQkJCQkoIHByaW50RGF0ZS5nZXRUaW1lKCkgPT09IHRvZGF5LmdldFRpbWUoKSA\/ICIgdWktc3RhdGUtaGlnaGxpZ2h0IiA6ICIiICkgKw0KCQkJCQkJCSggcHJpbnREYXRlLmdldFRpbWUoKSA9PT0gY3VycmVudERhdGUuZ2V0VGltZSgpID8gIiB1aS1zdGF0ZS1hY3RpdmUiIDogIiIgKSArIC8vIGhpZ2hsaWdodCBzZWxlY3RlZCBkYXkNCgkJCQkJCQkoIG90aGVyTW9udGggPyAiIHVpLXByaW9yaXR5LXNlY29uZGFyeSIgOiAiIiApICsgLy8gZGlzdGluZ3Vpc2ggZGF0ZXMgZnJvbSBvdGhlciBtb250aHMNCgkJCQkJCQkiJyBocmVmPScjJz4iICsgcHJpbnREYXRlLmdldERhdGUoKSArICI8L2E+IiApICkgKyAiPC90ZD4iOyAvLyBkaXNwbGF5IHNlbGVjdGFibGUgZGF0ZQ0KCQkJCQkJcHJpbnREYXRlLnNldERhdGUoIHByaW50RGF0ZS5nZXREYXRlKCkgKyAxICk7DQoJCQkJCQlwcmludERhdGUgPSB0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdCggcHJpbnREYXRlICk7DQoJCQkJCX0NCgkJCQkJY2FsZW5kZXIgKz0gdGJvZHkgKyAiPC90cj4iOw0KCQkJCX0NCgkJCQlkcmF3TW9udGgrKzsNCgkJCQlpZiAoIGRyYXdNb250aCA+IDExICkgew0KCQkJCQlkcmF3TW9udGggPSAwOw0KCQkJCQlkcmF3WWVhcisrOw0KCQkJCX0NCgkJCQljYWxlbmRlciArPSAiPC90Ym9keT48L3RhYmxlPiIgKyAoIGlzTXVsdGlNb250aCA\/ICI8L2Rpdj4iICsNCgkJCQkJCQkoICggbnVtTW9udGhzWyAwIF0gPiAwICYmIGNvbCA9PT0gbnVtTW9udGhzWyAxIF0gLSAxICkgPyAiPGRpdiBjbGFzcz0ndWktZGF0ZXBpY2tlci1yb3ctYnJlYWsnPjwvZGl2PiIgOiAiIiApIDogIiIgKTsNCgkJCQlncm91cCArPSBjYWxlbmRlcjsNCgkJCX0NCgkJCWh0bWwgKz0gZ3JvdXA7DQoJCX0NCgkJaHRtbCArPSBidXR0b25QYW5lbDsNCgkJaW5zdC5fa2V5RXZlbnQgPSBmYWxzZTsNCgkJcmV0dXJuIGh0bWw7DQoJfSwNCg0KCS8qIEdlbmVyYXRlIHRoZSBtb250aCBhbmQgeWVhciBoZWFkZXIuICovDQoJX2dlbmVyYXRlTW9udGhZZWFySGVhZGVyOiBmdW5jdGlvbiggaW5zdCwgZHJhd01vbnRoLCBkcmF3WWVhciwgbWluRGF0ZSwgbWF4RGF0ZSwNCgkJCXNlY29uZGFyeSwgbW9udGhOYW1lcywgbW9udGhOYW1lc1Nob3J0ICkgew0KDQoJCXZhciBpbk1pblllYXIsIGluTWF4WWVhciwgbW9udGgsIHllYXJzLCB0aGlzWWVhciwgZGV0ZXJtaW5lWWVhciwgeWVhciwgZW5kWWVhciwNCgkJCWNoYW5nZU1vbnRoID0gdGhpcy5fZ2V0KCBpbnN0LCAiY2hhbmdlTW9udGgiICksDQoJCQljaGFuZ2VZZWFyID0gdGhpcy5fZ2V0KCBpbnN0LCAiY2hhbmdlWWVhciIgKSwNCgkJCXNob3dNb250aEFmdGVyWWVhciA9IHRoaXMuX2dldCggaW5zdCwgInNob3dNb250aEFmdGVyWWVhciIgKSwNCgkJCWh0bWwgPSAiPGRpdiBjbGFzcz0ndWktZGF0ZXBpY2tlci10aXRsZSc+IiwNCgkJCW1vbnRoSHRtbCA9ICIiOw0KDQoJCS8vIE1vbnRoIHNlbGVjdGlvbg0KCQlpZiAoIHNlY29uZGFyeSB8fCAhY2hhbmdlTW9udGggKSB7DQoJCQltb250aEh0bWwgKz0gIjxzcGFuIGNsYXNzPSd1aS1kYXRlcGlja2VyLW1vbnRoJz4iICsgbW9udGhOYW1lc1sgZHJhd01vbnRoIF0gKyAiPC9zcGFuPiI7DQoJCX0gZWxzZSB7DQoJCQlpbk1pblllYXIgPSAoIG1pbkRhdGUgJiYgbWluRGF0ZS5nZXRGdWxsWWVhcigpID09PSBkcmF3WWVhciApOw0KCQkJaW5NYXhZZWFyID0gKCBtYXhEYXRlICYmIG1heERhdGUuZ2V0RnVsbFllYXIoKSA9PT0gZHJhd1llYXIgKTsNCgkJCW1vbnRoSHRtbCArPSAiPHNlbGVjdCBjbGFzcz0ndWktZGF0ZXBpY2tlci1tb250aCcgZGF0YS1oYW5kbGVyPSdzZWxlY3RNb250aCcgZGF0YS1ldmVudD0nY2hhbmdlJz4iOw0KCQkJZm9yICggbW9udGggPSAwOyBtb250aCA8IDEyOyBtb250aCsrICkgew0KCQkJCWlmICggKCAhaW5NaW5ZZWFyIHx8IG1vbnRoID49IG1pbkRhdGUuZ2V0TW9udGgoKSApICYmICggIWluTWF4WWVhciB8fCBtb250aCA8PSBtYXhEYXRlLmdldE1vbnRoKCkgKSApIHsNCgkJCQkJbW9udGhIdG1sICs9ICI8b3B0aW9uIHZhbHVlPSciICsgbW9udGggKyAiJyIgKw0KCQkJCQkJKCBtb250aCA9PT0gZHJhd01vbnRoID8gIiBzZWxlY3RlZD0nc2VsZWN0ZWQnIiA6ICIiICkgKw0KCQkJCQkJIj4iICsgbW9udGhOYW1lc1Nob3J0WyBtb250aCBdICsgIjwvb3B0aW9uPiI7DQoJCQkJfQ0KCQkJfQ0KCQkJbW9udGhIdG1sICs9ICI8L3NlbGVjdD4iOw0KCQl9DQoNCgkJaWYgKCAhc2hvd01vbnRoQWZ0ZXJZZWFyICkgew0KCQkJaHRtbCArPSBtb250aEh0bWwgKyAoIHNlY29uZGFyeSB8fCAhKCBjaGFuZ2VNb250aCAmJiBjaGFuZ2VZZWFyICkgPyAiJiN4YTA7IiA6ICIiICk7DQoJCX0NCg0KCQkvLyBZZWFyIHNlbGVjdGlvbg0KCQlpZiAoICFpbnN0LnllYXJzaHRtbCApIHsNCgkJCWluc3QueWVhcnNodG1sID0gIiI7DQoJCQlpZiAoIHNlY29uZGFyeSB8fCAhY2hhbmdlWWVhciApIHsNCgkJCQlodG1sICs9ICI8c3BhbiBjbGFzcz0ndWktZGF0ZXBpY2tlci15ZWFyJz4iICsgZHJhd1llYXIgKyAiPC9zcGFuPiI7DQoJCQl9IGVsc2Ugew0KDQoJCQkJLy8gZGV0ZXJtaW5lIHJhbmdlIG9mIHllYXJzIHRvIGRpc3BsYXkNCgkJCQl5ZWFycyA9IHRoaXMuX2dldCggaW5zdCwgInllYXJSYW5nZSIgKS5zcGxpdCggIjoiICk7DQoJCQkJdGhpc1llYXIgPSBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCk7DQoJCQkJZGV0ZXJtaW5lWWVhciA9IGZ1bmN0aW9uKCB2YWx1ZSApIHsNCgkJCQkJdmFyIHllYXIgPSAoIHZhbHVlLm1hdGNoKCAvY1srXC1dLiovICkgPyBkcmF3WWVhciArIHBhcnNlSW50KCB2YWx1ZS5zdWJzdHJpbmcoIDEgKSwgMTAgKSA6DQoJCQkJCQkoIHZhbHVlLm1hdGNoKCAvWytcLV0uKi8gKSA\/IHRoaXNZZWFyICsgcGFyc2VJbnQoIHZhbHVlLCAxMCApIDoNCgkJCQkJCXBhcnNlSW50KCB2YWx1ZSwgMTAgKSApICk7DQoJCQkJCXJldHVybiAoIGlzTmFOKCB5ZWFyICkgPyB0aGlzWWVhciA6IHllYXIgKTsNCgkJCQl9Ow0KCQkJCXllYXIgPSBkZXRlcm1pbmVZZWFyKCB5ZWFyc1sgMCBdICk7DQoJCQkJZW5kWWVhciA9IE1hdGgubWF4KCB5ZWFyLCBkZXRlcm1pbmVZZWFyKCB5ZWFyc1sgMSBdIHx8ICIiICkgKTsNCgkJCQl5ZWFyID0gKCBtaW5EYXRlID8gTWF0aC5tYXgoIHllYXIsIG1pbkRhdGUuZ2V0RnVsbFllYXIoKSApIDogeWVhciApOw0KCQkJCWVuZFllYXIgPSAoIG1heERhdGUgPyBNYXRoLm1pbiggZW5kWWVhciwgbWF4RGF0ZS5nZXRGdWxsWWVhcigpICkgOiBlbmRZZWFyICk7DQoJCQkJaW5zdC55ZWFyc2h0bWwgKz0gIjxzZWxlY3QgY2xhc3M9J3VpLWRhdGVwaWNrZXIteWVhcicgZGF0YS1oYW5kbGVyPSdzZWxlY3RZZWFyJyBkYXRhLWV2ZW50PSdjaGFuZ2UnPiI7DQoJCQkJZm9yICggOyB5ZWFyIDw9IGVuZFllYXI7IHllYXIrKyApIHsNCgkJCQkJaW5zdC55ZWFyc2h0bWwgKz0gIjxvcHRpb24gdmFsdWU9JyIgKyB5ZWFyICsgIiciICsNCgkJCQkJCSggeWVhciA9PT0gZHJhd1llYXIgPyAiIHNlbGVjdGVkPSdzZWxlY3RlZCciIDogIiIgKSArDQoJCQkJCQkiPiIgKyB5ZWFyICsgIjwvb3B0aW9uPiI7DQoJCQkJfQ0KCQkJCWluc3QueWVhcnNodG1sICs9ICI8L3NlbGVjdD4iOw0KDQoJCQkJaHRtbCArPSBpbnN0LnllYXJzaHRtbDsNCgkJCQlpbnN0LnllYXJzaHRtbCA9IG51bGw7DQoJCQl9DQoJCX0NCg0KCQlodG1sICs9IHRoaXMuX2dldCggaW5zdCwgInllYXJTdWZmaXgiICk7DQoJCWlmICggc2hvd01vbnRoQWZ0ZXJZZWFyICkgew0KCQkJaHRtbCArPSAoIHNlY29uZGFyeSB8fCAhKCBjaGFuZ2VNb250aCAmJiBjaGFuZ2VZZWFyICkgPyAiJiN4YTA7IiA6ICIiICkgKyBtb250aEh0bWw7DQoJCX0NCgkJaHRtbCArPSAiPC9kaXY+IjsgLy8gQ2xvc2UgZGF0ZXBpY2tlcl9oZWFkZXINCgkJcmV0dXJuIGh0bWw7DQoJfSwNCg0KCS8qIEFkanVzdCBvbmUgb2YgdGhlIGRhdGUgc3ViLWZpZWxkcy4gKi8NCglfYWRqdXN0SW5zdERhdGU6IGZ1bmN0aW9uKCBpbnN0LCBvZmZzZXQsIHBlcmlvZCApIHsNCgkJdmFyIHllYXIgPSBpbnN0LnNlbGVjdGVkWWVhciArICggcGVyaW9kID09PSAiWSIgPyBvZmZzZXQgOiAwICksDQoJCQltb250aCA9IGluc3Quc2VsZWN0ZWRNb250aCArICggcGVyaW9kID09PSAiTSIgPyBvZmZzZXQgOiAwICksDQoJCQlkYXkgPSBNYXRoLm1pbiggaW5zdC5zZWxlY3RlZERheSwgdGhpcy5fZ2V0RGF5c0luTW9udGgoIHllYXIsIG1vbnRoICkgKSArICggcGVyaW9kID09PSAiRCIgPyBvZmZzZXQgOiAwICksDQoJCQlkYXRlID0gdGhpcy5fcmVzdHJpY3RNaW5NYXgoIGluc3QsIHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KCBuZXcgRGF0ZSggeWVhciwgbW9udGgsIGRheSApICkgKTsNCg0KCQlpbnN0LnNlbGVjdGVkRGF5ID0gZGF0ZS5nZXREYXRlKCk7DQoJCWluc3QuZHJhd01vbnRoID0gaW5zdC5zZWxlY3RlZE1vbnRoID0gZGF0ZS5nZXRNb250aCgpOw0KCQlpbnN0LmRyYXdZZWFyID0gaW5zdC5zZWxlY3RlZFllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7DQoJCWlmICggcGVyaW9kID09PSAiTSIgfHwgcGVyaW9kID09PSAiWSIgKSB7DQoJCQl0aGlzLl9ub3RpZnlDaGFuZ2UoIGluc3QgKTsNCgkJfQ0KCX0sDQoNCgkvKiBFbnN1cmUgYSBkYXRlIGlzIHdpdGhpbiBhbnkgbWluL21heCBib3VuZHMuICovDQoJX3Jlc3RyaWN0TWluTWF4OiBmdW5jdGlvbiggaW5zdCwgZGF0ZSApIHsNCgkJdmFyIG1pbkRhdGUgPSB0aGlzLl9nZXRNaW5NYXhEYXRlKCBpbnN0LCAibWluIiApLA0KCQkJbWF4RGF0ZSA9IHRoaXMuX2dldE1pbk1heERhdGUoIGluc3QsICJtYXgiICksDQoJCQluZXdEYXRlID0gKCBtaW5EYXRlICYmIGRhdGUgPCBtaW5EYXRlID8gbWluRGF0ZSA6IGRhdGUgKTsNCgkJcmV0dXJuICggbWF4RGF0ZSAmJiBuZXdEYXRlID4gbWF4RGF0ZSA\/IG1heERhdGUgOiBuZXdEYXRlICk7DQoJfSwNCg0KCS8qIE5vdGlmeSBjaGFuZ2Ugb2YgbW9udGgveWVhci4gKi8NCglfbm90aWZ5Q2hhbmdlOiBmdW5jdGlvbiggaW5zdCApIHsNCgkJdmFyIG9uQ2hhbmdlID0gdGhpcy5fZ2V0KCBpbnN0LCAib25DaGFuZ2VNb250aFllYXIiICk7DQoJCWlmICggb25DaGFuZ2UgKSB7DQoJCQlvbkNoYW5nZS5hcHBseSggKCBpbnN0LmlucHV0ID8gaW5zdC5pbnB1dFsgMCBdIDogbnVsbCApLA0KCQkJCVsgaW5zdC5zZWxlY3RlZFllYXIsIGluc3Quc2VsZWN0ZWRNb250aCArIDEsIGluc3QgXSApOw0KCQl9DQoJfSwNCg0KCS8qIERldGVybWluZSB0aGUgbnVtYmVyIG9mIG1vbnRocyB0byBzaG93LiAqLw0KCV9nZXROdW1iZXJPZk1vbnRoczogZnVuY3Rpb24oIGluc3QgKSB7DQoJCXZhciBudW1Nb250aHMgPSB0aGlzLl9nZXQoIGluc3QsICJudW1iZXJPZk1vbnRocyIgKTsNCgkJcmV0dXJuICggbnVtTW9udGhzID09IG51bGwgPyBbIDEsIDEgXSA6ICggdHlwZW9mIG51bU1vbnRocyA9PT0gIm51bWJlciIgPyBbIDEsIG51bU1vbnRocyBdIDogbnVtTW9udGhzICkgKTsNCgl9LA0KDQoJLyogRGV0ZXJtaW5lIHRoZSBjdXJyZW50IG1heGltdW0gZGF0ZSAtIGVuc3VyZSBubyB0aW1lIGNvbXBvbmVudHMgYXJlIHNldC4gKi8NCglfZ2V0TWluTWF4RGF0ZTogZnVuY3Rpb24oIGluc3QsIG1pbk1heCApIHsNCgkJcmV0dXJuIHRoaXMuX2RldGVybWluZURhdGUoIGluc3QsIHRoaXMuX2dldCggaW5zdCwgbWluTWF4ICsgIkRhdGUiICksIG51bGwgKTsNCgl9LA0KDQoJLyogRmluZCB0aGUgbnVtYmVyIG9mIGRheXMgaW4gYSBnaXZlbiBtb250aC4gKi8NCglfZ2V0RGF5c0luTW9udGg6IGZ1bmN0aW9uKCB5ZWFyLCBtb250aCApIHsNCgkJcmV0dXJuIDMyIC0gdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoIG5ldyBEYXRlKCB5ZWFyLCBtb250aCwgMzIgKSApLmdldERhdGUoKTsNCgl9LA0KDQoJLyogRmluZCB0aGUgZGF5IG9mIHRoZSB3ZWVrIG9mIHRoZSBmaXJzdCBvZiBhIG1vbnRoLiAqLw0KCV9nZXRGaXJzdERheU9mTW9udGg6IGZ1bmN0aW9uKCB5ZWFyLCBtb250aCApIHsNCgkJcmV0dXJuIG5ldyBEYXRlKCB5ZWFyLCBtb250aCwgMSApLmdldERheSgpOw0KCX0sDQoNCgkvKiBEZXRlcm1pbmVzIGlmIHdlIHNob3VsZCBhbGxvdyBhICJuZXh0L3ByZXYiIG1vbnRoIGRpc3BsYXkgY2hhbmdlLiAqLw0KCV9jYW5BZGp1c3RNb250aDogZnVuY3Rpb24oIGluc3QsIG9mZnNldCwgY3VyWWVhciwgY3VyTW9udGggKSB7DQoJCXZhciBudW1Nb250aHMgPSB0aGlzLl9nZXROdW1iZXJPZk1vbnRocyggaW5zdCApLA0KCQkJZGF0ZSA9IHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KCBuZXcgRGF0ZSggY3VyWWVhciwNCgkJCWN1ck1vbnRoICsgKCBvZmZzZXQgPCAwID8gb2Zmc2V0IDogbnVtTW9udGhzWyAwIF0gKiBudW1Nb250aHNbIDEgXSApLCAxICkgKTsNCg0KCQlpZiAoIG9mZnNldCA8IDAgKSB7DQoJCQlkYXRlLnNldERhdGUoIHRoaXMuX2dldERheXNJbk1vbnRoKCBkYXRlLmdldEZ1bGxZZWFyKCksIGRhdGUuZ2V0TW9udGgoKSApICk7DQoJCX0NCgkJcmV0dXJuIHRoaXMuX2lzSW5SYW5nZSggaW5zdCwgZGF0ZSApOw0KCX0sDQoNCgkvKiBJcyB0aGUgZ2l2ZW4gZGF0ZSBpbiB0aGUgYWNjZXB0ZWQgcmFuZ2U\/ICovDQoJX2lzSW5SYW5nZTogZnVuY3Rpb24oIGluc3QsIGRhdGUgKSB7DQoJCXZhciB5ZWFyU3BsaXQsIGN1cnJlbnRZZWFyLA0KCQkJbWluRGF0ZSA9IHRoaXMuX2dldE1pbk1heERhdGUoIGluc3QsICJtaW4iICksDQoJCQltYXhEYXRlID0gdGhpcy5fZ2V0TWluTWF4RGF0ZSggaW5zdCwgIm1heCIgKSwNCgkJCW1pblllYXIgPSBudWxsLA0KCQkJbWF4WWVhciA9IG51bGwsDQoJCQl5ZWFycyA9IHRoaXMuX2dldCggaW5zdCwgInllYXJSYW5nZSIgKTsNCgkJCWlmICggeWVhcnMgKSB7DQoJCQkJeWVhclNwbGl0ID0geWVhcnMuc3BsaXQoICI6IiApOw0KCQkJCWN1cnJlbnRZZWFyID0gbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpOw0KCQkJCW1pblllYXIgPSBwYXJzZUludCggeWVhclNwbGl0WyAwIF0sIDEwICk7DQoJCQkJbWF4WWVhciA9IHBhcnNlSW50KCB5ZWFyU3BsaXRbIDEgXSwgMTAgKTsNCgkJCQlpZiAoIHllYXJTcGxpdFsgMCBdLm1hdGNoKCAvWytcLV0uKi8gKSApIHsNCgkJCQkJbWluWWVhciArPSBjdXJyZW50WWVhcjsNCgkJCQl9DQoJCQkJaWYgKCB5ZWFyU3BsaXRbIDEgXS5tYXRjaCggL1srXC1dLiovICkgKSB7DQoJCQkJCW1heFllYXIgKz0gY3VycmVudFllYXI7DQoJCQkJfQ0KCQkJfQ0KDQoJCXJldHVybiAoICggIW1pbkRhdGUgfHwgZGF0ZS5nZXRUaW1lKCkgPj0gbWluRGF0ZS5nZXRUaW1lKCkgKSAmJg0KCQkJKCAhbWF4RGF0ZSB8fCBkYXRlLmdldFRpbWUoKSA8PSBtYXhEYXRlLmdldFRpbWUoKSApICYmDQoJCQkoICFtaW5ZZWFyIHx8IGRhdGUuZ2V0RnVsbFllYXIoKSA+PSBtaW5ZZWFyICkgJiYNCgkJCSggIW1heFllYXIgfHwgZGF0ZS5nZXRGdWxsWWVhcigpIDw9IG1heFllYXIgKSApOw0KCX0sDQoNCgkvKiBQcm92aWRlIHRoZSBjb25maWd1cmF0aW9uIHNldHRpbmdzIGZvciBmb3JtYXR0aW5nL3BhcnNpbmcuICovDQoJX2dldEZvcm1hdENvbmZpZzogZnVuY3Rpb24oIGluc3QgKSB7DQoJCXZhciBzaG9ydFllYXJDdXRvZmYgPSB0aGlzLl9nZXQoIGluc3QsICJzaG9ydFllYXJDdXRvZmYiICk7DQoJCXNob3J0WWVhckN1dG9mZiA9ICggdHlwZW9mIHNob3J0WWVhckN1dG9mZiAhPT0gInN0cmluZyIgPyBzaG9ydFllYXJDdXRvZmYgOg0KCQkJbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpICUgMTAwICsgcGFyc2VJbnQoIHNob3J0WWVhckN1dG9mZiwgMTAgKSApOw0KCQlyZXR1cm4geyBzaG9ydFllYXJDdXRvZmY6IHNob3J0WWVhckN1dG9mZiwNCgkJCWRheU5hbWVzU2hvcnQ6IHRoaXMuX2dldCggaW5zdCwgImRheU5hbWVzU2hvcnQiICksIGRheU5hbWVzOiB0aGlzLl9nZXQoIGluc3QsICJkYXlOYW1lcyIgKSwNCgkJCW1vbnRoTmFtZXNTaG9ydDogdGhpcy5fZ2V0KCBpbnN0LCAibW9udGhOYW1lc1Nob3J0IiApLCBtb250aE5hbWVzOiB0aGlzLl9nZXQoIGluc3QsICJtb250aE5hbWVzIiApIH07DQoJfSwNCg0KCS8qIEZvcm1hdCB0aGUgZ2l2ZW4gZGF0ZSBmb3IgZGlzcGxheS4gKi8NCglfZm9ybWF0RGF0ZTogZnVuY3Rpb24oIGluc3QsIGRheSwgbW9udGgsIHllYXIgKSB7DQoJCWlmICggIWRheSApIHsNCgkJCWluc3QuY3VycmVudERheSA9IGluc3Quc2VsZWN0ZWREYXk7DQoJCQlpbnN0LmN1cnJlbnRNb250aCA9IGluc3Quc2VsZWN0ZWRNb250aDsNCgkJCWluc3QuY3VycmVudFllYXIgPSBpbnN0LnNlbGVjdGVkWWVhcjsNCgkJfQ0KCQl2YXIgZGF0ZSA9ICggZGF5ID8gKCB0eXBlb2YgZGF5ID09PSAib2JqZWN0IiA\/IGRheSA6DQoJCQl0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdCggbmV3IERhdGUoIHllYXIsIG1vbnRoLCBkYXkgKSApICkgOg0KCQkJdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoIG5ldyBEYXRlKCBpbnN0LmN1cnJlbnRZZWFyLCBpbnN0LmN1cnJlbnRNb250aCwgaW5zdC5jdXJyZW50RGF5ICkgKSApOw0KCQlyZXR1cm4gdGhpcy5mb3JtYXREYXRlKCB0aGlzLl9nZXQoIGluc3QsICJkYXRlRm9ybWF0IiApLCBkYXRlLCB0aGlzLl9nZXRGb3JtYXRDb25maWcoIGluc3QgKSApOw0KCX0NCn0gKTsNCg0KLyoNCiAqIEJpbmQgaG92ZXIgZXZlbnRzIGZvciBkYXRlcGlja2VyIGVsZW1lbnRzLg0KICogRG9uZSB2aWEgZGVsZWdhdGUgc28gdGhlIGJpbmRpbmcgb25seSBvY2N1cnMgb25jZSBpbiB0aGUgbGlmZXRpbWUgb2YgdGhlIHBhcmVudCBkaXYuDQogKiBHbG9iYWwgZGF0ZXBpY2tlcl9pbnN0QWN0aXZlLCBzZXQgYnkgX3VwZGF0ZURhdGVwaWNrZXIgYWxsb3dzIHRoZSBoYW5kbGVycyB0byBmaW5kIHRoZWlyIHdheSBiYWNrIHRvIHRoZSBhY3RpdmUgcGlja2VyLg0KICovDQpmdW5jdGlvbiBkYXRlcGlja2VyX2JpbmRIb3ZlciggZHBEaXYgKSB7DQoJdmFyIHNlbGVjdG9yID0gImJ1dHRvbiwgLnVpLWRhdGVwaWNrZXItcHJldiwgLnVpLWRhdGVwaWNrZXItbmV4dCwgLnVpLWRhdGVwaWNrZXItY2FsZW5kYXIgdGQgYSI7DQoJcmV0dXJuIGRwRGl2Lm9uKCAibW91c2VvdXQiLCBzZWxlY3RvciwgZnVuY3Rpb24oKSB7DQoJCQkkKCB0aGlzICkucmVtb3ZlQ2xhc3MoICJ1aS1zdGF0ZS1ob3ZlciIgKTsNCgkJCWlmICggdGhpcy5jbGFzc05hbWUuaW5kZXhPZiggInVpLWRhdGVwaWNrZXItcHJldiIgKSAhPT0gLTEgKSB7DQoJCQkJJCggdGhpcyApLnJlbW92ZUNsYXNzKCAidWktZGF0ZXBpY2tlci1wcmV2LWhvdmVyIiApOw0KCQkJfQ0KCQkJaWYgKCB0aGlzLmNsYXNzTmFtZS5pbmRleE9mKCAidWktZGF0ZXBpY2tlci1uZXh0IiApICE9PSAtMSApIHsNCgkJCQkkKCB0aGlzICkucmVtb3ZlQ2xhc3MoICJ1aS1kYXRlcGlja2VyLW5leHQtaG92ZXIiICk7DQoJCQl9DQoJCX0gKQ0KCQkub24oICJtb3VzZW92ZXIiLCBzZWxlY3RvciwgZGF0ZXBpY2tlcl9oYW5kbGVNb3VzZW92ZXIgKTsNCn0NCg0KZnVuY3Rpb24gZGF0ZXBpY2tlcl9oYW5kbGVNb3VzZW92ZXIoKSB7DQoJaWYgKCAhJC5kYXRlcGlja2VyLl9pc0Rpc2FibGVkRGF0ZXBpY2tlciggZGF0ZXBpY2tlcl9pbnN0QWN0aXZlLmlubGluZSA\/IGRhdGVwaWNrZXJfaW5zdEFjdGl2ZS5kcERpdi5wYXJlbnQoKVsgMCBdIDogZGF0ZXBpY2tlcl9pbnN0QWN0aXZlLmlucHV0WyAwIF0gKSApIHsNCgkJJCggdGhpcyApLnBhcmVudHMoICIudWktZGF0ZXBpY2tlci1jYWxlbmRhciIgKS5maW5kKCAiYSIgKS5yZW1vdmVDbGFzcyggInVpLXN0YXRlLWhvdmVyIiApOw0KCQkkKCB0aGlzICkuYWRkQ2xhc3MoICJ1aS1zdGF0ZS1ob3ZlciIgKTsNCgkJaWYgKCB0aGlzLmNsYXNzTmFtZS5pbmRleE9mKCAidWktZGF0ZXBpY2tlci1wcmV2IiApICE9PSAtMSApIHsNCgkJCSQoIHRoaXMgKS5hZGRDbGFzcyggInVpLWRhdGVwaWNrZXItcHJldi1ob3ZlciIgKTsNCgkJfQ0KCQlpZiAoIHRoaXMuY2xhc3NOYW1lLmluZGV4T2YoICJ1aS1kYXRlcGlja2VyLW5leHQiICkgIT09IC0xICkgew0KCQkJJCggdGhpcyApLmFkZENsYXNzKCAidWktZGF0ZXBpY2tlci1uZXh0LWhvdmVyIiApOw0KCQl9DQoJfQ0KfQ0KDQovKiBqUXVlcnkgZXh0ZW5kIG5vdyBpZ25vcmVzIG51bGxzISAqLw0KZnVuY3Rpb24gZGF0ZXBpY2tlcl9leHRlbmRSZW1vdmUoIHRhcmdldCwgcHJvcHMgKSB7DQoJJC5leHRlbmQoIHRhcmdldCwgcHJvcHMgKTsNCglmb3IgKCB2YXIgbmFtZSBpbiBwcm9wcyApIHsNCgkJaWYgKCBwcm9wc1sgbmFtZSBdID09IG51bGwgKSB7DQoJCQl0YXJnZXRbIG5hbWUgXSA9IHByb3BzWyBuYW1lIF07DQoJCX0NCgl9DQoJcmV0dXJuIHRhcmdldDsNCn0NCg0KLyogSW52b2tlIHRoZSBkYXRlcGlja2VyIGZ1bmN0aW9uYWxpdHkuDQogICBAcGFyYW0gIG9wdGlvbnMgIHN0cmluZyAtIGEgY29tbWFuZCwgb3B0aW9uYWxseSBmb2xsb3dlZCBieSBhZGRpdGlvbmFsIHBhcmFtZXRlcnMgb3INCgkJCQkJT2JqZWN0IC0gc2V0dGluZ3MgZm9yIGF0dGFjaGluZyBuZXcgZGF0ZXBpY2tlciBmdW5jdGlvbmFsaXR5DQogICBAcmV0dXJuICBqUXVlcnkgb2JqZWN0ICovDQokLmZuLmRhdGVwaWNrZXIgPSBmdW5jdGlvbiggb3B0aW9ucyApIHsNCg0KCS8qIFZlcmlmeSBhbiBlbXB0eSBjb2xsZWN0aW9uIHdhc24ndCBwYXNzZWQgLSBGaXhlcyAjNjk3NiAqLw0KCWlmICggIXRoaXMubGVuZ3RoICkgew0KCQlyZXR1cm4gdGhpczsNCgl9DQoNCgkvKiBJbml0aWFsaXNlIHRoZSBkYXRlIHBpY2tlci4gKi8NCglpZiAoICEkLmRhdGVwaWNrZXIuaW5pdGlhbGl6ZWQgKSB7DQoJCSQoIGRvY3VtZW50ICkub24oICJtb3VzZWRvd24iLCAkLmRhdGVwaWNrZXIuX2NoZWNrRXh0ZXJuYWxDbGljayApOw0KCQkkLmRhdGVwaWNrZXIuaW5pdGlhbGl6ZWQgPSB0cnVlOw0KCX0NCg0KCS8qIEFwcGVuZCBkYXRlcGlja2VyIG1haW4gY29udGFpbmVyIHRvIGJvZHkgaWYgbm90IGV4aXN0LiAqLw0KCWlmICggJCggIiMiICsgJC5kYXRlcGlja2VyLl9tYWluRGl2SWQgKS5sZW5ndGggPT09IDAgKSB7DQoJCSQoICJib2R5IiApLmFwcGVuZCggJC5kYXRlcGlja2VyLmRwRGl2ICk7DQoJfQ0KDQoJdmFyIG90aGVyQXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKCBhcmd1bWVudHMsIDEgKTsNCglpZiAoIHR5cGVvZiBvcHRpb25zID09PSAic3RyaW5nIiAmJiAoIG9wdGlvbnMgPT09ICJpc0Rpc2FibGVkIiB8fCBvcHRpb25zID09PSAiZ2V0RGF0ZSIgfHwgb3B0aW9ucyA9PT0gIndpZGdldCIgKSApIHsNCgkJcmV0dXJuICQuZGF0ZXBpY2tlclsgIl8iICsgb3B0aW9ucyArICJEYXRlcGlja2VyIiBdLg0KCQkJYXBwbHkoICQuZGF0ZXBpY2tlciwgWyB0aGlzWyAwIF0gXS5jb25jYXQoIG90aGVyQXJncyApICk7DQoJfQ0KCWlmICggb3B0aW9ucyA9PT0gIm9wdGlvbiIgJiYgYXJndW1lbnRzLmxlbmd0aCA9PT0gMiAmJiB0eXBlb2YgYXJndW1lbnRzWyAxIF0gPT09ICJzdHJpbmciICkgew0KCQlyZXR1cm4gJC5kYXRlcGlja2VyWyAiXyIgKyBvcHRpb25zICsgIkRhdGVwaWNrZXIiIF0uDQoJCQlhcHBseSggJC5kYXRlcGlja2VyLCBbIHRoaXNbIDAgXSBdLmNvbmNhdCggb3RoZXJBcmdzICkgKTsNCgl9DQoJcmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7DQoJCXR5cGVvZiBvcHRpb25zID09PSAic3RyaW5nIiA\/DQoJCQkkLmRhdGVwaWNrZXJbICJfIiArIG9wdGlvbnMgKyAiRGF0ZXBpY2tlciIgXS4NCgkJCQlhcHBseSggJC5kYXRlcGlja2VyLCBbIHRoaXMgXS5jb25jYXQoIG90aGVyQXJncyApICkgOg0KCQkJJC5kYXRlcGlja2VyLl9hdHRhY2hEYXRlcGlja2VyKCB0aGlzLCBvcHRpb25zICk7DQoJfSApOw0KfTsNCg0KJC5kYXRlcGlja2VyID0gbmV3IERhdGVwaWNrZXIoKTsgLy8gc2luZ2xldG9uIGluc3RhbmNlDQokLmRhdGVwaWNrZXIuaW5pdGlhbGl6ZWQgPSBmYWxzZTsNCiQuZGF0ZXBpY2tlci51dWlkID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7DQokLmRhdGVwaWNrZXIudmVyc2lvbiA9ICIxLjEyLjEiOw0KDQp2YXIgd2lkZ2V0c0RhdGVwaWNrZXIgPSAkLmRhdGVwaWNrZXI7DQoNCg0KDQoNCi8vIFRoaXMgZmlsZSBpcyBkZXByZWNhdGVkDQp2YXIgaWUgPSAkLnVpLmllID0gISEvbXNpZSBbXHcuXSsvLmV4ZWMoIG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKSApOw0KDQovKiENCiAqIGpRdWVyeSBVSSBNb3VzZSAxLjEyLjENCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICovDQoNCi8vPj5sYWJlbDogTW91c2UNCi8vPj5ncm91cDogV2lkZ2V0cw0KLy8+PmRlc2NyaXB0aW9uOiBBYnN0cmFjdHMgbW91c2UtYmFzZWQgaW50ZXJhY3Rpb25zIHRvIGFzc2lzdCBpbiBjcmVhdGluZyBjZXJ0YWluIHdpZGdldHMuDQovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vbW91c2UvDQoNCg0KDQp2YXIgbW91c2VIYW5kbGVkID0gZmFsc2U7DQokKCBkb2N1bWVudCApLm9uKCAibW91c2V1cCIsIGZ1bmN0aW9uKCkgew0KCW1vdXNlSGFuZGxlZCA9IGZhbHNlOw0KfSApOw0KDQp2YXIgd2lkZ2V0c01vdXNlID0gJC53aWRnZXQoICJ1aS5tb3VzZSIsIHsNCgl2ZXJzaW9uOiAiMS4xMi4xIiwNCglvcHRpb25zOiB7DQoJCWNhbmNlbDogImlucHV0LCB0ZXh0YXJlYSwgYnV0dG9uLCBzZWxlY3QsIG9wdGlvbiIsDQoJCWRpc3RhbmNlOiAxLA0KCQlkZWxheTogMA0KCX0sDQoJX21vdXNlSW5pdDogZnVuY3Rpb24oKSB7DQoJCXZhciB0aGF0ID0gdGhpczsNCg0KCQl0aGlzLmVsZW1lbnQNCgkJCS5vbiggIm1vdXNlZG93bi4iICsgdGhpcy53aWRnZXROYW1lLCBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQkJcmV0dXJuIHRoYXQuX21vdXNlRG93biggZXZlbnQgKTsNCgkJCX0gKQ0KCQkJLm9uKCAiY2xpY2suIiArIHRoaXMud2lkZ2V0TmFtZSwgZnVuY3Rpb24oIGV2ZW50ICkgew0KCQkJCWlmICggdHJ1ZSA9PT0gJC5kYXRhKCBldmVudC50YXJnZXQsIHRoYXQud2lkZ2V0TmFtZSArICIucHJldmVudENsaWNrRXZlbnQiICkgKSB7DQoJCQkJCSQucmVtb3ZlRGF0YSggZXZlbnQudGFyZ2V0LCB0aGF0LndpZGdldE5hbWUgKyAiLnByZXZlbnRDbGlja0V2ZW50IiApOw0KCQkJCQlldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTsNCgkJCQkJcmV0dXJuIGZhbHNlOw0KCQkJCX0NCgkJCX0gKTsNCg0KCQl0aGlzLnN0YXJ0ZWQgPSBmYWxzZTsNCgl9LA0KDQoJLy8gVE9ETzogbWFrZSBzdXJlIGRlc3Ryb3lpbmcgb25lIGluc3RhbmNlIG9mIG1vdXNlIGRvZXNuJ3QgbWVzcyB3aXRoDQoJLy8gb3RoZXIgaW5zdGFuY2VzIG9mIG1vdXNlDQoJX21vdXNlRGVzdHJveTogZnVuY3Rpb24oKSB7DQoJCXRoaXMuZWxlbWVudC5vZmYoICIuIiArIHRoaXMud2lkZ2V0TmFtZSApOw0KCQlpZiAoIHRoaXMuX21vdXNlTW92ZURlbGVnYXRlICkgew0KCQkJdGhpcy5kb2N1bWVudA0KCQkJCS5vZmYoICJtb3VzZW1vdmUuIiArIHRoaXMud2lkZ2V0TmFtZSwgdGhpcy5fbW91c2VNb3ZlRGVsZWdhdGUgKQ0KCQkJCS5vZmYoICJtb3VzZXVwLiIgKyB0aGlzLndpZGdldE5hbWUsIHRoaXMuX21vdXNlVXBEZWxlZ2F0ZSApOw0KCQl9DQoJfSwNCg0KCV9tb3VzZURvd246IGZ1bmN0aW9uKCBldmVudCApIHsNCg0KCQkvLyBkb24ndCBsZXQgbW9yZSB0aGFuIG9uZSB3aWRnZXQgaGFuZGxlIG1vdXNlU3RhcnQNCgkJaWYgKCBtb3VzZUhhbmRsZWQgKSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQl0aGlzLl9tb3VzZU1vdmVkID0gZmFsc2U7DQoNCgkJLy8gV2UgbWF5IGhhdmUgbWlzc2VkIG1vdXNldXAgKG91dCBvZiB3aW5kb3cpDQoJCSggdGhpcy5fbW91c2VTdGFydGVkICYmIHRoaXMuX21vdXNlVXAoIGV2ZW50ICkgKTsNCg0KCQl0aGlzLl9tb3VzZURvd25FdmVudCA9IGV2ZW50Ow0KDQoJCXZhciB0aGF0ID0gdGhpcywNCgkJCWJ0bklzTGVmdCA9ICggZXZlbnQud2hpY2ggPT09IDEgKSwNCg0KCQkJLy8gZXZlbnQudGFyZ2V0Lm5vZGVOYW1lIHdvcmtzIGFyb3VuZCBhIGJ1ZyBpbiBJRSA4IHdpdGgNCgkJCS8vIGRpc2FibGVkIGlucHV0cyAoIzc2MjApDQoJCQllbElzQ2FuY2VsID0gKCB0eXBlb2YgdGhpcy5vcHRpb25zLmNhbmNlbCA9PT0gInN0cmluZyIgJiYgZXZlbnQudGFyZ2V0Lm5vZGVOYW1lID8NCgkJCQkkKCBldmVudC50YXJnZXQgKS5jbG9zZXN0KCB0aGlzLm9wdGlvbnMuY2FuY2VsICkubGVuZ3RoIDogZmFsc2UgKTsNCgkJaWYgKCAhYnRuSXNMZWZ0IHx8IGVsSXNDYW5jZWwgfHwgIXRoaXMuX21vdXNlQ2FwdHVyZSggZXZlbnQgKSApIHsNCgkJCXJldHVybiB0cnVlOw0KCQl9DQoNCgkJdGhpcy5tb3VzZURlbGF5TWV0ID0gIXRoaXMub3B0aW9ucy5kZWxheTsNCgkJaWYgKCAhdGhpcy5tb3VzZURlbGF5TWV0ICkgew0KCQkJdGhpcy5fbW91c2VEZWxheVRpbWVyID0gc2V0VGltZW91dCggZnVuY3Rpb24oKSB7DQoJCQkJdGhhdC5tb3VzZURlbGF5TWV0ID0gdHJ1ZTsNCgkJCX0sIHRoaXMub3B0aW9ucy5kZWxheSApOw0KCQl9DQoNCgkJaWYgKCB0aGlzLl9tb3VzZURpc3RhbmNlTWV0KCBldmVudCApICYmIHRoaXMuX21vdXNlRGVsYXlNZXQoIGV2ZW50ICkgKSB7DQoJCQl0aGlzLl9tb3VzZVN0YXJ0ZWQgPSAoIHRoaXMuX21vdXNlU3RhcnQoIGV2ZW50ICkgIT09IGZhbHNlICk7DQoJCQlpZiAoICF0aGlzLl9tb3VzZVN0YXJ0ZWQgKSB7DQoJCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsNCgkJCQlyZXR1cm4gdHJ1ZTsNCgkJCX0NCgkJfQ0KDQoJCS8vIENsaWNrIGV2ZW50IG1heSBuZXZlciBoYXZlIGZpcmVkIChHZWNrbyAmIE9wZXJhKQ0KCQlpZiAoIHRydWUgPT09ICQuZGF0YSggZXZlbnQudGFyZ2V0LCB0aGlzLndpZGdldE5hbWUgKyAiLnByZXZlbnRDbGlja0V2ZW50IiApICkgew0KCQkJJC5yZW1vdmVEYXRhKCBldmVudC50YXJnZXQsIHRoaXMud2lkZ2V0TmFtZSArICIucHJldmVudENsaWNrRXZlbnQiICk7DQoJCX0NCg0KCQkvLyBUaGVzZSBkZWxlZ2F0ZXMgYXJlIHJlcXVpcmVkIHRvIGtlZXAgY29udGV4dA0KCQl0aGlzLl9tb3VzZU1vdmVEZWxlZ2F0ZSA9IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCXJldHVybiB0aGF0Ll9tb3VzZU1vdmUoIGV2ZW50ICk7DQoJCX07DQoJCXRoaXMuX21vdXNlVXBEZWxlZ2F0ZSA9IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCXJldHVybiB0aGF0Ll9tb3VzZVVwKCBldmVudCApOw0KCQl9Ow0KDQoJCXRoaXMuZG9jdW1lbnQNCgkJCS5vbiggIm1vdXNlbW92ZS4iICsgdGhpcy53aWRnZXROYW1lLCB0aGlzLl9tb3VzZU1vdmVEZWxlZ2F0ZSApDQoJCQkub24oICJtb3VzZXVwLiIgKyB0aGlzLndpZGdldE5hbWUsIHRoaXMuX21vdXNlVXBEZWxlZ2F0ZSApOw0KDQoJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7DQoNCgkJbW91c2VIYW5kbGVkID0gdHJ1ZTsNCgkJcmV0dXJuIHRydWU7DQoJfSwNCg0KCV9tb3VzZU1vdmU6IGZ1bmN0aW9uKCBldmVudCApIHsNCg0KCQkvLyBPbmx5IGNoZWNrIGZvciBtb3VzZXVwcyBvdXRzaWRlIHRoZSBkb2N1bWVudCBpZiB5b3UndmUgbW92ZWQgaW5zaWRlIHRoZSBkb2N1bWVudA0KCQkvLyBhdCBsZWFzdCBvbmNlLiBUaGlzIHByZXZlbnRzIHRoZSBmaXJpbmcgb2YgbW91c2V1cCBpbiB0aGUgY2FzZSBvZiBJRTw5LCB3aGljaCB3aWxsDQoJCS8vIGZpcmUgYSBtb3VzZW1vdmUgZXZlbnQgaWYgY29udGVudCBpcyBwbGFjZWQgdW5kZXIgdGhlIGN1cnNvci4gU2VlICM3Nzc4DQoJCS8vIFN1cHBvcnQ6IElFIDw5DQoJCWlmICggdGhpcy5fbW91c2VNb3ZlZCApIHsNCg0KCQkJLy8gSUUgbW91c2V1cCBjaGVjayAtIG1vdXNldXAgaGFwcGVuZWQgd2hlbiBtb3VzZSB3YXMgb3V0IG9mIHdpbmRvdw0KCQkJaWYgKCAkLnVpLmllICYmICggIWRvY3VtZW50LmRvY3VtZW50TW9kZSB8fCBkb2N1bWVudC5kb2N1bWVudE1vZGUgPCA5ICkgJiYNCgkJCQkJIWV2ZW50LmJ1dHRvbiApIHsNCgkJCQlyZXR1cm4gdGhpcy5fbW91c2VVcCggZXZlbnQgKTsNCg0KCQkJLy8gSWZyYW1lIG1vdXNldXAgY2hlY2sgLSBtb3VzZXVwIG9jY3VycmVkIGluIGFub3RoZXIgZG9jdW1lbnQNCgkJCX0gZWxzZSBpZiAoICFldmVudC53aGljaCApIHsNCg0KCQkJCS8vIFN1cHBvcnQ6IFNhZmFyaSA8PTggLSA5DQoJCQkJLy8gU2FmYXJpIHNldHMgd2hpY2ggdG8gMCBpZiB5b3UgcHJlc3MgYW55IG9mIHRoZSBmb2xsb3dpbmcga2V5cw0KCQkJCS8vIGR1cmluZyBhIGRyYWcgKCMxNDQ2MSkNCgkJCQlpZiAoIGV2ZW50Lm9yaWdpbmFsRXZlbnQuYWx0S2V5IHx8IGV2ZW50Lm9yaWdpbmFsRXZlbnQuY3RybEtleSB8fA0KCQkJCQkJZXZlbnQub3JpZ2luYWxFdmVudC5tZXRhS2V5IHx8IGV2ZW50Lm9yaWdpbmFsRXZlbnQuc2hpZnRLZXkgKSB7DQoJCQkJCXRoaXMuaWdub3JlTWlzc2luZ1doaWNoID0gdHJ1ZTsNCgkJCQl9IGVsc2UgaWYgKCAhdGhpcy5pZ25vcmVNaXNzaW5nV2hpY2ggKSB7DQoJCQkJCXJldHVybiB0aGlzLl9tb3VzZVVwKCBldmVudCApOw0KCQkJCX0NCgkJCX0NCgkJfQ0KDQoJCWlmICggZXZlbnQud2hpY2ggfHwgZXZlbnQuYnV0dG9uICkgew0KCQkJdGhpcy5fbW91c2VNb3ZlZCA9IHRydWU7DQoJCX0NCg0KCQlpZiAoIHRoaXMuX21vdXNlU3RhcnRlZCApIHsNCgkJCXRoaXMuX21vdXNlRHJhZyggZXZlbnQgKTsNCgkJCXJldHVybiBldmVudC5wcmV2ZW50RGVmYXVsdCgpOw0KCQl9DQoNCgkJaWYgKCB0aGlzLl9tb3VzZURpc3RhbmNlTWV0KCBldmVudCApICYmIHRoaXMuX21vdXNlRGVsYXlNZXQoIGV2ZW50ICkgKSB7DQoJCQl0aGlzLl9tb3VzZVN0YXJ0ZWQgPQ0KCQkJCSggdGhpcy5fbW91c2VTdGFydCggdGhpcy5fbW91c2VEb3duRXZlbnQsIGV2ZW50ICkgIT09IGZhbHNlICk7DQoJCQkoIHRoaXMuX21vdXNlU3RhcnRlZCA\/IHRoaXMuX21vdXNlRHJhZyggZXZlbnQgKSA6IHRoaXMuX21vdXNlVXAoIGV2ZW50ICkgKTsNCgkJfQ0KDQoJCXJldHVybiAhdGhpcy5fbW91c2VTdGFydGVkOw0KCX0sDQoNCglfbW91c2VVcDogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQl0aGlzLmRvY3VtZW50DQoJCQkub2ZmKCAibW91c2Vtb3ZlLiIgKyB0aGlzLndpZGdldE5hbWUsIHRoaXMuX21vdXNlTW92ZURlbGVnYXRlICkNCgkJCS5vZmYoICJtb3VzZXVwLiIgKyB0aGlzLndpZGdldE5hbWUsIHRoaXMuX21vdXNlVXBEZWxlZ2F0ZSApOw0KDQoJCWlmICggdGhpcy5fbW91c2VTdGFydGVkICkgew0KCQkJdGhpcy5fbW91c2VTdGFydGVkID0gZmFsc2U7DQoNCgkJCWlmICggZXZlbnQudGFyZ2V0ID09PSB0aGlzLl9tb3VzZURvd25FdmVudC50YXJnZXQgKSB7DQoJCQkJJC5kYXRhKCBldmVudC50YXJnZXQsIHRoaXMud2lkZ2V0TmFtZSArICIucHJldmVudENsaWNrRXZlbnQiLCB0cnVlICk7DQoJCQl9DQoNCgkJCXRoaXMuX21vdXNlU3RvcCggZXZlbnQgKTsNCgkJfQ0KDQoJCWlmICggdGhpcy5fbW91c2VEZWxheVRpbWVyICkgew0KCQkJY2xlYXJUaW1lb3V0KCB0aGlzLl9tb3VzZURlbGF5VGltZXIgKTsNCgkJCWRlbGV0ZSB0aGlzLl9tb3VzZURlbGF5VGltZXI7DQoJCX0NCg0KCQl0aGlzLmlnbm9yZU1pc3NpbmdXaGljaCA9IGZhbHNlOw0KCQltb3VzZUhhbmRsZWQgPSBmYWxzZTsNCgkJZXZlbnQucHJldmVudERlZmF1bHQoKTsNCgl9LA0KDQoJX21vdXNlRGlzdGFuY2VNZXQ6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJcmV0dXJuICggTWF0aC5tYXgoDQoJCQkJTWF0aC5hYnMoIHRoaXMuX21vdXNlRG93bkV2ZW50LnBhZ2VYIC0gZXZlbnQucGFnZVggKSwNCgkJCQlNYXRoLmFicyggdGhpcy5fbW91c2VEb3duRXZlbnQucGFnZVkgLSBldmVudC5wYWdlWSApDQoJCQkpID49IHRoaXMub3B0aW9ucy5kaXN0YW5jZQ0KCQkpOw0KCX0sDQoNCglfbW91c2VEZWxheU1ldDogZnVuY3Rpb24oIC8qIGV2ZW50ICovICkgew0KCQlyZXR1cm4gdGhpcy5tb3VzZURlbGF5TWV0Ow0KCX0sDQoNCgkvLyBUaGVzZSBhcmUgcGxhY2Vob2xkZXIgbWV0aG9kcywgdG8gYmUgb3ZlcnJpZGVuIGJ5IGV4dGVuZGluZyBwbHVnaW4NCglfbW91c2VTdGFydDogZnVuY3Rpb24oIC8qIGV2ZW50ICovICkge30sDQoJX21vdXNlRHJhZzogZnVuY3Rpb24oIC8qIGV2ZW50ICovICkge30sDQoJX21vdXNlU3RvcDogZnVuY3Rpb24oIC8qIGV2ZW50ICovICkge30sDQoJX21vdXNlQ2FwdHVyZTogZnVuY3Rpb24oIC8qIGV2ZW50ICovICkgeyByZXR1cm4gdHJ1ZTsgfQ0KfSApOw0KDQoNCg0KDQovLyAkLnVpLnBsdWdpbiBpcyBkZXByZWNhdGVkLiBVc2UgJC53aWRnZXQoKSBleHRlbnNpb25zIGluc3RlYWQuDQp2YXIgcGx1Z2luID0gJC51aS5wbHVnaW4gPSB7DQoJYWRkOiBmdW5jdGlvbiggbW9kdWxlLCBvcHRpb24sIHNldCApIHsNCgkJdmFyIGksDQoJCQlwcm90byA9ICQudWlbIG1vZHVsZSBdLnByb3RvdHlwZTsNCgkJZm9yICggaSBpbiBzZXQgKSB7DQoJCQlwcm90by5wbHVnaW5zWyBpIF0gPSBwcm90by5wbHVnaW5zWyBpIF0gfHwgW107DQoJCQlwcm90by5wbHVnaW5zWyBpIF0ucHVzaCggWyBvcHRpb24sIHNldFsgaSBdIF0gKTsNCgkJfQ0KCX0sDQoJY2FsbDogZnVuY3Rpb24oIGluc3RhbmNlLCBuYW1lLCBhcmdzLCBhbGxvd0Rpc2Nvbm5lY3RlZCApIHsNCgkJdmFyIGksDQoJCQlzZXQgPSBpbnN0YW5jZS5wbHVnaW5zWyBuYW1lIF07DQoNCgkJaWYgKCAhc2V0ICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJaWYgKCAhYWxsb3dEaXNjb25uZWN0ZWQgJiYgKCAhaW5zdGFuY2UuZWxlbWVudFsgMCBdLnBhcmVudE5vZGUgfHwNCgkJCQlpbnN0YW5jZS5lbGVtZW50WyAwIF0ucGFyZW50Tm9kZS5ub2RlVHlwZSA9PT0gMTEgKSApIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCWZvciAoIGkgPSAwOyBpIDwgc2V0Lmxlbmd0aDsgaSsrICkgew0KCQkJaWYgKCBpbnN0YW5jZS5vcHRpb25zWyBzZXRbIGkgXVsgMCBdIF0gKSB7DQoJCQkJc2V0WyBpIF1bIDEgXS5hcHBseSggaW5zdGFuY2UuZWxlbWVudCwgYXJncyApOw0KCQkJfQ0KCQl9DQoJfQ0KfTsNCg0KDQoNCnZhciBzYWZlQmx1ciA9ICQudWkuc2FmZUJsdXIgPSBmdW5jdGlvbiggZWxlbWVudCApIHsNCg0KCS8vIFN1cHBvcnQ6IElFOSAtIDEwIG9ubHkNCgkvLyBJZiB0aGUgPGJvZHk+IGlzIGJsdXJyZWQsIElFIHdpbGwgc3dpdGNoIHdpbmRvd3MsIHNlZSAjOTQyMA0KCWlmICggZWxlbWVudCAmJiBlbGVtZW50Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgIT09ICJib2R5IiApIHsNCgkJJCggZWxlbWVudCApLnRyaWdnZXIoICJibHVyIiApOw0KCX0NCn07DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgRHJhZ2dhYmxlIDEuMTIuMQ0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKi8NCg0KLy8+PmxhYmVsOiBEcmFnZ2FibGUNCi8vPj5ncm91cDogSW50ZXJhY3Rpb25zDQovLz4+ZGVzY3JpcHRpb246IEVuYWJsZXMgZHJhZ2dpbmcgZnVuY3Rpb25hbGl0eSBmb3IgYW55IGVsZW1lbnQuDQovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vZHJhZ2dhYmxlLw0KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL2RyYWdnYWJsZS8NCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9kcmFnZ2FibGUuY3NzDQoNCg0KDQokLndpZGdldCggInVpLmRyYWdnYWJsZSIsICQudWkubW91c2UsIHsNCgl2ZXJzaW9uOiAiMS4xMi4xIiwNCgl3aWRnZXRFdmVudFByZWZpeDogImRyYWciLA0KCW9wdGlvbnM6IHsNCgkJYWRkQ2xhc3NlczogdHJ1ZSwNCgkJYXBwZW5kVG86ICJwYXJlbnQiLA0KCQlheGlzOiBmYWxzZSwNCgkJY29ubmVjdFRvU29ydGFibGU6IGZhbHNlLA0KCQljb250YWlubWVudDogZmFsc2UsDQoJCWN1cnNvcjogImF1dG8iLA0KCQljdXJzb3JBdDogZmFsc2UsDQoJCWdyaWQ6IGZhbHNlLA0KCQloYW5kbGU6IGZhbHNlLA0KCQloZWxwZXI6ICJvcmlnaW5hbCIsDQoJCWlmcmFtZUZpeDogZmFsc2UsDQoJCW9wYWNpdHk6IGZhbHNlLA0KCQlyZWZyZXNoUG9zaXRpb25zOiBmYWxzZSwNCgkJcmV2ZXJ0OiBmYWxzZSwNCgkJcmV2ZXJ0RHVyYXRpb246IDUwMCwNCgkJc2NvcGU6ICJkZWZhdWx0IiwNCgkJc2Nyb2xsOiB0cnVlLA0KCQlzY3JvbGxTZW5zaXRpdml0eTogMjAsDQoJCXNjcm9sbFNwZWVkOiAyMCwNCgkJc25hcDogZmFsc2UsDQoJCXNuYXBNb2RlOiAiYm90aCIsDQoJCXNuYXBUb2xlcmFuY2U6IDIwLA0KCQlzdGFjazogZmFsc2UsDQoJCXpJbmRleDogZmFsc2UsDQoNCgkJLy8gQ2FsbGJhY2tzDQoJCWRyYWc6IG51bGwsDQoJCXN0YXJ0OiBudWxsLA0KCQlzdG9wOiBudWxsDQoJfSwNCglfY3JlYXRlOiBmdW5jdGlvbigpIHsNCg0KCQlpZiAoIHRoaXMub3B0aW9ucy5oZWxwZXIgPT09ICJvcmlnaW5hbCIgKSB7DQoJCQl0aGlzLl9zZXRQb3NpdGlvblJlbGF0aXZlKCk7DQoJCX0NCgkJaWYgKCB0aGlzLm9wdGlvbnMuYWRkQ2xhc3NlcyApIHsNCgkJCXRoaXMuX2FkZENsYXNzKCAidWktZHJhZ2dhYmxlIiApOw0KCQl9DQoJCXRoaXMuX3NldEhhbmRsZUNsYXNzTmFtZSgpOw0KDQoJCXRoaXMuX21vdXNlSW5pdCgpOw0KCX0sDQoNCglfc2V0T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsNCgkJdGhpcy5fc3VwZXIoIGtleSwgdmFsdWUgKTsNCgkJaWYgKCBrZXkgPT09ICJoYW5kbGUiICkgew0KCQkJdGhpcy5fcmVtb3ZlSGFuZGxlQ2xhc3NOYW1lKCk7DQoJCQl0aGlzLl9zZXRIYW5kbGVDbGFzc05hbWUoKTsNCgkJfQ0KCX0sDQoNCglfZGVzdHJveTogZnVuY3Rpb24oKSB7DQoJCWlmICggKCB0aGlzLmhlbHBlciB8fCB0aGlzLmVsZW1lbnQgKS5pcyggIi51aS1kcmFnZ2FibGUtZHJhZ2dpbmciICkgKSB7DQoJCQl0aGlzLmRlc3Ryb3lPbkNsZWFyID0gdHJ1ZTsNCgkJCXJldHVybjsNCgkJfQ0KCQl0aGlzLl9yZW1vdmVIYW5kbGVDbGFzc05hbWUoKTsNCgkJdGhpcy5fbW91c2VEZXN0cm95KCk7DQoJfSwNCg0KCV9tb3VzZUNhcHR1cmU6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJdmFyIG8gPSB0aGlzLm9wdGlvbnM7DQoNCgkJLy8gQW1vbmcgb3RoZXJzLCBwcmV2ZW50IGEgZHJhZyBvbiBhIHJlc2l6YWJsZS1oYW5kbGUNCgkJaWYgKCB0aGlzLmhlbHBlciB8fCBvLmRpc2FibGVkIHx8DQoJCQkJJCggZXZlbnQudGFyZ2V0ICkuY2xvc2VzdCggIi51aS1yZXNpemFibGUtaGFuZGxlIiApLmxlbmd0aCA+IDAgKSB7DQoJCQlyZXR1cm4gZmFsc2U7DQoJCX0NCg0KCQkvL1F1aXQgaWYgd2UncmUgbm90IG9uIGEgdmFsaWQgaGFuZGxlDQoJCXRoaXMuaGFuZGxlID0gdGhpcy5fZ2V0SGFuZGxlKCBldmVudCApOw0KCQlpZiAoICF0aGlzLmhhbmRsZSApIHsNCgkJCXJldHVybiBmYWxzZTsNCgkJfQ0KDQoJCXRoaXMuX2JsdXJBY3RpdmVFbGVtZW50KCBldmVudCApOw0KDQoJCXRoaXMuX2Jsb2NrRnJhbWVzKCBvLmlmcmFtZUZpeCA9PT0gdHJ1ZSA\\/IDAgOiB0aGlzLm9mZnNldC5zY3JvbGwudG9wICkgKSAqIG1vZCApDQoJCQkpLA0KCQkJbGVmdDogKA0KDQoJCQkJLy8gVGhlIGFic29sdXRlIG1vdXNlIHBvc2l0aW9uDQoJCQkJcG9zLmxlZnQgKw0KDQoJCQkJLy8gT25seSBmb3IgcmVsYXRpdmUgcG9zaXRpb25lZCBub2RlczogUmVsYXRpdmUgb2Zmc2V0IGZyb20gZWxlbWVudCB0byBvZmZzZXQgcGFyZW50DQoJCQkJdGhpcy5vZmZzZXQucmVsYXRpdmUubGVmdCAqIG1vZCArDQoNCgkJCQkvLyBUaGUgb2Zmc2V0UGFyZW50J3Mgb2Zmc2V0IHdpdGhvdXQgYm9yZGVycyAob2Zmc2V0ICsgYm9yZGVyKQ0KCQkJCXRoaXMub2Zmc2V0LnBhcmVudC5sZWZ0ICogbW9kCS0NCgkJCQkoICggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImZpeGVkIiA\/DQoJCQkJCS10aGlzLm9mZnNldC5zY3JvbGwubGVmdCA6DQoJCQkJCSggc2Nyb2xsSXNSb290Tm9kZSA\/IDAgOiB0aGlzLm9mZnNldC5zY3JvbGwubGVmdCApICkgKiBtb2QgKQ0KCQkJKQ0KCQl9Ow0KDQoJfSwNCg0KCV9nZW5lcmF0ZVBvc2l0aW9uOiBmdW5jdGlvbiggZXZlbnQsIGNvbnN0cmFpblBvc2l0aW9uICkgew0KDQoJCXZhciBjb250YWlubWVudCwgY28sIHRvcCwgbGVmdCwNCgkJCW8gPSB0aGlzLm9wdGlvbnMsDQoJCQlzY3JvbGxJc1Jvb3ROb2RlID0gdGhpcy5faXNSb290Tm9kZSggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSApLA0KCQkJcGFnZVggPSBldmVudC5wYWdlWCwNCgkJCXBhZ2VZID0gZXZlbnQucGFnZVk7DQoNCgkJLy8gQ2FjaGUgdGhlIHNjcm9sbA0KCQlpZiAoICFzY3JvbGxJc1Jvb3ROb2RlIHx8ICF0aGlzLm9mZnNldC5zY3JvbGwgKSB7DQoJCQl0aGlzLm9mZnNldC5zY3JvbGwgPSB7DQoJCQkJdG9wOiB0aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxUb3AoKSwNCgkJCQlsZWZ0OiB0aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0KCkNCgkJCX07DQoJCX0NCg0KCQkvKg0KCQkgKiAtIFBvc2l0aW9uIGNvbnN0cmFpbmluZyAtDQoJCSAqIENvbnN0cmFpbiB0aGUgcG9zaXRpb24gdG8gYSBtaXggb2YgZ3JpZCwgY29udGFpbm1lbnQuDQoJCSAqLw0KDQoJCS8vIElmIHdlIGFyZSBub3QgZHJhZ2dpbmcgeWV0LCB3ZSB3b24ndCBjaGVjayBmb3Igb3B0aW9ucw0KCQlpZiAoIGNvbnN0cmFpblBvc2l0aW9uICkgew0KCQkJaWYgKCB0aGlzLmNvbnRhaW5tZW50ICkgew0KCQkJCWlmICggdGhpcy5yZWxhdGl2ZUNvbnRhaW5lciApIHsNCgkJCQkJY28gPSB0aGlzLnJlbGF0aXZlQ29udGFpbmVyLm9mZnNldCgpOw0KCQkJCQljb250YWlubWVudCA9IFsNCgkJCQkJCXRoaXMuY29udGFpbm1lbnRbIDAgXSArIGNvLmxlZnQsDQoJCQkJCQl0aGlzLmNvbnRhaW5tZW50WyAxIF0gKyBjby50b3AsDQoJCQkJCQl0aGlzLmNvbnRhaW5tZW50WyAyIF0gKyBjby5sZWZ0LA0KCQkJCQkJdGhpcy5jb250YWlubWVudFsgMyBdICsgY28udG9wDQoJCQkJCV07DQoJCQkJfSBlbHNlIHsNCgkJCQkJY29udGFpbm1lbnQgPSB0aGlzLmNvbnRhaW5tZW50Ow0KCQkJCX0NCg0KCQkJCWlmICggZXZlbnQucGFnZVggLSB0aGlzLm9mZnNldC5jbGljay5sZWZ0IDwgY29udGFpbm1lbnRbIDAgXSApIHsNCgkJCQkJcGFnZVggPSBjb250YWlubWVudFsgMCBdICsgdGhpcy5vZmZzZXQuY2xpY2subGVmdDsNCgkJCQl9DQoJCQkJaWYgKCBldmVudC5wYWdlWSAtIHRoaXMub2Zmc2V0LmNsaWNrLnRvcCA8IGNvbnRhaW5tZW50WyAxIF0gKSB7DQoJCQkJCXBhZ2VZID0gY29udGFpbm1lbnRbIDEgXSArIHRoaXMub2Zmc2V0LmNsaWNrLnRvcDsNCgkJCQl9DQoJCQkJaWYgKCBldmVudC5wYWdlWCAtIHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgPiBjb250YWlubWVudFsgMiBdICkgew0KCQkJCQlwYWdlWCA9IGNvbnRhaW5tZW50WyAyIF0gKyB0aGlzLm9mZnNldC5jbGljay5sZWZ0Ow0KCQkJCX0NCgkJCQlpZiAoIGV2ZW50LnBhZ2VZIC0gdGhpcy5vZmZzZXQuY2xpY2sudG9wID4gY29udGFpbm1lbnRbIDMgXSApIHsNCgkJCQkJcGFnZVkgPSBjb250YWlubWVudFsgMyBdICsgdGhpcy5vZmZzZXQuY2xpY2sudG9wOw0KCQkJCX0NCgkJCX0NCg0KCQkJaWYgKCBvLmdyaWQgKSB7DQoNCgkJCQkvL0NoZWNrIGZvciBncmlkIGVsZW1lbnRzIHNldCB0byAwIHRvIHByZXZlbnQgZGl2aWRlIGJ5IDAgZXJyb3IgY2F1c2luZyBpbnZhbGlkDQoJCQkJLy8gYXJndW1lbnQgZXJyb3JzIGluIElFIChzZWUgdGlja2V0ICM2OTUwKQ0KCQkJCXRvcCA9IG8uZ3JpZFsgMSBdID8gdGhpcy5vcmlnaW5hbFBhZ2VZICsgTWF0aC5yb3VuZCggKCBwYWdlWSAtDQoJCQkJCXRoaXMub3JpZ2luYWxQYWdlWSApIC8gby5ncmlkWyAxIF0gKSAqIG8uZ3JpZFsgMSBdIDogdGhpcy5vcmlnaW5hbFBhZ2VZOw0KCQkJCXBhZ2VZID0gY29udGFpbm1lbnQgPyAoICggdG9wIC0gdGhpcy5vZmZzZXQuY2xpY2sudG9wID49IGNvbnRhaW5tZW50WyAxIF0gfHwNCgkJCQkJdG9wIC0gdGhpcy5vZmZzZXQuY2xpY2sudG9wID4gY29udGFpbm1lbnRbIDMgXSApID8NCgkJCQkJCXRvcCA6DQoJCQkJCQkoICggdG9wIC0gdGhpcy5vZmZzZXQuY2xpY2sudG9wID49IGNvbnRhaW5tZW50WyAxIF0gKSA\/DQoJCQkJCQkJdG9wIC0gby5ncmlkWyAxIF0gOiB0b3AgKyBvLmdyaWRbIDEgXSApICkgOiB0b3A7DQoNCgkJCQlsZWZ0ID0gby5ncmlkWyAwIF0gPyB0aGlzLm9yaWdpbmFsUGFnZVggKw0KCQkJCQlNYXRoLnJvdW5kKCAoIHBhZ2VYIC0gdGhpcy5vcmlnaW5hbFBhZ2VYICkgLyBvLmdyaWRbIDAgXSApICogby5ncmlkWyAwIF0gOg0KCQkJCQl0aGlzLm9yaWdpbmFsUGFnZVg7DQoJCQkJcGFnZVggPSBjb250YWlubWVudCA\/ICggKCBsZWZ0IC0gdGhpcy5vZmZzZXQuY2xpY2subGVmdCA+PSBjb250YWlubWVudFsgMCBdIHx8DQoJCQkJCWxlZnQgLSB0aGlzLm9mZnNldC5jbGljay5sZWZ0ID4gY29udGFpbm1lbnRbIDIgXSApID8NCgkJCQkJCWxlZnQgOg0KCQkJCQkJKCAoIGxlZnQgLSB0aGlzLm9mZnNldC5jbGljay5sZWZ0ID49IGNvbnRhaW5tZW50WyAwIF0gKSA\/DQoJCQkJCQkJbGVmdCAtIG8uZ3JpZFsgMCBdIDogbGVmdCArIG8uZ3JpZFsgMCBdICkgKSA6IGxlZnQ7DQoJCQl9DQoNCgkJCWlmICggby5heGlzID09PSAieSIgKSB7DQoJCQkJcGFnZVggPSB0aGlzLm9yaWdpbmFsUGFnZVg7DQoJCQl9DQoNCgkJCWlmICggby5heGlzID09PSAieCIgKSB7DQoJCQkJcGFnZVkgPSB0aGlzLm9yaWdpbmFsUGFnZVk7DQoJCQl9DQoJCX0NCg0KCQlyZXR1cm4gew0KCQkJdG9wOiAoDQoNCgkJCQkvLyBUaGUgYWJzb2x1dGUgbW91c2UgcG9zaXRpb24NCgkJCQlwYWdlWSAtDQoNCgkJCQkvLyBDbGljayBvZmZzZXQgKHJlbGF0aXZlIHRvIHRoZSBlbGVtZW50KQ0KCQkJCXRoaXMub2Zmc2V0LmNsaWNrLnRvcCAtDQoNCgkJCQkvLyBPbmx5IGZvciByZWxhdGl2ZSBwb3NpdGlvbmVkIG5vZGVzOiBSZWxhdGl2ZSBvZmZzZXQgZnJvbSBlbGVtZW50IHRvIG9mZnNldCBwYXJlbnQNCgkJCQl0aGlzLm9mZnNldC5yZWxhdGl2ZS50b3AgLQ0KDQoJCQkJLy8gVGhlIG9mZnNldFBhcmVudCdzIG9mZnNldCB3aXRob3V0IGJvcmRlcnMgKG9mZnNldCArIGJvcmRlcikNCgkJCQl0aGlzLm9mZnNldC5wYXJlbnQudG9wICsNCgkJCQkoIHRoaXMuY3NzUG9zaXRpb24gPT09ICJmaXhlZCIgPw0KCQkJCQktdGhpcy5vZmZzZXQuc2Nyb2xsLnRvcCA6DQoJCQkJCSggc2Nyb2xsSXNSb290Tm9kZSA\/IDAgOiB0aGlzLm9mZnNldC5zY3JvbGwudG9wICkgKQ0KCQkJKSwNCgkJCWxlZnQ6ICgNCg0KCQkJCS8vIFRoZSBhYnNvbHV0ZSBtb3VzZSBwb3NpdGlvbg0KCQkJCXBhZ2VYIC0NCg0KCQkJCS8vIENsaWNrIG9mZnNldCAocmVsYXRpdmUgdG8gdGhlIGVsZW1lbnQpDQoJCQkJdGhpcy5vZmZzZXQuY2xpY2subGVmdCAtDQoNCgkJCQkvLyBPbmx5IGZvciByZWxhdGl2ZSBwb3NpdGlvbmVkIG5vZGVzOiBSZWxhdGl2ZSBvZmZzZXQgZnJvbSBlbGVtZW50IHRvIG9mZnNldCBwYXJlbnQNCgkJCQl0aGlzLm9mZnNldC5yZWxhdGl2ZS5sZWZ0IC0NCg0KCQkJCS8vIFRoZSBvZmZzZXRQYXJlbnQncyBvZmZzZXQgd2l0aG91dCBib3JkZXJzIChvZmZzZXQgKyBib3JkZXIpDQoJCQkJdGhpcy5vZmZzZXQucGFyZW50LmxlZnQgKw0KCQkJCSggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImZpeGVkIiA\/DQoJCQkJCS10aGlzLm9mZnNldC5zY3JvbGwubGVmdCA6DQoJCQkJCSggc2Nyb2xsSXNSb290Tm9kZSA\\/ICJzY3JvbGxMZWZ0IiA6ICJzY3JvbGxUb3AiLA0KCQkJaGFzID0gZmFsc2U7DQoNCgkJaWYgKCBlbFsgc2Nyb2xsIF0gPiAwICkgew0KCQkJcmV0dXJuIHRydWU7DQoJCX0NCg0KCQkvLyBUT0RPOiBkZXRlcm1pbmUgd2hpY2ggY2FzZXMgYWN0dWFsbHkgY2F1c2UgdGhpcyB0byBoYXBwZW4NCgkJLy8gaWYgdGhlIGVsZW1lbnQgZG9lc24ndCBoYXZlIHRoZSBzY3JvbGwgc2V0LCBzZWUgaWYgaXQncyBwb3NzaWJsZSB0bw0KCQkvLyBzZXQgdGhlIHNjcm9sbA0KCQllbFsgc2Nyb2xsIF0gPSAxOw0KCQloYXMgPSAoIGVsWyBzY3JvbGwgXSA+IDAgKTsNCgkJZWxbIHNjcm9sbCBdID0gMDsNCgkJcmV0dXJuIGhhczsNCgl9LA0KDQoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7DQoNCgkJdmFyIG1hcmdpbnMsDQoJCQlvID0gdGhpcy5vcHRpb25zLA0KCQkJdGhhdCA9IHRoaXM7DQoJCXRoaXMuX2FkZENsYXNzKCAidWktcmVzaXphYmxlIiApOw0KDQoJCSQuZXh0ZW5kKCB0aGlzLCB7DQoJCQlfYXNwZWN0UmF0aW86ICEhKCBvLmFzcGVjdFJhdGlvICksDQoJCQlhc3BlY3RSYXRpbzogby5hc3BlY3RSYXRpbywNCgkJCW9yaWdpbmFsRWxlbWVudDogdGhpcy5lbGVtZW50LA0KCQkJX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHM6IFtdLA0KCQkJX2hlbHBlcjogby5oZWxwZXIgfHwgby5naG9zdCB8fCBvLmFuaW1hdGUgPyBvLmhlbHBlciB8fCAidWktcmVzaXphYmxlLWhlbHBlciIgOiBudWxsDQoJCX0gKTsNCg0KCQkvLyBXcmFwIHRoZSBlbGVtZW50IGlmIGl0IGNhbm5vdCBob2xkIGNoaWxkIG5vZGVzDQoJCWlmICggdGhpcy5lbGVtZW50WyAwIF0ubm9kZU5hbWUubWF0Y2goIC9eKGNhbnZhc3x0ZXh0YXJlYXxpbnB1dHxzZWxlY3R8YnV0dG9ufGltZykkL2kgKSApIHsNCg0KCQkJdGhpcy5lbGVtZW50LndyYXAoDQoJCQkJJCggIjxkaXYgY2xhc3M9J3VpLXdyYXBwZXInIHN0eWxlPSdvdmVyZmxvdzogaGlkZGVuOyc+PC9kaXY+IiApLmNzcyggew0KCQkJCQlwb3NpdGlvbjogdGhpcy5lbGVtZW50LmNzcyggInBvc2l0aW9uIiApLA0KCQkJCQl3aWR0aDogdGhpcy5lbGVtZW50Lm91dGVyV2lkdGgoKSwNCgkJCQkJaGVpZ2h0OiB0aGlzLmVsZW1lbnQub3V0ZXJIZWlnaHQoKSwNCgkJCQkJdG9wOiB0aGlzLmVsZW1lbnQuY3NzKCAidG9wIiApLA0KCQkJCQlsZWZ0OiB0aGlzLmVsZW1lbnQuY3NzKCAibGVmdCIgKQ0KCQkJCX0gKQ0KCQkJKTsNCg0KCQkJdGhpcy5lbGVtZW50ID0gdGhpcy5lbGVtZW50LnBhcmVudCgpLmRhdGEoDQoJCQkJInVpLXJlc2l6YWJsZSIsIHRoaXMuZWxlbWVudC5yZXNpemFibGUoICJpbnN0YW5jZSIgKQ0KCQkJKTsNCg0KCQkJdGhpcy5lbGVtZW50SXNXcmFwcGVyID0gdHJ1ZTsNCg0KCQkJbWFyZ2lucyA9IHsNCgkJCQltYXJnaW5Ub3A6IHRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyggIm1hcmdpblRvcCIgKSwNCgkJCQltYXJnaW5SaWdodDogdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKCAibWFyZ2luUmlnaHQiICksDQoJCQkJbWFyZ2luQm90dG9tOiB0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoICJtYXJnaW5Cb3R0b20iICksDQoJCQkJbWFyZ2luTGVmdDogdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKCAibWFyZ2luTGVmdCIgKQ0KCQkJfTsNCg0KCQkJdGhpcy5lbGVtZW50LmNzcyggbWFyZ2lucyApOw0KCQkJdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKCAibWFyZ2luIiwgMCApOw0KDQoJCQkvLyBzdXBwb3J0OiBTYWZhcmkNCgkJCS8vIFByZXZlbnQgU2FmYXJpIHRleHRhcmVhIHJlc2l6ZQ0KCQkJdGhpcy5vcmlnaW5hbFJlc2l6ZVN0eWxlID0gdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKCAicmVzaXplIiApOw0KCQkJdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKCAicmVzaXplIiwgIm5vbmUiICk7DQoNCgkJCXRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMucHVzaCggdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKCB7DQoJCQkJcG9zaXRpb246ICJzdGF0aWMiLA0KCQkJCXpvb206IDEsDQoJCQkJZGlzcGxheTogImJsb2NrIg0KCQkJfSApICk7DQoNCgkJCS8vIFN1cHBvcnQ6IElFOQ0KCQkJLy8gYXZvaWQgSUUganVtcCAoaGFyZCBzZXQgdGhlIG1hcmdpbikNCgkJCXRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyggbWFyZ2lucyApOw0KDQoJCQl0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZSgpOw0KCQl9DQoNCgkJdGhpcy5fc2V0dXBIYW5kbGVzKCk7DQoNCgkJaWYgKCBvLmF1dG9IaWRlICkgew0KCQkJJCggdGhpcy5lbGVtZW50ICkNCgkJCQkub24oICJtb3VzZWVudGVyIiwgZnVuY3Rpb24oKSB7DQoJCQkJCWlmICggby5kaXNhYmxlZCApIHsNCgkJCQkJCXJldHVybjsNCgkJCQkJfQ0KCQkJCQl0aGF0Ll9yZW1vdmVDbGFzcyggInVpLXJlc2l6YWJsZS1hdXRvaGlkZSIgKTsNCgkJCQkJdGhhdC5faGFuZGxlcy5zaG93KCk7DQoJCQkJfSApDQoJCQkJLm9uKCAibW91c2VsZWF2ZSIsIGZ1bmN0aW9uKCkgew0KCQkJCQlpZiAoIG8uZGlzYWJsZWQgKSB7DQoJCQkJCQlyZXR1cm47DQoJCQkJCX0NCgkJCQkJaWYgKCAhdGhhdC5yZXNpemluZyApIHsNCgkJCQkJCXRoYXQuX2FkZENsYXNzKCAidWktcmVzaXphYmxlLWF1dG9oaWRlIiApOw0KCQkJCQkJdGhhdC5faGFuZGxlcy5oaWRlKCk7DQoJCQkJCX0NCgkJCQl9ICk7DQoJCX0NCg0KCQl0aGlzLl9tb3VzZUluaXQoKTsNCgl9LA0KDQoJX2Rlc3Ryb3k6IGZ1bmN0aW9uKCkgew0KDQoJCXRoaXMuX21vdXNlRGVzdHJveSgpOw0KDQoJCXZhciB3cmFwcGVyLA0KCQkJX2Rlc3Ryb3kgPSBmdW5jdGlvbiggZXhwICkgew0KCQkJCSQoIGV4cCApDQoJCQkJCS5yZW1vdmVEYXRhKCAicmVzaXphYmxlIiApDQoJCQkJCS5yZW1vdmVEYXRhKCAidWktcmVzaXphYmxlIiApDQoJCQkJCS5vZmYoICIucmVzaXphYmxlIiApDQoJCQkJCS5maW5kKCAiLnVpLXJlc2l6YWJsZS1oYW5kbGUiICkNCgkJCQkJCS5yZW1vdmUoKTsNCgkJCX07DQoNCgkJLy8gVE9ETzogVW53cmFwIGF0IHNhbWUgRE9NIHBvc2l0aW9uDQoJCWlmICggdGhpcy5lbGVtZW50SXNXcmFwcGVyICkgew0KCQkJX2Rlc3Ryb3koIHRoaXMuZWxlbWVudCApOw0KCQkJd3JhcHBlciA9IHRoaXMuZWxlbWVudDsNCgkJCXRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyggew0KCQkJCXBvc2l0aW9uOiB3cmFwcGVyLmNzcyggInBvc2l0aW9uIiApLA0KCQkJCXdpZHRoOiB3cmFwcGVyLm91dGVyV2lkdGgoKSwNCgkJCQloZWlnaHQ6IHdyYXBwZXIub3V0ZXJIZWlnaHQoKSwNCgkJCQl0b3A6IHdyYXBwZXIuY3NzKCAidG9wIiApLA0KCQkJCWxlZnQ6IHdyYXBwZXIuY3NzKCAibGVmdCIgKQ0KCQkJfSApLmluc2VydEFmdGVyKCB3cmFwcGVyICk7DQoJCQl3cmFwcGVyLnJlbW92ZSgpOw0KCQl9DQoNCgkJdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKCAicmVzaXplIiwgdGhpcy5vcmlnaW5hbFJlc2l6ZVN0eWxlICk7DQoJCV9kZXN0cm95KCB0aGlzLm9yaWdpbmFsRWxlbWVudCApOw0KDQoJCXJldHVybiB0aGlzOw0KCX0sDQoNCglfc2V0T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsNCgkJdGhpcy5fc3VwZXIoIGtleSwgdmFsdWUgKTsNCg0KCQlzd2l0Y2ggKCBrZXkgKSB7DQoJCWNhc2UgImhhbmRsZXMiOg0KCQkJdGhpcy5fcmVtb3ZlSGFuZGxlcygpOw0KCQkJdGhpcy5fc2V0dXBIYW5kbGVzKCk7DQoJCQlicmVhazsNCgkJZGVmYXVsdDoNCgkJCWJyZWFrOw0KCQl9DQoJfSwNCg0KCV9zZXR1cEhhbmRsZXM6IGZ1bmN0aW9uKCkgew0KCQl2YXIgbyA9IHRoaXMub3B0aW9ucywgaGFuZGxlLCBpLCBuLCBobmFtZSwgYXhpcywgdGhhdCA9IHRoaXM7DQoJCXRoaXMuaGFuZGxlcyA9IG8uaGFuZGxlcyB8fA0KCQkJKCAhJCggIi51aS1yZXNpemFibGUtaGFuZGxlIiwgdGhpcy5lbGVtZW50ICkubGVuZ3RoID8NCgkJCQkiZSxzLHNlIiA6IHsNCgkJCQkJbjogIi51aS1yZXNpemFibGUtbiIsDQoJCQkJCWU6ICIudWktcmVzaXphYmxlLWUiLA0KCQkJCQlzOiAiLnVpLXJlc2l6YWJsZS1zIiwNCgkJCQkJdzogIi51aS1yZXNpemFibGUtdyIsDQoJCQkJCXNlOiAiLnVpLXJlc2l6YWJsZS1zZSIsDQoJCQkJCXN3OiAiLnVpLXJlc2l6YWJsZS1zdyIsDQoJCQkJCW5lOiAiLnVpLXJlc2l6YWJsZS1uZSIsDQoJCQkJCW53OiAiLnVpLXJlc2l6YWJsZS1udyINCgkJCQl9ICk7DQoNCgkJdGhpcy5faGFuZGxlcyA9ICQoKTsNCgkJaWYgKCB0aGlzLmhhbmRsZXMuY29uc3RydWN0b3IgPT09IFN0cmluZyApIHsNCg0KCQkJaWYgKCB0aGlzLmhhbmRsZXMgPT09ICJhbGwiICkgew0KCQkJCXRoaXMuaGFuZGxlcyA9ICJuLGUscyx3LHNlLHN3LG5lLG53IjsNCgkJCX0NCg0KCQkJbiA9IHRoaXMuaGFuZGxlcy5zcGxpdCggIiwiICk7DQoJCQl0aGlzLmhhbmRsZXMgPSB7fTsNCg0KCQkJZm9yICggaSA9IDA7IGkgPCBuLmxlbmd0aDsgaSsrICkgew0KDQoJCQkJaGFuZGxlID0gJC50cmltKCBuWyBpIF0gKTsNCgkJCQlobmFtZSA9ICJ1aS1yZXNpemFibGUtIiArIGhhbmRsZTsNCgkJCQlheGlzID0gJCggIjxkaXY+IiApOw0KCQkJCXRoaXMuX2FkZENsYXNzKCBheGlzLCAidWktcmVzaXphYmxlLWhhbmRsZSAiICsgaG5hbWUgKTsNCg0KCQkJCWF4aXMuY3NzKCB7IHpJbmRleDogby56SW5kZXggfSApOw0KDQoJCQkJdGhpcy5oYW5kbGVzWyBoYW5kbGUgXSA9ICIudWktcmVzaXphYmxlLSIgKyBoYW5kbGU7DQoJCQkJdGhpcy5lbGVtZW50LmFwcGVuZCggYXhpcyApOw0KCQkJfQ0KDQoJCX0NCg0KCQl0aGlzLl9yZW5kZXJBeGlzID0gZnVuY3Rpb24oIHRhcmdldCApIHsNCg0KCQkJdmFyIGksIGF4aXMsIHBhZFBvcywgcGFkV3JhcHBlcjsNCg0KCQkJdGFyZ2V0ID0gdGFyZ2V0IHx8IHRoaXMuZWxlbWVudDsNCg0KCQkJZm9yICggaSBpbiB0aGlzLmhhbmRsZXMgKSB7DQoNCgkJCQlpZiAoIHRoaXMuaGFuZGxlc1sgaSBdLmNvbnN0cnVjdG9yID09PSBTdHJpbmcgKSB7DQoJCQkJCXRoaXMuaGFuZGxlc1sgaSBdID0gdGhpcy5lbGVtZW50LmNoaWxkcmVuKCB0aGlzLmhhbmRsZXNbIGkgXSApLmZpcnN0KCkuc2hvdygpOw0KCQkJCX0gZWxzZSBpZiAoIHRoaXMuaGFuZGxlc1sgaSBdLmpxdWVyeSB8fCB0aGlzLmhhbmRsZXNbIGkgXS5ub2RlVHlwZSApIHsNCgkJCQkJdGhpcy5oYW5kbGVzWyBpIF0gPSAkKCB0aGlzLmhhbmRsZXNbIGkgXSApOw0KCQkJCQl0aGlzLl9vbiggdGhpcy5oYW5kbGVzWyBpIF0sIHsgIm1vdXNlZG93biI6IHRoYXQuX21vdXNlRG93biB9ICk7DQoJCQkJfQ0KDQoJCQkJaWYgKCB0aGlzLmVsZW1lbnRJc1dyYXBwZXIgJiYNCgkJCQkJCXRoaXMub3JpZ2luYWxFbGVtZW50WyAwIF0NCgkJCQkJCQkubm9kZU5hbWUNCgkJCQkJCQkubWF0Y2goIC9eKHRleHRhcmVhfGlucHV0fHNlbGVjdHxidXR0b24pJC9pICkgKSB7DQoJCQkJCWF4aXMgPSAkKCB0aGlzLmhhbmRsZXNbIGkgXSwgdGhpcy5lbGVtZW50ICk7DQoNCgkJCQkJcGFkV3JhcHBlciA9IC9zd3xuZXxud3xzZXxufHMvLnRlc3QoIGkgKSA\/DQoJCQkJCQlheGlzLm91dGVySGVpZ2h0KCkgOg0KCQkJCQkJYXhpcy5vdXRlcldpZHRoKCk7DQoNCgkJCQkJcGFkUG9zID0gWyAicGFkZGluZyIsDQoJCQkJCQkvbmV8bnd8bi8udGVzdCggaSApID8gIlRvcCIgOg0KCQkJCQkJL3NlfHN3fHMvLnRlc3QoIGkgKSA\/ICJCb3R0b20iIDoNCgkJCQkJCS9eZSQvLnRlc3QoIGkgKSA\/ICJSaWdodCIgOiAiTGVmdCIgXS5qb2luKCAiIiApOw0KDQoJCQkJCXRhcmdldC5jc3MoIHBhZFBvcywgcGFkV3JhcHBlciApOw0KDQoJCQkJCXRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplKCk7DQoJCQkJfQ0KDQoJCQkJdGhpcy5faGFuZGxlcyA9IHRoaXMuX2hhbmRsZXMuYWRkKCB0aGlzLmhhbmRsZXNbIGkgXSApOw0KCQkJfQ0KCQl9Ow0KDQoJCS8vIFRPRE86IG1ha2UgcmVuZGVyQXhpcyBhIHByb3RvdHlwZSBmdW5jdGlvbg0KCQl0aGlzLl9yZW5kZXJBeGlzKCB0aGlzLmVsZW1lbnQgKTsNCg0KCQl0aGlzLl9oYW5kbGVzID0gdGhpcy5faGFuZGxlcy5hZGQoIHRoaXMuZWxlbWVudC5maW5kKCAiLnVpLXJlc2l6YWJsZS1oYW5kbGUiICkgKTsNCgkJdGhpcy5faGFuZGxlcy5kaXNhYmxlU2VsZWN0aW9uKCk7DQoNCgkJdGhpcy5faGFuZGxlcy5vbiggIm1vdXNlb3ZlciIsIGZ1bmN0aW9uKCkgew0KCQkJaWYgKCAhdGhhdC5yZXNpemluZyApIHsNCgkJCQlpZiAoIHRoaXMuY2xhc3NOYW1lICkgew0KCQkJCQlheGlzID0gdGhpcy5jbGFzc05hbWUubWF0Y2goIC91aS1yZXNpemFibGUtKHNlfHN3fG5lfG53fG58ZXxzfHcpL2kgKTsNCgkJCQl9DQoJCQkJdGhhdC5heGlzID0gYXhpcyAmJiBheGlzWyAxIF0gPyBheGlzWyAxIF0gOiAic2UiOw0KCQkJfQ0KCQl9ICk7DQoNCgkJaWYgKCBvLmF1dG9IaWRlICkgew0KCQkJdGhpcy5faGFuZGxlcy5oaWRlKCk7DQoJCQl0aGlzLl9hZGRDbGFzcyggInVpLXJlc2l6YWJsZS1hdXRvaGlkZSIgKTsNCgkJfQ0KCX0sDQoNCglfcmVtb3ZlSGFuZGxlczogZnVuY3Rpb24oKSB7DQoJCXRoaXMuX2hhbmRsZXMucmVtb3ZlKCk7DQoJfSwNCg0KCV9tb3VzZUNhcHR1cmU6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJdmFyIGksIGhhbmRsZSwNCgkJCWNhcHR1cmUgPSBmYWxzZTsNCg0KCQlmb3IgKCBpIGluIHRoaXMuaGFuZGxlcyApIHsNCgkJCWhhbmRsZSA9ICQoIHRoaXMuaGFuZGxlc1sgaSBdIClbIDAgXTsNCgkJCWlmICggaGFuZGxlID09PSBldmVudC50YXJnZXQgfHwgJC5jb250YWlucyggaGFuZGxlLCBldmVudC50YXJnZXQgKSApIHsNCgkJCQljYXB0dXJlID0gdHJ1ZTsNCgkJCX0NCgkJfQ0KDQoJCXJldHVybiAhdGhpcy5vcHRpb25zLmRpc2FibGVkICYmIGNhcHR1cmU7DQoJfSwNCg0KCV9tb3VzZVN0YXJ0OiBmdW5jdGlvbiggZXZlbnQgKSB7DQoNCgkJdmFyIGN1cmxlZnQsIGN1cnRvcCwgY3Vyc29yLA0KCQkJbyA9IHRoaXMub3B0aW9ucywNCgkJCWVsID0gdGhpcy5lbGVtZW50Ow0KDQoJCXRoaXMucmVzaXppbmcgPSB0cnVlOw0KDQoJCXRoaXMuX3JlbmRlclByb3h5KCk7DQoNCgkJY3VybGVmdCA9IHRoaXMuX251bSggdGhpcy5oZWxwZXIuY3NzKCAibGVmdCIgKSApOw0KCQljdXJ0b3AgPSB0aGlzLl9udW0oIHRoaXMuaGVscGVyLmNzcyggInRvcCIgKSApOw0KDQoJCWlmICggby5jb250YWlubWVudCApIHsNCgkJCWN1cmxlZnQgKz0gJCggby5jb250YWlubWVudCApLnNjcm9sbExlZnQoKSB8fCAwOw0KCQkJY3VydG9wICs9ICQoIG8uY29udGFpbm1lbnQgKS5zY3JvbGxUb3AoKSB8fCAwOw0KCQl9DQoNCgkJdGhpcy5vZmZzZXQgPSB0aGlzLmhlbHBlci5vZmZzZXQoKTsNCgkJdGhpcy5wb3NpdGlvbiA9IHsgbGVmdDogY3VybGVmdCwgdG9wOiBjdXJ0b3AgfTsNCg0KCQl0aGlzLnNpemUgPSB0aGlzLl9oZWxwZXIgPyB7DQoJCQkJd2lkdGg6IHRoaXMuaGVscGVyLndpZHRoKCksDQoJCQkJaGVpZ2h0OiB0aGlzLmhlbHBlci5oZWlnaHQoKQ0KCQkJfSA6IHsNCgkJCQl3aWR0aDogZWwud2lkdGgoKSwNCgkJCQloZWlnaHQ6IGVsLmhlaWdodCgpDQoJCQl9Ow0KDQoJCXRoaXMub3JpZ2luYWxTaXplID0gdGhpcy5faGVscGVyID8gew0KCQkJCXdpZHRoOiBlbC5vdXRlcldpZHRoKCksDQoJCQkJaGVpZ2h0OiBlbC5vdXRlckhlaWdodCgpDQoJCQl9IDogew0KCQkJCXdpZHRoOiBlbC53aWR0aCgpLA0KCQkJCWhlaWdodDogZWwuaGVpZ2h0KCkNCgkJCX07DQoNCgkJdGhpcy5zaXplRGlmZiA9IHsNCgkJCXdpZHRoOiBlbC5vdXRlcldpZHRoKCkgLSBlbC53aWR0aCgpLA0KCQkJaGVpZ2h0OiBlbC5vdXRlckhlaWdodCgpIC0gZWwuaGVpZ2h0KCkNCgkJfTsNCg0KCQl0aGlzLm9yaWdpbmFsUG9zaXRpb24gPSB7IGxlZnQ6IGN1cmxlZnQsIHRvcDogY3VydG9wIH07DQoJCXRoaXMub3JpZ2luYWxNb3VzZVBvc2l0aW9uID0geyBsZWZ0OiBldmVudC5wYWdlWCwgdG9wOiBldmVudC5wYWdlWSB9Ow0KDQoJCXRoaXMuYXNwZWN0UmF0aW8gPSAoIHR5cGVvZiBvLmFzcGVjdFJhdGlvID09PSAibnVtYmVyIiApID8NCgkJCW8uYXNwZWN0UmF0aW8gOg0KCQkJKCAoIHRoaXMub3JpZ2luYWxTaXplLndpZHRoIC8gdGhpcy5vcmlnaW5hbFNpemUuaGVpZ2h0ICkgfHwgMSApOw0KDQoJCWN1cnNvciA9ICQoICIudWktcmVzaXphYmxlLSIgKyB0aGlzLmF4aXMgKS5jc3MoICJjdXJzb3IiICk7DQoJCSQoICJib2R5IiApLmNzcyggImN1cnNvciIsIGN1cnNvciA9PT0gImF1dG8iID8gdGhpcy5heGlzICsgIi1yZXNpemUiIDogY3Vyc29yICk7DQoNCgkJdGhpcy5fYWRkQ2xhc3MoICJ1aS1yZXNpemFibGUtcmVzaXppbmciICk7DQoJCXRoaXMuX3Byb3BhZ2F0ZSggInN0YXJ0IiwgZXZlbnQgKTsNCgkJcmV0dXJuIHRydWU7DQoJfSwNCg0KCV9tb3VzZURyYWc6IGZ1bmN0aW9uKCBldmVudCApIHsNCg0KCQl2YXIgZGF0YSwgcHJvcHMsDQoJCQlzbXAgPSB0aGlzLm9yaWdpbmFsTW91c2VQb3NpdGlvbiwNCgkJCWEgPSB0aGlzLmF4aXMsDQoJCQlkeCA9ICggZXZlbnQucGFnZVggLSBzbXAubGVmdCApIHx8IDAsDQoJCQlkeSA9ICggZXZlbnQucGFnZVkgLSBzbXAudG9wICkgfHwgMCwNCgkJCXRyaWdnZXIgPSB0aGlzLl9jaGFuZ2VbIGEgXTsNCg0KCQl0aGlzLl91cGRhdGVQcmV2UHJvcGVydGllcygpOw0KDQoJCWlmICggIXRyaWdnZXIgKSB7DQoJCQlyZXR1cm4gZmFsc2U7DQoJCX0NCg0KCQlkYXRhID0gdHJpZ2dlci5hcHBseSggdGhpcywgWyBldmVudCwgZHgsIGR5IF0gKTsNCg0KCQl0aGlzLl91cGRhdGVWaXJ0dWFsQm91bmRhcmllcyggZXZlbnQuc2hpZnRLZXkgKTsNCgkJaWYgKCB0aGlzLl9hc3BlY3RSYXRpbyB8fCBldmVudC5zaGlmdEtleSApIHsNCgkJCWRhdGEgPSB0aGlzLl91cGRhdGVSYXRpbyggZGF0YSwgZXZlbnQgKTsNCgkJfQ0KDQoJCWRhdGEgPSB0aGlzLl9yZXNwZWN0U2l6ZSggZGF0YSwgZXZlbnQgKTsNCg0KCQl0aGlzLl91cGRhdGVDYWNoZSggZGF0YSApOw0KDQoJCXRoaXMuX3Byb3BhZ2F0ZSggInJlc2l6ZSIsIGV2ZW50ICk7DQoNCgkJcHJvcHMgPSB0aGlzLl9hcHBseUNoYW5nZXMoKTsNCg0KCQlpZiAoICF0aGlzLl9oZWxwZXIgJiYgdGhpcy5fcHJvcG9ydGlvbmFsbHlSZXNpemVFbGVtZW50cy5sZW5ndGggKSB7DQoJCQl0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZSgpOw0KCQl9DQoNCgkJaWYgKCAhJC5pc0VtcHR5T2JqZWN0KCBwcm9wcyApICkgew0KCQkJdGhpcy5fdXBkYXRlUHJldlByb3BlcnRpZXMoKTsNCgkJCXRoaXMuX3RyaWdnZXIoICJyZXNpemUiLCBldmVudCwgdGhpcy51aSgpICk7DQoJCQl0aGlzLl9hcHBseUNoYW5nZXMoKTsNCgkJfQ0KDQoJCXJldHVybiBmYWxzZTsNCgl9LA0KDQoJX21vdXNlU3RvcDogZnVuY3Rpb24oIGV2ZW50ICkgew0KDQoJCXRoaXMucmVzaXppbmcgPSBmYWxzZTsNCgkJdmFyIHByLCBpc3RhLCBzb2Zmc2V0aCwgc29mZnNldHcsIHMsIGxlZnQsIHRvcCwNCgkJCW8gPSB0aGlzLm9wdGlvbnMsIHRoYXQgPSB0aGlzOw0KDQoJCWlmICggdGhpcy5faGVscGVyICkgew0KDQoJCQlwciA9IHRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHM7DQoJCQlpc3RhID0gcHIubGVuZ3RoICYmICggL3RleHRhcmVhL2kgKS50ZXN0KCBwclsgMCBdLm5vZGVOYW1lICk7DQoJCQlzb2Zmc2V0aCA9IGlzdGEgJiYgdGhpcy5faGFzU2Nyb2xsKCBwclsgMCBdLCAibGVmdCIgKSA\/IDAgOiB0aGF0LnNpemVEaWZmLmhlaWdodDsNCgkJCXNvZmZzZXR3ID0gaXN0YSA\/IDAgOiB0aGF0LnNpemVEaWZmLndpZHRoOw0KDQoJCQlzID0gew0KCQkJCXdpZHRoOiAoIHRoYXQuaGVscGVyLndpZHRoKCkgIC0gc29mZnNldHcgKSwNCgkJCQloZWlnaHQ6ICggdGhhdC5oZWxwZXIuaGVpZ2h0KCkgLSBzb2Zmc2V0aCApDQoJCQl9Ow0KCQkJbGVmdCA9ICggcGFyc2VGbG9hdCggdGhhdC5lbGVtZW50LmNzcyggImxlZnQiICkgKSArDQoJCQkJKCB0aGF0LnBvc2l0aW9uLmxlZnQgLSB0aGF0Lm9yaWdpbmFsUG9zaXRpb24ubGVmdCApICkgfHwgbnVsbDsNCgkJCXRvcCA9ICggcGFyc2VGbG9hdCggdGhhdC5lbGVtZW50LmNzcyggInRvcCIgKSApICsNCgkJCQkoIHRoYXQucG9zaXRpb24udG9wIC0gdGhhdC5vcmlnaW5hbFBvc2l0aW9uLnRvcCApICkgfHwgbnVsbDsNCg0KCQkJaWYgKCAhby5hbmltYXRlICkgew0KCQkJCXRoaXMuZWxlbWVudC5jc3MoICQuZXh0ZW5kKCBzLCB7IHRvcDogdG9wLCBsZWZ0OiBsZWZ0IH0gKSApOw0KCQkJfQ0KDQoJCQl0aGF0LmhlbHBlci5oZWlnaHQoIHRoYXQuc2l6ZS5oZWlnaHQgKTsNCgkJCXRoYXQuaGVscGVyLndpZHRoKCB0aGF0LnNpemUud2lkdGggKTsNCg0KCQkJaWYgKCB0aGlzLl9oZWxwZXIgJiYgIW8uYW5pbWF0ZSApIHsNCgkJCQl0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZSgpOw0KCQkJfQ0KCQl9DQoNCgkJJCggImJvZHkiICkuY3NzKCAiY3Vyc29yIiwgImF1dG8iICk7DQoNCgkJdGhpcy5fcmVtb3ZlQ2xhc3MoICJ1aS1yZXNpemFibGUtcmVzaXppbmciICk7DQoNCgkJdGhpcy5fcHJvcGFnYXRlKCAic3RvcCIsIGV2ZW50ICk7DQoNCgkJaWYgKCB0aGlzLl9oZWxwZXIgKSB7DQoJCQl0aGlzLmhlbHBlci5yZW1vdmUoKTsNCgkJfQ0KDQoJCXJldHVybiBmYWxzZTsNCg0KCX0sDQoNCglfdXBkYXRlUHJldlByb3BlcnRpZXM6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLnByZXZQb3NpdGlvbiA9IHsNCgkJCXRvcDogdGhpcy5wb3NpdGlvbi50b3AsDQoJCQlsZWZ0OiB0aGlzLnBvc2l0aW9uLmxlZnQNCgkJfTsNCgkJdGhpcy5wcmV2U2l6ZSA9IHsNCgkJCXdpZHRoOiB0aGlzLnNpemUud2lkdGgsDQoJCQloZWlnaHQ6IHRoaXMuc2l6ZS5oZWlnaHQNCgkJfTsNCgl9LA0KDQoJX2FwcGx5Q2hhbmdlczogZnVuY3Rpb24oKSB7DQoJCXZhciBwcm9wcyA9IHt9Ow0KDQoJCWlmICggdGhpcy5wb3NpdGlvbi50b3AgIT09IHRoaXMucHJldlBvc2l0aW9uLnRvcCApIHsNCgkJCXByb3BzLnRvcCA9IHRoaXMucG9zaXRpb24udG9wICsgInB4IjsNCgkJfQ0KCQlpZiAoIHRoaXMucG9zaXRpb24ubGVmdCAhPT0gdGhpcy5wcmV2UG9zaXRpb24ubGVmdCApIHsNCgkJCXByb3BzLmxlZnQgPSB0aGlzLnBvc2l0aW9uLmxlZnQgKyAicHgiOw0KCQl9DQoJCWlmICggdGhpcy5zaXplLndpZHRoICE9PSB0aGlzLnByZXZTaXplLndpZHRoICkgew0KCQkJcHJvcHMud2lkdGggPSB0aGlzLnNpemUud2lkdGggKyAicHgiOw0KCQl9DQoJCWlmICggdGhpcy5zaXplLmhlaWdodCAhPT0gdGhpcy5wcmV2U2l6ZS5oZWlnaHQgKSB7DQoJCQlwcm9wcy5oZWlnaHQgPSB0aGlzLnNpemUuaGVpZ2h0ICsgInB4IjsNCgkJfQ0KDQoJCXRoaXMuaGVscGVyLmNzcyggcHJvcHMgKTsNCg0KCQlyZXR1cm4gcHJvcHM7DQoJfSwNCg0KCV91cGRhdGVWaXJ0dWFsQm91bmRhcmllczogZnVuY3Rpb24oIGZvcmNlQXNwZWN0UmF0aW8gKSB7DQoJCXZhciBwTWluV2lkdGgsIHBNYXhXaWR0aCwgcE1pbkhlaWdodCwgcE1heEhlaWdodCwgYiwNCgkJCW8gPSB0aGlzLm9wdGlvbnM7DQoNCgkJYiA9IHsNCgkJCW1pbldpZHRoOiB0aGlzLl9pc051bWJlciggby5taW5XaWR0aCApID8gby5taW5XaWR0aCA6IDAsDQoJCQltYXhXaWR0aDogdGhpcy5faXNOdW1iZXIoIG8ubWF4V2lkdGggKSA\\/IDAgOiB0aGF0LnNpemVEaWZmLmhlaWdodCwNCgkJCXNvZmZzZXR3ID0gaXN0YSA\/IDAgOiB0aGF0LnNpemVEaWZmLndpZHRoLA0KCQkJc3R5bGUgPSB7DQoJCQkJd2lkdGg6ICggdGhhdC5zaXplLndpZHRoIC0gc29mZnNldHcgKSwNCgkJCQloZWlnaHQ6ICggdGhhdC5zaXplLmhlaWdodCAtIHNvZmZzZXRoICkNCgkJCX0sDQoJCQlsZWZ0ID0gKCBwYXJzZUZsb2F0KCB0aGF0LmVsZW1lbnQuY3NzKCAibGVmdCIgKSApICsNCgkJCQkoIHRoYXQucG9zaXRpb24ubGVmdCAtIHRoYXQub3JpZ2luYWxQb3NpdGlvbi5sZWZ0ICkgKSB8fCBudWxsLA0KCQkJdG9wID0gKCBwYXJzZUZsb2F0KCB0aGF0LmVsZW1lbnQuY3NzKCAidG9wIiApICkgKw0KCQkJCSggdGhhdC5wb3NpdGlvbi50b3AgLSB0aGF0Lm9yaWdpbmFsUG9zaXRpb24udG9wICkgKSB8fCBudWxsOw0KDQoJCXRoYXQuZWxlbWVudC5hbmltYXRlKA0KCQkJJC5leHRlbmQoIHN0eWxlLCB0b3AgJiYgbGVmdCA\/IHsgdG9wOiB0b3AsIGxlZnQ6IGxlZnQgfSA6IHt9ICksIHsNCgkJCQlkdXJhdGlvbjogby5hbmltYXRlRHVyYXRpb24sDQoJCQkJZWFzaW5nOiBvLmFuaW1hdGVFYXNpbmcsDQoJCQkJc3RlcDogZnVuY3Rpb24oKSB7DQoNCgkJCQkJdmFyIGRhdGEgPSB7DQoJCQkJCQl3aWR0aDogcGFyc2VGbG9hdCggdGhhdC5lbGVtZW50LmNzcyggIndpZHRoIiApICksDQoJCQkJCQloZWlnaHQ6IHBhcnNlRmxvYXQoIHRoYXQuZWxlbWVudC5jc3MoICJoZWlnaHQiICkgKSwNCgkJCQkJCXRvcDogcGFyc2VGbG9hdCggdGhhdC5lbGVtZW50LmNzcyggInRvcCIgKSApLA0KCQkJCQkJbGVmdDogcGFyc2VGbG9hdCggdGhhdC5lbGVtZW50LmNzcyggImxlZnQiICkgKQ0KCQkJCQl9Ow0KDQoJCQkJCWlmICggcHIgJiYgcHIubGVuZ3RoICkgew0KCQkJCQkJJCggcHJbIDAgXSApLmNzcyggeyB3aWR0aDogZGF0YS53aWR0aCwgaGVpZ2h0OiBkYXRhLmhlaWdodCB9ICk7DQoJCQkJCX0NCg0KCQkJCQkvLyBQcm9wYWdhdGluZyByZXNpemUsIGFuZCB1cGRhdGluZyB2YWx1ZXMgZm9yIGVhY2ggYW5pbWF0aW9uIHN0ZXANCgkJCQkJdGhhdC5fdXBkYXRlQ2FjaGUoIGRhdGEgKTsNCgkJCQkJdGhhdC5fcHJvcGFnYXRlKCAicmVzaXplIiwgZXZlbnQgKTsNCg0KCQkJCX0NCgkJCX0NCgkJKTsNCgl9DQoNCn0gKTsNCg0KJC51aS5wbHVnaW4uYWRkKCAicmVzaXphYmxlIiwgImNvbnRhaW5tZW50Iiwgew0KDQoJc3RhcnQ6IGZ1bmN0aW9uKCkgew0KCQl2YXIgZWxlbWVudCwgcCwgY28sIGNoLCBjdywgd2lkdGgsIGhlaWdodCwNCgkJCXRoYXQgPSAkKCB0aGlzICkucmVzaXphYmxlKCAiaW5zdGFuY2UiICksDQoJCQlvID0gdGhhdC5vcHRpb25zLA0KCQkJZWwgPSB0aGF0LmVsZW1lbnQsDQoJCQlvYyA9IG8uY29udGFpbm1lbnQsDQoJCQljZSA9ICggb2MgaW5zdGFuY2VvZiAkICkgPw0KCQkJCW9jLmdldCggMCApIDoNCgkJCQkoIC9wYXJlbnQvLnRlc3QoIG9jICkgKSA\/IGVsLnBhcmVudCgpLmdldCggMCApIDogb2M7DQoNCgkJaWYgKCAhY2UgKSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQl0aGF0LmNvbnRhaW5lckVsZW1lbnQgPSAkKCBjZSApOw0KDQoJCWlmICggL2RvY3VtZW50Ly50ZXN0KCBvYyApIHx8IG9jID09PSBkb2N1bWVudCApIHsNCgkJCXRoYXQuY29udGFpbmVyT2Zmc2V0ID0gew0KCQkJCWxlZnQ6IDAsDQoJCQkJdG9wOiAwDQoJCQl9Ow0KCQkJdGhhdC5jb250YWluZXJQb3NpdGlvbiA9IHsNCgkJCQlsZWZ0OiAwLA0KCQkJCXRvcDogMA0KCQkJfTsNCg0KCQkJdGhhdC5wYXJlbnREYXRhID0gew0KCQkJCWVsZW1lbnQ6ICQoIGRvY3VtZW50ICksDQoJCQkJbGVmdDogMCwNCgkJCQl0b3A6IDAsDQoJCQkJd2lkdGg6ICQoIGRvY3VtZW50ICkud2lkdGgoKSwNCgkJCQloZWlnaHQ6ICQoIGRvY3VtZW50ICkuaGVpZ2h0KCkgfHwgZG9jdW1lbnQuYm9keS5wYXJlbnROb2RlLnNjcm9sbEhlaWdodA0KCQkJfTsNCgkJfSBlbHNlIHsNCgkJCWVsZW1lbnQgPSAkKCBjZSApOw0KCQkJcCA9IFtdOw0KCQkJJCggWyAiVG9wIiwgIlJpZ2h0IiwgIkxlZnQiLCAiQm90dG9tIiBdICkuZWFjaCggZnVuY3Rpb24oIGksIG5hbWUgKSB7DQoJCQkJcFsgaSBdID0gdGhhdC5fbnVtKCBlbGVtZW50LmNzcyggInBhZGRpbmciICsgbmFtZSApICk7DQoJCQl9ICk7DQoNCgkJCXRoYXQuY29udGFpbmVyT2Zmc2V0ID0gZWxlbWVudC5vZmZzZXQoKTsNCgkJCXRoYXQuY29udGFpbmVyUG9zaXRpb24gPSBlbGVtZW50LnBvc2l0aW9uKCk7DQoJCQl0aGF0LmNvbnRhaW5lclNpemUgPSB7DQoJCQkJaGVpZ2h0OiAoIGVsZW1lbnQuaW5uZXJIZWlnaHQoKSAtIHBbIDMgXSApLA0KCQkJCXdpZHRoOiAoIGVsZW1lbnQuaW5uZXJXaWR0aCgpIC0gcFsgMSBdICkNCgkJCX07DQoNCgkJCWNvID0gdGhhdC5jb250YWluZXJPZmZzZXQ7DQoJCQljaCA9IHRoYXQuY29udGFpbmVyU2l6ZS5oZWlnaHQ7DQoJCQljdyA9IHRoYXQuY29udGFpbmVyU2l6ZS53aWR0aDsNCgkJCXdpZHRoID0gKCB0aGF0Ll9oYXNTY3JvbGwgKCBjZSwgImxlZnQiICkgPyBjZS5zY3JvbGxXaWR0aCA6IGN3ICk7DQoJCQloZWlnaHQgPSAoIHRoYXQuX2hhc1Njcm9sbCAoIGNlICkgPyBjZS5zY3JvbGxIZWlnaHQgOiBjaCApIDsNCg0KCQkJdGhhdC5wYXJlbnREYXRhID0gew0KCQkJCWVsZW1lbnQ6IGNlLA0KCQkJCWxlZnQ6IGNvLmxlZnQsDQoJCQkJdG9wOiBjby50b3AsDQoJCQkJd2lkdGg6IHdpZHRoLA0KCQkJCWhlaWdodDogaGVpZ2h0DQoJCQl9Ow0KCQl9DQoJfSwNCg0KCXJlc2l6ZTogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQl2YXIgd29zZXQsIGhvc2V0LCBpc1BhcmVudCwgaXNPZmZzZXRSZWxhdGl2ZSwNCgkJCXRoYXQgPSAkKCB0aGlzICkucmVzaXphYmxlKCAiaW5zdGFuY2UiICksDQoJCQlvID0gdGhhdC5vcHRpb25zLA0KCQkJY28gPSB0aGF0LmNvbnRhaW5lck9mZnNldCwNCgkJCWNwID0gdGhhdC5wb3NpdGlvbiwNCgkJCXBSYXRpbyA9IHRoYXQuX2FzcGVjdFJhdGlvIHx8IGV2ZW50LnNoaWZ0S2V5LA0KCQkJY29wID0gew0KCQkJCXRvcDogMCwNCgkJCQlsZWZ0OiAwDQoJCQl9LA0KCQkJY2UgPSB0aGF0LmNvbnRhaW5lckVsZW1lbnQsDQoJCQljb250aW51ZVJlc2l6ZSA9IHRydWU7DQoNCgkJaWYgKCBjZVsgMCBdICE9PSBkb2N1bWVudCAmJiAoIC9zdGF0aWMvICkudGVzdCggY2UuY3NzKCAicG9zaXRpb24iICkgKSApIHsNCgkJCWNvcCA9IGNvOw0KCQl9DQoNCgkJaWYgKCBjcC5sZWZ0IDwgKCB0aGF0Ll9oZWxwZXIgPyBjby5sZWZ0IDogMCApICkgew0KCQkJdGhhdC5zaXplLndpZHRoID0gdGhhdC5zaXplLndpZHRoICsNCgkJCQkoIHRoYXQuX2hlbHBlciA\/DQoJCQkJCSggdGhhdC5wb3NpdGlvbi5sZWZ0IC0gY28ubGVmdCApIDoNCgkJCQkJKCB0aGF0LnBvc2l0aW9uLmxlZnQgLSBjb3AubGVmdCApICk7DQoNCgkJCWlmICggcFJhdGlvICkgew0KCQkJCXRoYXQuc2l6ZS5oZWlnaHQgPSB0aGF0LnNpemUud2lkdGggLyB0aGF0LmFzcGVjdFJhdGlvOw0KCQkJCWNvbnRpbnVlUmVzaXplID0gZmFsc2U7DQoJCQl9DQoJCQl0aGF0LnBvc2l0aW9uLmxlZnQgPSBvLmhlbHBlciA\/IGNvLmxlZnQgOiAwOw0KCQl9DQoNCgkJaWYgKCBjcC50b3AgPCAoIHRoYXQuX2hlbHBlciA\/IGNvLnRvcCA6IDAgKSApIHsNCgkJCXRoYXQuc2l6ZS5oZWlnaHQgPSB0aGF0LnNpemUuaGVpZ2h0ICsNCgkJCQkoIHRoYXQuX2hlbHBlciA\/DQoJCQkJCSggdGhhdC5wb3NpdGlvbi50b3AgLSBjby50b3AgKSA6DQoJCQkJCXRoYXQucG9zaXRpb24udG9wICk7DQoNCgkJCWlmICggcFJhdGlvICkgew0KCQkJCXRoYXQuc2l6ZS53aWR0aCA9IHRoYXQuc2l6ZS5oZWlnaHQgKiB0aGF0LmFzcGVjdFJhdGlvOw0KCQkJCWNvbnRpbnVlUmVzaXplID0gZmFsc2U7DQoJCQl9DQoJCQl0aGF0LnBvc2l0aW9uLnRvcCA9IHRoYXQuX2hlbHBlciA\/IGNvLnRvcCA6IDA7DQoJCX0NCg0KCQlpc1BhcmVudCA9IHRoYXQuY29udGFpbmVyRWxlbWVudC5nZXQoIDAgKSA9PT0gdGhhdC5lbGVtZW50LnBhcmVudCgpLmdldCggMCApOw0KCQlpc09mZnNldFJlbGF0aXZlID0gL3JlbGF0aXZlfGFic29sdXRlLy50ZXN0KCB0aGF0LmNvbnRhaW5lckVsZW1lbnQuY3NzKCAicG9zaXRpb24iICkgKTsNCg0KCQlpZiAoIGlzUGFyZW50ICYmIGlzT2Zmc2V0UmVsYXRpdmUgKSB7DQoJCQl0aGF0Lm9mZnNldC5sZWZ0ID0gdGhhdC5wYXJlbnREYXRhLmxlZnQgKyB0aGF0LnBvc2l0aW9uLmxlZnQ7DQoJCQl0aGF0Lm9mZnNldC50b3AgPSB0aGF0LnBhcmVudERhdGEudG9wICsgdGhhdC5wb3NpdGlvbi50b3A7DQoJCX0gZWxzZSB7DQoJCQl0aGF0Lm9mZnNldC5sZWZ0ID0gdGhhdC5lbGVtZW50Lm9mZnNldCgpLmxlZnQ7DQoJCQl0aGF0Lm9mZnNldC50b3AgPSB0aGF0LmVsZW1lbnQub2Zmc2V0KCkudG9wOw0KCQl9DQoNCgkJd29zZXQgPSBNYXRoLmFicyggdGhhdC5zaXplRGlmZi53aWR0aCArDQoJCQkoIHRoYXQuX2hlbHBlciA\/DQoJCQkJdGhhdC5vZmZzZXQubGVmdCAtIGNvcC5sZWZ0IDoNCgkJCQkoIHRoYXQub2Zmc2V0LmxlZnQgLSBjby5sZWZ0ICkgKSApOw0KDQoJCWhvc2V0ID0gTWF0aC5hYnMoIHRoYXQuc2l6ZURpZmYuaGVpZ2h0ICsNCgkJCSggdGhhdC5faGVscGVyID8NCgkJCQl0aGF0Lm9mZnNldC50b3AgLSBjb3AudG9wIDoNCgkJCQkoIHRoYXQub2Zmc2V0LnRvcCAtIGNvLnRvcCApICkgKTsNCg0KCQlpZiAoIHdvc2V0ICsgdGhhdC5zaXplLndpZHRoID49IHRoYXQucGFyZW50RGF0YS53aWR0aCApIHsNCgkJCXRoYXQuc2l6ZS53aWR0aCA9IHRoYXQucGFyZW50RGF0YS53aWR0aCAtIHdvc2V0Ow0KCQkJaWYgKCBwUmF0aW8gKSB7DQoJCQkJdGhhdC5zaXplLmhlaWdodCA9IHRoYXQuc2l6ZS53aWR0aCAvIHRoYXQuYXNwZWN0UmF0aW87DQoJCQkJY29udGludWVSZXNpemUgPSBmYWxzZTsNCgkJCX0NCgkJfQ0KDQoJCWlmICggaG9zZXQgKyB0aGF0LnNpemUuaGVpZ2h0ID49IHRoYXQucGFyZW50RGF0YS5oZWlnaHQgKSB7DQoJCQl0aGF0LnNpemUuaGVpZ2h0ID0gdGhhdC5wYXJlbnREYXRhLmhlaWdodCAtIGhvc2V0Ow0KCQkJaWYgKCBwUmF0aW8gKSB7DQoJCQkJdGhhdC5zaXplLndpZHRoID0gdGhhdC5zaXplLmhlaWdodCAqIHRoYXQuYXNwZWN0UmF0aW87DQoJCQkJY29udGludWVSZXNpemUgPSBmYWxzZTsNCgkJCX0NCgkJfQ0KDQoJCWlmICggIWNvbnRpbnVlUmVzaXplICkgew0KCQkJdGhhdC5wb3NpdGlvbi5sZWZ0ID0gdGhhdC5wcmV2UG9zaXRpb24ubGVmdDsNCgkJCXRoYXQucG9zaXRpb24udG9wID0gdGhhdC5wcmV2UG9zaXRpb24udG9wOw0KCQkJdGhhdC5zaXplLndpZHRoID0gdGhhdC5wcmV2U2l6ZS53aWR0aDsNCgkJCXRoYXQuc2l6ZS5oZWlnaHQgPSB0aGF0LnByZXZTaXplLmhlaWdodDsNCgkJfQ0KCX0sDQoNCglzdG9wOiBmdW5jdGlvbigpIHsNCgkJdmFyIHRoYXQgPSAkKCB0aGlzICkucmVzaXphYmxlKCAiaW5zdGFuY2UiICksDQoJCQlvID0gdGhhdC5vcHRpb25zLA0KCQkJY28gPSB0aGF0LmNvbnRhaW5lck9mZnNldCwNCgkJCWNvcCA9IHRoYXQuY29udGFpbmVyUG9zaXRpb24sDQoJCQljZSA9IHRoYXQuY29udGFpbmVyRWxlbWVudCwNCgkJCWhlbHBlciA9ICQoIHRoYXQuaGVscGVyICksDQoJCQlobyA9IGhlbHBlci5vZmZzZXQoKSwNCgkJCXcgPSBoZWxwZXIub3V0ZXJXaWR0aCgpIC0gdGhhdC5zaXplRGlmZi53aWR0aCwNCgkJCWggPSBoZWxwZXIub3V0ZXJIZWlnaHQoKSAtIHRoYXQuc2l6ZURpZmYuaGVpZ2h0Ow0KDQoJCWlmICggdGhhdC5faGVscGVyICYmICFvLmFuaW1hdGUgJiYgKCAvcmVsYXRpdmUvICkudGVzdCggY2UuY3NzKCAicG9zaXRpb24iICkgKSApIHsNCgkJCSQoIHRoaXMgKS5jc3MoIHsNCgkJCQlsZWZ0OiBoby5sZWZ0IC0gY29wLmxlZnQgLSBjby5sZWZ0LA0KCQkJCXdpZHRoOiB3LA0KCQkJCWhlaWdodDogaA0KCQkJfSApOw0KCQl9DQoNCgkJaWYgKCB0aGF0Ll9oZWxwZXIgJiYgIW8uYW5pbWF0ZSAmJiAoIC9zdGF0aWMvICkudGVzdCggY2UuY3NzKCAicG9zaXRpb24iICkgKSApIHsNCgkJCSQoIHRoaXMgKS5jc3MoIHsNCgkJCQlsZWZ0OiBoby5sZWZ0IC0gY29wLmxlZnQgLSBjby5sZWZ0LA0KCQkJCXdpZHRoOiB3LA0KCQkJCWhlaWdodDogaA0KCQkJfSApOw0KCQl9DQoJfQ0KfSApOw0KDQokLnVpLnBsdWdpbi5hZGQoICJyZXNpemFibGUiLCAiYWxzb1Jlc2l6ZSIsIHsNCg0KCXN0YXJ0OiBmdW5jdGlvbigpIHsNCgkJdmFyIHRoYXQgPSAkKCB0aGlzICkucmVzaXphYmxlKCAiaW5zdGFuY2UiICksDQoJCQlvID0gdGhhdC5vcHRpb25zOw0KDQoJCSQoIG8uYWxzb1Jlc2l6ZSApLmVhY2goIGZ1bmN0aW9uKCkgew0KCQkJdmFyIGVsID0gJCggdGhpcyApOw0KCQkJZWwuZGF0YSggInVpLXJlc2l6YWJsZS1hbHNvcmVzaXplIiwgew0KCQkJCXdpZHRoOiBwYXJzZUZsb2F0KCBlbC53aWR0aCgpICksIGhlaWdodDogcGFyc2VGbG9hdCggZWwuaGVpZ2h0KCkgKSwNCgkJCQlsZWZ0OiBwYXJzZUZsb2F0KCBlbC5jc3MoICJsZWZ0IiApICksIHRvcDogcGFyc2VGbG9hdCggZWwuY3NzKCAidG9wIiApICkNCgkJCX0gKTsNCgkJfSApOw0KCX0sDQoNCglyZXNpemU6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7DQoJCXZhciB0aGF0ID0gJCggdGhpcyApLnJlc2l6YWJsZSggImluc3RhbmNlIiApLA0KCQkJbyA9IHRoYXQub3B0aW9ucywNCgkJCW9zID0gdGhhdC5vcmlnaW5hbFNpemUsDQoJCQlvcCA9IHRoYXQub3JpZ2luYWxQb3NpdGlvbiwNCgkJCWRlbHRhID0gew0KCQkJCWhlaWdodDogKCB0aGF0LnNpemUuaGVpZ2h0IC0gb3MuaGVpZ2h0ICkgfHwgMCwNCgkJCQl3aWR0aDogKCB0aGF0LnNpemUud2lkdGggLSBvcy53aWR0aCApIHx8IDAsDQoJCQkJdG9wOiAoIHRoYXQucG9zaXRpb24udG9wIC0gb3AudG9wICkgfHwgMCwNCgkJCQlsZWZ0OiAoIHRoYXQucG9zaXRpb24ubGVmdCAtIG9wLmxlZnQgKSB8fCAwDQoJCQl9Ow0KDQoJCQkkKCBvLmFsc29SZXNpemUgKS5lYWNoKCBmdW5jdGlvbigpIHsNCgkJCQl2YXIgZWwgPSAkKCB0aGlzICksIHN0YXJ0ID0gJCggdGhpcyApLmRhdGEoICJ1aS1yZXNpemFibGUtYWxzb3Jlc2l6ZSIgKSwgc3R5bGUgPSB7fSwNCgkJCQkJY3NzID0gZWwucGFyZW50cyggdWkub3JpZ2luYWxFbGVtZW50WyAwIF0gKS5sZW5ndGggPw0KCQkJCQkJCVsgIndpZHRoIiwgImhlaWdodCIgXSA6DQoJCQkJCQkJWyAid2lkdGgiLCAiaGVpZ2h0IiwgInRvcCIsICJsZWZ0IiBdOw0KDQoJCQkJJC5lYWNoKCBjc3MsIGZ1bmN0aW9uKCBpLCBwcm9wICkgew0KCQkJCQl2YXIgc3VtID0gKCBzdGFydFsgcHJvcCBdIHx8IDAgKSArICggZGVsdGFbIHByb3AgXSB8fCAwICk7DQoJCQkJCWlmICggc3VtICYmIHN1bSA+PSAwICkgew0KCQkJCQkJc3R5bGVbIHByb3AgXSA9IHN1bSB8fCBudWxsOw0KCQkJCQl9DQoJCQkJfSApOw0KDQoJCQkJZWwuY3NzKCBzdHlsZSApOw0KCQkJfSApOw0KCX0sDQoNCglzdG9wOiBmdW5jdGlvbigpIHsNCgkJJCggdGhpcyApLnJlbW92ZURhdGEoICJ1aS1yZXNpemFibGUtYWxzb3Jlc2l6ZSIgKTsNCgl9DQp9ICk7DQoNCiQudWkucGx1Z2luLmFkZCggInJlc2l6YWJsZSIsICJnaG9zdCIsIHsNCg0KCXN0YXJ0OiBmdW5jdGlvbigpIHsNCg0KCQl2YXIgdGhhdCA9ICQoIHRoaXMgKS5yZXNpemFibGUoICJpbnN0YW5jZSIgKSwgY3MgPSB0aGF0LnNpemU7DQoNCgkJdGhhdC5naG9zdCA9IHRoYXQub3JpZ2luYWxFbGVtZW50LmNsb25lKCk7DQoJCXRoYXQuZ2hvc3QuY3NzKCB7DQoJCQlvcGFjaXR5OiAwLjI1LA0KCQkJZGlzcGxheTogImJsb2NrIiwNCgkJCXBvc2l0aW9uOiAicmVsYXRpdmUiLA0KCQkJaGVpZ2h0OiBjcy5oZWlnaHQsDQoJCQl3aWR0aDogY3Mud2lkdGgsDQoJCQltYXJnaW46IDAsDQoJCQlsZWZ0OiAwLA0KCQkJdG9wOiAwDQoJCX0gKTsNCg0KCQl0aGF0Ll9hZGRDbGFzcyggdGhhdC5naG9zdCwgInVpLXJlc2l6YWJsZS1naG9zdCIgKTsNCg0KCQkvLyBERVBSRUNBVEVEDQoJCS8vIFRPRE86IHJlbW92ZSBhZnRlciAxLjEyDQoJCWlmICggJC51aUJhY2tDb21wYXQgIT09IGZhbHNlICYmIHR5cGVvZiB0aGF0Lm9wdGlvbnMuZ2hvc3QgPT09ICJzdHJpbmciICkgew0KDQoJCQkvLyBHaG9zdCBvcHRpb24NCgkJCXRoYXQuZ2hvc3QuYWRkQ2xhc3MoIHRoaXMub3B0aW9ucy5naG9zdCApOw0KCQl9DQoNCgkJdGhhdC5naG9zdC5hcHBlbmRUbyggdGhhdC5oZWxwZXIgKTsNCg0KCX0sDQoNCglyZXNpemU6IGZ1bmN0aW9uKCkgew0KCQl2YXIgdGhhdCA9ICQoIHRoaXMgKS5yZXNpemFibGUoICJpbnN0YW5jZSIgKTsNCgkJaWYgKCB0aGF0Lmdob3N0ICkgew0KCQkJdGhhdC5naG9zdC5jc3MoIHsNCgkJCQlwb3NpdGlvbjogInJlbGF0aXZlIiwNCgkJCQloZWlnaHQ6IHRoYXQuc2l6ZS5oZWlnaHQsDQoJCQkJd2lkdGg6IHRoYXQuc2l6ZS53aWR0aA0KCQkJfSApOw0KCQl9DQoJfSwNCg0KCXN0b3A6IGZ1bmN0aW9uKCkgew0KCQl2YXIgdGhhdCA9ICQoIHRoaXMgKS5yZXNpemFibGUoICJpbnN0YW5jZSIgKTsNCgkJaWYgKCB0aGF0Lmdob3N0ICYmIHRoYXQuaGVscGVyICkgew0KCQkJdGhhdC5oZWxwZXIuZ2V0KCAwICkucmVtb3ZlQ2hpbGQoIHRoYXQuZ2hvc3QuZ2V0KCAwICkgKTsNCgkJfQ0KCX0NCg0KfSApOw0KDQokLnVpLnBsdWdpbi5hZGQoICJyZXNpemFibGUiLCAiZ3JpZCIsIHsNCg0KCXJlc2l6ZTogZnVuY3Rpb24oKSB7DQoJCXZhciBvdXRlckRpbWVuc2lvbnMsDQoJCQl0aGF0ID0gJCggdGhpcyApLnJlc2l6YWJsZSggImluc3RhbmNlIiApLA0KCQkJbyA9IHRoYXQub3B0aW9ucywNCgkJCWNzID0gdGhhdC5zaXplLA0KCQkJb3MgPSB0aGF0Lm9yaWdpbmFsU2l6ZSwNCgkJCW9wID0gdGhhdC5vcmlnaW5hbFBvc2l0aW9uLA0KCQkJYSA9IHRoYXQuYXhpcywNCgkJCWdyaWQgPSB0eXBlb2Ygby5ncmlkID09PSAibnVtYmVyIiA\\\/DQoJCQkJeyBjbGljazogcHJvcHMsIHRleHQ6IG5hbWUgfSA6DQoJCQkJcHJvcHM7DQoNCgkJCS8vIERlZmF1bHQgdG8gYSBub24tc3VibWl0dGluZyBidXR0b24NCgkJCXByb3BzID0gJC5leHRlbmQoIHsgdHlwZTogImJ1dHRvbiIgfSwgcHJvcHMgKTsNCg0KCQkJLy8gQ2hhbmdlIHRoZSBjb250ZXh0IGZvciB0aGUgY2xpY2sgY2FsbGJhY2sgdG8gYmUgdGhlIG1haW4gZWxlbWVudA0KCQkJY2xpY2sgPSBwcm9wcy5jbGljazsNCgkJCWJ1dHRvbk9wdGlvbnMgPSB7DQoJCQkJaWNvbjogcHJvcHMuaWNvbiwNCgkJCQlpY29uUG9zaXRpb246IHByb3BzLmljb25Qb3NpdGlvbiwNCgkJCQlzaG93TGFiZWw6IHByb3BzLnNob3dMYWJlbCwNCg0KCQkJCS8vIERlcHJlY2F0ZWQgb3B0aW9ucw0KCQkJCWljb25zOiBwcm9wcy5pY29ucywNCgkJCQl0ZXh0OiBwcm9wcy50ZXh0DQoJCQl9Ow0KDQoJCQlkZWxldGUgcHJvcHMuY2xpY2s7DQoJCQlkZWxldGUgcHJvcHMuaWNvbjsNCgkJCWRlbGV0ZSBwcm9wcy5pY29uUG9zaXRpb247DQoJCQlkZWxldGUgcHJvcHMuc2hvd0xhYmVsOw0KDQoJCQkvLyBEZXByZWNhdGVkIG9wdGlvbnMNCgkJCWRlbGV0ZSBwcm9wcy5pY29uczsNCgkJCWlmICggdHlwZW9mIHByb3BzLnRleHQgPT09ICJib29sZWFuIiApIHsNCgkJCQlkZWxldGUgcHJvcHMudGV4dDsNCgkJCX0NCg0KCQkJJCggIjxidXR0b24+PC9idXR0b24+IiwgcHJvcHMgKQ0KCQkJCS5idXR0b24oIGJ1dHRvbk9wdGlvbnMgKQ0KCQkJCS5hcHBlbmRUbyggdGhhdC51aUJ1dHRvblNldCApDQoJCQkJLm9uKCAiY2xpY2siLCBmdW5jdGlvbigpIHsNCgkJCQkJY2xpY2suYXBwbHkoIHRoYXQuZWxlbWVudFsgMCBdLCBhcmd1bWVudHMgKTsNCgkJCQl9ICk7DQoJCX0gKTsNCgkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMudWlEaWFsb2csICJ1aS1kaWFsb2ctYnV0dG9ucyIgKTsNCgkJdGhpcy51aURpYWxvZ0J1dHRvblBhbmUuYXBwZW5kVG8oIHRoaXMudWlEaWFsb2cgKTsNCgl9LA0KDQoJX21ha2VEcmFnZ2FibGU6IGZ1bmN0aW9uKCkgew0KCQl2YXIgdGhhdCA9IHRoaXMsDQoJCQlvcHRpb25zID0gdGhpcy5vcHRpb25zOw0KDQoJCWZ1bmN0aW9uIGZpbHRlcmVkVWkoIHVpICkgew0KCQkJcmV0dXJuIHsNCgkJCQlwb3NpdGlvbjogdWkucG9zaXRpb24sDQoJCQkJb2Zmc2V0OiB1aS5vZmZzZXQNCgkJCX07DQoJCX0NCg0KCQl0aGlzLnVpRGlhbG9nLmRyYWdnYWJsZSggew0KCQkJY2FuY2VsOiAiLnVpLWRpYWxvZy1jb250ZW50LCAudWktZGlhbG9nLXRpdGxlYmFyLWNsb3NlIiwNCgkJCWhhbmRsZTogIi51aS1kaWFsb2ctdGl0bGViYXIiLA0KCQkJY29udGFpbm1lbnQ6ICJkb2N1bWVudCIsDQoJCQlzdGFydDogZnVuY3Rpb24oIGV2ZW50LCB1aSApIHsNCgkJCQl0aGF0Ll9hZGRDbGFzcyggJCggdGhpcyApLCAidWktZGlhbG9nLWRyYWdnaW5nIiApOw0KCQkJCXRoYXQuX2Jsb2NrRnJhbWVzKCk7DQoJCQkJdGhhdC5fdHJpZ2dlciggImRyYWdTdGFydCIsIGV2ZW50LCBmaWx0ZXJlZFVpKCB1aSApICk7DQoJCQl9LA0KCQkJZHJhZzogZnVuY3Rpb24oIGV2ZW50LCB1aSApIHsNCgkJCQl0aGF0Ll90cmlnZ2VyKCAiZHJhZyIsIGV2ZW50LCBmaWx0ZXJlZFVpKCB1aSApICk7DQoJCQl9LA0KCQkJc3RvcDogZnVuY3Rpb24oIGV2ZW50LCB1aSApIHsNCgkJCQl2YXIgbGVmdCA9IHVpLm9mZnNldC5sZWZ0IC0gdGhhdC5kb2N1bWVudC5zY3JvbGxMZWZ0KCksDQoJCQkJCXRvcCA9IHVpLm9mZnNldC50b3AgLSB0aGF0LmRvY3VtZW50LnNjcm9sbFRvcCgpOw0KDQoJCQkJb3B0aW9ucy5wb3NpdGlvbiA9IHsNCgkJCQkJbXk6ICJsZWZ0IHRvcCIsDQoJCQkJCWF0OiAibGVmdCIgKyAoIGxlZnQgPj0gMCA\/ICIrIiA6ICIiICkgKyBsZWZ0ICsgIiAiICsNCgkJCQkJCSJ0b3AiICsgKCB0b3AgPj0gMCA\/ICIrIiA6ICIiICkgKyB0b3AsDQoJCQkJCW9mOiB0aGF0LndpbmRvdw0KCQkJCX07DQoJCQkJdGhhdC5fcmVtb3ZlQ2xhc3MoICQoIHRoaXMgKSwgInVpLWRpYWxvZy1kcmFnZ2luZyIgKTsNCgkJCQl0aGF0Ll91bmJsb2NrRnJhbWVzKCk7DQoJCQkJdGhhdC5fdHJpZ2dlciggImRyYWdTdG9wIiwgZXZlbnQsIGZpbHRlcmVkVWkoIHVpICkgKTsNCgkJCX0NCgkJfSApOw0KCX0sDQoNCglfbWFrZVJlc2l6YWJsZTogZnVuY3Rpb24oKSB7DQoJCXZhciB0aGF0ID0gdGhpcywNCgkJCW9wdGlvbnMgPSB0aGlzLm9wdGlvbnMsDQoJCQloYW5kbGVzID0gb3B0aW9ucy5yZXNpemFibGUsDQoNCgkJCS8vIC51aS1yZXNpemFibGUgaGFzIHBvc2l0aW9uOiByZWxhdGl2ZSBkZWZpbmVkIGluIHRoZSBzdHlsZXNoZWV0DQoJCQkvLyBidXQgZGlhbG9ncyBoYXZlIHRvIHVzZSBhYnNvbHV0ZSBvciBmaXhlZCBwb3NpdGlvbmluZw0KCQkJcG9zaXRpb24gPSB0aGlzLnVpRGlhbG9nLmNzcyggInBvc2l0aW9uIiApLA0KCQkJcmVzaXplSGFuZGxlcyA9IHR5cGVvZiBoYW5kbGVzID09PSAic3RyaW5nIiA\/DQoJCQkJaGFuZGxlcyA6DQoJCQkJIm4sZSxzLHcsc2Usc3csbmUsbnciOw0KDQoJCWZ1bmN0aW9uIGZpbHRlcmVkVWkoIHVpICkgew0KCQkJcmV0dXJuIHsNCgkJCQlvcmlnaW5hbFBvc2l0aW9uOiB1aS5vcmlnaW5hbFBvc2l0aW9uLA0KCQkJCW9yaWdpbmFsU2l6ZTogdWkub3JpZ2luYWxTaXplLA0KCQkJCXBvc2l0aW9uOiB1aS5wb3NpdGlvbiwNCgkJCQlzaXplOiB1aS5zaXplDQoJCQl9Ow0KCQl9DQoNCgkJdGhpcy51aURpYWxvZy5yZXNpemFibGUoIHsNCgkJCWNhbmNlbDogIi51aS1kaWFsb2ctY29udGVudCIsDQoJCQljb250YWlubWVudDogImRvY3VtZW50IiwNCgkJCWFsc29SZXNpemU6IHRoaXMuZWxlbWVudCwNCgkJCW1heFdpZHRoOiBvcHRpb25zLm1heFdpZHRoLA0KCQkJbWF4SGVpZ2h0OiBvcHRpb25zLm1heEhlaWdodCwNCgkJCW1pbldpZHRoOiBvcHRpb25zLm1pbldpZHRoLA0KCQkJbWluSGVpZ2h0OiB0aGlzLl9taW5IZWlnaHQoKSwNCgkJCWhhbmRsZXM6IHJlc2l6ZUhhbmRsZXMsDQoJCQlzdGFydDogZnVuY3Rpb24oIGV2ZW50LCB1aSApIHsNCgkJCQl0aGF0Ll9hZGRDbGFzcyggJCggdGhpcyApLCAidWktZGlhbG9nLXJlc2l6aW5nIiApOw0KCQkJCXRoYXQuX2Jsb2NrRnJhbWVzKCk7DQoJCQkJdGhhdC5fdHJpZ2dlciggInJlc2l6ZVN0YXJ0IiwgZXZlbnQsIGZpbHRlcmVkVWkoIHVpICkgKTsNCgkJCX0sDQoJCQlyZXNpemU6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7DQoJCQkJdGhhdC5fdHJpZ2dlciggInJlc2l6ZSIsIGV2ZW50LCBmaWx0ZXJlZFVpKCB1aSApICk7DQoJCQl9LA0KCQkJc3RvcDogZnVuY3Rpb24oIGV2ZW50LCB1aSApIHsNCgkJCQl2YXIgb2Zmc2V0ID0gdGhhdC51aURpYWxvZy5vZmZzZXQoKSwNCgkJCQkJbGVmdCA9IG9mZnNldC5sZWZ0IC0gdGhhdC5kb2N1bWVudC5zY3JvbGxMZWZ0KCksDQoJCQkJCXRvcCA9IG9mZnNldC50b3AgLSB0aGF0LmRvY3VtZW50LnNjcm9sbFRvcCgpOw0KDQoJCQkJb3B0aW9ucy5oZWlnaHQgPSB0aGF0LnVpRGlhbG9nLmhlaWdodCgpOw0KCQkJCW9wdGlvbnMud2lkdGggPSB0aGF0LnVpRGlhbG9nLndpZHRoKCk7DQoJCQkJb3B0aW9ucy5wb3NpdGlvbiA9IHsNCgkJCQkJbXk6ICJsZWZ0IHRvcCIsDQoJCQkJCWF0OiAibGVmdCIgKyAoIGxlZnQgPj0gMCA\/ICIrIiA6ICIiICkgKyBsZWZ0ICsgIiAiICsNCgkJCQkJCSJ0b3AiICsgKCB0b3AgPj0gMCA\\\\\/IHsgbGVmdDogMCwgdG9wOiAwIH0gOiB7DQoJCQlsZWZ0OiBldmVudC5wYWdlWCAtIG9mZnNldC5sZWZ0IC0gKCBjbG9zZXN0SGFuZGxlLndpZHRoKCkgLyAyICksDQoJCQl0b3A6IGV2ZW50LnBhZ2VZIC0gb2Zmc2V0LnRvcCAtDQoJCQkJKCBjbG9zZXN0SGFuZGxlLmhlaWdodCgpIC8gMiApIC0NCgkJCQkoIHBhcnNlSW50KCBjbG9zZXN0SGFuZGxlLmNzcyggImJvcmRlclRvcFdpZHRoIiApLCAxMCApIHx8IDAgKSAtDQoJCQkJKCBwYXJzZUludCggY2xvc2VzdEhhbmRsZS5jc3MoICJib3JkZXJCb3R0b21XaWR0aCIgKSwgMTAgKSB8fCAwICkgKw0KCQkJCSggcGFyc2VJbnQoIGNsb3Nlc3RIYW5kbGUuY3NzKCAibWFyZ2luVG9wIiApLCAxMCApIHx8IDAgKQ0KCQl9Ow0KDQoJCWlmICggIXRoaXMuaGFuZGxlcy5oYXNDbGFzcyggInVpLXN0YXRlLWhvdmVyIiApICkgew0KCQkJdGhpcy5fc2xpZGUoIGV2ZW50LCBpbmRleCwgbm9ybVZhbHVlICk7DQoJCX0NCgkJdGhpcy5fYW5pbWF0ZU9mZiA9IHRydWU7DQoJCXJldHVybiB0cnVlOw0KCX0sDQoNCglfbW91c2VTdGFydDogZnVuY3Rpb24oKSB7DQoJCXJldHVybiB0cnVlOw0KCX0sDQoNCglfbW91c2VEcmFnOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCXZhciBwb3NpdGlvbiA9IHsgeDogZXZlbnQucGFnZVgsIHk6IGV2ZW50LnBhZ2VZIH0sDQoJCQlub3JtVmFsdWUgPSB0aGlzLl9ub3JtVmFsdWVGcm9tTW91c2UoIHBvc2l0aW9uICk7DQoNCgkJdGhpcy5fc2xpZGUoIGV2ZW50LCB0aGlzLl9oYW5kbGVJbmRleCwgbm9ybVZhbHVlICk7DQoNCgkJcmV0dXJuIGZhbHNlOw0KCX0sDQoNCglfbW91c2VTdG9wOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCXRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLmhhbmRsZXMsIG51bGwsICJ1aS1zdGF0ZS1hY3RpdmUiICk7DQoJCXRoaXMuX21vdXNlU2xpZGluZyA9IGZhbHNlOw0KDQoJCXRoaXMuX3N0b3AoIGV2ZW50LCB0aGlzLl9oYW5kbGVJbmRleCApOw0KCQl0aGlzLl9jaGFuZ2UoIGV2ZW50LCB0aGlzLl9oYW5kbGVJbmRleCApOw0KDQoJCXRoaXMuX2hhbmRsZUluZGV4ID0gbnVsbDsNCgkJdGhpcy5fY2xpY2tPZmZzZXQgPSBudWxsOw0KCQl0aGlzLl9hbmltYXRlT2ZmID0gZmFsc2U7DQoNCgkJcmV0dXJuIGZhbHNlOw0KCX0sDQoNCglfZGV0ZWN0T3JpZW50YXRpb246IGZ1bmN0aW9uKCkgew0KCQl0aGlzLm9yaWVudGF0aW9uID0gKCB0aGlzLm9wdGlvbnMub3JpZW50YXRpb24gPT09ICJ2ZXJ0aWNhbCIgKSA\\/IDAgOiBzdHIubGVuZ3RoIC0gZGVjaW1hbCAtIDE7DQoJfSwNCg0KCV92YWx1ZU1pbjogZnVuY3Rpb24oKSB7DQoJCXJldHVybiB0aGlzLm9wdGlvbnMubWluOw0KCX0sDQoNCglfdmFsdWVNYXg6IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gdGhpcy5tYXg7DQoJfSwNCg0KCV9yZWZyZXNoUmFuZ2U6IGZ1bmN0aW9uKCBvcmllbnRhdGlvbiApIHsNCgkJaWYgKCBvcmllbnRhdGlvbiA9PT0gInZlcnRpY2FsIiApIHsNCgkJCXRoaXMucmFuZ2UuY3NzKCB7ICJ3aWR0aCI6ICIiLCAibGVmdCI6ICIiIH0gKTsNCgkJfQ0KCQlpZiAoIG9yaWVudGF0aW9uID09PSAiaG9yaXpvbnRhbCIgKSB7DQoJCQl0aGlzLnJhbmdlLmNzcyggeyAiaGVpZ2h0IjogIiIsICJib3R0b20iOiAiIiB9ICk7DQoJCX0NCgl9LA0KDQoJX3JlZnJlc2hWYWx1ZTogZnVuY3Rpb24oKSB7DQoJCXZhciBsYXN0VmFsUGVyY2VudCwgdmFsUGVyY2VudCwgdmFsdWUsIHZhbHVlTWluLCB2YWx1ZU1heCwNCgkJCW9SYW5nZSA9IHRoaXMub3B0aW9ucy5yYW5nZSwNCgkJCW8gPSB0aGlzLm9wdGlvbnMsDQoJCQl0aGF0ID0gdGhpcywNCgkJCWFuaW1hdGUgPSAoICF0aGlzLl9hbmltYXRlT2ZmICkgPyBvLmFuaW1hdGUgOiBmYWxzZSwNCgkJCV9zZXQgPSB7fTsNCg0KCQlpZiAoIHRoaXMuX2hhc011bHRpcGxlVmFsdWVzKCkgKSB7DQoJCQl0aGlzLmhhbmRsZXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7DQoJCQkJdmFsUGVyY2VudCA9ICggdGhhdC52YWx1ZXMoIGkgKSAtIHRoYXQuX3ZhbHVlTWluKCkgKSAvICggdGhhdC5fdmFsdWVNYXgoKSAtDQoJCQkJCXRoYXQuX3ZhbHVlTWluKCkgKSAqIDEwMDsNCgkJCQlfc2V0WyB0aGF0Lm9yaWVudGF0aW9uID09PSAiaG9yaXpvbnRhbCIgPyAibGVmdCIgOiAiYm90dG9tIiBdID0gdmFsUGVyY2VudCArICIlIjsNCgkJCQkkKCB0aGlzICkuc3RvcCggMSwgMSApWyBhbmltYXRlID8gImFuaW1hdGUiIDogImNzcyIgXSggX3NldCwgby5hbmltYXRlICk7DQoJCQkJaWYgKCB0aGF0Lm9wdGlvbnMucmFuZ2UgPT09IHRydWUgKSB7DQoJCQkJCWlmICggdGhhdC5vcmllbnRhdGlvbiA9PT0gImhvcml6b250YWwiICkgew0KCQkJCQkJaWYgKCBpID09PSAwICkgew0KCQkJCQkJCXRoYXQucmFuZ2Uuc3RvcCggMSwgMSApWyBhbmltYXRlID8gImFuaW1hdGUiIDogImNzcyIgXSggew0KCQkJCQkJCQlsZWZ0OiB2YWxQZXJjZW50ICsgIiUiDQoJCQkJCQkJfSwgby5hbmltYXRlICk7DQoJCQkJCQl9DQoJCQkJCQlpZiAoIGkgPT09IDEgKSB7DQoJCQkJCQkJdGhhdC5yYW5nZVsgYW5pbWF0ZSA\/ICJhbmltYXRlIiA6ICJjc3MiIF0oIHsNCgkJCQkJCQkJd2lkdGg6ICggdmFsUGVyY2VudCAtIGxhc3RWYWxQZXJjZW50ICkgKyAiJSINCgkJCQkJCQl9LCB7DQoJCQkJCQkJCXF1ZXVlOiBmYWxzZSwNCgkJCQkJCQkJZHVyYXRpb246IG8uYW5pbWF0ZQ0KCQkJCQkJCX0gKTsNCgkJCQkJCX0NCgkJCQkJfSBlbHNlIHsNCgkJCQkJCWlmICggaSA9PT0gMCApIHsNCgkJCQkJCQl0aGF0LnJhbmdlLnN0b3AoIDEsIDEgKVsgYW5pbWF0ZSA\/ICJhbmltYXRlIiA6ICJjc3MiIF0oIHsNCgkJCQkJCQkJYm90dG9tOiAoIHZhbFBlcmNlbnQgKSArICIlIg0KCQkJCQkJCX0sIG8uYW5pbWF0ZSApOw0KCQkJCQkJfQ0KCQkJCQkJaWYgKCBpID09PSAxICkgew0KCQkJCQkJCXRoYXQucmFuZ2VbIGFuaW1hdGUgPyAiYW5pbWF0ZSIgOiAiY3NzIiBdKCB7DQoJCQkJCQkJCWhlaWdodDogKCB2YWxQZXJjZW50IC0gbGFzdFZhbFBlcmNlbnQgKSArICIlIg0KCQkJCQkJCX0sIHsNCgkJCQkJCQkJcXVldWU6IGZhbHNlLA0KCQkJCQkJCQlkdXJhdGlvbjogby5hbmltYXRlDQoJCQkJCQkJfSApOw0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJfQ0KCQkJCWxhc3RWYWxQZXJjZW50ID0gdmFsUGVyY2VudDsNCgkJCX0gKTsNCgkJfSBlbHNlIHsNCgkJCXZhbHVlID0gdGhpcy52YWx1ZSgpOw0KCQkJdmFsdWVNaW4gPSB0aGlzLl92YWx1ZU1pbigpOw0KCQkJdmFsdWVNYXggPSB0aGlzLl92YWx1ZU1heCgpOw0KCQkJdmFsUGVyY2VudCA9ICggdmFsdWVNYXggIT09IHZhbHVlTWluICkgPw0KCQkJCQkoIHZhbHVlIC0gdmFsdWVNaW4gKSAvICggdmFsdWVNYXggLSB2YWx1ZU1pbiApICogMTAwIDoNCgkJCQkJMDsNCgkJCV9zZXRbIHRoaXMub3JpZW50YXRpb24gPT09ICJob3Jpem9udGFsIiA\\/ICJ3aWR0aCIgOiAiaGVpZ2h0IiBdID4NCgkJCQlpdGVtWyB0aGlzLmZsb2F0aW5nID8gIndpZHRoIiA6ICJoZWlnaHQiIF0gKQ0KCQkpIHsNCgkJCXJldHVybiBpc092ZXJFbGVtZW50Ow0KCQl9IGVsc2Ugew0KDQoJCQlyZXR1cm4gKCBsIDwgeDEgKyAoIHRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGggLyAyICkgJiYgLy8gUmlnaHQgSGFsZg0KCQkJCXgyIC0gKCB0aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoIC8gMiApIDwgciAmJiAvLyBMZWZ0IEhhbGYNCgkJCQl0IDwgeTEgKyAoIHRoaXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0IC8gMiApICYmIC8vIEJvdHRvbSBIYWxmDQoJCQkJeTIgLSAoIHRoaXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0IC8gMiApIDwgYiApOyAvLyBUb3AgSGFsZg0KDQoJCX0NCgl9LA0KDQoJX2ludGVyc2VjdHNXaXRoUG9pbnRlcjogZnVuY3Rpb24oIGl0ZW0gKSB7DQoJCXZhciB2ZXJ0aWNhbERpcmVjdGlvbiwgaG9yaXpvbnRhbERpcmVjdGlvbiwNCgkJCWlzT3ZlckVsZW1lbnRIZWlnaHQgPSAoIHRoaXMub3B0aW9ucy5heGlzID09PSAieCIgKSB8fA0KCQkJCXRoaXMuX2lzT3ZlckF4aXMoDQoJCQkJCXRoaXMucG9zaXRpb25BYnMudG9wICsgdGhpcy5vZmZzZXQuY2xpY2sudG9wLCBpdGVtLnRvcCwgaXRlbS5oZWlnaHQgKSwNCgkJCWlzT3ZlckVsZW1lbnRXaWR0aCA9ICggdGhpcy5vcHRpb25zLmF4aXMgPT09ICJ5IiApIHx8DQoJCQkJdGhpcy5faXNPdmVyQXhpcygNCgkJCQkJdGhpcy5wb3NpdGlvbkFicy5sZWZ0ICsgdGhpcy5vZmZzZXQuY2xpY2subGVmdCwgaXRlbS5sZWZ0LCBpdGVtLndpZHRoICksDQoJCQlpc092ZXJFbGVtZW50ID0gaXNPdmVyRWxlbWVudEhlaWdodCAmJiBpc092ZXJFbGVtZW50V2lkdGg7DQoNCgkJaWYgKCAhaXNPdmVyRWxlbWVudCApIHsNCgkJCXJldHVybiBmYWxzZTsNCgkJfQ0KDQoJCXZlcnRpY2FsRGlyZWN0aW9uID0gdGhpcy5fZ2V0RHJhZ1ZlcnRpY2FsRGlyZWN0aW9uKCk7DQoJCWhvcml6b250YWxEaXJlY3Rpb24gPSB0aGlzLl9nZXREcmFnSG9yaXpvbnRhbERpcmVjdGlvbigpOw0KDQoJCXJldHVybiB0aGlzLmZsb2F0aW5nID8NCgkJCSggKCBob3Jpem9udGFsRGlyZWN0aW9uID09PSAicmlnaHQiIHx8IHZlcnRpY2FsRGlyZWN0aW9uID09PSAiZG93biIgKSA\/IDIgOiAxICkNCgkJCTogKCB2ZXJ0aWNhbERpcmVjdGlvbiAmJiAoIHZlcnRpY2FsRGlyZWN0aW9uID09PSAiZG93biIgPyAyIDogMSApICk7DQoNCgl9LA0KDQoJX2ludGVyc2VjdHNXaXRoU2lkZXM6IGZ1bmN0aW9uKCBpdGVtICkgew0KDQoJCXZhciBpc092ZXJCb3R0b21IYWxmID0gdGhpcy5faXNPdmVyQXhpcyggdGhpcy5wb3NpdGlvbkFicy50b3AgKw0KCQkJCXRoaXMub2Zmc2V0LmNsaWNrLnRvcCwgaXRlbS50b3AgKyAoIGl0ZW0uaGVpZ2h0IC8gMiApLCBpdGVtLmhlaWdodCApLA0KCQkJaXNPdmVyUmlnaHRIYWxmID0gdGhpcy5faXNPdmVyQXhpcyggdGhpcy5wb3NpdGlvbkFicy5sZWZ0ICsNCgkJCQl0aGlzLm9mZnNldC5jbGljay5sZWZ0LCBpdGVtLmxlZnQgKyAoIGl0ZW0ud2lkdGggLyAyICksIGl0ZW0ud2lkdGggKSwNCgkJCXZlcnRpY2FsRGlyZWN0aW9uID0gdGhpcy5fZ2V0RHJhZ1ZlcnRpY2FsRGlyZWN0aW9uKCksDQoJCQlob3Jpem9udGFsRGlyZWN0aW9uID0gdGhpcy5fZ2V0RHJhZ0hvcml6b250YWxEaXJlY3Rpb24oKTsNCg0KCQlpZiAoIHRoaXMuZmxvYXRpbmcgJiYgaG9yaXpvbnRhbERpcmVjdGlvbiApIHsNCgkJCXJldHVybiAoICggaG9yaXpvbnRhbERpcmVjdGlvbiA9PT0gInJpZ2h0IiAmJiBpc092ZXJSaWdodEhhbGYgKSB8fA0KCQkJCSggaG9yaXpvbnRhbERpcmVjdGlvbiA9PT0gImxlZnQiICYmICFpc092ZXJSaWdodEhhbGYgKSApOw0KCQl9IGVsc2Ugew0KCQkJcmV0dXJuIHZlcnRpY2FsRGlyZWN0aW9uICYmICggKCB2ZXJ0aWNhbERpcmVjdGlvbiA9PT0gImRvd24iICYmIGlzT3ZlckJvdHRvbUhhbGYgKSB8fA0KCQkJCSggdmVydGljYWxEaXJlY3Rpb24gPT09ICJ1cCIgJiYgIWlzT3ZlckJvdHRvbUhhbGYgKSApOw0KCQl9DQoNCgl9LA0KDQoJX2dldERyYWdWZXJ0aWNhbERpcmVjdGlvbjogZnVuY3Rpb24oKSB7DQoJCXZhciBkZWx0YSA9IHRoaXMucG9zaXRpb25BYnMudG9wIC0gdGhpcy5sYXN0UG9zaXRpb25BYnMudG9wOw0KCQlyZXR1cm4gZGVsdGEgIT09IDAgJiYgKCBkZWx0YSA+IDAgPyAiZG93biIgOiAidXAiICk7DQoJfSwNCg0KCV9nZXREcmFnSG9yaXpvbnRhbERpcmVjdGlvbjogZnVuY3Rpb24oKSB7DQoJCXZhciBkZWx0YSA9IHRoaXMucG9zaXRpb25BYnMubGVmdCAtIHRoaXMubGFzdFBvc2l0aW9uQWJzLmxlZnQ7DQoJCXJldHVybiBkZWx0YSAhPT0gMCAmJiAoIGRlbHRhID4gMCA\/ICJyaWdodCIgOiAibGVmdCIgKTsNCgl9LA0KDQoJcmVmcmVzaDogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQl0aGlzLl9yZWZyZXNoSXRlbXMoIGV2ZW50ICk7DQoJCXRoaXMuX3NldEhhbmRsZUNsYXNzTmFtZSgpOw0KCQl0aGlzLnJlZnJlc2hQb3NpdGlvbnMoKTsNCgkJcmV0dXJuIHRoaXM7DQoJfSwNCg0KCV9jb25uZWN0V2l0aDogZnVuY3Rpb24oKSB7DQoJCXZhciBvcHRpb25zID0gdGhpcy5vcHRpb25zOw0KCQlyZXR1cm4gb3B0aW9ucy5jb25uZWN0V2l0aC5jb25zdHJ1Y3RvciA9PT0gU3RyaW5nID8NCgkJCVsgb3B0aW9ucy5jb25uZWN0V2l0aCBdIDoNCgkJCW9wdGlvbnMuY29ubmVjdFdpdGg7DQoJfSwNCg0KCV9nZXRJdGVtc0FzalF1ZXJ5OiBmdW5jdGlvbiggY29ubmVjdGVkICkgew0KDQoJCXZhciBpLCBqLCBjdXIsIGluc3QsDQoJCQlpdGVtcyA9IFtdLA0KCQkJcXVlcmllcyA9IFtdLA0KCQkJY29ubmVjdFdpdGggPSB0aGlzLl9jb25uZWN0V2l0aCgpOw0KDQoJCWlmICggY29ubmVjdFdpdGggJiYgY29ubmVjdGVkICkgew0KCQkJZm9yICggaSA9IGNvbm5lY3RXaXRoLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tICkgew0KCQkJCWN1ciA9ICQoIGNvbm5lY3RXaXRoWyBpIF0sIHRoaXMuZG9jdW1lbnRbIDAgXSApOw0KCQkJCWZvciAoIGogPSBjdXIubGVuZ3RoIC0gMTsgaiA+PSAwOyBqLS0gKSB7DQoJCQkJCWluc3QgPSAkLmRhdGEoIGN1clsgaiBdLCB0aGlzLndpZGdldEZ1bGxOYW1lICk7DQoJCQkJCWlmICggaW5zdCAmJiBpbnN0ICE9PSB0aGlzICYmICFpbnN0Lm9wdGlvbnMuZGlzYWJsZWQgKSB7DQoJCQkJCQlxdWVyaWVzLnB1c2goIFsgJC5pc0Z1bmN0aW9uKCBpbnN0Lm9wdGlvbnMuaXRlbXMgKSA\/DQoJCQkJCQkJaW5zdC5vcHRpb25zLml0ZW1zLmNhbGwoIGluc3QuZWxlbWVudCApIDoNCgkJCQkJCQkkKCBpbnN0Lm9wdGlvbnMuaXRlbXMsIGluc3QuZWxlbWVudCApDQoJCQkJCQkJCS5ub3QoICIudWktc29ydGFibGUtaGVscGVyIiApDQoJCQkJCQkJCS5ub3QoICIudWktc29ydGFibGUtcGxhY2Vob2xkZXIiICksIGluc3QgXSApOw0KCQkJCQl9DQoJCQkJfQ0KCQkJfQ0KCQl9DQoNCgkJcXVlcmllcy5wdXNoKCBbICQuaXNGdW5jdGlvbiggdGhpcy5vcHRpb25zLml0ZW1zICkgPw0KCQkJdGhpcy5vcHRpb25zLml0ZW1zDQoJCQkJLmNhbGwoIHRoaXMuZWxlbWVudCwgbnVsbCwgeyBvcHRpb25zOiB0aGlzLm9wdGlvbnMsIGl0ZW06IHRoaXMuY3VycmVudEl0ZW0gfSApIDoNCgkJCSQoIHRoaXMub3B0aW9ucy5pdGVtcywgdGhpcy5lbGVtZW50ICkNCgkJCQkubm90KCAiLnVpLXNvcnRhYmxlLWhlbHBlciIgKQ0KCQkJCS5ub3QoICIudWktc29ydGFibGUtcGxhY2Vob2xkZXIiICksIHRoaXMgXSApOw0KDQoJCWZ1bmN0aW9uIGFkZEl0ZW1zKCkgew0KCQkJaXRlbXMucHVzaCggdGhpcyApOw0KCQl9DQoJCWZvciAoIGkgPSBxdWVyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tICkgew0KCQkJcXVlcmllc1sgaSBdWyAwIF0uZWFjaCggYWRkSXRlbXMgKTsNCgkJfQ0KDQoJCXJldHVybiAkKCBpdGVtcyApOw0KDQoJfSwNCg0KCV9yZW1vdmVDdXJyZW50c0Zyb21JdGVtczogZnVuY3Rpb24oKSB7DQoNCgkJdmFyIGxpc3QgPSB0aGlzLmN1cnJlbnRJdGVtLmZpbmQoICI6ZGF0YSgiICsgdGhpcy53aWRnZXROYW1lICsgIi1pdGVtKSIgKTsNCg0KCQl0aGlzLml0ZW1zID0gJC5ncmVwKCB0aGlzLml0ZW1zLCBmdW5jdGlvbiggaXRlbSApIHsNCgkJCWZvciAoIHZhciBqID0gMDsgaiA8IGxpc3QubGVuZ3RoOyBqKysgKSB7DQoJCQkJaWYgKCBsaXN0WyBqIF0gPT09IGl0ZW0uaXRlbVsgMCBdICkgew0KCQkJCQlyZXR1cm4gZmFsc2U7DQoJCQkJfQ0KCQkJfQ0KCQkJcmV0dXJuIHRydWU7DQoJCX0gKTsNCg0KCX0sDQoNCglfcmVmcmVzaEl0ZW1zOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoNCgkJdGhpcy5pdGVtcyA9IFtdOw0KCQl0aGlzLmNvbnRhaW5lcnMgPSBbIHRoaXMgXTsNCg0KCQl2YXIgaSwgaiwgY3VyLCBpbnN0LCB0YXJnZXREYXRhLCBfcXVlcmllcywgaXRlbSwgcXVlcmllc0xlbmd0aCwNCgkJCWl0ZW1zID0gdGhpcy5pdGVtcywNCgkJCXF1ZXJpZXMgPSBbIFsgJC5pc0Z1bmN0aW9uKCB0aGlzLm9wdGlvbnMuaXRlbXMgKSA\\/ICJsZWZ0IiA6ICJ0b3AiOw0KCQkJc2l6ZVByb3BlcnR5ID0gZmxvYXRpbmcgPyAid2lkdGgiIDogImhlaWdodCI7DQoJCQlheGlzID0gZmxvYXRpbmcgPyAicGFnZVgiIDogInBhZ2VZIjsNCg0KCQkJZm9yICggaiA9IHRoaXMuaXRlbXMubGVuZ3RoIC0gMTsgaiA+PSAwOyBqLS0gKSB7DQoJCQkJaWYgKCAhJC5jb250YWlucygNCgkJCQkJCXRoaXMuY29udGFpbmVyc1sgaW5uZXJtb3N0SW5kZXggXS5lbGVtZW50WyAwIF0sIHRoaXMuaXRlbXNbIGogXS5pdGVtWyAwIF0gKQ0KCQkJCSkgew0KCQkJCQljb250aW51ZTsNCgkJCQl9DQoJCQkJaWYgKCB0aGlzLml0ZW1zWyBqIF0uaXRlbVsgMCBdID09PSB0aGlzLmN1cnJlbnRJdGVtWyAwIF0gKSB7DQoJCQkJCWNvbnRpbnVlOw0KCQkJCX0NCg0KCQkJCWN1ciA9IHRoaXMuaXRlbXNbIGogXS5pdGVtLm9mZnNldCgpWyBwb3NQcm9wZXJ0eSBdOw0KCQkJCW5lYXJCb3R0b20gPSBmYWxzZTsNCgkJCQlpZiAoIGV2ZW50WyBheGlzIF0gLSBjdXIgPiB0aGlzLml0ZW1zWyBqIF1bIHNpemVQcm9wZXJ0eSBdIC8gMiApIHsNCgkJCQkJbmVhckJvdHRvbSA9IHRydWU7DQoJCQkJfQ0KDQoJCQkJaWYgKCBNYXRoLmFicyggZXZlbnRbIGF4aXMgXSAtIGN1ciApIDwgZGlzdCApIHsNCgkJCQkJZGlzdCA9IE1hdGguYWJzKCBldmVudFsgYXhpcyBdIC0gY3VyICk7DQoJCQkJCWl0ZW1XaXRoTGVhc3REaXN0YW5jZSA9IHRoaXMuaXRlbXNbIGogXTsNCgkJCQkJdGhpcy5kaXJlY3Rpb24gPSBuZWFyQm90dG9tID8gInVwIiA6ICJkb3duIjsNCgkJCQl9DQoJCQl9DQoNCgkJCS8vQ2hlY2sgaWYgZHJvcE9uRW1wdHkgaXMgZW5hYmxlZA0KCQkJaWYgKCAhaXRlbVdpdGhMZWFzdERpc3RhbmNlICYmICF0aGlzLm9wdGlvbnMuZHJvcE9uRW1wdHkgKSB7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KDQoJCQlpZiAoIHRoaXMuY3VycmVudENvbnRhaW5lciA9PT0gdGhpcy5jb250YWluZXJzWyBpbm5lcm1vc3RJbmRleCBdICkgew0KCQkJCWlmICggIXRoaXMuY3VycmVudENvbnRhaW5lci5jb250YWluZXJDYWNoZS5vdmVyICkgew0KCQkJCQl0aGlzLmNvbnRhaW5lcnNbIGlubmVybW9zdEluZGV4IF0uX3RyaWdnZXIoICJvdmVyIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCgpICk7DQoJCQkJCXRoaXMuY3VycmVudENvbnRhaW5lci5jb250YWluZXJDYWNoZS5vdmVyID0gMTsNCgkJCQl9DQoJCQkJcmV0dXJuOw0KCQkJfQ0KDQoJCQlpdGVtV2l0aExlYXN0RGlzdGFuY2UgPw0KCQkJCXRoaXMuX3JlYXJyYW5nZSggZXZlbnQsIGl0ZW1XaXRoTGVhc3REaXN0YW5jZSwgbnVsbCwgdHJ1ZSApIDoNCgkJCQl0aGlzLl9yZWFycmFuZ2UoIGV2ZW50LCBudWxsLCB0aGlzLmNvbnRhaW5lcnNbIGlubmVybW9zdEluZGV4IF0uZWxlbWVudCwgdHJ1ZSApOw0KCQkJdGhpcy5fdHJpZ2dlciggImNoYW5nZSIsIGV2ZW50LCB0aGlzLl91aUhhc2goKSApOw0KCQkJdGhpcy5jb250YWluZXJzWyBpbm5lcm1vc3RJbmRleCBdLl90cmlnZ2VyKCAiY2hhbmdlIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCggdGhpcyApICk7DQoJCQl0aGlzLmN1cnJlbnRDb250YWluZXIgPSB0aGlzLmNvbnRhaW5lcnNbIGlubmVybW9zdEluZGV4IF07DQoNCgkJCS8vVXBkYXRlIHRoZSBwbGFjZWhvbGRlcg0KCQkJdGhpcy5vcHRpb25zLnBsYWNlaG9sZGVyLnVwZGF0ZSggdGhpcy5jdXJyZW50Q29udGFpbmVyLCB0aGlzLnBsYWNlaG9sZGVyICk7DQoNCgkJCXRoaXMuY29udGFpbmVyc1sgaW5uZXJtb3N0SW5kZXggXS5fdHJpZ2dlciggIm92ZXIiLCBldmVudCwgdGhpcy5fdWlIYXNoKCB0aGlzICkgKTsNCgkJCXRoaXMuY29udGFpbmVyc1sgaW5uZXJtb3N0SW5kZXggXS5jb250YWluZXJDYWNoZS5vdmVyID0gMTsNCgkJfQ0KDQoJfSwNCg0KCV9jcmVhdGVIZWxwZXI6IGZ1bmN0aW9uKCBldmVudCApIHsNCg0KCQl2YXIgbyA9IHRoaXMub3B0aW9ucywNCgkJCWhlbHBlciA9ICQuaXNGdW5jdGlvbiggby5oZWxwZXIgKSA\/DQoJCQkJJCggby5oZWxwZXIuYXBwbHkoIHRoaXMuZWxlbWVudFsgMCBdLCBbIGV2ZW50LCB0aGlzLmN1cnJlbnRJdGVtIF0gKSApIDoNCgkJCQkoIG8uaGVscGVyID09PSAiY2xvbmUiID8gdGhpcy5jdXJyZW50SXRlbS5jbG9uZSgpIDogdGhpcy5jdXJyZW50SXRlbSApOw0KDQoJCS8vQWRkIHRoZSBoZWxwZXIgdG8gdGhlIERPTSBpZiB0aGF0IGRpZG4ndCBoYXBwZW4gYWxyZWFkeQ0KCQlpZiAoICFoZWxwZXIucGFyZW50cyggImJvZHkiICkubGVuZ3RoICkgew0KCQkJJCggby5hcHBlbmRUbyAhPT0gInBhcmVudCIgPw0KCQkJCW8uYXBwZW5kVG8gOg0KCQkJCXRoaXMuY3VycmVudEl0ZW1bIDAgXS5wYXJlbnROb2RlIClbIDAgXS5hcHBlbmRDaGlsZCggaGVscGVyWyAwIF0gKTsNCgkJfQ0KDQoJCWlmICggaGVscGVyWyAwIF0gPT09IHRoaXMuY3VycmVudEl0ZW1bIDAgXSApIHsNCgkJCXRoaXMuX3N0b3JlZENTUyA9IHsNCgkJCQl3aWR0aDogdGhpcy5jdXJyZW50SXRlbVsgMCBdLnN0eWxlLndpZHRoLA0KCQkJCWhlaWdodDogdGhpcy5jdXJyZW50SXRlbVsgMCBdLnN0eWxlLmhlaWdodCwNCgkJCQlwb3NpdGlvbjogdGhpcy5jdXJyZW50SXRlbS5jc3MoICJwb3NpdGlvbiIgKSwNCgkJCQl0b3A6IHRoaXMuY3VycmVudEl0ZW0uY3NzKCAidG9wIiApLA0KCQkJCWxlZnQ6IHRoaXMuY3VycmVudEl0ZW0uY3NzKCAibGVmdCIgKQ0KCQkJfTsNCgkJfQ0KDQoJCWlmICggIWhlbHBlclsgMCBdLnN0eWxlLndpZHRoIHx8IG8uZm9yY2VIZWxwZXJTaXplICkgew0KCQkJaGVscGVyLndpZHRoKCB0aGlzLmN1cnJlbnRJdGVtLndpZHRoKCkgKTsNCgkJfQ0KCQlpZiAoICFoZWxwZXJbIDAgXS5zdHlsZS5oZWlnaHQgfHwgby5mb3JjZUhlbHBlclNpemUgKSB7DQoJCQloZWxwZXIuaGVpZ2h0KCB0aGlzLmN1cnJlbnRJdGVtLmhlaWdodCgpICk7DQoJCX0NCg0KCQlyZXR1cm4gaGVscGVyOw0KDQoJfSwNCg0KCV9hZGp1c3RPZmZzZXRGcm9tSGVscGVyOiBmdW5jdGlvbiggb2JqICkgew0KCQlpZiAoIHR5cGVvZiBvYmogPT09ICJzdHJpbmciICkgew0KCQkJb2JqID0gb2JqLnNwbGl0KCAiICIgKTsNCgkJfQ0KCQlpZiAoICQuaXNBcnJheSggb2JqICkgKSB7DQoJCQlvYmogPSB7IGxlZnQ6ICtvYmpbIDAgXSwgdG9wOiArb2JqWyAxIF0gfHwgMCB9Ow0KCQl9DQoJCWlmICggImxlZnQiIGluIG9iaiApIHsNCgkJCXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgPSBvYmoubGVmdCArIHRoaXMubWFyZ2lucy5sZWZ0Ow0KCQl9DQoJCWlmICggInJpZ2h0IiBpbiBvYmogKSB7DQoJCQl0aGlzLm9mZnNldC5jbGljay5sZWZ0ID0gdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aCAtIG9iai5yaWdodCArIHRoaXMubWFyZ2lucy5sZWZ0Ow0KCQl9DQoJCWlmICggInRvcCIgaW4gb2JqICkgew0KCQkJdGhpcy5vZmZzZXQuY2xpY2sudG9wID0gb2JqLnRvcCArIHRoaXMubWFyZ2lucy50b3A7DQoJCX0NCgkJaWYgKCAiYm90dG9tIiBpbiBvYmogKSB7DQoJCQl0aGlzLm9mZnNldC5jbGljay50b3AgPSB0aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodCAtIG9iai5ib3R0b20gKyB0aGlzLm1hcmdpbnMudG9wOw0KCQl9DQoJfSwNCg0KCV9nZXRQYXJlbnRPZmZzZXQ6IGZ1bmN0aW9uKCkgew0KDQoJCS8vR2V0IHRoZSBvZmZzZXRQYXJlbnQgYW5kIGNhY2hlIGl0cyBwb3NpdGlvbg0KCQl0aGlzLm9mZnNldFBhcmVudCA9IHRoaXMuaGVscGVyLm9mZnNldFBhcmVudCgpOw0KCQl2YXIgcG8gPSB0aGlzLm9mZnNldFBhcmVudC5vZmZzZXQoKTsNCg0KCQkvLyBUaGlzIGlzIGEgc3BlY2lhbCBjYXNlIHdoZXJlIHdlIG5lZWQgdG8gbW9kaWZ5IGEgb2Zmc2V0IGNhbGN1bGF0ZWQgb24gc3RhcnQsIHNpbmNlIHRoZQ0KCQkvLyBmb2xsb3dpbmcgaGFwcGVuZWQ6DQoJCS8vIDEuIFRoZSBwb3NpdGlvbiBvZiB0aGUgaGVscGVyIGlzIGFic29sdXRlLCBzbyBpdCdzIHBvc2l0aW9uIGlzIGNhbGN1bGF0ZWQgYmFzZWQgb24gdGhlDQoJCS8vIG5leHQgcG9zaXRpb25lZCBwYXJlbnQNCgkJLy8gMi4gVGhlIGFjdHVhbCBvZmZzZXQgcGFyZW50IGlzIGEgY2hpbGQgb2YgdGhlIHNjcm9sbCBwYXJlbnQsIGFuZCB0aGUgc2Nyb2xsIHBhcmVudCBpc24ndA0KCQkvLyB0aGUgZG9jdW1lbnQsIHdoaWNoIG1lYW5zIHRoYXQgdGhlIHNjcm9sbCBpcyBpbmNsdWRlZCBpbiB0aGUgaW5pdGlhbCBjYWxjdWxhdGlvbiBvZiB0aGUNCgkJLy8gb2Zmc2V0IG9mIHRoZSBwYXJlbnQsIGFuZCBuZXZlciByZWNhbGN1bGF0ZWQgdXBvbiBkcmFnDQoJCWlmICggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImFic29sdXRlIiAmJiB0aGlzLnNjcm9sbFBhcmVudFsgMCBdICE9PSB0aGlzLmRvY3VtZW50WyAwIF0gJiYNCgkJCQkkLmNvbnRhaW5zKCB0aGlzLnNjcm9sbFBhcmVudFsgMCBdLCB0aGlzLm9mZnNldFBhcmVudFsgMCBdICkgKSB7DQoJCQlwby5sZWZ0ICs9IHRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQoKTsNCgkJCXBvLnRvcCArPSB0aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxUb3AoKTsNCgkJfQ0KDQoJCS8vIFRoaXMgbmVlZHMgdG8gYmUgYWN0dWFsbHkgZG9uZSBmb3IgYWxsIGJyb3dzZXJzLCBzaW5jZSBwYWdlWC9wYWdlWSBpbmNsdWRlcyB0aGlzDQoJCS8vIGluZm9ybWF0aW9uIHdpdGggYW4gdWdseSBJRSBmaXgNCgkJaWYgKCB0aGlzLm9mZnNldFBhcmVudFsgMCBdID09PSB0aGlzLmRvY3VtZW50WyAwIF0uYm9keSB8fA0KCQkJCSggdGhpcy5vZmZzZXRQYXJlbnRbIDAgXS50YWdOYW1lICYmDQoJCQkJdGhpcy5vZmZzZXRQYXJlbnRbIDAgXS50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICJodG1sIiAmJiAkLnVpLmllICkgKSB7DQoJCQlwbyA9IHsgdG9wOiAwLCBsZWZ0OiAwIH07DQoJCX0NCg0KCQlyZXR1cm4gew0KCQkJdG9wOiBwby50b3AgKyAoIHBhcnNlSW50KCB0aGlzLm9mZnNldFBhcmVudC5jc3MoICJib3JkZXJUb3BXaWR0aCIgKSwgMTAgKSB8fCAwICksDQoJCQlsZWZ0OiBwby5sZWZ0ICsgKCBwYXJzZUludCggdGhpcy5vZmZzZXRQYXJlbnQuY3NzKCAiYm9yZGVyTGVmdFdpZHRoIiApLCAxMCApIHx8IDAgKQ0KCQl9Ow0KDQoJfSwNCg0KCV9nZXRSZWxhdGl2ZU9mZnNldDogZnVuY3Rpb24oKSB7DQoNCgkJaWYgKCB0aGlzLmNzc1Bvc2l0aW9uID09PSAicmVsYXRpdmUiICkgew0KCQkJdmFyIHAgPSB0aGlzLmN1cnJlbnRJdGVtLnBvc2l0aW9uKCk7DQoJCQlyZXR1cm4gew0KCQkJCXRvcDogcC50b3AgLSAoIHBhcnNlSW50KCB0aGlzLmhlbHBlci5jc3MoICJ0b3AiICksIDEwICkgfHwgMCApICsNCgkJCQkJdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsVG9wKCksDQoJCQkJbGVmdDogcC5sZWZ0IC0gKCBwYXJzZUludCggdGhpcy5oZWxwZXIuY3NzKCAibGVmdCIgKSwgMTAgKSB8fCAwICkgKw0KCQkJCQl0aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0KCkNCgkJCX07DQoJCX0gZWxzZSB7DQoJCQlyZXR1cm4geyB0b3A6IDAsIGxlZnQ6IDAgfTsNCgkJfQ0KDQoJfSwNCg0KCV9jYWNoZU1hcmdpbnM6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLm1hcmdpbnMgPSB7DQoJCQlsZWZ0OiAoIHBhcnNlSW50KCB0aGlzLmN1cnJlbnRJdGVtLmNzcyggIm1hcmdpbkxlZnQiICksIDEwICkgfHwgMCApLA0KCQkJdG9wOiAoIHBhcnNlSW50KCB0aGlzLmN1cnJlbnRJdGVtLmNzcyggIm1hcmdpblRvcCIgKSwgMTAgKSB8fCAwICkNCgkJfTsNCgl9LA0KDQoJX2NhY2hlSGVscGVyUHJvcG9ydGlvbnM6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLmhlbHBlclByb3BvcnRpb25zID0gew0KCQkJd2lkdGg6IHRoaXMuaGVscGVyLm91dGVyV2lkdGgoKSwNCgkJCWhlaWdodDogdGhpcy5oZWxwZXIub3V0ZXJIZWlnaHQoKQ0KCQl9Ow0KCX0sDQoNCglfc2V0Q29udGFpbm1lbnQ6IGZ1bmN0aW9uKCkgew0KDQoJCXZhciBjZSwgY28sIG92ZXIsDQoJCQlvID0gdGhpcy5vcHRpb25zOw0KCQlpZiAoIG8uY29udGFpbm1lbnQgPT09ICJwYXJlbnQiICkgew0KCQkJby5jb250YWlubWVudCA9IHRoaXMuaGVscGVyWyAwIF0ucGFyZW50Tm9kZTsNCgkJfQ0KCQlpZiAoIG8uY29udGFpbm1lbnQgPT09ICJkb2N1bWVudCIgfHwgby5jb250YWlubWVudCA9PT0gIndpbmRvdyIgKSB7DQoJCQl0aGlzLmNvbnRhaW5tZW50ID0gWw0KCQkJCTAgLSB0aGlzLm9mZnNldC5yZWxhdGl2ZS5sZWZ0IC0gdGhpcy5vZmZzZXQucGFyZW50LmxlZnQsDQoJCQkJMCAtIHRoaXMub2Zmc2V0LnJlbGF0aXZlLnRvcCAtIHRoaXMub2Zmc2V0LnBhcmVudC50b3AsDQoJCQkJby5jb250YWlubWVudCA9PT0gImRvY3VtZW50IiA\/DQoJCQkJCXRoaXMuZG9jdW1lbnQud2lkdGgoKSA6DQoJCQkJCXRoaXMud2luZG93LndpZHRoKCkgLSB0aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoIC0gdGhpcy5tYXJnaW5zLmxlZnQsDQoJCQkJKCBvLmNvbnRhaW5tZW50ID09PSAiZG9jdW1lbnQiID8NCgkJCQkJKCB0aGlzLmRvY3VtZW50LmhlaWdodCgpIHx8IGRvY3VtZW50LmJvZHkucGFyZW50Tm9kZS5zY3JvbGxIZWlnaHQgKSA6DQoJCQkJCXRoaXMud2luZG93LmhlaWdodCgpIHx8IHRoaXMuZG9jdW1lbnRbIDAgXS5ib2R5LnBhcmVudE5vZGUuc2Nyb2xsSGVpZ2h0DQoJCQkJKSAtIHRoaXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0IC0gdGhpcy5tYXJnaW5zLnRvcA0KCQkJXTsNCgkJfQ0KDQoJCWlmICggISggL14oZG9jdW1lbnR8d2luZG93fHBhcmVudCkkLyApLnRlc3QoIG8uY29udGFpbm1lbnQgKSApIHsNCgkJCWNlID0gJCggby5jb250YWlubWVudCApWyAwIF07DQoJCQljbyA9ICQoIG8uY29udGFpbm1lbnQgKS5vZmZzZXQoKTsNCgkJCW92ZXIgPSAoICQoIGNlICkuY3NzKCAib3ZlcmZsb3ciICkgIT09ICJoaWRkZW4iICk7DQoNCgkJCXRoaXMuY29udGFpbm1lbnQgPSBbDQoJCQkJY28ubGVmdCArICggcGFyc2VJbnQoICQoIGNlICkuY3NzKCAiYm9yZGVyTGVmdFdpZHRoIiApLCAxMCApIHx8IDAgKSArDQoJCQkJCSggcGFyc2VJbnQoICQoIGNlICkuY3NzKCAicGFkZGluZ0xlZnQiICksIDEwICkgfHwgMCApIC0gdGhpcy5tYXJnaW5zLmxlZnQsDQoJCQkJY28udG9wICsgKCBwYXJzZUludCggJCggY2UgKS5jc3MoICJib3JkZXJUb3BXaWR0aCIgKSwgMTAgKSB8fCAwICkgKw0KCQkJCQkoIHBhcnNlSW50KCAkKCBjZSApLmNzcyggInBhZGRpbmdUb3AiICksIDEwICkgfHwgMCApIC0gdGhpcy5tYXJnaW5zLnRvcCwNCgkJCQljby5sZWZ0ICsgKCBvdmVyID8gTWF0aC5tYXgoIGNlLnNjcm9sbFdpZHRoLCBjZS5vZmZzZXRXaWR0aCApIDogY2Uub2Zmc2V0V2lkdGggKSAtDQoJCQkJCSggcGFyc2VJbnQoICQoIGNlICkuY3NzKCAiYm9yZGVyTGVmdFdpZHRoIiApLCAxMCApIHx8IDAgKSAtDQoJCQkJCSggcGFyc2VJbnQoICQoIGNlICkuY3NzKCAicGFkZGluZ1JpZ2h0IiApLCAxMCApIHx8IDAgKSAtDQoJCQkJCXRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGggLSB0aGlzLm1hcmdpbnMubGVmdCwNCgkJCQljby50b3AgKyAoIG92ZXIgPyBNYXRoLm1heCggY2Uuc2Nyb2xsSGVpZ2h0LCBjZS5vZmZzZXRIZWlnaHQgKSA6IGNlLm9mZnNldEhlaWdodCApIC0NCgkJCQkJKCBwYXJzZUludCggJCggY2UgKS5jc3MoICJib3JkZXJUb3BXaWR0aCIgKSwgMTAgKSB8fCAwICkgLQ0KCQkJCQkoIHBhcnNlSW50KCAkKCBjZSApLmNzcyggInBhZGRpbmdCb3R0b20iICksIDEwICkgfHwgMCApIC0NCgkJCQkJdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQgLSB0aGlzLm1hcmdpbnMudG9wDQoJCQldOw0KCQl9DQoNCgl9LA0KDQoJX2NvbnZlcnRQb3NpdGlvblRvOiBmdW5jdGlvbiggZCwgcG9zICkgew0KDQoJCWlmICggIXBvcyApIHsNCgkJCXBvcyA9IHRoaXMucG9zaXRpb247DQoJCX0NCgkJdmFyIG1vZCA9IGQgPT09ICJhYnNvbHV0ZSIgPyAxIDogLTEsDQoJCQlzY3JvbGwgPSB0aGlzLmNzc1Bvc2l0aW9uID09PSAiYWJzb2x1dGUiICYmDQoJCQkJISggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSAhPT0gdGhpcy5kb2N1bWVudFsgMCBdICYmDQoJCQkJJC5jb250YWlucyggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSwgdGhpcy5vZmZzZXRQYXJlbnRbIDAgXSApICkgPw0KCQkJCQl0aGlzLm9mZnNldFBhcmVudCA6DQoJCQkJCXRoaXMuc2Nyb2xsUGFyZW50LA0KCQkJc2Nyb2xsSXNSb290Tm9kZSA9ICggLyhodG1sfGJvZHkpL2kgKS50ZXN0KCBzY3JvbGxbIDAgXS50YWdOYW1lICk7DQoNCgkJcmV0dXJuIHsNCgkJCXRvcDogKA0KDQoJCQkJLy8gVGhlIGFic29sdXRlIG1vdXNlIHBvc2l0aW9uDQoJCQkJcG9zLnRvcAkrDQoNCgkJCQkvLyBPbmx5IGZvciByZWxhdGl2ZSBwb3NpdGlvbmVkIG5vZGVzOiBSZWxhdGl2ZSBvZmZzZXQgZnJvbSBlbGVtZW50IHRvIG9mZnNldCBwYXJlbnQNCgkJCQl0aGlzLm9mZnNldC5yZWxhdGl2ZS50b3AgKiBtb2QgKw0KDQoJCQkJLy8gVGhlIG9mZnNldFBhcmVudCdzIG9mZnNldCB3aXRob3V0IGJvcmRlcnMgKG9mZnNldCArIGJvcmRlcikNCgkJCQl0aGlzLm9mZnNldC5wYXJlbnQudG9wICogbW9kIC0NCgkJCQkoICggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImZpeGVkIiA\/DQoJCQkJCS10aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxUb3AoKSA6DQoJCQkJCSggc2Nyb2xsSXNSb290Tm9kZSA\/IDAgOiBzY3JvbGwuc2Nyb2xsVG9wKCkgKSApICogbW9kICkNCgkJCSksDQoJCQlsZWZ0OiAoDQoNCgkJCQkvLyBUaGUgYWJzb2x1dGUgbW91c2UgcG9zaXRpb24NCgkJCQlwb3MubGVmdCArDQoNCgkJCQkvLyBPbmx5IGZvciByZWxhdGl2ZSBwb3NpdGlvbmVkIG5vZGVzOiBSZWxhdGl2ZSBvZmZzZXQgZnJvbSBlbGVtZW50IHRvIG9mZnNldCBwYXJlbnQNCgkJCQl0aGlzLm9mZnNldC5yZWxhdGl2ZS5sZWZ0ICogbW9kICsNCg0KCQkJCS8vIFRoZSBvZmZzZXRQYXJlbnQncyBvZmZzZXQgd2l0aG91dCBib3JkZXJzIChvZmZzZXQgKyBib3JkZXIpDQoJCQkJdGhpcy5vZmZzZXQucGFyZW50LmxlZnQgKiBtb2QJLQ0KCQkJCSggKCB0aGlzLmNzc1Bvc2l0aW9uID09PSAiZml4ZWQiID8NCgkJCQkJLXRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQoKSA6IHNjcm9sbElzUm9vdE5vZGUgPyAwIDoNCgkJCQkJc2Nyb2xsLnNjcm9sbExlZnQoKSApICogbW9kICkNCgkJCSkNCgkJfTsNCg0KCX0sDQoNCglfZ2VuZXJhdGVQb3NpdGlvbjogZnVuY3Rpb24oIGV2ZW50ICkgew0KDQoJCXZhciB0b3AsIGxlZnQsDQoJCQlvID0gdGhpcy5vcHRpb25zLA0KCQkJcGFnZVggPSBldmVudC5wYWdlWCwNCgkJCXBhZ2VZID0gZXZlbnQucGFnZVksDQoJCQlzY3JvbGwgPSB0aGlzLmNzc1Bvc2l0aW9uID09PSAiYWJzb2x1dGUiICYmDQoJCQkJISggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSAhPT0gdGhpcy5kb2N1bWVudFsgMCBdICYmDQoJCQkJJC5jb250YWlucyggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSwgdGhpcy5vZmZzZXRQYXJlbnRbIDAgXSApICkgPw0KCQkJCQl0aGlzLm9mZnNldFBhcmVudCA6DQoJCQkJCXRoaXMuc2Nyb2xsUGFyZW50LA0KCQkJCXNjcm9sbElzUm9vdE5vZGUgPSAoIC8oaHRtbHxib2R5KS9pICkudGVzdCggc2Nyb2xsWyAwIF0udGFnTmFtZSApOw0KDQoJCS8vIFRoaXMgaXMgYW5vdGhlciB2ZXJ5IHdlaXJkIHNwZWNpYWwgY2FzZSB0aGF0IG9ubHkgaGFwcGVucyBmb3IgcmVsYXRpdmUgZWxlbWVudHM6DQoJCS8vIDEuIElmIHRoZSBjc3MgcG9zaXRpb24gaXMgcmVsYXRpdmUNCgkJLy8gMi4gYW5kIHRoZSBzY3JvbGwgcGFyZW50IGlzIHRoZSBkb2N1bWVudCBvciBzaW1pbGFyIHRvIHRoZSBvZmZzZXQgcGFyZW50DQoJCS8vIHdlIGhhdmUgdG8gcmVmcmVzaCB0aGUgcmVsYXRpdmUgb2Zmc2V0IGR1cmluZyB0aGUgc2Nyb2xsIHNvIHRoZXJlIGFyZSBubyBqdW1wcw0KCQlpZiAoIHRoaXMuY3NzUG9zaXRpb24gPT09ICJyZWxhdGl2ZSIgJiYgISggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSAhPT0gdGhpcy5kb2N1bWVudFsgMCBdICYmDQoJCQkJdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSAhPT0gdGhpcy5vZmZzZXRQYXJlbnRbIDAgXSApICkgew0KCQkJdGhpcy5vZmZzZXQucmVsYXRpdmUgPSB0aGlzLl9nZXRSZWxhdGl2ZU9mZnNldCgpOw0KCQl9DQoNCgkJLyoNCgkJICogLSBQb3NpdGlvbiBjb25zdHJhaW5pbmcgLQ0KCQkgKiBDb25zdHJhaW4gdGhlIHBvc2l0aW9uIHRvIGEgbWl4IG9mIGdyaWQsIGNvbnRhaW5tZW50Lg0KCQkgKi8NCg0KCQlpZiAoIHRoaXMub3JpZ2luYWxQb3NpdGlvbiApIHsgLy9JZiB3ZSBhcmUgbm90IGRyYWdnaW5nIHlldCwgd2Ugd29uJ3QgY2hlY2sgZm9yIG9wdGlvbnMNCg0KCQkJaWYgKCB0aGlzLmNvbnRhaW5tZW50ICkgew0KCQkJCWlmICggZXZlbnQucGFnZVggLSB0aGlzLm9mZnNldC5jbGljay5sZWZ0IDwgdGhpcy5jb250YWlubWVudFsgMCBdICkgew0KCQkJCQlwYWdlWCA9IHRoaXMuY29udGFpbm1lbnRbIDAgXSArIHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQ7DQoJCQkJfQ0KCQkJCWlmICggZXZlbnQucGFnZVkgLSB0aGlzLm9mZnNldC5jbGljay50b3AgPCB0aGlzLmNvbnRhaW5tZW50WyAxIF0gKSB7DQoJCQkJCXBhZ2VZID0gdGhpcy5jb250YWlubWVudFsgMSBdICsgdGhpcy5vZmZzZXQuY2xpY2sudG9wOw0KCQkJCX0NCgkJCQlpZiAoIGV2ZW50LnBhZ2VYIC0gdGhpcy5vZmZzZXQuY2xpY2subGVmdCA+IHRoaXMuY29udGFpbm1lbnRbIDIgXSApIHsNCgkJCQkJcGFnZVggPSB0aGlzLmNvbnRhaW5tZW50WyAyIF0gKyB0aGlzLm9mZnNldC5jbGljay5sZWZ0Ow0KCQkJCX0NCgkJCQlpZiAoIGV2ZW50LnBhZ2VZIC0gdGhpcy5vZmZzZXQuY2xpY2sudG9wID4gdGhpcy5jb250YWlubWVudFsgMyBdICkgew0KCQkJCQlwYWdlWSA9IHRoaXMuY29udGFpbm1lbnRbIDMgXSArIHRoaXMub2Zmc2V0LmNsaWNrLnRvcDsNCgkJCQl9DQoJCQl9DQoNCgkJCWlmICggby5ncmlkICkgew0KCQkJCXRvcCA9IHRoaXMub3JpZ2luYWxQYWdlWSArIE1hdGgucm91bmQoICggcGFnZVkgLSB0aGlzLm9yaWdpbmFsUGFnZVkgKSAvDQoJCQkJCW8uZ3JpZFsgMSBdICkgKiBvLmdyaWRbIDEgXTsNCgkJCQlwYWdlWSA9IHRoaXMuY29udGFpbm1lbnQgPw0KCQkJCQkoICggdG9wIC0gdGhpcy5vZmZzZXQuY2xpY2sudG9wID49IHRoaXMuY29udGFpbm1lbnRbIDEgXSAmJg0KCQkJCQkJdG9wIC0gdGhpcy5vZmZzZXQuY2xpY2sudG9wIDw9IHRoaXMuY29udGFpbm1lbnRbIDMgXSApID8NCgkJCQkJCQl0b3AgOg0KCQkJCQkJCSggKCB0b3AgLSB0aGlzLm9mZnNldC5jbGljay50b3AgPj0gdGhpcy5jb250YWlubWVudFsgMSBdICkgPw0KCQkJCQkJCQl0b3AgLSBvLmdyaWRbIDEgXSA6IHRvcCArIG8uZ3JpZFsgMSBdICkgKSA6DQoJCQkJCQkJCXRvcDsNCg0KCQkJCWxlZnQgPSB0aGlzLm9yaWdpbmFsUGFnZVggKyBNYXRoLnJvdW5kKCAoIHBhZ2VYIC0gdGhpcy5vcmlnaW5hbFBhZ2VYICkgLw0KCQkJCQlvLmdyaWRbIDAgXSApICogby5ncmlkWyAwIF07DQoJCQkJcGFnZVggPSB0aGlzLmNvbnRhaW5tZW50ID8NCgkJCQkJKCAoIGxlZnQgLSB0aGlzLm9mZnNldC5jbGljay5sZWZ0ID49IHRoaXMuY29udGFpbm1lbnRbIDAgXSAmJg0KCQkJCQkJbGVmdCAtIHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgPD0gdGhpcy5jb250YWlubWVudFsgMiBdICkgPw0KCQkJCQkJCWxlZnQgOg0KCQkJCQkJCSggKCBsZWZ0IC0gdGhpcy5vZmZzZXQuY2xpY2subGVmdCA+PSB0aGlzLmNvbnRhaW5tZW50WyAwIF0gKSA\/DQoJCQkJCQkJCWxlZnQgLSBvLmdyaWRbIDAgXSA6IGxlZnQgKyBvLmdyaWRbIDAgXSApICkgOg0KCQkJCQkJCQlsZWZ0Ow0KCQkJfQ0KDQoJCX0NCg0KCQlyZXR1cm4gew0KCQkJdG9wOiAoDQoNCgkJCQkvLyBUaGUgYWJzb2x1dGUgbW91c2UgcG9zaXRpb24NCgkJCQlwYWdlWSAtDQoNCgkJCQkvLyBDbGljayBvZmZzZXQgKHJlbGF0aXZlIHRvIHRoZSBlbGVtZW50KQ0KCQkJCXRoaXMub2Zmc2V0LmNsaWNrLnRvcCAtDQoNCgkJCQkvLyBPbmx5IGZvciByZWxhdGl2ZSBwb3NpdGlvbmVkIG5vZGVzOiBSZWxhdGl2ZSBvZmZzZXQgZnJvbSBlbGVtZW50IHRvIG9mZnNldCBwYXJlbnQNCgkJCQl0aGlzLm9mZnNldC5yZWxhdGl2ZS50b3AgLQ0KDQoJCQkJLy8gVGhlIG9mZnNldFBhcmVudCdzIG9mZnNldCB3aXRob3V0IGJvcmRlcnMgKG9mZnNldCArIGJvcmRlcikNCgkJCQl0aGlzLm9mZnNldC5wYXJlbnQudG9wICsNCgkJCQkoICggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImZpeGVkIiA\/DQoJCQkJCS10aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxUb3AoKSA6DQoJCQkJCSggc2Nyb2xsSXNSb290Tm9kZSA\/IDAgOiBzY3JvbGwuc2Nyb2xsVG9wKCkgKSApICkNCgkJCSksDQoJCQlsZWZ0OiAoDQoNCgkJCQkvLyBUaGUgYWJzb2x1dGUgbW91c2UgcG9zaXRpb24NCgkJCQlwYWdlWCAtDQoNCgkJCQkvLyBDbGljayBvZmZzZXQgKHJlbGF0aXZlIHRvIHRoZSBlbGVtZW50KQ0KCQkJCXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgLQ0KDQoJCQkJLy8gT25seSBmb3IgcmVsYXRpdmUgcG9zaXRpb25lZCBub2RlczogUmVsYXRpdmUgb2Zmc2V0IGZyb20gZWxlbWVudCB0byBvZmZzZXQgcGFyZW50DQoJCQkJdGhpcy5vZmZzZXQucmVsYXRpdmUubGVmdCAtDQoNCgkJCQkvLyBUaGUgb2Zmc2V0UGFyZW50J3Mgb2Zmc2V0IHdpdGhvdXQgYm9yZGVycyAob2Zmc2V0ICsgYm9yZGVyKQ0KCQkJCXRoaXMub2Zmc2V0LnBhcmVudC5sZWZ0ICsNCgkJCQkoICggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImZpeGVkIiA\/DQoJCQkJCS10aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0KCkgOg0KCQkJCQlzY3JvbGxJc1Jvb3ROb2RlID8gMCA6IHNjcm9sbC5zY3JvbGxMZWZ0KCkgKSApDQoJCQkpDQoJCX07DQoNCgl9LA0KDQoJX3JlYXJyYW5nZTogZnVuY3Rpb24oIGV2ZW50LCBpLCBhLCBoYXJkUmVmcmVzaCApIHsNCg0KCQlhID8gYVsgMCBdLmFwcGVuZENoaWxkKCB0aGlzLnBsYWNlaG9sZGVyWyAwIF0gKSA6DQoJCQlpLml0ZW1bIDAgXS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggdGhpcy5wbGFjZWhvbGRlclsgMCBdLA0KCQkJCSggdGhpcy5kaXJlY3Rpb24gPT09ICJkb3duIiA\/IGkuaXRlbVsgMCBdIDogaS5pdGVtWyAwIF0ubmV4dFNpYmxpbmcgKSApOw0KDQoJCS8vVmFyaW91cyB0aGluZ3MgZG9uZSBoZXJlIHRvIGltcHJvdmUgdGhlIHBlcmZvcm1hbmNlOg0KCQkvLyAxLiB3ZSBjcmVhdGUgYSBzZXRUaW1lb3V0LCB0aGF0IGNhbGxzIHJlZnJlc2hQb3NpdGlvbnMNCgkJLy8gMi4gb24gdGhlIGluc3RhbmNlLCB3ZSBoYXZlIGEgY291bnRlciB2YXJpYWJsZSwgdGhhdCBnZXQncyBoaWdoZXIgYWZ0ZXIgZXZlcnkgYXBwZW5kDQoJCS8vIDMuIG9uIHRoZSBsb2NhbCBzY29wZSwgd2UgY29weSB0aGUgY291bnRlciB2YXJpYWJsZSwgYW5kIGNoZWNrIGluIHRoZSB0aW1lb3V0LA0KCQkvLyBpZiBpdCdzIHN0aWxsIHRoZSBzYW1lDQoJCS8vIDQuIHRoaXMgbGV0cyBvbmx5IHRoZSBsYXN0IGFkZGl0aW9uIHRvIHRoZSB0aW1lb3V0IHN0YWNrIHRocm91Z2gNCgkJdGhpcy5jb3VudGVyID0gdGhpcy5jb3VudGVyID8gKyt0aGlzLmNvdW50ZXIgOiAxOw0KCQl2YXIgY291bnRlciA9IHRoaXMuY291bnRlcjsNCg0KCQl0aGlzLl9kZWxheSggZnVuY3Rpb24oKSB7DQoJCQlpZiAoIGNvdW50ZXIgPT09IHRoaXMuY291bnRlciApIHsNCg0KCQkJCS8vUHJlY29tcHV0ZSBhZnRlciBlYWNoIERPTSBpbnNlcnRpb24sIE5PVCBvbiBtb3VzZW1vdmUNCgkJCQl0aGlzLnJlZnJlc2hQb3NpdGlvbnMoICFoYXJkUmVmcmVzaCApOw0KCQkJfQ0KCQl9ICk7DQoNCgl9LA0KDQoJX2NsZWFyOiBmdW5jdGlvbiggZXZlbnQsIG5vUHJvcGFnYXRpb24gKSB7DQoNCgkJdGhpcy5yZXZlcnRpbmcgPSBmYWxzZTsNCg0KCQkvLyBXZSBkZWxheSBhbGwgZXZlbnRzIHRoYXQgaGF2ZSB0byBiZSB0cmlnZ2VyZWQgdG8gYWZ0ZXIgdGhlIHBvaW50IHdoZXJlIHRoZSBwbGFjZWhvbGRlcg0KCQkvLyBoYXMgYmVlbiByZW1vdmVkIGFuZCBldmVyeXRoaW5nIGVsc2Ugbm9ybWFsaXplZCBhZ2Fpbg0KCQl2YXIgaSwNCgkJCWRlbGF5ZWRUcmlnZ2VycyA9IFtdOw0KDQoJCS8vIFdlIGZpcnN0IGhhdmUgdG8gdXBkYXRlIHRoZSBkb20gcG9zaXRpb24gb2YgdGhlIGFjdHVhbCBjdXJyZW50SXRlbQ0KCQkvLyBOb3RlOiBkb24ndCBkbyBpdCBpZiB0aGUgY3VycmVudCBpdGVtIGlzIGFscmVhZHkgcmVtb3ZlZCAoYnkgYSB1c2VyKSwgb3IgaXQgZ2V0cw0KCQkvLyByZWFwcGVuZGVkIChzZWUgIzQwODgpDQoJCWlmICggIXRoaXMuX25vRmluYWxTb3J0ICYmIHRoaXMuY3VycmVudEl0ZW0ucGFyZW50KCkubGVuZ3RoICkgew0KCQkJdGhpcy5wbGFjZWhvbGRlci5iZWZvcmUoIHRoaXMuY3VycmVudEl0ZW0gKTsNCgkJfQ0KCQl0aGlzLl9ub0ZpbmFsU29ydCA9IG51bGw7DQoNCgkJaWYgKCB0aGlzLmhlbHBlclsgMCBdID09PSB0aGlzLmN1cnJlbnRJdGVtWyAwIF0gKSB7DQoJCQlmb3IgKCBpIGluIHRoaXMuX3N0b3JlZENTUyApIHsNCgkJCQlpZiAoIHRoaXMuX3N0b3JlZENTU1sgaSBdID09PSAiYXV0byIgfHwgdGhpcy5fc3RvcmVkQ1NTWyBpIF0gPT09ICJzdGF0aWMiICkgew0KCQkJCQl0aGlzLl9zdG9yZWRDU1NbIGkgXSA9ICIiOw0KCQkJCX0NCgkJCX0NCgkJCXRoaXMuY3VycmVudEl0ZW0uY3NzKCB0aGlzLl9zdG9yZWRDU1MgKTsNCgkJCXRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLmN1cnJlbnRJdGVtLCAidWktc29ydGFibGUtaGVscGVyIiApOw0KCQl9IGVsc2Ugew0KCQkJdGhpcy5jdXJyZW50SXRlbS5zaG93KCk7DQoJCX0NCg0KCQlpZiAoIHRoaXMuZnJvbU91dHNpZGUgJiYgIW5vUHJvcGFnYXRpb24gKSB7DQoJCQlkZWxheWVkVHJpZ2dlcnMucHVzaCggZnVuY3Rpb24oIGV2ZW50ICkgew0KCQkJCXRoaXMuX3RyaWdnZXIoICJyZWNlaXZlIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCggdGhpcy5mcm9tT3V0c2lkZSApICk7DQoJCQl9ICk7DQoJCX0NCgkJaWYgKCAoIHRoaXMuZnJvbU91dHNpZGUgfHwNCgkJCQl0aGlzLmRvbVBvc2l0aW9uLnByZXYgIT09DQoJCQkJdGhpcy5jdXJyZW50SXRlbS5wcmV2KCkubm90KCAiLnVpLXNvcnRhYmxlLWhlbHBlciIgKVsgMCBdIHx8DQoJCQkJdGhpcy5kb21Qb3NpdGlvbi5wYXJlbnQgIT09IHRoaXMuY3VycmVudEl0ZW0ucGFyZW50KClbIDAgXSApICYmICFub1Byb3BhZ2F0aW9uICkgew0KDQoJCQkvLyBUcmlnZ2VyIHVwZGF0ZSBjYWxsYmFjayBpZiB0aGUgRE9NIHBvc2l0aW9uIGhhcyBjaGFuZ2VkDQoJCQlkZWxheWVkVHJpZ2dlcnMucHVzaCggZnVuY3Rpb24oIGV2ZW50ICkgew0KCQkJCXRoaXMuX3RyaWdnZXIoICJ1cGRhdGUiLCBldmVudCwgdGhpcy5fdWlIYXNoKCkgKTsNCgkJCX0gKTsNCgkJfQ0KDQoJCS8vIENoZWNrIGlmIHRoZSBpdGVtcyBDb250YWluZXIgaGFzIENoYW5nZWQgYW5kIHRyaWdnZXIgYXBwcm9wcmlhdGUNCgkJLy8gZXZlbnRzLg0KCQlpZiAoIHRoaXMgIT09IHRoaXMuY3VycmVudENvbnRhaW5lciApIHsNCgkJCWlmICggIW5vUHJvcGFnYXRpb24gKSB7DQoJCQkJZGVsYXllZFRyaWdnZXJzLnB1c2goIGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCQkJdGhpcy5fdHJpZ2dlciggInJlbW92ZSIsIGV2ZW50LCB0aGlzLl91aUhhc2goKSApOw0KCQkJCX0gKTsNCgkJCQlkZWxheWVkVHJpZ2dlcnMucHVzaCggKCBmdW5jdGlvbiggYyApIHsNCgkJCQkJcmV0dXJuIGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCQkJCWMuX3RyaWdnZXIoICJyZWNlaXZlIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCggdGhpcyApICk7DQoJCQkJCX07DQoJCQkJfSApLmNhbGwoIHRoaXMsIHRoaXMuY3VycmVudENvbnRhaW5lciApICk7DQoJCQkJZGVsYXllZFRyaWdnZXJzLnB1c2goICggZnVuY3Rpb24oIGMgKSB7DQoJCQkJCXJldHVybiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQkJCQljLl90cmlnZ2VyKCAidXBkYXRlIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCggdGhpcyApICk7DQoJCQkJCX07DQoJCQkJfSApLmNhbGwoIHRoaXMsIHRoaXMuY3VycmVudENvbnRhaW5lciApICk7DQoJCQl9DQoJCX0NCg0KCQkvL1Bvc3QgZXZlbnRzIHRvIGNvbnRhaW5lcnMNCgkJZnVuY3Rpb24gZGVsYXlFdmVudCggdHlwZSwgaW5zdGFuY2UsIGNvbnRhaW5lciApIHsNCgkJCXJldHVybiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQkJY29udGFpbmVyLl90cmlnZ2VyKCB0eXBlLCBldmVudCwgaW5zdGFuY2UuX3VpSGFzaCggaW5zdGFuY2UgKSApOw0KCQkJfTsNCgkJfQ0KCQlmb3IgKCBpID0gdGhpcy5jb250YWluZXJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tICkgew0KCQkJaWYgKCAhbm9Qcm9wYWdhdGlvbiApIHsNCgkJCQlkZWxheWVkVHJpZ2dlcnMucHVzaCggZGVsYXlFdmVudCggImRlYWN0aXZhdGUiLCB0aGlzLCB0aGlzLmNvbnRhaW5lcnNbIGkgXSApICk7DQoJCQl9DQoJCQlpZiAoIHRoaXMuY29udGFpbmVyc1sgaSBdLmNvbnRhaW5lckNhY2hlLm92ZXIgKSB7DQoJCQkJZGVsYXllZFRyaWdnZXJzLnB1c2goIGRlbGF5RXZlbnQoICJvdXQiLCB0aGlzLCB0aGlzLmNvbnRhaW5lcnNbIGkgXSApICk7DQoJCQkJdGhpcy5jb250YWluZXJzWyBpIF0uY29udGFpbmVyQ2FjaGUub3ZlciA9IDA7DQoJCQl9DQoJCX0NCg0KCQkvL0RvIHdoYXQgd2FzIG9yaWdpbmFsbHkgaW4gcGx1Z2lucw0KCQlpZiAoIHRoaXMuc3RvcmVkQ3Vyc29yICkgew0KCQkJdGhpcy5kb2N1bWVudC5maW5kKCAiYm9keSIgKS5jc3MoICJjdXJzb3IiLCB0aGlzLnN0b3JlZEN1cnNvciApOw0KCQkJdGhpcy5zdG9yZWRTdHlsZXNoZWV0LnJlbW92ZSgpOw0KCQl9DQoJCWlmICggdGhpcy5fc3RvcmVkT3BhY2l0eSApIHsNCgkJCXRoaXMuaGVscGVyLmNzcyggIm9wYWNpdHkiLCB0aGlzLl9zdG9yZWRPcGFjaXR5ICk7DQoJCX0NCgkJaWYgKCB0aGlzLl9zdG9yZWRaSW5kZXggKSB7DQoJCQl0aGlzLmhlbHBlci5jc3MoICJ6SW5kZXgiLCB0aGlzLl9zdG9yZWRaSW5kZXggPT09ICJhdXRvIiA\\/DQoJCS8vIHNob3VsZG4ndCB3ZSBqdXN0IHN0b3AgdGhlIHJlcGVhdGVyIGFuZCB3YWl0IHVudGlsIG1vdXNldXAgYmVmb3JlDQoJCS8vIHdlIHRyaWdnZXIgdGhlIHN0b3AgZXZlbnQ\/DQoJCSJtb3VzZWxlYXZlIC51aS1zcGlubmVyLWJ1dHRvbiI6ICJfc3RvcCINCgl9LA0KDQoJLy8gU3VwcG9ydCBtb2JpbGUgZW5oYW5jZWQgb3B0aW9uIGFuZCBtYWtlIGJhY2tjb21wYXQgbW9yZSBzYW5lDQoJX2VuaGFuY2U6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLnVpU3Bpbm5lciA9IHRoaXMuZWxlbWVudA0KCQkJLmF0dHIoICJhdXRvY29tcGxldGUiLCAib2ZmIiApDQoJCQkud3JhcCggIjxzcGFuPiIgKQ0KCQkJLnBhcmVudCgpDQoNCgkJCQkvLyBBZGQgYnV0dG9ucw0KCQkJCS5hcHBlbmQoDQoJCQkJCSI8YT48L2E+PGE+PC9hPiINCgkJCQkpOw0KCX0sDQoNCglfZHJhdzogZnVuY3Rpb24oKSB7DQoJCXRoaXMuX2VuaGFuY2UoKTsNCg0KCQl0aGlzLl9hZGRDbGFzcyggdGhpcy51aVNwaW5uZXIsICJ1aS1zcGlubmVyIiwgInVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudCIgKTsNCgkJdGhpcy5fYWRkQ2xhc3MoICJ1aS1zcGlubmVyLWlucHV0IiApOw0KDQoJCXRoaXMuZWxlbWVudC5hdHRyKCAicm9sZSIsICJzcGluYnV0dG9uIiApOw0KDQoJCS8vIEJ1dHRvbiBiaW5kaW5ncw0KCQl0aGlzLmJ1dHRvbnMgPSB0aGlzLnVpU3Bpbm5lci5jaGlsZHJlbiggImEiICkNCgkJCS5hdHRyKCAidGFiSW5kZXgiLCAtMSApDQoJCQkuYXR0ciggImFyaWEtaGlkZGVuIiwgdHJ1ZSApDQoJCQkuYnV0dG9uKCB7DQoJCQkJY2xhc3Nlczogew0KCQkJCQkidWktYnV0dG9uIjogIiINCgkJCQl9DQoJCQl9ICk7DQoNCgkJLy8gVE9ETzogUmlnaHQgbm93IGJ1dHRvbiBkb2VzIG5vdCBzdXBwb3J0IGNsYXNzZXMgdGhpcyBpcyBhbHJlYWR5IHVwZGF0ZWQgaW4gYnV0dG9uIFBSDQoJCXRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLmJ1dHRvbnMsICJ1aS1jb3JuZXItYWxsIiApOw0KDQoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmJ1dHRvbnMuZmlyc3QoKSwgInVpLXNwaW5uZXItYnV0dG9uIHVpLXNwaW5uZXItdXAiICk7DQoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmJ1dHRvbnMubGFzdCgpLCAidWktc3Bpbm5lci1idXR0b24gdWktc3Bpbm5lci1kb3duIiApOw0KCQl0aGlzLmJ1dHRvbnMuZmlyc3QoKS5idXR0b24oIHsNCgkJCSJpY29uIjogdGhpcy5vcHRpb25zLmljb25zLnVwLA0KCQkJInNob3dMYWJlbCI6IGZhbHNlDQoJCX0gKTsNCgkJdGhpcy5idXR0b25zLmxhc3QoKS5idXR0b24oIHsNCgkJCSJpY29uIjogdGhpcy5vcHRpb25zLmljb25zLmRvd24sDQoJCQkic2hvd0xhYmVsIjogZmFsc2UNCgkJfSApOw0KDQoJCS8vIElFIDYgZG9lc24ndCB1bmRlcnN0YW5kIGhlaWdodDogNTAlIGZvciB0aGUgYnV0dG9ucw0KCQkvLyB1bmxlc3MgdGhlIHdyYXBwZXIgaGFzIGFuIGV4cGxpY2l0IGhlaWdodA0KCQlpZiAoIHRoaXMuYnV0dG9ucy5oZWlnaHQoKSA+IE1hdGguY2VpbCggdGhpcy51aVNwaW5uZXIuaGVpZ2h0KCkgKiAwLjUgKSAmJg0KCQkJCXRoaXMudWlTcGlubmVyLmhlaWdodCgpID4gMCApIHsNCgkJCXRoaXMudWlTcGlubmVyLmhlaWdodCggdGhpcy51aVNwaW5uZXIuaGVpZ2h0KCkgKTsNCgkJfQ0KCX0sDQoNCglfa2V5ZG93bjogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQl2YXIgb3B0aW9ucyA9IHRoaXMub3B0aW9ucywNCgkJCWtleUNvZGUgPSAkLnVpLmtleUNvZGU7DQoNCgkJc3dpdGNoICggZXZlbnQua2V5Q29kZSApIHsNCgkJY2FzZSBrZXlDb2RlLlVQOg0KCQkJdGhpcy5fcmVwZWF0KCBudWxsLCAxLCBldmVudCApOw0KCQkJcmV0dXJuIHRydWU7DQoJCWNhc2Uga2V5Q29kZS5ET1dOOg0KCQkJdGhpcy5fcmVwZWF0KCBudWxsLCAtMSwgZXZlbnQgKTsNCgkJCXJldHVybiB0cnVlOw0KCQljYXNlIGtleUNvZGUuUEFHRV9VUDoNCgkJCXRoaXMuX3JlcGVhdCggbnVsbCwgb3B0aW9ucy5wYWdlLCBldmVudCApOw0KCQkJcmV0dXJuIHRydWU7DQoJCWNhc2Uga2V5Q29kZS5QQUdFX0RPV046DQoJCQl0aGlzLl9yZXBlYXQoIG51bGwsIC1vcHRpb25zLnBhZ2UsIGV2ZW50ICk7DQoJCQlyZXR1cm4gdHJ1ZTsNCgkJfQ0KDQoJCXJldHVybiBmYWxzZTsNCgl9LA0KDQoJX3N0YXJ0OiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCWlmICggIXRoaXMuc3Bpbm5pbmcgJiYgdGhpcy5fdHJpZ2dlciggInN0YXJ0IiwgZXZlbnQgKSA9PT0gZmFsc2UgKSB7DQoJCQlyZXR1cm4gZmFsc2U7DQoJCX0NCg0KCQlpZiAoICF0aGlzLmNvdW50ZXIgKSB7DQoJCQl0aGlzLmNvdW50ZXIgPSAxOw0KCQl9DQoJCXRoaXMuc3Bpbm5pbmcgPSB0cnVlOw0KCQlyZXR1cm4gdHJ1ZTsNCgl9LA0KDQoJX3JlcGVhdDogZnVuY3Rpb24oIGksIHN0ZXBzLCBldmVudCApIHsNCgkJaSA9IGkgfHwgNTAwOw0KDQoJCWNsZWFyVGltZW91dCggdGhpcy50aW1lciApOw0KCQl0aGlzLnRpbWVyID0gdGhpcy5fZGVsYXkoIGZ1bmN0aW9uKCkgew0KCQkJdGhpcy5fcmVwZWF0KCA0MCwgc3RlcHMsIGV2ZW50ICk7DQoJCX0sIGkgKTsNCg0KCQl0aGlzLl9zcGluKCBzdGVwcyAqIHRoaXMub3B0aW9ucy5zdGVwLCBldmVudCApOw0KCX0sDQoNCglfc3BpbjogZnVuY3Rpb24oIHN0ZXAsIGV2ZW50ICkgew0KCQl2YXIgdmFsdWUgPSB0aGlzLnZhbHVlKCkgfHwgMDsNCg0KCQlpZiAoICF0aGlzLmNvdW50ZXIgKSB7DQoJCQl0aGlzLmNvdW50ZXIgPSAxOw0KCQl9DQoNCgkJdmFsdWUgPSB0aGlzLl9hZGp1c3RWYWx1ZSggdmFsdWUgKyBzdGVwICogdGhpcy5faW5jcmVtZW50KCB0aGlzLmNvdW50ZXIgKSApOw0KDQoJCWlmICggIXRoaXMuc3Bpbm5pbmcgfHwgdGhpcy5fdHJpZ2dlciggInNwaW4iLCBldmVudCwgeyB2YWx1ZTogdmFsdWUgfSApICE9PSBmYWxzZSApIHsNCgkJCXRoaXMuX3ZhbHVlKCB2YWx1ZSApOw0KCQkJdGhpcy5jb3VudGVyKys7DQoJCX0NCgl9LA0KDQoJX2luY3JlbWVudDogZnVuY3Rpb24oIGkgKSB7DQoJCXZhciBpbmNyZW1lbnRhbCA9IHRoaXMub3B0aW9ucy5pbmNyZW1lbnRhbDsNCg0KCQlpZiAoIGluY3JlbWVudGFsICkgew0KCQkJcmV0dXJuICQuaXNGdW5jdGlvbiggaW5jcmVtZW50YWwgKSA\/DQoJCQkJaW5jcmVtZW50YWwoIGkgKSA6DQoJCQkJTWF0aC5mbG9vciggaSAqIGkgKiBpIC8gNTAwMDAgLSBpICogaSAvIDUwMCArIDE3ICogaSAvIDIwMCArIDEgKTsNCgkJfQ0KDQoJCXJldHVybiAxOw0KCX0sDQoNCglfcHJlY2lzaW9uOiBmdW5jdGlvbigpIHsNCgkJdmFyIHByZWNpc2lvbiA9IHRoaXMuX3ByZWNpc2lvbk9mKCB0aGlzLm9wdGlvbnMuc3RlcCApOw0KCQlpZiAoIHRoaXMub3B0aW9ucy5taW4gIT09IG51bGwgKSB7DQoJCQlwcmVjaXNpb24gPSBNYXRoLm1heCggcHJlY2lzaW9uLCB0aGlzLl9wcmVjaXNpb25PZiggdGhpcy5vcHRpb25zLm1pbiApICk7DQoJCX0NCgkJcmV0dXJuIHByZWNpc2lvbjsNCgl9LA0KDQoJX3ByZWNpc2lvbk9mOiBmdW5jdGlvbiggbnVtICkgew0KCQl2YXIgc3RyID0gbnVtLnRvU3RyaW5nKCksDQoJCQlkZWNpbWFsID0gc3RyLmluZGV4T2YoICIuIiApOw0KCQlyZXR1cm4gZGVjaW1hbCA9PT0gLTEgPyAwIDogc3RyLmxlbmd0aCAtIGRlY2ltYWwgLSAxOw0KCX0sDQoNCglfYWRqdXN0VmFsdWU6IGZ1bmN0aW9uKCB2YWx1ZSApIHsNCgkJdmFyIGJhc2UsIGFib3ZlTWluLA0KCQkJb3B0aW9ucyA9IHRoaXMub3B0aW9uczsNCg0KCQkvLyBNYWtlIHN1cmUgd2UncmUgYXQgYSB2YWxpZCBzdGVwDQoJCS8vIC0gZmluZCBvdXQgd2hlcmUgd2UgYXJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIChtaW4gb3IgMCkNCgkJYmFzZSA9IG9wdGlvbnMubWluICE9PSBudWxsID8gb3B0aW9ucy5taW4gOiAwOw0KCQlhYm92ZU1pbiA9IHZhbHVlIC0gYmFzZTsNCg0KCQkvLyAtIHJvdW5kIHRvIHRoZSBuZWFyZXN0IHN0ZXANCgkJYWJvdmVNaW4gPSBNYXRoLnJvdW5kKCBhYm92ZU1pbiAvIG9wdGlvbnMuc3RlcCApICogb3B0aW9ucy5zdGVwOw0KDQoJCS8vIC0gcm91bmRpbmcgaXMgYmFzZWQgb24gMCwgc28gYWRqdXN0IGJhY2sgdG8gb3VyIGJhc2UNCgkJdmFsdWUgPSBiYXNlICsgYWJvdmVNaW47DQoNCgkJLy8gRml4IHByZWNpc2lvbiBmcm9tIGJhZCBKUyBmbG9hdGluZyBwb2ludCBtYXRoDQoJCXZhbHVlID0gcGFyc2VGbG9hdCggdmFsdWUudG9GaXhlZCggdGhpcy5fcHJlY2lzaW9uKCkgKSApOw0KDQoJCS8vIENsYW1wIHRoZSB2YWx1ZQ0KCQlpZiAoIG9wdGlvbnMubWF4ICE9PSBudWxsICYmIHZhbHVlID4gb3B0aW9ucy5tYXggKSB7DQoJCQlyZXR1cm4gb3B0aW9ucy5tYXg7DQoJCX0NCgkJaWYgKCBvcHRpb25zLm1pbiAhPT0gbnVsbCAmJiB2YWx1ZSA8IG9wdGlvbnMubWluICkgew0KCQkJcmV0dXJuIG9wdGlvbnMubWluOw0KCQl9DQoNCgkJcmV0dXJuIHZhbHVlOw0KCX0sDQoNCglfc3RvcDogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQlpZiAoICF0aGlzLnNwaW5uaW5nICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJY2xlYXJUaW1lb3V0KCB0aGlzLnRpbWVyICk7DQoJCWNsZWFyVGltZW91dCggdGhpcy5tb3VzZXdoZWVsVGltZXIgKTsNCgkJdGhpcy5jb3VudGVyID0gMDsNCgkJdGhpcy5zcGlubmluZyA9IGZhbHNlOw0KCQl0aGlzLl90cmlnZ2VyKCAic3RvcCIsIGV2ZW50ICk7DQoJfSwNCg0KCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgew0KCQl2YXIgcHJldlZhbHVlLCBmaXJzdCwgbGFzdDsNCg0KCQlpZiAoIGtleSA9PT0gImN1bHR1cmUiIHx8IGtleSA9PT0gIm51bWJlckZvcm1hdCIgKSB7DQoJCQlwcmV2VmFsdWUgPSB0aGlzLl9wYXJzZSggdGhpcy5lbGVtZW50LnZhbCgpICk7DQoJCQl0aGlzLm9wdGlvbnNbIGtleSBdID0gdmFsdWU7DQoJCQl0aGlzLmVsZW1lbnQudmFsKCB0aGlzLl9mb3JtYXQoIHByZXZWYWx1ZSApICk7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQlpZiAoIGtleSA9PT0gIm1heCIgfHwga2V5ID09PSAibWluIiB8fCBrZXkgPT09ICJzdGVwIiApIHsNCgkJCWlmICggdHlwZW9mIHZhbHVlID09PSAic3RyaW5nIiApIHsNCgkJCQl2YWx1ZSA9IHRoaXMuX3BhcnNlKCB2YWx1ZSApOw0KCQkJfQ0KCQl9DQoJCWlmICgga2V5ID09PSAiaWNvbnMiICkgew0KCQkJZmlyc3QgPSB0aGlzLmJ1dHRvbnMuZmlyc3QoKS5maW5kKCAiLnVpLWljb24iICk7DQoJCQl0aGlzLl9yZW1vdmVDbGFzcyggZmlyc3QsIG51bGwsIHRoaXMub3B0aW9ucy5pY29ucy51cCApOw0KCQkJdGhpcy5fYWRkQ2xhc3MoIGZpcnN0LCBudWxsLCB2YWx1ZS51cCApOw0KCQkJbGFzdCA9IHRoaXMuYnV0dG9ucy5sYXN0KCkuZmluZCggIi51aS1pY29uIiApOw0KCQkJdGhpcy5fcmVtb3ZlQ2xhc3MoIGxhc3QsIG51bGwsIHRoaXMub3B0aW9ucy5pY29ucy5kb3duICk7DQoJCQl0aGlzLl9hZGRDbGFzcyggbGFzdCwgbnVsbCwgdmFsdWUuZG93biApOw0KCQl9DQoNCgkJdGhpcy5fc3VwZXIoIGtleSwgdmFsdWUgKTsNCgl9LA0KDQoJX3NldE9wdGlvbkRpc2FibGVkOiBmdW5jdGlvbiggdmFsdWUgKSB7DQoJCXRoaXMuX3N1cGVyKCB2YWx1ZSApOw0KDQoJCXRoaXMuX3RvZ2dsZUNsYXNzKCB0aGlzLnVpU3Bpbm5lciwgbnVsbCwgInVpLXN0YXRlLWRpc2FibGVkIiwgISF2YWx1ZSApOw0KCQl0aGlzLmVsZW1lbnQucHJvcCggImRpc2FibGVkIiwgISF2YWx1ZSApOw0KCQl0aGlzLmJ1dHRvbnMuYnV0dG9uKCB2YWx1ZSA\/ICJkaXNhYmxlIiA6ICJlbmFibGUiICk7DQoJfSwNCg0KCV9zZXRPcHRpb25zOiBzcGlubmVyTW9kaWZlciggZnVuY3Rpb24oIG9wdGlvbnMgKSB7DQoJCXRoaXMuX3N1cGVyKCBvcHRpb25zICk7DQoJfSApLA0KDQoJX3BhcnNlOiBmdW5jdGlvbiggdmFsICkgew0KCQlpZiAoIHR5cGVvZiB2YWwgPT09ICJzdHJpbmciICYmIHZhbCAhPT0gIiIgKSB7DQoJCQl2YWwgPSB3aW5kb3cuR2xvYmFsaXplICYmIHRoaXMub3B0aW9ucy5udW1iZXJGb3JtYXQgPw0KCQkJCUdsb2JhbGl6ZS5wYXJzZUZsb2F0KCB2YWwsIDEwLCB0aGlzLm9wdGlvbnMuY3VsdHVyZSApIDogK3ZhbDsNCgkJfQ0KCQlyZXR1cm4gdmFsID09PSAiIiB8fCBpc05hTiggdmFsICkgPyBudWxsIDogdmFsOw0KCX0sDQoNCglfZm9ybWF0OiBmdW5jdGlvbiggdmFsdWUgKSB7DQoJCWlmICggdmFsdWUgPT09ICIiICkgew0KCQkJcmV0dXJuICIiOw0KCQl9DQoJCXJldHVybiB3aW5kb3cuR2xvYmFsaXplICYmIHRoaXMub3B0aW9ucy5udW1iZXJGb3JtYXQgPw0KCQkJR2xvYmFsaXplLmZvcm1hdCggdmFsdWUsIHRoaXMub3B0aW9ucy5udW1iZXJGb3JtYXQsIHRoaXMub3B0aW9ucy5jdWx0dXJlICkgOg0KCQkJdmFsdWU7DQoJfSwNCg0KCV9yZWZyZXNoOiBmdW5jdGlvbigpIHsNCgkJdGhpcy5lbGVtZW50LmF0dHIoIHsNCgkJCSJhcmlhLXZhbHVlbWluIjogdGhpcy5vcHRpb25zLm1pbiwNCgkJCSJhcmlhLXZhbHVlbWF4IjogdGhpcy5vcHRpb25zLm1heCwNCg0KCQkJLy8gVE9ETzogd2hhdCBzaG91bGQgd2UgZG8gd2l0aCB2YWx1ZXMgdGhhdCBjYW4ndCBiZSBwYXJzZWQ\/DQoJCQkiYXJpYS12YWx1ZW5vdyI6IHRoaXMuX3BhcnNlKCB0aGlzLmVsZW1lbnQudmFsKCkgKQ0KCQl9ICk7DQoJfSwNCg0KCWlzVmFsaWQ6IGZ1bmN0aW9uKCkgew0KCQl2YXIgdmFsdWUgPSB0aGlzLnZhbHVlKCk7DQoNCgkJLy8gTnVsbCBpcyBpbnZhbGlkDQoJCWlmICggdmFsdWUgPT09IG51bGwgKSB7DQoJCQlyZXR1cm4gZmFsc2U7DQoJCX0NCg0KCQkvLyBJZiB2YWx1ZSBnZXRzIGFkanVzdGVkLCBpdCdzIGludmFsaWQNCgkJcmV0dXJuIHZhbHVlID09PSB0aGlzLl9hZGp1c3RWYWx1ZSggdmFsdWUgKTsNCgl9LA0KDQoJLy8gVXBkYXRlIHRoZSB2YWx1ZSB3aXRob3V0IHRyaWdnZXJpbmcgY2hhbmdlDQoJX3ZhbHVlOiBmdW5jdGlvbiggdmFsdWUsIGFsbG93QW55ICkgew0KCQl2YXIgcGFyc2VkOw0KCQlpZiAoIHZhbHVlICE9PSAiIiApIHsNCgkJCXBhcnNlZCA9IHRoaXMuX3BhcnNlKCB2YWx1ZSApOw0KCQkJaWYgKCBwYXJzZWQgIT09IG51bGwgKSB7DQoJCQkJaWYgKCAhYWxsb3dBbnkgKSB7DQoJCQkJCXBhcnNlZCA9IHRoaXMuX2FkanVzdFZhbHVlKCBwYXJzZWQgKTsNCgkJCQl9DQoJCQkJdmFsdWUgPSB0aGlzLl9mb3JtYXQoIHBhcnNlZCApOw0KCQkJfQ0KCQl9DQoJCXRoaXMuZWxlbWVudC52YWwoIHZhbHVlICk7DQoJCXRoaXMuX3JlZnJlc2goKTsNCgl9LA0KDQoJX2Rlc3Ryb3k6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLmVsZW1lbnQNCgkJCS5wcm9wKCAiZGlzYWJsZWQiLCBmYWxzZSApDQoJCQkucmVtb3ZlQXR0ciggImF1dG9jb21wbGV0ZSByb2xlIGFyaWEtdmFsdWVtaW4gYXJpYS12YWx1ZW1heCBhcmlhLXZhbHVlbm93IiApOw0KDQoJCXRoaXMudWlTcGlubmVyLnJlcGxhY2VXaXRoKCB0aGlzLmVsZW1lbnQgKTsNCgl9LA0KDQoJc3RlcFVwOiBzcGlubmVyTW9kaWZlciggZnVuY3Rpb24oIHN0ZXBzICkgew0KCQl0aGlzLl9zdGVwVXAoIHN0ZXBzICk7DQoJfSApLA0KCV9zdGVwVXA6IGZ1bmN0aW9uKCBzdGVwcyApIHsNCgkJaWYgKCB0aGlzLl9zdGFydCgpICkgew0KCQkJdGhpcy5fc3BpbiggKCBzdGVwcyB8fCAxICkgKiB0aGlzLm9wdGlvbnMuc3RlcCApOw0KCQkJdGhpcy5fc3RvcCgpOw0KCQl9DQoJfSwNCg0KCXN0ZXBEb3duOiBzcGlubmVyTW9kaWZlciggZnVuY3Rpb24oIHN0ZXBzICkgew0KCQl0aGlzLl9zdGVwRG93biggc3RlcHMgKTsNCgl9ICksDQoJX3N0ZXBEb3duOiBmdW5jdGlvbiggc3RlcHMgKSB7DQoJCWlmICggdGhpcy5fc3RhcnQoKSApIHsNCgkJCXRoaXMuX3NwaW4oICggc3RlcHMgfHwgMSApICogLXRoaXMub3B0aW9ucy5zdGVwICk7DQoJCQl0aGlzLl9zdG9wKCk7DQoJCX0NCgl9LA0KDQoJcGFnZVVwOiBzcGlubmVyTW9kaWZlciggZnVuY3Rpb24oIHBhZ2VzICkgew0KCQl0aGlzLl9zdGVwVXAoICggcGFnZXMgfHwgMSApICogdGhpcy5vcHRpb25zLnBhZ2UgKTsNCgl9ICksDQoNCglwYWdlRG93bjogc3Bpbm5lck1vZGlmZXIoIGZ1bmN0aW9uKCBwYWdlcyApIHsNCgkJdGhpcy5fc3RlcERvd24oICggcGFnZXMgfHwgMSApICogdGhpcy5vcHRpb25zLnBhZ2UgKTsNCgl9ICksDQoNCgl2YWx1ZTogZnVuY3Rpb24oIG5ld1ZhbCApIHsNCgkJaWYgKCAhYXJndW1lbnRzLmxlbmd0aCApIHsNCgkJCXJldHVybiB0aGlzLl9wYXJzZSggdGhpcy5lbGVtZW50LnZhbCgpICk7DQoJCX0NCgkJc3Bpbm5lck1vZGlmZXIoIHRoaXMuX3ZhbHVlICkuY2FsbCggdGhpcywgbmV3VmFsICk7DQoJfSwNCg0KCXdpZGdldDogZnVuY3Rpb24oKSB7DQoJCXJldHVybiB0aGlzLnVpU3Bpbm5lcjsNCgl9DQp9ICk7DQoNCi8vIERFUFJFQ0FURUQNCi8vIFRPRE86IHN3aXRjaCByZXR1cm4gYmFjayB0byB3aWRnZXQgZGVjbGFyYXRpb24gYXQgdG9wIG9mIGZpbGUgd2hlbiB0aGlzIGlzIHJlbW92ZWQNCmlmICggJC51aUJhY2tDb21wYXQgIT09IGZhbHNlICkgew0KDQoJLy8gQmFja2NvbXBhdCBmb3Igc3Bpbm5lciBodG1sIGV4dGVuc2lvbiBwb2ludHMNCgkkLndpZGdldCggInVpLnNwaW5uZXIiLCAkLnVpLnNwaW5uZXIsIHsNCgkJX2VuaGFuY2U6IGZ1bmN0aW9uKCkgew0KCQkJdGhpcy51aVNwaW5uZXIgPSB0aGlzLmVsZW1lbnQNCgkJCQkuYXR0ciggImF1dG9jb21wbGV0ZSIsICJvZmYiICkNCgkJCQkud3JhcCggdGhpcy5fdWlTcGlubmVySHRtbCgpICkNCgkJCQkucGFyZW50KCkNCg0KCQkJCQkvLyBBZGQgYnV0dG9ucw0KCQkJCQkuYXBwZW5kKCB0aGlzLl9idXR0b25IdG1sKCkgKTsNCgkJfSwNCgkJX3VpU3Bpbm5lckh0bWw6IGZ1bmN0aW9uKCkgew0KCQkJcmV0dXJuICI8c3Bhbj4iOw0KCQl9LA0KDQoJCV9idXR0b25IdG1sOiBmdW5jdGlvbigpIHsNCgkJCXJldHVybiAiPGE+PC9hPjxhPjwvYT4iOw0KCQl9DQoJfSApOw0KfQ0KDQp2YXIgd2lkZ2V0c1NwaW5uZXIgPSAkLnVpLnNwaW5uZXI7DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgVGFicyAxLjEyLjENCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICovDQoNCi8vPj5sYWJlbDogVGFicw0KLy8+Pmdyb3VwOiBXaWRnZXRzDQovLz4+ZGVzY3JpcHRpb246IFRyYW5zZm9ybXMgYSBzZXQgb2YgY29udGFpbmVyIGVsZW1lbnRzIGludG8gYSB0YWIgc3RydWN0dXJlLg0KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3RhYnMvDQovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vdGFicy8NCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9jb3JlLmNzcw0KLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL3RhYnMuY3NzDQovLz4+Y3NzLnRoZW1lOiAuLi8uLi90aGVtZXMvYmFzZS90aGVtZS5jc3MNCg0KDQoNCiQud2lkZ2V0KCAidWkudGFicyIsIHsNCgl2ZXJzaW9uOiAiMS4xMi4xIiwNCglkZWxheTogMzAwLA0KCW9wdGlvbnM6IHsNCgkJYWN0aXZlOiBudWxsLA0KCQljbGFzc2VzOiB7DQoJCQkidWktdGFicyI6ICJ1aS1jb3JuZXItYWxsIiwNCgkJCSJ1aS10YWJzLW5hdiI6ICJ1aS1jb3JuZXItYWxsIiwNCgkJCSJ1aS10YWJzLXBhbmVsIjogInVpLWNvcm5lci1ib3R0b20iLA0KCQkJInVpLXRhYnMtdGFiIjogInVpLWNvcm5lci10b3AiDQoJCX0sDQoJCWNvbGxhcHNpYmxlOiBmYWxzZSwNCgkJZXZlbnQ6ICJjbGljayIsDQoJCWhlaWdodFN0eWxlOiAiY29udGVudCIsDQoJCWhpZGU6IG51bGwsDQoJCXNob3c6IG51bGwsDQoNCgkJLy8gQ2FsbGJhY2tzDQoJCWFjdGl2YXRlOiBudWxsLA0KCQliZWZvcmVBY3RpdmF0ZTogbnVsbCwNCgkJYmVmb3JlTG9hZDogbnVsbCwNCgkJbG9hZDogbnVsbA0KCX0sDQoNCglfaXNMb2NhbDogKCBmdW5jdGlvbigpIHsNCgkJdmFyIHJoYXNoID0gLyMuKiQvOw0KDQoJCXJldHVybiBmdW5jdGlvbiggYW5jaG9yICkgew0KCQkJdmFyIGFuY2hvclVybCwgbG9jYXRpb25Vcmw7DQoNCgkJCWFuY2hvclVybCA9IGFuY2hvci5ocmVmLnJlcGxhY2UoIHJoYXNoLCAiIiApOw0KCQkJbG9jYXRpb25VcmwgPSBsb2NhdGlvbi5ocmVmLnJlcGxhY2UoIHJoYXNoLCAiIiApOw0KDQoJCQkvLyBEZWNvZGluZyBtYXkgdGhyb3cgYW4gZXJyb3IgaWYgdGhlIFVSTCBpc24ndCBVVEYtOCAoIzk1MTgpDQoJCQl0cnkgew0KCQkJCWFuY2hvclVybCA9IGRlY29kZVVSSUNvbXBvbmVudCggYW5jaG9yVXJsICk7DQoJCQl9IGNhdGNoICggZXJyb3IgKSB7fQ0KCQkJdHJ5IHsNCgkJCQlsb2NhdGlvblVybCA9IGRlY29kZVVSSUNvbXBvbmVudCggbG9jYXRpb25VcmwgKTsNCgkJCX0gY2F0Y2ggKCBlcnJvciApIHt9DQoNCgkJCXJldHVybiBhbmNob3IuaGFzaC5sZW5ndGggPiAxICYmIGFuY2hvclVybCA9PT0gbG9jYXRpb25Vcmw7DQoJCX07DQoJfSApKCksDQoNCglfY3JlYXRlOiBmdW5jdGlvbigpIHsNCgkJdmFyIHRoYXQgPSB0aGlzLA0KCQkJb3B0aW9ucyA9IHRoaXMub3B0aW9uczsNCg0KCQl0aGlzLnJ1bm5pbmcgPSBmYWxzZTsNCg0KCQl0aGlzLl9hZGRDbGFzcyggInVpLXRhYnMiLCAidWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IiApOw0KCQl0aGlzLl90b2dnbGVDbGFzcyggInVpLXRhYnMtY29sbGFwc2libGUiLCBudWxsLCBvcHRpb25zLmNvbGxhcHNpYmxlICk7DQoNCgkJdGhpcy5fcHJvY2Vzc1RhYnMoKTsNCgkJb3B0aW9ucy5hY3RpdmUgPSB0aGlzLl9pbml0aWFsQWN0aXZlKCk7DQoNCgkJLy8gVGFrZSBkaXNhYmxpbmcgdGFicyB2aWEgY2xhc3MgYXR0cmlidXRlIGZyb20gSFRNTA0KCQkvLyBpbnRvIGFjY291bnQgYW5kIHVwZGF0ZSBvcHRpb24gcHJvcGVybHkuDQoJCWlmICggJC5pc0FycmF5KCBvcHRpb25zLmRpc2FibGVkICkgKSB7DQoJCQlvcHRpb25zLmRpc2FibGVkID0gJC51bmlxdWUoIG9wdGlvbnMuZGlzYWJsZWQuY29uY2F0KA0KCQkJCSQubWFwKCB0aGlzLnRhYnMuZmlsdGVyKCAiLnVpLXN0YXRlLWRpc2FibGVkIiApLCBmdW5jdGlvbiggbGkgKSB7DQoJCQkJCXJldHVybiB0aGF0LnRhYnMuaW5kZXgoIGxpICk7DQoJCQkJfSApDQoJCQkpICkuc29ydCgpOw0KCQl9DQoNCgkJLy8gQ2hlY2sgZm9yIGxlbmd0aCBhdm9pZHMgZXJyb3Igd2hlbiBpbml0aWFsaXppbmcgZW1wdHkgbGlzdA0KCQlpZiAoIHRoaXMub3B0aW9ucy5hY3RpdmUgIT09IGZhbHNlICYmIHRoaXMuYW5jaG9ycy5sZW5ndGggKSB7DQoJCQl0aGlzLmFjdGl2ZSA9IHRoaXMuX2ZpbmRBY3RpdmUoIG9wdGlvbnMuYWN0aXZlICk7DQoJCX0gZWxzZSB7DQoJCQl0aGlzLmFjdGl2ZSA9ICQoKTsNCgkJfQ0KDQoJCXRoaXMuX3JlZnJlc2goKTsNCg0KCQlpZiAoIHRoaXMuYWN0aXZlLmxlbmd0aCApIHsNCgkJCXRoaXMubG9hZCggb3B0aW9ucy5hY3RpdmUgKTsNCgkJfQ0KCX0sDQoNCglfaW5pdGlhbEFjdGl2ZTogZnVuY3Rpb24oKSB7DQoJCXZhciBhY3RpdmUgPSB0aGlzLm9wdGlvbnMuYWN0aXZlLA0KCQkJY29sbGFwc2libGUgPSB0aGlzLm9wdGlvbnMuY29sbGFwc2libGUsDQoJCQlsb2NhdGlvbkhhc2ggPSBsb2NhdGlvbi5oYXNoLnN1YnN0cmluZyggMSApOw0KDQoJCWlmICggYWN0aXZlID09PSBudWxsICkgew0KDQoJCQkvLyBjaGVjayB0aGUgZnJhZ21lbnQgaWRlbnRpZmllciBpbiB0aGUgVVJMDQoJCQlpZiAoIGxvY2F0aW9uSGFzaCApIHsNCgkJCQl0aGlzLnRhYnMuZWFjaCggZnVuY3Rpb24oIGksIHRhYiApIHsNCgkJCQkJaWYgKCAkKCB0YWIgKS5hdHRyKCAiYXJpYS1jb250cm9scyIgKSA9PT0gbG9jYXRpb25IYXNoICkgew0KCQkJCQkJYWN0aXZlID0gaTsNCgkJCQkJCXJldHVybiBmYWxzZTsNCgkJCQkJfQ0KCQkJCX0gKTsNCgkJCX0NCg0KCQkJLy8gQ2hlY2sgZm9yIGEgdGFiIG1hcmtlZCBhY3RpdmUgdmlhIGEgY2xhc3MNCgkJCWlmICggYWN0aXZlID09PSBudWxsICkgew0KCQkJCWFjdGl2ZSA9IHRoaXMudGFicy5pbmRleCggdGhpcy50YWJzLmZpbHRlciggIi51aS10YWJzLWFjdGl2ZSIgKSApOw0KCQkJfQ0KDQoJCQkvLyBObyBhY3RpdmUgdGFiLCBzZXQgdG8gZmFsc2UNCgkJCWlmICggYWN0aXZlID09PSBudWxsIHx8IGFjdGl2ZSA9PT0gLTEgKSB7DQoJCQkJYWN0aXZlID0gdGhpcy50YWJzLmxlbmd0aCA\/IDAgOiBmYWxzZTsNCgkJCX0NCgkJfQ0KDQoJCS8vIEhhbmRsZSBudW1iZXJzOiBuZWdhdGl2ZSwgb3V0IG9mIHJhbmdlDQoJCWlmICggYWN0aXZlICE9PSBmYWxzZSApIHsNCgkJCWFjdGl2ZSA9IHRoaXMudGFicy5pbmRleCggdGhpcy50YWJzLmVxKCBhY3RpdmUgKSApOw0KCQkJaWYgKCBhY3RpdmUgPT09IC0xICkgew0KCQkJCWFjdGl2ZSA9IGNvbGxhcHNpYmxlID8gZmFsc2UgOiAwOw0KCQkJfQ0KCQl9DQoNCgkJLy8gRG9uJ3QgYWxsb3cgY29sbGFwc2libGU6IGZhbHNlIGFuZCBhY3RpdmU6IGZhbHNlDQoJCWlmICggIWNvbGxhcHNpYmxlICYmIGFjdGl2ZSA9PT0gZmFsc2UgJiYgdGhpcy5hbmNob3JzLmxlbmd0aCApIHsNCgkJCWFjdGl2ZSA9IDA7DQoJCX0NCg0KCQlyZXR1cm4gYWN0aXZlOw0KCX0sDQoNCglfZ2V0Q3JlYXRlRXZlbnREYXRhOiBmdW5jdGlvbigpIHsNCgkJcmV0dXJuIHsNCgkJCXRhYjogdGhpcy5hY3RpdmUsDQoJCQlwYW5lbDogIXRoaXMuYWN0aXZlLmxlbmd0aCA\\\/ICJfZGlzYWJsZSIgOiAiX2VuYWJsZSIgXSgpOw0KCX0sDQoNCglfZGlzYWJsZTogZnVuY3Rpb24oKSB7DQoJCXZhciB0aGF0ID0gdGhpczsNCg0KCQkvLyBDbG9zZSBvcGVuIHRvb2x0aXBzDQoJCSQuZWFjaCggdGhpcy50b29sdGlwcywgZnVuY3Rpb24oIGlkLCB0b29sdGlwRGF0YSApIHsNCgkJCXZhciBldmVudCA9ICQuRXZlbnQoICJibHVyIiApOw0KCQkJZXZlbnQudGFyZ2V0ID0gZXZlbnQuY3VycmVudFRhcmdldCA9IHRvb2x0aXBEYXRhLmVsZW1lbnRbIDAgXTsNCgkJCXRoYXQuY2xvc2UoIGV2ZW50LCB0cnVlICk7DQoJCX0gKTsNCg0KCQkvLyBSZW1vdmUgdGl0bGUgYXR0cmlidXRlcyB0byBwcmV2ZW50IG5hdGl2ZSB0b29sdGlwcw0KCQl0aGlzLmRpc2FibGVkVGl0bGVzID0gdGhpcy5kaXNhYmxlZFRpdGxlcy5hZGQoDQoJCQl0aGlzLmVsZW1lbnQuZmluZCggdGhpcy5vcHRpb25zLml0ZW1zICkuYWRkQmFjaygpDQoJCQkJLmZpbHRlciggZnVuY3Rpb24oKSB7DQoJCQkJCXZhciBlbGVtZW50ID0gJCggdGhpcyApOw0KCQkJCQlpZiAoIGVsZW1lbnQuaXMoICJbdGl0bGVdIiApICkgew0KCQkJCQkJcmV0dXJuIGVsZW1lbnQNCgkJCQkJCQkuZGF0YSggInVpLXRvb2x0aXAtdGl0bGUiLCBlbGVtZW50LmF0dHIoICJ0aXRsZSIgKSApDQoJCQkJCQkJLnJlbW92ZUF0dHIoICJ0aXRsZSIgKTsNCgkJCQkJfQ0KCQkJCX0gKQ0KCQkpOw0KCX0sDQoNCglfZW5hYmxlOiBmdW5jdGlvbigpIHsNCg0KCQkvLyByZXN0b3JlIHRpdGxlIGF0dHJpYnV0ZXMNCgkJdGhpcy5kaXNhYmxlZFRpdGxlcy5lYWNoKCBmdW5jdGlvbigpIHsNCgkJCXZhciBlbGVtZW50ID0gJCggdGhpcyApOw0KCQkJaWYgKCBlbGVtZW50LmRhdGEoICJ1aS10b29sdGlwLXRpdGxlIiApICkgew0KCQkJCWVsZW1lbnQuYXR0ciggInRpdGxlIiwgZWxlbWVudC5kYXRhKCAidWktdG9vbHRpcC10aXRsZSIgKSApOw0KCQkJfQ0KCQl9ICk7DQoJCXRoaXMuZGlzYWJsZWRUaXRsZXMgPSAkKCBbXSApOw0KCX0sDQoNCglvcGVuOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCXZhciB0aGF0ID0gdGhpcywNCgkJCXRhcmdldCA9ICQoIGV2ZW50ID8gZXZlbnQudGFyZ2V0IDogdGhpcy5lbGVtZW50ICkNCg0KCQkJCS8vIHdlIG5lZWQgY2xvc2VzdCBoZXJlIGR1ZSB0byBtb3VzZW92ZXIgYnViYmxpbmcsDQoJCQkJLy8gYnV0IGFsd2F5cyBwb2ludGluZyBhdCB0aGUgc2FtZSBldmVudCB0YXJnZXQNCgkJCQkuY2xvc2VzdCggdGhpcy5vcHRpb25zLml0ZW1zICk7DQoNCgkJLy8gTm8gZWxlbWVudCB0byBzaG93IGEgdG9vbHRpcCBmb3Igb3IgdGhlIHRvb2x0aXAgaXMgYWxyZWFkeSBvcGVuDQoJCWlmICggIXRhcmdldC5sZW5ndGggfHwgdGFyZ2V0LmRhdGEoICJ1aS10b29sdGlwLWlkIiApICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJaWYgKCB0YXJnZXQuYXR0ciggInRpdGxlIiApICkgew0KCQkJdGFyZ2V0LmRhdGEoICJ1aS10b29sdGlwLXRpdGxlIiwgdGFyZ2V0LmF0dHIoICJ0aXRsZSIgKSApOw0KCQl9DQoNCgkJdGFyZ2V0LmRhdGEoICJ1aS10b29sdGlwLW9wZW4iLCB0cnVlICk7DQoNCgkJLy8gS2lsbCBwYXJlbnQgdG9vbHRpcHMsIGN1c3RvbSBvciBuYXRpdmUsIGZvciBob3Zlcg0KCQlpZiAoIGV2ZW50ICYmIGV2ZW50LnR5cGUgPT09ICJtb3VzZW92ZXIiICkgew0KCQkJdGFyZ2V0LnBhcmVudHMoKS5lYWNoKCBmdW5jdGlvbigpIHsNCgkJCQl2YXIgcGFyZW50ID0gJCggdGhpcyApLA0KCQkJCQlibHVyRXZlbnQ7DQoJCQkJaWYgKCBwYXJlbnQuZGF0YSggInVpLXRvb2x0aXAtb3BlbiIgKSApIHsNCgkJCQkJYmx1ckV2ZW50ID0gJC5FdmVudCggImJsdXIiICk7DQoJCQkJCWJsdXJFdmVudC50YXJnZXQgPSBibHVyRXZlbnQuY3VycmVudFRhcmdldCA9IHRoaXM7DQoJCQkJCXRoYXQuY2xvc2UoIGJsdXJFdmVudCwgdHJ1ZSApOw0KCQkJCX0NCgkJCQlpZiAoIHBhcmVudC5hdHRyKCAidGl0bGUiICkgKSB7DQoJCQkJCXBhcmVudC51bmlxdWVJZCgpOw0KCQkJCQl0aGF0LnBhcmVudHNbIHRoaXMuaWQgXSA9IHsNCgkJCQkJCWVsZW1lbnQ6IHRoaXMsDQoJCQkJCQl0aXRsZTogcGFyZW50LmF0dHIoICJ0aXRsZSIgKQ0KCQkJCQl9Ow0KCQkJCQlwYXJlbnQuYXR0ciggInRpdGxlIiwgIiIgKTsNCgkJCQl9DQoJCQl9ICk7DQoJCX0NCg0KCQl0aGlzLl9yZWdpc3RlckNsb3NlSGFuZGxlcnMoIGV2ZW50LCB0YXJnZXQgKTsNCgkJdGhpcy5fdXBkYXRlQ29udGVudCggdGFyZ2V0LCBldmVudCApOw0KCX0sDQoNCglfdXBkYXRlQ29udGVudDogZnVuY3Rpb24oIHRhcmdldCwgZXZlbnQgKSB7DQoJCXZhciBjb250ZW50LA0KCQkJY29udGVudE9wdGlvbiA9IHRoaXMub3B0aW9ucy5jb250ZW50LA0KCQkJdGhhdCA9IHRoaXMsDQoJCQlldmVudFR5cGUgPSBldmVudCA\",
    "size": "539420"
}