{
    "namaFile": "js\/persediaan\/saldoAwal\/saldoAwal.js",
    "lastUpdate": "2018-10-15+15:22:53.30",
    "contentFile": "dmFyIHNhbGRvQXdhbEZpbHRlclNLUEQgPSBuZXcgU2twZENscyh7DQogIHByZWZpeDogInNhbGRvQXdhbCIsDQogIGZvcm1OYW1lOiAic2FsZG9Bd2FsRm9ybSIsDQogIHBpbGloVXJ1c2FuZnRlcjogZnVuY3Rpb24oKSB7DQogICAgc2FsZG9Bd2FsLmZpbHRlclJlbmRlcigpOw0KICB9LA0KICBwaWxpaEJpZGFuZ0FmdGVyOiBmdW5jdGlvbigpIHsNCiAgICBzYWxkb0F3YWwuZmlsdGVyUmVuZGVyKCk7DQogIH0sDQogIHBpbGloVW5pdEFmdGVyOiBmdW5jdGlvbigpIHsNCiAgICBzYWxkb0F3YWwuZmlsdGVyUmVuZGVyKCk7DQogIH0sDQogIHBpbGloU3ViVW5pdEFmdGVyOiBmdW5jdGlvbigpIHsNCiAgICBzYWxkb0F3YWwuZmlsdGVyUmVuZGVyKCk7DQogIH0sDQogIHBpbGloU2Vrc2lBZnRlcjogZnVuY3Rpb24oKSB7DQogICAgc2FsZG9Bd2FsLmZpbHRlclJlbmRlcigpOw0KICB9DQp9KTsNCnZhciBzYWxkb0F3YWwgPSBuZXcgRGFmdGFyT2JqMih7DQogIHByZWZpeDogInNhbGRvQXdhbCIsDQogIHVybDogInBnUGVyc2VkaWFhbi5waHA\/UGc9c2FsZG9Bd2FsIiwNCiAgZm9ybU5hbWU6ICJzYWxkb0F3YWxGb3JtIiwNCg0KICBsb2FkaW5nOiBmdW5jdGlvbigpIHsNCiAgICAvL2FsZXJ0KCdsb2FkaW5nJyk7DQogICAgdGhpcy50b3BCYXJSZW5kZXIoKTsNCiAgICB0aGlzLmZpbHRlclJlbmRlcigpOw0KICAgIHRoaXMuZGFmdGFyUmVuZGVyKCk7DQogICAgdGhpcy5zdW1IYWxSZW5kZXIoKTsNCiAgfSwNCiAgZmlsdGVyUmVuZGVyQWZ0ZXI6IGZ1bmN0aW9uKCkge30sDQoNCiAgZGFmdGFyUmVuZGVyOiBmdW5jdGlvbigpIHsNCiAgICB2YXIgbWUgPSB0aGlzOyAvL3JlbmRlciBkYWZ0YXINCiAgICBhZGRDb3ZlclBhZ2UyKCJkYWZ0YXJfY292ZXIiLCAxLCB0cnVlLCB0cnVlLCB7DQogICAgICByZW5kZXJUbzogdGhpcy5wcmVmaXggKyAiX2NvbnRfZGFmdGFyIiwNCiAgICAgIGltZ3NyYzogImltYWdlcy93YWl0LmdpZiIsDQogICAgICBzdHlsZTogeyBwb3NpdGlvbjogImFic29sdXRlIiwgdG9wOiAiNSIsIGxlZnQ6ICI1IiB9DQogICAgfSk7DQogICAgJC5hamF4KHsNCiAgICAgIHVybDogdGhpcy51cmwgKyAiJnRpcGU9ZGFmdGFyIiwNCiAgICAgIHR5cGU6ICJQT1NUIiwNCiAgICAgIGRhdGE6ICQoIiMiICsgdGhpcy5mb3JtTmFtZSkuc2VyaWFsaXplKCksDQogICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7DQogICAgICAgIHZhciByZXNwID0gZXZhbCgiKCIgKyBkYXRhICsgIikiKTsNCiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobWUucHJlZml4ICsgIl9jb250X2RhZnRhciIpLmlubmVySFRNTCA9DQogICAgICAgICAgcmVzcC5jb250ZW50Ow0KICAgICAgICBtZS5zdW1IYWxSZW5kZXIoKTsNCiAgICAgIH0NCiAgICB9KTsNCiAgfSwNCg0KICBmaW5kUmVrZW5pbmc6IGZ1bmN0aW9uKCkgew0KICAgIHZhciBtZSA9IHRoaXM7DQogICAgdmFyIGZpbHRlclJlayA9ICJCRUxBTkpBIEJBUkFORyBKQVNBIjsNCg0KICAgIHBvcHVwUmVrZW5pbmcuZWxfa29kZV9yZWtlbmluZyA9ICJrb2RlUmVrZW5pbmciOw0KICAgIHBvcHVwUmVrZW5pbmcuZWxfbmFtYV9yZWtlbmluZyA9ICJuYW1hUmVrZW5pbmciOw0KICAgIHBvcHVwUmVrZW5pbmcud2luZG93U2F2ZUFmdGVyID0gZnVuY3Rpb24oKSB7fTsNCiAgICBwb3B1cFJla2VuaW5nLmZpbHRlckFrdW4gPSBmaWx0ZXJSZWs7DQogICAgcG9wdXBSZWtlbmluZy53aW5kb3dTaG93KCk7DQogIH0sDQoNCiAgQmFydTogZnVuY3Rpb24oKSB7DQogICAgdmFyIG1lID0gdGhpczsNCiAgICB2YXIgZXJyID0gIiI7DQoNCiAgICBpZiAoZXJyID09ICIiKSB7DQogICAgICB2YXIgY292ZXIgPSB0aGlzLnByZWZpeCArICJfZm9ybWNvdmVyIjsNCiAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSAiaGlkZGVuIjsNCiAgICAgIGFkZENvdmVyUGFnZTIoY292ZXIsIDIsIHRydWUsIGZhbHNlKTsNCiAgICAgICQuYWpheCh7DQogICAgICAgIHR5cGU6ICJQT1NUIiwNCiAgICAgICAgZGF0YTogJCgiIyIgKyB0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwNCiAgICAgICAgdXJsOiB0aGlzLnVybCArICImdGlwZT1mb3JtQmFydSIsDQogICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsNCiAgICAgICAgICB2YXIgcmVzcCA9IGV2YWwoIigiICsgZGF0YSArICIpIik7DQogICAgICAgICAgaWYgKHJlc3AuZXJyID09ICIiKSB7DQogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcikuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50Ow0KICAgICAgICAgICAgLy9tZS5BZnRlckZvcm1CYXJ1KHJlc3ApOw0KICAgICAgICAgICAgbGlzdEJhcmFuZ1NhbGRvQXdhbC5sb2FkaW5nKCk7DQogICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGFsZXJ0KHJlc3AuZXJyKTsNCiAgICAgICAgICAgIGRlbEVsZW0oY292ZXIpOw0KICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9ICJhdXRvIjsNCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0pOw0KICAgIH0gZWxzZSB7DQogICAgICBhbGVydChlcnIpOw0KICAgIH0NCiAgfSwNCiAgY2hlY2tTYWxkb0F3YWw6IGZ1bmN0aW9uKCkgew0KICAgIHZhciBtZSA9IHRoaXM7DQogICAgdmFyIGVyciA9ICIiOw0KICAgIGlmIChlcnIgPT0gIiIpIHsNCiAgICAgIHZhciBjb3ZlciA9IHRoaXMucHJlZml4ICsgIl9mb3JtY292ZXIiOw0KICAgICAgYWRkQ292ZXJQYWdlMihjb3ZlciwgMiwgdHJ1ZSwgZmFsc2UpOw0KICAgICAgJC5hamF4KHsNCiAgICAgICAgdHlwZTogIlBPU1QiLA0KICAgICAgICBkYXRhOiAkKCIjIiArIHRoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLA0KICAgICAgICB1cmw6IHRoaXMudXJsICsgIiZ0aXBlPWNoZWNrU2FsZG9Bd2FsIiwNCiAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgew0KICAgICAgICAgIGRlbEVsZW0oY292ZXIpOw0KICAgICAgICAgIHZhciByZXNwID0gZXZhbCgiKCIgKyBkYXRhICsgIikiKTsNCiAgICAgICAgICBtZS5yZWZyZXNoTGlzdCh0cnVlKTsNCiAgICAgICAgfQ0KICAgICAgfSk7DQogICAgfSBlbHNlIHsNCiAgICAgIGFsZXJ0KGVycik7DQogICAgfQ0KICB9LA0KDQogIGVkaXREYXRhOiBmdW5jdGlvbigpIHsNCiAgICB2YXIgbWUgPSB0aGlzOw0KICAgIGVycm1zZyA9IHRoaXMuQ2VrQ2hlY2tib3goKTsNCiAgICBpZiAoZXJybXNnID09ICIiKSB7DQogICAgICB2YXIgYm94ID0gdGhpcy5HZXRDYnhDaGVja2VkKCk7DQogICAgICB2YXIgY292ZXIgPSB0aGlzLnByZWZpeCArICJfZm9ybWNvdmVyIjsNCiAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSAiaGlkZGVuIjsNCiAgICAgIGFkZENvdmVyUGFnZTIoY292ZXIsIDIsIHRydWUsIGZhbHNlKTsNCiAgICAgICQuYWpheCh7DQogICAgICAgIHVybDogdGhpcy51cmwgKyAiJnRpcGU9ZWRpdERhdGEiLA0KICAgICAgICB0eXBlOiAiUE9TVCIsDQogICAgICAgIGRhdGE6ICQoIiMiICsgdGhpcy5mb3JtTmFtZSkuc2VyaWFsaXplKCksDQogICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsNCiAgICAgICAgICB2YXIgcmVzcCA9IGV2YWwoIigiICsgZGF0YSArICIpIik7DQogICAgICAgICAgaWYgKHJlc3AuZXJyID09ICIiKSB7DQogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcikuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50Ow0KICAgICAgICAgICAgbGlzdEJhcmFuZ1NhbGRvQXdhbC5sb2FkaW5nKCk7DQogICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGFsZXJ0KHJlc3AuZXJyKTsNCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0pOw0KICAgIH0gZWxzZSB7DQogICAgICBhbGVydChlcnJtc2cpOw0KICAgIH0NCiAgfSwNCiAgQmlkYW5nQWZ0ZXJmb3JtOiBmdW5jdGlvbigpIHsNCiAgICB2YXIgbWUgPSB0aGlzOw0KDQogICAgLy90aGlzLmZvcm1OYW1lID0gJ2FkbWluRm9ybSc7DQogICAgJC5hamF4KHsNCiAgICAgIHVybDogdGhpcy51cmwgKyAiJnRpcGU9QmlkYW5nQWZ0ZXJGb3JtIiwNCiAgICAgIHR5cGU6ICJQT1NUIiwNCiAgICAgIGRhdGE6IHsNCiAgICAgICAgZm1TS1BEQmlkYW5nOiAkKCIjY21iQmlkYW5nRm9ybSIpLnZhbCgpLA0KICAgICAgICBmbVNLUERVcnVzYW46ICQoIiNjbWJVcnVzYW5Gb3JtIikudmFsKCksDQogICAgICAgIGZtU0tQRHNrcGQ6ICQoIiNjbWJTS1BERm9ybSIpLnZhbCgpLA0KICAgICAgICBmbVNLUERVbml0OiAkKCIjY21iVW5pdEZvcm0iKS52YWwoKSwNCiAgICAgICAgZm1TS1BEU3ViVW5pdDogJCgiI2NtYlN1YlVuaXRGb3JtIikudmFsKCkNCiAgICAgIH0sDQogICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7DQogICAgICAgIHZhciByZXNwID0gZXZhbCgiKCIgKyBkYXRhICsgIikiKTsgLy9jb25zb2xlLmluZm8obWUpOwkvL2NvbnNvbGUuaW5mbygnaWQ9JyttZS5wcmVmaXgrJ0NieEJhZ2lhbicpOw0KICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY21iQmlkYW5nRm9ybSIpLmlubmVySFRNTCA9DQogICAgICAgICAgcmVzcC5jb250ZW50LmJpZGFuZzsNCiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImNtYlNLUERGb3JtIikuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50LnNrcGQ7DQogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJjbWJVbml0Rm9ybSIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudC51bml0Ow0KICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY21iU3ViVW5pdEZvcm0iKS5pbm5lckhUTUwgPQ0KICAgICAgICAgIHJlc3AuY29udGVudC5zdWJVbml0Ow0KICAgICAgfQ0KICAgIH0pOw0KICB9LA0KICBDYXJpOiBmdW5jdGlvbigpIHsNCiAgICBwb3B1cEJhcmFuZ192Mi5rb2RlQmFyYW5nID0gImtvZGVCYXJhbmciOw0KICAgIHBvcHVwQmFyYW5nX3YyLm5hbWFCYXJhbmcgPSAibmFtYUJhcmFuZyI7DQogICAgcG9wdXBCYXJhbmdfdjIuc2F0dWFuQmFyYW5nID0gInNhdHVhbiI7DQogICAgcG9wdXBCYXJhbmdfdjIud2luZG93U2hvdygpOw0KICB9LA0KDQogIEFmdGVyU2ltcGFuOiBmdW5jdGlvbigpIHsNCiAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIkt1bmp1bmdhbl9jb250X2RhZnRhciIpKSB7DQogICAgICB0aGlzLnJlZnJlc2hMaXN0KHRydWUpOw0KICAgIH0NCiAgfSwNCg0KICBTaW1wYW46IGZ1bmN0aW9uKCkgew0KICAgIHZhciBtZSA9IHRoaXM7DQogICAgdGhpcy5PbkVycm9yQ2xvc2UgPSBmYWxzZTsNCiAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gImhpZGRlbiI7DQogICAgdmFyIGNvdmVyID0gdGhpcy5wcmVmaXggKyAiX2Zvcm1zaW1wYW4iOw0KICAgIGFkZENvdmVyUGFnZTIoY292ZXIsIDEsIHRydWUsIGZhbHNlKTsNCiAgICAkLmFqYXgoew0KICAgICAgdHlwZTogIlBPU1QiLA0KICAgICAgZGF0YTogJCgiIyIgKyB0aGlzLnByZWZpeCArICJGb3JtIikuc2VyaWFsaXplKCksDQogICAgICB1cmw6IHRoaXMudXJsICsgIiZ0aXBlPXNpbXBhbiIsDQogICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7DQogICAgICAgIHZhciByZXNwID0gZXZhbCgiKCIgKyBkYXRhICsgIikiKTsNCiAgICAgICAgZGVsRWxlbShjb3Zlcik7DQogICAgICAgIGlmIChyZXNwLmVyciA9PSAiIikgew0KICAgICAgICAgIGFsZXJ0KCJEYXRhIGJlcmhhc2lsIGRpc2ltcGFuIik7DQogICAgICAgICAgbWUuQ2xvc2UoKTsNCiAgICAgICAgICBtZS5yZWZyZXNoTGlzdCh0cnVlKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICBhbGVydChyZXNwLmVycik7DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9KTsNCiAgfSwNCg0KICBzaW1wYW5EYXRhOiBmdW5jdGlvbihpZFNhbGRvQXdhbCkgew0KICAgIHZhciBtZSA9IHRoaXM7DQoNCiAgICAkLmFqYXgoew0KICAgICAgdHlwZTogIlBPU1QiLA0KICAgICAgZGF0YTogew0KICAgICAgICBpZFNhbGRvQXdhbDogaWRTYWxkb0F3YWwsDQogICAgICAgIGp1bWxhaEJhcmFuZzogJCgiI2p1bWxhaCIgKyBpZFNhbGRvQXdhbCkudmFsKCksDQogICAgICAgIGhhcmdhU2F0dWFuOiAkKCIjaGFyZ2EiICsgaWRTYWxkb0F3YWwpLnZhbCgpLA0KICAgICAgICBzYXR1YW5CYXJhbmc6ICQoIiNzYXR1YW5CYXJhbmciICsgaWRTYWxkb0F3YWwpLnZhbCgpDQogICAgICB9LA0KICAgICAgdXJsOiB0aGlzLnVybCArICImdGlwZT1TaW1wYW5EYXRhcyIsDQogICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7DQogICAgICAgIHZhciByZXNwID0gZXZhbCgiKCIgKyBkYXRhICsgIikiKTsNCiAgICAgICAgaWYgKHJlc3AuZXJyID09ICIiKSB7DQogICAgICAgICAgYWxlcnQoIkRhdGEgYmVyaGFzaWwgZGlzaW1wYW4iKTsNCiAgICAgICAgICBtZS5yZWZyZXNoTGlzdCh0cnVlKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICBhbGVydChyZXNwLmVycik7DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9KTsNCiAgfSwNCg0KICBoYXB1czogZnVuY3Rpb24oaWQpIHsNCiAgICB2YXIgbWUgPSB0aGlzOw0KICAgIGlmIChjb25maXJtKCJBbmRhIHlha2luIGluZ2luIG1lbmdoYXB1cyBEYXRhPyIpKSB7DQogICAgICAkLmFqYXgoew0KICAgICAgICB0eXBlOiAiUE9TVCIsDQogICAgICAgIGRhdGE6IHsNCiAgICAgICAgICBpZDogaWQNCiAgICAgICAgfSwNCiAgICAgICAgdXJsOiB0aGlzLnVybCArICImdGlwZT1IYXB1cyIsDQogICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsNCiAgICAgICAgICB2YXIgcmVzcCA9IGV2YWwoIigiICsgZGF0YSArICIpIik7DQogICAgICAgICAgaWYgKHJlc3AuZXJyID09ICIiKSB7DQogICAgICAgICAgICAvL2FsZXJ0KCdEYXRhIGJlcmhhc2lsIGRpSGFwdXMnKTsNCiAgICAgICAgICAgIG1lLnJlZnJlc2hMaXN0KHRydWUpOw0KICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICBhbGVydChyZXNwLmVycik7DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9KTsNCiAgICB9DQogIH0sDQoNCiAgc2F2ZURhdGE6IGZ1bmN0aW9uKGtvZGUpIHsNCiAgICB2YXIgbWUgPSB0aGlzOw0KICAgIHRoaXMuT25FcnJvckNsb3NlID0gZmFsc2U7DQogICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9ICJoaWRkZW4iOw0KICAgIHZhciBjb3ZlciA9IHRoaXMucHJlZml4ICsgIl9mb3Jtc2ltcGFuIjsNCiAgICBhZGRDb3ZlclBhZ2UyKGNvdmVyLCAxLCB0cnVlLCBmYWxzZSk7DQogICAgJC5hamF4KHsNCiAgICAgIHR5cGU6ICJQT1NUIiwNCiAgICAgIGRhdGE6IHsNCiAgICAgICAga29kZToga29kZSwNCiAgICAgICAganVtbGFoQmFyYW5nOiAkKCIjanVtbGFoQmFyYW5nIikudmFsKCkNCiAgICAgIH0sDQogICAgICB1cmw6IHRoaXMudXJsICsgIiZ0aXBlPXNhdmVEYXRhIiwNCiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsNCiAgICAgICAgdmFyIHJlc3AgPSBldmFsKCIoIiArIGRhdGEgKyAiKSIpOw0KICAgICAgICBkZWxFbGVtKGNvdmVyKTsNCiAgICAgICAgaWYgKHJlc3AuZXJyID09ICIiKSB7DQogICAgICAgICAgYWxlcnQoIkRhdGEgYmVyaGFzaWwgZGlzaW1wYW4iKTsNCiAgICAgICAgICBtZS5DbG9zZSgpOw0KICAgICAgICAgIG1lLnJlZnJlc2hMaXN0KHRydWUpOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIGFsZXJ0KHJlc3AuZXJyKTsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0pOw0KICB9LA0KICBzdW06IGZ1bmN0aW9uKGlkKSB7DQogICAgdmFyIGlkID0gaWQ7DQogICAgdmFyIGlucHV0SnVtbGFoID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImp1bWxhaCIgKyBpZCkudmFsdWU7DQogICAgdmFyIGhhcmdhU2F0dWFuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImhhcmdhIiArIGlkKS52YWx1ZTsNCiAgICB2YXIgcmVzdWx0ID0gcGFyc2VJbnQoaW5wdXRKdW1sYWgpICogcGFyc2VJbnQoaGFyZ2FTYXR1YW4pOw0KDQogICAgaWYgKGhhcmdhU2F0dWFuID09ICIiKSB7DQogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiaW5wdXRUb3RhbCIgKyBpZCkudGV4dENvbnRlbnQgPSAiIjsNCiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJiYW50dWFuSCIgKyBpZCkudGV4dENvbnRlbnQgPSAiIjsNCiAgICB9IGVsc2Ugew0KICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoDQogICAgICAgICJiYW50dWFuSCIgKyBpZA0KICAgICAgKS50ZXh0Q29udGVudCA9IHRoaXMuZm9ybWF0Q3VycmVuY3koaGFyZ2FTYXR1YW4pOw0KICAgIH0NCg0KICAgIGlmIChpbnB1dEp1bWxhaCA8IDApIHsNCiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJqdW1sYWgiICsgaWQpLnZhbHVlID0gIiI7DQogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYmFudHVhbkoiICsgaWQpLnRleHRDb250ZW50ID0gIiI7DQogICAgfSBlbHNlIHsNCiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKA0KICAgICAgICAiYmFudHVhbkoiICsgaWQNCiAgICAgICkudGV4dENvbnRlbnQgPSB0aGlzLmZvcm1hdEN1cnJlbmN5KGlucHV0SnVtbGFoKTsNCiAgICB9DQoNCiAgICBpZiAoIWlzTmFOKHJlc3VsdCkpIHsNCiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKA0KICAgICAgICAiaW5wdXRUb3RhbCIgKyBpZA0KICAgICAgKS50ZXh0Q29udGVudCA9IHRoaXMuZm9ybWF0Q3VycmVuY3kocmVzdWx0KTsNCiAgICB9DQoNCiAgICAvLyAJCSQuYWpheCh7DQogICAgLy8gCXR5cGU6J1BPU1QnLA0KICAgIC8vIAlkYXRhOnsNCiAgICAvLyAJCQlpZCA6IGlkLA0KICAgIC8vIAkJCWhhcmdhIDogaGFyZ2FTYXR1YW4sDQogICAgLy8gCQkJanVtbGFoIDogaW5wdXRKdW1sYWgNCiAgICAvLyAJCSB9LA0KICAgIC8vICAgCXVybDogdGhpcy51cmwrJyZ0aXBlPVNpbXBhbkRhdGEnLA0KICAgIC8vICAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsNCiAgICAvLyAJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsNCiAgICAvLw0KICAgIC8vICAgCX0NCiAgICAvLyB9KTsNCiAgfSwNCiAgZm9ybWF0Q3VycmVuY3k6IGZ1bmN0aW9uKG51bSkgew0KICAgIG51bSA9IG51bS50b1N0cmluZygpLnJlcGxhY2UoL1wkfFwsL2csICIiKTsNCiAgICBpZiAoaXNOYU4obnVtKSkgbnVtID0gIjAiOw0KICAgIHNpZ24gPSBudW0gPT0gKG51bSA9IE1hdGguYWJzKG51bSkpOw0KICAgIG51bSA9IE1hdGguZmxvb3IobnVtICogMTAwICsgMC41MDAwMDAwMDAwMSk7DQogICAgY2VudHMgPSBudW0gJSAxMDA7DQogICAgbnVtID0gTWF0aC5mbG9vcihudW0gLyAxMDApLnRvU3RyaW5nKCk7DQogICAgaWYgKGNlbnRzIDwgMTApIGNlbnRzID0gIjAiICsgY2VudHM7DQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBNYXRoLmZsb29yKChudW0ubGVuZ3RoIC0gKDEgKyBpKSkgLyAzKTsgaSsrKQ0KICAgICAgbnVtID0NCiAgICAgICAgbnVtLnN1YnN0cmluZygwLCBudW0ubGVuZ3RoIC0gKDQgKiBpICsgMykpICsNCiAgICAgICAgIi4iICsNCiAgICAgICAgbnVtLnN1YnN0cmluZyhudW0ubGVuZ3RoIC0gKDQgKiBpICsgMykpOw0KICAgIHJldHVybiAoc2lnbiA\",
    "size": "15789"
}