{
    "namaFile": "pages\/perencanaanKeuangan\/anggaranKas\/anggaranKasSKPD31.php",
    "lastUpdate": "2018-08-23+11:11:31.93",
    "contentFile": "<?php

class anggaranKasSKPD31Obj  extends configClass{
	var $Prefix = 'anggaranKasSKPD31';
	var $elCurrPage="HalDefault";
	var $SHOW_CEK = TRUE;
	var $TblName = "tabel_dpa"; //daftar
	var $TblName_Hapus = 'tabel_anggaran';
	var $MaxFlush = 10;
	var $TblStyle = array( 'koptable', 'cetak','cetak'); //berdasar mode
	var $ColStyle = array( 'GarisDaftar', 'GarisCetak','GarisCetak');
	var $KeyFields = array('id');
	var $FieldSum = array();
	var $SumValue = array();
	var $FieldSum_Cp1 = array( 14, 13, 13);
	var $FieldSum_Cp2 = array( 1, 1, 1);
	var $checkbox_rowspan = 3;
	var $PageTitle = 'PENETAPAN RKBMD PENGADAAN';
	var $PageIcon = 'images/perencanaan_ico.png';
	var $pagePerHal ='';
	var $cetak_xls=TRUE ;
	var $fileNameExcel='usulansk.xls';
	var $Cetak_Judul = 'Daftar Standar Kebutuhan Barang Maksimal';
	var $Cetak_Mode=2;
	var $Cetak_WIDTH = '30cm';
	var $Cetak_OtherHTMLHead;
	var $FormName = 'anggaranKasSKPD31Form';
	var $kode_skpd = '';
	var $modul = "RKA";
	var $nomorUrutTahap = "";
	var $jenisAnggaran = "";
	var $idTahap = "";
	var $username = "";
  var $nomorKolom = 1;
	var $jenisDPA = "3.1";
	var $nomorCheckBox = 0;
	var $kondisiRekening = " and k='6' and l = '1'";

	function setTitle(){
		return "ANGGARAN KAS-SKPD $this->jenisDPA PEMBIAYAAN PENERIMAAN";
	}
	function setPage_HeaderOther(){
		return $this->getPageHeader($_GET['Pg']);
	}
	function setPage_Header($IconPage='', $TitlePage=''){
		return createHeaderPage($this->PageIcon, "ANGGARAN KAS-SKPD $this->jenisAnggaran ");
	}
	function setMenuEdit(){
			 	$listMenu =
				"<td>".genPanelIcon("javascript:".$this->Prefix.".checkAlokasi()","alokasi.jpg","Alokasi", 'Alokasi')."</td>";
		 return $listMenu;
	}

   	function setMenuView(){
		return
			"<td>".genPanelIcon("javascript:".$this->Prefix.".Laporan()","print_f2.png",'Laporan',"Laporan")."</td>";
	}
	function nullChecker($angka){
			if(empty($angka)){
					$angka = "";
			}
			return $angka;
	}
	function setCetak_Header($Mode=''){
		global $Main, $HTTP_COOKIE_VARS;
		return
			"<table style='width:100%' border=\"0\">
			<tr>
				<td class=\"judulcetak\">".$this->setCetakTitle()."</td>
			</tr>
			</table>";
	}

	function set_selector_other2($tipe){
	 global $Main;
	 $cek = ''; $err=''; $content=''; $json=TRUE;

	 return	array ('cek'=>$cek, 'err'=>$err, 'content'=>$content, 'json'=>$json);
	}
	function generateDate($tanggal){
			$tanggal = explode("-",$tanggal);
			$tanggal = $tanggal[2]."-".$tanggal[1]."-".$tanggal[0];
			return $tanggal;
	}
	function set_selector_other($tipe){
	 global $Main;
	 $cek = ''; $err=''; $content=''; $json=TRUE;

	  switch($tipe){
			case 'saveAlokasi' : {
		  foreach ($_REQUEST as $key => $value) {
		      $$key = $value;
		  }
		    if(empty($jenisAlokasi)){
		      $err = "Pilih jenis alokasi";
		    }
		    if($jenisAlokasi == 'BULANAN'){
		      if( $jan == '' || $feb == '' || $mar == '' || $apr == '' || $mei == '' || $jun == '' || $jul == '' || $agu == '' || $sep == '' || $okt == '' || $nop == '' || $des == ''   ){
		        $err = "Lengkapi alokasi";
		      }
		    }
		    if($jenisAlokasi == 'TRIWULAN'   ){
		      if( $mar == '' ||  $jun == '' ||  $sep == '' ||  $des == ''   ){
		        $err = "Lengkapi alokasi";
		      }
		    }
		    if($jumlahHargaAlokasi != $jumlahHargaForm){
		      $err = "Jumlah Alokasi Salah ";
		    }

		    if($err == ""){
		     	$getDataDPA = $this->sqlArray($this->sqlQuery("select * from tabel_dpa where id = '$idDPA'"));
					foreach ($getDataDPA as $key => $value) {
				      $$key = $value;
				  }
		      if(mysql_num_rows($this->sqlQuery("select * from anggaran_kas where tahun_anggaran ='$this->tahunAnggaran' and jenis_anggaran ='$this->jenisAnggaran' and c1 ='$c1' and c='$c' and d ='$d'  and k='$k' and l='$l' and m='$m' and n ='$n' and o ='$o'  and jenis_dpa ='$this->jenisDPA' and id_rincian_belanja = '$id_rincian_belanja' and id_dpa='$idDPA' ")) == 0){
		        $data = array(
		              'c1' => $c1,
		              'c' => $c,
		              'd' => $d,

		              'k' => $k,
		              'l' => $l,
		              'm' => $m,
		              'n' => $n,
		              'o' => $o,
		              'id_rincian_belanja' => $id_rincian_belanja,
		              'id_dpa' => $idDPA,
		              'total' => $jumlahHarga,
		              'jenis_alokasi_kas' => $jenisAlokasi,
		              "alokasi_jan" => $jan,
		              "alokasi_feb" => $feb,
		              "alokasi_mar" => $mar,
		              "alokasi_apr" => $apr,
		              "alokasi_mei" => $mei,
		              "alokasi_jun" => $jun,
		              "alokasi_jul" => $jul,
		              "alokasi_agu" => $agu,
		              "alokasi_sep" => $sep,
	                "alokasi_okt" => $okt,
		              "alokasi_nop" => $nop,
		              "alokasi_des" => $des,
		              "jenis_dpa" => $this->jenisDPA,
		              "tahun_anggaran" => $this->tahunAnggaran,
		              "jenis_anggaran" => $this->jenisAnggaran
		              );
		        $cek = $this->sqlInsert('anggaran_kas',$data);
		        $this->sqlQuery($this->sqlInsert('anggaran_kas',$data));
		      }else{
		        $grepId = $this->sqlArray($this->sqlQuery("select * from anggaran_kas where tahun_anggaran ='$this->tahunAnggaran' and jenis_anggaran ='$this->jenisAnggaran' and c1 ='$c1' and c='$c' and d ='$d'  and k='$k' and l='$l' and m='$m' and n ='$n' and o ='$o'  and jenis_dpa = '$this->jenisDPA' and id_rincian_belanja = '$id_rincian_belanja' and id_dpa='$idDPA' "));
		        $id = $grepId['id'];
		        $data = array(
		                'jenis_alokasi_kas' => $jenisAlokasi,
		                "alokasi_jan" => $jan,
		                "alokasi_feb" => $feb,
		                "alokasi_mar" => $mar,
		                "alokasi_apr" => $apr,
		                "alokasi_mei" => $mei,
		                "alokasi_jun" => $jun,
		                "alokasi_jul" => $jul,
		                "alokasi_agu" => $agu,
		                "alokasi_sep" => $sep,
	                  "alokasi_okt" => $okt,
		                "alokasi_nop" => $nop,
		                "alokasi_des" => $des,

		                );
		        $cek = $this->sqlUpdate('anggaran_kas',$data, "id = '$id' ");
		        $this->sqlQuery($this->sqlUpdate('anggaran_kas',$data, "id = '$id' "));
		      }
		    }
		break;
		}

		case 'formAlokasi':{
				$fm = $this->formAlokasi();
				$cek = $fm['cek'];
				$err = $fm['err'];
				$content = $fm['content'];
		break;
		}
		case 'quickFormAlokasi':{
				$fm = $this->quickFormAlokasi($_REQUEST['idDPA']);
				$cek = $fm['cek'];
				$err = $fm['err'];
				$content = $fm['content'];
		break;
		}
		case 'quickFormAlokasiTriwulan':{
				$fm = $this->quickFormAlokasiTriwulan($_REQUEST['idDPA']);
				$cek = $fm['cek'];
				$err = $fm['err'];
				$content = $fm['content'];
		break;
		}
		case 'formAlokasiTriwulan':{
				$fm = $this->formAlokasiTriwulan();
				$cek = $fm['cek'];
				$err = $fm['err'];
				$content = $fm['content'];
		break;
		}
		case 'checkAlokasi':{
			foreach ($_REQUEST as $key => $value) {
				  $$key = $value;
			}
			if(empty($filterUrusan)){
 		 		$err = "Pilih Urusan";
 		  }elseif(empty($filterBidang)){
 		 		$err = "Pilih Bidang";
 		  }elseif(empty($filterSKPD)){
 		 		$err = "Pilih SKPD";
 	  	}
			if(empty($err)){
				$getDataDPA = $this->sqlArray($this->sqlQuery("select * from tabel_dpa where id = '".$anggaranKasSKPD31_cb[0]."'"));
				foreach ($getDataDPA as $key => $value) {
					  $$key = $value;
				}

				$jenisAlokasi = "";
				if($this->sqlNumRow($this->sqlQuery("select * from anggaran_kas where id_dpa = '".$anggaranKasSKPD31_cb[0]."'")) != 0){
					$getAlokasi = $this->sqlArray($this->sqlQuery("select * from anggaran_kas where id_dpa = '".$anggaranKasSKPD31_cb[0]."'"));
					$jenisAlokasi = $getAlokasi['jenis_alokasi_kas'];
				}
			}


			$content = array("jenis" => $jenisAlokasi)	;

		break;
		}
		case 'quickCheckAlokasi':{
			foreach ($_REQUEST as $key => $value) {
				  $$key = $value;
			}

			if(empty($err)){
				$getDataDPA = $this->sqlArray($this->sqlQuery("select * from tabel_dpa where id = '".$idDPA."'"));
				foreach ($getDataDPA as $key => $value) {
					  $$key = $value;
				}

				$jenisAlokasi = "";
				if($this->sqlNumRow($this->sqlQuery("select * from anggaran_kas where id_dpa = '".$idDPA."'")) != 0){
					$getAlokasi = $this->sqlArray($this->sqlQuery("select * from anggaran_kas where id_dpa = '".$idDPA."'"));
					$jenisAlokasi = $getAlokasi['jenis_alokasi_kas'];
				}
			}


			$content = array("jenis" => $jenisAlokasi)	;

		break;
		}

		case 'Baru':{
			foreach ($_REQUEST as $key => $value) {
					$$key = $value;
			}
			$this->sqlQuery("delete from temp_remove_rka_21 where username = '$this->username'");
			$this->sqlQuery("delete from temp_rekening_rka_belanja_langsung where username = '$this->username'");
			$this->sqlQuery("delete from temp_rincian_belanja_langsung where username = '$this->username'");
			$this->sqlQuery("delete from temp_sub_rincian_belanja_langsung where username = '$this->username'");
			$kodeSKPD = $filterUrusan.".".$filterBidang.".".$filterSKPD;
			$kodeProgramKegiatan = $filterConcatProgram.".".$filterQ;
			$err = $this->checkSyncDpa($kodeSKPD,$this->jenisDPA);
			if(empty($err)){
				$getDataRka = $this->sqlQuery("select * from tabel_dpa where concat(c1,'.',c,'.',d) = '$kodeSKPD'  and id_tahap = '$this->idTahap' and jenis_dpa = '$this->jenisDPA' ");
				while ($dataRka = $this->sqlArray($getDataRka)) {
					$kodeRekening = $dataRka['k'].".".$dataRka['l'].".".$dataRka['m'].".".$dataRka['n'].".".$dataRka['o'];
					$getDataRincianBelanja = $this->sqlArray($this->sqlQuery("select * from rincian_belanja where id = '".$dataRka['id_rincian_belanja']."'"));
					if($this->sqlNumRow($this->sqlQuery("select * from temp_rekening_rka_belanja_langsung where concat(k,'.',l,'.',m,'.',n,'.',o) = '$kodeRekening' and username='$this->username'")) == 0){
						$dataTempRekening = array(
							"k" => $dataRka['k'],
							"l" => $dataRka['l'],
							"m" => $dataRka['m'],
							"n" => $dataRka['n'],
							"o" => $dataRka['o'],
							"sumber_dana" => $getDataRincianBelanja['sumber_dana'],
							"username" => $this->username,
						);
						$queyInsertTempRekeningBelanja = $this->sqlInsert("temp_rekening_rka_belanja_langsung",$dataTempRekening);
						$this->sqlQuery($queyInsertTempRekeningBelanja);
						$cek .= $queyInsertTempRekeningBelanja;
					}
					$getIdRekeningBelanja = $this->sqlArray($this->sqlQuery("select * from temp_rekening_rka_belanja_langsung where concat(k,'.',l,'.',m,'.',n,'.',o) = '$kodeRekening' and username='$this->username'"));
					$idRekeningBelanja = $getIdRekeningBelanja['id'];
					if($this->sqlNumRow($this->sqlQuery("select * from temp_rincian_belanja_langsung where id_rekening_belanja = '$idRekeningBelanja' and uraian = '".$getDataRincianBelanja['nama_rincian_belanja']."' and username = '$this->username'")) == 0 ){
						$dataTempRincianBelanja = array(
							"id_rekening_belanja" => $idRekeningBelanja,
							"uraian" => $getDataRincianBelanja['nama_rincian_belanja'],
							"username" => $this->username,
						);
						$queryInsertTempRincianBelanja = $this->sqlInsert("temp_rincian_belanja_langsung",$dataTempRincianBelanja);
						$this->sqlQuery($queryInsertTempRincianBelanja);
						$cek .= $queryInsertTempRincianBelanja;

					}
					$getIdRincianBelanja = $this->sqlArray($this->sqlQuery("select * from temp_rincian_belanja_langsung where id_rekening_belanja = '$idRekeningBelanja' and uraian = '".$getDataRincianBelanja['nama_rincian_belanja']."' and username = '$this->username'"));
					$idRincianBelanja = $getIdRincianBelanja['id'];

					$dataTempSubRincianBelanja = array(
						"id_rincian_belanja" => $idRincianBelanja,
						"uraian" => $dataRka['rincian_perhitungan'],
						"f" => $dataRka['f'],
						"g" => $dataRka['g'],
						"h" => $dataRka['h'],
						"i" => $dataRka['i'],
						"j" => $dataRka['j'],
						"j1" => $dataRka['j1'],
						"harga_satuan" => $dataRka['harga_satuan'],
						"volume1" => $dataRka['jumlah1'],
						"volume2" => $dataRka['jumlah2'],
						"volume3" => $dataRka['jumlah3'],
						"satuan1" => $dataRka['satuan1'],
						"satuan2" => $dataRka['satuan2'],
						"satuan3" => $dataRka['satuan3'],
						"rincian_volume" => $dataRka['rincian_volume'],
						"id_rka" => $dataRka['id'],
						"jenis_atribusi" => $dataRka['jenis_atribusi'],
						"username" => $this->username,
					);
					$queryInsertTempSubRincianBelanja = $this->sqlInsert("temp_sub_rincian_belanja_langsung",$dataTempSubRincianBelanja);
					$this->sqlQuery($queryInsertTempSubRincianBelanja);
				}
			}
		break;
	   }


		 /*
 		______ ___________ ___________ _____
 		| ___ \  ___| ___ \  _  | ___ \_   _|
 		| |_/ / |__ | |_/ / | | | |_/ / | |
 		|    /|  __||  __/| | | |    /  | |
 		| |\ \| |___| |   \ \_/ / |\ \  | |
 		\_| \_\____/\_|    \___/\_| \_| \_/


 		*/

 		case 'Laporan':{
 			$fm = $this->Laporan();
 			$cek .= $fm['cek'];
 			$err = $fm['err'];
 			$content = $fm['content'];
 			break;
 		}
 		case 'newTandaTangangan':{
 			$fm = $this->newTandaTangangan();
 			$cek .= $fm['cek'];
 			$err = $fm['err'];
 			$content = $fm['content'];
 			break;
 		}
 		case 'pilihPangkat':{
 			global $Main;
 			$cek = ''; $err=''; $content=''; $json=TRUE;

 			$idpangkat = $_REQUEST['pangkatakhir'];

 			$query = "select concat(gol,'/',ruang)as nama FROM ref_pangkat WHERE nama='$idpangkat'" ;
 			$get=$this->sqlArray($this->sqlQuery($query));$cek.=$query;
 			$content=$get['nama'];
 			break;
 		}
 		case 'saveNewTandaTangan':{
 			global $Main;
 			$kode1= '0';
 			$kode2='00';
 			$kode3= '00';
 			$kode4= '00';
 			$kode5= '000';
 			$namapegawai= $_REQUEST['namapegawai'];
 			$nippegawai= $_REQUEST['nippegawai'];

 			$p1= $_REQUEST['pangkatakhir'];

 			$golang_akhir= $_REQUEST['golang_akhir'];
 			$golongan = explode("/", $golang_akhir);
 			$jabatan= $_REQUEST['jabatan'];
 			$eselon= $_REQUEST['eselon_akhir'];
 			$kategori= $_REQUEST['kategori'];


 			$oldy=$this->sqlArray(
 			 $this->sqlQuery(
 				 "select count(*) as cnt from ref_tandatangan where nip='$nippegawai'"
 			 ));
 			if( $err=='' && $namapegawai =='' ) $err= 'NAMA PEGAWAI Belum Di Isi !!';
 			if( $err=='' && $nippegawai =='' ) $err= 'NIP Belum Di Isi !!';
 			if( $err=='' && $p1 =='' ) $err= 'PANGKAT/ GOL/ RUANG Belum Di Pilih !!';
 			if( $err=='' && $jabatan =='' ) $err= 'JABATAN Belum Di Isi !!';
 			if( $err=='' && $kategori =='' ) $err= 'Kategori Belum Di Pilih !!';

 				 if($fmST == 0){
 				 if($err=='' && $oldy['cnt']>0) $err="NIP '$nippegawai' Sudah Ada";
 					 if($err==''){

 						 $aqry = "INSERT into ref_tandatangan (c1,c,d,e,e1,nama,nip,jabatan,pangkat,gol,ruang,eselon,kategori_tandatangan) values('$kode1','$kode2','$kode3','$kode4','$kode5','$namapegawai','$nippegawai','$jabatan','$p1','$golongan[0]','$golongan[1]','$eselon',3)";  $cek .= $aqry;
 						 $qry = $this->sqlQuery($aqry);
 						 $content = array('combottd' => cmbQuery('idPenandaTangan',$d,"SELECT Id, nama from ref_tandatangan where kategori_tandatangan = '3' and c1 = '".$kode1."' and c = '".$kode2."' and d = '".$kode3."' and e = '".$kode4."' and e1 = '".$kode5."'",'onchange=rka.refreshList(true);','-- TTD --'));
 					 }
 				 }else{
 					 if($err==''){
 					 $aqry = "UPDATE ref_tandatangan SET nama='$namapegawai', nip='$nippegawai', jabatan='$jabatan' ,pangkat='$p1', gol='$golongan[0]' ,ruang='$golongan[1]',eselon='$eselon' ,kategori_tandatangan='$kategori' WHERE Id='".$idplh."'";  $cek .= $aqry;
 							 $qry = $this->sqlQuery($aqry) or die(mysql_error());
 						 }
 				 }
 			break;
 		}
 		case 'viewLaporan':{
 			$json = FALSE;
 			$this->viewLaporan();
 			break;
}
		   default:{
				$other = $this->set_selector_other2($tipe);
				$cek = $other['cek'];
				$err = $other['err'];
				$content=$other['content'];
				$json=$other['json'];
		 break;
		 }
	 }//end switch

		return	array ('cek'=>$cek, 'err'=>$err, 'content'=>$content, 'json'=>$json);
   }



   function setPage_OtherScript(){
    $scriptload =
          "
					<style type='text/css'>
							.uraianList:hover{
									color:blue;
							}
					</style>
					<script>
            $(document).ready(function(){
              ".$this->Prefix.".loading();
            });
          </script>";
    return
      "
      <script src='js/perencanaanKeuangan/filterSKPD.js' type='text/javascript'></script>
			<script type='text/javascript' src='js/popup_rekening/popupRekening.js' language='JavaScript' ></script>
      <script type='text/javascript' src='js/perencanaanKeuangan/anggaranKas/anggaranKasSKPD31.js' language='JavaScript' ></script>
			<script type='text/javascript' src='js/master/standarSatuanHarga/popupSSH.js' language='JavaScript' ></script>
      <link rel='stylesheet' href='datepicker/jquery-ui.css'>
      <script src='datepicker/jquery-1.12.4.js'></script>
      <script src='datepicker/jquery-ui.js'></script>
      ".
      $scriptload;
  }
	//daftar =================================
	function setKolomHeader($Mode=1, $Checkbox=''){
		foreach ($_REQUEST as $key => $value) {
  		  			$$key = $value;
  	 }
		 if($viewAlokasi == "BULANAN"){
			 $kolomJanuari = "<th class='th01' width='120'  >JANUARI</th>";
			 $kolomFebruari = "<th class='th01' width='120'  >FEBRUARI</th>";
			 $kolomMaret = "
			 		   <th class='th01' width='120'>MARET</th>";
			 $kolomApril = "
			 		   <th class='th01' width='120'   >APRIL</th>";
			 $kolomMei = "
			 		   <th class='th01' width='120'   >MEI</th>";
			 $kolomJuni = "
			 		   <th class='th01' width='120'   >JUNI</th>";
			 $kolomJuli = "
			 		   <th class='th01' width='120'   >JULI</th>";
			 $kolomAgustus = "
			 		   <th class='th01' width='120'  >AGUSTUS</th>";
			 $kolomSeptember = "
			 		   <th class='th01' width='120'   >SEPTEMBER</th>";
			 $kolomOktober = "
			 		   <th class='th01' width='120'   >OKTOBER</th>";
			 $kolomNopember = "
			 		   <th class='th01' width='120'  >NOVEMBER</th>";
			 $kolomDesember = "
			 		   <th class='th01' width='120'   >DESEMBER</th>";
		 }elseif($viewAlokasi == "TRIWULAN"){
			 $kolomJanuari = "<th class='th01' width='120'  >TRIWULAN I</th>";
			 $kolomFebruari = "<th class='th01' width='120'  >TRIWULAN II</th>";
			 $kolomMaret = " <th class='th01' width='120'>TRIWULAN III</th>";
			 $kolomApril = " <th class='th01' width='120'>TRIWULAN IV</th>";
		 }elseif($viewAlokasi == "SEMESTER"){
			 $kolomJanuari = "<th class='th01' width='120'  >SEMESTER I</th>";
			 $kolomFebruari = "<th class='th01' width='120'  >SEMESTER II</th>";
		 }


		 $headerTable =
		 "<thead>
			<tr>

			<th class='th01' style='width:1%;' >NO</th>
			<th class='th01' style='width:1%;'> </th>
			<th class='th01' style='width:1%;'>KODE REKENING </th>
			<th class='th01' style='width:40%;'> URAIAN </th>
			<th class='th01' style='width:10%;'>ANGGARAN</th>
			".$kolomJanuari."
			".$kolomFebruari."
			".$kolomMaret."
			".$kolomApril."
			".$kolomMei."
			".$kolomJuni."
			".$kolomJuli."
			".$kolomAgustus."
			".$kolomSeptember."
			".$kolomOktober."
			".$kolomNopember."
			".$kolomDesember."
			</tr>
			</thead>";
		return $headerTable;
	}



	function setKolomData($no, $isi, $Mode, $TampilCheckBox){
	 global $Ref;
	 foreach ($isi as $key => $value) {
            $$key = $value;
   }
	 foreach ($_REQUEST as $key => $value) {
            $$key = $value;
   }
	 $kodeSKPD = $c1.".".$c.".".$d;

   $concatRekening = $c1.".".$c.".".$d.".".$k.".".$l.".".$m.".".$n.".".$o;
   $concatRincianBelanja = $c1.".".$c.".".$d.".".$k.".".$l.".".$m.".".$n.".".$o.".".$id_rincian_belanja;

		 if($this->nomorKolom % 2 == 1){
		   $rowClass = "row0";
		 }else{
		   $rowClass = "row1";
		 }
	   if(!in_array($concatRekening,$this->concatArray) ){
	    $this->concatArray[] = $concatRekening;
			$kodeRekening = $k.".".$l.".".$m.".".$n.".".$o;

			if($this->sqlNumRow($this->sqlQuery("select * from ref_rekening where concat(k,'.',l,'.',m,'.',n,'.',o) = '$kodeRekening'")) != 0){
				$getDataRekening = $this->sqlArray($this->sqlQuery("select * from ref_rekening where concat(k,'.',l,'.',m,'.',n,'.',o) = '$kodeRekening'"));
				$namaRekening = $getDataRekening['nm_rekening'];
			}else{
				$kodeRekening = "<span style='color:red'>x.x.x.xx.xxx</span>";
				$namaRekening = "<span style='color:red'>Belanja xxx</span>";
			}
			$getTotalAnggaran = $this->sqlArray($this->sqlQuery("select sum(total_harga) from tabel_dpa where jenis_dpa = '$this->jenisDPA' and concat(c1,'.',c,'.',d) = '$kodeSKPD'  and concat(k,'.',l,'.',m,'.',n,'.',o) = '$kodeRekening'   "));

			if($viewAlokasi == "BULANAN"){
				$getDataAnggaranKasRekening = $this->sqlArray($this->sqlQuery("select sum(alokasi_jan) as alokasi_jan, sum(alokasi_feb) as alokasi_feb, sum(alokasi_mar) as alokasi_mar, sum(alokasi_apr) as alokasi_apr, sum(alokasi_mei) as alokasi_mei, sum(alokasi_jun) as alokasi_jun, sum(alokasi_jul) as alokasi_jul, sum(alokasi_agu) as alokasi_agu, sum(alokasi_sep) as alokasi_sep, sum(alokasi_okt) as alokasi_okt, sum(alokasi_nop) as alokasi_nop, sum(alokasi_des) as alokasi_des from anggaran_kas where tahun_anggaran = '$this->tahunAnggaran' and jenis_anggaran ='$this->jenisAnggaran' and concat(c1,'.',c,'.',d) = '$kodeSKPD'   and concat(k,'.',l,'.',m,'.',n,'.',o) = '$kodeRekening' "));
				$kolomRekeningJanuari= "<td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getDataAnggaranKasRekening['alokasi_jan'],2)."</td>";
				$kolomRekeningFebruari= "<td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getDataAnggaranKasRekening['alokasi_feb'],2)."</td>";
				$kolomRekeningMaret= "<td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getDataAnggaranKasRekening['alokasi_mar'],2)."</td>";
				$kolomRekeningApril= "<td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getDataAnggaranKasRekening['alokasi_apr'],2)."</td>";
				$kolomRekeningMei= "<td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getDataAnggaranKasRekening['alokasi_mei'],2)."</td>";
				$kolomRekeningJuni= "<td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getDataAnggaranKasRekening['alokasi_jun'],2)."</td>";
				$kolomRekeningJuli= "<td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getDataAnggaranKasRekening['alokasi_jul'],2)."</td>";
				$kolomRekeningAgustus= "<td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getDataAnggaranKasRekening['alokasi_agu'],2)."</td>";
				$kolomRekeningSeptember= "<td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getDataAnggaranKasRekening['alokasi_sep'],2)."</td>";
				$kolomRekeningOktober= "<td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getDataAnggaranKasRekening['alokasi_okt'],2)."</td>";
				$kolomRekeningNopember= "<td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getDataAnggaranKasRekening['alokasi_nop'],2)."</td>";
				$kolomRekeningDesember= "<td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getDataAnggaranKasRekening['alokasi_des'],2)."</td>";
			}elseif($viewAlokasi == "TRIWULAN"){
 			 $getDataAnggaranKasRekening = $this->sqlArray($this->sqlQuery("select sum(alokasi_jan) as alokasi_jan, sum(alokasi_feb) as alokasi_feb, sum(alokasi_mar) as alokasi_mar, sum(alokasi_apr) as alokasi_apr, sum(alokasi_mei) as alokasi_mei, sum(alokasi_jun) as alokasi_jun, sum(alokasi_jul) as alokasi_jul, sum(alokasi_agu) as alokasi_agu, sum(alokasi_sep) as alokasi_sep, sum(alokasi_okt) as alokasi_okt, sum(alokasi_nop) as alokasi_nop, sum(alokasi_des) as alokasi_des from anggaran_kas where tahun_anggaran = '$this->tahunAnggaran' and jenis_anggaran ='$this->jenisAnggaran' and concat(c1,'.',c,'.',d) = '$kodeSKPD'   and concat(k,'.',l,'.',m,'.',n,'.',o) = '$kodeRekening' "));
			 $kolomRekeningJanuari= "<td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getDataAnggaranKasRekening['alokasi_jan'] + $getDataAnggaranKasRekening['alokasi_feb'] + $getDataAnggaranKasRekening['alokasi_mar'],2)."</td>";
 			 $kolomRekeningFebruari= "<td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getDataAnggaranKasRekening['alokasi_apr'] + $getDataAnggaranKasRekening['alokasi_mei'] + $getDataAnggaranKasRekening['alokasi_jun'],2)."</td>";
 			 $kolomRekeningMaret= "<td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getDataAnggaranKasRekening['alokasi_jul'] + $getDataAnggaranKasRekening['alokasi_agu'] + $getDataAnggaranKasRekening['alokasi_sep'],2)."</td>";
 			 $kolomRekeningApril= "<td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getDataAnggaranKasRekening['alokasi_okt'] + $getDataAnggaranKasRekening['alokasi_nop'] + $getDataAnggaranKasRekening['alokasi_des'],2)."</td>";
 		 }elseif($viewAlokasi == "SEMESTER"){
			 $getDataAnggaranKasRekening = $this->sqlArray($this->sqlQuery("select sum(alokasi_jan) as alokasi_jan, sum(alokasi_feb) as alokasi_feb, sum(alokasi_mar) as alokasi_mar, sum(alokasi_apr) as alokasi_apr, sum(alokasi_mei) as alokasi_mei, sum(alokasi_jun) as alokasi_jun, sum(alokasi_jul) as alokasi_jul, sum(alokasi_agu) as alokasi_agu, sum(alokasi_sep) as alokasi_sep, sum(alokasi_okt) as alokasi_okt, sum(alokasi_nop) as alokasi_nop, sum(alokasi_des) as alokasi_des from anggaran_kas where tahun_anggaran = '$this->tahunAnggaran' and jenis_anggaran ='$this->jenisAnggaran' and concat(c1,'.',c,'.',d) = '$kodeSKPD'   and concat(k,'.',l,'.',m,'.',n,'.',o) = '$kodeRekening' "));
 			 $kolomRekeningJanuari = "<td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getDataAnggaranKasRekening['alokasi_jan'] + $getDataAnggaranKasRekening['alokasi_feb'] + $getDataAnggaranKasRekening['alokasi_mar'] + $getDataAnggaranKasRekening['alokasi_apr'] + $getDataAnggaranKasRekening['alokasi_mei'] + $getDataAnggaranKasRekening['alokasi_jun'],2)."</td>";
			 $kolomRekeningFebruari = "<td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getDataAnggaranKasRekening['alokasi_jul'] + $getDataAnggaranKasRekening['alokasi_agu'] + $getDataAnggaranKasRekening['alokasi_sep'] + $getDataAnggaranKasRekening['alokasi_okt'] + $getDataAnggaranKasRekening['alokasi_nop'] + $getDataAnggaranKasRekening['alokasi_des'],2)."</td>";
		 }
			$kolomRekening = "
	       <tr class='$rowClass' valign='top'>
				 	<td align='center' class='GarisDaftar' >$this->nomorKolom</td>
					<td align='center' class='GarisDaftar' ></td>
				 	<td align='left' class='GarisDaftar' ><span style=' font-weight:bold;'>$kodeRekening </span></td>
				 	<td align='left' class='GarisDaftar' ><span style=' font-weight:bold;'> $namaRekening</span></td>
	         <td align='right' class='GarisDaftar' ><b>".$this->numberFormat($getTotalAnggaran['sum(total_harga)'],2)."</td>
					 $kolomRekeningJanuari
					 $kolomRekeningFebruari
					 $kolomRekeningMaret
					 $kolomRekeningApril
					 $kolomRekeningMei
					 $kolomRekeningJuni
					 $kolomRekeningJuli
					 $kolomRekeningAgustus
					 $kolomRekeningSeptember
					 $kolomRekeningOktober
					 $kolomRekeningNopember
					 $kolomRekeningDesember
	       </tr>
	     ";
	     $this->nomorKolom  += 1;
	     $this->nomorCheckBox  += 1;

	   }
		 if($this->nomorKolom % 2 == 1){
		   $rowClass = "row0";
		 }else{
		   $rowClass = "row1";
		 }

		 if($filterSubRincian == 'show'){
			 $kodeRekening = $k.".".$l.".".$m.".".$n.".".$o;
			 if($this->sqlNumRow($this->sqlQuery("select * from ref_rekening where concat(k,'.',l,'.',m,'.',n,'.',o) = '$kodeRekening'")) != 0){
				 $getDataRekening = $this->sqlArray($this->sqlQuery("select * from ref_rekening where concat(k,'.',l,'.',m,'.',n,'.',o) = '$kodeRekening'"));
				 $namaRekening = $getDataRekening['nm_rekening'];
			 }else{
				 $kodeRekening = "<span style='color:red'>x.x.x.xx.xxx</span>";
				 $namaRekening = "<span style='color:red'>Belanja xxx</span>";
			 }
			 if($viewAlokasi == "BULANAN"){
				 $getDataAnggaranKasRekening = $this->sqlArray($this->sqlQuery("select sum(alokasi_jan) as alokasi_jan, sum(alokasi_feb) as alokasi_feb, sum(alokasi_mar) as alokasi_mar, sum(alokasi_apr) as alokasi_apr, sum(alokasi_mei) as alokasi_mei, sum(alokasi_jun) as alokasi_jun, sum(alokasi_jul) as alokasi_jul, sum(alokasi_agu) as alokasi_agu, sum(alokasi_sep) as alokasi_sep, sum(alokasi_okt) as alokasi_okt, sum(alokasi_nop) as alokasi_nop, sum(alokasi_des) as alokasi_des from anggaran_kas where tahun_anggaran = '$this->tahunAnggaran' and jenis_anggaran ='$this->jenisAnggaran' and concat(c1,'.',c,'.',d) = '$kodeSKPD'   and concat(k,'.',l,'.',m,'.',n,'.',o) = '$kodeRekening' and id_rincian_belanja = '$id_rincian_belanja' and id_dpa = '$id' "));
				 $kolomRekeningJanuari= "<td align='right' class='GarisDaftar' >".$this->numberFormat($getDataAnggaranKasRekening['alokasi_jan'],2)."</td>";
				 $kolomRekeningFebruari= "<td align='right' class='GarisDaftar' >".$this->numberFormat($getDataAnggaranKasRekening['alokasi_feb'],2)."</td>";
				 $kolomRekeningMaret= "<td align='right' class='GarisDaftar' >".$this->numberFormat($getDataAnggaranKasRekening['alokasi_mar'],2)."</td>";
				 $kolomRekeningApril= "<td align='right' class='GarisDaftar' >".$this->numberFormat($getDataAnggaranKasRekening['alokasi_apr'],2)."</td>";
				 $kolomRekeningMei= "<td align='right' class='GarisDaftar' >".$this->numberFormat($getDataAnggaranKasRekening['alokasi_mei'],2)."</td>";
				 $kolomRekeningJuni= "<td align='right' class='GarisDaftar' >".$this->numberFormat($getDataAnggaranKasRekening['alokasi_jun'],2)."</td>";
				 $kolomRekeningJuli= "<td align='right' class='GarisDaftar' >".$this->numberFormat($getDataAnggaranKasRekening['alokasi_jul'],2)."</td>";
				 $kolomRekeningAgustus= "<td align='right' class='GarisDaftar' >".$this->numberFormat($getDataAnggaranKasRekening['alokasi_agu'],2)."</td>";
				 $kolomRekeningSeptember= "<td align='right' class='GarisDaftar' >".$this->numberFormat($getDataAnggaranKasRekening['alokasi_sep'],2)."</td>";
				 $kolomRekeningOktober= "<td align='right' class='GarisDaftar' >".$this->numberFormat($getDataAnggaranKasRekening['alokasi_okt'],2)."</td>";
				 $kolomRekeningNopember= "<td align='right' class='GarisDaftar' >".$this->numberFormat($getDataAnggaranKasRekening['alokasi_nop'],2)."</td>";
				 $kolomRekeningDesember= "<td align='right' class='GarisDaftar' >".$this->numberFormat($getDataAnggaranKasRekening['alokasi_des'],2)."</td>";
			 }elseif($viewAlokasi == "TRIWULAN"){
				 $getDataAnggaranKasRekening = $this->sqlArray($this->sqlQuery("select sum(alokasi_jan) as alokasi_jan, sum(alokasi_feb) as alokasi_feb, sum(alokasi_mar) as alokasi_mar, sum(alokasi_apr) as alokasi_apr, sum(alokasi_mei) as alokasi_mei, sum(alokasi_jun) as alokasi_jun, sum(alokasi_jul) as alokasi_jul, sum(alokasi_agu) as alokasi_agu, sum(alokasi_sep) as alokasi_sep, sum(alokasi_okt) as alokasi_okt, sum(alokasi_nop) as alokasi_nop, sum(alokasi_des) as alokasi_des from anggaran_kas where tahun_anggaran = '$this->tahunAnggaran' and jenis_anggaran ='$this->jenisAnggaran' and concat(c1,'.',c,'.',d) = '$kodeSKPD'   and concat(k,'.',l,'.',m,'.',n,'.',o) = '$kodeRekening' and id_rincian_belanja = '$id_rincian_belanja' and id_dpa = '$id' "));
				 $kolomRekeningJanuari= "<td align='right' class='GarisDaftar' >".$this->numberFormat($getDataAnggaranKasRekening['alokasi_jan'] + $getDataAnggaranKasRekening['alokasi_feb'] + $getDataAnggaranKasRekening['alokasi_mar'],2)."</td>";
				 $kolomRekeningFebruari= "<td align='right' class='GarisDaftar' >".$this->numberFormat($getDataAnggaranKasRekening['alokasi_apr'] + $getDataAnggaranKasRekening['alokasi_mei'] + $getDataAnggaranKasRekening['alokasi_jun'],2)."</td>";
				 $kolomRekeningMaret= "<td align='right' class='GarisDaftar' >".$this->numberFormat($getDataAnggaranKasRekening['alokasi_jul'] + $getDataAnggaranKasRekening['alokasi_agu'] + $getDataAnggaranKasRekening['alokasi_sep'],2)."</td>";
				 $kolomRekeningApril= "<td align='right' class='GarisDaftar' >".$this->numberFormat($getDataAnggaranKasRekening['alokasi_okt'] + $getDataAnggaranKasRekening['alokasi_nop'] + $getDataAnggaranKasRekening['alokasi_des'],2)."</td>";

			 }elseif($viewAlokasi == "SEMESTER"){
				 $getDataAnggaranKasRekening = $this->sqlArray($this->sqlQuery("select sum(alokasi_jan) as alokasi_jan, sum(alokasi_feb) as alokasi_feb, sum(alokasi_mar) as alokasi_mar, sum(alokasi_apr) as alokasi_apr, sum(alokasi_mei) as alokasi_mei, sum(alokasi_jun) as alokasi_jun, sum(alokasi_jul) as alokasi_jul, sum(alokasi_agu) as alokasi_agu, sum(alokasi_sep) as alokasi_sep, sum(alokasi_okt) as alokasi_okt, sum(alokasi_nop) as alokasi_nop, sum(alokasi_des) as alokasi_des from anggaran_kas where tahun_anggaran = '$this->tahunAnggaran' and jenis_anggaran ='$this->jenisAnggaran' and concat(c1,'.',c,'.',d) = '$kodeSKPD'   and concat(k,'.',l,'.',m,'.',n,'.',o) = '$kodeRekening' and id_rincian_belanja = '$id_rincian_belanja' and id_dpa = '$id' "));
				 $kolomRekeningJanuari = "<td align='right' class='GarisDaftar' >".$this->numberFormat($getDataAnggaranKasRekening['alokasi_jan'] + $getDataAnggaranKasRekening['alokasi_feb'] + $getDataAnggaranKasRekening['alokasi_mar'] + $getDataAnggaranKasRekening['alokasi_apr'] + $getDataAnggaranKasRekening['alokasi_mei'] + $getDataAnggaranKasRekening['alokasi_jun'],2)."</td>";
				 $kolomRekeningFebruari = "<td align='right' class='GarisDaftar' >".$this->numberFormat($getDataAnggaranKasRekening['alokasi_jul'] + $getDataAnggaranKasRekening['alokasi_agu'] + $getDataAnggaranKasRekening['alokasi_sep'] + $getDataAnggaranKasRekening['alokasi_okt'] + $getDataAnggaranKasRekening['alokasi_nop'] + $getDataAnggaranKasRekening['alokasi_des'],2)."</td>";
			 }
			 if($this->sqlNumRow($this->sqlQuery("select * from anggaran_kas where tahun_anggaran = '$this->tahunAnggaran' and jenis_anggaran ='$this->jenisAnggaran' and concat(c1,'.',c,'.',d) = '$kodeSKPD'   and concat(k,'.',l,'.',m,'.',n,'.',o) = '$kodeRekening' and id_rincian_belanja = '$id_rincian_belanja' and id_dpa = '$id' ")) !=0){
				 $colorAlokasi = "";
			 }else{
				 $colorAlokasi = "red";
			 }
			 $kolomSubRincianBelanja = "
					<tr class='$rowClass' valign='top' style='color:$colorAlokasi;'>
					 <td align='center' class='GarisDaftar' >$this->nomorKolom</td>
					 <td align='center' class='GarisDaftar' >$TampilCheckBox</td>
					 <td align='center' class='GarisDaftar' ></td>
					 <td align='left' class='GarisDaftar' ><span style='margin-left:5px; cursor:pointer;' onclick=$this->Prefix.quickCheckAlokasi($id); >- $rincian_perhitungan ( ".$this->numberFormat($volume)." X ".$this->numberFormat($harga_satuan,2).") </td>
						<td align='right' class='GarisDaftar' >".$this->numberFormat($total_harga,2)."</td>
						$kolomRekeningJanuari
						$kolomRekeningFebruari
						$kolomRekeningMaret
						$kolomRekeningApril
						$kolomRekeningMei
						$kolomRekeningJuni
						$kolomRekeningJuli
						$kolomRekeningAgustus
						$kolomRekeningSeptember
						$kolomRekeningOktober
						$kolomRekeningNopember
						$kolomRekeningDesember
					</tr>
				";
				$this->nomorKolom  += 1;
				$this->nomorCheckBox  += 1;

		 }


    $Koloms = array(
      array("VulnWalker", $kolomProgram.$kolomKegiatan.$kolomRekening.$kolomRincianBelanja.$kolomSubRincianBelanja)
     );
		 return $Koloms;
	}



  function genDaftarOpsi(){
   global $Ref, $Main;
	 foreach ($_REQUEST as $key => $value){
				 $$key = $value;
	 }
	 if(!isset($filterUrusan))$filterUrusan = $_COOKIE['cofmURUSAN'];
	 if(!isset($filterBidang))$filterBidang = $_COOKIE['cofmSKPD'];
	 if(!isset($filterSKPD))$filterSKPD = $_COOKIE['cofmUNIT'];

	 $kondisiSKPD.= " and c1 = '$filterUrusan' ";
	 $kondisiSKPD.= " and c = '$filterBidang' ";
	 $kondisiSKPD.= " and d = '$filterSKPD' ";
	 if(!isset($_REQUEST['jumlahData']))$jumlahData=50;
			$arrayBelanja = array(
						   array('BELANJA PEGAWAI','BELANJA PEGAWAI'),
						   array('BELANJA BELANJA BARANG & JASA','BELANJA BARANG & JASA'),
						   array('BELANJA MODAL','BELANJA MODAL'),
					);
			$cmbBelanja = cmbArray('filterBelanja',$_REQUEST['filterBelanja'],$arrayBelanja,'-- JENIS BELANJA--',"onChange=$this->Prefix.refreshList(true)");
			if(!empty($_REQUEST['filterQ'])){
				$kodeSKPD = $filterUrusan.".".$filterBidang.".".$filterSKPD;
				$kodeProgramKegiatan = $filterConcatProgram.".".$filterQ;
				if(!empty($filterBelanja)){
					if($filterBelanja == 'BELANJA PEGAWAI'){
						$kondisiFilterBelanja = " and k='5' and l ='2' and m='1'";
					}elseif($filterBelanja == 'BELANJA BELANJA BARANG & JASA'){
						$kondisiFilterBelanja = " and k='5' and l ='2' and m='2'";
					}elseif($filterBelanja == 'BELANJA MODAL'){
						$kondisiFilterBelanja = " and k='5' and l ='2' and m='3'";
					}
				}

			}
		  $TampilOpt =
          genFilterBar(array($this->genFilterSKPD($this->Prefix,$this->Prefix.'FilterSKPD','100%','145px')),'','','').
						$this->genFilterBarTR(
							array(
							"<div style='float: left; width:100%; height: auto; padding: 4px;'>

						<table width=\"100%\"   >
							 <tr>
								 <td width='108px'>ALOKASI</td>
								 <td width='10'>:</td>
								 <td >
								 ".$this->radioAlokasi($viewAlokasi)."
								 </td>
							 </tr>
							 <tr>
								<td width='108px'>TAMPIL</td>
								<td width='10'>:</td>
								<td >
								".$this->checkTampil()."
								</td>
							</tr>
		  			</table>
						</div>"
					),'','','').
					genFilterBar(
            array(
              "TAHUN ANGGARAN &nbsp &nbsp <input type='text' value='".$this->tahunAnggaran."' style='width:40px;' readonly>&nbsp &nbsp &nbsp &nbsp JUMLAH DATA &nbsp &nbsp <input type='text' name ='jumlahData' id='jumlahData' value ='$jumlahData' style='width:40px;'>  &nbsp <input type='button' onclick =$this->Prefix.refreshList(true); value='Tampilkan'>"
          ),'','','') ;
    return array('TampilOpt'=>$TampilOpt);
  }
	function radioAlokasi($valueRadio){
		switch ($valueRadio) {
			case 'NONE':
				$onNone= "checked";
				break;
			case 'BULANAN':
				$onBulanan= "checked";
				break;
			case 'TRIWULAN':
				$onTriwulan= "checked";
				break;
			case 'SEMESTER':
				$onSemester= "checked";
				break;
			default:
				$onNone= "checked";
				break;
		}

		$radioALokasi = "
		<input type='radio' name='viewAlokasi' $onNone value='NONE' onclick=$this->Prefix.viewAlokasi()> NONE &nbsp
		<input type='radio' name='viewAlokasi' $onBulanan value='BULANAN' onclick=$this->Prefix.viewAlokasi()> BULANAN &nbsp
		<input type='radio' name='viewAlokasi' $onTriwulan value='TRIWULAN' onclick=$this->Prefix.viewAlokasi()> TRIWULAN &nbsp
		<input type='radio' name='viewAlokasi' $onSemester value='SEMESTER' onclick=$this->Prefix.viewAlokasi()> SEMESTER &nbsp
		";
		return $radioALokasi;
	}
	function checkTampil(){
		foreach ($_REQUEST as $key => $value) {
					$$key = $value;
		}

		if(!isset($_REQUEST['filterSubRincian'])){
			$filterSubRincian= 'show';
		}
		if($filterSubRincian == 'show')$statusCheckSubRincianBelanja = "checked";
		$radioALokasi = "
		<input type='checkbox' id='checkBoxShowSubRincianBelanja'   $statusCheckSubRincianBelanja onChange=$this->Prefix.checkBoxSubRincianBelanjaChanged();> Rincian Pendapatan
		<input type='hidden' name='filterSubRincian' id='filterSubRincian'  value='$filterSubRincian'  >
		";
		return $radioALokasi;
	}

  function getDaftarOpsi($Mode=1){
    global $Main, $HTTP_COOKIE_VARS;
    $UID = $_COOKIE['coID'];
    //kondisi -----------------------------------
    $arrKondisi = array();
    foreach ($_REQUEST as $key => $value) {
          $$key = $value;
    }
    if($filterUrusan !='00'){
        $arrKondisi[] = "c1 = '$filterUrusan'";
        $kondisiSKPD .= " and c1='$filterUrusan'";
    }
    if($filterBidang !='00'){
        $arrKondisi[] = "c = '$filterBidang'";
        $kondisiSKPD .= " and c='$filterBidang'";
    }
    if($filterSKPD !='00'){
        $arrKondisi[] = "d = '$filterSKPD'";
        $kondisiSKPD .= " and d='$filterSKPD'";
    }


		$arrKondisi[] = "jenis_dpa = '$this->jenisDPA' $this->kondisiRekening";

    $Kondisi= join(' and ',$arrKondisi);
    $Kondisi = $Kondisi =='' ? '':' Where '.$Kondisi ;
    //Order -------------------------------------
    $fmORDER1 = cekPOST('fmORDER1');
    $fmDESC1 = cekPOST('fmDESC1');
    $Asc1 = $fmDESC1 ==''\/ICcnOiAnZGVzYyc7CiAgICAkYXJyT3JkZXJzID0gYXJyYXkoKTsKCQkkYXJyT3JkZXJzW10gPSJrLGwsbSxuLG8sYzEsYyxkLGlkX3JpbmNpYW5fYmVsYW5qYSxpZF9idWt1X2luZHVrIjsKICAgICRPcmRlcj0gam9pbignLCcsJGFyck9yZGVycyk7CiAgICAkT3JkZXJEZWZhdWx0ID0gJyc7CiAgICAkT3JkZXIgPSAgJE9yZGVyID09Jyc\\/Pgo=",
    "size": "121166"
}