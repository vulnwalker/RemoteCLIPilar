{
    "namaFile": "lib\/PHPExcel\/Classes\/PHPExcel\/Writer\/CSV.php",
    "lastUpdate": "2017-12-25+01:39:38.00",
    "contentFile": "\/IERlZmF1bHRzIHRvIGZhbHNlCiAgICAgKiBAcmV0dXJuIFBIUEV4Y2VsX1dyaXRlcl9DU1YKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIHNldFVzZUJPTSgkcFZhbHVlID0gZmFsc2UpCiAgICB7CiAgICAgICAgJHRoaXMtPnVzZUJPTSA9ICRwVmFsdWU7CiAgICAgICAgcmV0dXJuICR0aGlzOwogICAgfQoKICAgIC8qKgogICAgICogR2V0IHdoZXRoZXIgYSBzZXBhcmF0b3IgbGluZSBzaG91bGQgYmUgaW5jbHVkZWQKICAgICAqCiAgICAgKiBAcmV0dXJuIGJvb2xlYW4KICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGdldEluY2x1ZGVTZXBhcmF0b3JMaW5lKCkKICAgIHsKICAgICAgICByZXR1cm4gJHRoaXMtPmluY2x1ZGVTZXBhcmF0b3JMaW5lOwogICAgfQoKICAgIC8qKgogICAgICogU2V0IHdoZXRoZXIgYSBzZXBhcmF0b3IgbGluZSBzaG91bGQgYmUgaW5jbHVkZWQgYXMgdGhlIGZpcnN0IGxpbmUgb2YgdGhlIGZpbGUKICAgICAqCiAgICAgKiBAcGFyYW0gICAgYm9vbGVhbiAgICAkcFZhbHVlICAgICAgICBVc2Ugc2VwYXJhdG9yIGxpbmU\/IERlZmF1bHRzIHRvIGZhbHNlCiAgICAgKiBAcmV0dXJuIFBIUEV4Y2VsX1dyaXRlcl9DU1YKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIHNldEluY2x1ZGVTZXBhcmF0b3JMaW5lKCRwVmFsdWUgPSBmYWxzZSkKICAgIHsKICAgICAgICAkdGhpcy0+aW5jbHVkZVNlcGFyYXRvckxpbmUgPSAkcFZhbHVlOwogICAgICAgIHJldHVybiAkdGhpczsKICAgIH0KCiAgICAvKioKICAgICAqIEdldCB3aGV0aGVyIHRoZSBmaWxlIHNob3VsZCBiZSBzYXZlZCB3aXRoIGZ1bGwgRXhjZWwgQ29tcGF0aWJpbGl0eQogICAgICoKICAgICAqIEByZXR1cm4gYm9vbGVhbgogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gZ2V0RXhjZWxDb21wYXRpYmlsaXR5KCkKICAgIHsKICAgICAgICByZXR1cm4gJHRoaXMtPmV4Y2VsQ29tcGF0aWJpbGl0eTsKICAgIH0KCiAgICAvKioKICAgICAqIFNldCB3aGV0aGVyIHRoZSBmaWxlIHNob3VsZCBiZSBzYXZlZCB3aXRoIGZ1bGwgRXhjZWwgQ29tcGF0aWJpbGl0eQogICAgICoKICAgICAqIEBwYXJhbSAgICBib29sZWFuICAgICRwVmFsdWUgICAgICAgIFNldCB0aGUgZmlsZSB0byBiZSB3cml0dGVuIGFzIGEgZnVsbHkgRXhjZWwgY29tcGF0aWJsZSBjc3YgZmlsZQogICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5vdGUgdGhhdCB0aGlzIG92ZXJyaWRlcyBvdGhlciBzZXR0aW5ncyBzdWNoIGFzIHVzZUJPTSwgZW5jbG9zdXJlIGFuZCBkZWxpbWl0ZXIKICAgICAqIEByZXR1cm4gUEhQRXhjZWxfV3JpdGVyX0NTVgogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gc2V0RXhjZWxDb21wYXRpYmlsaXR5KCRwVmFsdWUgPSBmYWxzZSkKICAgIHsKICAgICAgICAkdGhpcy0+ZXhjZWxDb21wYXRpYmlsaXR5ID0gJHBWYWx1ZTsKICAgICAgICByZXR1cm4gJHRoaXM7CiAgICB9CgogICAgLyoqCiAgICAgKiBHZXQgc2hlZXQgaW5kZXgKICAgICAqCiAgICAgKiBAcmV0dXJuIGludAogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gZ2V0U2hlZXRJbmRleCgpCiAgICB7CiAgICAgICAgcmV0dXJuICR0aGlzLT5zaGVldEluZGV4OwogICAgfQoKICAgIC8qKgogICAgICogU2V0IHNoZWV0IGluZGV4CiAgICAgKgogICAgICogQHBhcmFtICAgIGludCAgICAgICAgJHBWYWx1ZSAgICAgICAgU2hlZXQgaW5kZXgKICAgICAqIEByZXR1cm4gUEhQRXhjZWxfV3JpdGVyX0NTVgogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gc2V0U2hlZXRJbmRleCgkcFZhbHVlID0gMCkKICAgIHsKICAgICAgICAkdGhpcy0+c2hlZXRJbmRleCA9ICRwVmFsdWU7CiAgICAgICAgcmV0dXJuICR0aGlzOwogICAgfQoKICAgIC8qKgogICAgICogV3JpdGUgbGluZSB0byBDU1YgZmlsZQogICAgICoKICAgICAqIEBwYXJhbSAgICBtaXhlZCAgICAkcEZpbGVIYW5kbGUgICAgUEhQIGZpbGVoYW5kbGUKICAgICAqIEBwYXJhbSAgICBhcnJheSAgICAkcFZhbHVlcyAgICAgICAgQXJyYXkgY29udGFpbmluZyB2YWx1ZXMgaW4gYSByb3cKICAgICAqIEB0aHJvd3MgICAgUEhQRXhjZWxfV3JpdGVyX0V4Y2VwdGlvbgogICAgICovCiAgICBwcml2YXRlIGZ1bmN0aW9uIHdyaXRlTGluZSgkcEZpbGVIYW5kbGUgPSBudWxsLCAkcFZhbHVlcyA9IG51bGwpCiAgICB7CiAgICAgICAgaWYgKGlzX2FycmF5KCRwVmFsdWVzKSkgewogICAgICAgICAgICAvLyBObyBsZWFkaW5nIGRlbGltaXRlcgogICAgICAgICAgICAkd3JpdGVEZWxpbWl0ZXIgPSBmYWxzZTsKCiAgICAgICAgICAgIC8vIEJ1aWxkIHRoZSBsaW5lCiAgICAgICAgICAgICRsaW5lID0gJyc7CgogICAgICAgICAgICBmb3JlYWNoICgkcFZhbHVlcyBhcyAkZWxlbWVudCkgewogICAgICAgICAgICAgICAgLy8gRXNjYXBlIGVuY2xvc3VyZXMKICAgICAgICAgICAgICAgICRlbGVtZW50ID0gc3RyX3JlcGxhY2UoJHRoaXMtPmVuY2xvc3VyZSwgJHRoaXMtPmVuY2xvc3VyZSAuICR0aGlzLT5lbmNsb3N1cmUsICRlbGVtZW50KTsKCiAgICAgICAgICAgICAgICAvLyBBZGQgZGVsaW1pdGVyCiAgICAgICAgICAgICAgICBpZiAoJHdyaXRlRGVsaW1pdGVyKSB7CiAgICAgICAgICAgICAgICAgICAgJGxpbmUgLj0gJHRoaXMtPmRlbGltaXRlcjsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgJHdyaXRlRGVsaW1pdGVyID0gdHJ1ZTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyBBZGQgZW5jbG9zZWQgc3RyaW5nCiAgICAgICAgICAgICAgICAkbGluZSAuPSAkdGhpcy0+ZW5jbG9zdXJlIC4gJGVsZW1lbnQgLiAkdGhpcy0+ZW5jbG9zdXJlOwogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBBZGQgbGluZSBlbmRpbmcKICAgICAgICAgICAgJGxpbmUgLj0gJHRoaXMtPmxpbmVFbmRpbmc7CgogICAgICAgICAgICAvLyBXcml0ZSB0byBmaWxlCiAgICAgICAgICAgIGZ3cml0ZSgkcEZpbGVIYW5kbGUsICRsaW5lKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aHJvdyBuZXcgUEhQRXhjZWxfV3JpdGVyX0V4Y2VwdGlvbigiSW52YWxpZCBkYXRhIHJvdyBwYXNzZWQgdG8gQ1NWIHdyaXRlci4iKTsKICAgICAgICB9CiAgICB9Cn0K",
    "size": "9426"
}