{
    "namaFile": "lib\/PHPExcel\/Classes\/PHPExcel\/locale\/nl\/functions",
    "lastUpdate": "2017-12-25+01:39:38.00",
    "contentFile": "\/Dq2ZmaWNpw6tudGVuIG5hYXIgZWVuIGNvbXBsZXggZ2V0YWwNCkNPTlZFUlQJCQk9IENPTlZFUlRFUkVOCQkJIyMJQ29udmVydGVlcnQgZWVuIGdldGFsIGluIGRlIGVuZSBtYWF0ZWVuaGVpZCBuYWFyIGVlbiBnZXRhbCBpbiBlZW4gYW5kZXJlIG1hYXRlZW5oZWlkDQpERUMyQklOCQkJPSBERUMuTi5CSU4JCQkjIwlDb252ZXJ0ZWVydCBlZW4gZGVjaW1hYWwgZ2V0YWwgbmFhciBlZW4gYmluYWlyIGdldGFsDQpERUMySEVYCQkJPSBERUMuTi5IRVgJCQkjIwlDb252ZXJ0ZWVydCBlZW4gZGVjaW1hYWwgZ2V0YWwgbmFhciBlZW4gaGV4YWRlY2ltYWFsIGdldGFsDQpERUMyT0NUCQkJPSBERUMuTi5PQ1QJCQkjIwlDb252ZXJ0ZWVydCBlZW4gZGVjaW1hYWwgZ2V0YWwgbmFhciBlZW4gb2N0YWFsIGdldGFsDQpERUxUQQkJCT0gREVMVEEJCQkJIyMJVGVzdCBvZiB0d2VlIHdhYXJkZW4gZ2VsaWprIHppam4NCkVSRgkJCT0gRk9VVEZVTkNUSUUJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIGZvdXRmdW5jdGllDQpFUkZDCQkJPSBGT1VULkNPTVBMRU1FTlQJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgY29tcGxlbWVudGFpcmUgZm91dGZ1bmN0aWUNCkdFU1RFUAkJCT0gR1JPVEVSLkRBTgkJCSMjCVRlc3Qgb2YgZWVuIGdldGFsIGdyb3RlciBpcyBkYW4gZGUgZHJlbXBlbHdhYXJkZQ0KSEVYMkJJTgkJCT0gSEVYLk4uQklOCQkJIyMJQ29udmVydGVlcnQgZWVuIGhleGFkZWNpbWFhbCBnZXRhbCBuYWFyIGVlbiBiaW5haXIgZ2V0YWwNCkhFWDJERUMJCQk9IEhFWC5OLkRFQwkJCSMjCUNvbnZlcnRlZXJ0IGVlbiBoZXhhZGVjaW1hYWwgZ2V0YWwgbmFhciBlZW4gZGVjaW1hYWwgZ2V0YWwNCkhFWDJPQ1QJCQk9IEhFWC5OLk9DVAkJCSMjCUNvbnZlcnRlZXJ0IGVlbiBoZXhhZGVjaW1hYWwgZ2V0YWwgbmFhciBlZW4gb2N0YWFsIGdldGFsDQpJTUFCUwkJCT0gQy5BQlMJCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBhYnNvbHV0ZSB3YWFyZGUgKG1vZHVsdXMpIHZhbiBlZW4gY29tcGxleCBnZXRhbA0KSU1BR0lOQVJZCQk9IEMuSU0uREVFTAkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgaW1hZ2luYWlyZSBjb8OrZmZpY2nDq250IHZhbiBlZW4gY29tcGxleCBnZXRhbA0KSU1BUkdVTUVOVAkJPSBDLkFSR1VNRU5UCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBoZXQgYXJndW1lbnQgdGjDqHRhLCBlZW4gaG9layB1aXRnZWRydWt0IGluIHJhZGlhbGVuDQpJTUNPTkpVR0FURQkJPSBDLlRPRUdFVk9FR0QJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGhldCBjb21wbGV4ZSB0b2VnZXZvZWdkZSBnZXRhbCB2YW4gZWVuIGNvbXBsZXggZ2V0YWwNCklNQ09TCQkJPSBDLkNPUwkJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIGNvc2ludXMgdmFuIGVlbiBjb21wbGV4IGdldGFsDQpJTURJVgkJCT0gQy5RVU9USUVOVAkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgaGV0IHF1b3Rpw6tudCB2YW4gdHdlZSBjb21wbGV4ZSBnZXRhbGxlbg0KSU1FWFAJCQk9IEMuRVhQCQkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgZXhwb25lbnQgdmFuIGVlbiBjb21wbGV4IGdldGFsDQpJTUxOCQkJPSBDLkxOCQkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgbmF0dXVybGlqa2UgbG9nYXJpdG1lIHZhbiBlZW4gY29tcGxleCBnZXRhbA0KSU1MT0cxMAkJCT0gQy5MT0cxMAkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgbG9nYXJpdG1lIG1ldCBncm9uZHRhbCAxMCB2YW4gZWVuIGNvbXBsZXggZ2V0YWwNCklNTE9HMgkJCT0gQy5MT0cyCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBsb2dhcml0bWUgbWV0IGdyb25kdGFsIDIgdmFuIGVlbiBjb21wbGV4IGdldGFsDQpJTVBPV0VSCQkJPSBDLk1BQ0hUCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBlZW4gY29tcGxleCBnZXRhbCBkYXQgaXMgdmVyaGV2ZW4gdG90IGRlIG1hY2h0IHZhbiBlZW4gZ2VoZWVsIGdldGFsDQpJTVBST0RVQ1QJCT0gQy5QUk9EVUNUCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBoZXQgcHJvZHVjdCB2YW4gY29tcGxleGUgZ2V0YWxsZW4NCklNUkVBTAkJCT0gQy5SRUVFTC5ERUVMCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSByZcOrbGUgY2\\/Dq2ZmaWNpw6tudCB2YW4gZWVuIHJlZWtzIGdldGFsbGVuDQpPREQJCQk9IE9ORVZFTgkJCSMjCVJvbmR0IGRlIGFic29sdXRlIHdhYXJkZSB2YW4gaGV0IGdldGFsIG5hYXIgYm92ZW4gYWYgb3AgaGV0IGRpY2h0c3RiaWp6aWpuZGUgZ2VoZWxlIG9uZXZlbiBnZXRhbA0KUEkJCQk9IFBJCQkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgd2FhcmRlIHZhbiBwaQ0KUE9XRVIJCQk9IE1BQ0hUCQkJCSMjCVZlcmhlZnQgZWVuIGdldGFsIHRvdCBlZW4gbWFjaHQNClBST0RVQ1QJCQk9IFBST0RVQ1QJCQkjIwlWZXJtZW5pZ3Z1bGRpZ3QgZGUgYXJndW1lbnRlbiBtZXQgZWxrYWFyDQpRVU9USUVOVAkJPSBRVU9USUVOVAkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgdWl0a29tc3QgdmFuIGVlbiBkZWxpbmcgYWxzIGdlaGVlbCBnZXRhbA0KUkFESUFOUwkJCT0gUkFESUFMRU4JCQkjIwlDb252ZXJ0ZWVydCBncmFkZW4gbmFhciByYWRpYWxlbg0KUkFORAkJCT0gQVNFTEVDVAkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZWVuIHdpbGxla2V1cmlnIGdldGFsIHR1c3NlbiAwIGVuIDENClJBTkRCRVRXRUVOCQk9IEFTRUxFQ1RUVVNTRU4JCQkjIwlHZWVmdCBlZW4gd2lsbGVrZXVyaWcgZ2V0YWwgdHVzc2VuIGRlIGdldGFsbGVuIGRpZSB1IGhlYnQgb3BnZWdldmVuDQpST01BTgkJCT0gUk9NRUlOUwkJCSMjCUNvbnZlcnRlZXJ0IGVlbiBBcmFiaXNjaCBnZXRhbCBuYWFyIGVlbiBSb21laW5zIGdldGFsIGVuIGdlZWZ0IGhldCByZXN1bHRhYXQgd2VlciBpbiBkZSB2b3JtIHZhbiB0ZWtzdA0KUk9VTkQJCQk9IEFGUk9OREVOCQkJIyMJUm9uZHQgZWVuIGdldGFsIGFmIG9wIGhldCBvcGdlZ2V2ZW4gYWFudGFsIGRlY2ltYWxlbg0KUk9VTkRET1dOCQk9IEFGUk9OREVOLk5BQVIuQkVORURFTgkJIyMJUm9uZHQgZGUgYWJzb2x1dGUgd2FhcmRlIHZhbiBlZW4gZ2V0YWwgbmFhciBiZW5lZGVuIGFmDQpST1VORFVQCQkJPSBBRlJPTkRFTi5OQUFSLkJPVkVOCQkjIwlSb25kdCBkZSBhYnNvbHV0ZSB3YWFyZGUgdmFuIGVlbiBnZXRhbCBuYWFyIGJvdmVuIGFmDQpTRVJJRVNTVU0JCT0gU09NLk1BQ0hUUkVFS1MJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgc29tIHZhbiBlZW4gbWFjaHRyZWVrcyBkaWUgaXMgZ2ViYXNlZXJkIG9wIGRlIGZvcm11bGUNClNJR04JCQk9IFBPUy5ORUcJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGhldCB0ZWtlbiB2YW4gZWVuIGdldGFsDQpTSU4JCQk9IFNJTgkJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIHNpbnVzIHZhbiBkZSBvcGdlZ2V2ZW4gaG9law0KU0lOSAkJCT0gU0lOSAkJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIHNpbnVzIGh5cGVyYm9saWN1cyB2YW4gZWVuIGdldGFsDQpTUVJUCQkJPSBXT1JURUwJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIHBvc2l0aWV2ZSB2aWVya2FudHN3b3J0ZWwgdmFuIGVlbiBnZXRhbA0KU1FSVFBJCQkJPSBXT1JURUwuUEkJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIHZpZXJrYW50c3dvcnRlbCB2YW4gKGdldGFsICogcGkpDQpTVUJUT1RBTAkJPSBTVUJUT1RBQUwJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGVlbiBzdWJ0b3RhYWwgdm9vciBlZW4gYmVyZWlrDQpTVU0JCQk9IFNPTQkJCQkjIwlUZWx0IGRlIGFyZ3VtZW50ZW4gb3ANClNVTUlGCQkJPSBTT00uQUxTCQkJIyMJVGVsdCBkZSBnZXRhbGxlbiBiaWogZWxrYWFyIG9wIGRpZSB2b2xkb2VuIGFhbiBlZW4gYmVwYWFsZCBjcml0ZXJpdW0NClNVTUlGUwkJCT0gU09NTUVOLkFMUwkJCSMjCVRlbHQgZGUgY2VsbGVuIGluIGVlbiBiZXJlaWsgb3AgZGllIGFhbiBtZWVyZGVyZSBjcml0ZXJpYSB2b2xkb2VuDQpTVU1QUk9EVUNUCQk9IFNPTVBST0RVQ1QJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIHNvbSB2YW4gZGUgcHJvZHVjdGVuIHZhbiBkZSBjb3JyZXNwb25kZXJlbmRlIG1hdHJpeGVsZW1lbnRlbg0KU1VNU1EJCQk9IEtXQURSQVRFTlNPTQkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgc29tIHZhbiBkZSBrd2FkcmF0ZW4gdmFuIGRlIGFyZ3VtZW50ZW4NClNVTVgyTVkyCQk9IFNPTS5YMk1JTlkyCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBzb20gdmFuIGhldCB2ZXJzY2hpbCB0dXNzZW4gZGUga3dhZHJhdGVuIHZhbiBjb3JyZXNwb25kZXJlbmRlIHdhYXJkZW4gaW4gdHdlZSBtYXRyaWNlcw0KU1VNWDJQWTIJCT0gU09NLlgyUExVU1kyCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBzb20gdmFuIGRlIGt3YWRyYXRlbnNvbSB2YW4gY29ycmVzcG9uZGVyZW5kZSB3YWFyZGVuIGluIHR3ZWUgbWF0cmljZXMNClNVTVhNWTIJCQk9IFNPTS5YTUlOWS4yCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBzb20gdmFuIGRlIGt3YWRyYXRlbiB2YW4gZGUgdmVyc2NoaWxsZW4gdHVzc2VuIGRlIGNvcnJlc3BvbmRlcmVuZGUgd2FhcmRlbiBpbiB0d2VlIG1hdHJpY2VzDQpUQU4JCQk9IFRBTgkJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIHRhbmdlbnMgdmFuIGVlbiBnZXRhbA0KVEFOSAkJCT0gVEFOSAkJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIHRhbmdlbnMgaHlwZXJib2xpY3VzIHZhbiBlZW4gZ2V0YWwNClRSVU5DCQkJPSBHRUhFRUwJCQkjIwlLYXB0IGVlbiBnZXRhbCBhZiB0b3QgZWVuIGdlaGVlbCBnZXRhbA0KDQoNCiMjDQojIwlTdGF0aXN0aWNhbCBmdW5jdGlvbnMJCQkJU3RhdGlzdGlzY2hlIGZ1bmN0aWVzDQojIw0KQVZFREVWCQkJPSBHRU0uREVWSUFUSUUJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGhldCBnZW1pZGRlbGRlIHZhbiBkZSBhYnNvbHV0ZSBkZXZpYXRpZXMgdmFuIGdlZ2V2ZW5zcHVudGVuIHRlbiBvcHppY2h0ZSB2YW4gaHVuIGdlbWlkZGVsZGUgd2FhcmRlDQpBVkVSQUdFCQkJPSBHRU1JRERFTERFCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBoZXQgZ2VtaWRkZWxkZSB2YW4gZGUgYXJndW1lbnRlbg0KQVZFUkFHRUEJCT0gR0VNSURERUxERUEJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGhldCBnZW1pZGRlbGRlIHZhbiBkZSBhcmd1bWVudGVuLCBpbmNsdXNpZWYgZ2V0YWxsZW4sIHRla3N0IGVuIGxvZ2lzY2hlIHdhYXJkZW4NCkFWRVJBR0VJRgkJPSBHRU1JRERFTERFLkFMUwkJIyMJR2VlZnQgaGV0IGdlbWlkZGVsZGUgKHJla2Vua3VuZGlnIGdlbWlkZGVsZGUpIGFscyByZXN1bHRhYXQgdmFuIGFsbGUgY2VsbGVuIGluIGVlbiBiZXJlaWsgZGllIHZvbGRvZW4gYWFuIGRlIG9wZ2VnZXZlbiBjcml0ZXJpYQ0KQVZFUkFHRUlGUwkJPSBHRU1JRERFTERFTi5BTFMJCSMjCUdlZWZ0IGhldCBnZW1pZGRlbGRlIChyZWtlbmt1bmRpZyBnZW1pZGRlbGRlKSBhbHMgcmVzdWx0YWF0IHZhbiBhbGxlIGNlbGxlbiBkaWUgYWFuIG1lZXJkZXJlIGNyaXRlcmlhIHZvbGRvZW4NCkJFVEFESVNUCQk9IEJFVEEuVkVSRAkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgY3VtdWxhdGlldmUgYsOodGEtdmVyZGVsaW5nc2Z1bmN0aWUNCkJFVEFJTlYJCQk9IEJFVEEuSU5WCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBpbnZlcnNlIHZhbiBkZSBjdW11bGF0aWV2ZSB2ZXJkZWxpbmdzZnVuY3RpZSB2b29yIGVlbiBnZWdldmVuIGLDqHRhLXZlcmRlbGluZw0KQklOT01ESVNUCQk9IEJJTk9NSUFMRS5WRVJECQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIGJpbm9taWFsZSB2ZXJkZWxpbmcNCkNISURJU1QJCQk9IENISS5LV0FEUkFBVAkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgZWVuemlqZGlnZSBrYW5zIHZhbiBkZSBjaGkta3dhZHJhYXR2ZXJkZWxpbmcNCkNISUlOVgkJCT0gQ0hJLktXQURSQUFULklOVgkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBpbnZlcnNlIHZhbiBlZW4gZWVuemlqZGlnZSBrYW5zIHZhbiBkZSBjaGkta3dhZHJhYXR2ZXJkZWxpbmcNCkNISVRFU1QJCQk9IENISS5UT0VUUwkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgb25hZmhhbmtlbGlqa2hlaWRzdG9ldHMNCkNPTkZJREVOQ0UJCT0gQkVUUk9VV0JBQVJIRUlECQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGhldCBiZXRyb3V3YmFhcmhlaWRzaW50ZXJ2YWwgdmFuIGVlbiBnZW1pZGRlbGRlIHdhYXJkZSB2b29yIGRlIGVsZW1lbnRlbiB2YW4gZWVuIHBvcHVsYXRpZQ0KQ09SUkVMCQkJPSBDT1JSRUxBVElFCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBjb3JyZWxhdGllY2\/Dq2ZmaWNpw6tudCB2YW4gdHdlZSBnZWdldmVuc3ZlcnphbWVsaW5nZW4NCkNPVU5UCQkJPSBBQU5UQUwJCQkjIwlUZWx0IGhldCBhYW50YWwgZ2V0YWxsZW4gaW4gZGUgYXJndW1lbnRlbmxpanN0DQpDT1VOVEEJCQk9IEFBTlRBTEFSRwkJCSMjCVRlbHQgaGV0IGFhbnRhbCB3YWFyZGVuIGluIGRlIGFyZ3VtZW50ZW5saWpzdA0KQ09VTlRCTEFOSwkJPSBBQU5UQUwuTEVHRS5DRUxMRU4JCSMjCVRlbHQgaGV0IGFhbnRhbCBsZWdlIGNlbGxlbiBpbiBlZW4gYmVyZWlrDQpDT1VOVElGCQkJPSBBQU5UQUwuQUxTCQkJIyMJVGVsdCBpbiBlZW4gYmVyZWlrIGhldCBhYW50YWwgY2VsbGVuIGRpZSB2b2xkb2VuIGFhbiBlZW4gYmVwYWFsZCBjcml0ZXJpdW0NCkNPVU5USUZTCQk9IEFBTlRBTExFTi5BTFMJCQkjIwlUZWx0IGluIGVlbiBiZXJlaWsgaGV0IGFhbnRhbCBjZWxsZW4gZGllIHZvbGRvZW4gYWFuIG1lZXJkZXJlIGNyaXRlcmlhDQpDT1ZBUgkJCT0gQ09WQVJJQU5USUUJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIGNvdmFyaWFudGllLCBoZXQgZ2VtaWRkZWxkZSB2YW4gZGUgcHJvZHVjdGVuIHZhbiBkZSBnZXBhYXJkZSBkZXZpYXRpZXMNCkNSSVRCSU5PTQkJPSBDUklULkJJTk9NCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBrbGVpbnN0ZSB3YWFyZGUgd2FhcnZvb3IgZGUgYmlub21pYWxlIHZlcmRlbGluZyBrbGVpbmVyIGlzIGRhbiBvZiBnZWxpamsgaXMgYWFuIGhldCBjcml0ZXJpdW0NCkRFVlNRCQkJPSBERVYuS1dBRAkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgc29tIHZhbiBkZSBkZXZpYXRpZXMgaW4gaGV0IGt3YWRyYWF0DQpFWFBPTkRJU1QJCT0gRVhQT04uVkVSRAkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgZXhwb25lbnRpw6tsZSB2ZXJkZWxpbmcNCkZESVNUCQkJPSBGLlZFUkRFTElORwkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgRi12ZXJkZWxpbmcNCkZJTlYJCQk9IEYuSU5WRVJTRQkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgaW52ZXJzZSB2YW4gZGUgRi12ZXJkZWxpbmcNCkZJU0hFUgkJCT0gRklTSEVSCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBGaXNoZXItdHJhbnNmb3JtYXRpZQ0KRklTSEVSSU5WCQk9IEZJU0hFUi5JTlYJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIGludmVyc2UgdmFuIGRlIEZpc2hlci10cmFuc2Zvcm1hdGllDQpGT1JFQ0FTVAkJPSBWT09SU1BFTExFTgkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZWVuIHdhYXJkZSBvcCBiYXNpcyB2YW4gZWVuIGxpbmVhaXJlIHRyZW5kDQpGUkVRVUVOQ1kJCT0gRlJFUVVFTlRJRQkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZWVuIGZyZXF1ZW50aWV2ZXJkZWxpbmcgaW4gZGUgdm9ybSB2YW4gZWVuIHZlcnRpY2FsZSBtYXRyaXgNCkZURVNUCQkJPSBGLlRPRVRTCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBlZW4gRi10b2V0cw0KR0FNTUFESVNUCQk9IEdBTU1BLlZFUkQJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIGdhbW1hLXZlcmRlbGluZw0KR0FNTUFJTlYJCT0gR0FNTUEuSU5WCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBpbnZlcnNlIHZhbiBkZSBjdW11bGF0aWV2ZSBnYW1tYS12ZXJkZWxpbmcNCkdBTU1BTE4JCQk9IEdBTU1BLkxOCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBuYXR1dXJsaWprZSBsb2dhcml0bWUgdmFuIGRlIGdhbW1hLWZ1bmN0aWUsIEcoeCkNCkdFT01FQU4JCQk9IE1FRVRLLkdFTQkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgaGV0IG1lZXRrdW5kaWdlIGdlbWlkZGVsZGUNCkdST1dUSAkJCT0gR1JPRUkJCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSB3YWFyZGVuIHZvb3IgZWVuIGV4cG9uZW50acOrbGUgdHJlbmQNCkhBUk1FQU4JCQk9IEhBUk0uR0VNCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBoZXQgaGFybW9uaXNjaGUgZ2VtaWRkZWxkZQ0KSFlQR0VPTURJU1QJCT0gSFlQRVJHRU8uVkVSRAkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgaHlwZXJnZW9tZXRyaXNjaGUgdmVyZGVsaW5nDQpJTlRFUkNFUFQJCT0gU05JSlBVTlQJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGhldCBzbmlqcHVudCB2YW4gZGUgbGluZWFpcmUgcmVncmVzc2llbGlqbiBtZXQgZGUgeS1hcw0KS1VSVAkJCT0gS1VSVE9TSVMJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIGt1cnRvc2lzIHZhbiBlZW4gZ2VnZXZlbnN2ZXJ6YW1lbGluZw0KTEFSR0UJCQk9IEdST09UU1RFCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBvcCBrLTEgbmEgZ3Jvb3RzdGUgd2FhcmRlIGluIGVlbiBnZWdldmVuc3ZlcnphbWVsaW5nDQpMSU5FU1QJCQk9IExJSk5TQ0gJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIHBhcmFtZXRlcnMgdmFuIGVlbiBsaW5lYWlyZSB0cmVuZA0KTE9HRVNUCQkJPSBMT0dTQ0gJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIHBhcmFtZXRlcnMgdmFuIGVlbiBleHBvbmVudGnDq2xlIHRyZW5kDQpMT0dJTlYJCQk9IExPRy5OT1JNLklOVgkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgaW52ZXJzZSB2YW4gZGUgbG9nYXJpdG1pc2NoZSBub3JtYWxlIHZlcmRlbGluZw0KTE9HTk9STURJU1QJCT0gTE9HLk5PUk0uVkVSRAkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgY3VtdWxhdGlldmUgbG9nYXJpdG1pc2NoZSBub3JtYWxlIHZlcmRlbGluZw0KTUFYCQkJPSBNQVgJCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBtYXhpbXVtd2FhcmRlIGluIGVlbiBsaWpzdCBtZXQgYXJndW1lbnRlbg0KTUFYQQkJCT0gTUFYQQkJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIG1heGltdW13YWFyZGUgaW4gZWVuIGxpanN0IG1ldCBhcmd1bWVudGVuLCBpbmNsdXNpZWYgZ2V0YWxsZW4sIHRla3N0IGVuIGxvZ2lzY2hlIHdhYXJkZW4NCk1FRElBTgkJCT0gTUVESUFBTgkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgbWVkaWFhbiB2YW4gZGUgb3BnZWdldmVuIGdldGFsbGVuDQpNSU4JCQk9IE1JTgkJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIG1pbmltdW13YWFyZGUgaW4gZWVuIGxpanN0IG1ldCBhcmd1bWVudGVuDQpNSU5BCQkJPSBNSU5BCQkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgbWluaW11bXdhYXJkZSBpbiBlZW4gbGlqc3QgbWV0IGFyZ3VtZW50ZW4sIGluY2x1c2llZiBnZXRhbGxlbiwgdGVrc3QgZW4gbG9naXNjaGUgd2FhcmRlbg0KTU9ERQkJCT0gTU9EVVMJCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBtZWVzdCB2b29ya29tZW5kZSB3YWFyZGUgaW4gZWVuIGdlZ2V2ZW5zdmVyemFtZWxpbmcNCk5FR0JJTk9NRElTVAkJPSBORUcuQklOT00uVkVSRAkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBuZWdhdGlldmUgYmlub21pYWFsdmVyZGVsaW5nDQpOT1JNRElTVAkJPSBOT1JNLlZFUkQJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIGN1bXVsYXRpZXZlIG5vcm1hbGUgdmVyZGVsaW5nDQpOT1JNSU5WCQkJPSBOT1JNLklOVgkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgaW52ZXJzZSB2YW4gZGUgY3VtdWxhdGlldmUgc3RhbmRhYXJkbm9ybWFsZSB2ZXJkZWxpbmcNCk5PUk1TRElTVAkJPSBTVEFORC5OT1JNLlZFUkQJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgY3VtdWxhdGlldmUgc3RhbmRhYXJkbm9ybWFsZSB2ZXJkZWxpbmcNCk5PUk1TSU5WCQk9IFNUQU5ELk5PUk0uSU5WCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIGludmVyc2UgdmFuIGRlIGN1bXVsYXRpZXZlIG5vcm1hbGUgdmVyZGVsaW5nDQpQRUFSU09OCQkJPSBQRUFSU09OCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBjb3JyZWxhdGllY2\/Dq2ZmaWNpw6tudCB2YW4gUGVhcnNvbg0KUEVSQ0VOVElMRQkJPSBQRVJDRU5USUVMCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBoZXQgay1kZSBwZXJjZW50aWVsIHZhbiB3YWFyZGVuIGluIGVlbiBiZXJlaWsNClBFUkNFTlRSQU5LCQk9IFBFUkNFTlQuUkFORwkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgcG9zaXRpZSwgaW4gcHJvY2VudGVuIHVpdGdlZHJ1a3QsIHZhbiBlZW4gd2FhcmRlIGluIGRlIHJhbmdvcmRlIHZhbiBlZW4gZ2VnZXZlbnN2ZXJ6YW1lbGluZw0KUEVSTVVUCQkJPSBQRVJNVVRBVElFUwkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgaGV0IGFhbnRhbCBwZXJtdXRhdGllcyB2b29yIGVlbiBnZWdldmVuIGFhbnRhbCBvYmplY3Rlbg0KUE9JU1NPTgkJCT0gUE9JU1NPTgkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgUG9pc3Nvbi12ZXJkZWxpbmcNClBST0IJCQk9IEtBTlMJCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBrYW5zIGRhdCB3YWFyZGVuIHppY2ggdHVzc2VuIHR3ZWUgZ3JlbnplbiBiZXZpbmRlbg0KUVVBUlRJTEUJCT0gS1dBUlRJRUwJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGhldCBrd2FydGllbCB2YW4gZWVuIGdlZ2V2ZW5zdmVyemFtZWxpbmcNClJBTksJCQk9IFJBTkcJCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBoZXQgcmFuZ251bW1lciB2YW4gZWVuIGdldGFsIGluIGVlbiBsaWpzdCBnZXRhbGxlbg0KUlNRCQkJPSBSLktXQURSQUFUCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBoZXQga3dhZHJhYXQgdmFuIGRlIFBlYXJzb24tY29ycmVsYXRpZWNvw6tmZmljacOrbnQNClNLRVcJCQk9IFNDSEVFRkhFSUQJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGRlIG1hdGUgdmFuIGFzeW1tZXRyaWUgdmFuIGVlbiB2ZXJkZWxpbmcNClNMT1BFCQkJPSBSSUNIVElORwkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgcmljaHRpbmdzY2\/Dq2ZmaWNpw6tudCB2YW4gZWVuIGxpbmVhaXJlIHJlZ3Jlc3NpZWxpam4NClNNQUxMCQkJPSBLTEVJTlNURQkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgb3Agay0xIG5hIGtsZWluc3RlIHdhYXJkZSBpbiBlZW4gZ2VnZXZlbnN2ZXJ6YW1lbGluZw0KU1RBTkRBUkRJWkUJCT0gTk9STUFMSVNFUkVOCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBlZW4gZ2Vub3JtYWxpc2VlcmRlIHdhYXJkZQ0KU1RERVYJCQk9IFNUREVWCQkJCSMjCU1hYWt0IGVlbiBzY2hhdHRpbmcgdmFuIGRlIHN0YW5kYWFyZGRldmlhdGllIG9wIGJhc2lzIHZhbiBlZW4gc3RlZWtwcm9lZg0KU1RERVZBCQkJPSBTVERFVkEJCQkjIwlNYWFrdCBlZW4gc2NoYXR0aW5nIHZhbiBkZSBzdGFuZGFhcmRkZXZpYXRpZSBvcCBiYXNpcyB2YW4gZWVuIHN0ZWVrcHJvZWYsIGluY2x1c2llZiBnZXRhbGxlbiwgdGVrc3QgZW4gbG9naXNjaGUgd2FhcmRlbg0KU1RERVZQCQkJPSBTVERFVlAJCQkjIwlCZXJla2VudCBkZSBzdGFuZGFhcmRkZXZpYXRpZSBvcCBiYXNpcyB2YW4gZGUgdm9sbGVkaWdlIHBvcHVsYXRpZQ0KU1RERVZQQQkJCT0gU1RERVZQQQkJCSMjCUJlcmVrZW50IGRlIHN0YW5kYWFyZGRldmlhdGllIG9wIGJhc2lzIHZhbiBkZSB2b2xsZWRpZ2UgcG9wdWxhdGllLCBpbmNsdXNpZWYgZ2V0YWxsZW4sIHRla3N0IGVuIGxvZ2lzY2hlIHdhYXJkZW4NClNURVlYCQkJPSBTVEFORC5GT1VULllYCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBzdGFuZGFhcmRmb3V0IGluIGRlIHZvb3JzcGVsZGUgeS13YWFyZGUgdm9vciBlbGtlIHggaW4gZWVuIHJlZ3Jlc3NpZQ0KVERJU1QJCQk9IFQuVkVSRAkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgU3R1ZGVudCBULXZlcmRlbGluZw0KVElOVgkJCT0gVC5JTlYJCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBpbnZlcnNlIHZhbiBkZSBTdHVkZW50IFQtdmVyZGVsaW5nDQpUUkVORAkJCT0gVFJFTkQJCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSB3YWFyZGVuIHZvb3IgZWVuIGxpbmVhaXJlIHRyZW5kDQpUUklNTUVBTgkJPSBHRVRSSU1ELkdFTQkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgaGV0IGdlbWlkZGVsZGUgdmFuIHdhYXJkZW4gaW4gZWVuIGdlZ2V2ZW5zdmVyemFtZWxpbmcNClRURVNUCQkJPSBULlRPRVRTCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBrYW5zIG1ldCBiZWh1bHAgdmFuIGRlIFN0dWRlbnQgVC10b2V0cw0KVkFSCQkJPSBWQVIJCQkJIyMJTWFha3QgZWVuIHNjaGF0dGluZyB2YW4gZGUgdmFyaWFudGllIG9wIGJhc2lzIHZhbiBlZW4gc3RlZWtwcm9lZg0KVkFSQQkJCT0gVkFSQQkJCQkjIwlNYWFrdCBlZW4gc2NoYXR0aW5nIHZhbiBkZSB2YXJpYW50aWUgb3AgYmFzaXMgdmFuIGVlbiBzdGVla3Byb2VmLCBpbmNsdXNpZWYgZ2V0YWxsZW4sIHRla3N0IGVuIGxvZ2lzY2hlIHdhYXJkZW4NClZBUlAJCQk9IFZBUlAJCQkJIyMJQmVyZWtlbnQgZGUgdmFyaWFudGllIG9wIGJhc2lzIHZhbiBkZSB2b2xsZWRpZ2UgcG9wdWxhdGllDQpWQVJQQQkJCT0gVkFSUEEJCQkJIyMJQmVyZWtlbnQgZGUgc3RhbmRhYXJkZGV2aWF0aWUgb3AgYmFzaXMgdmFuIGRlIHZvbGxlZGlnZSBwb3B1bGF0aWUsIGluY2x1c2llZiBnZXRhbGxlbiwgdGVrc3QgZW4gbG9naXNjaGUgd2FhcmRlbg0KV0VJQlVMTAkJCT0gV0VJQlVMTAkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgV2VpYnVsbC12ZXJkZWxpbmcNClpURVNUCQkJPSBaLlRPRVRTCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBkZSBlZW56aWpkaWdlIGthbnN3YWFyZGUgdmFuIGVlbiBaLXRvZXRzDQoNCg0KIyMNCiMjCVRleHQgZnVuY3Rpb25zCQkJCQlUZWtzdGZ1bmN0aWVzDQojIw0KQVNDCQkJPSBBU0MJCQkJIyMJV2lqemlndCBOZWRlcmxhbmRzZSBsZXR0ZXJzIG9mIGthdGFrYW5hdGVrZW5zIG92ZXIgZGUgdm9sbGUgYnJlZWR0ZSAoZHViYmVsLWJ5dGV0ZWtlbnMpIGJpbm5lbiBlZW4gdGVrZW5yZWVrcyBpbiB0ZWtlbnMgb3ZlciBkZSBoYWx2ZSBicmVlZHRlIChlbmtlbC1ieXRldGVrZW5zKQ0KQkFIVFRFWFQJCT0gQkFIVC5URUtTVAkJCSMjCUNvbnZlcnRlZXJ0IGVlbiBnZXRhbCBuYWFyIHRla3N0IG1ldCBkZSB2YWx1dGFub3RhdGllIMOfIChiYWh0KQ0KQ0hBUgkJCT0gVEVLRU4JCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBoZXQgdGVrZW4gZGF0IGhvb3J0IGJpaiBkZSBvcGdlZ2V2ZW4gY29kZQ0KQ0xFQU4JCQk9IFdJU1NFTi5DT05UUk9MCQkjIwlWZXJ3aWpkZXJ0IGFsbGUgbmlldC1hZmRydWtiYXJlIHRla2VucyB1aXQgZWVuIHRla3N0DQpDT0RFCQkJPSBDT0RFCQkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgbnVtZXJpZWtlIGNvZGUgdm9vciBoZXQgZWVyc3RlIHRla2VuIGluIGVlbiB0ZWtlbnJlZWtzDQpDT05DQVRFTkFURQkJPSBURUtTVC5TQU1FTlZPRUdFTgkJIyMJVm9lZ3QgdmVyc2NoaWxsZW5kZSB0ZWtzdGZyYWdtZW50ZW4gc2FtZW4gdG90IMOpw6luIHRla3N0ZnJhZ21lbnQNCkRPTExBUgkJCT0gRVVSTwkJCQkjIwlDb252ZXJ0ZWVydCBlZW4gZ2V0YWwgbmFhciB0ZWtzdCBtZXQgZGUgdmFsdXRhbm90YXRpZSDigqwgKGV1cm8pDQpFWEFDVAkJCT0gR0VMSUpLCQkJIyMJQ29udHJvbGVlcnQgb2YgdHdlZSB0ZWtlbnJlZWtzZW4gaWRlbnRpZWsgemlqbg0KRklORAkJCT0gVklORC5BTExFUwkJCSMjCVpvZWt0IGVlbiBiZXBhYWxkZSB0ZWtlbnJlZWtzIGluIGVlbiB0ZWtzdCAod2FhcmJpaiBvbmRlcnNjaGVpZCB3b3JkdCBnZW1hYWt0IHR1c3NlbiBob29mZGxldHRlcnMgZW4ga2xlaW5lIGxldHRlcnMpDQpGSU5EQgkJCT0gVklORC5BTExFUy5CCQkJIyMJWm9la3QgZWVuIGJlcGFhbGRlIHRla2VucmVla3MgaW4gZWVuIHRla3N0ICh3YWFyYmlqIG9uZGVyc2NoZWlkIHdvcmR0IGdlbWFha3QgdHVzc2VuIGhvb2ZkbGV0dGVycyBlbiBrbGVpbmUgbGV0dGVycykNCkZJWEVECQkJPSBWQVNUCQkJCSMjCU1hYWt0IGVlbiBnZXRhbCBhbHMgdGVrc3QgbWV0IGVlbiB2YXN0IGFhbnRhbCBkZWNpbWFsZW4gb3ANCkpJUwkJCT0gSklTCQkJCSMjCVdpanppZ3QgTmVkZXJsYW5kc2UgbGV0dGVycyBvZiBrYXRha2FuYXRla2VucyBvdmVyIGRlIGhhbHZlIGJyZWVkdGUgKGVua2VsLWJ5dGV0ZWtlbnMpIGJpbm5lbiBlZW4gdGVrZW5yZWVrcyBpbiB0ZWtlbnMgb3ZlciBkZSB2b2xsZSBicmVlZHRlIChkdWJiZWwtYnl0ZXRla2VucykNCkxFRlQJCQk9IExJTktTCQkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgbWVlc3QgbGlua3NlIHRla2VucyBpbiBlZW4gdGVrZW5yZWVrcw0KTEVGVEIJCQk9IExJTktTQgkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgbWVlc3QgbGlua3NlIHRla2VucyBpbiBlZW4gdGVrZW5yZWVrcw0KTEVOCQkJPSBMRU5HVEUJCQkjIwlHZWVmdCBhbHMgcmVzdWx0YWF0IGhldCBhYW50YWwgdGVrZW5zIGluIGVlbiB0ZWtlbnJlZWtzDQpMRU5CCQkJPSBMRU5HVEVCCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBoZXQgYWFudGFsIHRla2VucyBpbiBlZW4gdGVrZW5yZWVrcw0KTE9XRVIJCQk9IEtMRUlORS5MRVRURVJTCQkjIwlaZXQgdGVrc3Qgb20gaW4ga2xlaW5lIGxldHRlcnMNCk1JRAkJCT0gTUlEREVOCQkJIyMJR2VlZnQgYWxzIHJlc3VsdGFhdCBlZW4gYmVwYWFsZCBhYW50YWwgdGVrZW5zIHZhbiBlZW4gdGVrZW5yZWVrcyB2YW5hZiBkZSBwb3NpdGllIGRpZSB1IG9wZ2VlZnQNCk1JREIJCQk9IERFRUxCCQkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZWVuIGJlcGFhbGQgYWFudGFsIHRla2VucyB2YW4gZWVuIHRla2VucmVla3MgdmFuYWYgZGUgcG9zaXRpZSBkaWUgdSBvcGdlZWZ0DQpQSE9ORVRJQwkJPSBGT05FVElTQ0gJCQkjIwlIYWFsdCBkZSBmb25ldGlzY2hlIHRla2VucyAoZnVyaWdhbmEpIHVpdCBlZW4gdGVrZW5yZWVrcyBvcA0KUFJPUEVSCQkJPSBCRUdJTkxFVFRFUlMJCQkjIwlaZXQgZGUgZWVyc3RlIGxldHRlciB2YW4gZWxrIHdvb3JkIGluIGVlbiB0ZWtzdCBvbSBpbiBlZW4gaG9vZmRsZXR0ZXINClJFUExBQ0UJCQk9IFZFUlZBTkcJCQkjIwlWZXJ2YW5ndCB0ZWtlbnMgYmlubmVuIGVlbiB0ZWtzdA0KUkVQTEFDRUIJCT0gVkVSVkFOR0VOQgkJCSMjCVZlcnZhbmd0IHRla2VucyBiaW5uZW4gZWVuIHRla3N0DQpSRVBUCQkJPSBIRVJIQUxJTkcJCQkjIwlIZXJoYWFsdCBlZW4gdGVrc3QgZWVuIGFhbnRhbCBtYWxlbg0KUklHSFQJCQk9IFJFQ0hUUwkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgbWVlc3QgcmVjaHRzZSB0ZWtlbnMgaW4gZWVuIHRla2VucmVla3MNClJJR0hUQgkJCT0gUkVDSFRTQgkJCSMjCUdlZWZ0IGFscyByZXN1bHRhYXQgZGUgbWVlc3QgcmVjaHRzZSB0ZWtlbnMgaW4gZWVuIHRla2VucmVla3MNClNFQVJDSAkJCT0gVklORC5TUEVDCQkJIyMJWm9la3QgZWVuIGJlcGFhbGRlIHRla2VucmVla3MgaW4gZWVuIHRla3N0ICh3YWFyYmlqIGdlZW4gb25kZXJzY2hlaWQgd29yZHQgZ2VtYWFrdCB0dXNzZW4gaG9vZmRsZXR0ZXJzIGVuIGtsZWluZSBsZXR0ZXJzKQ0KU0VBUkNIQgkJCT0gVklORC5TUEVDLkIJCQkjIwlab2VrdCBlZW4gYmVwYWFsZGUgdGVrZW5yZWVrcyBpbiBlZW4gdGVrc3QgKHdhYXJiaWogZ2VlbiBvbmRlcnNjaGVpZCB3b3JkdCBnZW1hYWt0IHR1c3NlbiBob29mZGxldHRlcnMgZW4ga2xlaW5lIGxldHRlcnMpDQpTVUJTVElUVVRFCQk9IFNVQlNUSVRVRVJFTgkJCSMjCVZlcnZhbmd0IG91ZGUgdGVrc3QgZG9vciBuaWV1d2UgdGVrc3QgaW4gZWVuIHRla2VucmVla3MNClQJCQk9IFQJCQkJIyMJQ29udmVydGVlcnQgZGUgYXJndW1lbnRlbiBuYWFyIHRla3N0DQpURVhUCQkJPSBURUtTVAkJCQkjIwlNYWFrdCBlZW4gZ2V0YWwgb3AgZW4gY29udmVydGVlcnQgaGV0IGdldGFsIG5hYXIgdGVrc3QNClRSSU0JCQk9IFNQQVRJRVMuV0lTU0VOCQkjIwlWZXJ3aWpkZXJ0IGRlIHNwYXRpZXMgdWl0IGVlbiB0ZWtzdA0KVVBQRVIJCQk9IEhPT0ZETEVUVEVSUwkJCSMjCVpldCB0ZWtzdCBvbSBpbiBob29mZGxldHRlcnMNClZBTFVFCQkJPSBXQUFSREUJCQkjIwlDb252ZXJ0ZWVydCB0ZWtzdCBuYWFyIGVlbiBnZXRhbA0K",
    "size": "36714"
}