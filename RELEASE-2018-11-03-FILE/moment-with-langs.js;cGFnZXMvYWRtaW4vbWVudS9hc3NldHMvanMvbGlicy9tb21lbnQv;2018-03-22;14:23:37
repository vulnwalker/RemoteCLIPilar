{
    "namaFile": "pages\/admin\/menu\/assets\/js\/libs\/moment\/moment-with-langs.js",
    "lastUpdate": "2018-03-22+14:23:37.62",
    "contentFile": "Ly8hIG1vbWVudC5qcwovLyEgdmVyc2lvbiA6IDIuOS4wCi8vISBhdXRob3JzIDogVGltIFdvb2QsIElza3JlbiBDaGVybmV2LCBNb21lbnQuanMgY29udHJpYnV0b3JzCi8vISBsaWNlbnNlIDogTUlUCi8vISBtb21lbnRqcy5jb20KCihmdW5jdGlvbiAodW5kZWZpbmVkKSB7CiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCiAgICAgICAgQ29uc3RhbnRzCiAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgogICAgdmFyIG1vbWVudCwKICAgICAgICBWRVJTSU9OID0gJzIuOS4wJywKICAgICAgICAvLyB0aGUgZ2xvYmFsLXNjb3BlIHRoaXMgaXMgTk9UIHRoZSBnbG9iYWwgb2JqZWN0IGluIE5vZGUuanMKICAgICAgICBnbG9iYWxTY29wZSA9ICh0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJyAmJiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgfHwgd2luZG93ID09PSBnbG9iYWwud2luZG93KSkgPyBnbG9iYWwgOiB0aGlzLAogICAgICAgIG9sZEdsb2JhbE1vbWVudCwKICAgICAgICByb3VuZCA9IE1hdGgucm91bmQsCiAgICAgICAgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LAogICAgICAgIGksCgogICAgICAgIFlFQVIgPSAwLAogICAgICAgIE1PTlRIID0gMSwKICAgICAgICBEQVRFID0gMiwKICAgICAgICBIT1VSID0gMywKICAgICAgICBNSU5VVEUgPSA0LAogICAgICAgIFNFQ09ORCA9IDUsCiAgICAgICAgTUlMTElTRUNPTkQgPSA2LAoKICAgICAgICAvLyBpbnRlcm5hbCBzdG9yYWdlIGZvciBsb2NhbGUgY29uZmlnIGZpbGVzCiAgICAgICAgbG9jYWxlcyA9IHt9LAoKICAgICAgICAvLyBleHRyYSBtb21lbnQgaW50ZXJuYWwgcHJvcGVydGllcyAocGx1Z2lucyByZWdpc3RlciBwcm9wcyBoZXJlKQogICAgICAgIG1vbWVudFByb3BlcnRpZXMgPSBbXSwKCiAgICAgICAgLy8gY2hlY2sgZm9yIG5vZGVKUwogICAgICAgIGhhc01vZHVsZSA9ICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUgJiYgbW9kdWxlLmV4cG9ydHMpLAoKICAgICAgICAvLyBBU1AuTkVUIGpzb24gZGF0ZSBmb3JtYXQgcmVnZXgKICAgICAgICBhc3BOZXRKc29uUmVnZXggPSAvXlwvP0RhdGVcKChcLT9cZCspL2ksCiAgICAgICAgYXNwTmV0VGltZVNwYW5Kc29uUmVnZXggPSAvKFwtKT8oPzooXGQqKVwuKT8oXGQrKVw6KFxkKykoPzpcOihcZCspXC4\/KFxkezN9KT8pPy8sCgogICAgICAgIC8vIGZyb20gaHR0cDovL2RvY3MuY2xvc3VyZS1saWJyYXJ5Lmdvb2dsZWNvZGUuY29tL2dpdC9jbG9zdXJlX2dvb2dfZGF0ZV9kYXRlLmpzLnNvdXJjZS5odG1sCiAgICAgICAgLy8gc29tZXdoYXQgbW9yZSBpbiBsaW5lIHdpdGggNC40LjMuMiAyMDA0IHNwZWMsIGJ1dCBhbGxvd3MgZGVjaW1hbCBhbnl3aGVyZQogICAgICAgIGlzb0R1cmF0aW9uUmVnZXggPSAvXigtKT9QKD86KD86KFswLTksLl0qKVkpPyg\/OihbMC05LC5dKilNKT8oPzooWzAtOSwuXSopRCk\/KD86VCg\/OihbMC05LC5dKilIKT8oPzooWzAtOSwuXSopTSk\/KD86KFswLTksLl0qKVMpPyk\/fChbMC05LC5dKilXKSQvLAoKICAgICAgICAvLyBmb3JtYXQgdG9rZW5zCiAgICAgICAgZm9ybWF0dGluZ1Rva2VucyA9IC8oXFtbXlxbXSpcXSl8KFxcKT8oTW98TU0\/TT9NP3xEb3xERERvfEREP0Q\/RD98ZGRkP2Q\/fGRvP3x3W298d10\/fFdbb3xXXT98UXxZWVlZWVl8WVlZWVl8WVlZWXxZWXxnZyhnZ2c\/KT98R0coR0dHPyk\/fGV8RXxhfEF8aGg\/fEhIP3xtbT98c3M\/fFN7MSw0fXx4fFh8eno\/fFpaP3wuKS9nLAogICAgICAgIGxvY2FsRm9ybWF0dGluZ1Rva2VucyA9IC8oXFtbXlxbXSpcXSl8KFxcKT8oTFRTfExUfExMP0w\/TD98bHsxLDR9KS9nLAoKICAgICAgICAvLyBwYXJzaW5nIHRva2VuIHJlZ2V4ZXMKICAgICAgICBwYXJzZVRva2VuT25lT3JUd29EaWdpdHMgPSAvXGRcZD8vLCAvLyAwIC0gOTkKICAgICAgICBwYXJzZVRva2VuT25lVG9UaHJlZURpZ2l0cyA9IC9cZHsxLDN9LywgLy8gMCAtIDk5OQogICAgICAgIHBhcnNlVG9rZW5PbmVUb0ZvdXJEaWdpdHMgPSAvXGR7MSw0fS8sIC8vIDAgLSA5OTk5CiAgICAgICAgcGFyc2VUb2tlbk9uZVRvU2l4RGlnaXRzID0gL1srXC1dP1xkezEsNn0vLCAvLyAtOTk5LDk5OSAtIDk5OSw5OTkKICAgICAgICBwYXJzZVRva2VuRGlnaXRzID0gL1xkKy8sIC8vIG5vbnplcm8gbnVtYmVyIG9mIGRpZ2l0cwogICAgICAgIHBhcnNlVG9rZW5Xb3JkID0gL1swLTldKlsnYS16XHUwMEEwLVx1MDVGRlx1MDcwMC1cdUQ3RkZcdUY5MDAtXHVGRENGXHVGREYwLVx1RkZFRl0rfFtcdTA2MDAtXHUwNkZGXC9dKyhccyo\/W1x1MDYwMC1cdTA2RkZdKyl7MSwyfS9pLCAvLyBhbnkgd29yZCAob3IgdHdvKSBjaGFyYWN0ZXJzIG9yIG51bWJlcnMgaW5jbHVkaW5nIHR3by90aHJlZSB3b3JkIG1vbnRoIGluIGFyYWJpYy4KICAgICAgICBwYXJzZVRva2VuVGltZXpvbmUgPSAvWnxbXCtcLV1cZFxkOj9cZFxkL2dpLCAvLyArMDA6MDAgLTAwOjAwICswMDAwIC0wMDAwIG9yIFoKICAgICAgICBwYXJzZVRva2VuVCA9IC9UL2ksIC8vIFQgKElTTyBzZXBhcmF0b3IpCiAgICAgICAgcGFyc2VUb2tlbk9mZnNldE1zID0gL1tcK1wtXT9cZCsvLCAvLyAxMjM0NTY3ODkwMTIzCiAgICAgICAgcGFyc2VUb2tlblRpbWVzdGFtcE1zID0gL1tcK1wtXT9cZCsoXC5cZHsxLDN9KT8vLCAvLyAxMjM0NTY3ODkgMTIzNDU2Nzg5LjEyMwoKICAgICAgICAvL3N0cmljdCBwYXJzaW5nIHJlZ2V4ZXMKICAgICAgICBwYXJzZVRva2VuT25lRGlnaXQgPSAvXGQvLCAvLyAwIC0gOQogICAgICAgIHBhcnNlVG9rZW5Ud29EaWdpdHMgPSAvXGRcZC8sIC8vIDAwIC0gOTkKICAgICAgICBwYXJzZVRva2VuVGhyZWVEaWdpdHMgPSAvXGR7M30vLCAvLyAwMDAgLSA5OTkKICAgICAgICBwYXJzZVRva2VuRm91ckRpZ2l0cyA9IC9cZHs0fS8sIC8vIDAwMDAgLSA5OTk5CiAgICAgICAgcGFyc2VUb2tlblNpeERpZ2l0cyA9IC9bKy1dP1xkezZ9LywgLy8gLTk5OSw5OTkgLSA5OTksOTk5CiAgICAgICAgcGFyc2VUb2tlblNpZ25lZE51bWJlciA9IC9bKy1dP1xkKy8sIC8vIC1pbmYgLSBpbmYKCiAgICAgICAgLy8gaXNvIDg2MDEgcmVnZXgKICAgICAgICAvLyAwMDAwLTAwLTAwIDAwMDAtVzAwIG9yIDAwMDAtVzAwLTAgKyBUICsgMDAgb3IgMDA6MDAgb3IgMDA6MDA6MDAgb3IgMDA6MDA6MDAuMDAwICsgKzAwOjAwIG9yICswMDAwIG9yICswMCkKICAgICAgICBpc29SZWdleCA9IC9eXHMqKD86WystXVxkezZ9fFxkezR9KS0oPzooXGRcZC1cZFxkKXwoV1xkXGQkKXwoV1xkXGQtXGQpfChcZFxkXGQpKSgoVHwgKShcZFxkKDpcZFxkKDpcZFxkKFwuXGQrKT8pPyk\/KT8oW1wrXC1dXGRcZCg\/Ojo\/XGRcZCk\/fFxzKlopPyk\\\/IChmb3JjZVNpZ24gPyAnKycgOiAnJykgOiAnLScpICsgb3V0cHV0OwogICAgfQoKICAgIGZ1bmN0aW9uIHBvc2l0aXZlTW9tZW50c0RpZmZlcmVuY2UoYmFzZSwgb3RoZXIpIHsKICAgICAgICB2YXIgcmVzID0ge21pbGxpc2Vjb25kczogMCwgbW9udGhzOiAwfTsKCiAgICAgICAgcmVzLm1vbnRocyA9IG90aGVyLm1vbnRoKCkgLSBiYXNlLm1vbnRoKCkgKwogICAgICAgICAgICAob3RoZXIueWVhcigpIC0gYmFzZS55ZWFyKCkpICogMTI7CiAgICAgICAgaWYgKGJhc2UuY2xvbmUoKS5hZGQocmVzLm1vbnRocywgJ00nKS5pc0FmdGVyKG90aGVyKSkgewogICAgICAgICAgICAtLXJlcy5tb250aHM7CiAgICAgICAgfQoKICAgICAgICByZXMubWlsbGlzZWNvbmRzID0gK290aGVyIC0gKyhiYXNlLmNsb25lKCkuYWRkKHJlcy5tb250aHMsICdNJykpOwoKICAgICAgICByZXR1cm4gcmVzOwogICAgfQoKICAgIGZ1bmN0aW9uIG1vbWVudHNEaWZmZXJlbmNlKGJhc2UsIG90aGVyKSB7CiAgICAgICAgdmFyIHJlczsKICAgICAgICBvdGhlciA9IG1ha2VBcyhvdGhlciwgYmFzZSk7CiAgICAgICAgaWYgKGJhc2UuaXNCZWZvcmUob3RoZXIpKSB7CiAgICAgICAgICAgIHJlcyA9IHBvc2l0aXZlTW9tZW50c0RpZmZlcmVuY2UoYmFzZSwgb3RoZXIpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJlcyA9IHBvc2l0aXZlTW9tZW50c0RpZmZlcmVuY2Uob3RoZXIsIGJhc2UpOwogICAgICAgICAgICByZXMubWlsbGlzZWNvbmRzID0gLXJlcy5taWxsaXNlY29uZHM7CiAgICAgICAgICAgIHJlcy5tb250aHMgPSAtcmVzLm1vbnRoczsKICAgICAgICB9CgogICAgICAgIHJldHVybiByZXM7CiAgICB9CgogICAgLy8gVE9ETzogcmVtb3ZlICduYW1lJyBhcmcgYWZ0ZXIgZGVwcmVjYXRpb24gaXMgcmVtb3ZlZAogICAgZnVuY3Rpb24gY3JlYXRlQWRkZXIoZGlyZWN0aW9uLCBuYW1lKSB7CiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICh2YWwsIHBlcmlvZCkgewogICAgICAgICAgICB2YXIgZHVyLCB0bXA7CiAgICAgICAgICAgIC8vaW52ZXJ0IHRoZSBhcmd1bWVudHMsIGJ1dCBjb21wbGFpbiBhYm91dCBpdAogICAgICAgICAgICBpZiAocGVyaW9kICE9PSBudWxsICYmICFpc05hTigrcGVyaW9kKSkgewogICAgICAgICAgICAgICAgZGVwcmVjYXRlU2ltcGxlKG5hbWUsICdtb21lbnQoKS4nICsgbmFtZSAgKyAnKHBlcmlvZCwgbnVtYmVyKSBpcyBkZXByZWNhdGVkLiBQbGVhc2UgdXNlIG1vbWVudCgpLicgKyBuYW1lICsgJyhudW1iZXIsIHBlcmlvZCkuJyk7CiAgICAgICAgICAgICAgICB0bXAgPSB2YWw7IHZhbCA9IHBlcmlvZDsgcGVyaW9kID0gdG1wOwogICAgICAgICAgICB9CgogICAgICAgICAgICB2YWwgPSB0eXBlb2YgdmFsID09PSAnc3RyaW5nJyA\/ICt2YWwgOiB2YWw7CiAgICAgICAgICAgIGR1ciA9IG1vbWVudC5kdXJhdGlvbih2YWwsIHBlcmlvZCk7CiAgICAgICAgICAgIGFkZE9yU3VidHJhY3REdXJhdGlvbkZyb21Nb21lbnQodGhpcywgZHVyLCBkaXJlY3Rpb24pOwogICAgICAgICAgICByZXR1cm4gdGhpczsKICAgICAgICB9OwogICAgfQoKICAgIGZ1bmN0aW9uIGFkZE9yU3VidHJhY3REdXJhdGlvbkZyb21Nb21lbnQobW9tLCBkdXJhdGlvbiwgaXNBZGRpbmcsIHVwZGF0ZU9mZnNldCkgewogICAgICAgIHZhciBtaWxsaXNlY29uZHMgPSBkdXJhdGlvbi5fbWlsbGlzZWNvbmRzLAogICAgICAgICAgICBkYXlzID0gZHVyYXRpb24uX2RheXMsCiAgICAgICAgICAgIG1vbnRocyA9IGR1cmF0aW9uLl9tb250aHM7CiAgICAgICAgdXBkYXRlT2Zmc2V0ID0gdXBkYXRlT2Zmc2V0ID09IG51bGwgPyB0cnVlIDogdXBkYXRlT2Zmc2V0OwoKICAgICAgICBpZiAobWlsbGlzZWNvbmRzKSB7CiAgICAgICAgICAgIG1vbS5fZC5zZXRUaW1lKCttb20uX2QgKyBtaWxsaXNlY29uZHMgKiBpc0FkZGluZyk7CiAgICAgICAgfQogICAgICAgIGlmIChkYXlzKSB7CiAgICAgICAgICAgIHJhd1NldHRlcihtb20sICdEYXRlJywgcmF3R2V0dGVyKG1vbSwgJ0RhdGUnKSArIGRheXMgKiBpc0FkZGluZyk7CiAgICAgICAgfQogICAgICAgIGlmIChtb250aHMpIHsKICAgICAgICAgICAgcmF3TW9udGhTZXR0ZXIobW9tLCByYXdHZXR0ZXIobW9tLCAnTW9udGgnKSArIG1vbnRocyAqIGlzQWRkaW5nKTsKICAgICAgICB9CiAgICAgICAgaWYgKHVwZGF0ZU9mZnNldCkgewogICAgICAgICAgICBtb21lbnQudXBkYXRlT2Zmc2V0KG1vbSwgZGF5cyB8fCBtb250aHMpOwogICAgICAgIH0KICAgIH0KCiAgICAvLyBjaGVjayBpZiBpcyBhbiBhcnJheQogICAgZnVuY3Rpb24gaXNBcnJheShpbnB1dCkgewogICAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaW5wdXQpID09PSAnW29iamVjdCBBcnJheV0nOwogICAgfQoKICAgIGZ1bmN0aW9uIGlzRGF0ZShpbnB1dCkgewogICAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaW5wdXQpID09PSAnW29iamVjdCBEYXRlXScgfHwKICAgICAgICAgICAgaW5wdXQgaW5zdGFuY2VvZiBEYXRlOwogICAgfQoKICAgIC8vIGNvbXBhcmUgdHdvIGFycmF5cywgcmV0dXJuIHRoZSBudW1iZXIgb2YgZGlmZmVyZW5jZXMKICAgIGZ1bmN0aW9uIGNvbXBhcmVBcnJheXMoYXJyYXkxLCBhcnJheTIsIGRvbnRDb252ZXJ0KSB7CiAgICAgICAgdmFyIGxlbiA9IE1hdGgubWluKGFycmF5MS5sZW5ndGgsIGFycmF5Mi5sZW5ndGgpLAogICAgICAgICAgICBsZW5ndGhEaWZmID0gTWF0aC5hYnMoYXJyYXkxLmxlbmd0aCAtIGFycmF5Mi5sZW5ndGgpLAogICAgICAgICAgICBkaWZmcyA9IDAsCiAgICAgICAgICAgIGk7CiAgICAgICAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgICAgIGlmICgoZG9udENvbnZlcnQgJiYgYXJyYXkxW2ldICE9PSBhcnJheTJbaV0pIHx8CiAgICAgICAgICAgICAgICAoIWRvbnRDb252ZXJ0ICYmIHRvSW50KGFycmF5MVtpXSkgIT09IHRvSW50KGFycmF5MltpXSkpKSB7CiAgICAgICAgICAgICAgICBkaWZmcysrOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiBkaWZmcyArIGxlbmd0aERpZmY7CiAgICB9CgogICAgZnVuY3Rpb24gbm9ybWFsaXplVW5pdHModW5pdHMpIHsKICAgICAgICBpZiAodW5pdHMpIHsKICAgICAgICAgICAgdmFyIGxvd2VyZWQgPSB1bml0cy50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoLyguKXMkLywgJyQxJyk7CiAgICAgICAgICAgIHVuaXRzID0gdW5pdEFsaWFzZXNbdW5pdHNdIHx8IGNhbWVsRnVuY3Rpb25zW2xvd2VyZWRdIHx8IGxvd2VyZWQ7CiAgICAgICAgfQogICAgICAgIHJldHVybiB1bml0czsKICAgIH0KCiAgICBmdW5jdGlvbiBub3JtYWxpemVPYmplY3RVbml0cyhpbnB1dE9iamVjdCkgewogICAgICAgIHZhciBub3JtYWxpemVkSW5wdXQgPSB7fSwKICAgICAgICAgICAgbm9ybWFsaXplZFByb3AsCiAgICAgICAgICAgIHByb3A7CgogICAgICAgIGZvciAocHJvcCBpbiBpbnB1dE9iamVjdCkgewogICAgICAgICAgICBpZiAoaGFzT3duUHJvcChpbnB1dE9iamVjdCwgcHJvcCkpIHsKICAgICAgICAgICAgICAgIG5vcm1hbGl6ZWRQcm9wID0gbm9ybWFsaXplVW5pdHMocHJvcCk7CiAgICAgICAgICAgICAgICBpZiAobm9ybWFsaXplZFByb3ApIHsKICAgICAgICAgICAgICAgICAgICBub3JtYWxpemVkSW5wdXRbbm9ybWFsaXplZFByb3BdID0gaW5wdXRPYmplY3RbcHJvcF07CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiBub3JtYWxpemVkSW5wdXQ7CiAgICB9CgogICAgZnVuY3Rpb24gbWFrZUxpc3QoZmllbGQpIHsKICAgICAgICB2YXIgY291bnQsIHNldHRlcjsKCiAgICAgICAgaWYgKGZpZWxkLmluZGV4T2YoJ3dlZWsnKSA9PT0gMCkgewogICAgICAgICAgICBjb3VudCA9IDc7CiAgICAgICAgICAgIHNldHRlciA9ICdkYXknOwogICAgICAgIH0KICAgICAgICBlbHNlIGlmIChmaWVsZC5pbmRleE9mKCdtb250aCcpID09PSAwKSB7CiAgICAgICAgICAgIGNvdW50ID0gMTI7CiAgICAgICAgICAgIHNldHRlciA9ICdtb250aCc7CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBtb21lbnRbZmllbGRdID0gZnVuY3Rpb24gKGZvcm1hdCwgaW5kZXgpIHsKICAgICAgICAgICAgdmFyIGksIGdldHRlciwKICAgICAgICAgICAgICAgIG1ldGhvZCA9IG1vbWVudC5fbG9jYWxlW2ZpZWxkXSwKICAgICAgICAgICAgICAgIHJlc3VsdHMgPSBbXTsKCiAgICAgICAgICAgIGlmICh0eXBlb2YgZm9ybWF0ID09PSAnbnVtYmVyJykgewogICAgICAgICAgICAgICAgaW5kZXggPSBmb3JtYXQ7CiAgICAgICAgICAgICAgICBmb3JtYXQgPSB1bmRlZmluZWQ7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGdldHRlciA9IGZ1bmN0aW9uIChpKSB7CiAgICAgICAgICAgICAgICB2YXIgbSA9IG1vbWVudCgpLnV0YygpLnNldChzZXR0ZXIsIGkpOwogICAgICAgICAgICAgICAgcmV0dXJuIG1ldGhvZC5jYWxsKG1vbWVudC5fbG9jYWxlLCBtLCBmb3JtYXQgfHwgJycpOwogICAgICAgICAgICB9OwoKICAgICAgICAgICAgaWYgKGluZGV4ICE9IG51bGwpIHsKICAgICAgICAgICAgICAgIHJldHVybiBnZXR0ZXIoaW5kZXgpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGNvdW50OyBpKyspIHsKICAgICAgICAgICAgICAgICAgICByZXN1bHRzLnB1c2goZ2V0dGVyKGkpKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHRzOwogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgIH0KCiAgICBmdW5jdGlvbiB0b0ludChhcmd1bWVudEZvckNvZXJjaW9uKSB7CiAgICAgICAgdmFyIGNvZXJjZWROdW1iZXIgPSArYXJndW1lbnRGb3JDb2VyY2lvbiwKICAgICAgICAgICAgdmFsdWUgPSAwOwoKICAgICAgICBpZiAoY29lcmNlZE51bWJlciAhPT0gMCAmJiBpc0Zpbml0ZShjb2VyY2VkTnVtYmVyKSkgewogICAgICAgICAgICBpZiAoY29lcmNlZE51bWJlciA+PSAwKSB7CiAgICAgICAgICAgICAgICB2YWx1ZSA9IE1hdGguZmxvb3IoY29lcmNlZE51bWJlcik7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB2YWx1ZSA9IE1hdGguY2VpbChjb2VyY2VkTnVtYmVyKTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHZhbHVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGRheXNJbk1vbnRoKHllYXIsIG1vbnRoKSB7CiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKERhdGUuVVRDKHllYXIsIG1vbnRoICsgMSwgMCkpLmdldFVUQ0RhdGUoKTsKICAgIH0KCiAgICBmdW5jdGlvbiB3ZWVrc0luWWVhcih5ZWFyLCBkb3csIGRveSkgewogICAgICAgIHJldHVybiB3ZWVrT2ZZZWFyKG1vbWVudChbeWVhciwgMTEsIDMxICsgZG93IC0gZG95XSksIGRvdywgZG95KS53ZWVrOwogICAgfQoKICAgIGZ1bmN0aW9uIGRheXNJblllYXIoeWVhcikgewogICAgICAgIHJldHVybiBpc0xlYXBZZWFyKHllYXIpID8gMzY2IDogMzY1OwogICAgfQoKICAgIGZ1bmN0aW9uIGlzTGVhcFllYXIoeWVhcikgewogICAgICAgIHJldHVybiAoeWVhciAlIDQgPT09IDAgJiYgeWVhciAlIDEwMCAhPT0gMCkgfHwgeWVhciAlIDQwMCA9PT0gMDsKICAgIH0KCiAgICBmdW5jdGlvbiBjaGVja092ZXJmbG93KG0pIHsKICAgICAgICB2YXIgb3ZlcmZsb3c7CiAgICAgICAgaWYgKG0uX2EgJiYgbS5fcGYub3ZlcmZsb3cgPT09IC0yKSB7CiAgICAgICAgICAgIG92ZXJmbG93ID0KICAgICAgICAgICAgICAgIG0uX2FbTU9OVEhdIDwgMCB8fCBtLl9hW01PTlRIXSA+IDExID8gTU9OVEggOgogICAgICAgICAgICAgICAgbS5fYVtEQVRFXSA8IDEgfHwgbS5fYVtEQVRFXSA+IGRheXNJbk1vbnRoKG0uX2FbWUVBUl0sIG0uX2FbTU9OVEhdKSA\/IERBVEUgOgogICAgICAgICAgICAgICAgbS5fYVtIT1VSXSA8IDAgfHwgbS5fYVtIT1VSXSA+IDI0IHx8CiAgICAgICAgICAgICAgICAgICAgKG0uX2FbSE9VUl0gPT09IDI0ICYmIChtLl9hW01JTlVURV0gIT09IDAgfHwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG0uX2FbU0VDT05EXSAhPT0gMCB8fAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbS5fYVtNSUxMSVNFQ09ORF0gIT09IDApKSA\/IEhPVVIgOgogICAgICAgICAgICAgICAgbS5fYVtNSU5VVEVdIDwgMCB8fCBtLl9hW01JTlVURV0gPiA1OSA\/IE1JTlVURSA6CiAgICAgICAgICAgICAgICBtLl9hW1NFQ09ORF0gPCAwIHx8IG0uX2FbU0VDT05EXSA+IDU5ID8gU0VDT05EIDoKICAgICAgICAgICAgICAgIG0uX2FbTUlMTElTRUNPTkRdIDwgMCB8fCBtLl9hW01JTExJU0VDT05EXSA+IDk5OSA\/IE1JTExJU0VDT05EIDoKICAgICAgICAgICAgICAgIC0xOwoKICAgICAgICAgICAgaWYgKG0uX3BmLl9vdmVyZmxvd0RheU9mWWVhciAmJiAob3ZlcmZsb3cgPCBZRUFSIHx8IG92ZXJmbG93ID4gREFURSkpIHsKICAgICAgICAgICAgICAgIG92ZXJmbG93ID0gREFURTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgbS5fcGYub3ZlcmZsb3cgPSBvdmVyZmxvdzsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gaXNWYWxpZChtKSB7CiAgICAgICAgaWYgKG0uX2lzVmFsaWQgPT0gbnVsbCkgewogICAgICAgICAgICBtLl9pc1ZhbGlkID0gIWlzTmFOKG0uX2QuZ2V0VGltZSgpKSAmJgogICAgICAgICAgICAgICAgbS5fcGYub3ZlcmZsb3cgPCAwICYmCiAgICAgICAgICAgICAgICAhbS5fcGYuZW1wdHkgJiYKICAgICAgICAgICAgICAgICFtLl9wZi5pbnZhbGlkTW9udGggJiYKICAgICAgICAgICAgICAgICFtLl9wZi5udWxsSW5wdXQgJiYKICAgICAgICAgICAgICAgICFtLl9wZi5pbnZhbGlkRm9ybWF0ICYmCiAgICAgICAgICAgICAgICAhbS5fcGYudXNlckludmFsaWRhdGVkOwoKICAgICAgICAgICAgaWYgKG0uX3N0cmljdCkgewogICAgICAgICAgICAgICAgbS5faXNWYWxpZCA9IG0uX2lzVmFsaWQgJiYKICAgICAgICAgICAgICAgICAgICBtLl9wZi5jaGFyc0xlZnRPdmVyID09PSAwICYmCiAgICAgICAgICAgICAgICAgICAgbS5fcGYudW51c2VkVG9rZW5zLmxlbmd0aCA9PT0gMCAmJgogICAgICAgICAgICAgICAgICAgIG0uX3BmLmJpZ0hvdXIgPT09IHVuZGVmaW5lZDsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gbS5faXNWYWxpZDsKICAgIH0KCiAgICBmdW5jdGlvbiBub3JtYWxpemVMb2NhbGUoa2V5KSB7CiAgICAgICAgcmV0dXJuIGtleSA\/IGtleS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoJ18nLCAnLScpIDoga2V5OwogICAgfQoKICAgIC8vIHBpY2sgdGhlIGxvY2FsZSBmcm9tIHRoZSBhcnJheQogICAgLy8gdHJ5IFsnZW4tYXUnLCAnZW4tZ2InXSBhcyAnZW4tYXUnLCAnZW4tZ2InLCAnZW4nLCBhcyBpbiBtb3ZlIHRocm91Z2ggdGhlIGxpc3QgdHJ5aW5nIGVhY2gKICAgIC8vIHN1YnN0cmluZyBmcm9tIG1vc3Qgc3BlY2lmaWMgdG8gbGVhc3QsIGJ1dCBtb3ZlIHRvIHRoZSBuZXh0IGFycmF5IGl0ZW0gaWYgaXQncyBhIG1vcmUgc3BlY2lmaWMgdmFyaWFudCB0aGFuIHRoZSBjdXJyZW50IHJvb3QKICAgIGZ1bmN0aW9uIGNob29zZUxvY2FsZShuYW1lcykgewogICAgICAgIHZhciBpID0gMCwgaiwgbmV4dCwgbG9jYWxlLCBzcGxpdDsKCiAgICAgICAgd2hpbGUgKGkgPCBuYW1lcy5sZW5ndGgpIHsKICAgICAgICAgICAgc3BsaXQgPSBub3JtYWxpemVMb2NhbGUobmFtZXNbaV0pLnNwbGl0KCctJyk7CiAgICAgICAgICAgIGogPSBzcGxpdC5sZW5ndGg7CiAgICAgICAgICAgIG5leHQgPSBub3JtYWxpemVMb2NhbGUobmFtZXNbaSArIDFdKTsKICAgICAgICAgICAgbmV4dCA9IG5leHQgPyBuZXh0LnNwbGl0KCctJykgOiBudWxsOwogICAgICAgICAgICB3aGlsZSAoaiA+IDApIHsKICAgICAgICAgICAgICAgIGxvY2FsZSA9IGxvYWRMb2NhbGUoc3BsaXQuc2xpY2UoMCwgaikuam9pbignLScpKTsKICAgICAgICAgICAgICAgIGlmIChsb2NhbGUpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gbG9jYWxlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYgKG5leHQgJiYgbmV4dC5sZW5ndGggPj0gaiAmJiBjb21wYXJlQXJyYXlzKHNwbGl0LCBuZXh0LCB0cnVlKSA+PSBqIC0gMSkgewogICAgICAgICAgICAgICAgICAgIC8vdGhlIG5leHQgYXJyYXkgaXRlbSBpcyBiZXR0ZXIgdGhhbiBhIHNoYWxsb3dlciBzdWJzdHJpbmcgb2YgdGhpcyBvbmUKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGotLTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpKys7CiAgICAgICAgfQogICAgICAgIHJldHVybiBudWxsOwogICAgfQoKICAgIGZ1bmN0aW9uIGxvYWRMb2NhbGUobmFtZSkgewogICAgICAgIHZhciBvbGRMb2NhbGUgPSBudWxsOwogICAgICAgIGlmICghbG9jYWxlc1tuYW1lXSAmJiBoYXNNb2R1bGUpIHsKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIG9sZExvY2FsZSA9IG1vbWVudC5sb2NhbGUoKTsKICAgICAgICAgICAgICAgIHJlcXVpcmUoJy4vbG9jYWxlLycgKyBuYW1lKTsKICAgICAgICAgICAgICAgIC8vIGJlY2F1c2UgZGVmaW5lTG9jYWxlIGN1cnJlbnRseSBhbHNvIHNldHMgdGhlIGdsb2JhbCBsb2NhbGUsIHdlIHdhbnQgdG8gdW5kbyB0aGF0IGZvciBsYXp5IGxvYWRlZCBsb2NhbGVzCiAgICAgICAgICAgICAgICBtb21lbnQubG9jYWxlKG9sZExvY2FsZSk7CiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHsgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gbG9jYWxlc1tuYW1lXTsKICAgIH0KCiAgICAvLyBSZXR1cm4gYSBtb21lbnQgZnJvbSBpbnB1dCwgdGhhdCBpcyBsb2NhbC91dGMvdXRjT2Zmc2V0IGVxdWl2YWxlbnQgdG8KICAgIC8vIG1vZGVsLgogICAgZnVuY3Rpb24gbWFrZUFzKGlucHV0LCBtb2RlbCkgewogICAgICAgIHZhciByZXMsIGRpZmY7CiAgICAgICAgaWYgKG1vZGVsLl9pc1VUQykgewogICAgICAgICAgICByZXMgPSBtb2RlbC5jbG9uZSgpOwogICAgICAgICAgICBkaWZmID0gKG1vbWVudC5pc01vbWVudChpbnB1dCkgfHwgaXNEYXRlKGlucHV0KSA\/CiAgICAgICAgICAgICAgICAgICAgK2lucHV0IDogK21vbWVudChpbnB1dCkpIC0gKCtyZXMpOwogICAgICAgICAgICAvLyBVc2UgbG93LWxldmVsIGFwaSwgYmVjYXVzZSB0aGlzIGZuIGlzIGxvdy1sZXZlbCBhcGkuCiAgICAgICAgICAgIHJlcy5fZC5zZXRUaW1lKCtyZXMuX2QgKyBkaWZmKTsKICAgICAgICAgICAgbW9tZW50LnVwZGF0ZU9mZnNldChyZXMsIGZhbHNlKTsKICAgICAgICAgICAgcmV0dXJuIHJlczsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gbW9tZW50KGlucHV0KS5sb2NhbCgpOwogICAgICAgIH0KICAgIH0KCiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCiAgICAgICAgTG9jYWxlCiAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgoKICAgIGV4dGVuZChMb2NhbGUucHJvdG90eXBlLCB7CgogICAgICAgIHNldCA6IGZ1bmN0aW9uIChjb25maWcpIHsKICAgICAgICAgICAgdmFyIHByb3AsIGk7CiAgICAgICAgICAgIGZvciAoaSBpbiBjb25maWcpIHsKICAgICAgICAgICAgICAgIHByb3AgPSBjb25maWdbaV07CiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHByb3AgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzW2ldID0gcHJvcDsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgdGhpc1snXycgKyBpXSA9IHByb3A7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gTGVuaWVudCBvcmRpbmFsIHBhcnNpbmcgYWNjZXB0cyBqdXN0IGEgbnVtYmVyIGluIGFkZGl0aW9uIHRvCiAgICAgICAgICAgIC8vIG51bWJlciArIChwb3NzaWJseSkgc3R1ZmYgY29taW5nIGZyb20gX29yZGluYWxQYXJzZUxlbmllbnQuCiAgICAgICAgICAgIHRoaXMuX29yZGluYWxQYXJzZUxlbmllbnQgPSBuZXcgUmVnRXhwKHRoaXMuX29yZGluYWxQYXJzZS5zb3VyY2UgKyAnfCcgKyAvXGR7MSwyfS8uc291cmNlKTsKICAgICAgICB9LAoKICAgICAgICBfbW9udGhzIDogJ0phbnVhcnlfRmVicnVhcnlfTWFyY2hfQXByaWxfTWF5X0p1bmVfSnVseV9BdWd1c3RfU2VwdGVtYmVyX09jdG9iZXJfTm92ZW1iZXJfRGVjZW1iZXInLnNwbGl0KCdfJyksCiAgICAgICAgbW9udGhzIDogZnVuY3Rpb24gKG0pIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuX21vbnRoc1ttLm1vbnRoKCldOwogICAgICAgIH0sCgogICAgICAgIF9tb250aHNTaG9ydCA6ICdKYW5fRmViX01hcl9BcHJfTWF5X0p1bl9KdWxfQXVnX1NlcF9PY3RfTm92X0RlYycuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6IGZ1bmN0aW9uIChtKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLl9tb250aHNTaG9ydFttLm1vbnRoKCldOwogICAgICAgIH0sCgogICAgICAgIG1vbnRoc1BhcnNlIDogZnVuY3Rpb24gKG1vbnRoTmFtZSwgZm9ybWF0LCBzdHJpY3QpIHsKICAgICAgICAgICAgdmFyIGksIG1vbSwgcmVnZXg7CgogICAgICAgICAgICBpZiAoIXRoaXMuX21vbnRoc1BhcnNlKSB7CiAgICAgICAgICAgICAgICB0aGlzLl9tb250aHNQYXJzZSA9IFtdOwogICAgICAgICAgICAgICAgdGhpcy5fbG9uZ01vbnRoc1BhcnNlID0gW107CiAgICAgICAgICAgICAgICB0aGlzLl9zaG9ydE1vbnRoc1BhcnNlID0gW107CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCAxMjsgaSsrKSB7CiAgICAgICAgICAgICAgICAvLyBtYWtlIHRoZSByZWdleCBpZiB3ZSBkb24ndCBoYXZlIGl0IGFscmVhZHkKICAgICAgICAgICAgICAgIG1vbSA9IG1vbWVudC51dGMoWzIwMDAsIGldKTsKICAgICAgICAgICAgICAgIGlmIChzdHJpY3QgJiYgIXRoaXMuX2xvbmdNb250aHNQYXJzZVtpXSkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuX2xvbmdNb250aHNQYXJzZVtpXSA9IG5ldyBSZWdFeHAoJ14nICsgdGhpcy5tb250aHMobW9tLCAnJykucmVwbGFjZSgnLicsICcnKSArICckJywgJ2knKTsKICAgICAgICAgICAgICAgICAgICB0aGlzLl9zaG9ydE1vbnRoc1BhcnNlW2ldID0gbmV3IFJlZ0V4cCgnXicgKyB0aGlzLm1vbnRoc1Nob3J0KG1vbSwgJycpLnJlcGxhY2UoJy4nLCAnJykgKyAnJCcsICdpJyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoIXN0cmljdCAmJiAhdGhpcy5fbW9udGhzUGFyc2VbaV0pIHsKICAgICAgICAgICAgICAgICAgICByZWdleCA9ICdeJyArIHRoaXMubW9udGhzKG1vbSwgJycpICsgJ3xeJyArIHRoaXMubW9udGhzU2hvcnQobW9tLCAnJyk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5fbW9udGhzUGFyc2VbaV0gPSBuZXcgUmVnRXhwKHJlZ2V4LnJlcGxhY2UoJy4nLCAnJyksICdpJyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAvLyB0ZXN0IHRoZSByZWdleAogICAgICAgICAgICAgICAgaWYgKHN0cmljdCAmJiBmb3JtYXQgPT09ICdNTU1NJyAmJiB0aGlzLl9sb25nTW9udGhzUGFyc2VbaV0udGVzdChtb250aE5hbWUpKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGk7CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHN0cmljdCAmJiBmb3JtYXQgPT09ICdNTU0nICYmIHRoaXMuX3Nob3J0TW9udGhzUGFyc2VbaV0udGVzdChtb250aE5hbWUpKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGk7CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCFzdHJpY3QgJiYgdGhpcy5fbW9udGhzUGFyc2VbaV0udGVzdChtb250aE5hbWUpKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICBfd2Vla2RheXMgOiAnU3VuZGF5X01vbmRheV9UdWVzZGF5X1dlZG5lc2RheV9UaHVyc2RheV9GcmlkYXlfU2F0dXJkYXknLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXMgOiBmdW5jdGlvbiAobSkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5fd2Vla2RheXNbbS5kYXkoKV07CiAgICAgICAgfSwKCiAgICAgICAgX3dlZWtkYXlzU2hvcnQgOiAnU3VuX01vbl9UdWVfV2VkX1RodV9GcmlfU2F0Jy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiBmdW5jdGlvbiAobSkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5fd2Vla2RheXNTaG9ydFttLmRheSgpXTsKICAgICAgICB9LAoKICAgICAgICBfd2Vla2RheXNNaW4gOiAnU3VfTW9fVHVfV2VfVGhfRnJfU2EnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNNaW4gOiBmdW5jdGlvbiAobSkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5fd2Vla2RheXNNaW5bbS5kYXkoKV07CiAgICAgICAgfSwKCiAgICAgICAgd2Vla2RheXNQYXJzZSA6IGZ1bmN0aW9uICh3ZWVrZGF5TmFtZSkgewogICAgICAgICAgICB2YXIgaSwgbW9tLCByZWdleDsKCiAgICAgICAgICAgIGlmICghdGhpcy5fd2Vla2RheXNQYXJzZSkgewogICAgICAgICAgICAgICAgdGhpcy5fd2Vla2RheXNQYXJzZSA9IFtdOwogICAgICAgICAgICB9CgogICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgNzsgaSsrKSB7CiAgICAgICAgICAgICAgICAvLyBtYWtlIHRoZSByZWdleCBpZiB3ZSBkb24ndCBoYXZlIGl0IGFscmVhZHkKICAgICAgICAgICAgICAgIGlmICghdGhpcy5fd2Vla2RheXNQYXJzZVtpXSkgewogICAgICAgICAgICAgICAgICAgIG1vbSA9IG1vbWVudChbMjAwMCwgMV0pLmRheShpKTsKICAgICAgICAgICAgICAgICAgICByZWdleCA9ICdeJyArIHRoaXMud2Vla2RheXMobW9tLCAnJykgKyAnfF4nICsgdGhpcy53ZWVrZGF5c1Nob3J0KG1vbSwgJycpICsgJ3xeJyArIHRoaXMud2Vla2RheXNNaW4obW9tLCAnJyk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5fd2Vla2RheXNQYXJzZVtpXSA9IG5ldyBSZWdFeHAocmVnZXgucmVwbGFjZSgnLicsICcnKSwgJ2knKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8vIHRlc3QgdGhlIHJlZ2V4CiAgICAgICAgICAgICAgICBpZiAodGhpcy5fd2Vla2RheXNQYXJzZVtpXS50ZXN0KHdlZWtkYXlOYW1lKSkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgX2xvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVFMgOiAnaDptbTpzcyBBJywKICAgICAgICAgICAgTFQgOiAnaDptbSBBJywKICAgICAgICAgICAgTCA6ICdNTS9ERC9ZWVlZJywKICAgICAgICAgICAgTEwgOiAnTU1NTSBELCBZWVlZJywKICAgICAgICAgICAgTExMIDogJ01NTU0gRCwgWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCwgTU1NTSBELCBZWVlZIExUJwogICAgICAgIH0sCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiBmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgICAgIHZhciBvdXRwdXQgPSB0aGlzLl9sb25nRGF0ZUZvcm1hdFtrZXldOwogICAgICAgICAgICBpZiAoIW91dHB1dCAmJiB0aGlzLl9sb25nRGF0ZUZvcm1hdFtrZXkudG9VcHBlckNhc2UoKV0pIHsKICAgICAgICAgICAgICAgIG91dHB1dCA9IHRoaXMuX2xvbmdEYXRlRm9ybWF0W2tleS50b1VwcGVyQ2FzZSgpXS5yZXBsYWNlKC9NTU1NfE1NfEREfGRkZGQvZywgZnVuY3Rpb24gKHZhbCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWwuc2xpY2UoMSk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHRoaXMuX2xvbmdEYXRlRm9ybWF0W2tleV0gPSBvdXRwdXQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIG91dHB1dDsKICAgICAgICB9LAoKICAgICAgICBpc1BNIDogZnVuY3Rpb24gKGlucHV0KSB7CiAgICAgICAgICAgIC8vIElFOCBRdWlya3MgTW9kZSAmIElFNyBTdGFuZGFyZHMgTW9kZSBkbyBub3QgYWxsb3cgYWNjZXNzaW5nIHN0cmluZ3MgbGlrZSBhcnJheXMKICAgICAgICAgICAgLy8gVXNpbmcgY2hhckF0IHNob3VsZCBiZSBtb3JlIGNvbXBhdGlibGUuCiAgICAgICAgICAgIHJldHVybiAoKGlucHV0ICsgJycpLnRvTG93ZXJDYXNlKCkuY2hhckF0KDApID09PSAncCcpOwogICAgICAgIH0sCgogICAgICAgIF9tZXJpZGllbVBhcnNlIDogL1thcF1cLj9tP1wuPy9pLAogICAgICAgIG1lcmlkaWVtIDogZnVuY3Rpb24gKGhvdXJzLCBtaW51dGVzLCBpc0xvd2VyKSB7CiAgICAgICAgICAgIGlmIChob3VycyA+IDExKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gaXNMb3dlciA\/ICdwbScgOiAnUE0nOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIGlzTG93ZXIgPyAnYW0nIDogJ0FNJzsKICAgICAgICAgICAgfQogICAgICAgIH0sCgoKICAgICAgICBfY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW1RvZGF5IGF0XSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW1RvbW9ycm93IGF0XSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgW2F0XSBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW1llc3RlcmRheSBhdF0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdbTGFzdF0gZGRkZCBbYXRdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogZnVuY3Rpb24gKGtleSwgbW9tLCBub3cpIHsKICAgICAgICAgICAgdmFyIG91dHB1dCA9IHRoaXMuX2NhbGVuZGFyW2tleV07CiAgICAgICAgICAgIHJldHVybiB0eXBlb2Ygb3V0cHV0ID09PSAnZnVuY3Rpb24nID8gb3V0cHV0LmFwcGx5KG1vbSwgW25vd10pIDogb3V0cHV0OwogICAgICAgIH0sCgogICAgICAgIF9yZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICdpbiAlcycsCiAgICAgICAgICAgIHBhc3QgOiAnJXMgYWdvJywKICAgICAgICAgICAgcyA6ICdhIGZldyBzZWNvbmRzJywKICAgICAgICAgICAgbSA6ICdhIG1pbnV0ZScsCiAgICAgICAgICAgIG1tIDogJyVkIG1pbnV0ZXMnLAogICAgICAgICAgICBoIDogJ2FuIGhvdXInLAogICAgICAgICAgICBoaCA6ICclZCBob3VycycsCiAgICAgICAgICAgIGQgOiAnYSBkYXknLAogICAgICAgICAgICBkZCA6ICclZCBkYXlzJywKICAgICAgICAgICAgTSA6ICdhIG1vbnRoJywKICAgICAgICAgICAgTU0gOiAnJWQgbW9udGhzJywKICAgICAgICAgICAgeSA6ICdhIHllYXInLAogICAgICAgICAgICB5eSA6ICclZCB5ZWFycycKICAgICAgICB9LAoKICAgICAgICByZWxhdGl2ZVRpbWUgOiBmdW5jdGlvbiAobnVtYmVyLCB3aXRob3V0U3VmZml4LCBzdHJpbmcsIGlzRnV0dXJlKSB7CiAgICAgICAgICAgIHZhciBvdXRwdXQgPSB0aGlzLl9yZWxhdGl2ZVRpbWVbc3RyaW5nXTsKICAgICAgICAgICAgcmV0dXJuICh0eXBlb2Ygb3V0cHV0ID09PSAnZnVuY3Rpb24nKSA\/CiAgICAgICAgICAgICAgICBvdXRwdXQobnVtYmVyLCB3aXRob3V0U3VmZml4LCBzdHJpbmcsIGlzRnV0dXJlKSA6CiAgICAgICAgICAgICAgICBvdXRwdXQucmVwbGFjZSgvJWQvaSwgbnVtYmVyKTsKICAgICAgICB9LAoKICAgICAgICBwYXN0RnV0dXJlIDogZnVuY3Rpb24gKGRpZmYsIG91dHB1dCkgewogICAgICAgICAgICB2YXIgZm9ybWF0ID0gdGhpcy5fcmVsYXRpdmVUaW1lW2RpZmYgPiAwID8gJ2Z1dHVyZScgOiAncGFzdCddOwogICAgICAgICAgICByZXR1cm4gdHlwZW9mIGZvcm1hdCA9PT0gJ2Z1bmN0aW9uJyA\/IGZvcm1hdChvdXRwdXQpIDogZm9ybWF0LnJlcGxhY2UoLyVzL2ksIG91dHB1dCk7CiAgICAgICAgfSwKCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuX29yZGluYWwucmVwbGFjZSgnJWQnLCBudW1iZXIpOwogICAgICAgIH0sCiAgICAgICAgX29yZGluYWwgOiAnJWQnLAogICAgICAgIF9vcmRpbmFsUGFyc2UgOiAvXGR7MSwyfS8sCgogICAgICAgIHByZXBhcnNlIDogZnVuY3Rpb24gKHN0cmluZykgewogICAgICAgICAgICByZXR1cm4gc3RyaW5nOwogICAgICAgIH0sCgogICAgICAgIHBvc3Rmb3JtYXQgOiBmdW5jdGlvbiAoc3RyaW5nKSB7CiAgICAgICAgICAgIHJldHVybiBzdHJpbmc7CiAgICAgICAgfSwKCiAgICAgICAgd2VlayA6IGZ1bmN0aW9uIChtb20pIHsKICAgICAgICAgICAgcmV0dXJuIHdlZWtPZlllYXIobW9tLCB0aGlzLl93ZWVrLmRvdywgdGhpcy5fd2Vlay5kb3kpLndlZWs7CiAgICAgICAgfSwKCiAgICAgICAgX3dlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDAsIC8vIFN1bmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA2ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiAxc3QgaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfSwKCiAgICAgICAgZmlyc3REYXlPZldlZWsgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLl93ZWVrLmRvdzsKICAgICAgICB9LAoKICAgICAgICBmaXJzdERheU9mWWVhciA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3dlZWsuZG95OwogICAgICAgIH0sCgogICAgICAgIF9pbnZhbGlkRGF0ZTogJ0ludmFsaWQgZGF0ZScsCiAgICAgICAgaW52YWxpZERhdGU6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2ludmFsaWREYXRlOwogICAgICAgIH0KICAgIH0pOwoKICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKICAgICAgICBGb3JtYXR0aW5nCiAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgoKICAgIGZ1bmN0aW9uIHJlbW92ZUZvcm1hdHRpbmdUb2tlbnMoaW5wdXQpIHsKICAgICAgICBpZiAoaW5wdXQubWF0Y2goL1xbW1xzXFNdLykpIHsKICAgICAgICAgICAgcmV0dXJuIGlucHV0LnJlcGxhY2UoL15cW3xcXSQvZywgJycpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gaW5wdXQucmVwbGFjZSgvXFwvZywgJycpOwogICAgfQoKICAgIGZ1bmN0aW9uIG1ha2VGb3JtYXRGdW5jdGlvbihmb3JtYXQpIHsKICAgICAgICB2YXIgYXJyYXkgPSBmb3JtYXQubWF0Y2goZm9ybWF0dGluZ1Rva2VucyksIGksIGxlbmd0aDsKCiAgICAgICAgZm9yIChpID0gMCwgbGVuZ3RoID0gYXJyYXkubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgaWYgKGZvcm1hdFRva2VuRnVuY3Rpb25zW2FycmF5W2ldXSkgewogICAgICAgICAgICAgICAgYXJyYXlbaV0gPSBmb3JtYXRUb2tlbkZ1bmN0aW9uc1thcnJheVtpXV07CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBhcnJheVtpXSA9IHJlbW92ZUZvcm1hdHRpbmdUb2tlbnMoYXJyYXlbaV0pOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKG1vbSkgewogICAgICAgICAgICB2YXIgb3V0cHV0ID0gJyc7CiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgb3V0cHV0ICs9IGFycmF5W2ldIGluc3RhbmNlb2YgRnVuY3Rpb24gPyBhcnJheVtpXS5jYWxsKG1vbSwgZm9ybWF0KSA6IGFycmF5W2ldOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBvdXRwdXQ7CiAgICAgICAgfTsKICAgIH0KCiAgICAvLyBmb3JtYXQgZGF0ZSB1c2luZyBuYXRpdmUgZGF0ZSBvYmplY3QKICAgIGZ1bmN0aW9uIGZvcm1hdE1vbWVudChtLCBmb3JtYXQpIHsKICAgICAgICBpZiAoIW0uaXNWYWxpZCgpKSB7CiAgICAgICAgICAgIHJldHVybiBtLmxvY2FsZURhdGEoKS5pbnZhbGlkRGF0ZSgpOwogICAgICAgIH0KCiAgICAgICAgZm9ybWF0ID0gZXhwYW5kRm9ybWF0KGZvcm1hdCwgbS5sb2NhbGVEYXRhKCkpOwoKICAgICAgICBpZiAoIWZvcm1hdEZ1bmN0aW9uc1tmb3JtYXRdKSB7CiAgICAgICAgICAgIGZvcm1hdEZ1bmN0aW9uc1tmb3JtYXRdID0gbWFrZUZvcm1hdEZ1bmN0aW9uKGZvcm1hdCk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gZm9ybWF0RnVuY3Rpb25zW2Zvcm1hdF0obSk7CiAgICB9CgogICAgZnVuY3Rpb24gZXhwYW5kRm9ybWF0KGZvcm1hdCwgbG9jYWxlKSB7CiAgICAgICAgdmFyIGkgPSA1OwoKICAgICAgICBmdW5jdGlvbiByZXBsYWNlTG9uZ0RhdGVGb3JtYXRUb2tlbnMoaW5wdXQpIHsKICAgICAgICAgICAgcmV0dXJuIGxvY2FsZS5sb25nRGF0ZUZvcm1hdChpbnB1dCkgfHwgaW5wdXQ7CiAgICAgICAgfQoKICAgICAgICBsb2NhbEZvcm1hdHRpbmdUb2tlbnMubGFzdEluZGV4ID0gMDsKICAgICAgICB3aGlsZSAoaSA+PSAwICYmIGxvY2FsRm9ybWF0dGluZ1Rva2Vucy50ZXN0KGZvcm1hdCkpIHsKICAgICAgICAgICAgZm9ybWF0ID0gZm9ybWF0LnJlcGxhY2UobG9jYWxGb3JtYXR0aW5nVG9rZW5zLCByZXBsYWNlTG9uZ0RhdGVGb3JtYXRUb2tlbnMpOwogICAgICAgICAgICBsb2NhbEZvcm1hdHRpbmdUb2tlbnMubGFzdEluZGV4ID0gMDsKICAgICAgICAgICAgaSAtPSAxOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGZvcm1hdDsKICAgIH0KCgogICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgogICAgICAgIFBhcnNpbmcKICAgICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KCgogICAgLy8gZ2V0IHRoZSByZWdleCB0byBmaW5kIHRoZSBuZXh0IHRva2VuCiAgICBmdW5jdGlvbiBnZXRQYXJzZVJlZ2V4Rm9yVG9rZW4odG9rZW4sIGNvbmZpZykgewogICAgICAgIHZhciBhLCBzdHJpY3QgPSBjb25maWcuX3N0cmljdDsKICAgICAgICBzd2l0Y2ggKHRva2VuKSB7CiAgICAgICAgY2FzZSAnUSc6CiAgICAgICAgICAgIHJldHVybiBwYXJzZVRva2VuT25lRGlnaXQ7CiAgICAgICAgY2FzZSAnRERERCc6CiAgICAgICAgICAgIHJldHVybiBwYXJzZVRva2VuVGhyZWVEaWdpdHM7CiAgICAgICAgY2FzZSAnWVlZWSc6CiAgICAgICAgY2FzZSAnR0dHRyc6CiAgICAgICAgY2FzZSAnZ2dnZyc6CiAgICAgICAgICAgIHJldHVybiBzdHJpY3QgPyBwYXJzZVRva2VuRm91ckRpZ2l0cyA6IHBhcnNlVG9rZW5PbmVUb0ZvdXJEaWdpdHM7CiAgICAgICAgY2FzZSAnWSc6CiAgICAgICAgY2FzZSAnRyc6CiAgICAgICAgY2FzZSAnZyc6CiAgICAgICAgICAgIHJldHVybiBwYXJzZVRva2VuU2lnbmVkTnVtYmVyOwogICAgICAgIGNhc2UgJ1lZWVlZWSc6CiAgICAgICAgY2FzZSAnWVlZWVknOgogICAgICAgIGNhc2UgJ0dHR0dHJzoKICAgICAgICBjYXNlICdnZ2dnZyc6CiAgICAgICAgICAgIHJldHVybiBzdHJpY3QgPyBwYXJzZVRva2VuU2l4RGlnaXRzIDogcGFyc2VUb2tlbk9uZVRvU2l4RGlnaXRzOwogICAgICAgIGNhc2UgJ1MnOgogICAgICAgICAgICBpZiAoc3RyaWN0KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcGFyc2VUb2tlbk9uZURpZ2l0OwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8qIGZhbGxzIHRocm91Z2ggKi8KICAgICAgICBjYXNlICdTUyc6CiAgICAgICAgICAgIGlmIChzdHJpY3QpIHsKICAgICAgICAgICAgICAgIHJldHVybiBwYXJzZVRva2VuVHdvRGlnaXRzOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8qIGZhbGxzIHRocm91Z2ggKi8KICAgICAgICBjYXNlICdTU1MnOgogICAgICAgICAgICBpZiAoc3RyaWN0KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcGFyc2VUb2tlblRocmVlRGlnaXRzOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8qIGZhbGxzIHRocm91Z2ggKi8KICAgICAgICBjYXNlICdEREQnOgogICAgICAgICAgICByZXR1cm4gcGFyc2VUb2tlbk9uZVRvVGhyZWVEaWdpdHM7CiAgICAgICAgY2FzZSAnTU1NJzoKICAgICAgICBjYXNlICdNTU1NJzoKICAgICAgICBjYXNlICdkZCc6CiAgICAgICAgY2FzZSAnZGRkJzoKICAgICAgICBjYXNlICdkZGRkJzoKICAgICAgICAgICAgcmV0dXJuIHBhcnNlVG9rZW5Xb3JkOwogICAgICAgIGNhc2UgJ2EnOgogICAgICAgIGNhc2UgJ0EnOgogICAgICAgICAgICByZXR1cm4gY29uZmlnLl9sb2NhbGUuX21lcmlkaWVtUGFyc2U7CiAgICAgICAgY2FzZSAneCc6CiAgICAgICAgICAgIHJldHVybiBwYXJzZVRva2VuT2Zmc2V0TXM7CiAgICAgICAgY2FzZSAnWCc6CiAgICAgICAgICAgIHJldHVybiBwYXJzZVRva2VuVGltZXN0YW1wTXM7CiAgICAgICAgY2FzZSAnWic6CiAgICAgICAgY2FzZSAnWlonOgogICAgICAgICAgICByZXR1cm4gcGFyc2VUb2tlblRpbWV6b25lOwogICAgICAgIGNhc2UgJ1QnOgogICAgICAgICAgICByZXR1cm4gcGFyc2VUb2tlblQ7CiAgICAgICAgY2FzZSAnU1NTUyc6CiAgICAgICAgICAgIHJldHVybiBwYXJzZVRva2VuRGlnaXRzOwogICAgICAgIGNhc2UgJ01NJzoKICAgICAgICBjYXNlICdERCc6CiAgICAgICAgY2FzZSAnWVknOgogICAgICAgIGNhc2UgJ0dHJzoKICAgICAgICBjYXNlICdnZyc6CiAgICAgICAgY2FzZSAnSEgnOgogICAgICAgIGNhc2UgJ2hoJzoKICAgICAgICBjYXNlICdtbSc6CiAgICAgICAgY2FzZSAnc3MnOgogICAgICAgIGNhc2UgJ3d3JzoKICAgICAgICBjYXNlICdXVyc6CiAgICAgICAgICAgIHJldHVybiBzdHJpY3QgPyBwYXJzZVRva2VuVHdvRGlnaXRzIDogcGFyc2VUb2tlbk9uZU9yVHdvRGlnaXRzOwogICAgICAgIGNhc2UgJ00nOgogICAgICAgIGNhc2UgJ0QnOgogICAgICAgIGNhc2UgJ2QnOgogICAgICAgIGNhc2UgJ0gnOgogICAgICAgIGNhc2UgJ2gnOgogICAgICAgIGNhc2UgJ20nOgogICAgICAgIGNhc2UgJ3MnOgogICAgICAgIGNhc2UgJ3cnOgogICAgICAgIGNhc2UgJ1cnOgogICAgICAgIGNhc2UgJ2UnOgogICAgICAgIGNhc2UgJ0UnOgogICAgICAgICAgICByZXR1cm4gcGFyc2VUb2tlbk9uZU9yVHdvRGlnaXRzOwogICAgICAgIGNhc2UgJ0RvJzoKICAgICAgICAgICAgcmV0dXJuIHN0cmljdCA\\/IDEgOiAwKSA6IGNvbmZpZy5fYVtpXTsKICAgICAgICB9CgogICAgICAgIC8vIENoZWNrIGZvciAyNDowMDowMC4wMDAKICAgICAgICBpZiAoY29uZmlnLl9hW0hPVVJdID09PSAyNCAmJgogICAgICAgICAgICAgICAgY29uZmlnLl9hW01JTlVURV0gPT09IDAgJiYKICAgICAgICAgICAgICAgIGNvbmZpZy5fYVtTRUNPTkRdID09PSAwICYmCiAgICAgICAgICAgICAgICBjb25maWcuX2FbTUlMTElTRUNPTkRdID09PSAwKSB7CiAgICAgICAgICAgIGNvbmZpZy5fbmV4dERheSA9IHRydWU7CiAgICAgICAgICAgIGNvbmZpZy5fYVtIT1VSXSA9IDA7CiAgICAgICAgfQoKICAgICAgICBjb25maWcuX2QgPSAoY29uZmlnLl91c2VVVEMgPyBtYWtlVVRDRGF0ZSA6IG1ha2VEYXRlKS5hcHBseShudWxsLCBpbnB1dCk7CiAgICAgICAgLy8gQXBwbHkgdGltZXpvbmUgb2Zmc2V0IGZyb20gaW5wdXQuIFRoZSBhY3R1YWwgdXRjT2Zmc2V0IGNhbiBiZSBjaGFuZ2VkCiAgICAgICAgLy8gd2l0aCBwYXJzZVpvbmUuCiAgICAgICAgaWYgKGNvbmZpZy5fdHptICE9IG51bGwpIHsKICAgICAgICAgICAgY29uZmlnLl9kLnNldFVUQ01pbnV0ZXMoY29uZmlnLl9kLmdldFVUQ01pbnV0ZXMoKSAtIGNvbmZpZy5fdHptKTsKICAgICAgICB9CgogICAgICAgIGlmIChjb25maWcuX25leHREYXkpIHsKICAgICAgICAgICAgY29uZmlnLl9hW0hPVVJdID0gMjQ7CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIGRhdGVGcm9tT2JqZWN0KGNvbmZpZykgewogICAgICAgIHZhciBub3JtYWxpemVkSW5wdXQ7CgogICAgICAgIGlmIChjb25maWcuX2QpIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgbm9ybWFsaXplZElucHV0ID0gbm9ybWFsaXplT2JqZWN0VW5pdHMoY29uZmlnLl9pKTsKICAgICAgICBjb25maWcuX2EgPSBbCiAgICAgICAgICAgIG5vcm1hbGl6ZWRJbnB1dC55ZWFyLAogICAgICAgICAgICBub3JtYWxpemVkSW5wdXQubW9udGgsCiAgICAgICAgICAgIG5vcm1hbGl6ZWRJbnB1dC5kYXkgfHwgbm9ybWFsaXplZElucHV0LmRhdGUsCiAgICAgICAgICAgIG5vcm1hbGl6ZWRJbnB1dC5ob3VyLAogICAgICAgICAgICBub3JtYWxpemVkSW5wdXQubWludXRlLAogICAgICAgICAgICBub3JtYWxpemVkSW5wdXQuc2Vjb25kLAogICAgICAgICAgICBub3JtYWxpemVkSW5wdXQubWlsbGlzZWNvbmQKICAgICAgICBdOwoKICAgICAgICBkYXRlRnJvbUNvbmZpZyhjb25maWcpOwogICAgfQoKICAgIGZ1bmN0aW9uIGN1cnJlbnREYXRlQXJyYXkoY29uZmlnKSB7CiAgICAgICAgdmFyIG5vdyA9IG5ldyBEYXRlKCk7CiAgICAgICAgaWYgKGNvbmZpZy5fdXNlVVRDKSB7CiAgICAgICAgICAgIHJldHVybiBbCiAgICAgICAgICAgICAgICBub3cuZ2V0VVRDRnVsbFllYXIoKSwKICAgICAgICAgICAgICAgIG5vdy5nZXRVVENNb250aCgpLAogICAgICAgICAgICAgICAgbm93LmdldFVUQ0RhdGUoKQogICAgICAgICAgICBdOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiBbbm93LmdldEZ1bGxZZWFyKCksIG5vdy5nZXRNb250aCgpLCBub3cuZ2V0RGF0ZSgpXTsKICAgICAgICB9CiAgICB9CgogICAgLy8gZGF0ZSBmcm9tIHN0cmluZyBhbmQgZm9ybWF0IHN0cmluZwogICAgZnVuY3Rpb24gbWFrZURhdGVGcm9tU3RyaW5nQW5kRm9ybWF0KGNvbmZpZykgewogICAgICAgIGlmIChjb25maWcuX2YgPT09IG1vbWVudC5JU09fODYwMSkgewogICAgICAgICAgICBwYXJzZUlTTyhjb25maWcpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBjb25maWcuX2EgPSBbXTsKICAgICAgICBjb25maWcuX3BmLmVtcHR5ID0gdHJ1ZTsKCiAgICAgICAgLy8gVGhpcyBhcnJheSBpcyB1c2VkIHRvIG1ha2UgYSBEYXRlLCBlaXRoZXIgd2l0aCBgbmV3IERhdGVgIG9yIGBEYXRlLlVUQ2AKICAgICAgICB2YXIgc3RyaW5nID0gJycgKyBjb25maWcuX2ksCiAgICAgICAgICAgIGksIHBhcnNlZElucHV0LCB0b2tlbnMsIHRva2VuLCBza2lwcGVkLAogICAgICAgICAgICBzdHJpbmdMZW5ndGggPSBzdHJpbmcubGVuZ3RoLAogICAgICAgICAgICB0b3RhbFBhcnNlZElucHV0TGVuZ3RoID0gMDsKCiAgICAgICAgdG9rZW5zID0gZXhwYW5kRm9ybWF0KGNvbmZpZy5fZiwgY29uZmlnLl9sb2NhbGUpLm1hdGNoKGZvcm1hdHRpbmdUb2tlbnMpIHx8IFtdOwoKICAgICAgICBmb3IgKGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIHRva2VuID0gdG9rZW5zW2ldOwogICAgICAgICAgICBwYXJzZWRJbnB1dCA9IChzdHJpbmcubWF0Y2goZ2V0UGFyc2VSZWdleEZvclRva2VuKHRva2VuLCBjb25maWcpKSB8fCBbXSlbMF07CiAgICAgICAgICAgIGlmIChwYXJzZWRJbnB1dCkgewogICAgICAgICAgICAgICAgc2tpcHBlZCA9IHN0cmluZy5zdWJzdHIoMCwgc3RyaW5nLmluZGV4T2YocGFyc2VkSW5wdXQpKTsKICAgICAgICAgICAgICAgIGlmIChza2lwcGVkLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgICAgICBjb25maWcuX3BmLnVudXNlZElucHV0LnB1c2goc2tpcHBlZCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBzdHJpbmcgPSBzdHJpbmcuc2xpY2Uoc3RyaW5nLmluZGV4T2YocGFyc2VkSW5wdXQpICsgcGFyc2VkSW5wdXQubGVuZ3RoKTsKICAgICAgICAgICAgICAgIHRvdGFsUGFyc2VkSW5wdXRMZW5ndGggKz0gcGFyc2VkSW5wdXQubGVuZ3RoOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIGRvbid0IHBhcnNlIGlmIGl0J3Mgbm90IGEga25vd24gdG9rZW4KICAgICAgICAgICAgaWYgKGZvcm1hdFRva2VuRnVuY3Rpb25zW3Rva2VuXSkgewogICAgICAgICAgICAgICAgaWYgKHBhcnNlZElucHV0KSB7CiAgICAgICAgICAgICAgICAgICAgY29uZmlnLl9wZi5lbXB0eSA9IGZhbHNlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgY29uZmlnLl9wZi51bnVzZWRUb2tlbnMucHVzaCh0b2tlbik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBhZGRUaW1lVG9BcnJheUZyb21Ub2tlbih0b2tlbiwgcGFyc2VkSW5wdXQsIGNvbmZpZyk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZiAoY29uZmlnLl9zdHJpY3QgJiYgIXBhcnNlZElucHV0KSB7CiAgICAgICAgICAgICAgICBjb25maWcuX3BmLnVudXNlZFRva2Vucy5wdXNoKHRva2VuKTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLy8gYWRkIHJlbWFpbmluZyB1bnBhcnNlZCBpbnB1dCBsZW5ndGggdG8gdGhlIHN0cmluZwogICAgICAgIGNvbmZpZy5fcGYuY2hhcnNMZWZ0T3ZlciA9IHN0cmluZ0xlbmd0aCAtIHRvdGFsUGFyc2VkSW5wdXRMZW5ndGg7CiAgICAgICAgaWYgKHN0cmluZy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgIGNvbmZpZy5fcGYudW51c2VkSW5wdXQucHVzaChzdHJpbmcpOwogICAgICAgIH0KCiAgICAgICAgLy8gY2xlYXIgXzEyaCBmbGFnIGlmIGhvdXIgaXMgPD0gMTIKICAgICAgICBpZiAoY29uZmlnLl9wZi5iaWdIb3VyID09PSB0cnVlICYmIGNvbmZpZy5fYVtIT1VSXSA8PSAxMikgewogICAgICAgICAgICBjb25maWcuX3BmLmJpZ0hvdXIgPSB1bmRlZmluZWQ7CiAgICAgICAgfQogICAgICAgIC8vIGhhbmRsZSBtZXJpZGllbQogICAgICAgIGNvbmZpZy5fYVtIT1VSXSA9IG1lcmlkaWVtRml4V3JhcChjb25maWcuX2xvY2FsZSwgY29uZmlnLl9hW0hPVVJdLAogICAgICAgICAgICAgICAgY29uZmlnLl9tZXJpZGllbSk7CiAgICAgICAgZGF0ZUZyb21Db25maWcoY29uZmlnKTsKICAgICAgICBjaGVja092ZXJmbG93KGNvbmZpZyk7CiAgICB9CgogICAgZnVuY3Rpb24gdW5lc2NhcGVGb3JtYXQocykgewogICAgICAgIHJldHVybiBzLnJlcGxhY2UoL1xcKFxbKXxcXChcXSl8XFsoW15cXVxbXSopXF18XFwoLikvZywgZnVuY3Rpb24gKG1hdGNoZWQsIHAxLCBwMiwgcDMsIHA0KSB7CiAgICAgICAgICAgIHJldHVybiBwMSB8fCBwMiB8fCBwMyB8fCBwNDsKICAgICAgICB9KTsKICAgIH0KCiAgICAvLyBDb2RlIGZyb20gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8zNTYxNDkzL2lzLXRoZXJlLWEtcmVnZXhwLWVzY2FwZS1mdW5jdGlvbi1pbi1qYXZhc2NyaXB0CiAgICBmdW5jdGlvbiByZWdleHBFc2NhcGUocykgewogICAgICAgIHJldHVybiBzLnJlcGxhY2UoL1stXC9cXF4kKis\\/IHdlZWtkYXkgOiBmaXJzdERheU9mV2VlazsKICAgICAgICBkYXlzVG9BZGQgPSBmaXJzdERheU9mV2VlayAtIGQgKyAoZCA+IGZpcnN0RGF5T2ZXZWVrT2ZZZWFyID8gNyA6IDApIC0gKGQgPCBmaXJzdERheU9mV2VlayA\/IDcgOiAwKTsKICAgICAgICBkYXlPZlllYXIgPSA3ICogKHdlZWsgLSAxKSArICh3ZWVrZGF5IC0gZmlyc3REYXlPZldlZWspICsgZGF5c1RvQWRkICsgMTsKCiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgeWVhcjogZGF5T2ZZZWFyID4gMCA\\/IG1vbWVudC51dGModGhpcy5fYSkgOiBtb21lbnQodGhpcy5fYSkpLnRvQXJyYXkoKSkgPiAwOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfSwKCiAgICAgICAgcGFyc2luZ0ZsYWdzIDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICByZXR1cm4gZXh0ZW5kKHt9LCB0aGlzLl9wZik7CiAgICAgICAgfSwKCiAgICAgICAgaW52YWxpZEF0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLl9wZi5vdmVyZmxvdzsKICAgICAgICB9LAoKICAgICAgICB1dGMgOiBmdW5jdGlvbiAoa2VlcExvY2FsVGltZSkgewogICAgICAgICAgICByZXR1cm4gdGhpcy51dGNPZmZzZXQoMCwga2VlcExvY2FsVGltZSk7CiAgICAgICAgfSwKCiAgICAgICAgbG9jYWwgOiBmdW5jdGlvbiAoa2VlcExvY2FsVGltZSkgewogICAgICAgICAgICBpZiAodGhpcy5faXNVVEMpIHsKICAgICAgICAgICAgICAgIHRoaXMudXRjT2Zmc2V0KDAsIGtlZXBMb2NhbFRpbWUpOwogICAgICAgICAgICAgICAgdGhpcy5faXNVVEMgPSBmYWxzZTsKCiAgICAgICAgICAgICAgICBpZiAoa2VlcExvY2FsVGltZSkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuc3VidHJhY3QodGhpcy5fZGF0ZVV0Y09mZnNldCgpLCAnbScpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0aGlzOwogICAgICAgIH0sCgogICAgICAgIGZvcm1hdCA6IGZ1bmN0aW9uIChpbnB1dFN0cmluZykgewogICAgICAgICAgICB2YXIgb3V0cHV0ID0gZm9ybWF0TW9tZW50KHRoaXMsIGlucHV0U3RyaW5nIHx8IG1vbWVudC5kZWZhdWx0Rm9ybWF0KTsKICAgICAgICAgICAgcmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpLnBvc3Rmb3JtYXQob3V0cHV0KTsKICAgICAgICB9LAoKICAgICAgICBhZGQgOiBjcmVhdGVBZGRlcigxLCAnYWRkJyksCgogICAgICAgIHN1YnRyYWN0IDogY3JlYXRlQWRkZXIoLTEsICdzdWJ0cmFjdCcpLAoKICAgICAgICBkaWZmIDogZnVuY3Rpb24gKGlucHV0LCB1bml0cywgYXNGbG9hdCkgewogICAgICAgICAgICB2YXIgdGhhdCA9IG1ha2VBcyhpbnB1dCwgdGhpcyksCiAgICAgICAgICAgICAgICB6b25lRGlmZiA9ICh0aGF0LnV0Y09mZnNldCgpIC0gdGhpcy51dGNPZmZzZXQoKSkgKiA2ZTQsCiAgICAgICAgICAgICAgICBhbmNob3IsIGRpZmYsIG91dHB1dCwgZGF5c0FkanVzdDsKCiAgICAgICAgICAgIHVuaXRzID0gbm9ybWFsaXplVW5pdHModW5pdHMpOwoKICAgICAgICAgICAgaWYgKHVuaXRzID09PSAneWVhcicgfHwgdW5pdHMgPT09ICdtb250aCcgfHwgdW5pdHMgPT09ICdxdWFydGVyJykgewogICAgICAgICAgICAgICAgb3V0cHV0ID0gbW9udGhEaWZmKHRoaXMsIHRoYXQpOwogICAgICAgICAgICAgICAgaWYgKHVuaXRzID09PSAncXVhcnRlcicpIHsKICAgICAgICAgICAgICAgICAgICBvdXRwdXQgPSBvdXRwdXQgLyAzOwogICAgICAgICAgICAgICAgfSBlbHNlIGlmICh1bml0cyA9PT0gJ3llYXInKSB7CiAgICAgICAgICAgICAgICAgICAgb3V0cHV0ID0gb3V0cHV0IC8gMTI7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBkaWZmID0gdGhpcyAtIHRoYXQ7CiAgICAgICAgICAgICAgICBvdXRwdXQgPSB1bml0cyA9PT0gJ3NlY29uZCcgPyBkaWZmIC8gMWUzIDogLy8gMTAwMAogICAgICAgICAgICAgICAgICAgIHVuaXRzID09PSAnbWludXRlJyA\/IGRpZmYgLyA2ZTQgOiAvLyAxMDAwICogNjAKICAgICAgICAgICAgICAgICAgICB1bml0cyA9PT0gJ2hvdXInID8gZGlmZiAvIDM2ZTUgOiAvLyAxMDAwICogNjAgKiA2MAogICAgICAgICAgICAgICAgICAgIHVuaXRzID09PSAnZGF5JyA\/IChkaWZmIC0gem9uZURpZmYpIC8gODY0ZTUgOiAvLyAxMDAwICogNjAgKiA2MCAqIDI0LCBuZWdhdGUgZHN0CiAgICAgICAgICAgICAgICAgICAgdW5pdHMgPT09ICd3ZWVrJyA\/IChkaWZmIC0gem9uZURpZmYpIC8gNjA0OGU1IDogLy8gMTAwMCAqIDYwICogNjAgKiAyNCAqIDcsIG5lZ2F0ZSBkc3QKICAgICAgICAgICAgICAgICAgICBkaWZmOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBhc0Zsb2F0ID8gb3V0cHV0IDogYWJzUm91bmQob3V0cHV0KTsKICAgICAgICB9LAoKICAgICAgICBmcm9tIDogZnVuY3Rpb24gKHRpbWUsIHdpdGhvdXRTdWZmaXgpIHsKICAgICAgICAgICAgcmV0dXJuIG1vbWVudC5kdXJhdGlvbih7dG86IHRoaXMsIGZyb206IHRpbWV9KS5sb2NhbGUodGhpcy5sb2NhbGUoKSkuaHVtYW5pemUoIXdpdGhvdXRTdWZmaXgpOwogICAgICAgIH0sCgogICAgICAgIGZyb21Ob3cgOiBmdW5jdGlvbiAod2l0aG91dFN1ZmZpeCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5mcm9tKG1vbWVudCgpLCB3aXRob3V0U3VmZml4KTsKICAgICAgICB9LAoKICAgICAgICBjYWxlbmRhciA6IGZ1bmN0aW9uICh0aW1lKSB7CiAgICAgICAgICAgIC8vIFdlIHdhbnQgdG8gY29tcGFyZSB0aGUgc3RhcnQgb2YgdG9kYXksIHZzIHRoaXMuCiAgICAgICAgICAgIC8vIEdldHRpbmcgc3RhcnQtb2YtdG9kYXkgZGVwZW5kcyBvbiB3aGV0aGVyIHdlJ3JlIGxvY2F0L3V0Yy9vZmZzZXQKICAgICAgICAgICAgLy8gb3Igbm90LgogICAgICAgICAgICB2YXIgbm93ID0gdGltZSB8fCBtb21lbnQoKSwKICAgICAgICAgICAgICAgIHNvZCA9IG1ha2VBcyhub3csIHRoaXMpLnN0YXJ0T2YoJ2RheScpLAogICAgICAgICAgICAgICAgZGlmZiA9IHRoaXMuZGlmZihzb2QsICdkYXlzJywgdHJ1ZSksCiAgICAgICAgICAgICAgICBmb3JtYXQgPSBkaWZmIDwgLTYgPyAnc2FtZUVsc2UnIDoKICAgICAgICAgICAgICAgICAgICBkaWZmIDwgLTEgPyAnbGFzdFdlZWsnIDoKICAgICAgICAgICAgICAgICAgICBkaWZmIDwgMCA\/ICdsYXN0RGF5JyA6CiAgICAgICAgICAgICAgICAgICAgZGlmZiA8IDEgPyAnc2FtZURheScgOgogICAgICAgICAgICAgICAgICAgIGRpZmYgPCAyID8gJ25leHREYXknIDoKICAgICAgICAgICAgICAgICAgICBkaWZmIDwgNyA\/ICduZXh0V2VlaycgOiAnc2FtZUVsc2UnOwogICAgICAgICAgICByZXR1cm4gdGhpcy5mb3JtYXQodGhpcy5sb2NhbGVEYXRhKCkuY2FsZW5kYXIoZm9ybWF0LCB0aGlzLCBtb21lbnQobm93KSkpOwogICAgICAgIH0sCgogICAgICAgIGlzTGVhcFllYXIgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiBpc0xlYXBZZWFyKHRoaXMueWVhcigpKTsKICAgICAgICB9LAoKICAgICAgICBpc0RTVCA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmV0dXJuICh0aGlzLnV0Y09mZnNldCgpID4gdGhpcy5jbG9uZSgpLm1vbnRoKDApLnV0Y09mZnNldCgpIHx8CiAgICAgICAgICAgICAgICB0aGlzLnV0Y09mZnNldCgpID4gdGhpcy5jbG9uZSgpLm1vbnRoKDUpLnV0Y09mZnNldCgpKTsKICAgICAgICB9LAoKICAgICAgICBkYXkgOiBmdW5jdGlvbiAoaW5wdXQpIHsKICAgICAgICAgICAgdmFyIGRheSA9IHRoaXMuX2lzVVRDID8gdGhpcy5fZC5nZXRVVENEYXkoKSA6IHRoaXMuX2QuZ2V0RGF5KCk7CiAgICAgICAgICAgIGlmIChpbnB1dCAhPSBudWxsKSB7CiAgICAgICAgICAgICAgICBpbnB1dCA9IHBhcnNlV2Vla2RheShpbnB1dCwgdGhpcy5sb2NhbGVEYXRhKCkpOwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuYWRkKGlucHV0IC0gZGF5LCAnZCcpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIGRheTsKICAgICAgICAgICAgfQogICAgICAgIH0sCgogICAgICAgIG1vbnRoIDogbWFrZUFjY2Vzc29yKCdNb250aCcsIHRydWUpLAoKICAgICAgICBzdGFydE9mIDogZnVuY3Rpb24gKHVuaXRzKSB7CiAgICAgICAgICAgIHVuaXRzID0gbm9ybWFsaXplVW5pdHModW5pdHMpOwogICAgICAgICAgICAvLyB0aGUgZm9sbG93aW5nIHN3aXRjaCBpbnRlbnRpb25hbGx5IG9taXRzIGJyZWFrIGtleXdvcmRzCiAgICAgICAgICAgIC8vIHRvIHV0aWxpemUgZmFsbGluZyB0aHJvdWdoIHRoZSBjYXNlcy4KICAgICAgICAgICAgc3dpdGNoICh1bml0cykgewogICAgICAgICAgICBjYXNlICd5ZWFyJzoKICAgICAgICAgICAgICAgIHRoaXMubW9udGgoMCk7CiAgICAgICAgICAgICAgICAvKiBmYWxscyB0aHJvdWdoICovCiAgICAgICAgICAgIGNhc2UgJ3F1YXJ0ZXInOgogICAgICAgICAgICBjYXNlICdtb250aCc6CiAgICAgICAgICAgICAgICB0aGlzLmRhdGUoMSk7CiAgICAgICAgICAgICAgICAvKiBmYWxscyB0aHJvdWdoICovCiAgICAgICAgICAgIGNhc2UgJ3dlZWsnOgogICAgICAgICAgICBjYXNlICdpc29XZWVrJzoKICAgICAgICAgICAgY2FzZSAnZGF5JzoKICAgICAgICAgICAgICAgIHRoaXMuaG91cnMoMCk7CiAgICAgICAgICAgICAgICAvKiBmYWxscyB0aHJvdWdoICovCiAgICAgICAgICAgIGNhc2UgJ2hvdXInOgogICAgICAgICAgICAgICAgdGhpcy5taW51dGVzKDApOwogICAgICAgICAgICAgICAgLyogZmFsbHMgdGhyb3VnaCAqLwogICAgICAgICAgICBjYXNlICdtaW51dGUnOgogICAgICAgICAgICAgICAgdGhpcy5zZWNvbmRzKDApOwogICAgICAgICAgICAgICAgLyogZmFsbHMgdGhyb3VnaCAqLwogICAgICAgICAgICBjYXNlICdzZWNvbmQnOgogICAgICAgICAgICAgICAgdGhpcy5taWxsaXNlY29uZHMoMCk7CiAgICAgICAgICAgICAgICAvKiBmYWxscyB0aHJvdWdoICovCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIHdlZWtzIGFyZSBhIHNwZWNpYWwgY2FzZQogICAgICAgICAgICBpZiAodW5pdHMgPT09ICd3ZWVrJykgewogICAgICAgICAgICAgICAgdGhpcy53ZWVrZGF5KDApOwogICAgICAgICAgICB9IGVsc2UgaWYgKHVuaXRzID09PSAnaXNvV2VlaycpIHsKICAgICAgICAgICAgICAgIHRoaXMuaXNvV2Vla2RheSgxKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gcXVhcnRlcnMgYXJlIGFsc28gc3BlY2lhbAogICAgICAgICAgICBpZiAodW5pdHMgPT09ICdxdWFydGVyJykgewogICAgICAgICAgICAgICAgdGhpcy5tb250aChNYXRoLmZsb29yKHRoaXMubW9udGgoKSAvIDMpICogMyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiB0aGlzOwogICAgICAgIH0sCgogICAgICAgIGVuZE9mOiBmdW5jdGlvbiAodW5pdHMpIHsKICAgICAgICAgICAgdW5pdHMgPSBub3JtYWxpemVVbml0cyh1bml0cyk7CiAgICAgICAgICAgIGlmICh1bml0cyA9PT0gdW5kZWZpbmVkIHx8IHVuaXRzID09PSAnbWlsbGlzZWNvbmQnKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpczsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdGhpcy5zdGFydE9mKHVuaXRzKS5hZGQoMSwgKHVuaXRzID09PSAnaXNvV2VlaycgPyAnd2VlaycgOiB1bml0cykpLnN1YnRyYWN0KDEsICdtcycpOwogICAgICAgIH0sCgogICAgICAgIGlzQWZ0ZXI6IGZ1bmN0aW9uIChpbnB1dCwgdW5pdHMpIHsKICAgICAgICAgICAgdmFyIGlucHV0TXM7CiAgICAgICAgICAgIHVuaXRzID0gbm9ybWFsaXplVW5pdHModHlwZW9mIHVuaXRzICE9PSAndW5kZWZpbmVkJyA\/IHVuaXRzIDogJ21pbGxpc2Vjb25kJyk7CiAgICAgICAgICAgIGlmICh1bml0cyA9PT0gJ21pbGxpc2Vjb25kJykgewogICAgICAgICAgICAgICAgaW5wdXQgPSBtb21lbnQuaXNNb21lbnQoaW5wdXQpID8gaW5wdXQgOiBtb21lbnQoaW5wdXQpOwogICAgICAgICAgICAgICAgcmV0dXJuICt0aGlzID4gK2lucHV0OwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaW5wdXRNcyA9IG1vbWVudC5pc01vbWVudChpbnB1dCkgPyAraW5wdXQgOiArbW9tZW50KGlucHV0KTsKICAgICAgICAgICAgICAgIHJldHVybiBpbnB1dE1zIDwgK3RoaXMuY2xvbmUoKS5zdGFydE9mKHVuaXRzKTsKICAgICAgICAgICAgfQogICAgICAgIH0sCgogICAgICAgIGlzQmVmb3JlOiBmdW5jdGlvbiAoaW5wdXQsIHVuaXRzKSB7CiAgICAgICAgICAgIHZhciBpbnB1dE1zOwogICAgICAgICAgICB1bml0cyA9IG5vcm1hbGl6ZVVuaXRzKHR5cGVvZiB1bml0cyAhPT0gJ3VuZGVmaW5lZCcgPyB1bml0cyA6ICdtaWxsaXNlY29uZCcpOwogICAgICAgICAgICBpZiAodW5pdHMgPT09ICdtaWxsaXNlY29uZCcpIHsKICAgICAgICAgICAgICAgIGlucHV0ID0gbW9tZW50LmlzTW9tZW50KGlucHV0KSA\/IGlucHV0IDogbW9tZW50KGlucHV0KTsKICAgICAgICAgICAgICAgIHJldHVybiArdGhpcyA8ICtpbnB1dDsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlucHV0TXMgPSBtb21lbnQuaXNNb21lbnQoaW5wdXQpID8gK2lucHV0IDogK21vbWVudChpbnB1dCk7CiAgICAgICAgICAgICAgICByZXR1cm4gK3RoaXMuY2xvbmUoKS5lbmRPZih1bml0cykgPCBpbnB1dE1zOwogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgaXNCZXR3ZWVuOiBmdW5jdGlvbiAoZnJvbSwgdG8sIHVuaXRzKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLmlzQWZ0ZXIoZnJvbSwgdW5pdHMpICYmIHRoaXMuaXNCZWZvcmUodG8sIHVuaXRzKTsKICAgICAgICB9LAoKICAgICAgICBpc1NhbWU6IGZ1bmN0aW9uIChpbnB1dCwgdW5pdHMpIHsKICAgICAgICAgICAgdmFyIGlucHV0TXM7CiAgICAgICAgICAgIHVuaXRzID0gbm9ybWFsaXplVW5pdHModW5pdHMgfHwgJ21pbGxpc2Vjb25kJyk7CiAgICAgICAgICAgIGlmICh1bml0cyA9PT0gJ21pbGxpc2Vjb25kJykgewogICAgICAgICAgICAgICAgaW5wdXQgPSBtb21lbnQuaXNNb21lbnQoaW5wdXQpID8gaW5wdXQgOiBtb21lbnQoaW5wdXQpOwogICAgICAgICAgICAgICAgcmV0dXJuICt0aGlzID09PSAraW5wdXQ7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBpbnB1dE1zID0gK21vbWVudChpbnB1dCk7CiAgICAgICAgICAgICAgICByZXR1cm4gKyh0aGlzLmNsb25lKCkuc3RhcnRPZih1bml0cykpIDw9IGlucHV0TXMgJiYgaW5wdXRNcyA8PSArKHRoaXMuY2xvbmUoKS5lbmRPZih1bml0cykpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgbWluOiBkZXByZWNhdGUoCiAgICAgICAgICAgICAgICAgJ21vbWVudCgpLm1pbiBpcyBkZXByZWNhdGVkLCB1c2UgbW9tZW50Lm1pbiBpbnN0ZWFkLiBodHRwczovL2dpdGh1Yi5jb20vbW9tZW50L21vbWVudC9pc3N1ZXMvMTU0OCcsCiAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKG90aGVyKSB7CiAgICAgICAgICAgICAgICAgICAgIG90aGVyID0gbW9tZW50LmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7CiAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvdGhlciA8IHRoaXMgPyB0aGlzIDogb3RoZXI7CiAgICAgICAgICAgICAgICAgfQogICAgICAgICApLAoKICAgICAgICBtYXg6IGRlcHJlY2F0ZSgKICAgICAgICAgICAgICAgICdtb21lbnQoKS5tYXggaXMgZGVwcmVjYXRlZCwgdXNlIG1vbWVudC5tYXggaW5zdGVhZC4gaHR0cHM6Ly9naXRodWIuY29tL21vbWVudC9tb21lbnQvaXNzdWVzLzE1NDgnLAogICAgICAgICAgICAgICAgZnVuY3Rpb24gKG90aGVyKSB7CiAgICAgICAgICAgICAgICAgICAgb3RoZXIgPSBtb21lbnQuYXBwbHkobnVsbCwgYXJndW1lbnRzKTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3RoZXIgPiB0aGlzID8gdGhpcyA6IG90aGVyOwogICAgICAgICAgICAgICAgfQogICAgICAgICksCgogICAgICAgIHpvbmUgOiBkZXByZWNhdGUoCiAgICAgICAgICAgICAgICAnbW9tZW50KCkuem9uZSBpcyBkZXByZWNhdGVkLCB1c2UgbW9tZW50KCkudXRjT2Zmc2V0IGluc3RlYWQuICcgKwogICAgICAgICAgICAgICAgJ2h0dHBzOi8vZ2l0aHViLmNvbS9tb21lbnQvbW9tZW50L2lzc3Vlcy8xNzc5JywKICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChpbnB1dCwga2VlcExvY2FsVGltZSkgewogICAgICAgICAgICAgICAgICAgIGlmIChpbnB1dCAhPSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgaW5wdXQgIT09ICdzdHJpbmcnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dCA9IC1pbnB1dDsKICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy51dGNPZmZzZXQoaW5wdXQsIGtlZXBMb2NhbFRpbWUpOwoKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC10aGlzLnV0Y09mZnNldCgpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICApLAoKICAgICAgICAvLyBrZWVwTG9jYWxUaW1lID0gdHJ1ZSBtZWFucyBvbmx5IGNoYW5nZSB0aGUgdGltZXpvbmUsIHdpdGhvdXQKICAgICAgICAvLyBhZmZlY3RpbmcgdGhlIGxvY2FsIGhvdXIuIFNvIDU6MzE6MjYgKzAzMDAgLS1bdXRjT2Zmc2V0KDIsIHRydWUpXS0tPgogICAgICAgIC8vIDU6MzE6MjYgKzAyMDAgSXQgaXMgcG9zc2libGUgdGhhdCA1OjMxOjI2IGRvZXNuJ3QgZXhpc3Qgd2l0aCBvZmZzZXQKICAgICAgICAvLyArMDIwMCwgc28gd2UgYWRqdXN0IHRoZSB0aW1lIGFzIG5lZWRlZCwgdG8gYmUgdmFsaWQuCiAgICAgICAgLy8KICAgICAgICAvLyBLZWVwaW5nIHRoZSB0aW1lIGFjdHVhbGx5IGFkZHMvc3VidHJhY3RzIChvbmUgaG91cikKICAgICAgICAvLyBmcm9tIHRoZSBhY3R1YWwgcmVwcmVzZW50ZWQgdGltZS4gVGhhdCBpcyB3aHkgd2UgY2FsbCB1cGRhdGVPZmZzZXQKICAgICAgICAvLyBhIHNlY29uZCB0aW1lLiBJbiBjYXNlIGl0IHdhbnRzIHVzIHRvIGNoYW5nZSB0aGUgb2Zmc2V0IGFnYWluCiAgICAgICAgLy8gX2NoYW5nZUluUHJvZ3Jlc3MgPT0gdHJ1ZSBjYXNlLCB0aGVuIHdlIGhhdmUgdG8gYWRqdXN0LCBiZWNhdXNlCiAgICAgICAgLy8gdGhlcmUgaXMgbm8gc3VjaCB0aW1lIGluIHRoZSBnaXZlbiB0aW1lem9uZS4KICAgICAgICB1dGNPZmZzZXQgOiBmdW5jdGlvbiAoaW5wdXQsIGtlZXBMb2NhbFRpbWUpIHsKICAgICAgICAgICAgdmFyIG9mZnNldCA9IHRoaXMuX29mZnNldCB8fCAwLAogICAgICAgICAgICAgICAgbG9jYWxBZGp1c3Q7CiAgICAgICAgICAgIGlmIChpbnB1dCAhPSBudWxsKSB7CiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJykgewogICAgICAgICAgICAgICAgICAgIGlucHV0ID0gdXRjT2Zmc2V0RnJvbVN0cmluZyhpbnB1dCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoTWF0aC5hYnMoaW5wdXQpIDwgMTYpIHsKICAgICAgICAgICAgICAgICAgICBpbnB1dCA9IGlucHV0ICogNjA7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuX2lzVVRDICYmIGtlZXBMb2NhbFRpbWUpIHsKICAgICAgICAgICAgICAgICAgICBsb2NhbEFkanVzdCA9IHRoaXMuX2RhdGVVdGNPZmZzZXQoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHRoaXMuX29mZnNldCA9IGlucHV0OwogICAgICAgICAgICAgICAgdGhpcy5faXNVVEMgPSB0cnVlOwogICAgICAgICAgICAgICAgaWYgKGxvY2FsQWRqdXN0ICE9IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZChsb2NhbEFkanVzdCwgJ20nKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIChvZmZzZXQgIT09IGlucHV0KSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCFrZWVwTG9jYWxUaW1lIHx8IHRoaXMuX2NoYW5nZUluUHJvZ3Jlc3MpIHsKICAgICAgICAgICAgICAgICAgICAgICAgYWRkT3JTdWJ0cmFjdER1cmF0aW9uRnJvbU1vbWVudCh0aGlzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vbWVudC5kdXJhdGlvbihpbnB1dCAtIG9mZnNldCwgJ20nKSwgMSwgZmFsc2UpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoIXRoaXMuX2NoYW5nZUluUHJvZ3Jlc3MpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY2hhbmdlSW5Qcm9ncmVzcyA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgICAgIG1vbWVudC51cGRhdGVPZmZzZXQodGhpcywgdHJ1ZSk7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2NoYW5nZUluUHJvZ3Jlc3MgPSBudWxsOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gdGhpczsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9pc1VUQyA\/IG9mZnNldCA6IHRoaXMuX2RhdGVVdGNPZmZzZXQoKTsKICAgICAgICAgICAgfQogICAgICAgIH0sCgogICAgICAgIGlzTG9jYWwgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiAhdGhpcy5faXNVVEM7CiAgICAgICAgfSwKCiAgICAgICAgaXNVdGNPZmZzZXQgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLl9pc1VUQzsKICAgICAgICB9LAoKICAgICAgICBpc1V0YyA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2lzVVRDICYmIHRoaXMuX29mZnNldCA9PT0gMDsKICAgICAgICB9LAoKICAgICAgICB6b25lQWJiciA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2lzVVRDID8gJ1VUQycgOiAnJzsKICAgICAgICB9LAoKICAgICAgICB6b25lTmFtZSA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2lzVVRDID8gJ0Nvb3JkaW5hdGVkIFVuaXZlcnNhbCBUaW1lJyA6ICcnOwogICAgICAgIH0sCgogICAgICAgIHBhcnNlWm9uZSA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgaWYgKHRoaXMuX3R6bSkgewogICAgICAgICAgICAgICAgdGhpcy51dGNPZmZzZXQodGhpcy5fdHptKTsKICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdGhpcy5faSA9PT0gJ3N0cmluZycpIHsKICAgICAgICAgICAgICAgIHRoaXMudXRjT2Zmc2V0KHV0Y09mZnNldEZyb21TdHJpbmcodGhpcy5faSkpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0aGlzOwogICAgICAgIH0sCgogICAgICAgIGhhc0FsaWduZWRIb3VyT2Zmc2V0IDogZnVuY3Rpb24gKGlucHV0KSB7CiAgICAgICAgICAgIGlmICghaW5wdXQpIHsKICAgICAgICAgICAgICAgIGlucHV0ID0gMDsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIGlucHV0ID0gbW9tZW50KGlucHV0KS51dGNPZmZzZXQoKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuICh0aGlzLnV0Y09mZnNldCgpIC0gaW5wdXQpICUgNjAgPT09IDA7CiAgICAgICAgfSwKCiAgICAgICAgZGF5c0luTW9udGggOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiBkYXlzSW5Nb250aCh0aGlzLnllYXIoKSwgdGhpcy5tb250aCgpKTsKICAgICAgICB9LAoKICAgICAgICBkYXlPZlllYXIgOiBmdW5jdGlvbiAoaW5wdXQpIHsKICAgICAgICAgICAgdmFyIGRheU9mWWVhciA9IHJvdW5kKChtb21lbnQodGhpcykuc3RhcnRPZignZGF5JykgLSBtb21lbnQodGhpcykuc3RhcnRPZigneWVhcicpKSAvIDg2NGU1KSArIDE7CiAgICAgICAgICAgIHJldHVybiBpbnB1dCA9PSBudWxsID8gZGF5T2ZZZWFyIDogdGhpcy5hZGQoKGlucHV0IC0gZGF5T2ZZZWFyKSwgJ2QnKTsKICAgICAgICB9LAoKICAgICAgICBxdWFydGVyIDogZnVuY3Rpb24gKGlucHV0KSB7CiAgICAgICAgICAgIHJldHVybiBpbnB1dCA9PSBudWxsID8gTWF0aC5jZWlsKCh0aGlzLm1vbnRoKCkgKyAxKSAvIDMpIDogdGhpcy5tb250aCgoaW5wdXQgLSAxKSAqIDMgKyB0aGlzLm1vbnRoKCkgJSAzKTsKICAgICAgICB9LAoKICAgICAgICB3ZWVrWWVhciA6IGZ1bmN0aW9uIChpbnB1dCkgewogICAgICAgICAgICB2YXIgeWVhciA9IHdlZWtPZlllYXIodGhpcywgdGhpcy5sb2NhbGVEYXRhKCkuX3dlZWsuZG93LCB0aGlzLmxvY2FsZURhdGEoKS5fd2Vlay5kb3kpLnllYXI7CiAgICAgICAgICAgIHJldHVybiBpbnB1dCA9PSBudWxsID8geWVhciA6IHRoaXMuYWRkKChpbnB1dCAtIHllYXIpLCAneScpOwogICAgICAgIH0sCgogICAgICAgIGlzb1dlZWtZZWFyIDogZnVuY3Rpb24gKGlucHV0KSB7CiAgICAgICAgICAgIHZhciB5ZWFyID0gd2Vla09mWWVhcih0aGlzLCAxLCA0KS55ZWFyOwogICAgICAgICAgICByZXR1cm4gaW5wdXQgPT0gbnVsbCA\/IHllYXIgOiB0aGlzLmFkZCgoaW5wdXQgLSB5ZWFyKSwgJ3knKTsKICAgICAgICB9LAoKICAgICAgICB3ZWVrIDogZnVuY3Rpb24gKGlucHV0KSB7CiAgICAgICAgICAgIHZhciB3ZWVrID0gdGhpcy5sb2NhbGVEYXRhKCkud2Vlayh0aGlzKTsKICAgICAgICAgICAgcmV0dXJuIGlucHV0ID09IG51bGwgPyB3ZWVrIDogdGhpcy5hZGQoKGlucHV0IC0gd2VlaykgKiA3LCAnZCcpOwogICAgICAgIH0sCgogICAgICAgIGlzb1dlZWsgOiBmdW5jdGlvbiAoaW5wdXQpIHsKICAgICAgICAgICAgdmFyIHdlZWsgPSB3ZWVrT2ZZZWFyKHRoaXMsIDEsIDQpLndlZWs7CiAgICAgICAgICAgIHJldHVybiBpbnB1dCA9PSBudWxsID8gd2VlayA6IHRoaXMuYWRkKChpbnB1dCAtIHdlZWspICogNywgJ2QnKTsKICAgICAgICB9LAoKICAgICAgICB3ZWVrZGF5IDogZnVuY3Rpb24gKGlucHV0KSB7CiAgICAgICAgICAgIHZhciB3ZWVrZGF5ID0gKHRoaXMuZGF5KCkgKyA3IC0gdGhpcy5sb2NhbGVEYXRhKCkuX3dlZWsuZG93KSAlIDc7CiAgICAgICAgICAgIHJldHVybiBpbnB1dCA9PSBudWxsID8gd2Vla2RheSA6IHRoaXMuYWRkKGlucHV0IC0gd2Vla2RheSwgJ2QnKTsKICAgICAgICB9LAoKICAgICAgICBpc29XZWVrZGF5IDogZnVuY3Rpb24gKGlucHV0KSB7CiAgICAgICAgICAgIC8vIGJlaGF2ZXMgdGhlIHNhbWUgYXMgbW9tZW50I2RheSBleGNlcHQKICAgICAgICAgICAgLy8gYXMgYSBnZXR0ZXIsIHJldHVybnMgNyBpbnN0ZWFkIG9mIDAgKDEtNyByYW5nZSBpbnN0ZWFkIG9mIDAtNikKICAgICAgICAgICAgLy8gYXMgYSBzZXR0ZXIsIHN1bmRheSBzaG91bGQgYmVsb25nIHRvIHRoZSBwcmV2aW91cyB3ZWVrLgogICAgICAgICAgICByZXR1cm4gaW5wdXQgPT0gbnVsbCA\/IHRoaXMuZGF5KCkgfHwgNyA6IHRoaXMuZGF5KHRoaXMuZGF5KCkgJSA3ID8gaW5wdXQgOiBpbnB1dCAtIDcpOwogICAgICAgIH0sCgogICAgICAgIGlzb1dlZWtzSW5ZZWFyIDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICByZXR1cm4gd2Vla3NJblllYXIodGhpcy55ZWFyKCksIDEsIDQpOwogICAgICAgIH0sCgogICAgICAgIHdlZWtzSW5ZZWFyIDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICB2YXIgd2Vla0luZm8gPSB0aGlzLmxvY2FsZURhdGEoKS5fd2VlazsKICAgICAgICAgICAgcmV0dXJuIHdlZWtzSW5ZZWFyKHRoaXMueWVhcigpLCB3ZWVrSW5mby5kb3csIHdlZWtJbmZvLmRveSk7CiAgICAgICAgfSwKCiAgICAgICAgZ2V0IDogZnVuY3Rpb24gKHVuaXRzKSB7CiAgICAgICAgICAgIHVuaXRzID0gbm9ybWFsaXplVW5pdHModW5pdHMpOwogICAgICAgICAgICByZXR1cm4gdGhpc1t1bml0c10oKTsKICAgICAgICB9LAoKICAgICAgICBzZXQgOiBmdW5jdGlvbiAodW5pdHMsIHZhbHVlKSB7CiAgICAgICAgICAgIHZhciB1bml0OwogICAgICAgICAgICBpZiAodHlwZW9mIHVuaXRzID09PSAnb2JqZWN0JykgewogICAgICAgICAgICAgICAgZm9yICh1bml0IGluIHVuaXRzKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXQodW5pdCwgdW5pdHNbdW5pdF0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgdW5pdHMgPSBub3JtYWxpemVVbml0cyh1bml0cyk7CiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRoaXNbdW5pdHNdID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpc1t1bml0c10odmFsdWUpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0aGlzOwogICAgICAgIH0sCgogICAgICAgIC8vIElmIHBhc3NlZCBhIGxvY2FsZSBrZXksIGl0IHdpbGwgc2V0IHRoZSBsb2NhbGUgZm9yIHRoaXMKICAgICAgICAvLyBpbnN0YW5jZS4gIE90aGVyd2lzZSwgaXQgd2lsbCByZXR1cm4gdGhlIGxvY2FsZSBjb25maWd1cmF0aW9uCiAgICAgICAgLy8gdmFyaWFibGVzIGZvciB0aGlzIGluc3RhbmNlLgogICAgICAgIGxvY2FsZSA6IGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICAgICAgdmFyIG5ld0xvY2FsZURhdGE7CgogICAgICAgICAgICBpZiAoa2V5ID09PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9sb2NhbGUuX2FiYnI7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBuZXdMb2NhbGVEYXRhID0gbW9tZW50LmxvY2FsZURhdGEoa2V5KTsKICAgICAgICAgICAgICAgIGlmIChuZXdMb2NhbGVEYXRhICE9IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLl9sb2NhbGUgPSBuZXdMb2NhbGVEYXRhOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7CiAgICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICBsYW5nIDogZGVwcmVjYXRlKAogICAgICAgICAgICAnbW9tZW50KCkubGFuZygpIGlzIGRlcHJlY2F0ZWQuIEluc3RlYWQsIHVzZSBtb21lbnQoKS5sb2NhbGVEYXRhKCkgdG8gZ2V0IHRoZSBsYW5ndWFnZSBjb25maWd1cmF0aW9uLiBVc2UgbW9tZW50KCkubG9jYWxlKCkgdG8gY2hhbmdlIGxhbmd1YWdlcy4nLAogICAgICAgICAgICBmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgICAgICAgICBpZiAoa2V5ID09PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5sb2NhbGVEYXRhKCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmxvY2FsZShrZXkpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgKSwKCiAgICAgICAgbG9jYWxlRGF0YSA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2xvY2FsZTsKICAgICAgICB9LAoKICAgICAgICBfZGF0ZVV0Y09mZnNldCA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgLy8gT24gRmlyZWZveC4yNCBEYXRlI2dldFRpbWV6b25lT2Zmc2V0IHJldHVybnMgYSBmbG9hdGluZyBwb2ludC4KICAgICAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL21vbWVudC9tb21lbnQvcHVsbC8xODcxCiAgICAgICAgICAgIHJldHVybiAtTWF0aC5yb3VuZCh0aGlzLl9kLmdldFRpbWV6b25lT2Zmc2V0KCkgLyAxNSkgKiAxNTsKICAgICAgICB9CgogICAgfSk7CgogICAgZnVuY3Rpb24gcmF3TW9udGhTZXR0ZXIobW9tLCB2YWx1ZSkgewogICAgICAgIHZhciBkYXlPZk1vbnRoOwoKICAgICAgICAvLyBUT0RPOiBNb3ZlIHRoaXMgb3V0IG9mIGhlcmUhCiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHsKICAgICAgICAgICAgdmFsdWUgPSBtb20ubG9jYWxlRGF0YSgpLm1vbnRoc1BhcnNlKHZhbHVlKTsKICAgICAgICAgICAgLy8gVE9ETzogQW5vdGhlciBzaWxlbnQgZmFpbHVyZT8KICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ251bWJlcicpIHsKICAgICAgICAgICAgICAgIHJldHVybiBtb207CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGRheU9mTW9udGggPSBNYXRoLm1pbihtb20uZGF0ZSgpLAogICAgICAgICAgICAgICAgZGF5c0luTW9udGgobW9tLnllYXIoKSwgdmFsdWUpKTsKICAgICAgICBtb20uX2RbJ3NldCcgKyAobW9tLl9pc1VUQyA\/ICdVVEMnIDogJycpICsgJ01vbnRoJ10odmFsdWUsIGRheU9mTW9udGgpOwogICAgICAgIHJldHVybiBtb207CiAgICB9CgogICAgZnVuY3Rpb24gcmF3R2V0dGVyKG1vbSwgdW5pdCkgewogICAgICAgIHJldHVybiBtb20uX2RbJ2dldCcgKyAobW9tLl9pc1VUQyA\\/IG1vbnRocyA6IG1vbnRocyAvIDEyOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgLy8gaGFuZGxlIG1pbGxpc2Vjb25kcyBzZXBhcmF0ZWx5IGJlY2F1c2Ugb2YgZmxvYXRpbmcgcG9pbnQgbWF0aCBlcnJvcnMgKGlzc3VlICMxODY3KQogICAgICAgICAgICAgICAgZGF5cyA9IHRoaXMuX2RheXMgKyBNYXRoLnJvdW5kKHllYXJzVG9EYXlzKHRoaXMuX21vbnRocyAvIDEyKSk7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKHVuaXRzKSB7CiAgICAgICAgICAgICAgICAgICAgY2FzZSAnd2Vlayc6IHJldHVybiBkYXlzIC8gNyArIHRoaXMuX21pbGxpc2Vjb25kcyAvIDYwNDhlNTsKICAgICAgICAgICAgICAgICAgICBjYXNlICdkYXknOiByZXR1cm4gZGF5cyArIHRoaXMuX21pbGxpc2Vjb25kcyAvIDg2NGU1OwogICAgICAgICAgICAgICAgICAgIGNhc2UgJ2hvdXInOiByZXR1cm4gZGF5cyAqIDI0ICsgdGhpcy5fbWlsbGlzZWNvbmRzIC8gMzZlNTsKICAgICAgICAgICAgICAgICAgICBjYXNlICdtaW51dGUnOiByZXR1cm4gZGF5cyAqIDI0ICogNjAgKyB0aGlzLl9taWxsaXNlY29uZHMgLyA2ZTQ7CiAgICAgICAgICAgICAgICAgICAgY2FzZSAnc2Vjb25kJzogcmV0dXJuIGRheXMgKiAyNCAqIDYwICogNjAgKyB0aGlzLl9taWxsaXNlY29uZHMgLyAxMDAwOwogICAgICAgICAgICAgICAgICAgIC8vIE1hdGguZmxvb3IgcHJldmVudHMgZmxvYXRpbmcgcG9pbnQgbWF0aCBlcnJvcnMgaGVyZQogICAgICAgICAgICAgICAgICAgIGNhc2UgJ21pbGxpc2Vjb25kJzogcmV0dXJuIE1hdGguZmxvb3IoZGF5cyAqIDI0ICogNjAgKiA2MCAqIDEwMDApICsgdGhpcy5fbWlsbGlzZWNvbmRzOwogICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6IHRocm93IG5ldyBFcnJvcignVW5rbm93biB1bml0ICcgKyB1bml0cyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICBsYW5nIDogbW9tZW50LmZuLmxhbmcsCiAgICAgICAgbG9jYWxlIDogbW9tZW50LmZuLmxvY2FsZSwKCiAgICAgICAgdG9Jc29TdHJpbmcgOiBkZXByZWNhdGUoCiAgICAgICAgICAgICd0b0lzb1N0cmluZygpIGlzIGRlcHJlY2F0ZWQuIFBsZWFzZSB1c2UgdG9JU09TdHJpbmcoKSBpbnN0ZWFkICcgKwogICAgICAgICAgICAnKG5vdGljZSB0aGUgY2FwaXRhbHMpJywKICAgICAgICAgICAgZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudG9JU09TdHJpbmcoKTsKICAgICAgICAgICAgfQogICAgICAgICksCgogICAgICAgIHRvSVNPU3RyaW5nIDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAvLyBpbnNwaXJlZCBieSBodHRwczovL2dpdGh1Yi5jb20vZG9yZGlsbGUvbW9tZW50LWlzb2R1cmF0aW9uL2Jsb2IvbWFzdGVyL21vbWVudC5pc29kdXJhdGlvbi5qcwogICAgICAgICAgICB2YXIgeWVhcnMgPSBNYXRoLmFicyh0aGlzLnllYXJzKCkpLAogICAgICAgICAgICAgICAgbW9udGhzID0gTWF0aC5hYnModGhpcy5tb250aHMoKSksCiAgICAgICAgICAgICAgICBkYXlzID0gTWF0aC5hYnModGhpcy5kYXlzKCkpLAogICAgICAgICAgICAgICAgaG91cnMgPSBNYXRoLmFicyh0aGlzLmhvdXJzKCkpLAogICAgICAgICAgICAgICAgbWludXRlcyA9IE1hdGguYWJzKHRoaXMubWludXRlcygpKSwKICAgICAgICAgICAgICAgIHNlY29uZHMgPSBNYXRoLmFicyh0aGlzLnNlY29uZHMoKSArIHRoaXMubWlsbGlzZWNvbmRzKCkgLyAxMDAwKTsKCiAgICAgICAgICAgIGlmICghdGhpcy5hc1NlY29uZHMoKSkgewogICAgICAgICAgICAgICAgLy8gdGhpcyBpcyB0aGUgc2FtZSBhcyBDIydzIChOb2RhKSBhbmQgcHl0aG9uIChpc29kYXRlKS4uLgogICAgICAgICAgICAgICAgLy8gYnV0IG5vdCBvdGhlciBKUyAoZ29vZy5kYXRlKQogICAgICAgICAgICAgICAgcmV0dXJuICdQMEQnOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gKHRoaXMuYXNTZWNvbmRzKCkgPCAwID8gJy0nIDogJycpICsKICAgICAgICAgICAgICAgICdQJyArCiAgICAgICAgICAgICAgICAoeWVhcnMgPyB5ZWFycyArICdZJyA6ICcnKSArCiAgICAgICAgICAgICAgICAobW9udGhzID8gbW9udGhzICsgJ00nIDogJycpICsKICAgICAgICAgICAgICAgIChkYXlzID8gZGF5cyArICdEJyA6ICcnKSArCiAgICAgICAgICAgICAgICAoKGhvdXJzIHx8IG1pbnV0ZXMgfHwgc2Vjb25kcykgPyAnVCcgOiAnJykgKwogICAgICAgICAgICAgICAgKGhvdXJzID8gaG91cnMgKyAnSCcgOiAnJykgKwogICAgICAgICAgICAgICAgKG1pbnV0ZXMgPyBtaW51dGVzICsgJ00nIDogJycpICsKICAgICAgICAgICAgICAgIChzZWNvbmRzID8gc2Vjb25kcyArICdTJyA6ICcnKTsKICAgICAgICB9LAoKICAgICAgICBsb2NhbGVEYXRhIDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5fbG9jYWxlOwogICAgICAgIH0sCgogICAgICAgIHRvSlNPTiA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMudG9JU09TdHJpbmcoKTsKICAgICAgICB9CiAgICB9KTsKCiAgICBtb21lbnQuZHVyYXRpb24uZm4udG9TdHJpbmcgPSBtb21lbnQuZHVyYXRpb24uZm4udG9JU09TdHJpbmc7CgogICAgZnVuY3Rpb24gbWFrZUR1cmF0aW9uR2V0dGVyKG5hbWUpIHsKICAgICAgICBtb21lbnQuZHVyYXRpb24uZm5bbmFtZV0gPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLl9kYXRhW25hbWVdOwogICAgICAgIH07CiAgICB9CgogICAgZm9yIChpIGluIHVuaXRNaWxsaXNlY29uZEZhY3RvcnMpIHsKICAgICAgICBpZiAoaGFzT3duUHJvcCh1bml0TWlsbGlzZWNvbmRGYWN0b3JzLCBpKSkgewogICAgICAgICAgICBtYWtlRHVyYXRpb25HZXR0ZXIoaS50b0xvd2VyQ2FzZSgpKTsKICAgICAgICB9CiAgICB9CgogICAgbW9tZW50LmR1cmF0aW9uLmZuLmFzTWlsbGlzZWNvbmRzID0gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiB0aGlzLmFzKCdtcycpOwogICAgfTsKICAgIG1vbWVudC5kdXJhdGlvbi5mbi5hc1NlY29uZHMgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYXMoJ3MnKTsKICAgIH07CiAgICBtb21lbnQuZHVyYXRpb24uZm4uYXNNaW51dGVzID0gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiB0aGlzLmFzKCdtJyk7CiAgICB9OwogICAgbW9tZW50LmR1cmF0aW9uLmZuLmFzSG91cnMgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYXMoJ2gnKTsKICAgIH07CiAgICBtb21lbnQuZHVyYXRpb24uZm4uYXNEYXlzID0gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiB0aGlzLmFzKCdkJyk7CiAgICB9OwogICAgbW9tZW50LmR1cmF0aW9uLmZuLmFzV2Vla3MgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYXMoJ3dlZWtzJyk7CiAgICB9OwogICAgbW9tZW50LmR1cmF0aW9uLmZuLmFzTW9udGhzID0gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiB0aGlzLmFzKCdNJyk7CiAgICB9OwogICAgbW9tZW50LmR1cmF0aW9uLmZuLmFzWWVhcnMgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYXMoJ3knKTsKICAgIH07CgogICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgogICAgICAgIERlZmF1bHQgTG9jYWxlCiAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgoKICAgIC8vIFNldCBkZWZhdWx0IGxvY2FsZSwgb3RoZXIgbG9jYWxlIHdpbGwgaW5oZXJpdCBmcm9tIEVuZ2xpc2guCiAgICBtb21lbnQubG9jYWxlKCdlbicsIHsKICAgICAgICBvcmRpbmFsUGFyc2U6IC9cZHsxLDJ9KHRofHN0fG5kfHJkKS8sCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgdmFyIGIgPSBudW1iZXIgJSAxMCwKICAgICAgICAgICAgICAgIG91dHB1dCA9ICh0b0ludChudW1iZXIgJSAxMDAgLyAxMCkgPT09IDEpID8gJ3RoJyA6CiAgICAgICAgICAgICAgICAoYiA9PT0gMSkgPyAnc3QnIDoKICAgICAgICAgICAgICAgIChiID09PSAyKSA\/ICduZCcgOgogICAgICAgICAgICAgICAgKGIgPT09IDMpID8gJ3JkJyA6ICd0aCc7CiAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyBvdXRwdXQ7CiAgICAgICAgfQogICAgfSk7CgogICAgLy8gbW9tZW50LmpzIGxvY2FsZSBjb25maWd1cmF0aW9uCi8vIGxvY2FsZSA6IGFmcmlrYWFucyAoYWYpCi8vIGF1dGhvciA6IFdlcm5lciBNb2xsZW50emUgOiBodHRwczovL2dpdGh1Yi5jb20vd2VybmVybQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ2FmJywgewogICAgICAgIG1vbnRocyA6ICdKYW51YXJpZV9GZWJydWFyaWVfTWFhcnRfQXByaWxfTWVpX0p1bmllX0p1bGllX0F1Z3VzdHVzX1NlcHRlbWJlcl9Pa3RvYmVyX05vdmVtYmVyX0Rlc2VtYmVyJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJ0phbl9GZWJfTWFyX0Fwcl9NZWlfSnVuX0p1bF9BdWdfU2VwX09rdF9Ob3ZfRGVzJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ1NvbmRhZ19NYWFuZGFnX0RpbnNkYWdfV29lbnNkYWdfRG9uZGVyZGFnX1ZyeWRhZ19TYXRlcmRhZycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ1Nvbl9NYWFfRGluX1dvZV9Eb25fVnJ5X1NhdCcuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICdTb19NYV9EaV9Xb19Eb19Wcl9TYScuc3BsaXQoJ18nKSwKICAgICAgICBtZXJpZGllbVBhcnNlOiAvdm18bm0vaSwKICAgICAgICBpc1BNIDogZnVuY3Rpb24gKGlucHV0KSB7CiAgICAgICAgICAgIHJldHVybiAvXm5tJC9pLnRlc3QoaW5wdXQpOwogICAgICAgIH0sCiAgICAgICAgbWVyaWRpZW0gOiBmdW5jdGlvbiAoaG91cnMsIG1pbnV0ZXMsIGlzTG93ZXIpIHsKICAgICAgICAgICAgaWYgKGhvdXJzIDwgMTIpIHsKICAgICAgICAgICAgICAgIHJldHVybiBpc0xvd2VyID8gJ3ZtJyA6ICdWTSc7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gaXNMb3dlciA\/ICdubScgOiAnTk0nOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnSEg6bW0nLAogICAgICAgICAgICBMVFMgOiAnTFQ6c3MnLAogICAgICAgICAgICBMIDogJ0REL01NL1lZWVknLAogICAgICAgICAgICBMTCA6ICdEIE1NTU0gWVlZWScsCiAgICAgICAgICAgIExMTCA6ICdEIE1NTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCwgRCBNTU1NIFlZWVkgTFQnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6ICdbVmFuZGFnIG9tXSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW03DtHJlIG9tXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgW29tXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW0dpc3RlciBvbV0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdbTGFhc10gZGRkZCBbb21dIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ29vciAlcycsCiAgICAgICAgICAgIHBhc3QgOiAnJXMgZ2VsZWRlJywKICAgICAgICAgICAgcyA6ICdcJ24gcGFhciBzZWtvbmRlcycsCiAgICAgICAgICAgIG0gOiAnXCduIG1pbnV1dCcsCiAgICAgICAgICAgIG1tIDogJyVkIG1pbnV0ZScsCiAgICAgICAgICAgIGggOiAnXCduIHV1cicsCiAgICAgICAgICAgIGhoIDogJyVkIHVyZScsCiAgICAgICAgICAgIGQgOiAnXCduIGRhZycsCiAgICAgICAgICAgIGRkIDogJyVkIGRhZScsCiAgICAgICAgICAgIE0gOiAnXCduIG1hYW5kJywKICAgICAgICAgICAgTU0gOiAnJWQgbWFhbmRlJywKICAgICAgICAgICAgeSA6ICdcJ24gamFhcicsCiAgICAgICAgICAgIHl5IDogJyVkIGphYXInCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsUGFyc2U6IC9cZHsxLDJ9KHN0ZXxkZSkvLAogICAgICAgIG9yZGluYWwgOiBmdW5jdGlvbiAobnVtYmVyKSB7CiAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAoKG51bWJlciA9PT0gMSB8fCBudW1iZXIgPT09IDggfHwgbnVtYmVyID49IDIwKSA\/ICdzdGUnIDogJ2RlJyk7IC8vIFRoYW5rcyB0byBKb3JpcyBSw7ZsaW5nIDogaHR0cHM6Ly9naXRodWIuY29tL2pqdXBpdGVyCiAgICAgICAgfSwKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNYWFuZGFnIGlzIGRpZSBlZXJzdGUgZGFnIHZhbiBkaWUgd2Vlay4KICAgICAgICAgICAgZG95IDogNCAgLy8gRGllIHdlZWsgd2F0IGRpZSA0ZGUgSmFudWFyaWUgYmV2YXQgaXMgZGllIGVlcnN0ZSB3ZWVrIHZhbiBkaWUgamFhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogTW9yb2NjYW4gQXJhYmljIChhci1tYSkKLy8gYXV0aG9yIDogRWxGYWRpbGkgWWFzc2luZSA6IGh0dHBzOi8vZ2l0aHViLmNvbS9FbEZhZGlsaVkKLy8gYXV0aG9yIDogQWJkZWwgU2FpZCA6IGh0dHBzOi8vZ2l0aHViLmNvbS9hYmRlbHNhaWQKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdhci1tYScsIHsKICAgICAgICBtb250aHMgOiAn2YrZhtin2YrYsV\/Zgdio2LHYp9mK2LFf2YXYp9ix2LNf2KPYqNix2YrZhF\/Zhdin2Ypf2YrZiNmG2YrZiF\/ZitmI2YTZitmI2LJf2LrYtNiqX9i02KrZhtio2LFf2KPZg9iq2YjYqNixX9mG2YjZhtio2LFf2K\/YrNmG2KjYsScuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICfZitmG2KfZitixX9mB2KjYsdin2YrYsV\/Zhdin2LHYs1\/Yo9io2LHZitmEX9mF2KfZil\/ZitmI2YbZitmIX9mK2YjZhNmK2YjYsl\/Yuti02Kpf2LTYqtmG2KjYsV\/Yo9mD2KrZiNio2LFf2YbZiNmG2KjYsV\/Yr9is2YbYqNixJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ9in2YTYo9it2K9f2KfZhNil2KrZhtmK2YZf2KfZhNir2YTYp9ir2KfYoV\/Yp9mE2KPYsdio2LnYp9ihX9in2YTYrtmF2YrYs1\/Yp9mE2KzZhdi52Klf2KfZhNiz2KjYqicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ9in2K3Yr1\/Yp9iq2YbZitmGX9ir2YTYp9ir2KfYoV\/Yp9ix2KjYudin2KFf2K7ZhdmK2LNf2KzZhdi52Klf2LPYqNiqJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ9itX9mGX9irX9ixX9iuX9isX9izJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdISDptbScsCiAgICAgICAgICAgIExUUyA6ICdMVDpzcycsCiAgICAgICAgICAgIEwgOiAnREQvTU0vWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZIExUJywKICAgICAgICAgICAgTExMTCA6ICdkZGRkIEQgTU1NTSBZWVlZIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICdb2KfZhNmK2YjZhSDYudmE2Ykg2KfZhNiz2KfYudipXSBMVCcsCiAgICAgICAgICAgIG5leHREYXk6ICdb2LrYr9inINi52YTZiSDYp9mE2LPYp9i52KldIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6ICdkZGRkIFvYudmE2Ykg2KfZhNiz2KfYudipXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXk6ICdb2KPZhdizINi52YTZiSDYp9mE2LPYp9i52KldIExUJywKICAgICAgICAgICAgbGFzdFdlZWs6ICdkZGRkIFvYudmE2Ykg2KfZhNiz2KfYudipXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ9mB2YogJXMnLAogICAgICAgICAgICBwYXN0IDogJ9mF2YbYsCAlcycsCiAgICAgICAgICAgIHMgOiAn2KvZiNin2YYnLAogICAgICAgICAgICBtIDogJ9iv2YLZitmC2KknLAogICAgICAgICAgICBtbSA6ICclZCDYr9mC2KfYptmCJywKICAgICAgICAgICAgaCA6ICfYs9in2LnYqScsCiAgICAgICAgICAgIGhoIDogJyVkINiz2KfYudin2KonLAogICAgICAgICAgICBkIDogJ9mK2YjZhScsCiAgICAgICAgICAgIGRkIDogJyVkINij2YrYp9mFJywKICAgICAgICAgICAgTSA6ICfYtNmH2LEnLAogICAgICAgICAgICBNTSA6ICclZCDYo9i02YfYsScsCiAgICAgICAgICAgIHkgOiAn2LPZhtipJywKICAgICAgICAgICAgeXkgOiAnJWQg2LPZhtmI2KfYqicKICAgICAgICB9LAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDYsIC8vIFNhdHVyZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDEyICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiAxc3QgaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKLy8gbW9tZW50LmpzIGxvY2FsZSBjb25maWd1cmF0aW9uCi8vIGxvY2FsZSA6IEFyYWJpYyBTYXVkaSBBcmFiaWEgKGFyLXNhKQovLyBhdXRob3IgOiBTdWhhaWwgQWxrb3dhaWxlZXQgOiBodHRwczovL2dpdGh1Yi5jb20veHNvaAoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgdmFyIHN5bWJvbE1hcCA9IHsKICAgICAgICAnMSc6ICfZoScsCiAgICAgICAgJzInOiAn2aInLAogICAgICAgICczJzogJ9mjJywKICAgICAgICAnNCc6ICfZpCcsCiAgICAgICAgJzUnOiAn2aUnLAogICAgICAgICc2JzogJ9mmJywKICAgICAgICAnNyc6ICfZpycsCiAgICAgICAgJzgnOiAn2agnLAogICAgICAgICc5JzogJ9mpJywKICAgICAgICAnMCc6ICfZoCcKICAgIH0sIG51bWJlck1hcCA9IHsKICAgICAgICAn2aEnOiAnMScsCiAgICAgICAgJ9miJzogJzInLAogICAgICAgICfZoyc6ICczJywKICAgICAgICAn2aQnOiAnNCcsCiAgICAgICAgJ9mlJzogJzUnLAogICAgICAgICfZpic6ICc2JywKICAgICAgICAn2acnOiAnNycsCiAgICAgICAgJ9moJzogJzgnLAogICAgICAgICfZqSc6ICc5JywKICAgICAgICAn2aAnOiAnMCcKICAgIH07CgogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ2FyLXNhJywgewogICAgICAgIG1vbnRocyA6ICfZitmG2KfZitixX9mB2KjYsdin2YrYsV\/Zhdin2LHYs1\/Yo9io2LHZitmEX9mF2KfZitmIX9mK2YjZhtmK2Yhf2YrZiNmE2YrZiF\/Yo9i62LPYt9izX9iz2KjYqtmF2KjYsV\/Yo9mD2KrZiNio2LFf2YbZiNmB2YXYqNixX9iv2YrYs9mF2KjYsScuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICfZitmG2KfZitixX9mB2KjYsdin2YrYsV\/Zhdin2LHYs1\/Yo9io2LHZitmEX9mF2KfZitmIX9mK2YjZhtmK2Yhf2YrZiNmE2YrZiF\/Yo9i62LPYt9izX9iz2KjYqtmF2KjYsV\/Yo9mD2KrZiNio2LFf2YbZiNmB2YXYqNixX9iv2YrYs9mF2KjYsScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICfYp9mE2KPYrdivX9in2YTYpdir2YbZitmGX9in2YTYq9mE2KfYq9in2KFf2KfZhNij2LHYqNi52KfYoV\/Yp9mE2K7ZhdmK2LNf2KfZhNis2YXYudipX9in2YTYs9io2KonLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICfYo9it2K9f2KXYq9mG2YrZhl\/Yq9mE2KfYq9in2KFf2KPYsdio2LnYp9ihX9iu2YXZitizX9is2YXYudipX9iz2KjYqicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICfYrV\/Zhl\/Yq1\/YsV\/Yrl\/YrF\/Ysycuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnSEg6bW0nLAogICAgICAgICAgICBMVFMgOiAnSEg6bW06c3MnLAogICAgICAgICAgICBMIDogJ0REL01NL1lZWVknLAogICAgICAgICAgICBMTCA6ICdEIE1NTU0gWVlZWScsCiAgICAgICAgICAgIExMTCA6ICdEIE1NTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCBEIE1NTU0gWVlZWSBMVCcKICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtUGFyc2U6IC\/YtXzZhS8sCiAgICAgICAgaXNQTSA6IGZ1bmN0aW9uIChpbnB1dCkgewogICAgICAgICAgICByZXR1cm4gJ9mFJyA9PT0gaW5wdXQ7CiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbSA6IGZ1bmN0aW9uIChob3VyLCBtaW51dGUsIGlzTG93ZXIpIHsKICAgICAgICAgICAgaWYgKGhvdXIgPCAxMikgewogICAgICAgICAgICAgICAgcmV0dXJuICfYtSc7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ9mFJzsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICdb2KfZhNmK2YjZhSDYudmE2Ykg2KfZhNiz2KfYudipXSBMVCcsCiAgICAgICAgICAgIG5leHREYXk6ICdb2LrYr9inINi52YTZiSDYp9mE2LPYp9i52KldIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6ICdkZGRkIFvYudmE2Ykg2KfZhNiz2KfYudipXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXk6ICdb2KPZhdizINi52YTZiSDYp9mE2LPYp9i52KldIExUJywKICAgICAgICAgICAgbGFzdFdlZWs6ICdkZGRkIFvYudmE2Ykg2KfZhNiz2KfYudipXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ9mB2YogJXMnLAogICAgICAgICAgICBwYXN0IDogJ9mF2YbYsCAlcycsCiAgICAgICAgICAgIHMgOiAn2KvZiNin2YYnLAogICAgICAgICAgICBtIDogJ9iv2YLZitmC2KknLAogICAgICAgICAgICBtbSA6ICclZCDYr9mC2KfYptmCJywKICAgICAgICAgICAgaCA6ICfYs9in2LnYqScsCiAgICAgICAgICAgIGhoIDogJyVkINiz2KfYudin2KonLAogICAgICAgICAgICBkIDogJ9mK2YjZhScsCiAgICAgICAgICAgIGRkIDogJyVkINij2YrYp9mFJywKICAgICAgICAgICAgTSA6ICfYtNmH2LEnLAogICAgICAgICAgICBNTSA6ICclZCDYo9i02YfYsScsCiAgICAgICAgICAgIHkgOiAn2LPZhtipJywKICAgICAgICAgICAgeXkgOiAnJWQg2LPZhtmI2KfYqicKICAgICAgICB9LAogICAgICAgIHByZXBhcnNlOiBmdW5jdGlvbiAoc3RyaW5nKSB7CiAgICAgICAgICAgIHJldHVybiBzdHJpbmcucmVwbGFjZSgvW9mh2aLZo9mk2aXZptmn2ajZqdmgXS9nLCBmdW5jdGlvbiAobWF0Y2gpIHsKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXJNYXBbbWF0Y2hdOwogICAgICAgICAgICB9KS5yZXBsYWNlKC\/YjC9nLCAnLCcpOwogICAgICAgIH0sCiAgICAgICAgcG9zdGZvcm1hdDogZnVuY3Rpb24gKHN0cmluZykgewogICAgICAgICAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2UoL1xkL2csIGZ1bmN0aW9uIChtYXRjaCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHN5bWJvbE1hcFttYXRjaF07CiAgICAgICAgICAgIH0pLnJlcGxhY2UoLywvZywgJ9iMJyk7CiAgICAgICAgfSwKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiA2LCAvLyBTYXR1cmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiAxMiAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gMXN0IGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgIDogVHVuaXNpYW4gQXJhYmljIChhci10bikKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdhci10bicsIHsKICAgICAgICBtb250aHM6ICfYrNin2YbZgdmKX9mB2YrZgdix2Ypf2YXYp9ix2LNf2KPZgdix2YrZhF\/Zhdin2Ypf2KzZiNin2YZf2KzZiNmK2YTZitipX9ij2YjYql\/Ys9io2KrZhdio2LFf2KPZg9iq2YjYqNixX9mG2YjZgdmF2KjYsV\/Yr9mK2LPZhdio2LEnLnNwbGl0KCdfJyksCiAgICAgICAgbW9udGhzU2hvcnQ6ICfYrNin2YbZgdmKX9mB2YrZgdix2Ypf2YXYp9ix2LNf2KPZgdix2YrZhF\/Zhdin2Ypf2KzZiNin2YZf2KzZiNmK2YTZitipX9ij2YjYql\/Ys9io2KrZhdio2LFf2KPZg9iq2YjYqNixX9mG2YjZgdmF2KjYsV\/Yr9mK2LPZhdio2LEnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXM6ICfYp9mE2KPYrdivX9in2YTYpdir2YbZitmGX9in2YTYq9mE2KfYq9in2KFf2KfZhNij2LHYqNi52KfYoV\/Yp9mE2K7ZhdmK2LNf2KfZhNis2YXYudipX9in2YTYs9io2KonLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydDogJ9ij2K3Yr1\/Ypdir2YbZitmGX9ir2YTYp9ir2KfYoV\/Yo9ix2KjYudin2KFf2K7ZhdmK2LNf2KzZhdi52Klf2LPYqNiqJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluOiAn2K1f2YZf2Ktf2LFf2K5f2Kxf2LMnLnNwbGl0KCdfJyksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQ6IHsKICAgICAgICAgICAgTFQ6ICdISDptbScsCiAgICAgICAgICAgIExUUzogJ0xUOnNzJywKICAgICAgICAgICAgTDogJ0REL01NL1lZWVknLAogICAgICAgICAgICBMTDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMOiAnRCBNTU1NIFlZWVkgTFQnLAogICAgICAgICAgICBMTExMOiAnZGRkZCBEIE1NTU0gWVlZWSBMVCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICdb2KfZhNmK2YjZhSDYudmE2Ykg2KfZhNiz2KfYudipXSBMVCcsCiAgICAgICAgICAgIG5leHREYXk6ICdb2LrYr9inINi52YTZiSDYp9mE2LPYp9i52KldIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6ICdkZGRkIFvYudmE2Ykg2KfZhNiz2KfYudipXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXk6ICdb2KPZhdizINi52YTZiSDYp9mE2LPYp9i52KldIExUJywKICAgICAgICAgICAgbGFzdFdlZWs6ICdkZGRkIFvYudmE2Ykg2KfZhNiz2KfYudipXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZTogewogICAgICAgICAgICBmdXR1cmU6ICfZgdmKICVzJywKICAgICAgICAgICAgcGFzdDogJ9mF2YbYsCAlcycsCiAgICAgICAgICAgIHM6ICfYq9mI2KfZhicsCiAgICAgICAgICAgIG06ICfYr9mC2YrZgtipJywKICAgICAgICAgICAgbW06ICclZCDYr9mC2KfYptmCJywKICAgICAgICAgICAgaDogJ9iz2KfYudipJywKICAgICAgICAgICAgaGg6ICclZCDYs9in2LnYp9iqJywKICAgICAgICAgICAgZDogJ9mK2YjZhScsCiAgICAgICAgICAgIGRkOiAnJWQg2KPZitin2YUnLAogICAgICAgICAgICBNOiAn2LTZh9ixJywKICAgICAgICAgICAgTU06ICclZCDYo9i02YfYsScsCiAgICAgICAgICAgIHk6ICfYs9mG2KknLAogICAgICAgICAgICB5eTogJyVkINiz2YbZiNin2KonCiAgICAgICAgfSwKICAgICAgICB3ZWVrOiB7CiAgICAgICAgICAgIGRvdzogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveTogNCAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiA0dGggaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKLy8gbW9tZW50LmpzIGxvY2FsZSBjb25maWd1cmF0aW9uCi8vIExvY2FsZTogQXJhYmljIChhcikKLy8gQXV0aG9yOiBBYmRlbCBTYWlkOiBodHRwczovL2dpdGh1Yi5jb20vYWJkZWxzYWlkCi8vIENoYW5nZXMgaW4gbW9udGhzLCB3ZWVrZGF5czogQWhtZWQgRWxraGF0aWIKLy8gTmF0aXZlIHBsdXJhbCBmb3JtczogZm9yYWJpIGh0dHBzOi8vZ2l0aHViLmNvbS9mb3JhYmkKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHZhciBzeW1ib2xNYXAgPSB7CiAgICAgICAgJzEnOiAn2aEnLAogICAgICAgICcyJzogJ9miJywKICAgICAgICAnMyc6ICfZoycsCiAgICAgICAgJzQnOiAn2aQnLAogICAgICAgICc1JzogJ9mlJywKICAgICAgICAnNic6ICfZpicsCiAgICAgICAgJzcnOiAn2acnLAogICAgICAgICc4JzogJ9moJywKICAgICAgICAnOSc6ICfZqScsCiAgICAgICAgJzAnOiAn2aAnCiAgICB9LCBudW1iZXJNYXAgPSB7CiAgICAgICAgJ9mhJzogJzEnLAogICAgICAgICfZoic6ICcyJywKICAgICAgICAn2aMnOiAnMycsCiAgICAgICAgJ9mkJzogJzQnLAogICAgICAgICfZpSc6ICc1JywKICAgICAgICAn2aYnOiAnNicsCiAgICAgICAgJ9mnJzogJzcnLAogICAgICAgICfZqCc6ICc4JywKICAgICAgICAn2aknOiAnOScsCiAgICAgICAgJ9mgJzogJzAnCiAgICB9LCBwbHVyYWxGb3JtID0gZnVuY3Rpb24gKG4pIHsKICAgICAgICByZXR1cm4gbiA9PT0gMCA\/IDAgOiBuID09PSAxID8gMSA6IG4gPT09IDIgPyAyIDogbiAlIDEwMCA+PSAzICYmIG4gJSAxMDAgPD0gMTAgPyAzIDogbiAlIDEwMCA+PSAxMSA\/IDQgOiA1OwogICAgfSwgcGx1cmFscyA9IHsKICAgICAgICBzIDogWyfYo9mC2YQg2YXZhiDYq9in2YbZitipJywgJ9ir2KfZhtmK2Kkg2YjYp9it2K\/YqScsIFsn2KvYp9mG2YrYqtin2YYnLCAn2KvYp9mG2YrYqtmK2YYnXSwgJyVkINir2YjYp9mGJywgJyVkINir2KfZhtmK2KknLCAnJWQg2KvYp9mG2YrYqSddLAogICAgICAgIG0gOiBbJ9ij2YLZhCDZhdmGINiv2YLZitmC2KknLCAn2K\/ZgtmK2YLYqSDZiNin2K3Yr9ipJywgWyfYr9mC2YrZgtiq2KfZhicsICfYr9mC2YrZgtiq2YrZhiddLCAnJWQg2K\/Zgtin2KbZgicsICclZCDYr9mC2YrZgtipJywgJyVkINiv2YLZitmC2KknXSwKICAgICAgICBoIDogWyfYo9mC2YQg2YXZhiDYs9in2LnYqScsICfYs9in2LnYqSDZiNin2K3Yr9ipJywgWyfYs9in2LnYqtin2YYnLCAn2LPYp9i52KrZitmGJ10sICclZCDYs9in2LnYp9iqJywgJyVkINiz2KfYudipJywgJyVkINiz2KfYudipJ10sCiAgICAgICAgZCA6IFsn2KPZgtmEINmF2YYg2YrZiNmFJywgJ9mK2YjZhSDZiNin2K3YrycsIFsn2YrZiNmF2KfZhicsICfZitmI2YXZitmGJ10sICclZCDYo9mK2KfZhScsICclZCDZitmI2YXZi9inJywgJyVkINmK2YjZhSddLAogICAgICAgIE0gOiBbJ9ij2YLZhCDZhdmGINi02YfYsScsICfYtNmH2LEg2YjYp9it2K8nLCBbJ9i02YfYsdin2YYnLCAn2LTZh9ix2YrZhiddLCAnJWQg2KPYtNmH2LEnLCAnJWQg2LTZh9ix2KcnLCAnJWQg2LTZh9ixJ10sCiAgICAgICAgeSA6IFsn2KPZgtmEINmF2YYg2LnYp9mFJywgJ9i52KfZhSDZiNin2K3YrycsIFsn2LnYp9mF2KfZhicsICfYudin2YXZitmGJ10sICclZCDYo9i52YjYp9mFJywgJyVkINi52KfZhdmL2KcnLCAnJWQg2LnYp9mFJ10KICAgIH0sIHBsdXJhbGl6ZSA9IGZ1bmN0aW9uICh1KSB7CiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChudW1iZXIsIHdpdGhvdXRTdWZmaXgsIHN0cmluZywgaXNGdXR1cmUpIHsKICAgICAgICAgICAgdmFyIGYgPSBwbHVyYWxGb3JtKG51bWJlciksCiAgICAgICAgICAgICAgICBzdHIgPSBwbHVyYWxzW3VdW3BsdXJhbEZvcm0obnVtYmVyKV07CiAgICAgICAgICAgIGlmIChmID09PSAyKSB7CiAgICAgICAgICAgICAgICBzdHIgPSBzdHJbd2l0aG91dFN1ZmZpeCA\/IDAgOiAxXTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gc3RyLnJlcGxhY2UoLyVkL2ksIG51bWJlcik7CiAgICAgICAgfTsKICAgIH0sIG1vbnRocyA9IFsKICAgICAgICAn2YPYp9mG2YjZhiDYp9mE2KvYp9mG2Yog2YrZhtin2YrYsScsCiAgICAgICAgJ9i02KjYp9i3INmB2KjYsdin2YrYsScsCiAgICAgICAgJ9ii2LDYp9ixINmF2KfYsdizJywKICAgICAgICAn2YbZitiz2KfZhiDYo9io2LHZitmEJywKICAgICAgICAn2KPZitin2LEg2YXYp9mK2YgnLAogICAgICAgICfYrdiy2YrYsdin2YYg2YrZiNmG2YrZiCcsCiAgICAgICAgJ9iq2YXZiNiyINmK2YjZhNmK2YgnLAogICAgICAgICfYotioINij2LrYs9i32LMnLAogICAgICAgICfYo9mK2YTZiNmEINiz2KjYqtmF2KjYsScsCiAgICAgICAgJ9iq2LTYsdmK2YYg2KfZhNij2YjZhCDYo9mD2KrZiNio2LEnLAogICAgICAgICfYqti02LHZitmGINin2YTYq9in2YbZiiDZhtmI2YHZhdio2LEnLAogICAgICAgICfZg9in2YbZiNmGINin2YTYo9mI2YQg2K\/Zitiz2YXYqNixJwogICAgXTsKCiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgnYXInLCB7CiAgICAgICAgbW9udGhzIDogbW9udGhzLAogICAgICAgIG1vbnRoc1Nob3J0IDogbW9udGhzLAogICAgICAgIHdlZWtkYXlzIDogJ9in2YTYo9it2K9f2KfZhNil2KvZhtmK2YZf2KfZhNir2YTYp9ir2KfYoV\/Yp9mE2KPYsdio2LnYp9ihX9in2YTYrtmF2YrYs1\/Yp9mE2KzZhdi52Klf2KfZhNiz2KjYqicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ9ij2K3Yr1\/Ypdir2YbZitmGX9ir2YTYp9ir2KfYoV\/Yo9ix2KjYudin2KFf2K7ZhdmK2LNf2KzZhdi52Klf2LPYqNiqJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ9itX9mGX9irX9ixX9iuX9isX9izJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdISDptbScsCiAgICAgICAgICAgIExUUyA6ICdISDptbTpzcycsCiAgICAgICAgICAgIEwgOiAnREQvTU0vWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZIExUJywKICAgICAgICAgICAgTExMTCA6ICdkZGRkIEQgTU1NTSBZWVlZIExUJwogICAgICAgIH0sCiAgICAgICAgbWVyaWRpZW1QYXJzZTogL9i1fNmFLywKICAgICAgICBpc1BNIDogZnVuY3Rpb24gKGlucHV0KSB7CiAgICAgICAgICAgIHJldHVybiAn2YUnID09PSBpbnB1dDsKICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtIDogZnVuY3Rpb24gKGhvdXIsIG1pbnV0ZSwgaXNMb3dlcikgewogICAgICAgICAgICBpZiAoaG91ciA8IDEyKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ9i1JzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiAn2YUnOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheTogJ1vYp9mE2YrZiNmFINi52YbYryDYp9mE2LPYp9i52KldIExUJywKICAgICAgICAgICAgbmV4dERheTogJ1vYutiv2YvYpyDYudmG2K8g2KfZhNiz2KfYudipXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrOiAnZGRkZCBb2LnZhtivINin2YTYs9in2LnYqV0gTFQnLAogICAgICAgICAgICBsYXN0RGF5OiAnW9ij2YXYsyDYudmG2K8g2KfZhNiz2KfYudipXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrOiAnZGRkZCBb2LnZhtivINin2YTYs9in2LnYqV0gTFQnLAogICAgICAgICAgICBzYW1lRWxzZTogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICfYqNi52K8gJXMnLAogICAgICAgICAgICBwYXN0IDogJ9mF2YbYsCAlcycsCiAgICAgICAgICAgIHMgOiBwbHVyYWxpemUoJ3MnKSwKICAgICAgICAgICAgbSA6IHBsdXJhbGl6ZSgnbScpLAogICAgICAgICAgICBtbSA6IHBsdXJhbGl6ZSgnbScpLAogICAgICAgICAgICBoIDogcGx1cmFsaXplKCdoJyksCiAgICAgICAgICAgIGhoIDogcGx1cmFsaXplKCdoJyksCiAgICAgICAgICAgIGQgOiBwbHVyYWxpemUoJ2QnKSwKICAgICAgICAgICAgZGQgOiBwbHVyYWxpemUoJ2QnKSwKICAgICAgICAgICAgTSA6IHBsdXJhbGl6ZSgnTScpLAogICAgICAgICAgICBNTSA6IHBsdXJhbGl6ZSgnTScpLAogICAgICAgICAgICB5IDogcGx1cmFsaXplKCd5JyksCiAgICAgICAgICAgIHl5IDogcGx1cmFsaXplKCd5JykKICAgICAgICB9LAogICAgICAgIHByZXBhcnNlOiBmdW5jdGlvbiAoc3RyaW5nKSB7CiAgICAgICAgICAgIHJldHVybiBzdHJpbmcucmVwbGFjZSgvW9mh2aLZo9mk2aXZptmn2ajZqdmgXS9nLCBmdW5jdGlvbiAobWF0Y2gpIHsKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXJNYXBbbWF0Y2hdOwogICAgICAgICAgICB9KS5yZXBsYWNlKC\/YjC9nLCAnLCcpOwogICAgICAgIH0sCiAgICAgICAgcG9zdGZvcm1hdDogZnVuY3Rpb24gKHN0cmluZykgewogICAgICAgICAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2UoL1xkL2csIGZ1bmN0aW9uIChtYXRjaCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHN5bWJvbE1hcFttYXRjaF07CiAgICAgICAgICAgIH0pLnJlcGxhY2UoLywvZywgJ9iMJyk7CiAgICAgICAgfSwKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiA2LCAvLyBTYXR1cmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiAxMiAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gMXN0IGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBhemVyYmFpamFuaSAoYXopCi8vIGF1dGhvciA6IHRvcGNoaXlldiA6IGh0dHBzOi8vZ2l0aHViLmNvbS90b3BjaGl5ZXYKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHZhciBzdWZmaXhlcyA9IHsKICAgICAgICAxOiAnLWluY2knLAogICAgICAgIDU6ICctaW5jaScsCiAgICAgICAgODogJy1pbmNpJywKICAgICAgICA3MDogJy1pbmNpJywKICAgICAgICA4MDogJy1pbmNpJywKCiAgICAgICAgMjogJy1uY2knLAogICAgICAgIDc6ICctbmNpJywKICAgICAgICAyMDogJy1uY2knLAogICAgICAgIDUwOiAnLW5jaScsCgogICAgICAgIDM6ICctw7xuY8O8JywKICAgICAgICA0OiAnLcO8bmPDvCcsCiAgICAgICAgMTAwOiAnLcO8bmPDvCcsCgogICAgICAgIDY6ICctbmPEsScsCgogICAgICAgIDk6ICctdW5jdScsCiAgICAgICAgMTA6ICctdW5jdScsCiAgICAgICAgMzA6ICctdW5jdScsCgogICAgICAgIDYwOiAnLcSxbmPEsScsCiAgICAgICAgOTA6ICctxLFuY8SxJwogICAgfTsKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdheicsIHsKICAgICAgICBtb250aHMgOiAneWFudmFyX2ZldnJhbF9tYXJ0X2FwcmVsX21heV9peXVuX2l5dWxfYXZxdXN0X3NlbnR5YWJyX29rdHlhYnJfbm95YWJyX2Rla2Ficicuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICd5YW5fZmV2X21hcl9hcHJfbWF5X2l5bl9peWxfYXZxX3Nlbl9va3Rfbm95X2Rlaycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICdCYXphcl9CYXphciBlcnTJmXNpX8OHyZlyxZ\/JmW5iyZkgYXjFn2FtxLFfw4fJmXLFn8mZbmLJmV9Dw7xtyZkgYXjFn2FtxLFfQ8O8bcmZX8WeyZluYsmZJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAnQmF6X0J6RV\/Dh0F4X8OHyZlyX0NBeF9Dw7xtX8WeyZluJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ0J6X0JFX8OHQV\/Dh8mZX0NBX0PDvF\/FnsmZJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdISDptbScsCiAgICAgICAgICAgIExUUyA6ICdMVDpzcycsCiAgICAgICAgICAgIEwgOiAnREQuTU0uWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZIExUJywKICAgICAgICAgICAgTExMTCA6ICdkZGRkLCBEIE1NTU0gWVlZWSBMVCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1tidWfDvG4gc2FhdF0gTFQnLAogICAgICAgICAgICBuZXh0RGF5IDogJ1tzYWJhaCBzYWF0XSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ1tnyZlsyZluIGjJmWZ0yZldIGRkZGQgW3NhYXRdIExUJywKICAgICAgICAgICAgbGFzdERheSA6ICdbZMO8bsmZbl0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdba2XDp8mZbiBoyZlmdMmZXSBkZGRkIFtzYWF0XSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICclcyBzb25yYScsCiAgICAgICAgICAgIHBhc3QgOiAnJXMgyZl2dsmZbCcsCiAgICAgICAgICAgIHMgOiAnYmlybmXDp8mZIHNhbml5ecmZJywKICAgICAgICAgICAgbSA6ICdiaXIgZMmZcWlxyZknLAogICAgICAgICAgICBtbSA6ICclZCBkyZlxaXHJmScsCiAgICAgICAgICAgIGggOiAnYmlyIHNhYXQnLAogICAgICAgICAgICBoaCA6ICclZCBzYWF0JywKICAgICAgICAgICAgZCA6ICdiaXIgZ8O8bicsCiAgICAgICAgICAgIGRkIDogJyVkIGfDvG4nLAogICAgICAgICAgICBNIDogJ2JpciBheScsCiAgICAgICAgICAgIE1NIDogJyVkIGF5JywKICAgICAgICAgICAgeSA6ICdiaXIgaWwnLAogICAgICAgICAgICB5eSA6ICclZCBpbCcKICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtUGFyc2U6IC9nZWPJmXxzyZloyZlyfGfDvG5kw7x6fGF4xZ9hbS8sCiAgICAgICAgaXNQTSA6IGZ1bmN0aW9uIChpbnB1dCkgewogICAgICAgICAgICByZXR1cm4gL14oZ8O8bmTDvHp8YXjFn2FtKSQvLnRlc3QoaW5wdXQpOwogICAgICAgIH0sCiAgICAgICAgbWVyaWRpZW0gOiBmdW5jdGlvbiAoaG91ciwgbWludXRlLCBpc0xvd2VyKSB7CiAgICAgICAgICAgIGlmIChob3VyIDwgNCkgewogICAgICAgICAgICAgICAgcmV0dXJuICdnZWPJmSc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaG91ciA8IDEyKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ3PJmWjJmXInOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhvdXIgPCAxNykgewogICAgICAgICAgICAgICAgcmV0dXJuICdnw7xuZMO8eic7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ2F4xZ9hbSc7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG9yZGluYWxQYXJzZTogL1xkezEsMn0tKMSxbmPEsXxpbmNpfG5jaXzDvG5jw7x8bmPEsXx1bmN1KS8sCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgaWYgKG51bWJlciA9PT0gMCkgeyAgLy8gc3BlY2lhbCBjYXNlIGZvciB6ZXJvCiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJy3EsW5jxLEnOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHZhciBhID0gbnVtYmVyICUgMTAsCiAgICAgICAgICAgICAgICBiID0gbnVtYmVyICUgMTAwIC0gYSwKICAgICAgICAgICAgICAgIGMgPSBudW1iZXIgPj0gMTAwID8gMTAwIDogbnVsbDsKCiAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAoc3VmZml4ZXNbYV0gfHwgc3VmZml4ZXNbYl0gfHwgc3VmZml4ZXNbY10pOwogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDcgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDFzdCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogYmVsYXJ1c2lhbiAoYmUpCi8vIGF1dGhvciA6IERtaXRyeSBEZW1pZG92IDogaHR0cHM6Ly9naXRodWIuY29tL2RlbWlkb3Y5MQovLyBhdXRob3I6IFByYWxlc2thOiBodHRwOi8vcHJhbGVza2EucHJvLwovLyBBdXRob3IgOiBNZW5lbGlvbiBFbGVuc8O6bGUgOiBodHRwczovL2dpdGh1Yi5jb20vT2lyZQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgZnVuY3Rpb24gcGx1cmFsKHdvcmQsIG51bSkgewogICAgICAgIHZhciBmb3JtcyA9IHdvcmQuc3BsaXQoJ18nKTsKICAgICAgICByZXR1cm4gbnVtICUgMTAgPT09IDEgJiYgbnVtICUgMTAwICE9PSAxMSA\/IGZvcm1zWzBdIDogKG51bSAlIDEwID49IDIgJiYgbnVtICUgMTAgPD0gNCAmJiAobnVtICUgMTAwIDwgMTAgfHwgbnVtICUgMTAwID49IDIwKSA\/IGZvcm1zWzFdIDogZm9ybXNbMl0pOwogICAgfQoKICAgIGZ1bmN0aW9uIHJlbGF0aXZlVGltZVdpdGhQbHVyYWwobnVtYmVyLCB3aXRob3V0U3VmZml4LCBrZXkpIHsKICAgICAgICB2YXIgZm9ybWF0ID0gewogICAgICAgICAgICAnbW0nOiB3aXRob3V0U3VmZml4ID8gJ9GF0LLRltC70ZbQvdCwX9GF0LLRltC70ZbQvdGLX9GF0LLRltC70ZbQvScgOiAn0YXQstGW0LvRltC90YNf0YXQstGW0LvRltC90Ytf0YXQstGW0LvRltC9JywKICAgICAgICAgICAgJ2hoJzogd2l0aG91dFN1ZmZpeCA\/ICfQs9Cw0LTQt9GW0L3QsF\/Qs9Cw0LTQt9GW0L3Ri1\/Qs9Cw0LTQt9GW0L0nIDogJ9Cz0LDQtNC30ZbQvdGDX9Cz0LDQtNC30ZbQvdGLX9Cz0LDQtNC30ZbQvScsCiAgICAgICAgICAgICdkZCc6ICfQtNC30LXQvdGMX9C00L3Rll\/QtNC30ZHQvScsCiAgICAgICAgICAgICdNTSc6ICfQvNC10YHRj9GGX9C80LXRgdGP0YbRi1\/QvNC10YHRj9GG0LDRnicsCiAgICAgICAgICAgICd5eSc6ICfQs9C+0LRf0LPQsNC00Ytf0LPQsNC00L7RnicKICAgICAgICB9OwogICAgICAgIGlmIChrZXkgPT09ICdtJykgewogICAgICAgICAgICByZXR1cm4gd2l0aG91dFN1ZmZpeCA\/ICfRhdCy0ZbQu9GW0L3QsCcgOiAn0YXQstGW0LvRltC90YMnOwogICAgICAgIH0KICAgICAgICBlbHNlIGlmIChrZXkgPT09ICdoJykgewogICAgICAgICAgICByZXR1cm4gd2l0aG91dFN1ZmZpeCA\/ICfQs9Cw0LTQt9GW0L3QsCcgOiAn0LPQsNC00LfRltC90YMnOwogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICcgJyArIHBsdXJhbChmb3JtYXRba2V5XSwgK251bWJlcik7CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIG1vbnRoc0Nhc2VSZXBsYWNlKG0sIGZvcm1hdCkgewogICAgICAgIHZhciBtb250aHMgPSB7CiAgICAgICAgICAgICdub21pbmF0aXZlJzogJ9GB0YLRg9C00LfQtdC90Yxf0LvRjtGC0Ytf0YHQsNC60LDQstGW0Lpf0LrRgNCw0YHQsNCy0ZbQul\/RgtGA0LDQstC10L3RjF\/Rh9GN0YDQstC10L3RjF\/Qu9GW0L\/QtdC90Yxf0LbQvdGW0LLQtdC90Yxf0LLQtdGA0LDRgdC10L3RjF\/QutCw0YHRgtGA0YvRh9C90ZbQul\/Qu9GW0YHRgtCw0L\/QsNC0X9GB0L3QtdC20LDQvdGMJy5zcGxpdCgnXycpLAogICAgICAgICAgICAnYWNjdXNhdGl2ZSc6ICfRgdGC0YPQtNC30LXQvdGPX9C70Y7RgtCw0LPQsF\/RgdCw0LrQsNCy0ZbQutCwX9C60YDQsNGB0LDQstGW0LrQsF\/RgtGA0LDRntC90Y9f0YfRjdGA0LLQtdC90Y9f0LvRltC\/0LXQvdGPX9C20L3RltGe0L3Rj1\/QstC10YDQsNGB0L3Rj1\/QutCw0YHRgtGA0YvRh9C90ZbQutCwX9C70ZbRgdGC0LDQv9Cw0LTQsF\/RgdC90LXQttC90Y8nLnNwbGl0KCdfJykKICAgICAgICB9LAoKICAgICAgICBub3VuQ2FzZSA9ICgvRFtvRF0\/KFxbW15cW1xdXSpcXXxccyspK01NTU0\/LykudGVzdChmb3JtYXQpID8KICAgICAgICAgICAgJ2FjY3VzYXRpdmUnIDoKICAgICAgICAgICAgJ25vbWluYXRpdmUnOwoKICAgICAgICByZXR1cm4gbW9udGhzW25vdW5DYXNlXVttLm1vbnRoKCldOwogICAgfQoKICAgIGZ1bmN0aW9uIHdlZWtkYXlzQ2FzZVJlcGxhY2UobSwgZm9ybWF0KSB7CiAgICAgICAgdmFyIHdlZWtkYXlzID0gewogICAgICAgICAgICAnbm9taW5hdGl2ZSc6ICfQvdGP0LTQt9C10LvRj1\/Qv9Cw0L3Rj9C00LfQtdC70LDQul\/QsNGe0YLQvtGA0LDQul\/RgdC10YDQsNC00LBf0YfQsNGG0LLQtdGAX9C\/0Y\/RgtC90ZbRhtCwX9GB0YPQsdC+0YLQsCcuc3BsaXQoJ18nKSwKICAgICAgICAgICAgJ2FjY3VzYXRpdmUnOiAn0L3Rj9C00LfQtdC70Y5f0L\/QsNC90Y\/QtNC30LXQu9Cw0Lpf0LDRntGC0L7RgNCw0Lpf0YHQtdGA0LDQtNGDX9GH0LDRhtCy0LXRgF\/Qv9GP0YLQvdGW0YbRg1\/RgdGD0LHQvtGC0YMnLnNwbGl0KCdfJykKICAgICAgICB9LAoKICAgICAgICBub3VuQ2FzZSA9ICgvXFsgP1vQktCyXSA\/KD860LzRltC90YPQu9GD0Y580L3QsNGB0YLRg9C\/0L3Rg9GOKT8gP1xdID9kZGRkLykudGVzdChmb3JtYXQpID8KICAgICAgICAgICAgJ2FjY3VzYXRpdmUnIDoKICAgICAgICAgICAgJ25vbWluYXRpdmUnOwoKICAgICAgICByZXR1cm4gd2Vla2RheXNbbm91bkNhc2VdW20uZGF5KCldOwogICAgfQoKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdiZScsIHsKICAgICAgICBtb250aHMgOiBtb250aHNDYXNlUmVwbGFjZSwKICAgICAgICBtb250aHNTaG9ydCA6ICfRgdGC0YPQtF\/Qu9GO0YJf0YHQsNC6X9C60YDQsNGBX9GC0YDQsNCyX9GH0Y3RgNCyX9C70ZbQv1\/QttC90ZbQsl\/QstC10YBf0LrQsNGB0YJf0LvRltGB0YJf0YHQvdC10LYnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXMgOiB3ZWVrZGF5c0Nhc2VSZXBsYWNlLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAn0L3QtF\/Qv9C9X9Cw0YJf0YHRgF\/Rh9GGX9C\/0YJf0YHQsScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICfQvdC0X9C\/0L1f0LDRgl\/RgdGAX9GH0YZf0L\/Rgl\/RgdCxJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdISDptbScsCiAgICAgICAgICAgIExUUyA6ICdMVDpzcycsCiAgICAgICAgICAgIEwgOiAnREQuTU0uWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZINCzLicsCiAgICAgICAgICAgIExMTCA6ICdEIE1NTU0gWVlZWSDQsy4sIExUJywKICAgICAgICAgICAgTExMTCA6ICdkZGRkLCBEIE1NTU0gWVlZWSDQsy4sIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICdb0KHRkdC90L3RjyDRnl0gTFQnLAogICAgICAgICAgICBuZXh0RGF5OiAnW9CX0LDRntGC0YDQsCDRnl0gTFQnLAogICAgICAgICAgICBsYXN0RGF5OiAnW9Cj0YfQvtGA0LAg0Z5dIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAnW9CjXSBkZGRkIFvRnl0gTFQnOwogICAgICAgICAgICB9LAogICAgICAgICAgICBsYXN0V2VlazogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgc3dpdGNoICh0aGlzLmRheSgpKSB7CiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdb0KMg0LzRltC90YPQu9GD0Y5dIGRkZGQgW9GeXSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdb0KMg0LzRltC90YPQu9GLXSBkZGRkIFvRnl0gTFQnOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBzYW1lRWxzZTogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICfQv9GA0LDQtyAlcycsCiAgICAgICAgICAgIHBhc3QgOiAnJXMg0YLQsNC80YMnLAogICAgICAgICAgICBzIDogJ9C90LXQutCw0LvRjNC60ZYg0YHQtdC60YPQvdC0JywKICAgICAgICAgICAgbSA6IHJlbGF0aXZlVGltZVdpdGhQbHVyYWwsCiAgICAgICAgICAgIG1tIDogcmVsYXRpdmVUaW1lV2l0aFBsdXJhbCwKICAgICAgICAgICAgaCA6IHJlbGF0aXZlVGltZVdpdGhQbHVyYWwsCiAgICAgICAgICAgIGhoIDogcmVsYXRpdmVUaW1lV2l0aFBsdXJhbCwKICAgICAgICAgICAgZCA6ICfQtNC30LXQvdGMJywKICAgICAgICAgICAgZGQgOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsLAogICAgICAgICAgICBNIDogJ9C80LXRgdGP0YYnLAogICAgICAgICAgICBNTSA6IHJlbGF0aXZlVGltZVdpdGhQbHVyYWwsCiAgICAgICAgICAgIHkgOiAn0LPQvtC0JywKICAgICAgICAgICAgeXkgOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsCiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbVBhcnNlOiAv0L3QvtGH0Yt80YDQsNC90ZbRhtGLfNC00L3Rj3zQstC10YfQsNGA0LAvLAogICAgICAgIGlzUE0gOiBmdW5jdGlvbiAoaW5wdXQpIHsKICAgICAgICAgICAgcmV0dXJuIC9eKNC00L3Rj3zQstC10YfQsNGA0LApJC8udGVzdChpbnB1dCk7CiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbSA6IGZ1bmN0aW9uIChob3VyLCBtaW51dGUsIGlzTG93ZXIpIHsKICAgICAgICAgICAgaWYgKGhvdXIgPCA0KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ9C90L7Rh9GLJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VyIDwgMTIpIHsKICAgICAgICAgICAgICAgIHJldHVybiAn0YDQsNC90ZbRhtGLJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VyIDwgMTcpIHsKICAgICAgICAgICAgICAgIHJldHVybiAn0LTQvdGPJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiAn0LLQtdGH0LDRgNCwJzsKICAgICAgICAgICAgfQogICAgICAgIH0sCgogICAgICAgIG9yZGluYWxQYXJzZTogL1xkezEsMn0tKNGWfNGLfNCz0LApLywKICAgICAgICBvcmRpbmFsOiBmdW5jdGlvbiAobnVtYmVyLCBwZXJpb2QpIHsKICAgICAgICAgICAgc3dpdGNoIChwZXJpb2QpIHsKICAgICAgICAgICAgY2FzZSAnTSc6CiAgICAgICAgICAgIGNhc2UgJ2QnOgogICAgICAgICAgICBjYXNlICdEREQnOgogICAgICAgICAgICBjYXNlICd3JzoKICAgICAgICAgICAgY2FzZSAnVyc6CiAgICAgICAgICAgICAgICByZXR1cm4gKG51bWJlciAlIDEwID09PSAyIHx8IG51bWJlciAlIDEwID09PSAzKSAmJiAobnVtYmVyICUgMTAwICE9PSAxMiAmJiBudW1iZXIgJSAxMDAgIT09IDEzKSA\/IG51bWJlciArICct0ZYnIDogbnVtYmVyICsgJy3Riyc7CiAgICAgICAgICAgIGNhc2UgJ0QnOgogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICct0LPQsCc7CiAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyOwogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDcgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDFzdCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogYnVsZ2FyaWFuIChiZykKLy8gYXV0aG9yIDogS3Jhc2VuIEJvcmlzb3YgOiBodHRwczovL2dpdGh1Yi5jb20va3JhegoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ2JnJywgewogICAgICAgIG1vbnRocyA6ICfRj9C90YPQsNGA0Lhf0YTQtdCy0YDRg9Cw0YDQuF\/QvNCw0YDRgl\/QsNC\/0YDQuNC7X9C80LDQuV\/RjtC90Lhf0Y7Qu9C4X9Cw0LLQs9GD0YHRgl\/RgdC10L\/RgtC10LzQstGA0Lhf0L7QutGC0L7QvNCy0YDQuF\/QvdC+0LXQvNCy0YDQuF\/QtNC10LrQtdC80LLRgNC4Jy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJ9GP0L3RgF\/RhNC10LJf0LzQsNGAX9Cw0L\/RgF\/QvNCw0Llf0Y7QvdC4X9GO0LvQuF\/QsNCy0LNf0YHQtdC\/X9C+0LrRgl\/QvdC+0LVf0LTQtdC6Jy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ9C90LXQtNC10LvRj1\/Qv9C+0L3QtdC00LXQu9C90LjQul\/QstGC0L7RgNC90LjQul\/RgdGA0Y\/QtNCwX9GH0LXRgtCy0YrRgNGC0YrQul\/Qv9C10YLRitC6X9GB0YrQsdC+0YLQsCcuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ9C90LXQtF\/Qv9C+0L1f0LLRgtC+X9GB0YDRj1\/Rh9C10YJf0L\/QtdGCX9GB0YrQsScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICfQvdC0X9C\/0L1f0LLRgl\/RgdGAX9GH0YJf0L\/Rgl\/RgdCxJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdIOm1tJywKICAgICAgICAgICAgTFRTIDogJ0xUOnNzJywKICAgICAgICAgICAgTCA6ICdELk1NLllZWVknLAogICAgICAgICAgICBMTCA6ICdEIE1NTU0gWVlZWScsCiAgICAgICAgICAgIExMTCA6ICdEIE1NTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCwgRCBNTU1NIFlZWVkgTFQnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6ICdb0JTQvdC10YEg0LJdIExUJywKICAgICAgICAgICAgbmV4dERheSA6ICdb0KPRgtGA0LUg0LJdIExUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnZGRkZCBb0LJdIExUJywKICAgICAgICAgICAgbGFzdERheSA6ICdb0JLRh9C10YDQsCDQsl0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAodGhpcy5kYXkoKSkgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW9CSINC40LfQvNC40L3QsNC70LDRgtCwXSBkZGRkIFvQsl0gTFQnOwogICAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW9CSINC40LfQvNC40L3QsNC70LjRj10gZGRkZCBb0LJdIExUJzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ9GB0LvQtdC0ICVzJywKICAgICAgICAgICAgcGFzdCA6ICfQv9GA0LXQtNC4ICVzJywKICAgICAgICAgICAgcyA6ICfQvdGP0LrQvtC70LrQviDRgdC10LrRg9C90LTQuCcsCiAgICAgICAgICAgIG0gOiAn0LzQuNC90YPRgtCwJywKICAgICAgICAgICAgbW0gOiAnJWQg0LzQuNC90YPRgtC4JywKICAgICAgICAgICAgaCA6ICfRh9Cw0YEnLAogICAgICAgICAgICBoaCA6ICclZCDRh9Cw0YHQsCcsCiAgICAgICAgICAgIGQgOiAn0LTQtdC9JywKICAgICAgICAgICAgZGQgOiAnJWQg0LTQvdC4JywKICAgICAgICAgICAgTSA6ICfQvNC10YHQtdGGJywKICAgICAgICAgICAgTU0gOiAnJWQg0LzQtdGB0LXRhtCwJywKICAgICAgICAgICAgeSA6ICfQs9C+0LTQuNC90LAnLAogICAgICAgICAgICB5eSA6ICclZCDQs9C+0LTQuNC90LgnCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsUGFyc2U6IC9cZHsxLDJ9LSjQtdCyfNC10L180YLQuHzQstC4fNGA0Lh80LzQuCkvLAogICAgICAgIG9yZGluYWwgOiBmdW5jdGlvbiAobnVtYmVyKSB7CiAgICAgICAgICAgIHZhciBsYXN0RGlnaXQgPSBudW1iZXIgJSAxMCwKICAgICAgICAgICAgICAgIGxhc3QyRGlnaXRzID0gbnVtYmVyICUgMTAwOwogICAgICAgICAgICBpZiAobnVtYmVyID09PSAwKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJy3QtdCyJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChsYXN0MkRpZ2l0cyA9PT0gMCkgewogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICct0LXQvSc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobGFzdDJEaWdpdHMgPiAxMCAmJiBsYXN0MkRpZ2l0cyA8IDIwKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJy3RgtC4JzsKICAgICAgICAgICAgfSBlbHNlIGlmIChsYXN0RGlnaXQgPT09IDEpIHsKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAnLdCy0LgnOwogICAgICAgICAgICB9IGVsc2UgaWYgKGxhc3REaWdpdCA9PT0gMikgewogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICct0YDQuCc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobGFzdERpZ2l0ID09PSA3IHx8IGxhc3REaWdpdCA9PT0gOCkgewogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICct0LzQuCc7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJy3RgtC4JzsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDcgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDFzdCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogQmVuZ2FsaSAoYm4pCi8vIGF1dGhvciA6IEthdXNoaWsgR2FuZGhpIDogaHR0cHM6Ly9naXRodWIuY29tL2thdXNoaWtnYW5kaGkKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHZhciBzeW1ib2xNYXAgPSB7CiAgICAgICAgJzEnOiAn4KenJywKICAgICAgICAnMic6ICfgp6gnLAogICAgICAgICczJzogJ+CnqScsCiAgICAgICAgJzQnOiAn4KeqJywKICAgICAgICAnNSc6ICfgp6snLAogICAgICAgICc2JzogJ+CnrCcsCiAgICAgICAgJzcnOiAn4KetJywKICAgICAgICAnOCc6ICfgp64nLAogICAgICAgICc5JzogJ+CnrycsCiAgICAgICAgJzAnOiAn4KemJwogICAgfSwKICAgIG51bWJlck1hcCA9IHsKICAgICAgICAn4KenJzogJzEnLAogICAgICAgICfgp6gnOiAnMicsCiAgICAgICAgJ+CnqSc6ICczJywKICAgICAgICAn4KeqJzogJzQnLAogICAgICAgICfgp6snOiAnNScsCiAgICAgICAgJ+CnrCc6ICc2JywKICAgICAgICAn4KetJzogJzcnLAogICAgICAgICfgp64nOiAnOCcsCiAgICAgICAgJ+Cnryc6ICc5JywKICAgICAgICAn4KemJzogJzAnCiAgICB9OwoKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdibicsIHsKICAgICAgICBtb250aHMgOiAn4Kac4Ka+4Kao4KeB4Kef4Ka+4Kaw4KeAX+Cmq+Cnh+CmrOCngeCnn+CmvuCmsOCngF\/gpq7gpr7gprDgp43gpppf4KaP4Kaq4KeN4Kaw4Ka\/4KayX+CmruCnh1\/gppzgp4Hgpqhf4Kac4KeB4Kay4Ka+4KaHX+CmheCml+CmvuCmuOCnjeCmn1\/gprjgp4fgpqrgp43gpp\/gp4fgpq7gp43gpqzgprBf4KaF4KaV4KeN4Kaf4KeL4Kas4KawX+CmqOCmreCnh+CmruCnjeCmrOCmsF\/gpqHgpr\/gprjgp4fgpq7gp43gpqzgprAnLnNwbGl0KCdfJyksCiAgICAgICAgbW9udGhzU2hvcnQgOiAn4Kac4Ka+4Kao4KeBX+Cmq+Cnh+CmrF\/gpq7gpr7gprDgp43gpppf4KaP4Kaq4KawX+CmruCnh1\/gppzgp4Hgpqhf4Kac4KeB4KayX+CmheCml1\/gprjgp4fgpqrgp43gpp9f4KaF4KaV4KeN4Kaf4KeLX+CmqOCmrV\/gpqHgpr\/gprjgp4fgpq7gp40nLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXMgOiAn4Kaw4Kas4Ka\/4Kas4Ka+4KawX+CmuOCni+CmruCmrOCmvuCmsF\/gpq7gppngp43gppfgprLgpqzgpr7gprBf4Kas4KeB4Kan4Kas4Ka+4KawX+CmrOCng+CmueCmuOCnjeCmquCmpOCnjeCmpOCmv+CmrOCmvuCmsF\/gprbgp4HgppXgp43gprDgp4Hgpqzgpr7gprBf4Ka24Kao4Ka\/4Kas4Ka+4KawJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAn4Kaw4Kas4Ka\/X+CmuOCni+Cmrl\/gpq7gppngp43gppfgprJf4Kas4KeB4KanX+CmrOCng+CmueCmuOCnjeCmquCmpOCnjeCmpOCmv1\/gprbgp4HgppXgp43gprDgp4Ff4Ka24Kao4Ka\/Jy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ+CmsOCmrF\/gprjgpq5f4Kau4KaZ4KeN4KaXX+CmrOCngV\/gpqzgp43gprDgpr\/gprlf4Ka24KeBX+CmtuCmqOCmvycuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnQSBoOm1tIOCmuOCmruCnnycsCiAgICAgICAgICAgIExUUyA6ICdBIGg6bW06c3Mg4Ka44Kau4KefJywKICAgICAgICAgICAgTCA6ICdERC9NTS9ZWVlZJywKICAgICAgICAgICAgTEwgOiAnRCBNTU1NIFlZWVknLAogICAgICAgICAgICBMTEwgOiAnRCBNTU1NIFlZWVksIExUJywKICAgICAgICAgICAgTExMTCA6ICdkZGRkLCBEIE1NTU0gWVlZWSwgTFQnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6ICdb4KaG4KacXSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW+CmhuCml+CmvuCmruCngOCmleCmvuCmsl0gTFQnLAogICAgICAgICAgICBuZXh0V2VlayA6ICdkZGRkLCBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW+Cml+CmpOCmleCmvuCmsl0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdb4KaX4KakXSBkZGRkLCBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICclcyDgpqrgprDgp4cnLAogICAgICAgICAgICBwYXN0IDogJyVzIOCmhuCml+CnhycsCiAgICAgICAgICAgIHMgOiAn4KaV4KaP4KaVIOCmuOCnh+CmleCnh+CmqOCnjeCmoScsCiAgICAgICAgICAgIG0gOiAn4KaP4KaVIOCmruCmv+CmqOCmv+CmnycsCiAgICAgICAgICAgIG1tIDogJyVkIOCmruCmv+CmqOCmv+CmnycsCiAgICAgICAgICAgIGggOiAn4KaP4KaVIOCmmOCmqOCnjeCmn+CmvicsCiAgICAgICAgICAgIGhoIDogJyVkIOCmmOCmqOCnjeCmn+CmvicsCiAgICAgICAgICAgIGQgOiAn4KaP4KaVIOCmpuCmv+CmqCcsCiAgICAgICAgICAgIGRkIDogJyVkIOCmpuCmv+CmqCcsCiAgICAgICAgICAgIE0gOiAn4KaP4KaVIOCmruCmvuCmuCcsCiAgICAgICAgICAgIE1NIDogJyVkIOCmruCmvuCmuCcsCiAgICAgICAgICAgIHkgOiAn4KaP4KaVIOCmrOCmm+CmsCcsCiAgICAgICAgICAgIHl5IDogJyVkIOCmrOCmm+CmsCcKICAgICAgICB9LAogICAgICAgIHByZXBhcnNlOiBmdW5jdGlvbiAoc3RyaW5nKSB7CiAgICAgICAgICAgIHJldHVybiBzdHJpbmcucmVwbGFjZSgvW+Cnp+CnqOCnqeCnquCnq+CnrOCnreCnruCnr+Cnpl0vZywgZnVuY3Rpb24gKG1hdGNoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyTWFwW21hdGNoXTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBwb3N0Zm9ybWF0OiBmdW5jdGlvbiAoc3RyaW5nKSB7CiAgICAgICAgICAgIHJldHVybiBzdHJpbmcucmVwbGFjZSgvXGQvZywgZnVuY3Rpb24gKG1hdGNoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gc3ltYm9sTWFwW21hdGNoXTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbVBhcnNlOiAv4Kaw4Ka+4KakfOCmtuCmleCmvuCmsnzgpqbgp4Hgpqrgp4HgprB84Kas4Ka\/4KaV4KeH4KayfOCmsOCmvuCmpC8sCiAgICAgICAgaXNQTTogZnVuY3Rpb24gKGlucHV0KSB7CiAgICAgICAgICAgIHJldHVybiAvXijgpqbgp4Hgpqrgp4HgprB84Kas4Ka\/4KaV4KeH4KayfOCmsOCmvuCmpCkkLy50ZXN0KGlucHV0KTsKICAgICAgICB9LAogICAgICAgIC8vQmVuZ2FsaSBpcyBhIHZhc3QgbGFuZ3VhZ2UgaXRzIHNwb2tlbgogICAgICAgIC8vaW4gZGlmZmVyZW50IGZvcm1zIGluIHZhcmlvdXMgcGFydHMgb2YgdGhlIHdvcmxkLgogICAgICAgIC8vSSBoYXZlIGp1c3QgZ2VuZXJhbGl6ZWQgd2l0aCBtb3N0IGNvbW1vbiBvbmUgdXNlZAogICAgICAgIG1lcmlkaWVtIDogZnVuY3Rpb24gKGhvdXIsIG1pbnV0ZSwgaXNMb3dlcikgewogICAgICAgICAgICBpZiAoaG91ciA8IDQpIHsKICAgICAgICAgICAgICAgIHJldHVybiAn4Kaw4Ka+4KakJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VyIDwgMTApIHsKICAgICAgICAgICAgICAgIHJldHVybiAn4Ka24KaV4Ka+4KayJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VyIDwgMTcpIHsKICAgICAgICAgICAgICAgIHJldHVybiAn4Kam4KeB4Kaq4KeB4KawJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VyIDwgMjApIHsKICAgICAgICAgICAgICAgIHJldHVybiAn4Kas4Ka\/4KaV4KeH4KayJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiAn4Kaw4Ka+4KakJzsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMCwgLy8gU3VuZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDYgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDFzdCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogdGliZXRhbiAoYm8pCi8vIGF1dGhvciA6IFRodXB0ZW4gTi4gQ2hha3Jpc2hhciA6IGh0dHBzOi8vZ2l0aHViLmNvbS92YWpyYWRvZwoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgdmFyIHN5bWJvbE1hcCA9IHsKICAgICAgICAnMSc6ICfgvKEnLAogICAgICAgICcyJzogJ+C8oicsCiAgICAgICAgJzMnOiAn4LyjJywKICAgICAgICAnNCc6ICfgvKQnLAogICAgICAgICc1JzogJ+C8pScsCiAgICAgICAgJzYnOiAn4LymJywKICAgICAgICAnNyc6ICfgvKcnLAogICAgICAgICc4JzogJ+C8qCcsCiAgICAgICAgJzknOiAn4LypJywKICAgICAgICAnMCc6ICfgvKAnCiAgICB9LAogICAgbnVtYmVyTWFwID0gewogICAgICAgICfgvKEnOiAnMScsCiAgICAgICAgJ+C8oic6ICcyJywKICAgICAgICAn4LyjJzogJzMnLAogICAgICAgICfgvKQnOiAnNCcsCiAgICAgICAgJ+C8pSc6ICc1JywKICAgICAgICAn4LymJzogJzYnLAogICAgICAgICfgvKcnOiAnNycsCiAgICAgICAgJ+C8qCc6ICc4JywKICAgICAgICAn4LypJzogJzknLAogICAgICAgICfgvKAnOiAnMCcKICAgIH07CgogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ2JvJywgewogICAgICAgIG1vbnRocyA6ICfgvZ\/gvrPgvIvgvZbgvIvgvZHgvYTgvIvgvZTgvbxf4L2f4L6z4LyL4L2W4LyL4L2C4L2J4L2y4L2m4LyL4L2UX+C9n+C+s+C8i+C9luC8i+C9guC9puC9tOC9mOC8i+C9lF\/gvZ\/gvrPgvIvgvZbgvIvgvZbgvZ7gvbLgvIvgvZRf4L2f4L6z4LyL4L2W4LyL4L2j4L6U4LyL4L2UX+C9n+C+s+C8i+C9luC8i+C9keC+suC9tOC9guC8i+C9lF\/gvZ\/gvrPgvIvgvZbgvIvgvZbgvZHgvbTgvZPgvIvgvZRf4L2f4L6z4LyL4L2W4LyL4L2W4L2i4L6S4L6x4L2R4LyL4L2UX+C9n+C+s+C8i+C9luC8i+C9keC9guC9tOC8i+C9lF\/gvZ\/gvrPgvIvgvZbgvIvgvZbgvYXgvbTgvIvgvZRf4L2f4L6z4LyL4L2W4LyL4L2W4L2F4L204LyL4L2C4L2F4L2y4L2C4LyL4L2UX+C9n+C+s+C8i+C9luC8i+C9luC9heC9tOC8i+C9guC9ieC9suC9puC8i+C9lCcuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICfgvZ\/gvrPgvIvgvZbgvIvgvZHgvYTgvIvgvZTgvbxf4L2f4L6z4LyL4L2W4LyL4L2C4L2J4L2y4L2m4LyL4L2UX+C9n+C+s+C8i+C9luC8i+C9guC9puC9tOC9mOC8i+C9lF\/gvZ\/gvrPgvIvgvZbgvIvgvZbgvZ7gvbLgvIvgvZRf4L2f4L6z4LyL4L2W4LyL4L2j4L6U4LyL4L2UX+C9n+C+s+C8i+C9luC8i+C9keC+suC9tOC9guC8i+C9lF\/gvZ\/gvrPgvIvgvZbgvIvgvZbgvZHgvbTgvZPgvIvgvZRf4L2f4L6z4LyL4L2W4LyL4L2W4L2i4L6S4L6x4L2R4LyL4L2UX+C9n+C+s+C8i+C9luC8i+C9keC9guC9tOC8i+C9lF\/gvZ\/gvrPgvIvgvZbgvIvgvZbgvYXgvbTgvIvgvZRf4L2f4L6z4LyL4L2W4LyL4L2W4L2F4L204LyL4L2C4L2F4L2y4L2C4LyL4L2UX+C9n+C+s+C8i+C9luC8i+C9luC9heC9tOC8i+C9guC9ieC9suC9puC8i+C9lCcuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICfgvYLgvZ\/gvaDgvIvgvYngvbLgvIvgvZjgvItf4L2C4L2f4L2g4LyL4L2f4L6z4LyL4L2W4LyLX+C9guC9n+C9oOC8i+C9mOC9suC9guC8i+C9keC9mOC9ouC8i1\/gvYLgvZ\/gvaDgvIvgvaPgvrfgvYLgvIvgvZTgvItf4L2C4L2f4L2g4LyL4L2V4L204L2i4LyL4L2W4L20X+C9guC9n+C9oOC8i+C9lOC8i+C9puC9hOC9puC8i1\/gvYLgvZ\/gvaDgvIvgvabgvqTgvbrgvZPgvIvgvZTgvIsnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICfgvYngvbLgvIvgvZjgvItf4L2f4L6z4LyL4L2W4LyLX+C9mOC9suC9guC8i+C9keC9mOC9ouC8i1\/gvaPgvrfgvYLgvIvgvZTgvItf4L2V4L204L2i4LyL4L2W4L20X+C9lOC8i+C9puC9hOC9puC8i1\/gvabgvqTgvbrgvZPgvIvgvZTgvIsnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNNaW4gOiAn4L2J4L2y4LyL4L2Y4LyLX+C9n+C+s+C8i+C9luC8i1\/gvZjgvbLgvYLgvIvgvZHgvZjgvaLgvItf4L2j4L634L2C4LyL4L2U4LyLX+C9leC9tOC9ouC8i+C9luC9tF\/gvZTgvIvgvabgvYTgvabgvItf4L2m4L6k4L264L2T4LyL4L2U4LyLJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdBIGg6bW0nLAogICAgICAgICAgICBMVFMgOiAnTFQ6c3MnLAogICAgICAgICAgICBMIDogJ0REL01NL1lZWVknLAogICAgICAgICAgICBMTCA6ICdEIE1NTU0gWVlZWScsCiAgICAgICAgICAgIExMTCA6ICdEIE1NTU0gWVlZWSwgTFQnLAogICAgICAgICAgICBMTExMIDogJ2RkZGQsIEQgTU1NTSBZWVlZLCBMVCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1vgvZHgvbLgvIvgvaLgvbLgvYRdIExUJywKICAgICAgICAgICAgbmV4dERheSA6ICdb4L2m4L2E4LyL4L2J4L2y4L2TXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ1vgvZbgvZHgvbTgvZPgvIvgvZXgvrLgvYLgvIvgvaLgvpfgvbrgvabgvIvgvZhdLCBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW+C9geC8i+C9puC9hF0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdb4L2W4L2R4L204L2T4LyL4L2V4L6y4L2C4LyL4L2Y4L2Q4L2g4LyL4L2YXSBkZGRkLCBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICclcyDgvaPgvIsnLAogICAgICAgICAgICBwYXN0IDogJyVzIOC9puC+lOC9k+C8i+C9oycsCiAgICAgICAgICAgIHMgOiAn4L2j4L2Y4LyL4L2m4L2EJywKICAgICAgICAgICAgbSA6ICfgvabgvpDgvaLgvIvgvZjgvIvgvYLgvYXgvbLgvYInLAogICAgICAgICAgICBtbSA6ICclZCDgvabgvpDgvaLgvIvgvZgnLAogICAgICAgICAgICBoIDogJ+C9huC9tOC8i+C9muC9vOC9keC8i+C9guC9heC9suC9gicsCiAgICAgICAgICAgIGhoIDogJyVkIOC9huC9tOC8i+C9muC9vOC9kScsCiAgICAgICAgICAgIGQgOiAn4L2J4L2y4L2T4LyL4L2C4L2F4L2y4L2CJywKICAgICAgICAgICAgZGQgOiAnJWQg4L2J4L2y4L2T4LyLJywKICAgICAgICAgICAgTSA6ICfgvZ\/gvrPgvIvgvZbgvIvgvYLgvYXgvbLgvYInLAogICAgICAgICAgICBNTSA6ICclZCDgvZ\/gvrPgvIvgvZYnLAogICAgICAgICAgICB5IDogJ+C9o+C9vOC8i+C9guC9heC9suC9gicsCiAgICAgICAgICAgIHl5IDogJyVkIOC9o+C9vCcKICAgICAgICB9LAogICAgICAgIHByZXBhcnNlOiBmdW5jdGlvbiAoc3RyaW5nKSB7CiAgICAgICAgICAgIHJldHVybiBzdHJpbmcucmVwbGFjZSgvW+C8oeC8ouC8o+C8pOC8peC8puC8p+C8qOC8qeC8oF0vZywgZnVuY3Rpb24gKG1hdGNoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyTWFwW21hdGNoXTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBwb3N0Zm9ybWF0OiBmdW5jdGlvbiAoc3RyaW5nKSB7CiAgICAgICAgICAgIHJldHVybiBzdHJpbmcucmVwbGFjZSgvXGQvZywgZnVuY3Rpb24gKG1hdGNoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gc3ltYm9sTWFwW21hdGNoXTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbVBhcnNlOiAv4L2Y4L2a4L2T4LyL4L2Y4L28fOC9nuC9vOC9guC9puC8i+C9gOC9pnzgvYngvbLgvZPgvIvgvYLgvbTgvYR84L2R4L2C4L284L2E4LyL4L2R4L2CfOC9mOC9muC9k+C8i+C9mOC9vC8sCiAgICAgICAgaXNQTTogZnVuY3Rpb24gKGlucHV0KSB7CiAgICAgICAgICAgIHJldHVybiAvXijgvYngvbLgvZPgvIvgvYLgvbTgvYR84L2R4L2C4L284L2E4LyL4L2R4L2CfOC9mOC9muC9k+C8i+C9mOC9vCkkLy50ZXN0KGlucHV0KTsKICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtIDogZnVuY3Rpb24gKGhvdXIsIG1pbnV0ZSwgaXNMb3dlcikgewogICAgICAgICAgICBpZiAoaG91ciA8IDQpIHsKICAgICAgICAgICAgICAgIHJldHVybiAn4L2Y4L2a4L2T4LyL4L2Y4L28JzsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VyIDwgMTApIHsKICAgICAgICAgICAgICAgIHJldHVybiAn4L2e4L284L2C4L2m4LyL4L2A4L2mJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VyIDwgMTcpIHsKICAgICAgICAgICAgICAgIHJldHVybiAn4L2J4L2y4L2T4LyL4L2C4L204L2EJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VyIDwgMjApIHsKICAgICAgICAgICAgICAgIHJldHVybiAn4L2R4L2C4L284L2E4LyL4L2R4L2CJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiAn4L2Y4L2a4L2T4LyL4L2Y4L28JzsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMCwgLy8gU3VuZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDYgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDFzdCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogYnJldG9uIChicikKLy8gYXV0aG9yIDogSmVhbi1CYXB0aXN0ZSBMZSBEdWlnb3UgOiBodHRwczovL2dpdGh1Yi5jb20vamJsZWR1aWdvdQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgZnVuY3Rpb24gcmVsYXRpdmVUaW1lV2l0aE11dGF0aW9uKG51bWJlciwgd2l0aG91dFN1ZmZpeCwga2V5KSB7CiAgICAgICAgdmFyIGZvcm1hdCA9IHsKICAgICAgICAgICAgJ21tJzogJ211bnV0ZW5uJywKICAgICAgICAgICAgJ01NJzogJ21peicsCiAgICAgICAgICAgICdkZCc6ICdkZXZlemgnCiAgICAgICAgfTsKICAgICAgICByZXR1cm4gbnVtYmVyICsgJyAnICsgbXV0YXRpb24oZm9ybWF0W2tleV0sIG51bWJlcik7CiAgICB9CgogICAgZnVuY3Rpb24gc3BlY2lhbE11dGF0aW9uRm9yWWVhcnMobnVtYmVyKSB7CiAgICAgICAgc3dpdGNoIChsYXN0TnVtYmVyKG51bWJlcikpIHsKICAgICAgICBjYXNlIDE6CiAgICAgICAgY2FzZSAzOgogICAgICAgIGNhc2UgNDoKICAgICAgICBjYXNlIDU6CiAgICAgICAgY2FzZSA5OgogICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJyBibG9heic7CiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICcgdmxvYXonOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBsYXN0TnVtYmVyKG51bWJlcikgewogICAgICAgIGlmIChudW1iZXIgPiA5KSB7CiAgICAgICAgICAgIHJldHVybiBsYXN0TnVtYmVyKG51bWJlciAlIDEwKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIG51bWJlcjsKICAgIH0KCiAgICBmdW5jdGlvbiBtdXRhdGlvbih0ZXh0LCBudW1iZXIpIHsKICAgICAgICBpZiAobnVtYmVyID09PSAyKSB7CiAgICAgICAgICAgIHJldHVybiBzb2Z0TXV0YXRpb24odGV4dCk7CiAgICAgICAgfQogICAgICAgIHJldHVybiB0ZXh0OwogICAgfQoKICAgIGZ1bmN0aW9uIHNvZnRNdXRhdGlvbih0ZXh0KSB7CiAgICAgICAgdmFyIG11dGF0aW9uVGFibGUgPSB7CiAgICAgICAgICAgICdtJzogJ3YnLAogICAgICAgICAgICAnYic6ICd2JywKICAgICAgICAgICAgJ2QnOiAneicKICAgICAgICB9OwogICAgICAgIGlmIChtdXRhdGlvblRhYmxlW3RleHQuY2hhckF0KDApXSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgIHJldHVybiB0ZXh0OwogICAgICAgIH0KICAgICAgICByZXR1cm4gbXV0YXRpb25UYWJsZVt0ZXh0LmNoYXJBdCgwKV0gKyB0ZXh0LnN1YnN0cmluZygxKTsKICAgIH0KCiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgnYnInLCB7CiAgICAgICAgbW9udGhzIDogJ0dlbnZlcl9DXCdod2V2cmVyX01ldXJ6aF9FYnJlbF9NYWVfTWV6aGV2ZW5fR291ZXJlX0Vvc3RfR3dlbmdvbG9fSGVyZV9EdV9LZXJ6dScuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICdHZW5fQ1wnaHdlX01ldV9FYnJfTWFlX0V2ZV9Hb3VfRW9zX0d3ZV9IZXJfRHVfS2VyJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ1N1bF9MdW5fTWV1cnpoX01lcmNcJ2hlcl9ZYW91X0d3ZW5lcl9TYWRvcm4nLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICdTdWxfTHVuX01ldV9NZXJfWWFvX0d3ZV9TYWQnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNNaW4gOiAnU3VfTHVfTWVfTWVyX1lhX0d3X1NhJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdoW2VdbW0gQScsCiAgICAgICAgICAgIExUUyA6ICdoW2VdbW06c3MgQScsCiAgICAgICAgICAgIEwgOiAnREQvTU0vWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgW2Egdml6XSBNTU1NIFlZWVknLAogICAgICAgICAgICBMTEwgOiAnRCBbYSB2aXpdIE1NTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCwgRCBbYSB2aXpdIE1NTU0gWVlZWSBMVCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1tIaXppdiBkYV0gTFQnLAogICAgICAgICAgICBuZXh0RGF5IDogJ1tXYXJjXCdob2F6aCBkYV0gTFQnLAogICAgICAgICAgICBuZXh0V2VlayA6ICdkZGRkIFtkYV0gTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1tEZWNcJ2ggZGFdIExUJywKICAgICAgICAgICAgbGFzdFdlZWsgOiAnZGRkZCBbcGFzZXQgZGFdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ2EtYmVubiAlcycsCiAgICAgICAgICAgIHBhc3QgOiAnJXMgXCd6bycsCiAgICAgICAgICAgIHMgOiAndW4gbmViZXVkIHNlZ29uZGVubm\/DuScsCiAgICAgICAgICAgIG0gOiAndXIgdnVudXRlbm4nLAogICAgICAgICAgICBtbSA6IHJlbGF0aXZlVGltZVdpdGhNdXRhdGlvbiwKICAgICAgICAgICAgaCA6ICd1biBldXInLAogICAgICAgICAgICBoaCA6ICclZCBldXInLAogICAgICAgICAgICBkIDogJ3VuIGRldmV6aCcsCiAgICAgICAgICAgIGRkIDogcmVsYXRpdmVUaW1lV2l0aE11dGF0aW9uLAogICAgICAgICAgICBNIDogJ3VyIG1peicsCiAgICAgICAgICAgIE1NIDogcmVsYXRpdmVUaW1lV2l0aE11dGF0aW9uLAogICAgICAgICAgICB5IDogJ3VyIGJsb2F6JywKICAgICAgICAgICAgeXkgOiBzcGVjaWFsTXV0YXRpb25Gb3JZZWFycwogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbFBhcnNlOiAvXGR7MSwyfShhw7F8dmV0KS8sCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgdmFyIG91dHB1dCA9IChudW1iZXIgPT09IDEpID8gJ2HDsScgOiAndmV0JzsKICAgICAgICAgICAgcmV0dXJuIG51bWJlciArIG91dHB1dDsKICAgICAgICB9LAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA0ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiA0dGggaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKLy8gbW9tZW50LmpzIGxvY2FsZSBjb25maWd1cmF0aW9uCi8vIGxvY2FsZSA6IGJvc25pYW4gKGJzKQovLyBhdXRob3IgOiBOZWRpbSBDaG9saWNoIDogaHR0cHM6Ly9naXRodWIuY29tL2Zyb250eWFyZAovLyBiYXNlZCBvbiAoaHIpIHRyYW5zbGF0aW9uIGJ5IEJvamFuIE1hcmtvdmnEhwoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgZnVuY3Rpb24gdHJhbnNsYXRlKG51bWJlciwgd2l0aG91dFN1ZmZpeCwga2V5KSB7CiAgICAgICAgdmFyIHJlc3VsdCA9IG51bWJlciArICcgJzsKICAgICAgICBzd2l0Y2ggKGtleSkgewogICAgICAgIGNhc2UgJ20nOgogICAgICAgICAgICByZXR1cm4gd2l0aG91dFN1ZmZpeCA\/ICdqZWRuYSBtaW51dGEnIDogJ2plZG5lIG1pbnV0ZSc7CiAgICAgICAgY2FzZSAnbW0nOgogICAgICAgICAgICBpZiAobnVtYmVyID09PSAxKSB7CiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJ21pbnV0YSc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobnVtYmVyID09PSAyIHx8IG51bWJlciA9PT0gMyB8fCBudW1iZXIgPT09IDQpIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnbWludXRlJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnbWludXRhJzsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgICAgIGNhc2UgJ2gnOgogICAgICAgICAgICByZXR1cm4gd2l0aG91dFN1ZmZpeCA\/ICdqZWRhbiBzYXQnIDogJ2plZG5vZyBzYXRhJzsKICAgICAgICBjYXNlICdoaCc6CiAgICAgICAgICAgIGlmIChudW1iZXIgPT09IDEpIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnc2F0JzsKICAgICAgICAgICAgfSBlbHNlIGlmIChudW1iZXIgPT09IDIgfHwgbnVtYmVyID09PSAzIHx8IG51bWJlciA9PT0gNCkgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICdzYXRhJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnc2F0aSc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgICBjYXNlICdkZCc6CiAgICAgICAgICAgIGlmIChudW1iZXIgPT09IDEpIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnZGFuJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnZGFuYSc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgICBjYXNlICdNTSc6CiAgICAgICAgICAgIGlmIChudW1iZXIgPT09IDEpIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnbWplc2VjJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChudW1iZXIgPT09IDIgfHwgbnVtYmVyID09PSAzIHx8IG51bWJlciA9PT0gNCkgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICdtamVzZWNhJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnbWplc2VjaSc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgICBjYXNlICd5eSc6CiAgICAgICAgICAgIGlmIChudW1iZXIgPT09IDEpIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnZ29kaW5hJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChudW1iZXIgPT09IDIgfHwgbnVtYmVyID09PSAzIHx8IG51bWJlciA9PT0gNCkgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICdnb2RpbmUnOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICdnb2RpbmEnOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7CiAgICAgICAgfQogICAgfQoKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdicycsIHsKICAgICAgICBtb250aHMgOiAnamFudWFyX2ZlYnJ1YXJfbWFydF9hcHJpbF9tYWpfanVuaV9qdWxpX2F1Z3VzdF9zZXB0ZW1iYXJfb2t0b2Jhcl9ub3ZlbWJhcl9kZWNlbWJhcicuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICdqYW4uX2ZlYi5fbWFyLl9hcHIuX21hai5fanVuLl9qdWwuX2F1Zy5fc2VwLl9va3QuX25vdi5fZGVjLicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICduZWRqZWxqYV9wb25lZGplbGpha191dG9yYWtfc3JpamVkYV\/EjWV0dnJ0YWtfcGV0YWtfc3Vib3RhJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAnbmVkLl9wb24uX3V0by5fc3JpLl\/EjWV0Ll9wZXQuX3N1Yi4nLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNNaW4gOiAnbmVfcG9fdXRfc3JfxI1lX3BlX3N1Jy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdIOm1tJywKICAgICAgICAgICAgTFRTIDogJ0xUOnNzJywKICAgICAgICAgICAgTCA6ICdERC4gTU0uIFlZWVknLAogICAgICAgICAgICBMTCA6ICdELiBNTU1NIFlZWVknLAogICAgICAgICAgICBMTEwgOiAnRC4gTU1NTSBZWVlZIExUJywKICAgICAgICAgICAgTExMTCA6ICdkZGRkLCBELiBNTU1NIFlZWVkgTFQnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSAgOiAnW2RhbmFzIHVdIExUJywKICAgICAgICAgICAgbmV4dERheSAgOiAnW3N1dHJhIHVdIExUJywKCiAgICAgICAgICAgIG5leHRXZWVrIDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgc3dpdGNoICh0aGlzLmRheSgpKSB7CiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbdV0gW25lZGplbGp1XSBbdV0gTFQnOwogICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW3VdIFtzcmlqZWR1XSBbdV0gTFQnOwogICAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW3VdIFtzdWJvdHVdIFt1XSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbdV0gZGRkZCBbdV0gTFQnOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBsYXN0RGF5ICA6ICdbanXEjWVyIHVdIExUJywKICAgICAgICAgICAgbGFzdFdlZWsgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKHRoaXMuZGF5KCkpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1twcm\/FoWx1XSBkZGRkIFt1XSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbcHJvxaFsZV0gW3N1Ym90ZV0gW3VdIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1twcm\/FoWxpXSBkZGRkIFt1XSBMVCc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICd6YSAlcycsCiAgICAgICAgICAgIHBhc3QgICA6ICdwcmlqZSAlcycsCiAgICAgICAgICAgIHMgICAgICA6ICdwYXIgc2VrdW5kaScsCiAgICAgICAgICAgIG0gICAgICA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgbW0gICAgIDogdHJhbnNsYXRlLAogICAgICAgICAgICBoICAgICAgOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIGhoICAgICA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgZCAgICAgIDogJ2RhbicsCiAgICAgICAgICAgIGRkICAgICA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgTSAgICAgIDogJ21qZXNlYycsCiAgICAgICAgICAgIE1NICAgICA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgeSAgICAgIDogJ2dvZGludScsCiAgICAgICAgICAgIHl5ICAgICA6IHRyYW5zbGF0ZQogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbFBhcnNlOiAvXGR7MSwyfVwuLywKICAgICAgICBvcmRpbmFsIDogJyVkLicsCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDcgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDFzdCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogY2F0YWxhbiAoY2EpCi8vIGF1dGhvciA6IEp1YW4gRy4gSHVydGFkbyA6IGh0dHBzOi8vZ2l0aHViLmNvbS9qdWFuZ2h1cnRhZG8KCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdjYScsIHsKICAgICAgICBtb250aHMgOiAnZ2VuZXJfZmVicmVyX21hcsOnX2FicmlsX21haWdfanVueV9qdWxpb2xfYWdvc3Rfc2V0ZW1icmVfb2N0dWJyZV9ub3ZlbWJyZV9kZXNlbWJyZScuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICdnZW4uX2ZlYnIuX21hci5fYWJyLl9tYWkuX2p1bi5fanVsLl9hZy5fc2V0Ll9vY3QuX25vdi5fZGVzLicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICdkaXVtZW5nZV9kaWxsdW5zX2RpbWFydHNfZGltZWNyZXNfZGlqb3VzX2RpdmVuZHJlc19kaXNzYWJ0ZScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ2RnLl9kbC5fZHQuX2RjLl9kai5fZHYuX2RzLicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICdEZ19EbF9EdF9EY19Eal9Edl9Ecycuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnSDptbScsCiAgICAgICAgICAgIExUUyA6ICdMVDpzcycsCiAgICAgICAgICAgIEwgOiAnREQvTU0vWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZIExUJywKICAgICAgICAgICAgTExMTCA6ICdkZGRkIEQgTU1NTSBZWVlZIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ1thdnVpIGEgJyArICgodGhpcy5ob3VycygpICE9PSAxKSA\/ICdsZXMnIDogJ2xhJykgKyAnXSBMVCc7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG5leHREYXkgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ1tkZW3DoCBhICcgKyAoKHRoaXMuaG91cnMoKSAhPT0gMSkgPyAnbGVzJyA6ICdsYScpICsgJ10gTFQnOwogICAgICAgICAgICB9LAogICAgICAgICAgICBuZXh0V2VlayA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAnZGRkZCBbYSAnICsgKCh0aGlzLmhvdXJzKCkgIT09IDEpID8gJ2xlcycgOiAnbGEnKSArICddIExUJzsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbGFzdERheSA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAnW2FoaXIgYSAnICsgKCh0aGlzLmhvdXJzKCkgIT09IDEpID8gJ2xlcycgOiAnbGEnKSArICddIExUJzsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbGFzdFdlZWsgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ1tlbF0gZGRkZCBbcGFzc2F0IGEgJyArICgodGhpcy5ob3VycygpICE9PSAxKSA\/ICdsZXMnIDogJ2xhJykgKyAnXSBMVCc7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICdlbiAlcycsCiAgICAgICAgICAgIHBhc3QgOiAnZmEgJXMnLAogICAgICAgICAgICBzIDogJ3VucyBzZWdvbnMnLAogICAgICAgICAgICBtIDogJ3VuIG1pbnV0JywKICAgICAgICAgICAgbW0gOiAnJWQgbWludXRzJywKICAgICAgICAgICAgaCA6ICd1bmEgaG9yYScsCiAgICAgICAgICAgIGhoIDogJyVkIGhvcmVzJywKICAgICAgICAgICAgZCA6ICd1biBkaWEnLAogICAgICAgICAgICBkZCA6ICclZCBkaWVzJywKICAgICAgICAgICAgTSA6ICd1biBtZXMnLAogICAgICAgICAgICBNTSA6ICclZCBtZXNvcycsCiAgICAgICAgICAgIHkgOiAndW4gYW55JywKICAgICAgICAgICAgeXkgOiAnJWQgYW55cycKICAgICAgICB9LAogICAgICAgIG9yZGluYWxQYXJzZTogL1xkezEsMn0ocnxufHR8w6h8YSkvLAogICAgICAgIG9yZGluYWwgOiBmdW5jdGlvbiAobnVtYmVyLCBwZXJpb2QpIHsKICAgICAgICAgICAgdmFyIG91dHB1dCA9IChudW1iZXIgPT09IDEpID8gJ3InIDoKICAgICAgICAgICAgICAgIChudW1iZXIgPT09IDIpID8gJ24nIDoKICAgICAgICAgICAgICAgIChudW1iZXIgPT09IDMpID8gJ3InIDoKICAgICAgICAgICAgICAgIChudW1iZXIgPT09IDQpID8gJ3QnIDogJ8OoJzsKICAgICAgICAgICAgaWYgKHBlcmlvZCA9PT0gJ3cnIHx8IHBlcmlvZCA9PT0gJ1cnKSB7CiAgICAgICAgICAgICAgICBvdXRwdXQgPSAnYSc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIG51bWJlciArIG91dHB1dDsKICAgICAgICB9LAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA0ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiA0dGggaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKLy8gbW9tZW50LmpzIGxvY2FsZSBjb25maWd1cmF0aW9uCi8vIGxvY2FsZSA6IGN6ZWNoIChjcykKLy8gYXV0aG9yIDogcGV0cmJlbGEgOiBodHRwczovL2dpdGh1Yi5jb20vcGV0cmJlbGEKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHZhciBtb250aHMgPSAnbGVkZW5fw7pub3JfYsWZZXplbl9kdWJlbl9rdsSbdGVuX8SNZXJ2ZW5fxI1lcnZlbmVjX3NycGVuX3rDocWZw61fxZnDrWplbl9saXN0b3BhZF9wcm9zaW5lYycuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA9ICdsZWRfw7pub19ixZllX2R1Yl9rdsSbX8SNdm5fxI12Y19zcnBfesOhxZlfxZnDrWpfbGlzX3Bybycuc3BsaXQoJ18nKTsKCiAgICBmdW5jdGlvbiBwbHVyYWwobikgewogICAgICAgIHJldHVybiAobiA+IDEpICYmIChuIDwgNSkgJiYgKH5+KG4gLyAxMCkgIT09IDEpOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zbGF0ZShudW1iZXIsIHdpdGhvdXRTdWZmaXgsIGtleSwgaXNGdXR1cmUpIHsKICAgICAgICB2YXIgcmVzdWx0ID0gbnVtYmVyICsgJyAnOwogICAgICAgIHN3aXRjaCAoa2V5KSB7CiAgICAgICAgY2FzZSAncyc6ICAvLyBhIGZldyBzZWNvbmRzIC8gaW4gYSBmZXcgc2Vjb25kcyAvIGEgZmV3IHNlY29uZHMgYWdvCiAgICAgICAgICAgIHJldHVybiAod2l0aG91dFN1ZmZpeCB8fCBpc0Z1dHVyZSkgPyAncMOhciBzZWt1bmQnIDogJ3DDoXIgc2VrdW5kYW1pJzsKICAgICAgICBjYXNlICdtJzogIC8vIGEgbWludXRlIC8gaW4gYSBtaW51dGUgLyBhIG1pbnV0ZSBhZ28KICAgICAgICAgICAgcmV0dXJuIHdpdGhvdXRTdWZmaXggPyAnbWludXRhJyA6IChpc0Z1dHVyZSA\/ICdtaW51dHUnIDogJ21pbnV0b3UnKTsKICAgICAgICBjYXNlICdtbSc6IC8vIDkgbWludXRlcyAvIGluIDkgbWludXRlcyAvIDkgbWludXRlcyBhZ28KICAgICAgICAgICAgaWYgKHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUpIHsKICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAocGx1cmFsKG51bWJlcikgPyAnbWludXR5JyA6ICdtaW51dCcpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArICdtaW51dGFtaSc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnaCc6ICAvLyBhbiBob3VyIC8gaW4gYW4gaG91ciAvIGFuIGhvdXIgYWdvCiAgICAgICAgICAgIHJldHVybiB3aXRob3V0U3VmZml4ID8gJ2hvZGluYScgOiAoaXNGdXR1cmUgPyAnaG9kaW51JyA6ICdob2Rpbm91Jyk7CiAgICAgICAgY2FzZSAnaGgnOiAvLyA5IGhvdXJzIC8gaW4gOSBob3VycyAvIDkgaG91cnMgYWdvCiAgICAgICAgICAgIGlmICh3aXRob3V0U3VmZml4IHx8IGlzRnV0dXJlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKHBsdXJhbChudW1iZXIpID8gJ2hvZGlueScgOiAnaG9kaW4nKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAnaG9kaW5hbWknOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ2QnOiAgLy8gYSBkYXkgLyBpbiBhIGRheSAvIGEgZGF5IGFnbwogICAgICAgICAgICByZXR1cm4gKHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUpID8gJ2RlbicgOiAnZG5lbSc7CiAgICAgICAgY2FzZSAnZGQnOiAvLyA5IGRheXMgLyBpbiA5IGRheXMgLyA5IGRheXMgYWdvCiAgICAgICAgICAgIGlmICh3aXRob3V0U3VmZml4IHx8IGlzRnV0dXJlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKHBsdXJhbChudW1iZXIpID8gJ2RueScgOiAnZG7DrScpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArICdkbnknOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ00nOiAgLy8gYSBtb250aCAvIGluIGEgbW9udGggLyBhIG1vbnRoIGFnbwogICAgICAgICAgICByZXR1cm4gKHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUpID8gJ23Em3PDrWMnIDogJ23Em3PDrWNlbSc7CiAgICAgICAgY2FzZSAnTU0nOiAvLyA5IG1vbnRocyAvIGluIDkgbW9udGhzIC8gOSBtb250aHMgYWdvCiAgICAgICAgICAgIGlmICh3aXRob3V0U3VmZml4IHx8IGlzRnV0dXJlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKHBsdXJhbChudW1iZXIpID8gJ23Em3PDrWNlJyA6ICdtxJtzw61jxa8nKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAnbcSbc8OtY2knOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ3knOiAgLy8gYSB5ZWFyIC8gaW4gYSB5ZWFyIC8gYSB5ZWFyIGFnbwogICAgICAgICAgICByZXR1cm4gKHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUpID8gJ3JvaycgOiAncm9rZW0nOwogICAgICAgIGNhc2UgJ3l5JzogLy8gOSB5ZWFycyAvIGluIDkgeWVhcnMgLyA5IHllYXJzIGFnbwogICAgICAgICAgICBpZiAod2l0aG91dFN1ZmZpeCB8fCBpc0Z1dHVyZSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArIChwbHVyYWwobnVtYmVyKSA\/ICdyb2t5JyA6ICdsZXQnKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAnbGV0eSc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgfQoKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdjcycsIHsKICAgICAgICBtb250aHMgOiBtb250aHMsCiAgICAgICAgbW9udGhzU2hvcnQgOiBtb250aHNTaG9ydCwKICAgICAgICBtb250aHNQYXJzZSA6IChmdW5jdGlvbiAobW9udGhzLCBtb250aHNTaG9ydCkgewogICAgICAgICAgICB2YXIgaSwgX21vbnRoc1BhcnNlID0gW107CiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCAxMjsgaSsrKSB7CiAgICAgICAgICAgICAgICAvLyB1c2UgY3VzdG9tIHBhcnNlciB0byBzb2x2ZSBwcm9ibGVtIHdpdGggSnVseSAoxI1lcnZlbmVjKQogICAgICAgICAgICAgICAgX21vbnRoc1BhcnNlW2ldID0gbmV3IFJlZ0V4cCgnXicgKyBtb250aHNbaV0gKyAnJHxeJyArIG1vbnRoc1Nob3J0W2ldICsgJyQnLCAnaScpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBfbW9udGhzUGFyc2U7CiAgICAgICAgfShtb250aHMsIG1vbnRoc1Nob3J0KSksCiAgICAgICAgd2Vla2RheXMgOiAnbmVkxJtsZV9wb25kxJtsw61fw7p0ZXLDvV9zdMWZZWRhX8SNdHZydGVrX3DDoXRla19zb2JvdGEnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICduZV9wb1\/DunRfc3RfxI10X3DDoV9zbycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICduZV9wb1\/DunRfc3RfxI10X3DDoV9zbycuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQ6ICdIOm1tJywKICAgICAgICAgICAgTFRTIDogJ0xUOnNzJywKICAgICAgICAgICAgTCA6ICdERC5NTS5ZWVlZJywKICAgICAgICAgICAgTEwgOiAnRC4gTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QuIE1NTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCBELiBNTU1NIFlZWVkgTFQnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheTogJ1tkbmVzIHZdIExUJywKICAgICAgICAgICAgbmV4dERheTogJ1t6w610cmEgdl0gTFQnLAogICAgICAgICAgICBuZXh0V2VlazogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgc3dpdGNoICh0aGlzLmRheSgpKSB7CiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbdiBuZWTEm2xpIHZdIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1t2XSBkZGRkIFt2XSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbdmUgc3TFmWVkdSB2XSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbdmUgxI10dnJ0ZWsgdl0gTFQnOwogICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW3YgcMOhdGVrIHZdIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1t2IHNvYm90dSB2XSBMVCc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhc3REYXk6ICdbdsSNZXJhIHZdIExUJywKICAgICAgICAgICAgbGFzdFdlZWs6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAodGhpcy5kYXkoKSkgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW21pbnVsb3UgbmVkxJtsaSB2XSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbbWludWzDqV0gZGRkZCBbdl0gTFQnOwogICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW21pbnVsb3Ugc3TFmWVkdSB2XSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbbWludWzDvV0gZGRkZCBbdl0gTFQnOwogICAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW21pbnVsb3Ugc29ib3R1IHZdIExUJzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2FtZUVsc2U6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAnemEgJXMnLAogICAgICAgICAgICBwYXN0IDogJ3DFmWVkICVzJywKICAgICAgICAgICAgcyA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgbSA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgbW0gOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIGggOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIGhoIDogdHJhbnNsYXRlLAogICAgICAgICAgICBkIDogdHJhbnNsYXRlLAogICAgICAgICAgICBkZCA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgTSA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgTU0gOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIHkgOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIHl5IDogdHJhbnNsYXRlCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsUGFyc2UgOiAvXGR7MSwyfVwuLywKICAgICAgICBvcmRpbmFsIDogJyVkLicsCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogY2h1dmFzaCAoY3YpCi8vIGF1dGhvciA6IEFuYXRvbHkgTWlyb25vdiA6IGh0dHBzOi8vZ2l0aHViLmNvbS9taXJvbnRvbGkKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdjdicsIHsKICAgICAgICBtb250aHMgOiAn0LrEg9GA0LvQsNGHX9C90LDRgMSD0YFf0L\/Rg9GIX9Cw0LrQsF\/QvNCw0Llfw6fEldGA0YLQvNC1X9GD0YLEg1\/Dp9GD0YDQu9CwX9Cw0LLEg9C9X9GO0L\/QsF\/Rh9Oz0Lpf0YDQsNGI0YLQsNCyJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJ9C6xIPRgF\/QvdCw0YBf0L\/Rg9GIX9Cw0LrQsF\/QvNCw0Llfw6fEldGAX9GD0YLEg1\/Dp9GD0YBf0LDQsl\/RjtC\/0LBf0YfTs9C6X9GA0LDRiCcuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICfQstGL0YDRgdCw0YDQvdC40LrRg9C9X9GC0YPQvdGC0LjQutGD0L1f0YvRgtC70LDRgNC40LrRg9C9X9GO0L3QutGD0L1f0LrElcOn0L3QtdGA0L3QuNC60YPQvV\/RjdGA0L3QtdC60YPQvV\/RiMSD0LzQsNGC0LrRg9C9Jy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAn0LLRi9GAX9GC0YPQvV\/Ri9GC0Ltf0Y7QvV\/QusSVw6df0Y3RgNC9X9GIxIPQvCcuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICfQstGAX9GC0L1f0YvRgl\/RjtC9X9C6w6df0Y3RgF\/RiNC8Jy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdISDptbScsCiAgICAgICAgICAgIExUUyA6ICdMVDpzcycsCiAgICAgICAgICAgIEwgOiAnREQtTU0tWVlZWScsCiAgICAgICAgICAgIExMIDogJ1lZWVkgW8On0YPQu9GF0LhdIE1NTU0gW9GD0LnEg9GFxJXQvV0gRFst0LzEldGIxJVdJywKICAgICAgICAgICAgTExMIDogJ1lZWVkgW8On0YPQu9GF0LhdIE1NTU0gW9GD0LnEg9GFxJXQvV0gRFst0LzEldGIxJVdLCBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCwgWVlZWSBbw6fRg9C70YXQuF0gTU1NTSBb0YPQucSD0YXEldC9XSBEWy3QvMSV0YjElV0sIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICdb0J\/QsNGP0L1dIExUIFvRgdC10YXQtdGC0YDQtV0nLAogICAgICAgICAgICBuZXh0RGF5OiAnW9Cr0YDQsNC9XSBMVCBb0YHQtdGF0LXRgtGA0LVdJywKICAgICAgICAgICAgbGFzdERheTogJ1vElNC90LXRgF0gTFQgW9GB0LXRhdC10YLRgNC1XScsCiAgICAgICAgICAgIG5leHRXZWVrOiAnW8OH0LjRgtC10YFdIGRkZGQgTFQgW9GB0LXRhdC10YLRgNC1XScsCiAgICAgICAgICAgIGxhc3RXZWVrOiAnW9CY0YDRgtC9xJVdIGRkZGQgTFQgW9GB0LXRhdC10YLRgNC1XScsCiAgICAgICAgICAgIHNhbWVFbHNlOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogZnVuY3Rpb24gKG91dHB1dCkgewogICAgICAgICAgICAgICAgdmFyIGFmZml4ID0gL9GB0LXRhdC10YIkL2kuZXhlYyhvdXRwdXQpID8gJ9GA0LXQvScgOiAvw6fRg9C7JC9pLmV4ZWMob3V0cHV0KSA\/ICfRgtCw0L0nIDogJ9GA0LDQvSc7CiAgICAgICAgICAgICAgICByZXR1cm4gb3V0cHV0ICsgYWZmaXg7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHBhc3QgOiAnJXMg0LrQsNGP0LvQu9CwJywKICAgICAgICAgICAgcyA6ICfQv8SV0YAt0LjQuiDDp9C10LrQutGD0L3RgicsCiAgICAgICAgICAgIG0gOiAn0L\/EldGAINC80LjQvdGD0YInLAogICAgICAgICAgICBtbSA6ICclZCDQvNC40L3Rg9GCJywKICAgICAgICAgICAgaCA6ICfQv8SV0YAg0YHQtdGF0LXRgicsCiAgICAgICAgICAgIGhoIDogJyVkINGB0LXRhdC10YInLAogICAgICAgICAgICBkIDogJ9C\/xJXRgCDQutGD0L0nLAogICAgICAgICAgICBkZCA6ICclZCDQutGD0L0nLAogICAgICAgICAgICBNIDogJ9C\\/Pgl\/Ops61zrLPgc6\/z4XOrM+BzrnOv8+CX86czqzPgc+EzrnOv8+CX86Rz4DPgc6vzrvOuc6\/z4JfzpzOrM65zr\/Pgl\/Omc6\/z43Ovc65zr\/Pgl\/Omc6\/z43Ou865zr\/Pgl\/Okc+NzrPOv8+Fz4PPhM6\/z4JfzqPOtc+Az4TOrc68zrLPgc65zr\/Pgl\/On866z4TPjs6yz4HOuc6\/z4Jfzp3Ov86tzrzOss+BzrnOv8+CX86UzrXOus6tzrzOss+BzrnOv8+CJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc0dlbml0aXZlRWwgOiAnzpnOsc69zr\/Phc6xz4HOr86\/z4VfzqbOtc6yz4HOv8+FzrHPgc6vzr\/PhV\/OnM6xz4HPhM6vzr\/PhV\/Okc+Az4HOuc67zq\/Ov8+FX86czrHOkM6\/z4VfzpnOv8+Fzr3Or86\/z4VfzpnOv8+FzrvOr86\/z4VfzpHPhc6zzr\/Pjc+Dz4TOv8+FX86jzrXPgM+EzrXOvM6yz4HOr86\/z4Vfzp\/Ous+Ez4nOss+Bzq\/Ov8+FX86dzr\/Otc68zrLPgc6vzr\/PhV\/OlM61zrrOtc68zrLPgc6vzr\/PhScuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHMgOiBmdW5jdGlvbiAobW9tZW50VG9Gb3JtYXQsIGZvcm1hdCkgewogICAgICAgICAgICBpZiAoL0QvLnRlc3QoZm9ybWF0LnN1YnN0cmluZygwLCBmb3JtYXQuaW5kZXhPZignTU1NTScpKSkpIHsgLy8gaWYgdGhlcmUgaXMgYSBkYXkgbnVtYmVyIGJlZm9yZSAnTU1NTScKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9tb250aHNHZW5pdGl2ZUVsW21vbWVudFRvRm9ybWF0Lm1vbnRoKCldOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX21vbnRoc05vbWluYXRpdmVFbFttb21lbnRUb0Zvcm1hdC5tb250aCgpXTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgbW9udGhzU2hvcnQgOiAnzpnOsc69X86mzrXOsl\/OnM6xz4FfzpHPgM+BX86czrHPil\/Omc6\/z4XOvV\/Omc6\/z4XOu1\/Okc+FzrNfzqPOtc+AX86fzrrPhF\/Onc6\/zrVfzpTOtc66Jy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ86az4XPgc65zrHOus6uX86UzrXPhc+Ezq3Pgc6xX86kz4HOr8+EzrdfzqTOtc+EzqzPgc+EzrdfzqDOrc68z4DPhM63X86gzrHPgc6xz4POus61z4XOrl\/Oo86szrLOss6xz4TOvycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ86az4XPgV\/OlM61z4VfzqTPgc65X86kzrXPhF\/OoM61zrxfzqDOsc+BX86jzrHOsicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICfOms+FX86UzrVfzqTPgV\/OpM61X86gzrVfzqDOsV\/Oo86xJy5zcGxpdCgnXycpLAogICAgICAgIG1lcmlkaWVtIDogZnVuY3Rpb24gKGhvdXJzLCBtaW51dGVzLCBpc0xvd2VyKSB7CiAgICAgICAgICAgIGlmIChob3VycyA+IDExKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gaXNMb3dlciA\/ICfOvM68JyA6ICfOnM6cJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiBpc0xvd2VyID8gJ8+AzrwnIDogJ86gzpwnOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBpc1BNIDogZnVuY3Rpb24gKGlucHV0KSB7CiAgICAgICAgICAgIHJldHVybiAoKGlucHV0ICsgJycpLnRvTG93ZXJDYXNlKClbMF0gPT09ICfOvCcpOwogICAgICAgIH0sCiAgICAgICAgbWVyaWRpZW1QYXJzZSA6IC9bzqDOnF1cLj\/OnD9cLj8vaSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnaDptbSBBJywKICAgICAgICAgICAgTFRTIDogJ2g6bW06c3MgQScsCiAgICAgICAgICAgIEwgOiAnREQvTU0vWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZIExUJywKICAgICAgICAgICAgTExMTCA6ICdkZGRkLCBEIE1NTU0gWVlZWSBMVCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyRWwgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW86jzq7OvM61z4HOsSB7fV0gTFQnLAogICAgICAgICAgICBuZXh0RGF5IDogJ1vOkc+Nz4HOuc6\/IHt9XSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgW3t9XSBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW86nzrjOtc+CIHt9XSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrIDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgc3dpdGNoICh0aGlzLmRheSgpKSB7CiAgICAgICAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1vPhM6\/IM+Az4HOv863zrPOv8+NzrzOtc69zr9dIGRkZGQgW3t9XSBMVCc7CiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbz4TOt869IM+Az4HOv863zrPOv8+NzrzOtc69zrddIGRkZGQgW3t9XSBMVCc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IGZ1bmN0aW9uIChrZXksIG1vbSkgewogICAgICAgICAgICB2YXIgb3V0cHV0ID0gdGhpcy5fY2FsZW5kYXJFbFtrZXldLAogICAgICAgICAgICAgICAgaG91cnMgPSBtb20gJiYgbW9tLmhvdXJzKCk7CgogICAgICAgICAgICBpZiAodHlwZW9mIG91dHB1dCA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgICAgICAgICAgb3V0cHV0ID0gb3V0cHV0LmFwcGx5KG1vbSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBvdXRwdXQucmVwbGFjZSgne30nLCAoaG91cnMgJSAxMiA9PT0gMSA\/ICfPg8+EzrcnIDogJ8+Dz4TOuc+CJykpOwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAnz4POtSAlcycsCiAgICAgICAgICAgIHBhc3QgOiAnJXMgz4DPgc65zr0nLAogICAgICAgICAgICBzIDogJ867zq\/Os86xIM60zrXPhc+EzrXPgc+MzrvOtc+Az4TOsScsCiAgICAgICAgICAgIG0gOiAnzq3Ovc6xIM67zrXPgM+Ez4wnLAogICAgICAgICAgICBtbSA6ICclZCDOu861z4DPhM6sJywKICAgICAgICAgICAgaCA6ICfOvM6vzrEgz47Pgc6xJywKICAgICAgICAgICAgaGggOiAnJWQgz47Pgc61z4InLAogICAgICAgICAgICBkIDogJ868zq\/OsSDOvM6tz4HOsScsCiAgICAgICAgICAgIGRkIDogJyVkIM68zq3Pgc61z4InLAogICAgICAgICAgICBNIDogJ86tzr3Osc+CIM68zq7Ovc6xz4InLAogICAgICAgICAgICBNTSA6ICclZCDOvM6uzr3Otc+CJywKICAgICAgICAgICAgeSA6ICfOrc69zrHPgiDPh8+Bz4zOvc6\/z4InLAogICAgICAgICAgICB5eSA6ICclZCDPh8+Bz4zOvc65zrEnCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsUGFyc2U6IC9cZHsxLDJ9zrcvLAogICAgICAgIG9yZGluYWw6ICclZM63JywKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNCAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gNHN0IGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBhdXN0cmFsaWFuIGVuZ2xpc2ggKGVuLWF1KQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ2VuLWF1JywgewogICAgICAgIG1vbnRocyA6ICdKYW51YXJ5X0ZlYnJ1YXJ5X01hcmNoX0FwcmlsX01heV9KdW5lX0p1bHlfQXVndXN0X1NlcHRlbWJlcl9PY3RvYmVyX05vdmVtYmVyX0RlY2VtYmVyJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJ0phbl9GZWJfTWFyX0Fwcl9NYXlfSnVuX0p1bF9BdWdfU2VwX09jdF9Ob3ZfRGVjJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ1N1bmRheV9Nb25kYXlfVHVlc2RheV9XZWRuZXNkYXlfVGh1cnNkYXlfRnJpZGF5X1NhdHVyZGF5Jy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAnU3VuX01vbl9UdWVfV2VkX1RodV9GcmlfU2F0Jy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ1N1X01vX1R1X1dlX1RoX0ZyX1NhJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdoOm1tIEEnLAogICAgICAgICAgICBMVFMgOiAnaDptbTpzcyBBJywKICAgICAgICAgICAgTCA6ICdERC9NTS9ZWVlZJywKICAgICAgICAgICAgTEwgOiAnRCBNTU1NIFlZWVknLAogICAgICAgICAgICBMTEwgOiAnRCBNTU1NIFlZWVkgTFQnLAogICAgICAgICAgICBMTExMIDogJ2RkZGQsIEQgTU1NTSBZWVlZIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW1RvZGF5IGF0XSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW1RvbW9ycm93IGF0XSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgW2F0XSBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW1llc3RlcmRheSBhdF0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdbTGFzdF0gZGRkZCBbYXRdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ2luICVzJywKICAgICAgICAgICAgcGFzdCA6ICclcyBhZ28nLAogICAgICAgICAgICBzIDogJ2EgZmV3IHNlY29uZHMnLAogICAgICAgICAgICBtIDogJ2EgbWludXRlJywKICAgICAgICAgICAgbW0gOiAnJWQgbWludXRlcycsCiAgICAgICAgICAgIGggOiAnYW4gaG91cicsCiAgICAgICAgICAgIGhoIDogJyVkIGhvdXJzJywKICAgICAgICAgICAgZCA6ICdhIGRheScsCiAgICAgICAgICAgIGRkIDogJyVkIGRheXMnLAogICAgICAgICAgICBNIDogJ2EgbW9udGgnLAogICAgICAgICAgICBNTSA6ICclZCBtb250aHMnLAogICAgICAgICAgICB5IDogJ2EgeWVhcicsCiAgICAgICAgICAgIHl5IDogJyVkIHllYXJzJwogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbFBhcnNlOiAvXGR7MSwyfShzdHxuZHxyZHx0aCkvLAogICAgICAgIG9yZGluYWwgOiBmdW5jdGlvbiAobnVtYmVyKSB7CiAgICAgICAgICAgIHZhciBiID0gbnVtYmVyICUgMTAsCiAgICAgICAgICAgICAgICBvdXRwdXQgPSAofn4obnVtYmVyICUgMTAwIC8gMTApID09PSAxKSA\/ICd0aCcgOgogICAgICAgICAgICAgICAgKGIgPT09IDEpID8gJ3N0JyA6CiAgICAgICAgICAgICAgICAoYiA9PT0gMikgPyAnbmQnIDoKICAgICAgICAgICAgICAgIChiID09PSAzKSA\/ICdyZCcgOiAndGgnOwogICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgb3V0cHV0OwogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogY2FuYWRpYW4gZW5nbGlzaCAoZW4tY2EpCi8vIGF1dGhvciA6IEpvbmF0aGFuIEFib3VyYmloIDogaHR0cHM6Ly9naXRodWIuY29tL2pvbmJjYQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ2VuLWNhJywgewogICAgICAgIG1vbnRocyA6ICdKYW51YXJ5X0ZlYnJ1YXJ5X01hcmNoX0FwcmlsX01heV9KdW5lX0p1bHlfQXVndXN0X1NlcHRlbWJlcl9PY3RvYmVyX05vdmVtYmVyX0RlY2VtYmVyJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJ0phbl9GZWJfTWFyX0Fwcl9NYXlfSnVuX0p1bF9BdWdfU2VwX09jdF9Ob3ZfRGVjJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ1N1bmRheV9Nb25kYXlfVHVlc2RheV9XZWRuZXNkYXlfVGh1cnNkYXlfRnJpZGF5X1NhdHVyZGF5Jy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAnU3VuX01vbl9UdWVfV2VkX1RodV9GcmlfU2F0Jy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ1N1X01vX1R1X1dlX1RoX0ZyX1NhJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdoOm1tIEEnLAogICAgICAgICAgICBMVFMgOiAnaDptbTpzcyBBJywKICAgICAgICAgICAgTCA6ICdZWVlZLU1NLUREJywKICAgICAgICAgICAgTEwgOiAnRCBNTU1NLCBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSwgWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCwgRCBNTU1NLCBZWVlZIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW1RvZGF5IGF0XSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW1RvbW9ycm93IGF0XSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgW2F0XSBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW1llc3RlcmRheSBhdF0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdbTGFzdF0gZGRkZCBbYXRdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ2luICVzJywKICAgICAgICAgICAgcGFzdCA6ICclcyBhZ28nLAogICAgICAgICAgICBzIDogJ2EgZmV3IHNlY29uZHMnLAogICAgICAgICAgICBtIDogJ2EgbWludXRlJywKICAgICAgICAgICAgbW0gOiAnJWQgbWludXRlcycsCiAgICAgICAgICAgIGggOiAnYW4gaG91cicsCiAgICAgICAgICAgIGhoIDogJyVkIGhvdXJzJywKICAgICAgICAgICAgZCA6ICdhIGRheScsCiAgICAgICAgICAgIGRkIDogJyVkIGRheXMnLAogICAgICAgICAgICBNIDogJ2EgbW9udGgnLAogICAgICAgICAgICBNTSA6ICclZCBtb250aHMnLAogICAgICAgICAgICB5IDogJ2EgeWVhcicsCiAgICAgICAgICAgIHl5IDogJyVkIHllYXJzJwogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbFBhcnNlOiAvXGR7MSwyfShzdHxuZHxyZHx0aCkvLAogICAgICAgIG9yZGluYWwgOiBmdW5jdGlvbiAobnVtYmVyKSB7CiAgICAgICAgICAgIHZhciBiID0gbnVtYmVyICUgMTAsCiAgICAgICAgICAgICAgICBvdXRwdXQgPSAofn4obnVtYmVyICUgMTAwIC8gMTApID09PSAxKSA\/ICd0aCcgOgogICAgICAgICAgICAgICAgKGIgPT09IDEpID8gJ3N0JyA6CiAgICAgICAgICAgICAgICAoYiA9PT0gMikgPyAnbmQnIDoKICAgICAgICAgICAgICAgIChiID09PSAzKSA\/ICdyZCcgOiAndGgnOwogICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgb3V0cHV0OwogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBncmVhdCBicml0YWluIGVuZ2xpc2ggKGVuLWdiKQovLyBhdXRob3IgOiBDaHJpcyBHZWRyaW0gOiBodHRwczovL2dpdGh1Yi5jb20vY2hyaXNnZWRyaW0KCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdlbi1nYicsIHsKICAgICAgICBtb250aHMgOiAnSmFudWFyeV9GZWJydWFyeV9NYXJjaF9BcHJpbF9NYXlfSnVuZV9KdWx5X0F1Z3VzdF9TZXB0ZW1iZXJfT2N0b2Jlcl9Ob3ZlbWJlcl9EZWNlbWJlcicuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICdKYW5fRmViX01hcl9BcHJfTWF5X0p1bl9KdWxfQXVnX1NlcF9PY3RfTm92X0RlYycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICdTdW5kYXlfTW9uZGF5X1R1ZXNkYXlfV2VkbmVzZGF5X1RodXJzZGF5X0ZyaWRheV9TYXR1cmRheScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ1N1bl9Nb25fVHVlX1dlZF9UaHVfRnJpX1NhdCcuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICdTdV9Nb19UdV9XZV9UaF9Gcl9TYScuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnSEg6bW0nLAogICAgICAgICAgICBMVFMgOiAnSEg6bW06c3MnLAogICAgICAgICAgICBMIDogJ0REL01NL1lZWVknLAogICAgICAgICAgICBMTCA6ICdEIE1NTU0gWVlZWScsCiAgICAgICAgICAgIExMTCA6ICdEIE1NTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCwgRCBNTU1NIFlZWVkgTFQnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6ICdbVG9kYXkgYXRdIExUJywKICAgICAgICAgICAgbmV4dERheSA6ICdbVG9tb3Jyb3cgYXRdIExUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnZGRkZCBbYXRdIExUJywKICAgICAgICAgICAgbGFzdERheSA6ICdbWWVzdGVyZGF5IGF0XSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrIDogJ1tMYXN0XSBkZGRkIFthdF0gTFQnLAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAnaW4gJXMnLAogICAgICAgICAgICBwYXN0IDogJyVzIGFnbycsCiAgICAgICAgICAgIHMgOiAnYSBmZXcgc2Vjb25kcycsCiAgICAgICAgICAgIG0gOiAnYSBtaW51dGUnLAogICAgICAgICAgICBtbSA6ICclZCBtaW51dGVzJywKICAgICAgICAgICAgaCA6ICdhbiBob3VyJywKICAgICAgICAgICAgaGggOiAnJWQgaG91cnMnLAogICAgICAgICAgICBkIDogJ2EgZGF5JywKICAgICAgICAgICAgZGQgOiAnJWQgZGF5cycsCiAgICAgICAgICAgIE0gOiAnYSBtb250aCcsCiAgICAgICAgICAgIE1NIDogJyVkIG1vbnRocycsCiAgICAgICAgICAgIHkgOiAnYSB5ZWFyJywKICAgICAgICAgICAgeXkgOiAnJWQgeWVhcnMnCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsUGFyc2U6IC9cZHsxLDJ9KHN0fG5kfHJkfHRoKS8sCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgdmFyIGIgPSBudW1iZXIgJSAxMCwKICAgICAgICAgICAgICAgIG91dHB1dCA9ICh+fihudW1iZXIgJSAxMDAgLyAxMCkgPT09IDEpID8gJ3RoJyA6CiAgICAgICAgICAgICAgICAoYiA9PT0gMSkgPyAnc3QnIDoKICAgICAgICAgICAgICAgIChiID09PSAyKSA\/ICduZCcgOgogICAgICAgICAgICAgICAgKGIgPT09IDMpID8gJ3JkJyA6ICd0aCc7CiAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyBvdXRwdXQ7CiAgICAgICAgfSwKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNCAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gNHRoIGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBlc3BlcmFudG8gKGVvKQovLyBhdXRob3IgOiBDb2xpbiBEZWFuIDogaHR0cHM6Ly9naXRodWIuY29tL2NvbGluZGVhbgovLyBrb21lbnRvOiBNaSBlc3RhcyBtYWxjZXJ0YSBzZSBtaSBrb3Jla3RlIHRyYWt0aXMgYWt1emF0aXZvam4gZW4gdGl1IHRyYWR1a28uCi8vICAgICAgICAgIFNlIG5lLCBib252b2x1IGtvcmVrdGkga2FqIGF2aXppIG1pbiBwb3Iga2UgbWkgcG92YXMgbGVybmkhCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgnZW8nLCB7CiAgICAgICAgbW9udGhzIDogJ2phbnVhcm9fZmVicnVhcm9fbWFydG9fYXByaWxvX21ham9fanVuaW9fanVsaW9fYcWtZ3VzdG9fc2VwdGVtYnJvX29rdG9icm9fbm92ZW1icm9fZGVjZW1icm8nLnNwbGl0KCdfJyksCiAgICAgICAgbW9udGhzU2hvcnQgOiAnamFuX2ZlYl9tYXJfYXByX21hal9qdW5fanVsX2HFrWdfc2VwX29rdF9ub3ZfZGVjJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ0RpbWFuxIlvX0x1bmRvX01hcmRvX01lcmtyZWRvX8S0YcWtZG9fVmVuZHJlZG9fU2FiYXRvJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAnRGltX0x1bl9NYXJkX01lcmtfxLRhxa1fVmVuX1NhYicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICdEaV9MdV9NYV9NZV\/EtGFfVmVfU2EnLnNwbGl0KCdfJyksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogJ0hIOm1tJywKICAgICAgICAgICAgTFRTIDogJ0xUOnNzJywKICAgICAgICAgICAgTCA6ICdZWVlZLU1NLUREJywKICAgICAgICAgICAgTEwgOiAnRFstYW4gZGVdIE1NTU0sIFlZWVknLAogICAgICAgICAgICBMTEwgOiAnRFstYW4gZGVdIE1NTU0sIFlZWVkgTFQnLAogICAgICAgICAgICBMTExMIDogJ2RkZGQsIFtsYV0gRFstYW4gZGVdIE1NTU0sIFlZWVkgTFQnCiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbVBhcnNlOiAvW2FwXVwudFwubS9pLAogICAgICAgIGlzUE06IGZ1bmN0aW9uIChpbnB1dCkgewogICAgICAgICAgICByZXR1cm4gaW5wdXQuY2hhckF0KDApLnRvTG93ZXJDYXNlKCkgPT09ICdwJzsKICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtIDogZnVuY3Rpb24gKGhvdXJzLCBtaW51dGVzLCBpc0xvd2VyKSB7CiAgICAgICAgICAgIGlmIChob3VycyA+IDExKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gaXNMb3dlciA\/ICdwLnQubS4nIDogJ1AuVC5NLic7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gaXNMb3dlciA\\/ZgdmI2LHbjNmHX9mF2KfYsdizX9ii2YjYsduM2YRf2YXZh1\/amNmI2KbZhl\/amNmI2KbbjNmHX9in2YjYql\/Ys9m+2KrYp9mF2KjYsV\/Yp9qp2KrYqNixX9mG2YjYp9mF2KjYsV\/Yr9iz2KfZhdio2LEnLnNwbGl0KCdfJyksCiAgICAgICAgbW9udGhzU2hvcnQgOiAn2pjYp9mG2YjbjNmHX9mB2YjYsduM2Ydf2YXYp9ix2LNf2KLZiNix24zZhF\/ZhdmHX9qY2YjYptmGX9qY2YjYptuM2Ydf2KfZiNiqX9iz2b7Yqtin2YXYqNixX9in2qnYqtio2LFf2YbZiNin2YXYqNixX9iv2LPYp9mF2KjYsScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICfbjNqpXHUyMDBj2LTZhtio2Ydf2K\/ZiNi02YbYqNmHX9iz2YdcdTIwMGPYtNmG2KjZh1\/ahtmH2KfYsdi02YbYqNmHX9m+2YbYrFx1MjAwY9i02YbYqNmHX9is2YXYudmHX9i02YbYqNmHJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAn24zaqVx1MjAwY9i02YbYqNmHX9iv2YjYtNmG2KjZh1\/Ys9mHXHUyMDBj2LTZhtio2Ydf2obZh9in2LHYtNmG2KjZh1\/ZvtmG2KxcdTIwMGPYtNmG2KjZh1\/YrNmF2LnZh1\/YtNmG2KjZhycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICfbjF\/Yr1\/Ys1\/ahl\/Zvl\/YrF\/YtCcuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnSEg6bW0nLAogICAgICAgICAgICBMVFMgOiAnTFQ6c3MnLAogICAgICAgICAgICBMIDogJ0REL01NL1lZWVknLAogICAgICAgICAgICBMTCA6ICdEIE1NTU0gWVlZWScsCiAgICAgICAgICAgIExMTCA6ICdEIE1NTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCwgRCBNTU1NIFlZWVkgTFQnCiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbVBhcnNlOiAv2YLYqNmEINin2LIg2LjZh9ixfNio2LnYryDYp9iyINi42YfYsS8sCiAgICAgICAgaXNQTTogZnVuY3Rpb24gKGlucHV0KSB7CiAgICAgICAgICAgIHJldHVybiAv2KjYudivINin2LIg2LjZh9ixLy50ZXN0KGlucHV0KTsKICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtIDogZnVuY3Rpb24gKGhvdXIsIG1pbnV0ZSwgaXNMb3dlcikgewogICAgICAgICAgICBpZiAoaG91ciA8IDEyKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ9mC2KjZhCDYp9iyINi42YfYsSc7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ9io2LnYryDYp9iyINi42YfYsSc7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1vYp9mF2LHZiNiyINiz2KfYudiqXSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW9mB2LHYr9inINiz2KfYudiqXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgW9iz2KfYudiqXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW9iv24zYsdmI2LIg2LPYp9i52KpdIExUJywKICAgICAgICAgICAgbGFzdFdlZWsgOiAnZGRkZCBb2b7bjNi0XSBb2LPYp9i52KpdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ9iv2LEgJXMnLAogICAgICAgICAgICBwYXN0IDogJyVzINm+24zYtCcsCiAgICAgICAgICAgIHMgOiAn2obZhtiv24zZhiDYq9in2YbbjNmHJywKICAgICAgICAgICAgbSA6ICfbjNqpINiv2YLbjNmC2YcnLAogICAgICAgICAgICBtbSA6ICclZCDYr9mC24zZgtmHJywKICAgICAgICAgICAgaCA6ICfbjNqpINiz2KfYudiqJywKICAgICAgICAgICAgaGggOiAnJWQg2LPYp9i52KonLAogICAgICAgICAgICBkIDogJ9uM2qkg2LHZiNiyJywKICAgICAgICAgICAgZGQgOiAnJWQg2LHZiNiyJywKICAgICAgICAgICAgTSA6ICfbjNqpINmF2KfZhycsCiAgICAgICAgICAgIE1NIDogJyVkINmF2KfZhycsCiAgICAgICAgICAgIHkgOiAn24zaqSDYs9in2YQnLAogICAgICAgICAgICB5eSA6ICclZCDYs9in2YQnCiAgICAgICAgfSwKICAgICAgICBwcmVwYXJzZTogZnVuY3Rpb24gKHN0cmluZykgewogICAgICAgICAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2UoL1vbsC3buV0vZywgZnVuY3Rpb24gKG1hdGNoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyTWFwW21hdGNoXTsKICAgICAgICAgICAgfSkucmVwbGFjZSgv2IwvZywgJywnKTsKICAgICAgICB9LAogICAgICAgIHBvc3Rmb3JtYXQ6IGZ1bmN0aW9uIChzdHJpbmcpIHsKICAgICAgICAgICAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC9cZC9nLCBmdW5jdGlvbiAobWF0Y2gpIHsKICAgICAgICAgICAgICAgIHJldHVybiBzeW1ib2xNYXBbbWF0Y2hdOwogICAgICAgICAgICB9KS5yZXBsYWNlKC8sL2csICfYjCcpOwogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbFBhcnNlOiAvXGR7MSwyfdmFLywKICAgICAgICBvcmRpbmFsIDogJyVk2YUnLAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDYsIC8vIFNhdHVyZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDEyIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDFzdCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogZmlubmlzaCAoZmkpCi8vIGF1dGhvciA6IFRhcm1vIEFpZGFudGF1c3RhIDogaHR0cHM6Ly9naXRodWIuY29tL2JsZWFkb2YKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHZhciBudW1iZXJzUGFzdCA9ICdub2xsYSB5a3NpIGtha3NpIGtvbG1lIG5lbGrDpCB2aWlzaSBrdXVzaSBzZWl0c2Vtw6RuIGthaGRla3NhbiB5aGRla3PDpG4nLnNwbGl0KCcgJyksCiAgICAgICAgbnVtYmVyc0Z1dHVyZSA9IFsKICAgICAgICAgICAgJ25vbGxhJywgJ3loZGVuJywgJ2thaGRlbicsICdrb2xtZW4nLCAnbmVsasOkbicsICd2aWlkZW4nLCAna3V1ZGVuJywKICAgICAgICAgICAgbnVtYmVyc1Bhc3RbN10sIG51bWJlcnNQYXN0WzhdLCBudW1iZXJzUGFzdFs5XQogICAgICAgIF07CgogICAgZnVuY3Rpb24gdHJhbnNsYXRlKG51bWJlciwgd2l0aG91dFN1ZmZpeCwga2V5LCBpc0Z1dHVyZSkgewogICAgICAgIHZhciByZXN1bHQgPSAnJzsKICAgICAgICBzd2l0Y2ggKGtleSkgewogICAgICAgIGNhc2UgJ3MnOgogICAgICAgICAgICByZXR1cm4gaXNGdXR1cmUgPyAnbXV1dGFtYW4gc2VrdW5uaW4nIDogJ211dXRhbWEgc2VrdW50aSc7CiAgICAgICAgY2FzZSAnbSc6CiAgICAgICAgICAgIHJldHVybiBpc0Z1dHVyZSA\/ICdtaW51dXRpbicgOiAnbWludXV0dGknOwogICAgICAgIGNhc2UgJ21tJzoKICAgICAgICAgICAgcmVzdWx0ID0gaXNGdXR1cmUgPyAnbWludXV0aW4nIDogJ21pbnV1dHRpYSc7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ2gnOgogICAgICAgICAgICByZXR1cm4gaXNGdXR1cmUgPyAndHVubmluJyA6ICd0dW50aSc7CiAgICAgICAgY2FzZSAnaGgnOgogICAgICAgICAgICByZXN1bHQgPSBpc0Z1dHVyZSA\/ICd0dW5uaW4nIDogJ3R1bnRpYSc7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ2QnOgogICAgICAgICAgICByZXR1cm4gaXNGdXR1cmUgPyAncMOkaXbDpG4nIDogJ3DDpGl2w6QnOwogICAgICAgIGNhc2UgJ2RkJzoKICAgICAgICAgICAgcmVzdWx0ID0gaXNGdXR1cmUgPyAncMOkaXbDpG4nIDogJ3DDpGl2w6TDpCc7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ00nOgogICAgICAgICAgICByZXR1cm4gaXNGdXR1cmUgPyAna3V1a2F1ZGVuJyA6ICdrdXVrYXVzaSc7CiAgICAgICAgY2FzZSAnTU0nOgogICAgICAgICAgICByZXN1bHQgPSBpc0Z1dHVyZSA\/ICdrdXVrYXVkZW4nIDogJ2t1dWthdXR0YSc7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ3knOgogICAgICAgICAgICByZXR1cm4gaXNGdXR1cmUgPyAndnVvZGVuJyA6ICd2dW9zaSc7CiAgICAgICAgY2FzZSAneXknOgogICAgICAgICAgICByZXN1bHQgPSBpc0Z1dHVyZSA\/ICd2dW9kZW4nIDogJ3Z1b3R0YSc7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICByZXN1bHQgPSB2ZXJiYWxOdW1iZXIobnVtYmVyLCBpc0Z1dHVyZSkgKyAnICcgKyByZXN1bHQ7CiAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0KCiAgICBmdW5jdGlvbiB2ZXJiYWxOdW1iZXIobnVtYmVyLCBpc0Z1dHVyZSkgewogICAgICAgIHJldHVybiBudW1iZXIgPCAxMCA\/IChpc0Z1dHVyZSA\/IG51bWJlcnNGdXR1cmVbbnVtYmVyXSA6IG51bWJlcnNQYXN0W251bWJlcl0pIDogbnVtYmVyOwogICAgfQoKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdmaScsIHsKICAgICAgICBtb250aHMgOiAndGFtbWlrdXVfaGVsbWlrdXVfbWFhbGlza3V1X2h1aHRpa3V1X3RvdWtva3V1X2tlc8Oka3V1X2hlaW7DpGt1dV9lbG9rdXVfc3l5c2t1dV9sb2tha3V1X21hcnJhc2t1dV9qb3VsdWt1dScuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICd0YW1taV9oZWxtaV9tYWFsaXNfaHVodGlfdG91a29fa2Vzw6RfaGVpbsOkX2Vsb19zeXlzX2xva2FfbWFycmFzX2pvdWx1Jy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ3N1bm51bnRhaV9tYWFuYW50YWlfdGlpc3RhaV9rZXNraXZpaWtrb190b3JzdGFpX3BlcmphbnRhaV9sYXVhbnRhaScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ3N1X21hX3RpX2tlX3RvX3BlX2xhJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ3N1X21hX3RpX2tlX3RvX3BlX2xhJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdISC5tbScsCiAgICAgICAgICAgIExUUyA6ICdISC5tbS5zcycsCiAgICAgICAgICAgIEwgOiAnREQuTU0uWVlZWScsCiAgICAgICAgICAgIExMIDogJ0RvIE1NTU1bdGFdIFlZWVknLAogICAgICAgICAgICBMTEwgOiAnRG8gTU1NTVt0YV0gWVlZWSwgW2tsb10gTFQnLAogICAgICAgICAgICBMTExMIDogJ2RkZGQsIERvIE1NTU1bdGFdIFlZWVksIFtrbG9dIExUJywKICAgICAgICAgICAgbCA6ICdELk0uWVlZWScsCiAgICAgICAgICAgIGxsIDogJ0RvIE1NTSBZWVlZJywKICAgICAgICAgICAgbGxsIDogJ0RvIE1NTSBZWVlZLCBba2xvXSBMVCcsCiAgICAgICAgICAgIGxsbGwgOiAnZGRkLCBEbyBNTU0gWVlZWSwgW2tsb10gTFQnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6ICdbdMOkbsOkw6RuXSBba2xvXSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW2h1b21lbm5hXSBba2xvXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgW2tsb10gTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1tlaWxlbl0gW2tsb10gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdbdmlpbWVdIGRkZGRbbmFdIFtrbG9dIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJyVzIHDDpMOkc3TDpCcsCiAgICAgICAgICAgIHBhc3QgOiAnJXMgc2l0dGVuJywKICAgICAgICAgICAgcyA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgbSA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgbW0gOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIGggOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIGhoIDogdHJhbnNsYXRlLAogICAgICAgICAgICBkIDogdHJhbnNsYXRlLAogICAgICAgICAgICBkZCA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgTSA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgTU0gOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIHkgOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIHl5IDogdHJhbnNsYXRlCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsUGFyc2U6IC9cZHsxLDJ9XC4vLAogICAgICAgIG9yZGluYWwgOiAnJWQuJywKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNCAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gNHRoIGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBmYXJvZXNlIChmbykKLy8gYXV0aG9yIDogUmFnbmFyIEpvaGFubmVzZW4gOiBodHRwczovL2dpdGh1Yi5jb20vcmFnbmFyMTIzCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgnZm8nLCB7CiAgICAgICAgbW9udGhzIDogJ2phbnVhcl9mZWJydWFyX21hcnNfYXByw61sX21haV9qdW5pX2p1bGlfYXVndXN0X3NlcHRlbWJlcl9va3RvYmVyX25vdmVtYmVyX2Rlc2VtYmVyJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJ2phbl9mZWJfbWFyX2Fwcl9tYWlfanVuX2p1bF9hdWdfc2VwX29rdF9ub3ZfZGVzJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ3N1bm51ZGFndXJfbcOhbmFkYWd1cl90w71zZGFndXJfbWlrdWRhZ3VyX2jDs3NkYWd1cl9mcsOtZ2dqYWRhZ3VyX2xleWdhcmRhZ3VyJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAnc3VuX23DoW5fdMO9c19taWtfaMOzc19mcsOtX2xleScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICdzdV9tw6FfdMO9X21pX2jDs19mcl9sZScuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnSEg6bW0nLAogICAgICAgICAgICBMVFMgOiAnTFQ6c3MnLAogICAgICAgICAgICBMIDogJ0REL01NL1lZWVknLAogICAgICAgICAgICBMTCA6ICdEIE1NTU0gWVlZWScsCiAgICAgICAgICAgIExMTCA6ICdEIE1NTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCBELiBNTU1NLCBZWVlZIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW8ONIGRhZyBrbC5dIExUJywKICAgICAgICAgICAgbmV4dERheSA6ICdbw40gbW9yZ2luIGtsLl0gTFQnLAogICAgICAgICAgICBuZXh0V2VlayA6ICdkZGRkIFtrbC5dIExUJywKICAgICAgICAgICAgbGFzdERheSA6ICdbw40gZ2rDoXIga2wuXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrIDogJ1tzw63DsHN0dV0gZGRkZCBba2xdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ3VtICVzJywKICAgICAgICAgICAgcGFzdCA6ICclcyBzw63DsGFuaScsCiAgICAgICAgICAgIHMgOiAnZsOhIHNla3VuZCcsCiAgICAgICAgICAgIG0gOiAnZWluIG1pbnV0dCcsCiAgICAgICAgICAgIG1tIDogJyVkIG1pbnV0dGlyJywKICAgICAgICAgICAgaCA6ICdlaW4gdMOtbWknLAogICAgICAgICAgICBoaCA6ICclZCB0w61tYXInLAogICAgICAgICAgICBkIDogJ2VpbiBkYWd1cicsCiAgICAgICAgICAgIGRkIDogJyVkIGRhZ2FyJywKICAgICAgICAgICAgTSA6ICdlaW4gbcOhbmHDsGknLAogICAgICAgICAgICBNTSA6ICclZCBtw6FuYcOwaXInLAogICAgICAgICAgICB5IDogJ2VpdHQgw6FyJywKICAgICAgICAgICAgeXkgOiAnJWQgw6FyJwogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbFBhcnNlOiAvXGR7MSwyfVwuLywKICAgICAgICBvcmRpbmFsIDogJyVkLicsCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogY2FuYWRpYW4gZnJlbmNoIChmci1jYSkKLy8gYXV0aG9yIDogSm9uYXRoYW4gQWJvdXJiaWggOiBodHRwczovL2dpdGh1Yi5jb20vam9uYmNhCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgnZnItY2EnLCB7CiAgICAgICAgbW9udGhzIDogJ2phbnZpZXJfZsOpdnJpZXJfbWFyc19hdnJpbF9tYWlfanVpbl9qdWlsbGV0X2Fvw7t0X3NlcHRlbWJyZV9vY3RvYnJlX25vdmVtYnJlX2TDqWNlbWJyZScuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICdqYW52Ll9mw6l2ci5fbWFyc19hdnIuX21haV9qdWluX2p1aWwuX2Fvw7t0X3NlcHQuX29jdC5fbm92Ll9kw6ljLicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICdkaW1hbmNoZV9sdW5kaV9tYXJkaV9tZXJjcmVkaV9qZXVkaV92ZW5kcmVkaV9zYW1lZGknLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICdkaW0uX2x1bi5fbWFyLl9tZXIuX2pldS5fdmVuLl9zYW0uJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ0RpX0x1X01hX01lX0plX1ZlX1NhJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdISDptbScsCiAgICAgICAgICAgIExUUyA6ICdMVDpzcycsCiAgICAgICAgICAgIEwgOiAnWVlZWS1NTS1ERCcsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZIExUJywKICAgICAgICAgICAgTExMTCA6ICdkZGRkIEQgTU1NTSBZWVlZIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICdbQXVqb3VyZFwnaHVpIMOgXSBMVCcsCiAgICAgICAgICAgIG5leHREYXk6ICdbRGVtYWluIMOgXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrOiAnZGRkZCBbw6BdIExUJywKICAgICAgICAgICAgbGFzdERheTogJ1tIaWVyIMOgXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrOiAnZGRkZCBbZGVybmllciDDoF0gTFQnLAogICAgICAgICAgICBzYW1lRWxzZTogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICdkYW5zICVzJywKICAgICAgICAgICAgcGFzdCA6ICdpbCB5IGEgJXMnLAogICAgICAgICAgICBzIDogJ3F1ZWxxdWVzIHNlY29uZGVzJywKICAgICAgICAgICAgbSA6ICd1bmUgbWludXRlJywKICAgICAgICAgICAgbW0gOiAnJWQgbWludXRlcycsCiAgICAgICAgICAgIGggOiAndW5lIGhldXJlJywKICAgICAgICAgICAgaGggOiAnJWQgaGV1cmVzJywKICAgICAgICAgICAgZCA6ICd1biBqb3VyJywKICAgICAgICAgICAgZGQgOiAnJWQgam91cnMnLAogICAgICAgICAgICBNIDogJ3VuIG1vaXMnLAogICAgICAgICAgICBNTSA6ICclZCBtb2lzJywKICAgICAgICAgICAgeSA6ICd1biBhbicsCiAgICAgICAgICAgIHl5IDogJyVkIGFucycKICAgICAgICB9LAogICAgICAgIG9yZGluYWxQYXJzZTogL1xkezEsMn0oZXJ8KS8sCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgcmV0dXJuIG51bWJlciArIChudW1iZXIgPT09IDEgPyAnZXInIDogJycpOwogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBmcmVuY2ggKGZyKQovLyBhdXRob3IgOiBKb2huIEZpc2NoZXIgOiBodHRwczovL2dpdGh1Yi5jb20vamZyb2ZmaWNlCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgnZnInLCB7CiAgICAgICAgbW9udGhzIDogJ2phbnZpZXJfZsOpdnJpZXJfbWFyc19hdnJpbF9tYWlfanVpbl9qdWlsbGV0X2Fvw7t0X3NlcHRlbWJyZV9vY3RvYnJlX25vdmVtYnJlX2TDqWNlbWJyZScuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICdqYW52Ll9mw6l2ci5fbWFyc19hdnIuX21haV9qdWluX2p1aWwuX2Fvw7t0X3NlcHQuX29jdC5fbm92Ll9kw6ljLicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICdkaW1hbmNoZV9sdW5kaV9tYXJkaV9tZXJjcmVkaV9qZXVkaV92ZW5kcmVkaV9zYW1lZGknLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICdkaW0uX2x1bi5fbWFyLl9tZXIuX2pldS5fdmVuLl9zYW0uJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ0RpX0x1X01hX01lX0plX1ZlX1NhJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdISDptbScsCiAgICAgICAgICAgIExUUyA6ICdMVDpzcycsCiAgICAgICAgICAgIEwgOiAnREQvTU0vWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZIExUJywKICAgICAgICAgICAgTExMTCA6ICdkZGRkIEQgTU1NTSBZWVlZIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICdbQXVqb3VyZFwnaHVpIMOgXSBMVCcsCiAgICAgICAgICAgIG5leHREYXk6ICdbRGVtYWluIMOgXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrOiAnZGRkZCBbw6BdIExUJywKICAgICAgICAgICAgbGFzdERheTogJ1tIaWVyIMOgXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrOiAnZGRkZCBbZGVybmllciDDoF0gTFQnLAogICAgICAgICAgICBzYW1lRWxzZTogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICdkYW5zICVzJywKICAgICAgICAgICAgcGFzdCA6ICdpbCB5IGEgJXMnLAogICAgICAgICAgICBzIDogJ3F1ZWxxdWVzIHNlY29uZGVzJywKICAgICAgICAgICAgbSA6ICd1bmUgbWludXRlJywKICAgICAgICAgICAgbW0gOiAnJWQgbWludXRlcycsCiAgICAgICAgICAgIGggOiAndW5lIGhldXJlJywKICAgICAgICAgICAgaGggOiAnJWQgaGV1cmVzJywKICAgICAgICAgICAgZCA6ICd1biBqb3VyJywKICAgICAgICAgICAgZGQgOiAnJWQgam91cnMnLAogICAgICAgICAgICBNIDogJ3VuIG1vaXMnLAogICAgICAgICAgICBNTSA6ICclZCBtb2lzJywKICAgICAgICAgICAgeSA6ICd1biBhbicsCiAgICAgICAgICAgIHl5IDogJyVkIGFucycKICAgICAgICB9LAogICAgICAgIG9yZGluYWxQYXJzZTogL1xkezEsMn0oZXJ8KS8sCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgcmV0dXJuIG51bWJlciArIChudW1iZXIgPT09IDEgPyAnZXInIDogJycpOwogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogZnJpc2lhbiAoZnkpCi8vIGF1dGhvciA6IFJvYmluIHZhbiBkZXIgVmxpZXQgOiBodHRwczovL2dpdGh1Yi5jb20vcm9iaW4wdmFuMGRlcjB2CgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICB2YXIgbW9udGhzU2hvcnRXaXRoRG90cyA9ICdqYW4uX2ZlYi5fbXJ0Ll9hcHIuX21haV9qdW4uX2p1bC5fYXVnLl9zZXAuX29rdC5fbm92Ll9kZXMuJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0V2l0aG91dERvdHMgPSAnamFuX2ZlYl9tcnRfYXByX21haV9qdW5fanVsX2F1Z19zZXBfb2t0X25vdl9kZXMnLnNwbGl0KCdfJyk7CgogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ2Z5JywgewogICAgICAgIG1vbnRocyA6ICdqYW5uZXdhcmlzX2ZlYnJld2FyaXNfbWFhcnRfYXByaWxfbWFhaWVfanVueV9qdWx5X2F1Z3VzdHVzX3NlcHRpbWJlcl9va3RvYmVyX25vdmltYmVyX2Rlc2ltYmVyJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogZnVuY3Rpb24gKG0sIGZvcm1hdCkgewogICAgICAgICAgICBpZiAoLy1NTU0tLy50ZXN0KGZvcm1hdCkpIHsKICAgICAgICAgICAgICAgIHJldHVybiBtb250aHNTaG9ydFdpdGhvdXREb3RzW20ubW9udGgoKV07CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbW9udGhzU2hvcnRXaXRoRG90c1ttLm1vbnRoKCldOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB3ZWVrZGF5cyA6ICdzbmVpbl9tb2FuZGVpX3RpaXNkZWlfd29hbnNkZWlfdG9uZ2Vyc2RlaV9mcmVlZF9zbmVvbicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ3NpLl9tby5fdGkuX3dvLl90by5fZnIuX3NvLicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICdTaV9Nb19UaV9Xb19Ub19Gcl9Tbycuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnSEg6bW0nLAogICAgICAgICAgICBMVFMgOiAnTFQ6c3MnLAogICAgICAgICAgICBMIDogJ0RELU1NLVlZWVknLAogICAgICAgICAgICBMTCA6ICdEIE1NTU0gWVlZWScsCiAgICAgICAgICAgIExMTCA6ICdEIE1NTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCBEIE1NTU0gWVlZWSBMVCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5OiAnW2hqb2VkIG9tXSBMVCcsCiAgICAgICAgICAgIG5leHREYXk6ICdbbW9hcm4gb21dIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6ICdkZGRkIFtvbV0gTFQnLAogICAgICAgICAgICBsYXN0RGF5OiAnW2p1c3RlciBvbV0gTFQnLAogICAgICAgICAgICBsYXN0V2VlazogJ1vDtGZyw7tuZV0gZGRkZCBbb21dIExUJywKICAgICAgICAgICAgc2FtZUVsc2U6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAnb2VyICVzJywKICAgICAgICAgICAgcGFzdCA6ICclcyBseW4nLAogICAgICAgICAgICBzIDogJ2luIHBlYXIgc2Vrb25kZW4nLAogICAgICAgICAgICBtIDogJ2llbiBtaW7DunQnLAogICAgICAgICAgICBtbSA6ICclZCBtaW51dGVuJywKICAgICAgICAgICAgaCA6ICdpZW4gb2VyZScsCiAgICAgICAgICAgIGhoIDogJyVkIG9lcmVuJywKICAgICAgICAgICAgZCA6ICdpZW4gZGVpJywKICAgICAgICAgICAgZGQgOiAnJWQgZGFnZW4nLAogICAgICAgICAgICBNIDogJ2llbiBtb2FubmUnLAogICAgICAgICAgICBNTSA6ICclZCBtb2FubmVuJywKICAgICAgICAgICAgeSA6ICdpZW4gamllcicsCiAgICAgICAgICAgIHl5IDogJyVkIGppZXJyZW4nCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsUGFyc2U6IC9cZHsxLDJ9KHN0ZXxkZSkvLAogICAgICAgIG9yZGluYWwgOiBmdW5jdGlvbiAobnVtYmVyKSB7CiAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAoKG51bWJlciA9PT0gMSB8fCBudW1iZXIgPT09IDggfHwgbnVtYmVyID49IDIwKSA\/ICdzdGUnIDogJ2RlJyk7CiAgICAgICAgfSwKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNCAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gNHRoIGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBnYWxpY2lhbiAoZ2wpCi8vIGF1dGhvciA6IEp1YW4gRy4gSHVydGFkbyA6IGh0dHBzOi8vZ2l0aHViLmNvbS9qdWFuZ2h1cnRhZG8KCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdnbCcsIHsKICAgICAgICBtb250aHMgOiAnWGFuZWlyb19GZWJyZWlyb19NYXJ6b19BYnJpbF9NYWlvX1h1w7FvX1h1bGxvX0Fnb3N0b19TZXRlbWJyb19PdXR1YnJvX05vdmVtYnJvX0RlY2VtYnJvJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJ1hhbi5fRmViLl9NYXIuX0Fici5fTWFpLl9YdcOxLl9YdWwuX0Fnby5fU2V0Ll9PdXQuX05vdi5fRGVjLicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICdEb21pbmdvX0x1bnNfTWFydGVzX03DqXJjb3Jlc19Yb3Zlc19WZW5yZXNfU8OhYmFkbycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ0RvbS5fTHVuLl9NYXIuX03DqXIuX1hvdi5fVmVuLl9Tw6FiLicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICdEb19MdV9NYV9Nw6lfWG9fVmVfU8OhJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdIOm1tJywKICAgICAgICAgICAgTFRTIDogJ0xUOnNzJywKICAgICAgICAgICAgTCA6ICdERC9NTS9ZWVlZJywKICAgICAgICAgICAgTEwgOiAnRCBNTU1NIFlZWVknLAogICAgICAgICAgICBMTEwgOiAnRCBNTU1NIFlZWVkgTFQnLAogICAgICAgICAgICBMTExMIDogJ2RkZGQgRCBNTU1NIFlZWVkgTFQnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAnW2hveGUgJyArICgodGhpcy5ob3VycygpICE9PSAxKSA\/ICfDoXMnIDogJ8OhJykgKyAnXSBMVCc7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG5leHREYXkgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ1ttYcOxw6EgJyArICgodGhpcy5ob3VycygpICE9PSAxKSA\/ICfDoXMnIDogJ8OhJykgKyAnXSBMVCc7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG5leHRXZWVrIDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuICdkZGRkIFsnICsgKCh0aGlzLmhvdXJzKCkgIT09IDEpID8gJ8OhcycgOiAnYScpICsgJ10gTFQnOwogICAgICAgICAgICB9LAogICAgICAgICAgICBsYXN0RGF5IDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuICdbb250ZSAnICsgKCh0aGlzLmhvdXJzKCkgIT09IDEpID8gJ8OhJyA6ICdhJykgKyAnXSBMVCc7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhc3RXZWVrIDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuICdbb10gZGRkZCBbcGFzYWRvICcgKyAoKHRoaXMuaG91cnMoKSAhPT0gMSkgPyAnw6FzJyA6ICdhJykgKyAnXSBMVCc7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6IGZ1bmN0aW9uIChzdHIpIHsKICAgICAgICAgICAgICAgIGlmIChzdHIgPT09ICd1bnMgc2VndW5kb3MnKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdudW5zIHNlZ3VuZG9zJzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHJldHVybiAnZW4gJyArIHN0cjsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcGFzdCA6ICdoYWkgJXMnLAogICAgICAgICAgICBzIDogJ3VucyBzZWd1bmRvcycsCiAgICAgICAgICAgIG0gOiAndW4gbWludXRvJywKICAgICAgICAgICAgbW0gOiAnJWQgbWludXRvcycsCiAgICAgICAgICAgIGggOiAndW5oYSBob3JhJywKICAgICAgICAgICAgaGggOiAnJWQgaG9yYXMnLAogICAgICAgICAgICBkIDogJ3VuIGTDrWEnLAogICAgICAgICAgICBkZCA6ICclZCBkw61hcycsCiAgICAgICAgICAgIE0gOiAndW4gbWVzJywKICAgICAgICAgICAgTU0gOiAnJWQgbWVzZXMnLAogICAgICAgICAgICB5IDogJ3VuIGFubycsCiAgICAgICAgICAgIHl5IDogJyVkIGFub3MnCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsUGFyc2UgOiAvXGR7MSwyfcK6LywKICAgICAgICBvcmRpbmFsIDogJyVkwronLAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA3ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiAxc3QgaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKLy8gbW9tZW50LmpzIGxvY2FsZSBjb25maWd1cmF0aW9uCi8vIGxvY2FsZSA6IEhlYnJldyAoaGUpCi8vIGF1dGhvciA6IFRvbWVyIENvaGVuIDogaHR0cHM6Ly9naXRodWIuY29tL3RvbWVyCi8vIGF1dGhvciA6IE1vc2hlIFNpbWFudG92IDogaHR0cHM6Ly9naXRodWIuY29tL0RldmVsb3BtZW50SUwKLy8gYXV0aG9yIDogVGFsIEF0ZXIgOiBodHRwczovL2dpdGh1Yi5jb20vVGFsQXRlcgoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ2hlJywgewogICAgICAgIG1vbnRocyA6ICfXmdeg15XXkNeoX9ek15HXqNeV15DXqF\/Xnteo16Vf15DXpNeo15nXnF\/XnteQ15lf15nXldeg15lf15nXldec15lf15DXldeS15XXodeYX9eh16TXmNee15HXqF\/XkNeV16fXmNeV15HXqF\/XoNeV15HXnteR16hf15PXptee15HXqCcuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICfXmdeg15XXs1\/XpNeR16jXs1\/Xnteo16Vf15DXpNeo17Nf157XkNeZX9eZ15XXoNeZX9eZ15XXnNeZX9eQ15XXktezX9eh16TXmNezX9eQ15XXp9ezX9eg15XXkdezX9eT16bXntezJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ9eo15DXqdeV159f16nXoNeZX9ep15zXmdep15lf16jXkdeZ16LXmV\/Xl9ee15nXqdeZX9ep15nXqdeZX9ep15HXqicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ9eQ17Nf15HXs1\/XktezX9eT17Nf15TXs1\/XldezX9ep17MnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNNaW4gOiAn15Bf15Ff15Jf15Nf15Rf15Vf16knLnNwbGl0KCdfJyksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogJ0hIOm1tJywKICAgICAgICAgICAgTFRTIDogJ0xUOnNzJywKICAgICAgICAgICAgTCA6ICdERC9NTS9ZWVlZJywKICAgICAgICAgICAgTEwgOiAnRCBb15FdTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgW9eRXU1NTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCwgRCBb15FdTU1NTSBZWVlZIExUJywKICAgICAgICAgICAgbCA6ICdEL00vWVlZWScsCiAgICAgICAgICAgIGxsIDogJ0QgTU1NIFlZWVknLAogICAgICAgICAgICBsbGwgOiAnRCBNTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIGxsbGwgOiAnZGRkLCBEIE1NTSBZWVlZIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW9eU15nXldedINeR1r5dTFQnLAogICAgICAgICAgICBuZXh0RGF5IDogJ1vXnteX16gg15HWvl1MVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgW9eR16nXoteUXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW9eQ16rXnteV15wg15HWvl1MVCcsCiAgICAgICAgICAgIGxhc3RXZWVrIDogJ1vXkdeZ15XXnV0gZGRkZCBb15TXkNeX16jXldefINeR16nXoteUXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICfXkdei15XXkyAlcycsCiAgICAgICAgICAgIHBhc3QgOiAn15zXpNeg15kgJXMnLAogICAgICAgICAgICBzIDogJ9ee16HXpNeoINep16DXmdeV16onLAogICAgICAgICAgICBtIDogJ9eT16fXlCcsCiAgICAgICAgICAgIG1tIDogJyVkINeT16fXldeqJywKICAgICAgICAgICAgaCA6ICfXqdei15QnLAogICAgICAgICAgICBoaCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgICAgIGlmIChudW1iZXIgPT09IDIpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ9ep16LXqteZ15nXnSc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJyDXqdei15XXqic7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGQgOiAn15nXldedJywKICAgICAgICAgICAgZGQgOiBmdW5jdGlvbiAobnVtYmVyKSB7CiAgICAgICAgICAgICAgICBpZiAobnVtYmVyID09PSAyKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICfXmdeV157XmdeZ150nOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICcg15nXnteZ150nOwogICAgICAgICAgICB9LAogICAgICAgICAgICBNIDogJ9eX15XXk9epJywKICAgICAgICAgICAgTU0gOiBmdW5jdGlvbiAobnVtYmVyKSB7CiAgICAgICAgICAgICAgICBpZiAobnVtYmVyID09PSAyKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICfXl9eV15PXqdeZ15nXnSc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJyDXl9eV15PXqdeZ150nOwogICAgICAgICAgICB9LAogICAgICAgICAgICB5IDogJ9ep16DXlCcsCiAgICAgICAgICAgIHl5IDogZnVuY3Rpb24gKG51bWJlcikgewogICAgICAgICAgICAgICAgaWYgKG51bWJlciA9PT0gMikgewogICAgICAgICAgICAgICAgICAgIHJldHVybiAn16nXoNeq15nXmdedJzsKICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAobnVtYmVyICUgMTAgPT09IDAgJiYgbnVtYmVyICE9PSAxMCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAnINep16DXlCc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJyDXqdeg15nXnSc7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogaGluZGkgKGhpKQovLyBhdXRob3IgOiBNYXlhbmsgU2luZ2hhbCA6IGh0dHBzOi8vZ2l0aHViLmNvbS9tYXlhbmtzaW5naGFsCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICB2YXIgc3ltYm9sTWFwID0gewogICAgICAgICcxJzogJ+ClpycsCiAgICAgICAgJzInOiAn4KWoJywKICAgICAgICAnMyc6ICfgpaknLAogICAgICAgICc0JzogJ+ClqicsCiAgICAgICAgJzUnOiAn4KWrJywKICAgICAgICAnNic6ICfgpawnLAogICAgICAgICc3JzogJ+ClrScsCiAgICAgICAgJzgnOiAn4KWuJywKICAgICAgICAnOSc6ICfgpa8nLAogICAgICAgICcwJzogJ+ClpicKICAgIH0sCiAgICBudW1iZXJNYXAgPSB7CiAgICAgICAgJ+Clpyc6ICcxJywKICAgICAgICAn4KWoJzogJzInLAogICAgICAgICfgpaknOiAnMycsCiAgICAgICAgJ+Clqic6ICc0JywKICAgICAgICAn4KWrJzogJzUnLAogICAgICAgICfgpawnOiAnNicsCiAgICAgICAgJ+ClrSc6ICc3JywKICAgICAgICAn4KWuJzogJzgnLAogICAgICAgICfgpa8nOiAnOScsCiAgICAgICAgJ+Clpic6ICcwJwogICAgfTsKCiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgnaGknLCB7CiAgICAgICAgbW9udGhzIDogJ+CknOCkqOCkteCksOClgF\/gpKvgpLzgpLDgpLXgpLDgpYBf4KSu4KS+4KSw4KWN4KSaX+CkheCkquCljeCksOCliOCksl\/gpK7gpIhf4KSc4KWC4KSoX+CknOClgeCksuCkvuCkiF\/gpIXgpJfgpLjgpY3gpKRf4KS44KS\/4KSk4KSu4KWN4KSs4KSwX+CkheCkleCljeCkn+ClguCkrOCksF\/gpKjgpLXgpK7gpY3gpKzgpLBf4KSm4KS\/4KS44KSu4KWN4KSs4KSwJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJ+CknOCkqC5f4KSr4KS84KSwLl\/gpK7gpL7gpLDgpY3gpJpf4KSF4KSq4KWN4KSw4KWILl\/gpK7gpIhf4KSc4KWC4KSoX+CknOClgeCksi5f4KSF4KSXLl\/gpLjgpL\/gpKQuX+CkheCkleCljeCkn+Clgi5f4KSo4KS1Ll\/gpKbgpL\/gpLguJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ+CksOCkteCkv+CkteCkvuCksF\/gpLjgpYvgpK7gpLXgpL7gpLBf4KSu4KSC4KSX4KSy4KS14KS+4KSwX+CkrOClgeCkp+CkteCkvuCksF\/gpJfgpYHgpLDgpYLgpLXgpL7gpLBf4KS24KWB4KSV4KWN4KSw4KS14KS+4KSwX+CktuCkqOCkv+CkteCkvuCksCcuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ+CksOCkteCkv1\/gpLjgpYvgpK5f4KSu4KSC4KSX4KSyX+CkrOClgeCkp1\/gpJfgpYHgpLDgpYJf4KS24KWB4KSV4KWN4KSwX+CktuCkqOCkvycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICfgpLBf4KS44KWLX+CkruCkgl\/gpKzgpYFf4KSX4KWBX+CktuClgV\/gpLYnLnNwbGl0KCdfJyksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogJ0EgaDptbSDgpKzgpJzgpYcnLAogICAgICAgICAgICBMVFMgOiAnQSBoOm1tOnNzIOCkrOCknOClhycsCiAgICAgICAgICAgIEwgOiAnREQvTU0vWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZLCBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCwgRCBNTU1NIFlZWVksIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW+CkhuCknF0gTFQnLAogICAgICAgICAgICBuZXh0RGF5IDogJ1vgpJXgpLJdIExUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnZGRkZCwgTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1vgpJXgpLJdIExUJywKICAgICAgICAgICAgbGFzdFdlZWsgOiAnW+CkquCkv+Ckm+CksuClh10gZGRkZCwgTFQnLAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAnJXMg4KSu4KWH4KSCJywKICAgICAgICAgICAgcGFzdCA6ICclcyDgpKrgpLngpLLgpYcnLAogICAgICAgICAgICBzIDogJ+CkleClgeCkmyDgpLngpYAg4KSV4KWN4KS34KSjJywKICAgICAgICAgICAgbSA6ICfgpI\/gpJUg4KSu4KS\/4KSo4KSfJywKICAgICAgICAgICAgbW0gOiAnJWQg4KSu4KS\/4KSo4KSfJywKICAgICAgICAgICAgaCA6ICfgpI\/gpJUg4KSY4KSC4KSf4KS+JywKICAgICAgICAgICAgaGggOiAnJWQg4KSY4KSC4KSf4KWHJywKICAgICAgICAgICAgZCA6ICfgpI\/gpJUg4KSm4KS\/4KSoJywKICAgICAgICAgICAgZGQgOiAnJWQg4KSm4KS\/4KSoJywKICAgICAgICAgICAgTSA6ICfgpI\/gpJUg4KSu4KS54KWA4KSo4KWHJywKICAgICAgICAgICAgTU0gOiAnJWQg4KSu4KS54KWA4KSo4KWHJywKICAgICAgICAgICAgeSA6ICfgpI\/gpJUg4KS14KSw4KWN4KS3JywKICAgICAgICAgICAgeXkgOiAnJWQg4KS14KSw4KWN4KS3JwogICAgICAgIH0sCiAgICAgICAgcHJlcGFyc2U6IGZ1bmN0aW9uIChzdHJpbmcpIHsKICAgICAgICAgICAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC9b4KWn4KWo4KWp4KWq4KWr4KWs4KWt4KWu4KWv4KWmXS9nLCBmdW5jdGlvbiAobWF0Y2gpIHsKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXJNYXBbbWF0Y2hdOwogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIHBvc3Rmb3JtYXQ6IGZ1bmN0aW9uIChzdHJpbmcpIHsKICAgICAgICAgICAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC9cZC9nLCBmdW5jdGlvbiAobWF0Y2gpIHsKICAgICAgICAgICAgICAgIHJldHVybiBzeW1ib2xNYXBbbWF0Y2hdOwogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIC8vIEhpbmRpIG5vdGF0aW9uIGZvciBtZXJpZGllbXMgYXJlIHF1aXRlIGZ1enp5IGluIHByYWN0aWNlLiBXaGlsZSB0aGVyZSBleGlzdHMKICAgICAgICAvLyBhIHJpZ2lkIG5vdGlvbiBvZiBhICdQYWhhcicgaXQgaXMgbm90IHVzZWQgYXMgcmlnaWRseSBpbiBtb2Rlcm4gSGluZGkuCiAgICAgICAgbWVyaWRpZW1QYXJzZTogL+CksOCkvuCkpHzgpLjgpYHgpKzgpLl84KSm4KWL4KSq4KS54KSwfOCktuCkvuCkri8sCiAgICAgICAgbWVyaWRpZW1Ib3VyIDogZnVuY3Rpb24gKGhvdXIsIG1lcmlkaWVtKSB7CiAgICAgICAgICAgIGlmIChob3VyID09PSAxMikgewogICAgICAgICAgICAgICAgaG91ciA9IDA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKG1lcmlkaWVtID09PSAn4KSw4KS+4KSkJykgewogICAgICAgICAgICAgICAgcmV0dXJuIGhvdXIgPCA0ID8gaG91ciA6IGhvdXIgKyAxMjsKICAgICAgICAgICAgfSBlbHNlIGlmIChtZXJpZGllbSA9PT0gJ+CkuOClgeCkrOCkuScpIHsKICAgICAgICAgICAgICAgIHJldHVybiBob3VyOwogICAgICAgICAgICB9IGVsc2UgaWYgKG1lcmlkaWVtID09PSAn4KSm4KWL4KSq4KS54KSwJykgewogICAgICAgICAgICAgICAgcmV0dXJuIGhvdXIgPj0gMTAgPyBob3VyIDogaG91ciArIDEyOwogICAgICAgICAgICB9IGVsc2UgaWYgKG1lcmlkaWVtID09PSAn4KS24KS+4KSuJykgewogICAgICAgICAgICAgICAgcmV0dXJuIGhvdXIgKyAxMjsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgbWVyaWRpZW0gOiBmdW5jdGlvbiAoaG91ciwgbWludXRlLCBpc0xvd2VyKSB7CiAgICAgICAgICAgIGlmIChob3VyIDwgNCkgewogICAgICAgICAgICAgICAgcmV0dXJuICfgpLDgpL7gpKQnOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhvdXIgPCAxMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICfgpLjgpYHgpKzgpLknOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhvdXIgPCAxNykgewogICAgICAgICAgICAgICAgcmV0dXJuICfgpKbgpYvgpKrgpLngpLAnOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhvdXIgPCAyMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICfgpLbgpL7gpK4nOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuICfgpLDgpL7gpKQnOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAwLCAvLyBTdW5kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNiAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gMXN0IGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBocnZhdHNraSAoaHIpCi8vIGF1dGhvciA6IEJvamFuIE1hcmtvdmnEhyA6IGh0dHBzOi8vZ2l0aHViLmNvbS9ibWFya292aWMKCi8vIGJhc2VkIG9uIChzbCkgdHJhbnNsYXRpb24gYnkgUm9iZXJ0IFNlZG92xaFlawoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgZnVuY3Rpb24gdHJhbnNsYXRlKG51bWJlciwgd2l0aG91dFN1ZmZpeCwga2V5KSB7CiAgICAgICAgdmFyIHJlc3VsdCA9IG51bWJlciArICcgJzsKICAgICAgICBzd2l0Y2ggKGtleSkgewogICAgICAgIGNhc2UgJ20nOgogICAgICAgICAgICByZXR1cm4gd2l0aG91dFN1ZmZpeCA\/ICdqZWRuYSBtaW51dGEnIDogJ2plZG5lIG1pbnV0ZSc7CiAgICAgICAgY2FzZSAnbW0nOgogICAgICAgICAgICBpZiAobnVtYmVyID09PSAxKSB7CiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJ21pbnV0YSc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobnVtYmVyID09PSAyIHx8IG51bWJlciA9PT0gMyB8fCBudW1iZXIgPT09IDQpIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnbWludXRlJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnbWludXRhJzsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgICAgIGNhc2UgJ2gnOgogICAgICAgICAgICByZXR1cm4gd2l0aG91dFN1ZmZpeCA\/ICdqZWRhbiBzYXQnIDogJ2plZG5vZyBzYXRhJzsKICAgICAgICBjYXNlICdoaCc6CiAgICAgICAgICAgIGlmIChudW1iZXIgPT09IDEpIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnc2F0JzsKICAgICAgICAgICAgfSBlbHNlIGlmIChudW1iZXIgPT09IDIgfHwgbnVtYmVyID09PSAzIHx8IG51bWJlciA9PT0gNCkgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICdzYXRhJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnc2F0aSc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgICBjYXNlICdkZCc6CiAgICAgICAgICAgIGlmIChudW1iZXIgPT09IDEpIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnZGFuJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnZGFuYSc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgICBjYXNlICdNTSc6CiAgICAgICAgICAgIGlmIChudW1iZXIgPT09IDEpIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnbWplc2VjJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChudW1iZXIgPT09IDIgfHwgbnVtYmVyID09PSAzIHx8IG51bWJlciA9PT0gNCkgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICdtamVzZWNhJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnbWplc2VjaSc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgICBjYXNlICd5eSc6CiAgICAgICAgICAgIGlmIChudW1iZXIgPT09IDEpIHsKICAgICAgICAgICAgICAgIHJlc3VsdCArPSAnZ29kaW5hJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChudW1iZXIgPT09IDIgfHwgbnVtYmVyID09PSAzIHx8IG51bWJlciA9PT0gNCkgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICdnb2RpbmUnOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICdnb2RpbmEnOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7CiAgICAgICAgfQogICAgfQoKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdocicsIHsKICAgICAgICBtb250aHMgOiAnc2plxI1hbmpfdmVsamHEjWFfb8W+dWpha190cmF2YW5qX3N2aWJhbmpfbGlwYW5qX3NycGFual9rb2xvdm96X3J1amFuX2xpc3RvcGFkX3N0dWRlbmlfcHJvc2luYWMnLnNwbGl0KCdfJyksCiAgICAgICAgbW9udGhzU2hvcnQgOiAnc2plLl92ZWwuX2\/FvnUuX3RyYS5fc3ZpLl9saXAuX3NycC5fa29sLl9ydWouX2xpcy5fc3R1Ll9wcm8uJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ25lZGplbGphX3BvbmVkamVsamFrX3V0b3Jha19zcmlqZWRhX8SNZXR2cnRha19wZXRha19zdWJvdGEnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICduZWQuX3Bvbi5fdXRvLl9zcmkuX8SNZXQuX3BldC5fc3ViLicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICduZV9wb191dF9zcl\/EjWVfcGVfc3UnLnNwbGl0KCdfJyksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogJ0g6bW0nLAogICAgICAgICAgICBMVFMgOiAnTFQ6c3MnLAogICAgICAgICAgICBMIDogJ0RELiBNTS4gWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QuIE1NTU0gWVlZWScsCiAgICAgICAgICAgIExMTCA6ICdELiBNTU1NIFlZWVkgTFQnLAogICAgICAgICAgICBMTExMIDogJ2RkZGQsIEQuIE1NTU0gWVlZWSBMVCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5ICA6ICdbZGFuYXMgdV0gTFQnLAogICAgICAgICAgICBuZXh0RGF5ICA6ICdbc3V0cmEgdV0gTFQnLAoKICAgICAgICAgICAgbmV4dFdlZWsgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKHRoaXMuZGF5KCkpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1t1XSBbbmVkamVsanVdIFt1XSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbdV0gW3NyaWplZHVdIFt1XSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbdV0gW3N1Ym90dV0gW3VdIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1t1XSBkZGRkIFt1XSBMVCc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhc3REYXkgIDogJ1tqdcSNZXIgdV0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAodGhpcy5kYXkoKSkgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW3Byb8WhbHVdIGRkZGQgW3VdIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1twcm\/FoWxlXSBbc3Vib3RlXSBbdV0gTFQnOwogICAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW3Byb8WhbGldIGRkZGQgW3VdIExUJzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ3phICVzJywKICAgICAgICAgICAgcGFzdCAgIDogJ3ByaWplICVzJywKICAgICAgICAgICAgcyAgICAgIDogJ3BhciBzZWt1bmRpJywKICAgICAgICAgICAgbSAgICAgIDogdHJhbnNsYXRlLAogICAgICAgICAgICBtbSAgICAgOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIGggICAgICA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgaGggICAgIDogdHJhbnNsYXRlLAogICAgICAgICAgICBkICAgICAgOiAnZGFuJywKICAgICAgICAgICAgZGQgICAgIDogdHJhbnNsYXRlLAogICAgICAgICAgICBNICAgICAgOiAnbWplc2VjJywKICAgICAgICAgICAgTU0gICAgIDogdHJhbnNsYXRlLAogICAgICAgICAgICB5ICAgICAgOiAnZ29kaW51JywKICAgICAgICAgICAgeXkgICAgIDogdHJhbnNsYXRlCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsUGFyc2U6IC9cZHsxLDJ9XC4vLAogICAgICAgIG9yZGluYWwgOiAnJWQuJywKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNyAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gMXN0IGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBodW5nYXJpYW4gKGh1KQovLyBhdXRob3IgOiBBZGFtIEJydW5uZXIgOiBodHRwczovL2dpdGh1Yi5jb20vYWRhbWJydW5uZXIKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHZhciB3ZWVrRW5kaW5ncyA9ICd2YXPDoXJuYXAgaMOpdGbFkW4ga2VkZGVuIHN6ZXJkw6FuIGNzw7x0w7ZydMO2a8O2biBww6ludGVrZW4gc3pvbWJhdG9uJy5zcGxpdCgnICcpOwoKICAgIGZ1bmN0aW9uIHRyYW5zbGF0ZShudW1iZXIsIHdpdGhvdXRTdWZmaXgsIGtleSwgaXNGdXR1cmUpIHsKICAgICAgICB2YXIgbnVtID0gbnVtYmVyLAogICAgICAgICAgICBzdWZmaXg7CgogICAgICAgIHN3aXRjaCAoa2V5KSB7CiAgICAgICAgY2FzZSAncyc6CiAgICAgICAgICAgIHJldHVybiAoaXNGdXR1cmUgfHwgd2l0aG91dFN1ZmZpeCkgPyAnbsOpaMOhbnkgbcOhc29kcGVyYycgOiAnbsOpaMOhbnkgbcOhc29kcGVyY2UnOwogICAgICAgIGNhc2UgJ20nOgogICAgICAgICAgICByZXR1cm4gJ2VneScgKyAoaXNGdXR1cmUgfHwgd2l0aG91dFN1ZmZpeCA\/ICcgcGVyYycgOiAnIHBlcmNlJyk7CiAgICAgICAgY2FzZSAnbW0nOgogICAgICAgICAgICByZXR1cm4gbnVtICsgKGlzRnV0dXJlIHx8IHdpdGhvdXRTdWZmaXggPyAnIHBlcmMnIDogJyBwZXJjZScpOwogICAgICAgIGNhc2UgJ2gnOgogICAgICAgICAgICByZXR1cm4gJ2VneScgKyAoaXNGdXR1cmUgfHwgd2l0aG91dFN1ZmZpeCA\/ICcgw7NyYScgOiAnIMOzcsOhamEnKTsKICAgICAgICBjYXNlICdoaCc6CiAgICAgICAgICAgIHJldHVybiBudW0gKyAoaXNGdXR1cmUgfHwgd2l0aG91dFN1ZmZpeCA\/ICcgw7NyYScgOiAnIMOzcsOhamEnKTsKICAgICAgICBjYXNlICdkJzoKICAgICAgICAgICAgcmV0dXJuICdlZ3knICsgKGlzRnV0dXJlIHx8IHdpdGhvdXRTdWZmaXggPyAnIG5hcCcgOiAnIG5hcGphJyk7CiAgICAgICAgY2FzZSAnZGQnOgogICAgICAgICAgICByZXR1cm4gbnVtICsgKGlzRnV0dXJlIHx8IHdpdGhvdXRTdWZmaXggPyAnIG5hcCcgOiAnIG5hcGphJyk7CiAgICAgICAgY2FzZSAnTSc6CiAgICAgICAgICAgIHJldHVybiAnZWd5JyArIChpc0Z1dHVyZSB8fCB3aXRob3V0U3VmZml4ID8gJyBow7NuYXAnIDogJyBow7NuYXBqYScpOwogICAgICAgIGNhc2UgJ01NJzoKICAgICAgICAgICAgcmV0dXJuIG51bSArIChpc0Z1dHVyZSB8fCB3aXRob3V0U3VmZml4ID8gJyBow7NuYXAnIDogJyBow7NuYXBqYScpOwogICAgICAgIGNhc2UgJ3knOgogICAgICAgICAgICByZXR1cm4gJ2VneScgKyAoaXNGdXR1cmUgfHwgd2l0aG91dFN1ZmZpeCA\/ICcgw6l2JyA6ICcgw6l2ZScpOwogICAgICAgIGNhc2UgJ3l5JzoKICAgICAgICAgICAgcmV0dXJuIG51bSArIChpc0Z1dHVyZSB8fCB3aXRob3V0U3VmZml4ID8gJyDDqXYnIDogJyDDqXZlJyk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gJyc7CiAgICB9CgogICAgZnVuY3Rpb24gd2Vlayhpc0Z1dHVyZSkgewogICAgICAgIHJldHVybiAoaXNGdXR1cmUgPyAnJyA6ICdbbcO6bHRdICcpICsgJ1snICsgd2Vla0VuZGluZ3NbdGhpcy5kYXkoKV0gKyAnXSBMVFsta29yXSc7CiAgICB9CgogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ2h1JywgewogICAgICAgIG1vbnRocyA6ICdqYW51w6FyX2ZlYnJ1w6FyX23DoXJjaXVzX8OhcHJpbGlzX23DoWp1c19qw7puaXVzX2rDumxpdXNfYXVndXN6dHVzX3N6ZXB0ZW1iZXJfb2t0w7NiZXJfbm92ZW1iZXJfZGVjZW1iZXInLnNwbGl0KCdfJyksCiAgICAgICAgbW9udGhzU2hvcnQgOiAnamFuX2ZlYl9tw6FyY1\/DoXByX23DoWpfasO6bl9qw7psX2F1Z19zemVwdF9va3Rfbm92X2RlYycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICd2YXPDoXJuYXBfaMOpdGbFkV9rZWRkX3N6ZXJkYV9jc8O8dMO2cnTDtmtfcMOpbnRla19zem9tYmF0Jy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAndmFzX2jDqXRfa2VkZF9zemVfY3PDvHRfcMOpbl9zem8nLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNNaW4gOiAndl9oX2tfc3plX2NzX3Bfc3pvJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdIOm1tJywKICAgICAgICAgICAgTFRTIDogJ0xUOnNzJywKICAgICAgICAgICAgTCA6ICdZWVlZLk1NLkRELicsCiAgICAgICAgICAgIExMIDogJ1lZWVkuIE1NTU0gRC4nLAogICAgICAgICAgICBMTEwgOiAnWVlZWS4gTU1NTSBELiwgTFQnLAogICAgICAgICAgICBMTExMIDogJ1lZWVkuIE1NTU0gRC4sIGRkZGQgTFQnCiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbVBhcnNlOiAvZGV8ZHUvaSwKICAgICAgICBpc1BNOiBmdW5jdGlvbiAoaW5wdXQpIHsKICAgICAgICAgICAgcmV0dXJuIGlucHV0LmNoYXJBdCgxKS50b0xvd2VyQ2FzZSgpID09PSAndSc7CiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbSA6IGZ1bmN0aW9uIChob3VycywgbWludXRlcywgaXNMb3dlcikgewogICAgICAgICAgICBpZiAoaG91cnMgPCAxMikgewogICAgICAgICAgICAgICAgcmV0dXJuIGlzTG93ZXIgPT09IHRydWUgPyAnZGUnIDogJ0RFJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiBpc0xvd2VyID09PSB0cnVlID8gJ2R1JyA6ICdEVSc7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1ttYV0gTFRbLWtvcl0nLAogICAgICAgICAgICBuZXh0RGF5IDogJ1tob2xuYXBdIExUWy1rb3JdJywKICAgICAgICAgICAgbmV4dFdlZWsgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gd2Vlay5jYWxsKHRoaXMsIHRydWUpOwogICAgICAgICAgICB9LAogICAgICAgICAgICBsYXN0RGF5IDogJ1t0ZWduYXBdIExUWy1rb3JdJywKICAgICAgICAgICAgbGFzdFdlZWsgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gd2Vlay5jYWxsKHRoaXMsIGZhbHNlKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJyVzIG3Dumx2YScsCiAgICAgICAgICAgIHBhc3QgOiAnJXMnLAogICAgICAgICAgICBzIDogdHJhbnNsYXRlLAogICAgICAgICAgICBtIDogdHJhbnNsYXRlLAogICAgICAgICAgICBtbSA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgaCA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgaGggOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIGQgOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIGRkIDogdHJhbnNsYXRlLAogICAgICAgICAgICBNIDogdHJhbnNsYXRlLAogICAgICAgICAgICBNTSA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgeSA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgeXkgOiB0cmFuc2xhdGUKICAgICAgICB9LAogICAgICAgIG9yZGluYWxQYXJzZTogL1xkezEsMn1cLi8sCiAgICAgICAgb3JkaW5hbCA6ICclZC4nLAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA3ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiAxc3QgaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKLy8gbW9tZW50LmpzIGxvY2FsZSBjb25maWd1cmF0aW9uCi8vIGxvY2FsZSA6IEFybWVuaWFuIChoeS1hbSkKLy8gYXV0aG9yIDogQXJtZW5kYXJhYnlhbiA6IGh0dHBzOi8vZ2l0aHViLmNvbS9hcm1lbmRhcmFieWFuCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICBmdW5jdGlvbiBtb250aHNDYXNlUmVwbGFjZShtLCBmb3JtYXQpIHsKICAgICAgICB2YXIgbW9udGhzID0gewogICAgICAgICAgICAnbm9taW5hdGl2ZSc6ICfVsNW41oLVttW+1aHWgF\/Wg9Wl1b\/WgNW+1aHWgF\/VtNWh1oDVv1\/VodW61oDVq9WsX9W01aHVtdWr1b1f1bDVuNaC1bbVq9W9X9Ww1bjWgtWs1avVvV\/WhdWj1bjVvdW\/1bjVvV\/VvdWl1brVv9Wl1bTVotWl1oBf1bDVuNWv1b\/VpdW01aLVpdaAX9W21bjVtdWl1bTVotWl1oBf1aTVpdWv1b\/VpdW01aLVpdaAJy5zcGxpdCgnXycpLAogICAgICAgICAgICAnYWNjdXNhdGl2ZSc6ICfVsNW41oLVttW+1aHWgNWrX9aD1aXVv9aA1b7VodaA1atf1bTVodaA1b\/Vq1\/VodW61oDVq9Ws1atf1bTVodW11avVvdWrX9Ww1bjWgtW21avVvdWrX9Ww1bjWgtWs1avVvdWrX9aF1aPVuNW91b\/VuNW91atf1b3VpdW61b\/VpdW01aLVpdaA1atf1bDVuNWv1b\/VpdW01aLVpdaA1atf1bbVuNW11aXVtNWi1aXWgNWrX9Wk1aXVr9W\/1aXVtNWi1aXWgNWrJy5zcGxpdCgnXycpCiAgICAgICAgfSwKCiAgICAgICAgbm91bkNhc2UgPSAoL0Rbb0RdPyhcW1teXFtcXV0qXF18XHMrKStNTU1NPy8pLnRlc3QoZm9ybWF0KSA\/CiAgICAgICAgICAgICdhY2N1c2F0aXZlJyA6CiAgICAgICAgICAgICdub21pbmF0aXZlJzsKCiAgICAgICAgcmV0dXJuIG1vbnRoc1tub3VuQ2FzZV1bbS5tb250aCgpXTsKICAgIH0KCiAgICBmdW5jdGlvbiBtb250aHNTaG9ydENhc2VSZXBsYWNlKG0sIGZvcm1hdCkgewogICAgICAgIHZhciBtb250aHNTaG9ydCA9ICfVsNW21b5f1oPVv9aAX9W01oDVv1\/VodW61oBf1bTVtdW9X9Ww1bbVvV\/VsNWs1b1f1oXVo9W9X9W91brVv1\/VsNWv1b9f1bbVtNWiX9Wk1a\/Vvycuc3BsaXQoJ18nKTsKCiAgICAgICAgcmV0dXJuIG1vbnRoc1Nob3J0W20ubW9udGgoKV07CiAgICB9CgogICAgZnVuY3Rpb24gd2Vla2RheXNDYXNlUmVwbGFjZShtLCBmb3JtYXQpIHsKICAgICAgICB2YXIgd2Vla2RheXMgPSAn1a\/Vq9aA1aHVr9WrX9Wl1oDVr9W41oLVt9Wh1aLVqdWrX9Wl1oDVpdaE1bfVodWi1anVq1\/VudW41oDVpdaE1bfVodWi1anVq1\/VsNWr1bbVo9W31aHVotWp1atf1bjWgtaA1aLVodWpX9W31aHVotWh1aknLnNwbGl0KCdfJyk7CgogICAgICAgIHJldHVybiB3ZWVrZGF5c1ttLmRheSgpXTsKICAgIH0KCiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgnaHktYW0nLCB7CiAgICAgICAgbW9udGhzIDogbW9udGhzQ2FzZVJlcGxhY2UsCiAgICAgICAgbW9udGhzU2hvcnQgOiBtb250aHNTaG9ydENhc2VSZXBsYWNlLAogICAgICAgIHdlZWtkYXlzIDogd2Vla2RheXNDYXNlUmVwbGFjZSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ9Wv1oDVr1\/VpdaA1a9f1aXWgNaEX9W51oDWhF\/VsNW21aNf1bjWgtaA1aJf1bfVotWpJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ9Wv1oDVr1\/VpdaA1a9f1aXWgNaEX9W51oDWhF\/VsNW21aNf1bjWgtaA1aJf1bfVotWpJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdISDptbScsCiAgICAgICAgICAgIExUUyA6ICdMVDpzcycsCiAgICAgICAgICAgIEwgOiAnREQuTU0uWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZINWpLicsCiAgICAgICAgICAgIExMTCA6ICdEIE1NTU0gWVlZWSDVqS4sIExUJywKICAgICAgICAgICAgTExMTCA6ICdkZGRkLCBEIE1NTU0gWVlZWSDVqS4sIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICdb1aHVtdW91oXWgF0gTFQnLAogICAgICAgICAgICBuZXh0RGF5OiAnW9W+1aHVstWoXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXk6ICdb1aXWgNWl1a9dIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAnZGRkZCBb1oXWgNWoINWq1aHVtNWoXSBMVCc7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhc3RXZWVrOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ1vVodW21oHVodWuXSBkZGRkIFvWhdaA1agg1arVodW01ahdIExUJzsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2FtZUVsc2U6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAnJXMg1bDVpdW\/1bgnLAogICAgICAgICAgICBwYXN0IDogJyVzINWh1bzVodW7JywKICAgICAgICAgICAgcyA6ICfVtNWrINaE1aHVttWrINW+1aHVtdaA1a\/VtdWh1bYnLAogICAgICAgICAgICBtIDogJ9aA1bjVutWlJywKICAgICAgICAgICAgbW0gOiAnJWQg1oDVuNW61aUnLAogICAgICAgICAgICBoIDogJ9Wq1aHVtCcsCiAgICAgICAgICAgIGhoIDogJyVkINWq1aHVtCcsCiAgICAgICAgICAgIGQgOiAn1oXWgCcsCiAgICAgICAgICAgIGRkIDogJyVkINaF1oAnLAogICAgICAgICAgICBNIDogJ9Wh1bTVq9W9JywKICAgICAgICAgICAgTU0gOiAnJWQg1aHVtNWr1b0nLAogICAgICAgICAgICB5IDogJ9W\/1aHWgNWrJywKICAgICAgICAgICAgeXkgOiAnJWQg1b\/VodaA1asnCiAgICAgICAgfSwKCiAgICAgICAgbWVyaWRpZW1QYXJzZTogL9Wj1avVt9Wl1oDVvtWhfNWh1bzVodW+1bjVv9W+1aF81oHVpdaA1aXVr9W+1aF81aXWgNWl1a\/VuNW11aHVti8sCiAgICAgICAgaXNQTTogZnVuY3Rpb24gKGlucHV0KSB7CiAgICAgICAgICAgIHJldHVybiAvXijWgdWl1oDVpdWv1b7VoXzVpdaA1aXVr9W41bXVodW2KSQvLnRlc3QoaW5wdXQpOwogICAgICAgIH0sCiAgICAgICAgbWVyaWRpZW0gOiBmdW5jdGlvbiAoaG91cikgewogICAgICAgICAgICBpZiAoaG91ciA8IDQpIHsKICAgICAgICAgICAgICAgIHJldHVybiAn1aPVq9W31aXWgNW+1aEnOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhvdXIgPCAxMikgewogICAgICAgICAgICAgICAgcmV0dXJuICfVodW81aHVvtW41b\/VvtWhJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VyIDwgMTcpIHsKICAgICAgICAgICAgICAgIHJldHVybiAn1oHVpdaA1aXVr9W+1aEnOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuICfVpdaA1aXVr9W41bXVodW2JzsKICAgICAgICAgICAgfQogICAgICAgIH0sCgogICAgICAgIG9yZGluYWxQYXJzZTogL1xkezEsMn18XGR7MSwyfS0o1avVtnzWgNWkKS8sCiAgICAgICAgb3JkaW5hbDogZnVuY3Rpb24gKG51bWJlciwgcGVyaW9kKSB7CiAgICAgICAgICAgIHN3aXRjaCAocGVyaW9kKSB7CiAgICAgICAgICAgIGNhc2UgJ0RERCc6CiAgICAgICAgICAgIGNhc2UgJ3cnOgogICAgICAgICAgICBjYXNlICdXJzoKICAgICAgICAgICAgY2FzZSAnREREbyc6CiAgICAgICAgICAgICAgICBpZiAobnVtYmVyID09PSAxKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICct1avVtic7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJy3WgNWkJzsKICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXI7CiAgICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNyAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gMXN0IGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBCYWhhc2EgSW5kb25lc2lhIChpZCkKLy8gYXV0aG9yIDogTW9oYW1tYWQgU2F0cmlvIFV0b21vIDogaHR0cHM6Ly9naXRodWIuY29tL3R5b2sKLy8gcmVmZXJlbmNlOiBodHRwOi8vaWQud2lraXNvdXJjZS5vcmcvd2lraS9QZWRvbWFuX1VtdW1fRWphYW5fQmFoYXNhX0luZG9uZXNpYV95YW5nX0Rpc2VtcHVybmFrYW4KCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdpZCcsIHsKICAgICAgICBtb250aHMgOiAnSmFudWFyaV9GZWJydWFyaV9NYXJldF9BcHJpbF9NZWlfSnVuaV9KdWxpX0FndXN0dXNfU2VwdGVtYmVyX09rdG9iZXJfTm92ZW1iZXJfRGVzZW1iZXInLnNwbGl0KCdfJyksCiAgICAgICAgbW9udGhzU2hvcnQgOiAnSmFuX0ZlYl9NYXJfQXByX01laV9KdW5fSnVsX0Fnc19TZXBfT2t0X05vdl9EZXMnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXMgOiAnTWluZ2d1X1NlbmluX1NlbGFzYV9SYWJ1X0thbWlzX0p1bWF0X1NhYnR1Jy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAnTWluX1Nlbl9TZWxfUmFiX0thbV9KdW1fU2FiJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ01nX1NuX1NsX1JiX0ttX0ptX1NiJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdISC5tbScsCiAgICAgICAgICAgIExUUyA6ICdMVC5zcycsCiAgICAgICAgICAgIEwgOiAnREQvTU0vWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZIFtwdWt1bF0gTFQnLAogICAgICAgICAgICBMTExMIDogJ2RkZGQsIEQgTU1NTSBZWVlZIFtwdWt1bF0gTFQnCiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbVBhcnNlOiAvcGFnaXxzaWFuZ3xzb3JlfG1hbGFtLywKICAgICAgICBtZXJpZGllbUhvdXIgOiBmdW5jdGlvbiAoaG91ciwgbWVyaWRpZW0pIHsKICAgICAgICAgICAgaWYgKGhvdXIgPT09IDEyKSB7CiAgICAgICAgICAgICAgICBob3VyID0gMDsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAobWVyaWRpZW0gPT09ICdwYWdpJykgewogICAgICAgICAgICAgICAgcmV0dXJuIGhvdXI7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobWVyaWRpZW0gPT09ICdzaWFuZycpIHsKICAgICAgICAgICAgICAgIHJldHVybiBob3VyID49IDExID8gaG91ciA6IGhvdXIgKyAxMjsKICAgICAgICAgICAgfSBlbHNlIGlmIChtZXJpZGllbSA9PT0gJ3NvcmUnIHx8IG1lcmlkaWVtID09PSAnbWFsYW0nKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gaG91ciArIDEyOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbSA6IGZ1bmN0aW9uIChob3VycywgbWludXRlcywgaXNMb3dlcikgewogICAgICAgICAgICBpZiAoaG91cnMgPCAxMSkgewogICAgICAgICAgICAgICAgcmV0dXJuICdwYWdpJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VycyA8IDE1KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ3NpYW5nJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VycyA8IDE5KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ3NvcmUnOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuICdtYWxhbSc7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1tIYXJpIGluaSBwdWt1bF0gTFQnLAogICAgICAgICAgICBuZXh0RGF5IDogJ1tCZXNvayBwdWt1bF0gTFQnLAogICAgICAgICAgICBuZXh0V2VlayA6ICdkZGRkIFtwdWt1bF0gTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1tLZW1hcmluIHB1a3VsXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrIDogJ2RkZGQgW2xhbHUgcHVrdWxdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ2RhbGFtICVzJywKICAgICAgICAgICAgcGFzdCA6ICclcyB5YW5nIGxhbHUnLAogICAgICAgICAgICBzIDogJ2JlYmVyYXBhIGRldGlrJywKICAgICAgICAgICAgbSA6ICdzZW1lbml0JywKICAgICAgICAgICAgbW0gOiAnJWQgbWVuaXQnLAogICAgICAgICAgICBoIDogJ3NlamFtJywKICAgICAgICAgICAgaGggOiAnJWQgamFtJywKICAgICAgICAgICAgZCA6ICdzZWhhcmknLAogICAgICAgICAgICBkZCA6ICclZCBoYXJpJywKICAgICAgICAgICAgTSA6ICdzZWJ1bGFuJywKICAgICAgICAgICAgTU0gOiAnJWQgYnVsYW4nLAogICAgICAgICAgICB5IDogJ3NldGFodW4nLAogICAgICAgICAgICB5eSA6ICclZCB0YWh1bicKICAgICAgICB9LAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA3ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiAxc3QgaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKLy8gbW9tZW50LmpzIGxvY2FsZSBjb25maWd1cmF0aW9uCi8vIGxvY2FsZSA6IGljZWxhbmRpYyAoaXMpCi8vIGF1dGhvciA6IEhpbnJpayDDlnJuIFNpZ3Vyw7Bzc29uIDogaHR0cHM6Ly9naXRodWIuY29tL2hpbnJpawoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgZnVuY3Rpb24gcGx1cmFsKG4pIHsKICAgICAgICBpZiAobiAlIDEwMCA9PT0gMTEpIHsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIGlmIChuICUgMTAgPT09IDEpIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2xhdGUobnVtYmVyLCB3aXRob3V0U3VmZml4LCBrZXksIGlzRnV0dXJlKSB7CiAgICAgICAgdmFyIHJlc3VsdCA9IG51bWJlciArICcgJzsKICAgICAgICBzd2l0Y2ggKGtleSkgewogICAgICAgIGNhc2UgJ3MnOgogICAgICAgICAgICByZXR1cm4gd2l0aG91dFN1ZmZpeCB8fCBpc0Z1dHVyZSA\/ICdub2trcmFyIHNla8O6bmR1cicgOiAnbm9ra3J1bSBzZWvDum5kdW0nOwogICAgICAgIGNhc2UgJ20nOgogICAgICAgICAgICByZXR1cm4gd2l0aG91dFN1ZmZpeCA\/ICdtw61uw7p0YScgOiAnbcOtbsO6dHUnOwogICAgICAgIGNhc2UgJ21tJzoKICAgICAgICAgICAgaWYgKHBsdXJhbChudW1iZXIpKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUgPyAnbcOtbsO6dHVyJyA6ICdtw61uw7p0dW0nKTsKICAgICAgICAgICAgfSBlbHNlIGlmICh3aXRob3V0U3VmZml4KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgJ23DrW7DunRhJzsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgJ23DrW7DunR1JzsKICAgICAgICBjYXNlICdoaCc6CiAgICAgICAgICAgIGlmIChwbHVyYWwobnVtYmVyKSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArICh3aXRob3V0U3VmZml4IHx8IGlzRnV0dXJlID8gJ2tsdWtrdXN0dW5kaXInIDogJ2tsdWtrdXN0dW5kdW0nKTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgJ2tsdWtrdXN0dW5kJzsKICAgICAgICBjYXNlICdkJzoKICAgICAgICAgICAgaWYgKHdpdGhvdXRTdWZmaXgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAnZGFndXInOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBpc0Z1dHVyZSA\/ICdkYWcnIDogJ2RlZ2knOwogICAgICAgIGNhc2UgJ2RkJzoKICAgICAgICAgICAgaWYgKHBsdXJhbChudW1iZXIpKSB7CiAgICAgICAgICAgICAgICBpZiAod2l0aG91dFN1ZmZpeCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAnZGFnYXInOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArIChpc0Z1dHVyZSA\/ICdkYWdhJyA6ICdkw7ZndW0nKTsKICAgICAgICAgICAgfSBlbHNlIGlmICh3aXRob3V0U3VmZml4KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgJ2RhZ3VyJzsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKGlzRnV0dXJlID8gJ2RhZycgOiAnZGVnaScpOwogICAgICAgIGNhc2UgJ00nOgogICAgICAgICAgICBpZiAod2l0aG91dFN1ZmZpeCkgewogICAgICAgICAgICAgICAgcmV0dXJuICdtw6FudcOwdXInOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBpc0Z1dHVyZSA\/ICdtw6FudcOwJyA6ICdtw6FudcOwaSc7CiAgICAgICAgY2FzZSAnTU0nOgogICAgICAgICAgICBpZiAocGx1cmFsKG51bWJlcikpIHsKICAgICAgICAgICAgICAgIGlmICh3aXRob3V0U3VmZml4KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArICdtw6FudcOwaXInOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArIChpc0Z1dHVyZSA\/ICdtw6FudcOwaScgOiAnbcOhbnXDsHVtJyk7CiAgICAgICAgICAgIH0gZWxzZSBpZiAod2l0aG91dFN1ZmZpeCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArICdtw6FudcOwdXInOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAoaXNGdXR1cmUgPyAnbcOhbnXDsCcgOiAnbcOhbnXDsGknKTsKICAgICAgICBjYXNlICd5JzoKICAgICAgICAgICAgcmV0dXJuIHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUgPyAnw6FyJyA6ICfDoXJpJzsKICAgICAgICBjYXNlICd5eSc6CiAgICAgICAgICAgIGlmIChwbHVyYWwobnVtYmVyKSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArICh3aXRob3V0U3VmZml4IHx8IGlzRnV0dXJlID8gJ8OhcicgOiAnw6FydW0nKTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUgPyAnw6FyJyA6ICfDoXJpJyk7CiAgICAgICAgfQogICAgfQoKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdpcycsIHsKICAgICAgICBtb250aHMgOiAnamFuw7phcl9mZWJyw7phcl9tYXJzX2FwcsOtbF9tYcOtX2rDum7DrV9qw7psw61fw6Fnw7pzdF9zZXB0ZW1iZXJfb2t0w7NiZXJfbsOzdmVtYmVyX2Rlc2VtYmVyJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJ2phbl9mZWJfbWFyX2Fwcl9tYcOtX2rDum5fasO6bF\/DoWfDul9zZXBfb2t0X27Ds3ZfZGVzJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ3N1bm51ZGFndXJfbcOhbnVkYWd1cl\/DvnJpw7BqdWRhZ3VyX21pw7B2aWt1ZGFndXJfZmltbXR1ZGFndXJfZsO2c3R1ZGFndXJfbGF1Z2FyZGFndXInLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICdzdW5fbcOhbl\/DvnJpX21pw7BfZmltX2bDtnNfbGF1Jy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ1N1X03DoV\/DnnJfTWlfRmlfRsO2X0xhJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdIOm1tJywKICAgICAgICAgICAgTFRTIDogJ0xUOnNzJywKICAgICAgICAgICAgTCA6ICdERC9NTS9ZWVlZJywKICAgICAgICAgICAgTEwgOiAnRC4gTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QuIE1NTU0gWVlZWSBba2wuXSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCwgRC4gTU1NTSBZWVlZIFtrbC5dIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW8OtIGRhZyBrbC5dIExUJywKICAgICAgICAgICAgbmV4dERheSA6ICdbw6EgbW9yZ3VuIGtsLl0gTFQnLAogICAgICAgICAgICBuZXh0V2VlayA6ICdkZGRkIFtrbC5dIExUJywKICAgICAgICAgICAgbGFzdERheSA6ICdbw60gZ8OmciBrbC5dIExUJywKICAgICAgICAgICAgbGFzdFdlZWsgOiAnW3PDrcOwYXN0YV0gZGRkZCBba2wuXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICdlZnRpciAlcycsCiAgICAgICAgICAgIHBhc3QgOiAnZnlyaXIgJXMgc8Otw7BhbicsCiAgICAgICAgICAgIHMgOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIG0gOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIG1tIDogdHJhbnNsYXRlLAogICAgICAgICAgICBoIDogJ2tsdWtrdXN0dW5kJywKICAgICAgICAgICAgaGggOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIGQgOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIGRkIDogdHJhbnNsYXRlLAogICAgICAgICAgICBNIDogdHJhbnNsYXRlLAogICAgICAgICAgICBNTSA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgeSA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgeXkgOiB0cmFuc2xhdGUKICAgICAgICB9LAogICAgICAgIG9yZGluYWxQYXJzZTogL1xkezEsMn1cLi8sCiAgICAgICAgb3JkaW5hbCA6ICclZC4nLAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA0ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiA0dGggaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKLy8gbW9tZW50LmpzIGxvY2FsZSBjb25maWd1cmF0aW9uCi8vIGxvY2FsZSA6IGl0YWxpYW4gKGl0KQovLyBhdXRob3IgOiBMb3JlbnpvIDogaHR0cHM6Ly9naXRodWIuY29tL2FsaWVtCi8vIGF1dGhvcjogTWF0dGlhIExhcmVudGlzOiBodHRwczovL2dpdGh1Yi5jb20vbm9zdGFsZ2lhegoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ2l0JywgewogICAgICAgIG1vbnRocyA6ICdnZW5uYWlvX2ZlYmJyYWlvX21hcnpvX2FwcmlsZV9tYWdnaW9fZ2l1Z25vX2x1Z2xpb19hZ29zdG9fc2V0dGVtYnJlX290dG9icmVfbm92ZW1icmVfZGljZW1icmUnLnNwbGl0KCdfJyksCiAgICAgICAgbW9udGhzU2hvcnQgOiAnZ2VuX2ZlYl9tYXJfYXByX21hZ19naXVfbHVnX2Fnb19zZXRfb3R0X25vdl9kaWMnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXMgOiAnRG9tZW5pY2FfTHVuZWTDrF9NYXJ0ZWTDrF9NZXJjb2xlZMOsX0dpb3ZlZMOsX1ZlbmVyZMOsX1NhYmF0bycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ0RvbV9MdW5fTWFyX01lcl9HaW9fVmVuX1NhYicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICdEX0xfTWFfTWVfR19WX1MnLnNwbGl0KCdfJyksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogJ0hIOm1tJywKICAgICAgICAgICAgTFRTIDogJ0xUOnNzJywKICAgICAgICAgICAgTCA6ICdERC9NTS9ZWVlZJywKICAgICAgICAgICAgTEwgOiAnRCBNTU1NIFlZWVknLAogICAgICAgICAgICBMTEwgOiAnRCBNTU1NIFlZWVkgTFQnLAogICAgICAgICAgICBMTExMIDogJ2RkZGQsIEQgTU1NTSBZWVlZIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICdbT2dnaSBhbGxlXSBMVCcsCiAgICAgICAgICAgIG5leHREYXk6ICdbRG9tYW5pIGFsbGVdIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6ICdkZGRkIFthbGxlXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXk6ICdbSWVyaSBhbGxlXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKHRoaXMuZGF5KCkpIHsKICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnW2xhIHNjb3JzYV0gZGRkZCBbYWxsZV0gTFQnOwogICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnW2xvIHNjb3Jzb10gZGRkZCBbYWxsZV0gTFQnOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBzYW1lRWxzZTogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6IGZ1bmN0aW9uIChzKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gKCgvXlswLTldLiskLykudGVzdChzKSA\/ICd0cmEnIDogJ2luJykgKyAnICcgKyBzOwogICAgICAgICAgICB9LAogICAgICAgICAgICBwYXN0IDogJyVzIGZhJywKICAgICAgICAgICAgcyA6ICdhbGN1bmkgc2Vjb25kaScsCiAgICAgICAgICAgIG0gOiAndW4gbWludXRvJywKICAgICAgICAgICAgbW0gOiAnJWQgbWludXRpJywKICAgICAgICAgICAgaCA6ICd1blwnb3JhJywKICAgICAgICAgICAgaGggOiAnJWQgb3JlJywKICAgICAgICAgICAgZCA6ICd1biBnaW9ybm8nLAogICAgICAgICAgICBkZCA6ICclZCBnaW9ybmknLAogICAgICAgICAgICBNIDogJ3VuIG1lc2UnLAogICAgICAgICAgICBNTSA6ICclZCBtZXNpJywKICAgICAgICAgICAgeSA6ICd1biBhbm5vJywKICAgICAgICAgICAgeXkgOiAnJWQgYW5uaScKICAgICAgICB9LAogICAgICAgIG9yZGluYWxQYXJzZSA6IC9cZHsxLDJ9wrovLAogICAgICAgIG9yZGluYWw6ICclZMK6JywKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNCAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gNHRoIGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBqYXBhbmVzZSAoamEpCi8vIGF1dGhvciA6IExJIExvbmcgOiBodHRwczovL2dpdGh1Yi5jb20vYmFyeW9uCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgnamEnLCB7CiAgICAgICAgbW9udGhzIDogJzHmnIhfMuaciF8z5pyIXzTmnIhfNeaciF825pyIXzfmnIhfOOaciF855pyIXzEw5pyIXzEx5pyIXzEy5pyIJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJzHmnIhfMuaciF8z5pyIXzTmnIhfNeaciF825pyIXzfmnIhfOOaciF855pyIXzEw5pyIXzEx5pyIXzEy5pyIJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ+aXpeabnOaXpV\/mnIjmm5zml6Vf54Gr5puc5pelX+awtOabnOaXpV\/mnKjmm5zml6Vf6YeR5puc5pelX+Wcn+abnOaXpScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ+aXpV\/mnIhf54GrX+awtF\/mnKhf6YeRX+Wcnycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICfml6Vf5pyIX+eBq1\/msLRf5pyoX+mHkV\/lnJ8nLnNwbGl0KCdfJyksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogJ0Fo5pmCbeWIhicsCiAgICAgICAgICAgIExUUyA6ICdMVHPnp5InLAogICAgICAgICAgICBMIDogJ1lZWVkvTU0vREQnLAogICAgICAgICAgICBMTCA6ICdZWVlZ5bm0TeaciETml6UnLAogICAgICAgICAgICBMTEwgOiAnWVlZWeW5tE3mnIhE5pelTFQnLAogICAgICAgICAgICBMTExMIDogJ1lZWVnlubRN5pyIROaXpUxUIGRkZGQnCiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbVBhcnNlOiAv5Y2I5YmNfOWNiOW+jC9pLAogICAgICAgIGlzUE0gOiBmdW5jdGlvbiAoaW5wdXQpIHsKICAgICAgICAgICAgcmV0dXJuIGlucHV0ID09PSAn5Y2I5b6MJzsKICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtIDogZnVuY3Rpb24gKGhvdXIsIG1pbnV0ZSwgaXNMb3dlcikgewogICAgICAgICAgICBpZiAoaG91ciA8IDEyKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ+WNiOWJjSc7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ+WNiOW+jCc7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1vku4rml6VdIExUJywKICAgICAgICAgICAgbmV4dERheSA6ICdb5piO5pelXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ1vmnaXpgLFdZGRkZCBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW+aYqOaXpV0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdb5YmN6YCxXWRkZGQgTFQnLAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAnJXPlvownLAogICAgICAgICAgICBwYXN0IDogJyVz5YmNJywKICAgICAgICAgICAgcyA6ICfmlbDnp5InLAogICAgICAgICAgICBtIDogJzHliIYnLAogICAgICAgICAgICBtbSA6ICclZOWIhicsCiAgICAgICAgICAgIGggOiAnMeaZgumWkycsCiAgICAgICAgICAgIGhoIDogJyVk5pmC6ZaTJywKICAgICAgICAgICAgZCA6ICcx5pelJywKICAgICAgICAgICAgZGQgOiAnJWTml6UnLAogICAgICAgICAgICBNIDogJzHjg7bmnIgnLAogICAgICAgICAgICBNTSA6ICclZOODtuaciCcsCiAgICAgICAgICAgIHkgOiAnMeW5tCcsCiAgICAgICAgICAgIHl5IDogJyVk5bm0JwogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBHZW9yZ2lhbiAoa2EpCi8vIGF1dGhvciA6IElyYWtsaSBKYW5pYXNodmlsaSA6IGh0dHBzOi8vZ2l0aHViLmNvbS9pcmFrbGktamFuaWFzaHZpbGkKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIGZ1bmN0aW9uIG1vbnRoc0Nhc2VSZXBsYWNlKG0sIGZvcm1hdCkgewogICAgICAgIHZhciBtb250aHMgPSB7CiAgICAgICAgICAgICdub21pbmF0aXZlJzogJ+GDmOGDkOGDnOGDleGDkOGDoOGDmF\/hg5fhg5Thg5Hhg5Thg6Dhg5Xhg5Dhg5rhg5hf4YOb4YOQ4YOg4YOi4YOYX+GDkOGDnuGDoOGDmOGDmuGDmF\/hg5vhg5Dhg5jhg6Hhg5hf4YOY4YOV4YOc4YOY4YOh4YOYX+GDmOGDleGDmuGDmOGDoeGDmF\/hg5Dhg5Lhg5Xhg5jhg6Hhg6Lhg51f4YOh4YOU4YOl4YOi4YOU4YOb4YOR4YOU4YOg4YOYX+GDneGDpeGDouGDneGDm+GDkeGDlOGDoOGDmF\/hg5zhg53hg5Thg5vhg5Hhg5Thg6Dhg5hf4YOT4YOU4YOZ4YOU4YOb4YOR4YOU4YOg4YOYJy5zcGxpdCgnXycpLAogICAgICAgICAgICAnYWNjdXNhdGl2ZSc6ICfhg5jhg5Dhg5zhg5Xhg5Dhg6Dhg6Ff4YOX4YOU4YOR4YOU4YOg4YOV4YOQ4YOa4YOhX+GDm+GDkOGDoOGDouGDoV\/hg5Dhg57hg6Dhg5jhg5rhg5jhg6Ff4YOb4YOQ4YOY4YOh4YOhX+GDmOGDleGDnOGDmOGDoeGDoV\/hg5jhg5Xhg5rhg5jhg6Hhg6Ff4YOQ4YOS4YOV4YOY4YOh4YOi4YOhX+GDoeGDlOGDpeGDouGDlOGDm+GDkeGDlOGDoOGDoV\/hg53hg6Xhg6Lhg53hg5vhg5Hhg5Thg6Dhg6Ff4YOc4YOd4YOU4YOb4YOR4YOU4YOg4YOhX+GDk+GDlOGDmeGDlOGDm+GDkeGDlOGDoOGDoScuc3BsaXQoJ18nKQogICAgICAgIH0sCgogICAgICAgIG5vdW5DYXNlID0gKC9EW29EXSAqTU1NTT8vKS50ZXN0KGZvcm1hdCkgPwogICAgICAgICAgICAnYWNjdXNhdGl2ZScgOgogICAgICAgICAgICAnbm9taW5hdGl2ZSc7CgogICAgICAgIHJldHVybiBtb250aHNbbm91bkNhc2VdW20ubW9udGgoKV07CiAgICB9CgogICAgZnVuY3Rpb24gd2Vla2RheXNDYXNlUmVwbGFjZShtLCBmb3JtYXQpIHsKICAgICAgICB2YXIgd2Vla2RheXMgPSB7CiAgICAgICAgICAgICdub21pbmF0aXZlJzogJ+GDmeGDleGDmOGDoOGDkF\/hg53hg6Dhg6jhg5Dhg5Hhg5Dhg5fhg5hf4YOh4YOQ4YOb4YOo4YOQ4YOR4YOQ4YOX4YOYX+GDneGDl+GDruGDqOGDkOGDkeGDkOGDl+GDmF\/hg67hg6Phg5fhg6jhg5Dhg5Hhg5Dhg5fhg5hf4YOe4YOQ4YOg4YOQ4YOh4YOZ4YOU4YOV4YOYX+GDqOGDkOGDkeGDkOGDl+GDmCcuc3BsaXQoJ18nKSwKICAgICAgICAgICAgJ2FjY3VzYXRpdmUnOiAn4YOZ4YOV4YOY4YOg4YOQ4YOhX+GDneGDoOGDqOGDkOGDkeGDkOGDl+GDoV\/hg6Hhg5Dhg5vhg6jhg5Dhg5Hhg5Dhg5fhg6Ff4YOd4YOX4YOu4YOo4YOQ4YOR4YOQ4YOX4YOhX+GDruGDo+GDl+GDqOGDkOGDkeGDkOGDl+GDoV\/hg57hg5Dhg6Dhg5Dhg6Hhg5nhg5Thg5Xhg6Ff4YOo4YOQ4YOR4YOQ4YOX4YOhJy5zcGxpdCgnXycpCiAgICAgICAgfSwKCiAgICAgICAgbm91bkNhc2UgPSAoLyjhg6zhg5jhg5zhg5B84YOo4YOU4YOb4YOT4YOU4YOSKS8pLnRlc3QoZm9ybWF0KSA\/CiAgICAgICAgICAgICdhY2N1c2F0aXZlJyA6CiAgICAgICAgICAgICdub21pbmF0aXZlJzsKCiAgICAgICAgcmV0dXJuIHdlZWtkYXlzW25vdW5DYXNlXVttLmRheSgpXTsKICAgIH0KCiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgna2EnLCB7CiAgICAgICAgbW9udGhzIDogbW9udGhzQ2FzZVJlcGxhY2UsCiAgICAgICAgbW9udGhzU2hvcnQgOiAn4YOY4YOQ4YOcX+GDl+GDlOGDkV\/hg5vhg5Dhg6Bf4YOQ4YOe4YOgX+GDm+GDkOGDmF\/hg5jhg5Xhg5xf4YOY4YOV4YOaX+GDkOGDkuGDlV\/hg6Hhg5Thg6Vf4YOd4YOl4YOiX+GDnOGDneGDlF\/hg5Phg5Thg5knLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXMgOiB3ZWVrZGF5c0Nhc2VSZXBsYWNlLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAn4YOZ4YOV4YOYX+GDneGDoOGDqF\/hg6Hhg5Dhg5tf4YOd4YOX4YOuX+GDruGDo+GDl1\/hg57hg5Dhg6Bf4YOo4YOQ4YORJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ+GDmeGDlV\/hg53hg6Bf4YOh4YOQX+GDneGDl1\/hg67hg6Nf4YOe4YOQX+GDqOGDkCcuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnaDptbSBBJywKICAgICAgICAgICAgTFRTIDogJ2g6bW06c3MgQScsCiAgICAgICAgICAgIEwgOiAnREQvTU0vWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZIExUJywKICAgICAgICAgICAgTExMTCA6ICdkZGRkLCBEIE1NTU0gWVlZWSBMVCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1vhg5Phg6bhg5Thg6FdIExUWy3hg5bhg5RdJywKICAgICAgICAgICAgbmV4dERheSA6ICdb4YOu4YOV4YOQ4YOaXSBMVFst4YOW4YOUXScsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW+GDkuGDo+GDqOGDmOGDnF0gTFRbLeGDluGDlF0nLAogICAgICAgICAgICBuZXh0V2VlayA6ICdb4YOo4YOU4YOb4YOT4YOU4YOSXSBkZGRkIExUWy3hg5bhg5RdJywKICAgICAgICAgICAgbGFzdFdlZWsgOiAnW+GDrOGDmOGDnOGDkF0gZGRkZCBMVC3hg5bhg5QnLAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiBmdW5jdGlvbiAocykgewogICAgICAgICAgICAgICAgcmV0dXJuICgvKOGDrOGDkOGDm+GDmHzhg6zhg6Phg5fhg5h84YOh4YOQ4YOQ4YOX4YOYfOGDrOGDlOGDmuGDmCkvKS50ZXN0KHMpID8KICAgICAgICAgICAgICAgICAgICBzLnJlcGxhY2UoL+GDmCQvLCAn4YOo4YOYJykgOgogICAgICAgICAgICAgICAgICAgIHMgKyAn4YOo4YOYJzsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcGFzdCA6IGZ1bmN0aW9uIChzKSB7CiAgICAgICAgICAgICAgICBpZiAoKC8o4YOs4YOQ4YOb4YOYfOGDrOGDo+GDl+GDmHzhg6Hhg5Dhg5Dhg5fhg5h84YOT4YOm4YOUfOGDl+GDleGDlCkvKS50ZXN0KHMpKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHMucmVwbGFjZSgvKOGDmHzhg5QpJC8sICfhg5jhg6Eg4YOs4YOY4YOcJyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoKC\/hg6zhg5Thg5rhg5gvKS50ZXN0KHMpKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHMucmVwbGFjZSgv4YOs4YOU4YOa4YOYJC8sICfhg6zhg5rhg5jhg6Eg4YOs4YOY4YOcJyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHMgOiAn4YOg4YOQ4YOb4YOT4YOU4YOc4YOY4YOb4YOUIOGDrOGDkOGDm+GDmCcsCiAgICAgICAgICAgIG0gOiAn4YOs4YOj4YOX4YOYJywKICAgICAgICAgICAgbW0gOiAnJWQg4YOs4YOj4YOX4YOYJywKICAgICAgICAgICAgaCA6ICfhg6Hhg5Dhg5Dhg5fhg5gnLAogICAgICAgICAgICBoaCA6ICclZCDhg6Hhg5Dhg5Dhg5fhg5gnLAogICAgICAgICAgICBkIDogJ+GDk+GDpuGDlCcsCiAgICAgICAgICAgIGRkIDogJyVkIOGDk+GDpuGDlCcsCiAgICAgICAgICAgIE0gOiAn4YOX4YOV4YOUJywKICAgICAgICAgICAgTU0gOiAnJWQg4YOX4YOV4YOUJywKICAgICAgICAgICAgeSA6ICfhg6zhg5Thg5rhg5gnLAogICAgICAgICAgICB5eSA6ICclZCDhg6zhg5Thg5rhg5gnCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsUGFyc2U6IC8wfDEt4YOa4YOYfOGDm+GDlC1cZHsxLDJ9fFxkezEsMn0t4YOULywKICAgICAgICBvcmRpbmFsIDogZnVuY3Rpb24gKG51bWJlcikgewogICAgICAgICAgICBpZiAobnVtYmVyID09PSAwKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAobnVtYmVyID09PSAxKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJy3hg5rhg5gnOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoKG51bWJlciA8IDIwKSB8fCAobnVtYmVyIDw9IDEwMCAmJiAobnVtYmVyICUgMjAgPT09IDApKSB8fCAobnVtYmVyICUgMTAwID09PSAwKSkgewogICAgICAgICAgICAgICAgcmV0dXJuICfhg5vhg5QtJyArIG51bWJlcjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICct4YOUJzsKICAgICAgICB9LAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsCiAgICAgICAgICAgIGRveSA6IDcKICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDoga2htZXIgKGttKQovLyBhdXRob3IgOiBLcnV5IFZhbm5hIDogaHR0cHM6Ly9naXRodWIuY29tL2tydXl2YW5uYQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ2ttJywgewogICAgICAgIG1vbnRoczogJ+GemOGegOGemuGetl\/hnoDhnrvhnpjhn5Lhnpfhn4hf4Z6Y4Z634Z6T4Z62X+GemOGfgeGen+Getl\/hnqfhnp\/hnpfhnrZf4Z6Y4Z634Z6Q4Z674Z6T4Z62X+GegOGegOGfkuGegOGeiuGetl\/hnp\/hnrjhnqDhnrZf4Z6A4Z6J4Z+S4Z6J4Z62X+Gej+Geu+Gem+Getl\/hnpzhnrfhnoXhn5LhnobhnrfhnoDhnrZf4Z6S4Z+S4Z6T4Z68Jy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0OiAn4Z6Y4Z6A4Z6a4Z62X+GegOGeu+GemOGfkuGel+GfiF\/hnpjhnrfhnpPhnrZf4Z6Y4Z+B4Z6f4Z62X+Gep+Gen+Gel+Getl\/hnpjhnrfhnpDhnrvhnpPhnrZf4Z6A4Z6A4Z+S4Z6A4Z6K4Z62X+Gen+GeuOGeoOGetl\/hnoDhnonhn5LhnonhnrZf4Z6P4Z674Z6b4Z62X+GenOGet+GeheGfkuGehuGet+GegOGetl\/hnpLhn5LhnpPhnrwnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXM6ICfhnqLhnrbhnpHhnrfhno\/hn5Lhnplf4Z6F4Z+Q4Z6T4Z+S4Z6RX+GeouGehOGfkuGeguGetuGeml\/hnpbhnrvhnpJf4Z6W4Z+S4Z6a4Z6g4Z6f4Z+S4Z6U4Z6P4Z634Z+NX+Gen+Geu+GegOGfkuGeml\/hnp\/hn4Xhnprhn40nLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydDogJ+GeouGetuGekeGet+Gej+GfkuGemV\/hnoXhn5DhnpPhn5LhnpFf4Z6i4Z6E4Z+S4Z6C4Z624Z6aX+GeluGeu+Gekl\/hnpbhn5LhnprhnqDhnp\/hn5LhnpThno\/hnrfhn41f4Z6f4Z674Z6A4Z+S4Z6aX+Gen+GfheGemuGfjScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbjogJ+GeouGetuGekeGet+Gej+GfkuGemV\/hnoXhn5DhnpPhn5LhnpFf4Z6i4Z6E4Z+S4Z6C4Z624Z6aX+GeluGeu+Gekl\/hnpbhn5LhnprhnqDhnp\/hn5LhnpThno\/hnrfhn41f4Z6f4Z674Z6A4Z+S4Z6aX+Gen+GfheGemuGfjScuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdDogewogICAgICAgICAgICBMVDogJ0hIOm1tJywKICAgICAgICAgICAgTFRTIDogJ0xUOnNzJywKICAgICAgICAgICAgTDogJ0REL01NL1lZWVknLAogICAgICAgICAgICBMTDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMOiAnRCBNTU1NIFlZWVkgTFQnLAogICAgICAgICAgICBMTExMOiAnZGRkZCwgRCBNTU1NIFlZWVkgTFQnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhcjogewogICAgICAgICAgICBzYW1lRGF5OiAnW+GekOGfkuGehOGfg+Gek+GfiCDhnpjhn4nhn4ThnoRdIExUJywKICAgICAgICAgICAgbmV4dERheTogJ1vhnp\/hn5LhnqLhn4LhnoAg4Z6Y4Z+J4Z+E4Z6EXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrOiAnZGRkZCBb4Z6Y4Z+J4Z+E4Z6EXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXk6ICdb4Z6Y4Z+S4Z6f4Z634Z6b4Z6Y4Z634Z6JIOGemOGfieGfhOGehF0gTFQnLAogICAgICAgICAgICBsYXN0V2VlazogJ2RkZGQgW+Gen+GelOGfkuGej+GetuGeoOGfjeGemOGeu+Gek10gW+GemOGfieGfhOGehF0gTFQnLAogICAgICAgICAgICBzYW1lRWxzZTogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWU6IHsKICAgICAgICAgICAgZnV0dXJlOiAnJXPhnpHhn4Dhno8nLAogICAgICAgICAgICBwYXN0OiAnJXPhnpjhnrvhnpMnLAogICAgICAgICAgICBzOiAn4Z6U4Z+J4Z674Z6T4Z+S4Z6Y4Z624Z6T4Z6c4Z634Z6T4Z624Z6R4Z64JywKICAgICAgICAgICAgbTogJ+GemOGeveGemeGek+GetuGekeGeuCcsCiAgICAgICAgICAgIG1tOiAnJWQg4Z6T4Z624Z6R4Z64JywKICAgICAgICAgICAgaDogJ+GemOGeveGemeGemOGfieGfhOGehCcsCiAgICAgICAgICAgIGhoOiAnJWQg4Z6Y4Z+J4Z+E4Z6EJywKICAgICAgICAgICAgZDogJ+GemOGeveGemeGekOGfkuGehOGfgycsCiAgICAgICAgICAgIGRkOiAnJWQg4Z6Q4Z+S4Z6E4Z+DJywKICAgICAgICAgICAgTTogJ+GemOGeveGemeGegeGfgicsCiAgICAgICAgICAgIE1NOiAnJWQg4Z6B4Z+CJywKICAgICAgICAgICAgeTogJ+GemOGeveGemeGehuGfkuGek+GetuGfhicsCiAgICAgICAgICAgIHl5OiAnJWQg4Z6G4Z+S4Z6T4Z624Z+GJwogICAgICAgIH0sCiAgICAgICAgd2VlazogewogICAgICAgICAgICBkb3c6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3k6IDQgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gNHRoIGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBrb3JlYW4gKGtvKQovLwovLyBhdXRob3JzCi8vCi8vIC0gS3l1bmd3b29rLCBQYXJrIDogaHR0cHM6Ly9naXRodWIuY29tL2t5dW5ndzAwawovLyAtIEplZWV5dWwgTGVlIDxqZWVleXVsQGdtYWlsLmNvbT4KKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ2tvJywgewogICAgICAgIG1vbnRocyA6ICcx7JuUXzLsm5RfM+yblF807JuUXzXsm5RfNuyblF837JuUXzjsm5RfOeyblF8xMOyblF8xMeyblF8xMuyblCcuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICcx7JuUXzLsm5RfM+yblF807JuUXzXsm5RfNuyblF837JuUXzjsm5RfOeyblF8xMOyblF8xMeyblF8xMuyblCcuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICfsnbzsmpTsnbxf7JuU7JqU7J28X+2ZlOyalOydvF\/siJjsmpTsnbxf66qp7JqU7J28X+q4iOyalOydvF\/thqDsmpTsnbwnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICfsnbxf7JuUX+2ZlF\/siJhf66qpX+q4iF\/thqAnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNNaW4gOiAn7J28X+yblF\/tmZRf7IiYX+uqqV\/quIhf7YagJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdBIGjsi5wgbeu2hCcsCiAgICAgICAgICAgIExUUyA6ICdBIGjsi5wgbeu2hCBz7LSIJywKICAgICAgICAgICAgTCA6ICdZWVlZLk1NLkREJywKICAgICAgICAgICAgTEwgOiAnWVlZWeuFhCBNTU1NIETsnbwnLAogICAgICAgICAgICBMTEwgOiAnWVlZWeuFhCBNTU1NIETsnbwgTFQnLAogICAgICAgICAgICBMTExMIDogJ1lZWVnrhYQgTU1NTSBE7J28IGRkZGQgTFQnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6ICfsmKTripggTFQnLAogICAgICAgICAgICBuZXh0RGF5IDogJ+uCtOydvCBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ+yWtOygnCBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrIDogJ+yngOuCnOyjvCBkZGRkIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJyVzIO2bhCcsCiAgICAgICAgICAgIHBhc3QgOiAnJXMg7KCEJywKICAgICAgICAgICAgcyA6ICfrqofstIgnLAogICAgICAgICAgICBzcyA6ICclZOy0iCcsCiAgICAgICAgICAgIG0gOiAn7J2867aEJywKICAgICAgICAgICAgbW0gOiAnJWTrtoQnLAogICAgICAgICAgICBoIDogJ+2VnOyLnOqwhCcsCiAgICAgICAgICAgIGhoIDogJyVk7Iuc6rCEJywKICAgICAgICAgICAgZCA6ICftlZjro6gnLAogICAgICAgICAgICBkZCA6ICclZOydvCcsCiAgICAgICAgICAgIE0gOiAn7ZWc64usJywKICAgICAgICAgICAgTU0gOiAnJWTri6wnLAogICAgICAgICAgICB5IDogJ+ydvOuFhCcsCiAgICAgICAgICAgIHl5IDogJyVk64WEJwogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbFBhcnNlIDogL1xkezEsMn3snbwvLAogICAgICAgIG9yZGluYWwgOiAnJWTsnbwnLAogICAgICAgIG1lcmlkaWVtUGFyc2UgOiAv7Jik7KCEfOyYpO2bhC8sCiAgICAgICAgaXNQTSA6IGZ1bmN0aW9uICh0b2tlbikgewogICAgICAgICAgICByZXR1cm4gdG9rZW4gPT09ICfsmKTtm4QnOwogICAgICAgIH0sCiAgICAgICAgbWVyaWRpZW0gOiBmdW5jdGlvbiAoaG91ciwgbWludXRlLCBpc1VwcGVyKSB7CiAgICAgICAgICAgIHJldHVybiBob3VyIDwgMTIgPyAn7Jik7KCEJyA6ICfsmKTtm4QnOwogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBMdXhlbWJvdXJnaXNoIChsYikKLy8gYXV0aG9yIDogbXdlaW1lcnNraXJjaCA6IGh0dHBzOi8vZ2l0aHViLmNvbS9td2VpbWVyc2tpcmNoLCBEYXZpZCBSYWlzb24gOiBodHRwczovL2dpdGh1Yi5jb20va3dpc2F0egoKLy8gTm90ZTogTHV4ZW1ib3VyZ2lzaCBoYXMgYSB2ZXJ5IHBhcnRpY3VsYXIgcGhvbm9sb2dpY2FsIHJ1bGUgKCdFaWZlbGVyIFJlZ2VsJykgdGhhdCBjYXVzZXMgdGhlCi8vIGRlbGV0aW9uIG9mIHRoZSBmaW5hbCAnbicgaW4gY2VydGFpbiBjb250ZXh0cy4gVGhhdCdzIHdoYXQgdGhlICdlaWZlbGVyUmVnZWxBcHBsaWVzVG9XZWVrZGF5JwovLyBhbmQgJ2VpZmVsZXJSZWdlbEFwcGxpZXNUb051bWJlcicgbWV0aG9kcyBhcmUgbWVhbnQgZm9yCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICBmdW5jdGlvbiBwcm9jZXNzUmVsYXRpdmVUaW1lKG51bWJlciwgd2l0aG91dFN1ZmZpeCwga2V5LCBpc0Z1dHVyZSkgewogICAgICAgIHZhciBmb3JtYXQgPSB7CiAgICAgICAgICAgICdtJzogWydlbmcgTWludXR0JywgJ2VuZ2VyIE1pbnV0dCddLAogICAgICAgICAgICAnaCc6IFsnZW5nIFN0b25uJywgJ2VuZ2VyIFN0b25uJ10sCiAgICAgICAgICAgICdkJzogWydlZW4gRGFnJywgJ2VuZ2VtIERhZyddLAogICAgICAgICAgICAnTSc6IFsnZWUgTW91bnQnLCAnZW5nZW0gTW91bnQnXSwKICAgICAgICAgICAgJ3knOiBbJ2VlIEpvZXInLCAnZW5nZW0gSm9lciddCiAgICAgICAgfTsKICAgICAgICByZXR1cm4gd2l0aG91dFN1ZmZpeCA\/IGZvcm1hdFtrZXldWzBdIDogZm9ybWF0W2tleV1bMV07CiAgICB9CgogICAgZnVuY3Rpb24gcHJvY2Vzc0Z1dHVyZVRpbWUoc3RyaW5nKSB7CiAgICAgICAgdmFyIG51bWJlciA9IHN0cmluZy5zdWJzdHIoMCwgc3RyaW5nLmluZGV4T2YoJyAnKSk7CiAgICAgICAgaWYgKGVpZmVsZXJSZWdlbEFwcGxpZXNUb051bWJlcihudW1iZXIpKSB7CiAgICAgICAgICAgIHJldHVybiAnYSAnICsgc3RyaW5nOwogICAgICAgIH0KICAgICAgICByZXR1cm4gJ2FuICcgKyBzdHJpbmc7CiAgICB9CgogICAgZnVuY3Rpb24gcHJvY2Vzc1Bhc3RUaW1lKHN0cmluZykgewogICAgICAgIHZhciBudW1iZXIgPSBzdHJpbmcuc3Vic3RyKDAsIHN0cmluZy5pbmRleE9mKCcgJykpOwogICAgICAgIGlmIChlaWZlbGVyUmVnZWxBcHBsaWVzVG9OdW1iZXIobnVtYmVyKSkgewogICAgICAgICAgICByZXR1cm4gJ3ZpcnUgJyArIHN0cmluZzsKICAgICAgICB9CiAgICAgICAgcmV0dXJuICd2aXJ1biAnICsgc3RyaW5nOwogICAgfQoKICAgIC8qKgogICAgICogUmV0dXJucyB0cnVlIGlmIHRoZSB3b3JkIGJlZm9yZSB0aGUgZ2l2ZW4gbnVtYmVyIGxvc2VzIHRoZSAnLW4nIGVuZGluZy4KICAgICAqIGUuZy4gJ2FuIDEwIERlZWcnIGJ1dCAnYSA1IERlZWcnCiAgICAgKgogICAgICogQHBhcmFtIG51bWJlciB7aW50ZWdlcn0KICAgICAqIEByZXR1cm5zIHtib29sZWFufQogICAgICovCiAgICBmdW5jdGlvbiBlaWZlbGVyUmVnZWxBcHBsaWVzVG9OdW1iZXIobnVtYmVyKSB7CiAgICAgICAgbnVtYmVyID0gcGFyc2VJbnQobnVtYmVyLCAxMCk7CiAgICAgICAgaWYgKGlzTmFOKG51bWJlcikpIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgICBpZiAobnVtYmVyIDwgMCkgewogICAgICAgICAgICAvLyBOZWdhdGl2ZSBOdW1iZXIgLS0+IGFsd2F5cyB0cnVlCiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gZWxzZSBpZiAobnVtYmVyIDwgMTApIHsKICAgICAgICAgICAgLy8gT25seSAxIGRpZ2l0CiAgICAgICAgICAgIGlmICg0IDw9IG51bWJlciAmJiBudW1iZXIgPD0gNykgewogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0gZWxzZSBpZiAobnVtYmVyIDwgMTAwKSB7CiAgICAgICAgICAgIC8vIDIgZGlnaXRzCiAgICAgICAgICAgIHZhciBsYXN0RGlnaXQgPSBudW1iZXIgJSAxMCwgZmlyc3REaWdpdCA9IG51bWJlciAvIDEwOwogICAgICAgICAgICBpZiAobGFzdERpZ2l0ID09PSAwKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZWlmZWxlclJlZ2VsQXBwbGllc1RvTnVtYmVyKGZpcnN0RGlnaXQpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBlaWZlbGVyUmVnZWxBcHBsaWVzVG9OdW1iZXIobGFzdERpZ2l0KTsKICAgICAgICB9IGVsc2UgaWYgKG51bWJlciA8IDEwMDAwKSB7CiAgICAgICAgICAgIC8vIDMgb3IgNCBkaWdpdHMgLS0+IHJlY3Vyc2l2ZWx5IGNoZWNrIGZpcnN0IGRpZ2l0CiAgICAgICAgICAgIHdoaWxlIChudW1iZXIgPj0gMTApIHsKICAgICAgICAgICAgICAgIG51bWJlciA9IG51bWJlciAvIDEwOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBlaWZlbGVyUmVnZWxBcHBsaWVzVG9OdW1iZXIobnVtYmVyKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAvLyBBbnl0aGluZyBsYXJnZXIgdGhhbiA0IGRpZ2l0czogcmVjdXJzaXZlbHkgY2hlY2sgZmlyc3Qgbi0zIGRpZ2l0cwogICAgICAgICAgICBudW1iZXIgPSBudW1iZXIgLyAxMDAwOwogICAgICAgICAgICByZXR1cm4gZWlmZWxlclJlZ2VsQXBwbGllc1RvTnVtYmVyKG51bWJlcik7CiAgICAgICAgfQogICAgfQoKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdsYicsIHsKICAgICAgICBtb250aHM6ICdKYW51YXJfRmVicnVhcl9Nw6RlcnpfQWJyw6tsbF9NZWVfSnVuaV9KdWxpX0F1Z3VzdF9TZXB0ZW1iZXJfT2t0b2Jlcl9Ob3ZlbWJlcl9EZXplbWJlcicuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydDogJ0phbi5fRmVici5fTXJ6Ll9BYnIuX01lZV9KdW4uX0p1bC5fQXVnLl9TZXB0Ll9Pa3QuX05vdi5fRGV6Licuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5czogJ1Nvbm5kZWdfTcOpaW5kZWdfRMOrbnNjaGRlZ19Nw6t0dHdvY2hfRG9ubmVzY2hkZWdfRnJlaWRlZ19TYW1zY2hkZWcnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydDogJ1NvLl9Nw6kuX0TDqy5fTcOrLl9Eby5fRnIuX1NhLicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbjogJ1NvX03DqV9Ew6tfTcOrX0RvX0ZyX1NhJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0OiB7CiAgICAgICAgICAgIExUOiAnSDptbSBbQXVlcl0nLAogICAgICAgICAgICBMVFM6ICdIOm1tOnNzIFtBdWVyXScsCiAgICAgICAgICAgIEw6ICdERC5NTS5ZWVlZJywKICAgICAgICAgICAgTEw6ICdELiBNTU1NIFlZWVknLAogICAgICAgICAgICBMTEw6ICdELiBNTU1NIFlZWVkgTFQnLAogICAgICAgICAgICBMTExMOiAnZGRkZCwgRC4gTU1NTSBZWVlZIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXI6IHsKICAgICAgICAgICAgc2FtZURheTogJ1tIYXV0IHVtXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlOiAnTCcsCiAgICAgICAgICAgIG5leHREYXk6ICdbTXVlciB1bV0gTFQnLAogICAgICAgICAgICBuZXh0V2VlazogJ2RkZGQgW3VtXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXk6ICdbR8Orc2NodGVyIHVtXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAvLyBEaWZmZXJlbnQgZGF0ZSBzdHJpbmcgZm9yICdEw6tuc2NoZGVnJyAoVHVlc2RheSkgYW5kICdEb25uZXNjaGRlZycgKFRodXJzZGF5KSBkdWUgdG8gcGhvbm9sb2dpY2FsIHJ1bGUKICAgICAgICAgICAgICAgIHN3aXRjaCAodGhpcy5kYXkoKSkgewogICAgICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnW0xlc2NodGVuXSBkZGRkIFt1bV0gTFQnOwogICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnW0xlc2NodGVdIGRkZGQgW3VtXSBMVCc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogcHJvY2Vzc0Z1dHVyZVRpbWUsCiAgICAgICAgICAgIHBhc3QgOiBwcm9jZXNzUGFzdFRpbWUsCiAgICAgICAgICAgIHMgOiAnZSBwdWVyIFNla29ubmVuJywKICAgICAgICAgICAgbSA6IHByb2Nlc3NSZWxhdGl2ZVRpbWUsCiAgICAgICAgICAgIG1tIDogJyVkIE1pbnV0dGVuJywKICAgICAgICAgICAgaCA6IHByb2Nlc3NSZWxhdGl2ZVRpbWUsCiAgICAgICAgICAgIGhoIDogJyVkIFN0b25uZW4nLAogICAgICAgICAgICBkIDogcHJvY2Vzc1JlbGF0aXZlVGltZSwKICAgICAgICAgICAgZGQgOiAnJWQgRGVlZycsCiAgICAgICAgICAgIE0gOiBwcm9jZXNzUmVsYXRpdmVUaW1lLAogICAgICAgICAgICBNTSA6ICclZCBNw6lpbnQnLAogICAgICAgICAgICB5IDogcHJvY2Vzc1JlbGF0aXZlVGltZSwKICAgICAgICAgICAgeXkgOiAnJWQgSm9lcicKICAgICAgICB9LAogICAgICAgIG9yZGluYWxQYXJzZTogL1xkezEsMn1cLi8sCiAgICAgICAgb3JkaW5hbDogJyVkLicsCiAgICAgICAgd2VlazogewogICAgICAgICAgICBkb3c6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3k6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogTGl0aHVhbmlhbiAobHQpCi8vIGF1dGhvciA6IE1pbmRhdWdhcyBNb3rFq3JhcyA6IGh0dHBzOi8vZ2l0aHViLmNvbS9tbW96dXJhcwoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgdmFyIHVuaXRzID0gewogICAgICAgICdtJyA6ICdtaW51dMSXX21pbnV0xJdzX21pbnV0xJknLAogICAgICAgICdtbSc6ICdtaW51dMSXc19taW51xI1pxbNfbWludXRlcycsCiAgICAgICAgJ2gnIDogJ3ZhbGFuZGFfdmFsYW5kb3NfdmFsYW5kxIUnLAogICAgICAgICdoaCc6ICd2YWxhbmRvc192YWxhbmTFs192YWxhbmRhcycsCiAgICAgICAgJ2QnIDogJ2RpZW5hX2RpZW5vc19kaWVuxIUnLAogICAgICAgICdkZCc6ICdkaWVub3NfZGllbsWzX2RpZW5hcycsCiAgICAgICAgJ00nIDogJ23El251b19txJduZXNpb19txJduZXPErycsCiAgICAgICAgJ01NJzogJ23El25lc2lhaV9txJduZXNpxbNfbcSXbmVzaXVzJywKICAgICAgICAneScgOiAnbWV0YWlfbWV0xbNfbWV0dXMnLAogICAgICAgICd5eSc6ICdtZXRhaV9tZXTFs19tZXR1cycKICAgIH0sCiAgICB3ZWVrRGF5cyA9ICdzZWttYWRpZW5pc19waXJtYWRpZW5pc19hbnRyYWRpZW5pc190cmXEjWlhZGllbmlzX2tldHZpcnRhZGllbmlzX3Blbmt0YWRpZW5pc1\/FoWXFoXRhZGllbmlzJy5zcGxpdCgnXycpOwoKICAgIGZ1bmN0aW9uIHRyYW5zbGF0ZVNlY29uZHMobnVtYmVyLCB3aXRob3V0U3VmZml4LCBrZXksIGlzRnV0dXJlKSB7CiAgICAgICAgaWYgKHdpdGhvdXRTdWZmaXgpIHsKICAgICAgICAgICAgcmV0dXJuICdrZWxpb3Mgc2VrdW5kxJdzJzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gaXNGdXR1cmUgPyAna2VsacWzIHNla3VuZMW+acWzJyA6ICdrZWxpYXMgc2VrdW5kZXMnOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2xhdGVTaW5ndWxhcihudW1iZXIsIHdpdGhvdXRTdWZmaXgsIGtleSwgaXNGdXR1cmUpIHsKICAgICAgICByZXR1cm4gd2l0aG91dFN1ZmZpeCA\/IGZvcm1zKGtleSlbMF0gOiAoaXNGdXR1cmUgPyBmb3JtcyhrZXkpWzFdIDogZm9ybXMoa2V5KVsyXSk7CiAgICB9CgogICAgZnVuY3Rpb24gc3BlY2lhbChudW1iZXIpIHsKICAgICAgICByZXR1cm4gbnVtYmVyICUgMTAgPT09IDAgfHwgKG51bWJlciA+IDEwICYmIG51bWJlciA8IDIwKTsKICAgIH0KCiAgICBmdW5jdGlvbiBmb3JtcyhrZXkpIHsKICAgICAgICByZXR1cm4gdW5pdHNba2V5XS5zcGxpdCgnXycpOwogICAgfQoKICAgIGZ1bmN0aW9uIHRyYW5zbGF0ZShudW1iZXIsIHdpdGhvdXRTdWZmaXgsIGtleSwgaXNGdXR1cmUpIHsKICAgICAgICB2YXIgcmVzdWx0ID0gbnVtYmVyICsgJyAnOwogICAgICAgIGlmIChudW1iZXIgPT09IDEpIHsKICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArIHRyYW5zbGF0ZVNpbmd1bGFyKG51bWJlciwgd2l0aG91dFN1ZmZpeCwga2V5WzBdLCBpc0Z1dHVyZSk7CiAgICAgICAgfSBlbHNlIGlmICh3aXRob3V0U3VmZml4KSB7CiAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAoc3BlY2lhbChudW1iZXIpID8gZm9ybXMoa2V5KVsxXSA6IGZvcm1zKGtleSlbMF0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGlmIChpc0Z1dHVyZSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArIGZvcm1zKGtleSlbMV07CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKHNwZWNpYWwobnVtYmVyKSA\/IGZvcm1zKGtleSlbMV0gOiBmb3JtcyhrZXkpWzJdKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiByZWxhdGl2ZVdlZWtEYXkobW9tZW50LCBmb3JtYXQpIHsKICAgICAgICB2YXIgbm9taW5hdGl2ZSA9IGZvcm1hdC5pbmRleE9mKCdkZGRkIEhIOm1tJykgPT09IC0xLAogICAgICAgICAgICB3ZWVrRGF5ID0gd2Vla0RheXNbbW9tZW50LmRheSgpXTsKCiAgICAgICAgcmV0dXJuIG5vbWluYXRpdmUgPyB3ZWVrRGF5IDogd2Vla0RheS5zdWJzdHJpbmcoMCwgd2Vla0RheS5sZW5ndGggLSAyKSArICfEryc7CiAgICB9CgogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ2x0JywgewogICAgICAgIG1vbnRocyA6ICdzYXVzaW9fdmFzYXJpb19rb3ZvX2JhbGFuZMW+aW9fZ2VndcW+xJdzX2JpcsW+ZWxpb19saWVwb3NfcnVncGrFq8SNaW9fcnVnc8SXam9fc3BhbGlvX2xhcGtyacSNaW9fZ3J1b2TFvmlvJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJ3NhdV92YXNfa292X2JhbF9nZWdfYmlyX2xpZV9yZ3BfcmdzX3NwYV9sYXBfZ3JkJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogcmVsYXRpdmVXZWVrRGF5LAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAnU2VrX1Bpcl9BbnRfVHJlX0tldF9QZW5fxaBlxaEnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNNaW4gOiAnU19QX0FfVF9LX1BuX8WgJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdISDptbScsCiAgICAgICAgICAgIExUUyA6ICdMVDpzcycsCiAgICAgICAgICAgIEwgOiAnWVlZWS1NTS1ERCcsCiAgICAgICAgICAgIExMIDogJ1lZWVkgW20uXSBNTU1NIEQgW2QuXScsCiAgICAgICAgICAgIExMTCA6ICdZWVlZIFttLl0gTU1NTSBEIFtkLl0sIExUIFt2YWwuXScsCiAgICAgICAgICAgIExMTEwgOiAnWVlZWSBbbS5dIE1NTU0gRCBbZC5dLCBkZGRkLCBMVCBbdmFsLl0nLAogICAgICAgICAgICBsIDogJ1lZWVktTU0tREQnLAogICAgICAgICAgICBsbCA6ICdZWVlZIFttLl0gTU1NTSBEIFtkLl0nLAogICAgICAgICAgICBsbGwgOiAnWVlZWSBbbS5dIE1NTU0gRCBbZC5dLCBMVCBbdmFsLl0nLAogICAgICAgICAgICBsbGxsIDogJ1lZWVkgW20uXSBNTU1NIEQgW2QuXSwgZGRkLCBMVCBbdmFsLl0nCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6ICdbxaBpYW5kaWVuXSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW1J5dG9qXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1tWYWthcl0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdbUHJhxJdqdXPEr10gZGRkZCBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICdwbyAlcycsCiAgICAgICAgICAgIHBhc3QgOiAncHJpZcWhICVzJywKICAgICAgICAgICAgcyA6IHRyYW5zbGF0ZVNlY29uZHMsCiAgICAgICAgICAgIG0gOiB0cmFuc2xhdGVTaW5ndWxhciwKICAgICAgICAgICAgbW0gOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIGggOiB0cmFuc2xhdGVTaW5ndWxhciwKICAgICAgICAgICAgaGggOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIGQgOiB0cmFuc2xhdGVTaW5ndWxhciwKICAgICAgICAgICAgZGQgOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIE0gOiB0cmFuc2xhdGVTaW5ndWxhciwKICAgICAgICAgICAgTU0gOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIHkgOiB0cmFuc2xhdGVTaW5ndWxhciwKICAgICAgICAgICAgeXkgOiB0cmFuc2xhdGUKICAgICAgICB9LAogICAgICAgIG9yZGluYWxQYXJzZTogL1xkezEsMn0tb2ppLywKICAgICAgICBvcmRpbmFsIDogZnVuY3Rpb24gKG51bWJlcikgewogICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJy1vamknOwogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogbGF0dmlhbiAobHYpCi8vIGF1dGhvciA6IEtyaXN0YXBzIEthcmxzb25zIDogaHR0cHM6Ly9naXRodWIuY29tL3NrYWtyaQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgdmFyIHVuaXRzID0gewogICAgICAgICdtbSc6ICdtaW7Fq3RpX21pbsWrdGVzX21pbsWrdGVfbWluxat0ZXMnLAogICAgICAgICdoaCc6ICdzdHVuZHVfc3R1bmRhc19zdHVuZGFfc3R1bmRhcycsCiAgICAgICAgJ2RkJzogJ2RpZW51X2RpZW5hc19kaWVuYV9kaWVuYXMnLAogICAgICAgICdNTSc6ICdtxJNuZXNpX23Ek25lxaF1c19txJNuZXNpc19txJNuZcWhaScsCiAgICAgICAgJ3l5JzogJ2dhZHVfZ2FkdXNfZ2Fkc19nYWRpJwogICAgfTsKCiAgICBmdW5jdGlvbiBmb3JtYXQod29yZCwgbnVtYmVyLCB3aXRob3V0U3VmZml4KSB7CiAgICAgICAgdmFyIGZvcm1zID0gd29yZC5zcGxpdCgnXycpOwogICAgICAgIGlmICh3aXRob3V0U3VmZml4KSB7CiAgICAgICAgICAgIHJldHVybiBudW1iZXIgJSAxMCA9PT0gMSAmJiBudW1iZXIgIT09IDExID8gZm9ybXNbMl0gOiBmb3Jtc1szXTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gbnVtYmVyICUgMTAgPT09IDEgJiYgbnVtYmVyICE9PSAxMSA\/IGZvcm1zWzBdIDogZm9ybXNbMV07CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIHJlbGF0aXZlVGltZVdpdGhQbHVyYWwobnVtYmVyLCB3aXRob3V0U3VmZml4LCBrZXkpIHsKICAgICAgICByZXR1cm4gbnVtYmVyICsgJyAnICsgZm9ybWF0KHVuaXRzW2tleV0sIG51bWJlciwgd2l0aG91dFN1ZmZpeCk7CiAgICB9CgogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ2x2JywgewogICAgICAgIG1vbnRocyA6ICdqYW52xIFyaXNfZmVicnXEgXJpc19tYXJ0c19hcHLEq2xpc19tYWlqc19qxatuaWpzX2rFq2xpanNfYXVndXN0c19zZXB0ZW1icmlzX29rdG9icmlzX25vdmVtYnJpc19kZWNlbWJyaXMnLnNwbGl0KCdfJyksCiAgICAgICAgbW9udGhzU2hvcnQgOiAnamFuX2ZlYl9tYXJfYXByX21haV9qxatuX2rFq2xfYXVnX3NlcF9va3Rfbm92X2RlYycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICdzdsSTdGRpZW5hX3Bpcm1kaWVuYV9vdHJkaWVuYV90cmXFoWRpZW5hX2NldHVydGRpZW5hX3BpZWt0ZGllbmFfc2VzdGRpZW5hJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAnU3ZfUF9PX1RfQ19Qa19TJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ1N2X1BfT19UX0NfUGtfUycuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnSEg6bW0nLAogICAgICAgICAgICBMVFMgOiAnTFQ6c3MnLAogICAgICAgICAgICBMIDogJ0RELk1NLllZWVknLAogICAgICAgICAgICBMTCA6ICdZWVlZLiBbZ2FkYV0gRC4gTU1NTScsCiAgICAgICAgICAgIExMTCA6ICdZWVlZLiBbZ2FkYV0gRC4gTU1NTSwgTFQnLAogICAgICAgICAgICBMTExMIDogJ1lZWVkuIFtnYWRhXSBELiBNTU1NLCBkZGRkLCBMVCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1vFoG9kaWVuIHB1bGtzdGVuXSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW1LEq3QgcHVsa3N0ZW5dIExUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnZGRkZCBbcHVsa3N0ZW5dIExUJywKICAgICAgICAgICAgbGFzdERheSA6ICdbVmFrYXIgcHVsa3N0ZW5dIExUJywKICAgICAgICAgICAgbGFzdFdlZWsgOiAnW1BhZ8SBanXFocSBXSBkZGRkIFtwdWxrc3Rlbl0gTFQnLAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAnJXMgdsSTbMSBaycsCiAgICAgICAgICAgIHBhc3QgOiAnJXMgYWdyxIFrJywKICAgICAgICAgICAgcyA6ICdkYcW+YXMgc2VrdW5kZXMnLAogICAgICAgICAgICBtIDogJ21pbsWrdGknLAogICAgICAgICAgICBtbSA6IHJlbGF0aXZlVGltZVdpdGhQbHVyYWwsCiAgICAgICAgICAgIGggOiAnc3R1bmR1JywKICAgICAgICAgICAgaGggOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsLAogICAgICAgICAgICBkIDogJ2RpZW51JywKICAgICAgICAgICAgZGQgOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsLAogICAgICAgICAgICBNIDogJ23Ek25lc2knLAogICAgICAgICAgICBNTSA6IHJlbGF0aXZlVGltZVdpdGhQbHVyYWwsCiAgICAgICAgICAgIHkgOiAnZ2FkdScsCiAgICAgICAgICAgIHl5IDogcmVsYXRpdmVUaW1lV2l0aFBsdXJhbAogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbFBhcnNlOiAvXGR7MSwyfVwuLywKICAgICAgICBvcmRpbmFsIDogJyVkLicsCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogbWFjZWRvbmlhbiAobWspCi8vIGF1dGhvciA6IEJvcmlzbGF2IE1pY2tvdiA6IGh0dHBzOi8vZ2l0aHViLmNvbS9CMGswCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgnbWsnLCB7CiAgICAgICAgbW9udGhzIDogJ9GY0LDQvdGD0LDRgNC4X9GE0LXQstGA0YPQsNGA0Lhf0LzQsNGA0YJf0LDQv9GA0LjQu1\/QvNCw0Zhf0ZjRg9C90Lhf0ZjRg9C70Lhf0LDQstCz0YPRgdGCX9GB0LXQv9GC0LXQvNCy0YDQuF\/QvtC60YLQvtC80LLRgNC4X9C90L7QtdC80LLRgNC4X9C00LXQutC10LzQstGA0LgnLnNwbGl0KCdfJyksCiAgICAgICAgbW9udGhzU2hvcnQgOiAn0ZjQsNC9X9GE0LXQsl\/QvNCw0YBf0LDQv9GAX9C80LDRmF\/RmNGD0L1f0ZjRg9C7X9Cw0LLQs1\/RgdC10L9f0L7QutGCX9C90L7QtV\/QtNC10LonLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXMgOiAn0L3QtdC00LXQu9CwX9C\/0L7QvdC10LTQtdC70L3QuNC6X9Cy0YLQvtGA0L3QuNC6X9GB0YDQtdC00LBf0YfQtdGC0LLRgNGC0L7Qul\/Qv9C10YLQvtC6X9GB0LDQsdC+0YLQsCcuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ9C90LXQtF\/Qv9C+0L1f0LLRgtC+X9GB0YDQtV\/Rh9C10YJf0L\/QtdGCX9GB0LDQsScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICfQvWVf0L9vX9Cy0YJf0YHRgF\/Rh9C1X9C\/0LVf0YFhJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdIOm1tJywKICAgICAgICAgICAgTFRTIDogJ0xUOnNzJywKICAgICAgICAgICAgTCA6ICdELk1NLllZWVknLAogICAgICAgICAgICBMTCA6ICdEIE1NTU0gWVlZWScsCiAgICAgICAgICAgIExMTCA6ICdEIE1NTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCwgRCBNTU1NIFlZWVkgTFQnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6ICdb0JTQtdC90LXRgSDQstC+XSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW9Cj0YLRgNC1INCy0L5dIExUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnZGRkZCBb0LLQvl0gTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1vQktGH0LXRgNCwINCy0L5dIExUJywKICAgICAgICAgICAgbGFzdFdlZWsgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKHRoaXMuZGF5KCkpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1vQktC+INC40LfQvNC40L3QsNGC0LDRgtCwXSBkZGRkIFvQstC+XSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdb0JLQviDQuNC30LzQuNC90LDRgtC40L7Rgl0gZGRkZCBb0LLQvl0gTFQnOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAn0L\/QvtGB0LvQtSAlcycsCiAgICAgICAgICAgIHBhc3QgOiAn0L\/RgNC10LQgJXMnLAogICAgICAgICAgICBzIDogJ9C90LXQutC+0LvQutGDINGB0LXQutGD0L3QtNC4JywKICAgICAgICAgICAgbSA6ICfQvNC40L3Rg9GC0LAnLAogICAgICAgICAgICBtbSA6ICclZCDQvNC40L3Rg9GC0LgnLAogICAgICAgICAgICBoIDogJ9GH0LDRgScsCiAgICAgICAgICAgIGhoIDogJyVkINGH0LDRgdCwJywKICAgICAgICAgICAgZCA6ICfQtNC10L0nLAogICAgICAgICAgICBkZCA6ICclZCDQtNC10L3QsCcsCiAgICAgICAgICAgIE0gOiAn0LzQtdGB0LXRhicsCiAgICAgICAgICAgIE1NIDogJyVkINC80LXRgdC10YbQuCcsCiAgICAgICAgICAgIHkgOiAn0LPQvtC00LjQvdCwJywKICAgICAgICAgICAgeXkgOiAnJWQg0LPQvtC00LjQvdC4JwogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbFBhcnNlOiAvXGR7MSwyfS0o0LXQsnzQtdC9fNGC0Lh80LLQuHzRgNC4fNC80LgpLywKICAgICAgICBvcmRpbmFsIDogZnVuY3Rpb24gKG51bWJlcikgewogICAgICAgICAgICB2YXIgbGFzdERpZ2l0ID0gbnVtYmVyICUgMTAsCiAgICAgICAgICAgICAgICBsYXN0MkRpZ2l0cyA9IG51bWJlciAlIDEwMDsKICAgICAgICAgICAgaWYgKG51bWJlciA9PT0gMCkgewogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICct0LXQsic7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobGFzdDJEaWdpdHMgPT09IDApIHsKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAnLdC10L0nOwogICAgICAgICAgICB9IGVsc2UgaWYgKGxhc3QyRGlnaXRzID4gMTAgJiYgbGFzdDJEaWdpdHMgPCAyMCkgewogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICct0YLQuCc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobGFzdERpZ2l0ID09PSAxKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJy3QstC4JzsKICAgICAgICAgICAgfSBlbHNlIGlmIChsYXN0RGlnaXQgPT09IDIpIHsKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAnLdGA0LgnOwogICAgICAgICAgICB9IGVsc2UgaWYgKGxhc3REaWdpdCA9PT0gNyB8fCBsYXN0RGlnaXQgPT09IDgpIHsKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAnLdC80LgnOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICct0YLQuCc7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA3ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiAxc3QgaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKLy8gbW9tZW50LmpzIGxvY2FsZSBjb25maWd1cmF0aW9uCi8vIGxvY2FsZSA6IG1hbGF5YWxhbSAobWwpCi8vIGF1dGhvciA6IEZsb3lkIFBpbmsgOiBodHRwczovL2dpdGh1Yi5jb20vZmxveWRwaW5rCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgnbWwnLCB7CiAgICAgICAgbW9udGhzIDogJ+C0nOC0qOC1geC0teC0sOC0v1\/gtKvgtYbgtKzgtY3gtLDgtYHgtLXgtLDgtL9f4LSu4LS+4LW84LSa4LWN4LSa4LWNX+C0j+C0quC1jeC0sOC0v+C1vV\/gtK7gtYfgtK\/gtY1f4LSc4LWC4LW6X+C0nOC1guC0suC1iF\/gtJPgtJfgtLjgtY3gtLHgtY3gtLHgtY1f4LS44LWG4LSq4LWN4LSx4LWN4LSx4LSC4LSs4LW8X+C0kuC0leC1jeC0n+C1i+C0rOC1vF\/gtKjgtLXgtILgtKzgtbxf4LSh4LS\/4LS44LSC4LSs4LW8Jy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJ+C0nOC0qOC1gS5f4LSr4LWG4LSs4LWN4LSw4LWBLl\/gtK7gtL7gtbwuX+C0j+C0quC1jeC0sOC0vy5f4LSu4LWH4LSv4LWNX+C0nOC1guC1ul\/gtJzgtYLgtLLgtYguX+C0k+C0ly5f4LS44LWG4LSq4LWN4LSx4LWN4LSxLl\/gtJLgtJXgtY3gtJ\/gtYsuX+C0qOC0teC0gi5f4LSh4LS\/4LS44LSCLicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICfgtJ7gtL7gtK\/gtLHgtL7gtLTgtY3gtJpf4LSk4LS\/4LSZ4LWN4LSV4LSz4LS+4LS04LWN4LSaX+C0muC1iuC0teC1jeC0teC0vuC0tOC1jeC0ml\/gtKzgtYHgtKfgtKjgtL7gtLTgtY3gtJpf4LS14LWN4LSv4LS+4LS04LS+4LS04LWN4LSaX+C0teC1huC0s+C1jeC0s+C0v+C0r+C0vuC0tOC1jeC0ml\/gtLbgtKjgtL\/gtK\/gtL7gtLTgtY3gtJonLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICfgtJ7gtL7gtK\/gtbxf4LSk4LS\/4LSZ4LWN4LSV4LW+X+C0muC1iuC0teC1jeC0tV\/gtKzgtYHgtKfgtbtf4LS14LWN4LSv4LS+4LS04LSCX+C0teC1huC0s+C1jeC0s+C0v1\/gtLbgtKjgtL8nLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNNaW4gOiAn4LSe4LS+X+C0pOC0v1\/gtJrgtYpf4LSs4LWBX+C0teC1jeC0r+C0vl\/gtLXgtYZf4LS2Jy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdBIGg6bW0gLeC0qOC1gScsCiAgICAgICAgICAgIExUUyA6ICdBIGg6bW06c3MgLeC0qOC1gScsCiAgICAgICAgICAgIEwgOiAnREQvTU0vWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZLCBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCwgRCBNTU1NIFlZWVksIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW+C0h+C0qOC1jeC0qOC1jV0gTFQnLAogICAgICAgICAgICBuZXh0RGF5IDogJ1vgtKjgtL7gtLPgtYZdIExUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnZGRkZCwgTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1vgtIfgtKjgtY3gtKjgtLLgtYZdIExUJywKICAgICAgICAgICAgbGFzdFdlZWsgOiAnW+C0leC0tOC0v+C0nuC1jeC0nl0gZGRkZCwgTFQnLAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAnJXMg4LSV4LS04LS\/4LSe4LWN4LSe4LWNJywKICAgICAgICAgICAgcGFzdCA6ICclcyDgtK7gtYHgtbvgtKrgtY0nLAogICAgICAgICAgICBzIDogJ+C0heC1veC0qiDgtKjgtL\/gtK7gtL\/gtLfgtJngtY3gtJngtb4nLAogICAgICAgICAgICBtIDogJ+C0kuC0sOC1gSDgtK7gtL\/gtKjgtL\/gtLHgtY3gtLHgtY0nLAogICAgICAgICAgICBtbSA6ICclZCDgtK7gtL\/gtKjgtL\/gtLHgtY3gtLHgtY0nLAogICAgICAgICAgICBoIDogJ+C0kuC0sOC1gSDgtK7gtKPgtL\/gtJXgtY3gtJXgtYLgtbwnLAogICAgICAgICAgICBoaCA6ICclZCDgtK7gtKPgtL\/gtJXgtY3gtJXgtYLgtbwnLAogICAgICAgICAgICBkIDogJ+C0kuC0sOC1gSDgtKbgtL\/gtLXgtLjgtIInLAogICAgICAgICAgICBkZCA6ICclZCDgtKbgtL\/gtLXgtLjgtIInLAogICAgICAgICAgICBNIDogJ+C0kuC0sOC1gSDgtK7gtL7gtLjgtIInLAogICAgICAgICAgICBNTSA6ICclZCDgtK7gtL7gtLjgtIInLAogICAgICAgICAgICB5IDogJ+C0kuC0sOC1gSDgtLXgtbzgtLfgtIInLAogICAgICAgICAgICB5eSA6ICclZCDgtLXgtbzgtLfgtIInCiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbVBhcnNlOiAv4LSw4LS+4LSk4LWN4LSw4LS\/fOC0sOC0vuC0teC0v+C0suC1hnzgtIngtJrgtY3gtJog4LSV4LS04LS\/4LSe4LWN4LSe4LWNfOC0teC1iOC0leC1geC0qOC1jeC0qOC1h+C0sOC0gnzgtLDgtL7gtKTgtY3gtLDgtL8vaSwKICAgICAgICBpc1BNIDogZnVuY3Rpb24gKGlucHV0KSB7CiAgICAgICAgICAgIHJldHVybiAvXijgtIngtJrgtY3gtJog4LSV4LS04LS\/4LSe4LWN4LSe4LWNfOC0teC1iOC0leC1geC0qOC1jeC0qOC1h+C0sOC0gnzgtLDgtL7gtKTgtY3gtLDgtL8pJC8udGVzdChpbnB1dCk7CiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbSA6IGZ1bmN0aW9uIChob3VyLCBtaW51dGUsIGlzTG93ZXIpIHsKICAgICAgICAgICAgaWYgKGhvdXIgPCA0KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ+C0sOC0vuC0pOC1jeC0sOC0vyc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaG91ciA8IDEyKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ+C0sOC0vuC0teC0v+C0suC1hic7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaG91ciA8IDE3KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ+C0ieC0muC1jeC0miDgtJXgtLTgtL\/gtJ7gtY3gtJ7gtY0nOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhvdXIgPCAyMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICfgtLXgtYjgtJXgtYHgtKjgtY3gtKjgtYfgtLDgtIInOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuICfgtLDgtL7gtKTgtY3gtLDgtL8nOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSk7Cn0pKTsKLy8gbW9tZW50LmpzIGxvY2FsZSBjb25maWd1cmF0aW9uCi8vIGxvY2FsZSA6IE1hcmF0aGkgKG1yKQovLyBhdXRob3IgOiBIYXJzaGFkIEthbGUgOiBodHRwczovL2dpdGh1Yi5jb20va2FsZWh2CgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICB2YXIgc3ltYm9sTWFwID0gewogICAgICAgICcxJzogJ+ClpycsCiAgICAgICAgJzInOiAn4KWoJywKICAgICAgICAnMyc6ICfgpaknLAogICAgICAgICc0JzogJ+ClqicsCiAgICAgICAgJzUnOiAn4KWrJywKICAgICAgICAnNic6ICfgpawnLAogICAgICAgICc3JzogJ+ClrScsCiAgICAgICAgJzgnOiAn4KWuJywKICAgICAgICAnOSc6ICfgpa8nLAogICAgICAgICcwJzogJ+ClpicKICAgIH0sCiAgICBudW1iZXJNYXAgPSB7CiAgICAgICAgJ+Clpyc6ICcxJywKICAgICAgICAn4KWoJzogJzInLAogICAgICAgICfgpaknOiAnMycsCiAgICAgICAgJ+Clqic6ICc0JywKICAgICAgICAn4KWrJzogJzUnLAogICAgICAgICfgpawnOiAnNicsCiAgICAgICAgJ+ClrSc6ICc3JywKICAgICAgICAn4KWuJzogJzgnLAogICAgICAgICfgpa8nOiAnOScsCiAgICAgICAgJ+Clpic6ICcwJwogICAgfTsKCiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgnbXInLCB7CiAgICAgICAgbW9udGhzIDogJ+CknOCkvuCkqOClh+CkteCkvuCksOClgF\/gpKvgpYfgpKzgpY3gpLDgpYHgpLXgpL7gpLDgpYBf4KSu4KS+4KSw4KWN4KSaX+Ckj+CkquCljeCksOCkv+Cksl\/gpK7gpYdf4KSc4KWC4KSoX+CknOClgeCksuCliF\/gpJHgpJfgpLjgpY3gpJ9f4KS44KSq4KWN4KSf4KWH4KSC4KSs4KSwX+CkkeCkleCljeCkn+Cli+CkrOCksF\/gpKjgpYvgpLXgpY3gpLngpYfgpILgpKzgpLBf4KSh4KS\/4KS44KWH4KSC4KSs4KSwJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0OiAn4KSc4KS+4KSo4KWHLl\/gpKvgpYfgpKzgpY3gpLDgpYEuX+CkruCkvuCksOCljeCkmi5f4KSP4KSq4KWN4KSw4KS\/Ll\/gpK7gpYcuX+CknOClguCkqC5f4KSc4KWB4KSy4KWILl\/gpJHgpJcuX+CkuOCkquCljeCkn+Clh+Ckgi5f4KSR4KSV4KWN4KSf4KWLLl\/gpKjgpYvgpLXgpY3gpLngpYfgpIIuX+CkoeCkv+CkuOClh+Ckgi4nLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXMgOiAn4KSw4KS14KS\/4KS14KS+4KSwX+CkuOCli+CkruCkteCkvuCksF\/gpK7gpILgpJfgpLPgpLXgpL7gpLBf4KSs4KWB4KSn4KS14KS+4KSwX+Ckl+ClgeCksOClguCkteCkvuCksF\/gpLbgpYHgpJXgpY3gpLDgpLXgpL7gpLBf4KS24KSo4KS\/4KS14KS+4KSwJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAn4KSw4KS14KS\/X+CkuOCli+Ckrl\/gpK7gpILgpJfgpLNf4KSs4KWB4KSnX+Ckl+ClgeCksOClgl\/gpLbgpYHgpJXgpY3gpLBf4KS24KSo4KS\/Jy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ+CksF\/gpLjgpYtf4KSu4KSCX+CkrOClgV\/gpJfgpYFf4KS24KWBX+Ckticuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnQSBoOm1tIOCkteCkvuCknOCkpOCkvicsCiAgICAgICAgICAgIExUUyA6ICdBIGg6bW06c3Mg4KS14KS+4KSc4KSk4KS+JywKICAgICAgICAgICAgTCA6ICdERC9NTS9ZWVlZJywKICAgICAgICAgICAgTEwgOiAnRCBNTU1NIFlZWVknLAogICAgICAgICAgICBMTEwgOiAnRCBNTU1NIFlZWVksIExUJywKICAgICAgICAgICAgTExMTCA6ICdkZGRkLCBEIE1NTU0gWVlZWSwgTFQnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6ICdb4KSG4KScXSBMVCcsCiAgICAgICAgICAgIG5leHREYXkgOiAnW+CkieCkpuCljeCkr+Ckvl0gTFQnLAogICAgICAgICAgICBuZXh0V2VlayA6ICdkZGRkLCBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW+CkleCkvuCksl0gTFQnLAogICAgICAgICAgICBsYXN0V2VlazogJ1vgpK7gpL7gpJfgpYDgpLJdIGRkZGQsIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJyVzIOCkqOCkguCkpOCksCcsCiAgICAgICAgICAgIHBhc3QgOiAnJXMg4KSq4KWC4KSw4KWN4KS14KWAJywKICAgICAgICAgICAgcyA6ICfgpLjgpYfgpJXgpILgpKYnLAogICAgICAgICAgICBtOiAn4KSP4KSVIOCkruCkv+CkqOCkv+CknycsCiAgICAgICAgICAgIG1tOiAnJWQg4KSu4KS\/4KSo4KS\/4KSf4KWHJywKICAgICAgICAgICAgaCA6ICfgpI\/gpJUg4KSk4KS+4KS4JywKICAgICAgICAgICAgaGggOiAnJWQg4KSk4KS+4KS4JywKICAgICAgICAgICAgZCA6ICfgpI\/gpJUg4KSm4KS\/4KS14KS4JywKICAgICAgICAgICAgZGQgOiAnJWQg4KSm4KS\/4KS14KS4JywKICAgICAgICAgICAgTSA6ICfgpI\/gpJUg4KSu4KS54KS\/4KSo4KS+JywKICAgICAgICAgICAgTU0gOiAnJWQg4KSu4KS54KS\/4KSo4KWHJywKICAgICAgICAgICAgeSA6ICfgpI\/gpJUg4KS14KSw4KWN4KS3JywKICAgICAgICAgICAgeXkgOiAnJWQg4KS14KSw4KWN4KS34KWHJwogICAgICAgIH0sCiAgICAgICAgcHJlcGFyc2U6IGZ1bmN0aW9uIChzdHJpbmcpIHsKICAgICAgICAgICAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC9b4KWn4KWo4KWp4KWq4KWr4KWs4KWt4KWu4KWv4KWmXS9nLCBmdW5jdGlvbiAobWF0Y2gpIHsKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXJNYXBbbWF0Y2hdOwogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIHBvc3Rmb3JtYXQ6IGZ1bmN0aW9uIChzdHJpbmcpIHsKICAgICAgICAgICAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC9cZC9nLCBmdW5jdGlvbiAobWF0Y2gpIHsKICAgICAgICAgICAgICAgIHJldHVybiBzeW1ib2xNYXBbbWF0Y2hdOwogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtUGFyc2U6IC\/gpLDgpL7gpKTgpY3gpLDgpYB84KS44KSV4KS+4KSz4KWAfOCkpuClgeCkquCkvuCksOClgHzgpLjgpL7gpK\/gpILgpJXgpL7gpLPgpYAvLAogICAgICAgIG1lcmlkaWVtSG91ciA6IGZ1bmN0aW9uIChob3VyLCBtZXJpZGllbSkgewogICAgICAgICAgICBpZiAoaG91ciA9PT0gMTIpIHsKICAgICAgICAgICAgICAgIGhvdXIgPSAwOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChtZXJpZGllbSA9PT0gJ+CksOCkvuCkpOCljeCksOClgCcpIHsKICAgICAgICAgICAgICAgIHJldHVybiBob3VyIDwgNCA\/IGhvdXIgOiBob3VyICsgMTI7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobWVyaWRpZW0gPT09ICfgpLjgpJXgpL7gpLPgpYAnKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gaG91cjsKICAgICAgICAgICAgfSBlbHNlIGlmIChtZXJpZGllbSA9PT0gJ+CkpuClgeCkquCkvuCksOClgCcpIHsKICAgICAgICAgICAgICAgIHJldHVybiBob3VyID49IDEwID8gaG91ciA6IGhvdXIgKyAxMjsKICAgICAgICAgICAgfSBlbHNlIGlmIChtZXJpZGllbSA9PT0gJ+CkuOCkvuCkr+CkguCkleCkvuCks+ClgCcpIHsKICAgICAgICAgICAgICAgIHJldHVybiBob3VyICsgMTI7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtOiBmdW5jdGlvbiAoaG91ciwgbWludXRlLCBpc0xvd2VyKQogICAgICAgIHsKICAgICAgICAgICAgaWYgKGhvdXIgPCA0KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ+CksOCkvuCkpOCljeCksOClgCc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaG91ciA8IDEwKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ+CkuOCkleCkvuCks+ClgCc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaG91ciA8IDE3KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ+CkpuClgeCkquCkvuCksOClgCc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaG91ciA8IDIwKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ+CkuOCkvuCkr+CkguCkleCkvuCks+ClgCc7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ+CksOCkvuCkpOCljeCksOClgCc7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDAsIC8vIFN1bmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA2ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiAxc3QgaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKLy8gbW9tZW50LmpzIGxvY2FsZSBjb25maWd1cmF0aW9uCi8vIGxvY2FsZSA6IEJhaGFzYSBNYWxheXNpYSAobXMtTVkpCi8vIGF1dGhvciA6IFdlbGRhbiBKYW1pbGkgOiBodHRwczovL2dpdGh1Yi5jb20vd2VsZGFuCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgnbXMtbXknLCB7CiAgICAgICAgbW9udGhzIDogJ0phbnVhcmlfRmVicnVhcmlfTWFjX0FwcmlsX01laV9KdW5fSnVsYWlfT2dvc19TZXB0ZW1iZXJfT2t0b2Jlcl9Ob3ZlbWJlcl9EaXNlbWJlcicuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICdKYW5fRmViX01hY19BcHJfTWVpX0p1bl9KdWxfT2dzX1NlcF9Pa3RfTm92X0Rpcycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICdBaGFkX0lzbmluX1NlbGFzYV9SYWJ1X0toYW1pc19KdW1hYXRfU2FidHUnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICdBaGRfSXNuX1NlbF9SYWJfS2hhX0p1bV9TYWInLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNNaW4gOiAnQWhfSXNfU2xfUmJfS21fSm1fU2InLnNwbGl0KCdfJyksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogJ0hILm1tJywKICAgICAgICAgICAgTFRTIDogJ0xULnNzJywKICAgICAgICAgICAgTCA6ICdERC9NTS9ZWVlZJywKICAgICAgICAgICAgTEwgOiAnRCBNTU1NIFlZWVknLAogICAgICAgICAgICBMTEwgOiAnRCBNTU1NIFlZWVkgW3B1a3VsXSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCwgRCBNTU1NIFlZWVkgW3B1a3VsXSBMVCcKICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtUGFyc2U6IC9wYWdpfHRlbmdhaGFyaXxwZXRhbmd8bWFsYW0vLAogICAgICAgIG1lcmlkaWVtSG91cjogZnVuY3Rpb24gKGhvdXIsIG1lcmlkaWVtKSB7CiAgICAgICAgICAgIGlmIChob3VyID09PSAxMikgewogICAgICAgICAgICAgICAgaG91ciA9IDA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKG1lcmlkaWVtID09PSAncGFnaScpIHsKICAgICAgICAgICAgICAgIHJldHVybiBob3VyOwogICAgICAgICAgICB9IGVsc2UgaWYgKG1lcmlkaWVtID09PSAndGVuZ2FoYXJpJykgewogICAgICAgICAgICAgICAgcmV0dXJuIGhvdXIgPj0gMTEgPyBob3VyIDogaG91ciArIDEyOwogICAgICAgICAgICB9IGVsc2UgaWYgKG1lcmlkaWVtID09PSAncGV0YW5nJyB8fCBtZXJpZGllbSA9PT0gJ21hbGFtJykgewogICAgICAgICAgICAgICAgcmV0dXJuIGhvdXIgKyAxMjsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgbWVyaWRpZW0gOiBmdW5jdGlvbiAoaG91cnMsIG1pbnV0ZXMsIGlzTG93ZXIpIHsKICAgICAgICAgICAgaWYgKGhvdXJzIDwgMTEpIHsKICAgICAgICAgICAgICAgIHJldHVybiAncGFnaSc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaG91cnMgPCAxNSkgewogICAgICAgICAgICAgICAgcmV0dXJuICd0ZW5nYWhhcmknOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhvdXJzIDwgMTkpIHsKICAgICAgICAgICAgICAgIHJldHVybiAncGV0YW5nJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiAnbWFsYW0nOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6ICdbSGFyaSBpbmkgcHVrdWxdIExUJywKICAgICAgICAgICAgbmV4dERheSA6ICdbRXNvayBwdWt1bF0gTFQnLAogICAgICAgICAgICBuZXh0V2VlayA6ICdkZGRkIFtwdWt1bF0gTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1tLZWxtYXJpbiBwdWt1bF0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdkZGRkIFtsZXBhcyBwdWt1bF0gTFQnLAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAnZGFsYW0gJXMnLAogICAgICAgICAgICBwYXN0IDogJyVzIHlhbmcgbGVwYXMnLAogICAgICAgICAgICBzIDogJ2JlYmVyYXBhIHNhYXQnLAogICAgICAgICAgICBtIDogJ3NlbWluaXQnLAogICAgICAgICAgICBtbSA6ICclZCBtaW5pdCcsCiAgICAgICAgICAgIGggOiAnc2VqYW0nLAogICAgICAgICAgICBoaCA6ICclZCBqYW0nLAogICAgICAgICAgICBkIDogJ3NlaGFyaScsCiAgICAgICAgICAgIGRkIDogJyVkIGhhcmknLAogICAgICAgICAgICBNIDogJ3NlYnVsYW4nLAogICAgICAgICAgICBNTSA6ICclZCBidWxhbicsCiAgICAgICAgICAgIHkgOiAnc2V0YWh1bicsCiAgICAgICAgICAgIHl5IDogJyVkIHRhaHVuJwogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDcgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDFzdCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogQnVybWVzZSAobXkpCi8vIGF1dGhvciA6IFNxdWFyIHRlYW0sIG15c3F1YXIuY29tCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICB2YXIgc3ltYm9sTWFwID0gewogICAgICAgICcxJzogJ+GBgScsCiAgICAgICAgJzInOiAn4YGCJywKICAgICAgICAnMyc6ICfhgYMnLAogICAgICAgICc0JzogJ+GBhCcsCiAgICAgICAgJzUnOiAn4YGFJywKICAgICAgICAnNic6ICfhgYYnLAogICAgICAgICc3JzogJ+GBhycsCiAgICAgICAgJzgnOiAn4YGIJywKICAgICAgICAnOSc6ICfhgYknLAogICAgICAgICcwJzogJ+GBgCcKICAgIH0sIG51bWJlck1hcCA9IHsKICAgICAgICAn4YGBJzogJzEnLAogICAgICAgICfhgYInOiAnMicsCiAgICAgICAgJ+GBgyc6ICczJywKICAgICAgICAn4YGEJzogJzQnLAogICAgICAgICfhgYUnOiAnNScsCiAgICAgICAgJ+GBhic6ICc2JywKICAgICAgICAn4YGHJzogJzcnLAogICAgICAgICfhgYgnOiAnOCcsCiAgICAgICAgJ+GBiSc6ICc5JywKICAgICAgICAn4YGAJzogJzAnCiAgICB9OwogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ215JywgewogICAgICAgIG1vbnRoczogJ+GAh+GAlOGAuuGAlOGAneGAq+GAm+GArl\/hgJbhgLHhgJbhgLHhgKzhgLrhgJ3hgKvhgJvhgK5f4YCZ4YCQ4YC6X+GAp+GAleGAvOGArl\/hgJnhgLFf4YCH4YC94YCU4YC6X+GAh+GAsOGAnOGAreGAr+GAhOGAul\/hgJ7hgLzhgILhgK\/hgJDhgLpf4YCF4YCA4YC64YCQ4YCE4YC64YCY4YCsX+GAoeGAseGArOGAgOGAuuGAkOGAreGAr+GAmOGArF\/hgJThgK3hgK\/hgJ3hgIThgLrhgJjhgKxf4YCS4YCu4YCH4YCE4YC64YCY4YCsJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0OiAn4YCH4YCU4YC6X+GAluGAsV\/hgJnhgJDhgLpf4YCV4YC84YCuX+GAmeGAsV\/hgIfhgL3hgJThgLpf4YCc4YCt4YCv4YCE4YC6X+GAnuGAvF\/hgIXhgIDhgLpf4YCh4YCx4YCs4YCA4YC6X+GAlOGAreGAr1\/hgJLhgK4nLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXM6ICfhgJDhgJThgIThgLrhgLnhgILhgJThgL3hgLFf4YCQ4YCU4YCE4YC64YC54YCc4YCsX+GAoeGAhOGAuuGAueGAguGAq1\/hgJfhgK\/hgJLhgLnhgJPhgJ\/hgLDhgLhf4YCA4YC84YCs4YCe4YCV4YCQ4YCx4YC4X+GAnuGAseGArOGAgOGAvOGArF\/hgIXhgJThgLEnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydDogJ+GAlOGAveGAsV\/hgJzhgKxf4YCE4YC64YC54YCC4YCrX+GAn+GAsOGAuF\/hgIDhgLzhgKxf4YCe4YCx4YCsX+GAlOGAsScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbjogJ+GAlOGAveGAsV\/hgJzhgKxf4YCE4YC64YC54YCC4YCrX+GAn+GAsOGAuF\/hgIDhgLzhgKxf4YCe4YCx4YCsX+GAlOGAsScuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdDogewogICAgICAgICAgICBMVDogJ0hIOm1tJywKICAgICAgICAgICAgTFRTOiAnSEg6bW06c3MnLAogICAgICAgICAgICBMOiAnREQvTU0vWVlZWScsCiAgICAgICAgICAgIExMOiAnRCBNTU1NIFlZWVknLAogICAgICAgICAgICBMTEw6ICdEIE1NTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEw6ICdkZGRkIEQgTU1NTSBZWVlZIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXI6IHsKICAgICAgICAgICAgc2FtZURheTogJ1vhgJrhgJThgLEuXSBMVCBb4YCZ4YC+4YCsXScsCiAgICAgICAgICAgIG5leHREYXk6ICdb4YCZ4YCU4YCA4YC64YCW4YC84YCU4YC6XSBMVCBb4YCZ4YC+4YCsXScsCiAgICAgICAgICAgIG5leHRXZWVrOiAnZGRkZCBMVCBb4YCZ4YC+4YCsXScsCiAgICAgICAgICAgIGxhc3REYXk6ICdb4YCZ4YCU4YCxLuGAgF0gTFQgW+GAmeGAvuGArF0nLAogICAgICAgICAgICBsYXN0V2VlazogJ1vhgJXhgLzhgK7hgLjhgIHhgLLhgLfhgJ7hgLHhgKxdIGRkZGQgTFQgW+GAmeGAvuGArF0nLAogICAgICAgICAgICBzYW1lRWxzZTogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWU6IHsKICAgICAgICAgICAgZnV0dXJlOiAn4YCc4YCs4YCZ4YCK4YC64YC3ICVzIOGAmeGAvuGArCcsCiAgICAgICAgICAgIHBhc3Q6ICfhgJzhgL3hgJThgLrhgIHhgLLhgLfhgJ7hgLHhgKwgJXMg4YCAJywKICAgICAgICAgICAgczogJ+GAheGAgOGAueGAgOGAlOGAui7hgKHhgJThgIrhgLrhgLjhgIThgJrhgLonLAogICAgICAgICAgICBtOiAn4YCQ4YCF4YC64YCZ4YCt4YCU4YCF4YC6JywKICAgICAgICAgICAgbW06ICclZCDhgJnhgK3hgJThgIXhgLonLAogICAgICAgICAgICBoOiAn4YCQ4YCF4YC64YCU4YCs4YCb4YCuJywKICAgICAgICAgICAgaGg6ICclZCDhgJThgKzhgJvhgK4nLAogICAgICAgICAgICBkOiAn4YCQ4YCF4YC64YCb4YCA4YC6JywKICAgICAgICAgICAgZGQ6ICclZCDhgJvhgIDhgLonLAogICAgICAgICAgICBNOiAn4YCQ4YCF4YC64YCcJywKICAgICAgICAgICAgTU06ICclZCDhgJwnLAogICAgICAgICAgICB5OiAn4YCQ4YCF4YC64YCU4YC+4YCF4YC6JywKICAgICAgICAgICAgeXk6ICclZCDhgJThgL7hgIXhgLonCiAgICAgICAgfSwKICAgICAgICBwcmVwYXJzZTogZnVuY3Rpb24gKHN0cmluZykgewogICAgICAgICAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2UoL1vhgYHhgYLhgYPhgYThgYXhgYbhgYfhgYjhgYnhgYBdL2csIGZ1bmN0aW9uIChtYXRjaCkgewogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlck1hcFttYXRjaF07CiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgcG9zdGZvcm1hdDogZnVuY3Rpb24gKHN0cmluZykgewogICAgICAgICAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2UoL1xkL2csIGZ1bmN0aW9uIChtYXRjaCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHN5bWJvbE1hcFttYXRjaF07CiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgd2VlazogewogICAgICAgICAgICBkb3c6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3k6IDQgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gMXN0IGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBub3J3ZWdpYW4gYm9rbcOlbCAobmIpCi8vIGF1dGhvcnMgOiBFc3BlbiBIb3ZsYW5kc2RhbCA6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZXh4YXJzCi8vICAgICAgICAgICBTaWd1cmQgR2FydG1hbm4gOiBodHRwczovL2dpdGh1Yi5jb20vc2lndXJkZ2EKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCduYicsIHsKICAgICAgICBtb250aHMgOiAnamFudWFyX2ZlYnJ1YXJfbWFyc19hcHJpbF9tYWlfanVuaV9qdWxpX2F1Z3VzdF9zZXB0ZW1iZXJfb2t0b2Jlcl9ub3ZlbWJlcl9kZXNlbWJlcicuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICdqYW5fZmViX21hcl9hcHJfbWFpX2p1bl9qdWxfYXVnX3NlcF9va3Rfbm92X2Rlcycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICdzw7huZGFnX21hbmRhZ190aXJzZGFnX29uc2RhZ190b3JzZGFnX2ZyZWRhZ19sw7hyZGFnJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAnc8O4bl9tYW5fdGlyc19vbnNfdG9yc19mcmVfbMO4cicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICdzw7hfbWFfdGlfb25fdG9fZnJfbMO4Jy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdILm1tJywKICAgICAgICAgICAgTFRTIDogJ0xULnNzJywKICAgICAgICAgICAgTCA6ICdERC5NTS5ZWVlZJywKICAgICAgICAgICAgTEwgOiAnRC4gTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QuIE1NTU0gWVlZWSBba2wuXSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCBELiBNTU1NIFlZWVkgW2tsLl0gTFQnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheTogJ1tpIGRhZyBrbC5dIExUJywKICAgICAgICAgICAgbmV4dERheTogJ1tpIG1vcmdlbiBrbC5dIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6ICdkZGRkIFtrbC5dIExUJywKICAgICAgICAgICAgbGFzdERheTogJ1tpIGfDpXIga2wuXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrOiAnW2ZvcnJpZ2VdIGRkZGQgW2tsLl0gTFQnLAogICAgICAgICAgICBzYW1lRWxzZTogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICdvbSAlcycsCiAgICAgICAgICAgIHBhc3QgOiAnZm9yICVzIHNpZGVuJywKICAgICAgICAgICAgcyA6ICdub2VuIHNla3VuZGVyJywKICAgICAgICAgICAgbSA6ICdldHQgbWludXR0JywKICAgICAgICAgICAgbW0gOiAnJWQgbWludXR0ZXInLAogICAgICAgICAgICBoIDogJ2VuIHRpbWUnLAogICAgICAgICAgICBoaCA6ICclZCB0aW1lcicsCiAgICAgICAgICAgIGQgOiAnZW4gZGFnJywKICAgICAgICAgICAgZGQgOiAnJWQgZGFnZXInLAogICAgICAgICAgICBNIDogJ2VuIG3DpW5lZCcsCiAgICAgICAgICAgIE1NIDogJyVkIG3DpW5lZGVyJywKICAgICAgICAgICAgeSA6ICdldHQgw6VyJywKICAgICAgICAgICAgeXkgOiAnJWQgw6VyJwogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbFBhcnNlOiAvXGR7MSwyfVwuLywKICAgICAgICBvcmRpbmFsIDogJyVkLicsCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogbmVwYWxpL25lcGFsZXNlCi8vIGF1dGhvciA6IHN1dmFzaCA6IGh0dHBzOi8vZ2l0aHViLmNvbS9zdXZhc2gKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHZhciBzeW1ib2xNYXAgPSB7CiAgICAgICAgJzEnOiAn4KWnJywKICAgICAgICAnMic6ICfgpagnLAogICAgICAgICczJzogJ+ClqScsCiAgICAgICAgJzQnOiAn4KWqJywKICAgICAgICAnNSc6ICfgpasnLAogICAgICAgICc2JzogJ+ClrCcsCiAgICAgICAgJzcnOiAn4KWtJywKICAgICAgICAnOCc6ICfgpa4nLAogICAgICAgICc5JzogJ+ClrycsCiAgICAgICAgJzAnOiAn4KWmJwogICAgfSwKICAgIG51bWJlck1hcCA9IHsKICAgICAgICAn4KWnJzogJzEnLAogICAgICAgICfgpagnOiAnMicsCiAgICAgICAgJ+ClqSc6ICczJywKICAgICAgICAn4KWqJzogJzQnLAogICAgICAgICfgpasnOiAnNScsCiAgICAgICAgJ+ClrCc6ICc2JywKICAgICAgICAn4KWtJzogJzcnLAogICAgICAgICfgpa4nOiAnOCcsCiAgICAgICAgJ+Clryc6ICc5JywKICAgICAgICAn4KWmJzogJzAnCiAgICB9OwoKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCduZScsIHsKICAgICAgICBtb250aHMgOiAn4KSc4KSo4KS14KSw4KWAX+Ckq+Clh+CkrOCljeCksOClgeCkteCksOClgF\/gpK7gpL7gpLDgpY3gpJpf4KSF4KSq4KWN4KSw4KS\/4KSyX+CkruCkiF\/gpJzgpYHgpKhf4KSc4KWB4KSy4KS+4KSIX+CkheCkl+Ckt+CljeCkn1\/gpLjgpYfgpKrgpY3gpJ\/gpYfgpK7gpY3gpKzgpLBf4KSF4KSV4KWN4KSf4KWL4KSs4KSwX+CkqOCli+CkreClh+CkruCljeCkrOCksF\/gpKHgpL\/gpLjgpYfgpK7gpY3gpKzgpLAnLnNwbGl0KCdfJyksCiAgICAgICAgbW9udGhzU2hvcnQgOiAn4KSc4KSoLl\/gpKvgpYfgpKzgpY3gpLDgpYEuX+CkruCkvuCksOCljeCkml\/gpIXgpKrgpY3gpLDgpL8uX+CkruCkiF\/gpJzgpYHgpKhf4KSc4KWB4KSy4KS+4KSILl\/gpIXgpJcuX+CkuOClh+CkquCljeCkny5f4KSF4KSV4KWN4KSf4KWLLl\/gpKjgpYvgpK3gpYcuX+CkoeCkv+CkuOClhy4nLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXMgOiAn4KSG4KSH4KSk4KSs4KS+4KSwX+CkuOCli+CkruCkrOCkvuCksF\/gpK7gpJngpY3gpJfgpLLgpKzgpL7gpLBf4KSs4KWB4KSn4KSs4KS+4KSwX+CkrOCkv+CkueCkv+CkrOCkvuCksF\/gpLbgpYHgpJXgpY3gpLDgpKzgpL7gpLBf4KS24KSo4KS\/4KSs4KS+4KSwJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAn4KSG4KSH4KSkLl\/gpLjgpYvgpK4uX+CkruCkmeCljeCkl+Cksi5f4KSs4KWB4KSnLl\/gpKzgpL\/gpLngpL8uX+CktuClgeCkleCljeCksC5f4KS24KSo4KS\/Licuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICfgpIbgpIcuX+CkuOCliy5f4KSu4KSZ4KWNX+CkrOClgS5f4KSs4KS\/Ll\/gpLbgpYEuX+Ckti4nLnNwbGl0KCdfJyksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogJ0HgpJXgpYsgaDptbSDgpKzgpJzgpYcnLAogICAgICAgICAgICBMVFMgOiAnQeCkleCliyBoOm1tOnNzIOCkrOCknOClhycsCiAgICAgICAgICAgIEwgOiAnREQvTU0vWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZLCBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCwgRCBNTU1NIFlZWVksIExUJwogICAgICAgIH0sCiAgICAgICAgcHJlcGFyc2U6IGZ1bmN0aW9uIChzdHJpbmcpIHsKICAgICAgICAgICAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC9b4KWn4KWo4KWp4KWq4KWr4KWs4KWt4KWu4KWv4KWmXS9nLCBmdW5jdGlvbiAobWF0Y2gpIHsKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXJNYXBbbWF0Y2hdOwogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIHBvc3Rmb3JtYXQ6IGZ1bmN0aW9uIChzdHJpbmcpIHsKICAgICAgICAgICAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC9cZC9nLCBmdW5jdGlvbiAobWF0Y2gpIHsKICAgICAgICAgICAgICAgIHJldHVybiBzeW1ib2xNYXBbbWF0Y2hdOwogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtUGFyc2U6IC\/gpLDgpL7gpKTgpYB84KSs4KS\/4KS54KS+4KSofOCkpuCkv+CkieCkgeCkuOCli3zgpKzgpYfgpLLgpYHgpJXgpL584KS44KS+4KSB4KSdfOCksOCkvuCkpOClgC8sCiAgICAgICAgbWVyaWRpZW1Ib3VyIDogZnVuY3Rpb24gKGhvdXIsIG1lcmlkaWVtKSB7CiAgICAgICAgICAgIGlmIChob3VyID09PSAxMikgewogICAgICAgICAgICAgICAgaG91ciA9IDA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKG1lcmlkaWVtID09PSAn4KSw4KS+4KSk4KWAJykgewogICAgICAgICAgICAgICAgcmV0dXJuIGhvdXIgPCAzID8gaG91ciA6IGhvdXIgKyAxMjsKICAgICAgICAgICAgfSBlbHNlIGlmIChtZXJpZGllbSA9PT0gJ+CkrOCkv+CkueCkvuCkqCcpIHsKICAgICAgICAgICAgICAgIHJldHVybiBob3VyOwogICAgICAgICAgICB9IGVsc2UgaWYgKG1lcmlkaWVtID09PSAn4KSm4KS\/4KSJ4KSB4KS44KWLJykgewogICAgICAgICAgICAgICAgcmV0dXJuIGhvdXIgPj0gMTAgPyBob3VyIDogaG91ciArIDEyOwogICAgICAgICAgICB9IGVsc2UgaWYgKG1lcmlkaWVtID09PSAn4KSs4KWH4KSy4KWB4KSV4KS+JyB8fCBtZXJpZGllbSA9PT0gJ+CkuOCkvuCkgeCknScpIHsKICAgICAgICAgICAgICAgIHJldHVybiBob3VyICsgMTI7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtIDogZnVuY3Rpb24gKGhvdXIsIG1pbnV0ZSwgaXNMb3dlcikgewogICAgICAgICAgICBpZiAoaG91ciA8IDMpIHsKICAgICAgICAgICAgICAgIHJldHVybiAn4KSw4KS+4KSk4KWAJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VyIDwgMTApIHsKICAgICAgICAgICAgICAgIHJldHVybiAn4KSs4KS\/4KS54KS+4KSoJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VyIDwgMTUpIHsKICAgICAgICAgICAgICAgIHJldHVybiAn4KSm4KS\/4KSJ4KSB4KS44KWLJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VyIDwgMTgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAn4KSs4KWH4KSy4KWB4KSV4KS+JzsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VyIDwgMjApIHsKICAgICAgICAgICAgICAgIHJldHVybiAn4KS44KS+4KSB4KSdJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiAn4KSw4KS+4KSk4KWAJzsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW+CkhuCknF0gTFQnLAogICAgICAgICAgICBuZXh0RGF5IDogJ1vgpK3gpYvgpLLgpYBdIExUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnW+CkhuCkieCkgeCkpuCli10gZGRkZFssXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXkgOiAnW+CkueCkv+CknOCli10gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdb4KSX4KSP4KSV4KWLXSBkZGRkWyxdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJyVz4KSu4KS+JywKICAgICAgICAgICAgcGFzdCA6ICclcyDgpIXgpJfgpL7gpKHgpYAnLAogICAgICAgICAgICBzIDogJ+CkleClh+CkueClgCDgpLjgpK7gpK8nLAogICAgICAgICAgICBtIDogJ+Ckj+CklSDgpK7gpL\/gpKjgpYfgpJ8nLAogICAgICAgICAgICBtbSA6ICclZCDgpK7gpL\/gpKjgpYfgpJ8nLAogICAgICAgICAgICBoIDogJ+Ckj+CklSDgpJjgpKPgpY3gpJ\/gpL4nLAogICAgICAgICAgICBoaCA6ICclZCDgpJjgpKPgpY3gpJ\/gpL4nLAogICAgICAgICAgICBkIDogJ+Ckj+CklSDgpKbgpL\/gpKgnLAogICAgICAgICAgICBkZCA6ICclZCDgpKbgpL\/gpKgnLAogICAgICAgICAgICBNIDogJ+Ckj+CklSDgpK7gpLngpL\/gpKjgpL4nLAogICAgICAgICAgICBNTSA6ICclZCDgpK7gpLngpL\/gpKjgpL4nLAogICAgICAgICAgICB5IDogJ+Ckj+CklSDgpKzgpLDgpY3gpLcnLAogICAgICAgICAgICB5eSA6ICclZCDgpKzgpLDgpY3gpLcnCiAgICAgICAgfSwKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNyAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gMXN0IGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBkdXRjaCAobmwpCi8vIGF1dGhvciA6IEpvcmlzIFLDtmxpbmcgOiBodHRwczovL2dpdGh1Yi5jb20vamp1cGl0ZXIKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHZhciBtb250aHNTaG9ydFdpdGhEb3RzID0gJ2phbi5fZmViLl9tcnQuX2Fwci5fbWVpX2p1bi5fanVsLl9hdWcuX3NlcC5fb2t0Ll9ub3YuX2RlYy4nLnNwbGl0KCdfJyksCiAgICAgICAgbW9udGhzU2hvcnRXaXRob3V0RG90cyA9ICdqYW5fZmViX21ydF9hcHJfbWVpX2p1bl9qdWxfYXVnX3NlcF9va3Rfbm92X2RlYycuc3BsaXQoJ18nKTsKCiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgnbmwnLCB7CiAgICAgICAgbW9udGhzIDogJ2phbnVhcmlfZmVicnVhcmlfbWFhcnRfYXByaWxfbWVpX2p1bmlfanVsaV9hdWd1c3R1c19zZXB0ZW1iZXJfb2t0b2Jlcl9ub3ZlbWJlcl9kZWNlbWJlcicuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6IGZ1bmN0aW9uIChtLCBmb3JtYXQpIHsKICAgICAgICAgICAgaWYgKC8tTU1NLS8udGVzdChmb3JtYXQpKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbW9udGhzU2hvcnRXaXRob3V0RG90c1ttLm1vbnRoKCldOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIG1vbnRoc1Nob3J0V2l0aERvdHNbbS5tb250aCgpXTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgd2Vla2RheXMgOiAnem9uZGFnX21hYW5kYWdfZGluc2RhZ193b2Vuc2RhZ19kb25kZXJkYWdfdnJpamRhZ196YXRlcmRhZycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ3pvLl9tYS5fZGkuX3dvLl9kby5fdnIuX3phLicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICdab19NYV9EaV9Xb19Eb19Wcl9aYScuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnSEg6bW0nLAogICAgICAgICAgICBMVFMgOiAnTFQ6c3MnLAogICAgICAgICAgICBMIDogJ0RELU1NLVlZWVknLAogICAgICAgICAgICBMTCA6ICdEIE1NTU0gWVlZWScsCiAgICAgICAgICAgIExMTCA6ICdEIE1NTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCBEIE1NTU0gWVlZWSBMVCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5OiAnW3ZhbmRhYWcgb21dIExUJywKICAgICAgICAgICAgbmV4dERheTogJ1ttb3JnZW4gb21dIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6ICdkZGRkIFtvbV0gTFQnLAogICAgICAgICAgICBsYXN0RGF5OiAnW2dpc3RlcmVuIG9tXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrOiAnW2FmZ2Vsb3Blbl0gZGRkZCBbb21dIExUJywKICAgICAgICAgICAgc2FtZUVsc2U6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAnb3ZlciAlcycsCiAgICAgICAgICAgIHBhc3QgOiAnJXMgZ2VsZWRlbicsCiAgICAgICAgICAgIHMgOiAnZWVuIHBhYXIgc2Vjb25kZW4nLAogICAgICAgICAgICBtIDogJ8Opw6luIG1pbnV1dCcsCiAgICAgICAgICAgIG1tIDogJyVkIG1pbnV0ZW4nLAogICAgICAgICAgICBoIDogJ8Opw6luIHV1cicsCiAgICAgICAgICAgIGhoIDogJyVkIHV1cicsCiAgICAgICAgICAgIGQgOiAnw6nDqW4gZGFnJywKICAgICAgICAgICAgZGQgOiAnJWQgZGFnZW4nLAogICAgICAgICAgICBNIDogJ8Opw6luIG1hYW5kJywKICAgICAgICAgICAgTU0gOiAnJWQgbWFhbmRlbicsCiAgICAgICAgICAgIHkgOiAnw6nDqW4gamFhcicsCiAgICAgICAgICAgIHl5IDogJyVkIGphYXInCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsUGFyc2U6IC9cZHsxLDJ9KHN0ZXxkZSkvLAogICAgICAgIG9yZGluYWwgOiBmdW5jdGlvbiAobnVtYmVyKSB7CiAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAoKG51bWJlciA9PT0gMSB8fCBudW1iZXIgPT09IDggfHwgbnVtYmVyID49IDIwKSA\/ICdzdGUnIDogJ2RlJyk7CiAgICAgICAgfSwKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNCAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gNHRoIGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBub3J3ZWdpYW4gbnlub3JzayAobm4pCi8vIGF1dGhvciA6IGh0dHBzOi8vZ2l0aHViLmNvbS9tZWNodXdpbmQKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdubicsIHsKICAgICAgICBtb250aHMgOiAnamFudWFyX2ZlYnJ1YXJfbWFyc19hcHJpbF9tYWlfanVuaV9qdWxpX2F1Z3VzdF9zZXB0ZW1iZXJfb2t0b2Jlcl9ub3ZlbWJlcl9kZXNlbWJlcicuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICdqYW5fZmViX21hcl9hcHJfbWFpX2p1bl9qdWxfYXVnX3NlcF9va3Rfbm92X2Rlcycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICdzdW5kYWdfbcOlbmRhZ190eXNkYWdfb25zZGFnX3RvcnNkYWdfZnJlZGFnX2xhdXJkYWcnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICdzdW5fbcOlbl90eXNfb25zX3Rvcl9mcmVfbGF1Jy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ3N1X23DpV90eV9vbl90b19mcl9sw7gnLnNwbGl0KCdfJyksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogJ0hIOm1tJywKICAgICAgICAgICAgTFRTIDogJ0xUOnNzJywKICAgICAgICAgICAgTCA6ICdERC5NTS5ZWVlZJywKICAgICAgICAgICAgTEwgOiAnRCBNTU1NIFlZWVknLAogICAgICAgICAgICBMTEwgOiAnRCBNTU1NIFlZWVkgTFQnLAogICAgICAgICAgICBMTExMIDogJ2RkZGQgRCBNTU1NIFlZWVkgTFQnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheTogJ1tJIGRhZyBrbG9ra2FdIExUJywKICAgICAgICAgICAgbmV4dERheTogJ1tJIG1vcmdvbiBrbG9ra2FdIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6ICdkZGRkIFtrbG9ra2FdIExUJywKICAgICAgICAgICAgbGFzdERheTogJ1tJIGfDpXIga2xva2thXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrOiAnW0bDuHJlZ8OlYW5kZV0gZGRkZCBba2xva2thXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ29tICVzJywKICAgICAgICAgICAgcGFzdCA6ICdmb3IgJXMgc2lkYW4nLAogICAgICAgICAgICBzIDogJ25va3JlIHNla3VuZCcsCiAgICAgICAgICAgIG0gOiAnZWl0IG1pbnV0dCcsCiAgICAgICAgICAgIG1tIDogJyVkIG1pbnV0dCcsCiAgICAgICAgICAgIGggOiAnZWluIHRpbWUnLAogICAgICAgICAgICBoaCA6ICclZCB0aW1hcicsCiAgICAgICAgICAgIGQgOiAnZWluIGRhZycsCiAgICAgICAgICAgIGRkIDogJyVkIGRhZ2FyJywKICAgICAgICAgICAgTSA6ICdlaW4gbcOlbmFkJywKICAgICAgICAgICAgTU0gOiAnJWQgbcOlbmFkZXInLAogICAgICAgICAgICB5IDogJ2VpdCDDpXInLAogICAgICAgICAgICB5eSA6ICclZCDDpXInCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsUGFyc2U6IC9cZHsxLDJ9XC4vLAogICAgICAgIG9yZGluYWwgOiAnJWQuJywKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNCAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gNHRoIGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBwb2xpc2ggKHBsKQovLyBhdXRob3IgOiBSYWZhbCBIaXJzeiA6IGh0dHBzOi8vZ2l0aHViLmNvbS9ldm9MCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICB2YXIgbW9udGhzTm9taW5hdGl2ZSA9ICdzdHljemXFhF9sdXR5X21hcnplY19rd2llY2llxYRfbWFqX2N6ZXJ3aWVjX2xpcGllY19zaWVycGllxYRfd3J6ZXNpZcWEX3Bhxbpkemllcm5pa19saXN0b3BhZF9ncnVkemllxYQnLnNwbGl0KCdfJyksCiAgICAgICAgbW9udGhzU3ViamVjdGl2ZSA9ICdzdHljem5pYV9sdXRlZ29fbWFyY2Ffa3dpZXRuaWFfbWFqYV9jemVyd2NhX2xpcGNhX3NpZXJwbmlhX3dyemXFm25pYV9wYcW6ZHppZXJuaWthX2xpc3RvcGFkYV9ncnVkbmlhJy5zcGxpdCgnXycpOwoKICAgIGZ1bmN0aW9uIHBsdXJhbChuKSB7CiAgICAgICAgcmV0dXJuIChuICUgMTAgPCA1KSAmJiAobiAlIDEwID4gMSkgJiYgKCh+fihuIC8gMTApICUgMTApICE9PSAxKTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2xhdGUobnVtYmVyLCB3aXRob3V0U3VmZml4LCBrZXkpIHsKICAgICAgICB2YXIgcmVzdWx0ID0gbnVtYmVyICsgJyAnOwogICAgICAgIHN3aXRjaCAoa2V5KSB7CiAgICAgICAgY2FzZSAnbSc6CiAgICAgICAgICAgIHJldHVybiB3aXRob3V0U3VmZml4ID8gJ21pbnV0YScgOiAnbWludXTEmSc7CiAgICAgICAgY2FzZSAnbW0nOgogICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKHBsdXJhbChudW1iZXIpID8gJ21pbnV0eScgOiAnbWludXQnKTsKICAgICAgICBjYXNlICdoJzoKICAgICAgICAgICAgcmV0dXJuIHdpdGhvdXRTdWZmaXggID8gJ2dvZHppbmEnICA6ICdnb2R6aW7EmSc7CiAgICAgICAgY2FzZSAnaGgnOgogICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKHBsdXJhbChudW1iZXIpID8gJ2dvZHppbnknIDogJ2dvZHppbicpOwogICAgICAgIGNhc2UgJ01NJzoKICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArIChwbHVyYWwobnVtYmVyKSA\/ICdtaWVzacSFY2UnIDogJ21pZXNpxJljeScpOwogICAgICAgIGNhc2UgJ3l5JzoKICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArIChwbHVyYWwobnVtYmVyKSA\/ICdsYXRhJyA6ICdsYXQnKTsKICAgICAgICB9CiAgICB9CgogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ3BsJywgewogICAgICAgIG1vbnRocyA6IGZ1bmN0aW9uIChtb21lbnRUb0Zvcm1hdCwgZm9ybWF0KSB7CiAgICAgICAgICAgIGlmICgvRCBNTU1NLy50ZXN0KGZvcm1hdCkpIHsKICAgICAgICAgICAgICAgIHJldHVybiBtb250aHNTdWJqZWN0aXZlW21vbWVudFRvRm9ybWF0Lm1vbnRoKCldOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIG1vbnRoc05vbWluYXRpdmVbbW9tZW50VG9Gb3JtYXQubW9udGgoKV07CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG1vbnRoc1Nob3J0IDogJ3N0eV9sdXRfbWFyX2t3aV9tYWpfY3plX2xpcF9zaWVfd3J6X3BhxbpfbGlzX2dydScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICduaWVkemllbGFfcG9uaWVkemlhxYJla193dG9yZWtfxZtyb2RhX2N6d2FydGVrX3BpxIV0ZWtfc29ib3RhJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAnbmllX3Bvbl93dF\/Fm3JfY3p3X3B0X3NiJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ05fUG5fV3RfxZpyX0N6X1B0X1NvJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdISDptbScsCiAgICAgICAgICAgIExUUyA6ICdMVDpzcycsCiAgICAgICAgICAgIEwgOiAnREQuTU0uWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZIExUJywKICAgICAgICAgICAgTExMTCA6ICdkZGRkLCBEIE1NTU0gWVlZWSBMVCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5OiAnW0R6acWbIG9dIExUJywKICAgICAgICAgICAgbmV4dERheTogJ1tKdXRybyBvXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrOiAnW1ddIGRkZGQgW29dIExUJywKICAgICAgICAgICAgbGFzdERheTogJ1tXY3pvcmFqIG9dIExUJywKICAgICAgICAgICAgbGFzdFdlZWs6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAodGhpcy5kYXkoKSkgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW1cgemVzesWCxIUgbmllZHppZWzEmSBvXSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbVyB6ZXN6xYLEhSDFm3JvZMSZIG9dIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1tXIHplc3rFgsSFIHNvYm90xJkgb10gTFQnOwogICAgICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1tXIHplc3rFgnldIGRkZGQgW29dIExUJzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2FtZUVsc2U6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAnemEgJXMnLAogICAgICAgICAgICBwYXN0IDogJyVzIHRlbXUnLAogICAgICAgICAgICBzIDogJ2tpbGthIHNla3VuZCcsCiAgICAgICAgICAgIG0gOiB0cmFuc2xhdGUsCiAgICAgICAgICAgIG1tIDogdHJhbnNsYXRlLAogICAgICAgICAgICBoIDogdHJhbnNsYXRlLAogICAgICAgICAgICBoaCA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgZCA6ICcxIGR6aWXFhCcsCiAgICAgICAgICAgIGRkIDogJyVkIGRuaScsCiAgICAgICAgICAgIE0gOiAnbWllc2nEhWMnLAogICAgICAgICAgICBNTSA6IHRyYW5zbGF0ZSwKICAgICAgICAgICAgeSA6ICdyb2snLAogICAgICAgICAgICB5eSA6IHRyYW5zbGF0ZQogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbFBhcnNlOiAvXGR7MSwyfVwuLywKICAgICAgICBvcmRpbmFsIDogJyVkLicsCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogYnJhemlsaWFuIHBvcnR1Z3Vlc2UgKHB0LWJyKQovLyBhdXRob3IgOiBDYWlvIFJpYmVpcm8gUGVyZWlyYSA6IGh0dHBzOi8vZ2l0aHViLmNvbS9jYWlvLXJpYmVpcm8tcGVyZWlyYQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ3B0LWJyJywgewogICAgICAgIG1vbnRocyA6ICdqYW5laXJvX2ZldmVyZWlyb19tYXLDp29fYWJyaWxfbWFpb19qdW5ob19qdWxob19hZ29zdG9fc2V0ZW1icm9fb3V0dWJyb19ub3ZlbWJyb19kZXplbWJybycuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICdqYW5fZmV2X21hcl9hYnJfbWFpX2p1bl9qdWxfYWdvX3NldF9vdXRfbm92X2Rleicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICdkb21pbmdvX3NlZ3VuZGEtZmVpcmFfdGVyw6dhLWZlaXJhX3F1YXJ0YS1mZWlyYV9xdWludGEtZmVpcmFfc2V4dGEtZmVpcmFfc8OhYmFkbycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ2RvbV9zZWdfdGVyX3F1YV9xdWlfc2V4X3PDoWInLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNNaW4gOiAnZG9tXzLCql8zwqpfNMKqXzXCql82wqpfc8OhYicuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnSEg6bW0nLAogICAgICAgICAgICBMVFMgOiAnTFQ6c3MnLAogICAgICAgICAgICBMIDogJ0REL01NL1lZWVknLAogICAgICAgICAgICBMTCA6ICdEIFtkZV0gTU1NTSBbZGVdIFlZWVknLAogICAgICAgICAgICBMTEwgOiAnRCBbZGVdIE1NTU0gW2RlXSBZWVlZIFvDoHNdIExUJywKICAgICAgICAgICAgTExMTCA6ICdkZGRkLCBEIFtkZV0gTU1NTSBbZGVdIFlZWVkgW8Ogc10gTFQnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheTogJ1tIb2plIMOgc10gTFQnLAogICAgICAgICAgICBuZXh0RGF5OiAnW0FtYW5ow6Mgw6BzXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrOiAnZGRkZCBbw6BzXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXk6ICdbT250ZW0gw6BzXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gKHRoaXMuZGF5KCkgPT09IDAgfHwgdGhpcy5kYXkoKSA9PT0gNikgPwogICAgICAgICAgICAgICAgICAgICdbw5psdGltb10gZGRkZCBbw6BzXSBMVCcgOiAvLyBTYXR1cmRheSArIFN1bmRheQogICAgICAgICAgICAgICAgICAgICdbw5psdGltYV0gZGRkZCBbw6BzXSBMVCc7IC8vIE1vbmRheSAtIEZyaWRheQogICAgICAgICAgICB9LAogICAgICAgICAgICBzYW1lRWxzZTogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICdlbSAlcycsCiAgICAgICAgICAgIHBhc3QgOiAnJXMgYXRyw6FzJywKICAgICAgICAgICAgcyA6ICdzZWd1bmRvcycsCiAgICAgICAgICAgIG0gOiAndW0gbWludXRvJywKICAgICAgICAgICAgbW0gOiAnJWQgbWludXRvcycsCiAgICAgICAgICAgIGggOiAndW1hIGhvcmEnLAogICAgICAgICAgICBoaCA6ICclZCBob3JhcycsCiAgICAgICAgICAgIGQgOiAndW0gZGlhJywKICAgICAgICAgICAgZGQgOiAnJWQgZGlhcycsCiAgICAgICAgICAgIE0gOiAndW0gbcOqcycsCiAgICAgICAgICAgIE1NIDogJyVkIG1lc2VzJywKICAgICAgICAgICAgeSA6ICd1bSBhbm8nLAogICAgICAgICAgICB5eSA6ICclZCBhbm9zJwogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbFBhcnNlOiAvXGR7MSwyfcK6LywKICAgICAgICBvcmRpbmFsIDogJyVkwronCiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogcG9ydHVndWVzZSAocHQpCi8vIGF1dGhvciA6IEplZmZlcnNvbiA6IGh0dHBzOi8vZ2l0aHViLmNvbS9qYWxleDc5CgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgncHQnLCB7CiAgICAgICAgbW9udGhzIDogJ2phbmVpcm9fZmV2ZXJlaXJvX21hcsOnb19hYnJpbF9tYWlvX2p1bmhvX2p1bGhvX2Fnb3N0b19zZXRlbWJyb19vdXR1YnJvX25vdmVtYnJvX2RlemVtYnJvJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJ2phbl9mZXZfbWFyX2Ficl9tYWlfanVuX2p1bF9hZ29fc2V0X291dF9ub3ZfZGV6Jy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ2RvbWluZ29fc2VndW5kYS1mZWlyYV90ZXLDp2EtZmVpcmFfcXVhcnRhLWZlaXJhX3F1aW50YS1mZWlyYV9zZXh0YS1mZWlyYV9zw6FiYWRvJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAnZG9tX3NlZ190ZXJfcXVhX3F1aV9zZXhfc8OhYicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICdkb21fMsKqXzPCql80wqpfNcKqXzbCql9zw6FiJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdISDptbScsCiAgICAgICAgICAgIExUUyA6ICdMVDpzcycsCiAgICAgICAgICAgIEwgOiAnREQvTU0vWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgW2RlXSBNTU1NIFtkZV0gWVlZWScsCiAgICAgICAgICAgIExMTCA6ICdEIFtkZV0gTU1NTSBbZGVdIFlZWVkgTFQnLAogICAgICAgICAgICBMTExMIDogJ2RkZGQsIEQgW2RlXSBNTU1NIFtkZV0gWVlZWSBMVCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5OiAnW0hvamUgw6BzXSBMVCcsCiAgICAgICAgICAgIG5leHREYXk6ICdbQW1hbmjDoyDDoHNdIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6ICdkZGRkIFvDoHNdIExUJywKICAgICAgICAgICAgbGFzdERheTogJ1tPbnRlbSDDoHNdIExUJywKICAgICAgICAgICAgbGFzdFdlZWs6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAodGhpcy5kYXkoKSA9PT0gMCB8fCB0aGlzLmRheSgpID09PSA2KSA\/CiAgICAgICAgICAgICAgICAgICAgJ1vDmmx0aW1vXSBkZGRkIFvDoHNdIExUJyA6IC8vIFNhdHVyZGF5ICsgU3VuZGF5CiAgICAgICAgICAgICAgICAgICAgJ1vDmmx0aW1hXSBkZGRkIFvDoHNdIExUJzsgLy8gTW9uZGF5IC0gRnJpZGF5CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNhbWVFbHNlOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ2VtICVzJywKICAgICAgICAgICAgcGFzdCA6ICdow6EgJXMnLAogICAgICAgICAgICBzIDogJ3NlZ3VuZG9zJywKICAgICAgICAgICAgbSA6ICd1bSBtaW51dG8nLAogICAgICAgICAgICBtbSA6ICclZCBtaW51dG9zJywKICAgICAgICAgICAgaCA6ICd1bWEgaG9yYScsCiAgICAgICAgICAgIGhoIDogJyVkIGhvcmFzJywKICAgICAgICAgICAgZCA6ICd1bSBkaWEnLAogICAgICAgICAgICBkZCA6ICclZCBkaWFzJywKICAgICAgICAgICAgTSA6ICd1bSBtw6pzJywKICAgICAgICAgICAgTU0gOiAnJWQgbWVzZXMnLAogICAgICAgICAgICB5IDogJ3VtIGFubycsCiAgICAgICAgICAgIHl5IDogJyVkIGFub3MnCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsUGFyc2U6IC9cZHsxLDJ9wrovLAogICAgICAgIG9yZGluYWwgOiAnJWTCuicsCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogcm9tYW5pYW4gKHJvKQovLyBhdXRob3IgOiBWbGFkIEd1cmRpZ2EgOiBodHRwczovL2dpdGh1Yi5jb20vZ3VyZGlnYQovLyBhdXRob3IgOiBWYWxlbnRpbiBBZ2FjaGkgOiBodHRwczovL2dpdGh1Yi5jb20vYXZhbHkKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIGZ1bmN0aW9uIHJlbGF0aXZlVGltZVdpdGhQbHVyYWwobnVtYmVyLCB3aXRob3V0U3VmZml4LCBrZXkpIHsKICAgICAgICB2YXIgZm9ybWF0ID0gewogICAgICAgICAgICAgICAgJ21tJzogJ21pbnV0ZScsCiAgICAgICAgICAgICAgICAnaGgnOiAnb3JlJywKICAgICAgICAgICAgICAgICdkZCc6ICd6aWxlJywKICAgICAgICAgICAgICAgICdNTSc6ICdsdW5pJywKICAgICAgICAgICAgICAgICd5eSc6ICdhbmknCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNlcGFyYXRvciA9ICcgJzsKICAgICAgICBpZiAobnVtYmVyICUgMTAwID49IDIwIHx8IChudW1iZXIgPj0gMTAwICYmIG51bWJlciAlIDEwMCA9PT0gMCkpIHsKICAgICAgICAgICAgc2VwYXJhdG9yID0gJyBkZSAnOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIG51bWJlciArIHNlcGFyYXRvciArIGZvcm1hdFtrZXldOwogICAgfQoKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdybycsIHsKICAgICAgICBtb250aHMgOiAnaWFudWFyaWVfZmVicnVhcmllX21hcnRpZV9hcHJpbGllX21haV9pdW5pZV9pdWxpZV9hdWd1c3Rfc2VwdGVtYnJpZV9vY3RvbWJyaWVfbm9pZW1icmllX2RlY2VtYnJpZScuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICdpYW4uX2ZlYnIuX21hcnQuX2Fwci5fbWFpX2l1bi5faXVsLl9hdWcuX3NlcHQuX29jdC5fbm92Ll9kZWMuJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ2R1bWluaWPEg19sdW5pX21hcsibaV9taWVyY3VyaV9qb2lfdmluZXJpX3PDom1ixIN0xIMnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICdEdW1fTHVuX01hcl9NaWVfSm9pX1Zpbl9Tw6JtJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ0R1X0x1X01hX01pX0pvX1ZpX1PDoicuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnSDptbScsCiAgICAgICAgICAgIExUUyA6ICdMVDpzcycsCiAgICAgICAgICAgIEwgOiAnREQuTU0uWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZIEg6bW0nLAogICAgICAgICAgICBMTExMIDogJ2RkZGQsIEQgTU1NTSBZWVlZIEg6bW0nCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheTogJ1themkgbGFdIExUJywKICAgICAgICAgICAgbmV4dERheTogJ1ttw6JpbmUgbGFdIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6ICdkZGRkIFtsYV0gTFQnLAogICAgICAgICAgICBsYXN0RGF5OiAnW2llcmkgbGFdIExUJywKICAgICAgICAgICAgbGFzdFdlZWs6ICdbZm9zdGFdIGRkZGQgW2xhXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ3Blc3RlICVzJywKICAgICAgICAgICAgcGFzdCA6ICclcyDDrm4gdXJtxIMnLAogICAgICAgICAgICBzIDogJ2PDonRldmEgc2VjdW5kZScsCiAgICAgICAgICAgIG0gOiAndW4gbWludXQnLAogICAgICAgICAgICBtbSA6IHJlbGF0aXZlVGltZVdpdGhQbHVyYWwsCiAgICAgICAgICAgIGggOiAnbyBvcsSDJywKICAgICAgICAgICAgaGggOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsLAogICAgICAgICAgICBkIDogJ28gemknLAogICAgICAgICAgICBkZCA6IHJlbGF0aXZlVGltZVdpdGhQbHVyYWwsCiAgICAgICAgICAgIE0gOiAnbyBsdW7EgycsCiAgICAgICAgICAgIE1NIDogcmVsYXRpdmVUaW1lV2l0aFBsdXJhbCwKICAgICAgICAgICAgeSA6ICd1biBhbicsCiAgICAgICAgICAgIHl5IDogcmVsYXRpdmVUaW1lV2l0aFBsdXJhbAogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDcgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDFzdCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogcnVzc2lhbiAocnUpCi8vIGF1dGhvciA6IFZpa3Rvcm1pbmF0b3IgOiBodHRwczovL2dpdGh1Yi5jb20vVmlrdG9ybWluYXRvcgovLyBBdXRob3IgOiBNZW5lbGlvbiBFbGVuc8O6bGUgOiBodHRwczovL2dpdGh1Yi5jb20vT2lyZQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgZnVuY3Rpb24gcGx1cmFsKHdvcmQsIG51bSkgewogICAgICAgIHZhciBmb3JtcyA9IHdvcmQuc3BsaXQoJ18nKTsKICAgICAgICByZXR1cm4gbnVtICUgMTAgPT09IDEgJiYgbnVtICUgMTAwICE9PSAxMSA\/IGZvcm1zWzBdIDogKG51bSAlIDEwID49IDIgJiYgbnVtICUgMTAgPD0gNCAmJiAobnVtICUgMTAwIDwgMTAgfHwgbnVtICUgMTAwID49IDIwKSA\/IGZvcm1zWzFdIDogZm9ybXNbMl0pOwogICAgfQoKICAgIGZ1bmN0aW9uIHJlbGF0aXZlVGltZVdpdGhQbHVyYWwobnVtYmVyLCB3aXRob3V0U3VmZml4LCBrZXkpIHsKICAgICAgICB2YXIgZm9ybWF0ID0gewogICAgICAgICAgICAnbW0nOiB3aXRob3V0U3VmZml4ID8gJ9C80LjQvdGD0YLQsF\/QvNC40L3Rg9GC0Ytf0LzQuNC90YPRgicgOiAn0LzQuNC90YPRgtGDX9C80LjQvdGD0YLRi1\/QvNC40L3Rg9GCJywKICAgICAgICAgICAgJ2hoJzogJ9GH0LDRgV\/Rh9Cw0YHQsF\/Rh9Cw0YHQvtCyJywKICAgICAgICAgICAgJ2RkJzogJ9C00LXQvdGMX9C00L3Rj1\/QtNC90LXQuScsCiAgICAgICAgICAgICdNTSc6ICfQvNC10YHRj9GGX9C80LXRgdGP0YbQsF\/QvNC10YHRj9GG0LXQsicsCiAgICAgICAgICAgICd5eSc6ICfQs9C+0LRf0LPQvtC00LBf0LvQtdGCJwogICAgICAgIH07CiAgICAgICAgaWYgKGtleSA9PT0gJ20nKSB7CiAgICAgICAgICAgIHJldHVybiB3aXRob3V0U3VmZml4ID8gJ9C80LjQvdGD0YLQsCcgOiAn0LzQuNC90YPRgtGDJzsKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAnICcgKyBwbHVyYWwoZm9ybWF0W2tleV0sICtudW1iZXIpOwogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBtb250aHNDYXNlUmVwbGFjZShtLCBmb3JtYXQpIHsKICAgICAgICB2YXIgbW9udGhzID0gewogICAgICAgICAgICAnbm9taW5hdGl2ZSc6ICfRj9C90LLQsNGA0Yxf0YTQtdCy0YDQsNC70Yxf0LzQsNGA0YJf0LDQv9GA0LXQu9GMX9C80LDQuV\/QuNGO0L3RjF\/QuNGO0LvRjF\/QsNCy0LPRg9GB0YJf0YHQtdC90YLRj9Cx0YDRjF\/QvtC60YLRj9Cx0YDRjF\/QvdC+0Y\/QsdGA0Yxf0LTQtdC60LDQsdGA0YwnLnNwbGl0KCdfJyksCiAgICAgICAgICAgICdhY2N1c2F0aXZlJzogJ9GP0L3QstCw0YDRj1\/RhNC10LLRgNCw0LvRj1\/QvNCw0YDRgtCwX9Cw0L\/RgNC10LvRj1\/QvNCw0Y9f0LjRjtC90Y9f0LjRjtC70Y9f0LDQstCz0YPRgdGC0LBf0YHQtdC90YLRj9Cx0YDRj1\/QvtC60YLRj9Cx0YDRj1\/QvdC+0Y\/QsdGA0Y9f0LTQtdC60LDQsdGA0Y8nLnNwbGl0KCdfJykKICAgICAgICB9LAoKICAgICAgICBub3VuQ2FzZSA9ICgvRFtvRF0\/KFxbW15cW1xdXSpcXXxccyspK01NTU0\/LykudGVzdChmb3JtYXQpID8KICAgICAgICAgICAgJ2FjY3VzYXRpdmUnIDoKICAgICAgICAgICAgJ25vbWluYXRpdmUnOwoKICAgICAgICByZXR1cm4gbW9udGhzW25vdW5DYXNlXVttLm1vbnRoKCldOwogICAgfQoKICAgIGZ1bmN0aW9uIG1vbnRoc1Nob3J0Q2FzZVJlcGxhY2UobSwgZm9ybWF0KSB7CiAgICAgICAgdmFyIG1vbnRoc1Nob3J0ID0gewogICAgICAgICAgICAnbm9taW5hdGl2ZSc6ICfRj9C90LJf0YTQtdCyX9C80LDRgNGCX9Cw0L\/RgF\/QvNCw0Llf0LjRjtC90Yxf0LjRjtC70Yxf0LDQstCzX9GB0LXQvV\/QvtC60YJf0L3QvtGPX9C00LXQuicuc3BsaXQoJ18nKSwKICAgICAgICAgICAgJ2FjY3VzYXRpdmUnOiAn0Y\/QvdCyX9GE0LXQsl\/QvNCw0YBf0LDQv9GAX9C80LDRj1\/QuNGO0L3Rj1\/QuNGO0LvRj1\/QsNCy0LNf0YHQtdC9X9C+0LrRgl\/QvdC+0Y9f0LTQtdC6Jy5zcGxpdCgnXycpCiAgICAgICAgfSwKCiAgICAgICAgbm91bkNhc2UgPSAoL0Rbb0RdPyhcW1teXFtcXV0qXF18XHMrKStNTU1NPy8pLnRlc3QoZm9ybWF0KSA\/CiAgICAgICAgICAgICdhY2N1c2F0aXZlJyA6CiAgICAgICAgICAgICdub21pbmF0aXZlJzsKCiAgICAgICAgcmV0dXJuIG1vbnRoc1Nob3J0W25vdW5DYXNlXVttLm1vbnRoKCldOwogICAgfQoKICAgIGZ1bmN0aW9uIHdlZWtkYXlzQ2FzZVJlcGxhY2UobSwgZm9ybWF0KSB7CiAgICAgICAgdmFyIHdlZWtkYXlzID0gewogICAgICAgICAgICAnbm9taW5hdGl2ZSc6ICfQstC+0YHQutGA0LXRgdC10L3RjNC1X9C\/0L7QvdC10LTQtdC70YzQvdC40Lpf0LLRgtC+0YDQvdC40Lpf0YHRgNC10LTQsF\/Rh9C10YLQstC10YDQs1\/Qv9GP0YLQvdC40YbQsF\/RgdGD0LHQsdC+0YLQsCcuc3BsaXQoJ18nKSwKICAgICAgICAgICAgJ2FjY3VzYXRpdmUnOiAn0LLQvtGB0LrRgNC10YHQtdC90YzQtV\/Qv9C+0L3QtdC00LXQu9GM0L3QuNC6X9Cy0YLQvtGA0L3QuNC6X9GB0YDQtdC00YNf0YfQtdGC0LLQtdGA0LNf0L\/Rj9GC0L3QuNGG0YNf0YHRg9Cx0LHQvtGC0YMnLnNwbGl0KCdfJykKICAgICAgICB9LAoKICAgICAgICBub3VuQ2FzZSA9ICgvXFsgP1vQktCyXSA\/KD860L\/RgNC+0YjQu9GD0Y580YHQu9C10LTRg9GO0YnRg9GOfNGN0YLRgyk\/ID9cXSA\/ZGRkZC8pLnRlc3QoZm9ybWF0KSA\/CiAgICAgICAgICAgICdhY2N1c2F0aXZlJyA6CiAgICAgICAgICAgICdub21pbmF0aXZlJzsKCiAgICAgICAgcmV0dXJuIHdlZWtkYXlzW25vdW5DYXNlXVttLmRheSgpXTsKICAgIH0KCiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgncnUnLCB7CiAgICAgICAgbW9udGhzIDogbW9udGhzQ2FzZVJlcGxhY2UsCiAgICAgICAgbW9udGhzU2hvcnQgOiBtb250aHNTaG9ydENhc2VSZXBsYWNlLAogICAgICAgIHdlZWtkYXlzIDogd2Vla2RheXNDYXNlUmVwbGFjZSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ9Cy0YFf0L\/QvV\/QstGCX9GB0YBf0YfRgl\/Qv9GCX9GB0LEnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNNaW4gOiAn0LLRgV\/Qv9C9X9Cy0YJf0YHRgF\/Rh9GCX9C\/0YJf0YHQsScuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNQYXJzZSA6IFsvXtGP0L3Qsi9pLCAvXtGE0LXQsi9pLCAvXtC80LDRgC9pLCAvXtCw0L\/RgC9pLCAvXtC80LBb0Ll80Y9dL2ksIC9e0LjRjtC9L2ksIC9e0LjRjtC7L2ksIC9e0LDQstCzL2ksIC9e0YHQtdC9L2ksIC9e0L7QutGCL2ksIC9e0L3QvtGPL2ksIC9e0LTQtdC6L2ldLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdISDptbScsCiAgICAgICAgICAgIExUUyA6ICdMVDpzcycsCiAgICAgICAgICAgIEwgOiAnREQuTU0uWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZINCzLicsCiAgICAgICAgICAgIExMTCA6ICdEIE1NTU0gWVlZWSDQsy4sIExUJywKICAgICAgICAgICAgTExMTCA6ICdkZGRkLCBEIE1NTU0gWVlZWSDQsy4sIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICdb0KHQtdCz0L7QtNC90Y8g0LJdIExUJywKICAgICAgICAgICAgbmV4dERheTogJ1vQl9Cw0LLRgtGA0LAg0LJdIExUJywKICAgICAgICAgICAgbGFzdERheTogJ1vQktGH0LXRgNCwINCyXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kYXkoKSA9PT0gMiA\/ICdb0JLQvl0gZGRkZCBb0LJdIExUJyA6ICdb0JJdIGRkZGQgW9CyXSBMVCc7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhc3RXZWVrOiBmdW5jdGlvbiAobm93KSB7CiAgICAgICAgICAgICAgICBpZiAobm93LndlZWsoKSAhPT0gdGhpcy53ZWVrKCkpIHsKICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKHRoaXMuZGF5KCkpIHsKICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnW9CSINC\/0YDQvtGI0LvQvtC1XSBkZGRkIFvQsl0gTFQnOwogICAgICAgICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1vQkiDQv9GA0L7RiNC70YvQuV0gZGRkZCBb0LJdIExUJzsKICAgICAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdb0JIg0L\/RgNC+0YjQu9GD0Y5dIGRkZGQgW9CyXSBMVCc7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5kYXkoKSA9PT0gMikgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1vQktC+XSBkZGRkIFvQsl0gTFQnOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnW9CSXSBkZGRkIFvQsl0gTFQnOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2FtZUVsc2U6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAn0YfQtdGA0LXQtyAlcycsCiAgICAgICAgICAgIHBhc3QgOiAnJXMg0L3QsNC30LDQtCcsCiAgICAgICAgICAgIHMgOiAn0L3QtdGB0LrQvtC70YzQutC+INGB0LXQutGD0L3QtCcsCiAgICAgICAgICAgIG0gOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsLAogICAgICAgICAgICBtbSA6IHJlbGF0aXZlVGltZVdpdGhQbHVyYWwsCiAgICAgICAgICAgIGggOiAn0YfQsNGBJywKICAgICAgICAgICAgaGggOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsLAogICAgICAgICAgICBkIDogJ9C00LXQvdGMJywKICAgICAgICAgICAgZGQgOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsLAogICAgICAgICAgICBNIDogJ9C80LXRgdGP0YYnLAogICAgICAgICAgICBNTSA6IHJlbGF0aXZlVGltZVdpdGhQbHVyYWwsCiAgICAgICAgICAgIHkgOiAn0LPQvtC0JywKICAgICAgICAgICAgeXkgOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsCiAgICAgICAgfSwKCiAgICAgICAgbWVyaWRpZW1QYXJzZTogL9C90L7Rh9C4fNGD0YLRgNCwfNC00L3Rj3zQstC10YfQtdGA0LAvaSwKICAgICAgICBpc1BNIDogZnVuY3Rpb24gKGlucHV0KSB7CiAgICAgICAgICAgIHJldHVybiAvXijQtNC90Y980LLQtdGH0LXRgNCwKSQvLnRlc3QoaW5wdXQpOwogICAgICAgIH0sCgogICAgICAgIG1lcmlkaWVtIDogZnVuY3Rpb24gKGhvdXIsIG1pbnV0ZSwgaXNMb3dlcikgewogICAgICAgICAgICBpZiAoaG91ciA8IDQpIHsKICAgICAgICAgICAgICAgIHJldHVybiAn0L3QvtGH0LgnOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhvdXIgPCAxMikgewogICAgICAgICAgICAgICAgcmV0dXJuICfRg9GC0YDQsCc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaG91ciA8IDE3KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ9C00L3Rjyc7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ9Cy0LXRh9C10YDQsCc7CiAgICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICBvcmRpbmFsUGFyc2U6IC9cZHsxLDJ9LSjQuXzQs9C+fNGPKS8sCiAgICAgICAgb3JkaW5hbDogZnVuY3Rpb24gKG51bWJlciwgcGVyaW9kKSB7CiAgICAgICAgICAgIHN3aXRjaCAocGVyaW9kKSB7CiAgICAgICAgICAgIGNhc2UgJ00nOgogICAgICAgICAgICBjYXNlICdkJzoKICAgICAgICAgICAgY2FzZSAnREREJzoKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAnLdC5JzsKICAgICAgICAgICAgY2FzZSAnRCc6CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJy3Qs9C+JzsKICAgICAgICAgICAgY2FzZSAndyc6CiAgICAgICAgICAgIGNhc2UgJ1cnOgogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICct0Y8nOwogICAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlcjsKICAgICAgICAgICAgfQogICAgICAgIH0sCgogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA3ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiAxc3QgaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKLy8gbW9tZW50LmpzIGxvY2FsZSBjb25maWd1cmF0aW9uCi8vIGxvY2FsZSA6IHNsb3ZhayAoc2spCi8vIGF1dGhvciA6IE1hcnRpbiBNaW5rYSA6IGh0dHBzOi8vZ2l0aHViLmNvbS9rMnMKLy8gYmFzZWQgb24gd29yayBvZiBwZXRyYmVsYSA6IGh0dHBzOi8vZ2l0aHViLmNvbS9wZXRyYmVsYQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgdmFyIG1vbnRocyA9ICdqYW51w6FyX2ZlYnJ1w6FyX21hcmVjX2FwcsOtbF9tw6FqX2rDum5fasO6bF9hdWd1c3Rfc2VwdGVtYmVyX29rdMOzYmVyX25vdmVtYmVyX2RlY2VtYmVyJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0ID0gJ2phbl9mZWJfbWFyX2Fwcl9tw6FqX2rDum5fasO6bF9hdWdfc2VwX29rdF9ub3ZfZGVjJy5zcGxpdCgnXycpOwoKICAgIGZ1bmN0aW9uIHBsdXJhbChuKSB7CiAgICAgICAgcmV0dXJuIChuID4gMSkgJiYgKG4gPCA1KTsKICAgIH0KCiAgICBmdW5jdGlvbiB0cmFuc2xhdGUobnVtYmVyLCB3aXRob3V0U3VmZml4LCBrZXksIGlzRnV0dXJlKSB7CiAgICAgICAgdmFyIHJlc3VsdCA9IG51bWJlciArICcgJzsKICAgICAgICBzd2l0Y2ggKGtleSkgewogICAgICAgIGNhc2UgJ3MnOiAgLy8gYSBmZXcgc2Vjb25kcyAvIGluIGEgZmV3IHNlY29uZHMgLyBhIGZldyBzZWNvbmRzIGFnbwogICAgICAgICAgICByZXR1cm4gKHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUpID8gJ3DDoXIgc2Vrw7puZCcgOiAncMOhciBzZWt1bmRhbWknOwogICAgICAgIGNhc2UgJ20nOiAgLy8gYSBtaW51dGUgLyBpbiBhIG1pbnV0ZSAvIGEgbWludXRlIGFnbwogICAgICAgICAgICByZXR1cm4gd2l0aG91dFN1ZmZpeCA\/ICdtaW7DunRhJyA6IChpc0Z1dHVyZSA\/ICdtaW7DunR1JyA6ICdtaW7DunRvdScpOwogICAgICAgIGNhc2UgJ21tJzogLy8gOSBtaW51dGVzIC8gaW4gOSBtaW51dGVzIC8gOSBtaW51dGVzIGFnbwogICAgICAgICAgICBpZiAod2l0aG91dFN1ZmZpeCB8fCBpc0Z1dHVyZSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArIChwbHVyYWwobnVtYmVyKSA\/ICdtaW7DunR5JyA6ICdtaW7DunQnKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAnbWluw7p0YW1pJzsKICAgICAgICAgICAgfQogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdoJzogIC8vIGFuIGhvdXIgLyBpbiBhbiBob3VyIC8gYW4gaG91ciBhZ28KICAgICAgICAgICAgcmV0dXJuIHdpdGhvdXRTdWZmaXggPyAnaG9kaW5hJyA6IChpc0Z1dHVyZSA\/ICdob2RpbnUnIDogJ2hvZGlub3UnKTsKICAgICAgICBjYXNlICdoaCc6IC8vIDkgaG91cnMgLyBpbiA5IGhvdXJzIC8gOSBob3VycyBhZ28KICAgICAgICAgICAgaWYgKHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUpIHsKICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAocGx1cmFsKG51bWJlcikgPyAnaG9kaW55JyA6ICdob2TDrW4nKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAnaG9kaW5hbWknOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ2QnOiAgLy8gYSBkYXkgLyBpbiBhIGRheSAvIGEgZGF5IGFnbwogICAgICAgICAgICByZXR1cm4gKHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUpID8gJ2RlxYgnIDogJ2TFiG9tJzsKICAgICAgICBjYXNlICdkZCc6IC8vIDkgZGF5cyAvIGluIDkgZGF5cyAvIDkgZGF5cyBhZ28KICAgICAgICAgICAgaWYgKHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUpIHsKICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAocGx1cmFsKG51bWJlcikgPyAnZG5pJyA6ICdkbsOtJyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgJ2TFiGFtaSc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnTSc6ICAvLyBhIG1vbnRoIC8gaW4gYSBtb250aCAvIGEgbW9udGggYWdvCiAgICAgICAgICAgIHJldHVybiAod2l0aG91dFN1ZmZpeCB8fCBpc0Z1dHVyZSkgPyAnbWVzaWFjJyA6ICdtZXNpYWNvbSc7CiAgICAgICAgY2FzZSAnTU0nOiAvLyA5IG1vbnRocyAvIGluIDkgbW9udGhzIC8gOSBtb250aHMgYWdvCiAgICAgICAgICAgIGlmICh3aXRob3V0U3VmZml4IHx8IGlzRnV0dXJlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgKHBsdXJhbChudW1iZXIpID8gJ21lc2lhY2UnIDogJ21lc2lhY292Jyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgJ21lc2lhY21pJzsKICAgICAgICAgICAgfQogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICd5JzogIC8vIGEgeWVhciAvIGluIGEgeWVhciAvIGEgeWVhciBhZ28KICAgICAgICAgICAgcmV0dXJuICh3aXRob3V0U3VmZml4IHx8IGlzRnV0dXJlKSA\/ICdyb2snIDogJ3Jva29tJzsKICAgICAgICBjYXNlICd5eSc6IC8vIDkgeWVhcnMgLyBpbiA5IHllYXJzIC8gOSB5ZWFycyBhZ28KICAgICAgICAgICAgaWYgKHdpdGhvdXRTdWZmaXggfHwgaXNGdXR1cmUpIHsKICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAocGx1cmFsKG51bWJlcikgPyAncm9reScgOiAncm9rb3YnKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAncm9rbWknOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgnc2snLCB7CiAgICAgICAgbW9udGhzIDogbW9udGhzLAogICAgICAgIG1vbnRoc1Nob3J0IDogbW9udGhzU2hvcnQsCiAgICAgICAgbW9udGhzUGFyc2UgOiAoZnVuY3Rpb24gKG1vbnRocywgbW9udGhzU2hvcnQpIHsKICAgICAgICAgICAgdmFyIGksIF9tb250aHNQYXJzZSA9IFtdOwogICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgMTI7IGkrKykgewogICAgICAgICAgICAgICAgLy8gdXNlIGN1c3RvbSBwYXJzZXIgdG8gc29sdmUgcHJvYmxlbSB3aXRoIEp1bHkgKMSNZXJ2ZW5lYykKICAgICAgICAgICAgICAgIF9tb250aHNQYXJzZVtpXSA9IG5ldyBSZWdFeHAoJ14nICsgbW9udGhzW2ldICsgJyR8XicgKyBtb250aHNTaG9ydFtpXSArICckJywgJ2knKTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gX21vbnRoc1BhcnNlOwogICAgICAgIH0obW9udGhzLCBtb250aHNTaG9ydCkpLAogICAgICAgIHdlZWtkYXlzIDogJ25lZGXEvmFfcG9uZGVsb2tfdXRvcm9rX3N0cmVkYV\\/ICdQRCcgOiAnTUQnOwogICAgICAgIH0sCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogJ0hIOm1tJywKICAgICAgICAgICAgTFRTIDogJ0xUOnNzJywKICAgICAgICAgICAgTCA6ICdERC9NTS9ZWVlZJywKICAgICAgICAgICAgTEwgOiAnRCBNTU1NIFlZWVknLAogICAgICAgICAgICBMTEwgOiAnRCBNTU1NIFlZWVkgTFQnLAogICAgICAgICAgICBMTExMIDogJ2RkZGQsIEQgTU1NTSBZWVlZIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW1NvdCBuw6tdIExUJywKICAgICAgICAgICAgbmV4dERheSA6ICdbTmVzw6tyIG7Dq10gTFQnLAogICAgICAgICAgICBuZXh0V2VlayA6ICdkZGRkIFtuw6tdIExUJywKICAgICAgICAgICAgbGFzdERheSA6ICdbRGplIG7Dq10gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdkZGRkIFtlIGthbHVhciBuw6tdIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ27DqyAlcycsCiAgICAgICAgICAgIHBhc3QgOiAnJXMgbcOrIHBhcsOrJywKICAgICAgICAgICAgcyA6ICdkaXNhIHNla29uZGEnLAogICAgICAgICAgICBtIDogJ25qw6sgbWludXTDqycsCiAgICAgICAgICAgIG1tIDogJyVkIG1pbnV0YScsCiAgICAgICAgICAgIGggOiAnbmrDqyBvcsOrJywKICAgICAgICAgICAgaGggOiAnJWQgb3LDqycsCiAgICAgICAgICAgIGQgOiAnbmrDqyBkaXTDqycsCiAgICAgICAgICAgIGRkIDogJyVkIGRpdMOrJywKICAgICAgICAgICAgTSA6ICduasOrIG11YWonLAogICAgICAgICAgICBNTSA6ICclZCBtdWFqJywKICAgICAgICAgICAgeSA6ICduasOrIHZpdCcsCiAgICAgICAgICAgIHl5IDogJyVkIHZpdGUnCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsUGFyc2U6IC9cZHsxLDJ9XC4vLAogICAgICAgIG9yZGluYWwgOiAnJWQuJywKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNCAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gNHRoIGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBTZXJiaWFuLWN5cmlsbGljIChzci1jeXJsKQovLyBhdXRob3IgOiBNaWxhbiBKYW5hxI1rb3ZpxIc8bWlsYW5qYW5hY2tvdmljQGdtYWlsLmNvbT4gOiBodHRwczovL2dpdGh1Yi5jb20vbWlsYW4tagoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgdmFyIHRyYW5zbGF0b3IgPSB7CiAgICAgICAgd29yZHM6IHsgLy9EaWZmZXJlbnQgZ3JhbW1hdGljYWwgY2FzZXMKICAgICAgICAgICAgbTogWyfRmNC10LTQsNC9INC80LjQvdGD0YInLCAn0ZjQtdC00L3QtSDQvNC40L3Rg9GC0LUnXSwKICAgICAgICAgICAgbW06IFsn0LzQuNC90YPRgicsICfQvNC40L3Rg9GC0LUnLCAn0LzQuNC90YPRgtCwJ10sCiAgICAgICAgICAgIGg6IFsn0ZjQtdC00LDQvSDRgdCw0YInLCAn0ZjQtdC00L3QvtCzINGB0LDRgtCwJ10sCiAgICAgICAgICAgIGhoOiBbJ9GB0LDRgicsICfRgdCw0YLQsCcsICfRgdCw0YLQuCddLAogICAgICAgICAgICBkZDogWyfQtNCw0L0nLCAn0LTQsNC90LAnLCAn0LTQsNC90LAnXSwKICAgICAgICAgICAgTU06IFsn0LzQtdGB0LXRhicsICfQvNC10YHQtdGG0LAnLCAn0LzQtdGB0LXRhtC4J10sCiAgICAgICAgICAgIHl5OiBbJ9Cz0L7QtNC40L3QsCcsICfQs9C+0LTQuNC90LUnLCAn0LPQvtC00LjQvdCwJ10KICAgICAgICB9LAogICAgICAgIGNvcnJlY3RHcmFtbWF0aWNhbENhc2U6IGZ1bmN0aW9uIChudW1iZXIsIHdvcmRLZXkpIHsKICAgICAgICAgICAgcmV0dXJuIG51bWJlciA9PT0gMSA\/IHdvcmRLZXlbMF0gOiAobnVtYmVyID49IDIgJiYgbnVtYmVyIDw9IDQgPyB3b3JkS2V5WzFdIDogd29yZEtleVsyXSk7CiAgICAgICAgfSwKICAgICAgICB0cmFuc2xhdGU6IGZ1bmN0aW9uIChudW1iZXIsIHdpdGhvdXRTdWZmaXgsIGtleSkgewogICAgICAgICAgICB2YXIgd29yZEtleSA9IHRyYW5zbGF0b3Iud29yZHNba2V5XTsKICAgICAgICAgICAgaWYgKGtleS5sZW5ndGggPT09IDEpIHsKICAgICAgICAgICAgICAgIHJldHVybiB3aXRob3V0U3VmZml4ID8gd29yZEtleVswXSA6IHdvcmRLZXlbMV07CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJyAnICsgdHJhbnNsYXRvci5jb3JyZWN0R3JhbW1hdGljYWxDYXNlKG51bWJlciwgd29yZEtleSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9OwoKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCdzci1jeXJsJywgewogICAgICAgIG1vbnRoczogWyfRmNCw0L3Rg9Cw0YAnLCAn0YTQtdCx0YDRg9Cw0YAnLCAn0LzQsNGA0YInLCAn0LDQv9GA0LjQuycsICfQvNCw0ZgnLCAn0ZjRg9C9JywgJ9GY0YPQuycsICfQsNCy0LPRg9GB0YInLCAn0YHQtdC\/0YLQtdC80LHQsNGAJywgJ9C+0LrRgtC+0LHQsNGAJywgJ9C90L7QstC10LzQsdCw0YAnLCAn0LTQtdGG0LXQvNCx0LDRgCddLAogICAgICAgIG1vbnRoc1Nob3J0OiBbJ9GY0LDQvS4nLCAn0YTQtdCxLicsICfQvNCw0YAuJywgJ9Cw0L\/RgC4nLCAn0LzQsNGYJywgJ9GY0YPQvScsICfRmNGD0LsnLCAn0LDQstCzLicsICfRgdC10L8uJywgJ9C+0LrRgi4nLCAn0L3QvtCyLicsICfQtNC10YYuJ10sCiAgICAgICAgd2Vla2RheXM6IFsn0L3QtdC00LXRmdCwJywgJ9C\/0L7QvdC10LTQtdGZ0LDQuicsICfRg9GC0L7RgNCw0LonLCAn0YHRgNC10LTQsCcsICfRh9C10YLQstGA0YLQsNC6JywgJ9C\/0LXRgtCw0LonLCAn0YHRg9Cx0L7RgtCwJ10sCiAgICAgICAgd2Vla2RheXNTaG9ydDogWyfQvdC10LQuJywgJ9C\/0L7QvS4nLCAn0YPRgtC+LicsICfRgdGA0LUuJywgJ9GH0LXRgi4nLCAn0L\/QtdGCLicsICfRgdGD0LEuJ10sCiAgICAgICAgd2Vla2RheXNNaW46IFsn0L3QtScsICfQv9C+JywgJ9GD0YInLCAn0YHRgCcsICfRh9C1JywgJ9C\/0LUnLCAn0YHRgyddLAogICAgICAgIGxvbmdEYXRlRm9ybWF0OiB7CiAgICAgICAgICAgIExUOiAnSDptbScsCiAgICAgICAgICAgIExUUyA6ICdMVDpzcycsCiAgICAgICAgICAgIEw6ICdERC4gTU0uIFlZWVknLAogICAgICAgICAgICBMTDogJ0QuIE1NTU0gWVlZWScsCiAgICAgICAgICAgIExMTDogJ0QuIE1NTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEw6ICdkZGRkLCBELiBNTU1NIFlZWVkgTFQnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhcjogewogICAgICAgICAgICBzYW1lRGF5OiAnW9C00LDQvdCw0YEg0YNdIExUJywKICAgICAgICAgICAgbmV4dERheTogJ1vRgdGD0YLRgNCwINGDXSBMVCcsCgogICAgICAgICAgICBuZXh0V2VlazogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgc3dpdGNoICh0aGlzLmRheSgpKSB7CiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdb0YNdIFvQvdC10LTQtdGZ0YNdIFvRg10gTFQnOwogICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW9GDXSBb0YHRgNC10LTRg10gW9GDXSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdb0YNdIFvRgdGD0LHQvtGC0YNdIFvRg10gTFQnOwogICAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW9GDXSBkZGRkIFvRg10gTFQnOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBsYXN0RGF5ICA6ICdb0ZjRg9GH0LUg0YNdIExUJywKICAgICAgICAgICAgbGFzdFdlZWsgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICB2YXIgbGFzdFdlZWtEYXlzID0gWwogICAgICAgICAgICAgICAgICAgICdb0L\/RgNC+0YjQu9C1XSBb0L3QtdC00LXRmdC1XSBb0YNdIExUJywKICAgICAgICAgICAgICAgICAgICAnW9C\/0YDQvtGI0LvQvtCzXSBb0L\/QvtC90LXQtNC10ZnQutCwXSBb0YNdIExUJywKICAgICAgICAgICAgICAgICAgICAnW9C\/0YDQvtGI0LvQvtCzXSBb0YPRgtC+0YDQutCwXSBb0YNdIExUJywKICAgICAgICAgICAgICAgICAgICAnW9C\/0YDQvtGI0LvQtV0gW9GB0YDQtdC00LVdIFvRg10gTFQnLAogICAgICAgICAgICAgICAgICAgICdb0L\/RgNC+0YjQu9C+0LNdIFvRh9C10YLQstGA0YLQutCwXSBb0YNdIExUJywKICAgICAgICAgICAgICAgICAgICAnW9C\/0YDQvtGI0LvQvtCzXSBb0L\/QtdGC0LrQsF0gW9GDXSBMVCcsCiAgICAgICAgICAgICAgICAgICAgJ1vQv9GA0L7RiNC70LVdIFvRgdGD0LHQvtGC0LVdIFvRg10gTFQnCiAgICAgICAgICAgICAgICBdOwogICAgICAgICAgICAgICAgcmV0dXJuIGxhc3RXZWVrRGF5c1t0aGlzLmRheSgpXTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ9C30LAgJXMnLAogICAgICAgICAgICBwYXN0ICAgOiAn0L\/RgNC1ICVzJywKICAgICAgICAgICAgcyAgICAgIDogJ9C90LXQutC+0LvQuNC60L4g0YHQtdC60YPQvdC00LgnLAogICAgICAgICAgICBtICAgICAgOiB0cmFuc2xhdG9yLnRyYW5zbGF0ZSwKICAgICAgICAgICAgbW0gICAgIDogdHJhbnNsYXRvci50cmFuc2xhdGUsCiAgICAgICAgICAgIGggICAgICA6IHRyYW5zbGF0b3IudHJhbnNsYXRlLAogICAgICAgICAgICBoaCAgICAgOiB0cmFuc2xhdG9yLnRyYW5zbGF0ZSwKICAgICAgICAgICAgZCAgICAgIDogJ9C00LDQvScsCiAgICAgICAgICAgIGRkICAgICA6IHRyYW5zbGF0b3IudHJhbnNsYXRlLAogICAgICAgICAgICBNICAgICAgOiAn0LzQtdGB0LXRhicsCiAgICAgICAgICAgIE1NICAgICA6IHRyYW5zbGF0b3IudHJhbnNsYXRlLAogICAgICAgICAgICB5ICAgICAgOiAn0LPQvtC00LjQvdGDJywKICAgICAgICAgICAgeXkgICAgIDogdHJhbnNsYXRvci50cmFuc2xhdGUKICAgICAgICB9LAogICAgICAgIG9yZGluYWxQYXJzZTogL1xkezEsMn1cLi8sCiAgICAgICAgb3JkaW5hbCA6ICclZC4nLAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA3ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiAxc3QgaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKLy8gbW9tZW50LmpzIGxvY2FsZSBjb25maWd1cmF0aW9uCi8vIGxvY2FsZSA6IFNlcmJpYW4tbGF0aW4gKHNyKQovLyBhdXRob3IgOiBNaWxhbiBKYW5hxI1rb3ZpxIc8bWlsYW5qYW5hY2tvdmljQGdtYWlsLmNvbT4gOiBodHRwczovL2dpdGh1Yi5jb20vbWlsYW4tagoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgdmFyIHRyYW5zbGF0b3IgPSB7CiAgICAgICAgd29yZHM6IHsgLy9EaWZmZXJlbnQgZ3JhbW1hdGljYWwgY2FzZXMKICAgICAgICAgICAgbTogWydqZWRhbiBtaW51dCcsICdqZWRuZSBtaW51dGUnXSwKICAgICAgICAgICAgbW06IFsnbWludXQnLCAnbWludXRlJywgJ21pbnV0YSddLAogICAgICAgICAgICBoOiBbJ2plZGFuIHNhdCcsICdqZWRub2cgc2F0YSddLAogICAgICAgICAgICBoaDogWydzYXQnLCAnc2F0YScsICdzYXRpJ10sCiAgICAgICAgICAgIGRkOiBbJ2RhbicsICdkYW5hJywgJ2RhbmEnXSwKICAgICAgICAgICAgTU06IFsnbWVzZWMnLCAnbWVzZWNhJywgJ21lc2VjaSddLAogICAgICAgICAgICB5eTogWydnb2RpbmEnLCAnZ29kaW5lJywgJ2dvZGluYSddCiAgICAgICAgfSwKICAgICAgICBjb3JyZWN0R3JhbW1hdGljYWxDYXNlOiBmdW5jdGlvbiAobnVtYmVyLCB3b3JkS2V5KSB7CiAgICAgICAgICAgIHJldHVybiBudW1iZXIgPT09IDEgPyB3b3JkS2V5WzBdIDogKG51bWJlciA+PSAyICYmIG51bWJlciA8PSA0ID8gd29yZEtleVsxXSA6IHdvcmRLZXlbMl0pOwogICAgICAgIH0sCiAgICAgICAgdHJhbnNsYXRlOiBmdW5jdGlvbiAobnVtYmVyLCB3aXRob3V0U3VmZml4LCBrZXkpIHsKICAgICAgICAgICAgdmFyIHdvcmRLZXkgPSB0cmFuc2xhdG9yLndvcmRzW2tleV07CiAgICAgICAgICAgIGlmIChrZXkubGVuZ3RoID09PSAxKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gd2l0aG91dFN1ZmZpeCA\/IHdvcmRLZXlbMF0gOiB3b3JkS2V5WzFdOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlciArICcgJyArIHRyYW5zbGF0b3IuY29ycmVjdEdyYW1tYXRpY2FsQ2FzZShudW1iZXIsIHdvcmRLZXkpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfTsKCiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgnc3InLCB7CiAgICAgICAgbW9udGhzOiBbJ2phbnVhcicsICdmZWJydWFyJywgJ21hcnQnLCAnYXByaWwnLCAnbWFqJywgJ2p1bicsICdqdWwnLCAnYXZndXN0JywgJ3NlcHRlbWJhcicsICdva3RvYmFyJywgJ25vdmVtYmFyJywgJ2RlY2VtYmFyJ10sCiAgICAgICAgbW9udGhzU2hvcnQ6IFsnamFuLicsICdmZWIuJywgJ21hci4nLCAnYXByLicsICdtYWonLCAnanVuJywgJ2p1bCcsICdhdmcuJywgJ3NlcC4nLCAnb2t0LicsICdub3YuJywgJ2RlYy4nXSwKICAgICAgICB3ZWVrZGF5czogWyduZWRlbGphJywgJ3BvbmVkZWxqYWsnLCAndXRvcmFrJywgJ3NyZWRhJywgJ8SNZXR2cnRhaycsICdwZXRhaycsICdzdWJvdGEnXSwKICAgICAgICB3ZWVrZGF5c1Nob3J0OiBbJ25lZC4nLCAncG9uLicsICd1dG8uJywgJ3NyZS4nLCAnxI1ldC4nLCAncGV0LicsICdzdWIuJ10sCiAgICAgICAgd2Vla2RheXNNaW46IFsnbmUnLCAncG8nLCAndXQnLCAnc3InLCAnxI1lJywgJ3BlJywgJ3N1J10sCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQ6IHsKICAgICAgICAgICAgTFQ6ICdIOm1tJywKICAgICAgICAgICAgTFRTIDogJ0xUOnNzJywKICAgICAgICAgICAgTDogJ0RELiBNTS4gWVlZWScsCiAgICAgICAgICAgIExMOiAnRC4gTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMOiAnRC4gTU1NTSBZWVlZIExUJywKICAgICAgICAgICAgTExMTDogJ2RkZGQsIEQuIE1NTU0gWVlZWSBMVCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICdbZGFuYXMgdV0gTFQnLAogICAgICAgICAgICBuZXh0RGF5OiAnW3N1dHJhIHVdIExUJywKCiAgICAgICAgICAgIG5leHRXZWVrOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKHRoaXMuZGF5KCkpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1t1XSBbbmVkZWxqdV0gW3VdIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1t1XSBbc3JlZHVdIFt1XSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbdV0gW3N1Ym90dV0gW3VdIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1t1XSBkZGRkIFt1XSBMVCc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhc3REYXkgIDogJ1tqdcSNZSB1XSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrIDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgdmFyIGxhc3RXZWVrRGF5cyA9IFsKICAgICAgICAgICAgICAgICAgICAnW3Byb8WhbGVdIFtuZWRlbGplXSBbdV0gTFQnLAogICAgICAgICAgICAgICAgICAgICdbcHJvxaFsb2ddIFtwb25lZGVsamthXSBbdV0gTFQnLAogICAgICAgICAgICAgICAgICAgICdbcHJvxaFsb2ddIFt1dG9ya2FdIFt1XSBMVCcsCiAgICAgICAgICAgICAgICAgICAgJ1twcm\/FoWxlXSBbc3JlZGVdIFt1XSBMVCcsCiAgICAgICAgICAgICAgICAgICAgJ1twcm\/FoWxvZ10gW8SNZXR2cnRrYV0gW3VdIExUJywKICAgICAgICAgICAgICAgICAgICAnW3Byb8WhbG9nXSBbcGV0a2FdIFt1XSBMVCcsCiAgICAgICAgICAgICAgICAgICAgJ1twcm\/FoWxlXSBbc3Vib3RlXSBbdV0gTFQnCiAgICAgICAgICAgICAgICBdOwogICAgICAgICAgICAgICAgcmV0dXJuIGxhc3RXZWVrRGF5c1t0aGlzLmRheSgpXTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ3phICVzJywKICAgICAgICAgICAgcGFzdCAgIDogJ3ByZSAlcycsCiAgICAgICAgICAgIHMgICAgICA6ICduZWtvbGlrbyBzZWt1bmRpJywKICAgICAgICAgICAgbSAgICAgIDogdHJhbnNsYXRvci50cmFuc2xhdGUsCiAgICAgICAgICAgIG1tICAgICA6IHRyYW5zbGF0b3IudHJhbnNsYXRlLAogICAgICAgICAgICBoICAgICAgOiB0cmFuc2xhdG9yLnRyYW5zbGF0ZSwKICAgICAgICAgICAgaGggICAgIDogdHJhbnNsYXRvci50cmFuc2xhdGUsCiAgICAgICAgICAgIGQgICAgICA6ICdkYW4nLAogICAgICAgICAgICBkZCAgICAgOiB0cmFuc2xhdG9yLnRyYW5zbGF0ZSwKICAgICAgICAgICAgTSAgICAgIDogJ21lc2VjJywKICAgICAgICAgICAgTU0gICAgIDogdHJhbnNsYXRvci50cmFuc2xhdGUsCiAgICAgICAgICAgIHkgICAgICA6ICdnb2RpbnUnLAogICAgICAgICAgICB5eSAgICAgOiB0cmFuc2xhdG9yLnRyYW5zbGF0ZQogICAgICAgIH0sCiAgICAgICAgb3JkaW5hbFBhcnNlOiAvXGR7MSwyfVwuLywKICAgICAgICBvcmRpbmFsIDogJyVkLicsCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDcgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDFzdCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogc3dlZGlzaCAoc3YpCi8vIGF1dGhvciA6IEplbnMgQWxtIDogaHR0cHM6Ly9naXRodWIuY29tL3VsbXVzCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgnc3YnLCB7CiAgICAgICAgbW9udGhzIDogJ2phbnVhcmlfZmVicnVhcmlfbWFyc19hcHJpbF9tYWpfanVuaV9qdWxpX2F1Z3VzdGlfc2VwdGVtYmVyX29rdG9iZXJfbm92ZW1iZXJfZGVjZW1iZXInLnNwbGl0KCdfJyksCiAgICAgICAgbW9udGhzU2hvcnQgOiAnamFuX2ZlYl9tYXJfYXByX21hal9qdW5fanVsX2F1Z19zZXBfb2t0X25vdl9kZWMnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXMgOiAnc8O2bmRhZ19tw6VuZGFnX3Rpc2RhZ19vbnNkYWdfdG9yc2RhZ19mcmVkYWdfbMO2cmRhZycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ3PDtm5fbcOlbl90aXNfb25zX3Rvcl9mcmVfbMO2cicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICdzw7ZfbcOlX3RpX29uX3RvX2ZyX2zDticuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnSEg6bW0nLAogICAgICAgICAgICBMVFMgOiAnTFQ6c3MnLAogICAgICAgICAgICBMIDogJ1lZWVktTU0tREQnLAogICAgICAgICAgICBMTCA6ICdEIE1NTU0gWVlZWScsCiAgICAgICAgICAgIExMTCA6ICdEIE1NTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCBEIE1NTU0gWVlZWSBMVCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5OiAnW0lkYWddIExUJywKICAgICAgICAgICAgbmV4dERheTogJ1tJbW9yZ29uXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXk6ICdbSWfDpXJdIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6ICdkZGRkIExUJywKICAgICAgICAgICAgbGFzdFdlZWs6ICdbRsO2cnJhXSBkZGRkW2VuXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ29tICVzJywKICAgICAgICAgICAgcGFzdCA6ICdmw7ZyICVzIHNlZGFuJywKICAgICAgICAgICAgcyA6ICduw6VncmEgc2VrdW5kZXInLAogICAgICAgICAgICBtIDogJ2VuIG1pbnV0JywKICAgICAgICAgICAgbW0gOiAnJWQgbWludXRlcicsCiAgICAgICAgICAgIGggOiAnZW4gdGltbWUnLAogICAgICAgICAgICBoaCA6ICclZCB0aW1tYXInLAogICAgICAgICAgICBkIDogJ2VuIGRhZycsCiAgICAgICAgICAgIGRkIDogJyVkIGRhZ2FyJywKICAgICAgICAgICAgTSA6ICdlbiBtw6VuYWQnLAogICAgICAgICAgICBNTSA6ICclZCBtw6VuYWRlcicsCiAgICAgICAgICAgIHkgOiAnZXR0IMOlcicsCiAgICAgICAgICAgIHl5IDogJyVkIMOlcicKICAgICAgICB9LAogICAgICAgIG9yZGluYWxQYXJzZTogL1xkezEsMn0oZXxhKS8sCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgdmFyIGIgPSBudW1iZXIgJSAxMCwKICAgICAgICAgICAgICAgIG91dHB1dCA9ICh+fihudW1iZXIgJSAxMDAgLyAxMCkgPT09IDEpID8gJ2UnIDoKICAgICAgICAgICAgICAgIChiID09PSAxKSA\/ICdhJyA6CiAgICAgICAgICAgICAgICAoYiA9PT0gMikgPyAnYScgOgogICAgICAgICAgICAgICAgKGIgPT09IDMpID8gJ2UnIDogJ2UnOwogICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgb3V0cHV0OwogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogdGFtaWwgKHRhKQovLyBhdXRob3IgOiBBcmp1bmt1bWFyIEtyaXNobmFtb29ydGh5IDogaHR0cHM6Ly9naXRodWIuY29tL3RrMTIwNDA0CgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICAvKnZhciBzeW1ib2xNYXAgPSB7CiAgICAgICAgICAgICcxJzogJ+CvpycsCiAgICAgICAgICAgICcyJzogJ+CvqCcsCiAgICAgICAgICAgICczJzogJ+CvqScsCiAgICAgICAgICAgICc0JzogJ+CvqicsCiAgICAgICAgICAgICc1JzogJ+CvqycsCiAgICAgICAgICAgICc2JzogJ+CvrCcsCiAgICAgICAgICAgICc3JzogJ+CvrScsCiAgICAgICAgICAgICc4JzogJ+CvricsCiAgICAgICAgICAgICc5JzogJ+CvrycsCiAgICAgICAgICAgICcwJzogJ+CvpicKICAgICAgICB9LAogICAgICAgIG51bWJlck1hcCA9IHsKICAgICAgICAgICAgJ+Cvpyc6ICcxJywKICAgICAgICAgICAgJ+CvqCc6ICcyJywKICAgICAgICAgICAgJ+CvqSc6ICczJywKICAgICAgICAgICAgJ+Cvqic6ICc0JywKICAgICAgICAgICAgJ+Cvqyc6ICc1JywKICAgICAgICAgICAgJ+CvrCc6ICc2JywKICAgICAgICAgICAgJ+CvrSc6ICc3JywKICAgICAgICAgICAgJ+Cvric6ICc4JywKICAgICAgICAgICAgJ+Cvryc6ICc5JywKICAgICAgICAgICAgJ+Cvpic6ICcwJwogICAgICAgIH07ICovCgogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ3RhJywgewogICAgICAgIG1vbnRocyA6ICfgrpzgrqngrrXgrrDgrr9f4K6q4K6\/4K6q4K+N4K6w4K614K6w4K6\/X+CuruCuvuCusOCvjeCumuCvjV\/gro\/grqrgr43grrDgrrLgr41f4K6u4K+HX+CunOCvguCuqeCvjV\/grpzgr4LgrrLgr4hf4K6G4K6V4K644K+N4K6f4K+NX+CumuCvhuCuquCvjeCun+CvhuCuruCvjeCuquCusOCvjV\/groXgrpXgr43grp\/gr4fgrr7grqrgrrDgr41f4K6o4K614K6u4K+N4K6q4K6w4K+NX+Cun+Cuv+CumuCuruCvjeCuquCusOCvjScuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICfgrpzgrqngrrXgrrDgrr9f4K6q4K6\/4K6q4K+N4K6w4K614K6w4K6\/X+CuruCuvuCusOCvjeCumuCvjV\/gro\/grqrgr43grrDgrrLgr41f4K6u4K+HX+CunOCvguCuqeCvjV\/grpzgr4LgrrLgr4hf4K6G4K6V4K644K+N4K6f4K+NX+CumuCvhuCuquCvjeCun+CvhuCuruCvjeCuquCusOCvjV\/groXgrpXgr43grp\/gr4fgrr7grqrgrrDgr41f4K6o4K614K6u4K+N4K6q4K6w4K+NX+Cun+Cuv+CumuCuruCvjeCuquCusOCvjScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICfgrp7grr7grq\/grr\/grrHgr43grrHgr4HgrpXgr43grpXgrr\/grrTgrq7gr4hf4K6k4K6\/4K6Z4K+N4K6V4K6f4K+N4K6V4K6\/4K604K6u4K+IX+CumuCvhuCuteCvjeCuteCuvuCur+CvjeCuleCuv+CutOCuruCviF\/grqrgr4HgrqTgrqngr43grpXgrr\/grrTgrq7gr4hf4K614K6\/4K6v4K6+4K604K6V4K+N4K6V4K6\/4K604K6u4K+IX+CuteCvhuCus+CvjeCus+Cuv+CuleCvjeCuleCuv+CutOCuruCviF\/grprgrqngrr\/grpXgr43grpXgrr\/grrTgrq7gr4gnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICfgrp7grr7grq\/grr\/grrHgr4Ff4K6k4K6\/4K6Z4K+N4K6V4K6z4K+NX+CumuCvhuCuteCvjeCuteCuvuCur+CvjV\/grqrgr4HgrqTgrqngr41f4K614K6\/4K6v4K6+4K604K6p4K+NX+CuteCvhuCus+CvjeCus+Cuv1\/grprgrqngrr8nLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNNaW4gOiAn4K6e4K6+X+CupOCuv1\/grprgr4Zf4K6q4K+BX+CuteCuv1\/grrXgr4Zf4K6aJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdISDptbScsCiAgICAgICAgICAgIExUUyA6ICdMVDpzcycsCiAgICAgICAgICAgIEwgOiAnREQvTU0vWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZLCBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCwgRCBNTU1NIFlZWVksIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXkgOiAnW+Cuh+CuqeCvjeCuseCvgV0gTFQnLAogICAgICAgICAgICBuZXh0RGF5IDogJ1vgrqjgrr7grrPgr4hdIExUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnZGRkZCwgTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1vgrqjgr4fgrrHgr43grrHgr4FdIExUJywKICAgICAgICAgICAgbGFzdFdlZWsgOiAnW+CuleCun+CuqOCvjeCupCDgrrXgrr7grrDgrq7gr41dIGRkZGQsIExUJywKICAgICAgICAgICAgc2FtZUVsc2UgOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJyVzIOCuh+CusuCvjScsCiAgICAgICAgICAgIHBhc3QgOiAnJXMg4K6u4K+B4K6p4K+NJywKICAgICAgICAgICAgcyA6ICfgrpLgrrDgr4Eg4K6a4K6\/4K6yIOCuteCuv+CuqOCuvuCun+Cuv+CuleCus+CvjScsCiAgICAgICAgICAgIG0gOiAn4K6S4K6w4K+BIOCuqOCuv+CuruCuv+Cun+CuruCvjScsCiAgICAgICAgICAgIG1tIDogJyVkIOCuqOCuv+CuruCuv+Cun+CumeCvjeCuleCus+CvjScsCiAgICAgICAgICAgIGggOiAn4K6S4K6w4K+BIOCuruCuo+CuvyDgrqjgr4fgrrDgrq7gr40nLAogICAgICAgICAgICBoaCA6ICclZCDgrq7grqPgrr8g4K6o4K+H4K6w4K6u4K+NJywKICAgICAgICAgICAgZCA6ICfgrpLgrrDgr4Eg4K6o4K6+4K6z4K+NJywKICAgICAgICAgICAgZGQgOiAnJWQg4K6o4K6+4K6f4K+N4K6V4K6z4K+NJywKICAgICAgICAgICAgTSA6ICfgrpLgrrDgr4Eg4K6u4K6+4K6k4K6u4K+NJywKICAgICAgICAgICAgTU0gOiAnJWQg4K6u4K6+4K6k4K6Z4K+N4K6V4K6z4K+NJywKICAgICAgICAgICAgeSA6ICfgrpLgrrDgr4Eg4K614K6w4K+B4K6f4K6u4K+NJywKICAgICAgICAgICAgeXkgOiAnJWQg4K6G4K6j4K+N4K6f4K+B4K6V4K6z4K+NJwogICAgICAgIH0sCi8qICAgICAgICBwcmVwYXJzZTogZnVuY3Rpb24gKHN0cmluZykgewogICAgICAgICAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2UoL1vgr6fgr6jgr6ngr6rgr6vgr6zgr63gr67gr6\/gr6ZdL2csIGZ1bmN0aW9uIChtYXRjaCkgewogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlck1hcFttYXRjaF07CiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgcG9zdGZvcm1hdDogZnVuY3Rpb24gKHN0cmluZykgewogICAgICAgICAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2UoL1xkL2csIGZ1bmN0aW9uIChtYXRjaCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHN5bWJvbE1hcFttYXRjaF07CiAgICAgICAgICAgIH0pOwogICAgICAgIH0sKi8KICAgICAgICBvcmRpbmFsUGFyc2U6IC9cZHsxLDJ94K614K6k4K+BLywKICAgICAgICBvcmRpbmFsIDogZnVuY3Rpb24gKG51bWJlcikgewogICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJ+CuteCupOCvgSc7CiAgICAgICAgfSwKCgogICAgICAgIC8vIHJlZmVyIGh0dHA6Ly90YS53aWtpcGVkaWEub3JnL3MvMWVyMQogICAgICAgIG1lcmlkaWVtUGFyc2U6IC\/grq\/grr7grq7grq7gr4184K614K+I4K6V4K6x4K+IfOCuleCuvuCusuCviHzgrqjgrqPgr43grqrgrpXgrrLgr4184K6O4K6x4K+N4K6q4K6+4K6f4K+BfOCuruCuvuCusuCviC8sCiAgICAgICAgbWVyaWRpZW0gOiBmdW5jdGlvbiAoaG91ciwgbWludXRlLCBpc0xvd2VyKSB7CiAgICAgICAgICAgIGlmIChob3VyIDwgMikgewogICAgICAgICAgICAgICAgcmV0dXJuICcg4K6v4K6+4K6u4K6u4K+NJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChob3VyIDwgNikgewogICAgICAgICAgICAgICAgcmV0dXJuICcg4K614K+I4K6V4K6x4K+IJzsgIC8vIOCuteCviOCuleCuseCviAogICAgICAgICAgICB9IGVsc2UgaWYgKGhvdXIgPCAxMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICcg4K6V4K6+4K6y4K+IJzsgLy8g4K6V4K6+4K6y4K+ICiAgICAgICAgICAgIH0gZWxzZSBpZiAoaG91ciA8IDE0KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJyDgrqjgrqPgr43grqrgrpXgrrLgr40nOyAvLyDgrqjgrqPgr43grqrgrpXgrrLgr40KICAgICAgICAgICAgfSBlbHNlIGlmIChob3VyIDwgMTgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAnIOCujuCuseCvjeCuquCuvuCun+CvgSc7IC8vIOCujuCuseCvjeCuquCuvuCun+CvgQogICAgICAgICAgICB9IGVsc2UgaWYgKGhvdXIgPCAyMikgewogICAgICAgICAgICAgICAgcmV0dXJuICcg4K6u4K6+4K6y4K+IJzsgLy8g4K6u4K6+4K6y4K+ICiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJyDgrq\/grr7grq7grq7gr40nOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbUhvdXIgOiBmdW5jdGlvbiAoaG91ciwgbWVyaWRpZW0pIHsKICAgICAgICAgICAgaWYgKGhvdXIgPT09IDEyKSB7CiAgICAgICAgICAgICAgICBob3VyID0gMDsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAobWVyaWRpZW0gPT09ICfgrq\/grr7grq7grq7gr40nKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gaG91ciA8IDIgPyBob3VyIDogaG91ciArIDEyOwogICAgICAgICAgICB9IGVsc2UgaWYgKG1lcmlkaWVtID09PSAn4K614K+I4K6V4K6x4K+IJyB8fCBtZXJpZGllbSA9PT0gJ+CuleCuvuCusuCviCcpIHsKICAgICAgICAgICAgICAgIHJldHVybiBob3VyOwogICAgICAgICAgICB9IGVsc2UgaWYgKG1lcmlkaWVtID09PSAn4K6o4K6j4K+N4K6q4K6V4K6y4K+NJykgewogICAgICAgICAgICAgICAgcmV0dXJuIGhvdXIgPj0gMTAgPyBob3VyIDogaG91ciArIDEyOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIGhvdXIgKyAxMjsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgd2VlayA6IHsKICAgICAgICAgICAgZG93IDogMCwgLy8gU3VuZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDYgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDFzdCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogdGhhaSAodGgpCi8vIGF1dGhvciA6IEtyaWRzYWRhIFRoYW5hYnVscG9uZyA6IGh0dHBzOi8vZ2l0aHViLmNvbS9zaXJuCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgndGgnLCB7CiAgICAgICAgbW9udGhzIDogJ+C4oeC4geC4o+C4suC4hOC4oV\/guIHguLjguKHguKDguLLguJ7guLHguJnguJjguYxf4Lih4Li14LiZ4Liy4LiE4LihX+C5gOC4oeC4qeC4suC4ouC4mV\/guJ7guKTguKnguKDguLLguITguKFf4Lih4Li04LiW4Li44LiZ4Liy4Lii4LiZX+C4geC4o+C4geC4juC4suC4hOC4oV\/guKrguLTguIfguKvguLLguITguKFf4LiB4Lix4LiZ4Lii4Liy4Lii4LiZX+C4leC4uOC4peC4suC4hOC4oV\/guJ7guKTguKjguIjguLTguIHguLLguKLguJlf4LiY4Lix4LiZ4Lin4Liy4LiE4LihJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJ+C4oeC4geC4o+C4sl\/guIHguLjguKHguKDguLJf4Lih4Li14LiZ4LiyX+C5gOC4oeC4qeC4sl\/guJ7guKTguKnguKDguLJf4Lih4Li04LiW4Li44LiZ4LiyX+C4geC4o+C4geC4juC4sl\/guKrguLTguIfguKvguLJf4LiB4Lix4LiZ4Lii4LiyX+C4leC4uOC4peC4sl\/guJ7guKTguKjguIjguLTguIHguLJf4LiY4Lix4LiZ4Lin4LiyJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ+C4reC4suC4l+C4tOC4leC4ouC5jF\/guIjguLHguJnguJfguKPguYxf4Lit4Lix4LiH4LiE4Liy4LijX+C4nuC4uOC4mF\/guJ7guKTguKvguLHguKrguJrguJTguLVf4Lio4Li44LiB4Lij4LmMX+C5gOC4quC4suC4o+C5jCcuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ+C4reC4suC4l+C4tOC4leC4ouC5jF\/guIjguLHguJnguJfguKPguYxf4Lit4Lix4LiH4LiE4Liy4LijX+C4nuC4uOC4mF\/guJ7guKTguKvguLHguKpf4Lio4Li44LiB4Lij4LmMX+C5gOC4quC4suC4o+C5jCcuc3BsaXQoJ18nKSwgLy8geWVzLCB0aHJlZSBjaGFyYWN0ZXJzIGRpZmZlcmVuY2UKICAgICAgICB3ZWVrZGF5c01pbiA6ICfguK3guLIuX+C4iC5f4LitLl\/guJ4uX+C4nuC4pC5f4LioLl\/guKouJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdIIOC4meC4suC4rOC4tOC4geC4siBtIOC4meC4suC4l+C4tScsCiAgICAgICAgICAgIExUUyA6ICdMVCBzIOC4p+C4tOC4meC4suC4l+C4tScsCiAgICAgICAgICAgIEwgOiAnWVlZWS9NTS9ERCcsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZIOC5gOC4p+C4peC4siBMVCcsCiAgICAgICAgICAgIExMTEwgOiAn4Lin4Lix4LiZZGRkZOC4l+C4teC5iCBEIE1NTU0gWVlZWSDguYDguKfguKXguLIgTFQnCiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbVBhcnNlOiAv4LiB4LmI4Lit4LiZ4LmA4LiX4Li14LmI4Lii4LiHfOC4q+C4peC4seC4h+C5gOC4l+C4teC5iOC4ouC4hy8sCiAgICAgICAgaXNQTTogZnVuY3Rpb24gKGlucHV0KSB7CiAgICAgICAgICAgIHJldHVybiBpbnB1dCA9PT0gJ+C4q+C4peC4seC4h+C5gOC4l+C4teC5iOC4ouC4hyc7CiAgICAgICAgfSwKICAgICAgICBtZXJpZGllbSA6IGZ1bmN0aW9uIChob3VyLCBtaW51dGUsIGlzTG93ZXIpIHsKICAgICAgICAgICAgaWYgKGhvdXIgPCAxMikgewogICAgICAgICAgICAgICAgcmV0dXJuICfguIHguYjguK3guJnguYDguJfguLXguYjguKLguIcnOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuICfguKvguKXguLHguIfguYDguJfguLXguYjguKLguIcnOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6ICdb4Lin4Lix4LiZ4LiZ4Li14LmJIOC5gOC4p+C4peC4sl0gTFQnLAogICAgICAgICAgICBuZXh0RGF5IDogJ1vguJ7guKPguLjguYjguIfguJnguLXguYkg4LmA4Lin4Lil4LiyXSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGRb4Lir4LiZ4LmJ4LiyIOC5gOC4p+C4peC4sl0gTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1vguYDguKHguLfguYjguK3guKfguLLguJnguJnguLXguYkg4LmA4Lin4Lil4LiyXSBMVCcsCiAgICAgICAgICAgIGxhc3RXZWVrIDogJ1vguKfguLHguJldZGRkZFvguJfguLXguYjguYHguKXguYnguKcg4LmA4Lin4Lil4LiyXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICfguK3guLXguIEgJXMnLAogICAgICAgICAgICBwYXN0IDogJyVz4LiX4Li14LmI4LmB4Lil4LmJ4LinJywKICAgICAgICAgICAgcyA6ICfguYTguKHguYjguIHguLXguYjguKfguLTguJnguLLguJfguLUnLAogICAgICAgICAgICBtIDogJzEg4LiZ4Liy4LiX4Li1JywKICAgICAgICAgICAgbW0gOiAnJWQg4LiZ4Liy4LiX4Li1JywKICAgICAgICAgICAgaCA6ICcxIOC4iuC4seC5iOC4p+C5guC4oeC4hycsCiAgICAgICAgICAgIGhoIDogJyVkIOC4iuC4seC5iOC4p+C5guC4oeC4hycsCiAgICAgICAgICAgIGQgOiAnMSDguKfguLHguJknLAogICAgICAgICAgICBkZCA6ICclZCDguKfguLHguJknLAogICAgICAgICAgICBNIDogJzEg4LmA4LiU4Li34Lit4LiZJywKICAgICAgICAgICAgTU0gOiAnJWQg4LmA4LiU4Li34Lit4LiZJywKICAgICAgICAgICAgeSA6ICcxIOC4m+C4tScsCiAgICAgICAgICAgIHl5IDogJyVkIOC4m+C4tScKICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogVGFnYWxvZy9GaWxpcGlubyAodGwtcGgpCi8vIGF1dGhvciA6IERhbiBIYWdtYW4KCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCd0bC1waCcsIHsKICAgICAgICBtb250aHMgOiAnRW5lcm9fUGVicmVyb19NYXJzb19BYnJpbF9NYXlvX0h1bnlvX0h1bHlvX0Fnb3N0b19TZXR5ZW1icmVfT2t0dWJyZV9Ob2J5ZW1icmVfRGlzeWVtYnJlJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJ0VuZV9QZWJfTWFyX0Ficl9NYXlfSHVuX0h1bF9BZ29fU2V0X09rdF9Ob2JfRGlzJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ0xpbmdnb19MdW5lc19NYXJ0ZXNfTWl5ZXJrdWxlc19IdXdlYmVzX0JpeWVybmVzX1NhYmFkbycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ0xpbl9MdW5fTWFyX01peV9IdXdfQml5X1NhYicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICdMaV9MdV9NYV9NaV9IdV9CaV9TYWInLnNwbGl0KCdfJyksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogJ0hIOm1tJywKICAgICAgICAgICAgTFRTIDogJ0xUOnNzJywKICAgICAgICAgICAgTCA6ICdNTS9EL1lZWVknLAogICAgICAgICAgICBMTCA6ICdNTU1NIEQsIFlZWVknLAogICAgICAgICAgICBMTEwgOiAnTU1NTSBELCBZWVlZIExUJywKICAgICAgICAgICAgTExMTCA6ICdkZGRkLCBNTU1NIERELCBZWVlZIExUJwogICAgICAgIH0sCiAgICAgICAgY2FsZW5kYXIgOiB7CiAgICAgICAgICAgIHNhbWVEYXk6ICdbTmdheW9uIHNhXSBMVCcsCiAgICAgICAgICAgIG5leHREYXk6ICdbQnVrYXMgc2FdIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6ICdkZGRkIFtzYV0gTFQnLAogICAgICAgICAgICBsYXN0RGF5OiAnW0thaGFwb24gc2FdIExUJywKICAgICAgICAgICAgbGFzdFdlZWs6ICdkZGRkIFtodWxpbmcgbGluZ2dvXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ3NhIGxvb2IgbmcgJXMnLAogICAgICAgICAgICBwYXN0IDogJyVzIGFuZyBuYWthbGlwYXMnLAogICAgICAgICAgICBzIDogJ2lsYW5nIHNlZ3VuZG8nLAogICAgICAgICAgICBtIDogJ2lzYW5nIG1pbnV0bycsCiAgICAgICAgICAgIG1tIDogJyVkIG1pbnV0bycsCiAgICAgICAgICAgIGggOiAnaXNhbmcgb3JhcycsCiAgICAgICAgICAgIGhoIDogJyVkIG9yYXMnLAogICAgICAgICAgICBkIDogJ2lzYW5nIGFyYXcnLAogICAgICAgICAgICBkZCA6ICclZCBhcmF3JywKICAgICAgICAgICAgTSA6ICdpc2FuZyBidXdhbicsCiAgICAgICAgICAgIE1NIDogJyVkIGJ1d2FuJywKICAgICAgICAgICAgeSA6ICdpc2FuZyB0YW9uJywKICAgICAgICAgICAgeXkgOiAnJWQgdGFvbicKICAgICAgICB9LAogICAgICAgIG9yZGluYWxQYXJzZTogL1xkezEsMn0vLAogICAgICAgIG9yZGluYWwgOiBmdW5jdGlvbiAobnVtYmVyKSB7CiAgICAgICAgICAgIHJldHVybiBudW1iZXI7CiAgICAgICAgfSwKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNCAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gNHRoIGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiB0dXJraXNoICh0cikKLy8gYXV0aG9ycyA6IEVyaGFuIEd1bmRvZ2FuIDogaHR0cHM6Ly9naXRodWIuY29tL2VyaGFuZ3VuZG9nYW4sCi8vICAgICAgICAgICBCdXJhayBZacSfaXQgS2F5YTogaHR0cHM6Ly9naXRodWIuY29tL0JZSwoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgdmFyIHN1ZmZpeGVzID0gewogICAgICAgIDE6ICdcJ2luY2knLAogICAgICAgIDU6ICdcJ2luY2knLAogICAgICAgIDg6ICdcJ2luY2knLAogICAgICAgIDcwOiAnXCdpbmNpJywKICAgICAgICA4MDogJ1wnaW5jaScsCgogICAgICAgIDI6ICdcJ25jaScsCiAgICAgICAgNzogJ1wnbmNpJywKICAgICAgICAyMDogJ1wnbmNpJywKICAgICAgICA1MDogJ1wnbmNpJywKCiAgICAgICAgMzogJ1wnw7xuY8O8JywKICAgICAgICA0OiAnXCfDvG5jw7wnLAogICAgICAgIDEwMDogJ1wnw7xuY8O8JywKCiAgICAgICAgNjogJ1wnbmPEsScsCgogICAgICAgIDk6ICdcJ3VuY3UnLAogICAgICAgIDEwOiAnXCd1bmN1JywKICAgICAgICAzMDogJ1wndW5jdScsCgogICAgICAgIDYwOiAnXCfEsW5jxLEnLAogICAgICAgIDkwOiAnXCfEsW5jxLEnCiAgICB9OwoKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCd0cicsIHsKICAgICAgICBtb250aHMgOiAnT2Nha1\/FnnViYXRfTWFydF9OaXNhbl9NYXnEsXNfSGF6aXJhbl9UZW1tdXpfQcSfdXN0b3NfRXlsw7xsX0VraW1fS2FzxLFtX0FyYWzEsWsnLnNwbGl0KCdfJyksCiAgICAgICAgbW9udGhzU2hvcnQgOiAnT2NhX8WedWJfTWFyX05pc19NYXlfSGF6X1RlbV9BxJ91X0V5bF9Fa2lfS2FzX0FyYScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICdQYXphcl9QYXphcnRlc2lfU2FsxLFfw4dhcsWfYW1iYV9QZXLFn2VtYmVfQ3VtYV9DdW1hcnRlc2knLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICdQYXpfUHRzX1NhbF\/Dh2FyX1Blcl9DdW1fQ3RzJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ1B6X1B0X1NhX8OHYV9QZV9DdV9DdCcuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnSEg6bW0nLAogICAgICAgICAgICBMVFMgOiAnTFQ6c3MnLAogICAgICAgICAgICBMIDogJ0RELk1NLllZWVknLAogICAgICAgICAgICBMTCA6ICdEIE1NTU0gWVlZWScsCiAgICAgICAgICAgIExMTCA6ICdEIE1NTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCwgRCBNTU1NIFlZWVkgTFQnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6ICdbYnVnw7xuIHNhYXRdIExUJywKICAgICAgICAgICAgbmV4dERheSA6ICdbeWFyxLFuIHNhYXRdIExUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnW2hhZnRheWFdIGRkZGQgW3NhYXRdIExUJywKICAgICAgICAgICAgbGFzdERheSA6ICdbZMO8bl0gTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdbZ2XDp2VuIGhhZnRhXSBkZGRkIFtzYWF0XSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICclcyBzb25yYScsCiAgICAgICAgICAgIHBhc3QgOiAnJXMgw7ZuY2UnLAogICAgICAgICAgICBzIDogJ2Jpcmthw6cgc2FuaXllJywKICAgICAgICAgICAgbSA6ICdiaXIgZGFraWthJywKICAgICAgICAgICAgbW0gOiAnJWQgZGFraWthJywKICAgICAgICAgICAgaCA6ICdiaXIgc2FhdCcsCiAgICAgICAgICAgIGhoIDogJyVkIHNhYXQnLAogICAgICAgICAgICBkIDogJ2JpciBnw7xuJywKICAgICAgICAgICAgZGQgOiAnJWQgZ8O8bicsCiAgICAgICAgICAgIE0gOiAnYmlyIGF5JywKICAgICAgICAgICAgTU0gOiAnJWQgYXknLAogICAgICAgICAgICB5IDogJ2JpciB5xLFsJywKICAgICAgICAgICAgeXkgOiAnJWQgecSxbCcKICAgICAgICB9LAogICAgICAgIG9yZGluYWxQYXJzZTogL1xkezEsMn0nKGluY2l8bmNpfMO8bmPDvHxuY8SxfHVuY3V8xLFuY8SxKS8sCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIpIHsKICAgICAgICAgICAgaWYgKG51bWJlciA9PT0gMCkgeyAgLy8gc3BlY2lhbCBjYXNlIGZvciB6ZXJvCiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJ1wnxLFuY8SxJzsKICAgICAgICAgICAgfQogICAgICAgICAgICB2YXIgYSA9IG51bWJlciAlIDEwLAogICAgICAgICAgICAgICAgYiA9IG51bWJlciAlIDEwMCAtIGEsCiAgICAgICAgICAgICAgICBjID0gbnVtYmVyID49IDEwMCA\/IDEwMCA6IG51bGw7CgogICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgKHN1ZmZpeGVzW2FdIHx8IHN1ZmZpeGVzW2JdIHx8IHN1ZmZpeGVzW2NdKTsKICAgICAgICB9LAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA3ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiAxc3QgaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKLy8gbW9tZW50LmpzIGxvY2FsZSBjb25maWd1cmF0aW9uCi8vIGxvY2FsZSA6IE1vcm9jY28gQ2VudHJhbCBBdGxhcyBUYW1hemnJo3QgaW4gTGF0aW4gKHR6bS1sYXRuKQovLyBhdXRob3IgOiBBYmRlbCBTYWlkIDogaHR0cHM6Ly9naXRodWIuY29tL2FiZGVsc2FpZAoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgcmV0dXJuIG1vbWVudC5kZWZpbmVMb2NhbGUoJ3R6bS1sYXRuJywgewogICAgICAgIG1vbnRocyA6ICdpbm5heXJfYnLLpGF5csukX21hcsukc8ukX2licmlyX21heXl3X3l3bnl3X3l3bHl3el\/Jo3fFoXRfxaF3dGFuYmlyX2t0y6R3YnLLpF9ud3dhbmJpcl9kd2puYmlyJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJ2lubmF5cl9icsukYXlyy6RfbWFyy6Rzy6RfaWJyaXJfbWF5eXdfeXdueXdfeXdseXd6X8mjd8WhdF\/FoXd0YW5iaXJfa3TLpHdicsukX253d2FuYmlyX2R3am5iaXInLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXMgOiAnYXNhbWFzX2F5bmFzX2FzaW5hc19ha3Jhc19ha3dhc19hc2ltd2FzX2FzaeG4jXlhcycuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ2FzYW1hc19heW5hc19hc2luYXNfYWtyYXNfYWt3YXNfYXNpbXdhc19hc2nhuI15YXMnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNNaW4gOiAnYXNhbWFzX2F5bmFzX2FzaW5hc19ha3Jhc19ha3dhc19hc2ltd2FzX2FzaeG4jXlhcycuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnSEg6bW0nLAogICAgICAgICAgICBMVFMgOiAnTFQ6c3MnLAogICAgICAgICAgICBMIDogJ0REL01NL1lZWVknLAogICAgICAgICAgICBMTCA6ICdEIE1NTU0gWVlZWScsCiAgICAgICAgICAgIExMTCA6ICdEIE1NTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCBEIE1NTU0gWVlZWSBMVCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5OiAnW2FzZGtoIGddIExUJywKICAgICAgICAgICAgbmV4dERheTogJ1thc2thIGddIExUJywKICAgICAgICAgICAgbmV4dFdlZWs6ICdkZGRkIFtnXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXk6ICdbYXNzYW50IGddIExUJywKICAgICAgICAgICAgbGFzdFdlZWs6ICdkZGRkIFtnXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJ2RhZGtoIHMgeWFuICVzJywKICAgICAgICAgICAgcGFzdCA6ICd5YW4gJXMnLAogICAgICAgICAgICBzIDogJ2ltaWsnLAogICAgICAgICAgICBtIDogJ21pbnXhuI0nLAogICAgICAgICAgICBtbSA6ICclZCBtaW514biNJywKICAgICAgICAgICAgaCA6ICdzYcmbYScsCiAgICAgICAgICAgIGhoIDogJyVkIHRhc3NhyZtpbicsCiAgICAgICAgICAgIGQgOiAnYXNzJywKICAgICAgICAgICAgZGQgOiAnJWQgb3NzYW4nLAogICAgICAgICAgICBNIDogJ2F5b3dyJywKICAgICAgICAgICAgTU0gOiAnJWQgaXl5aXJuJywKICAgICAgICAgICAgeSA6ICdhc2dhcycsCiAgICAgICAgICAgIHl5IDogJyVkIGlzZ2FzbicKICAgICAgICB9LAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDYsIC8vIFNhdHVyZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDEyICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiAxc3QgaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKLy8gbW9tZW50LmpzIGxvY2FsZSBjb25maWd1cmF0aW9uCi8vIGxvY2FsZSA6IE1vcm9jY28gQ2VudHJhbCBBdGxhcyBUYW1hemnJo3QgKHR6bSkKLy8gYXV0aG9yIDogQWJkZWwgU2FpZCA6IGh0dHBzOi8vZ2l0aHViLmNvbS9hYmRlbHNhaWQKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCd0em0nLCB7CiAgICAgICAgbW9udGhzIDogJ+K1ieK1j+K1j+K0sOK1ouK1lF\/itLHitZXitLDitaLitZVf4rWO4rSw4rWV4rWaX+K1ieK0seK1lOK1ieK1lF\/itY7itLDitaLitaLitZNf4rWi4rWT4rWP4rWi4rWTX+K1ouK1k+K1jeK1ouK1k+K1o1\/itZbitZPitZvitZxf4rWb4rWT4rWc4rSw4rWP4rSx4rWJ4rWUX+K0veK1n+K1k+K0seK1lV\/itY\/itZPitaHitLDitY\/itLHitYnitZRf4rS34rWT4rWK4rWP4rSx4rWJ4rWUJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJ+K1ieK1j+K1j+K0sOK1ouK1lF\/itLHitZXitLDitaLitZVf4rWO4rSw4rWV4rWaX+K1ieK0seK1lOK1ieK1lF\/itY7itLDitaLitaLitZNf4rWi4rWT4rWP4rWi4rWTX+K1ouK1k+K1jeK1ouK1k+K1o1\/itZbitZPitZvitZxf4rWb4rWT4rWc4rSw4rWP4rSx4rWJ4rWUX+K0veK1n+K1k+K0seK1lV\/itY\/itZPitaHitLDitY\/itLHitYnitZRf4rS34rWT4rWK4rWP4rSx4rWJ4rWUJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ+K0sOK1meK0sOK1juK0sOK1mV\/itLDitaLitY\/itLDitZlf4rSw4rWZ4rWJ4rWP4rSw4rWZX+K0sOK0veK1lOK0sOK1mV\/itLDitL3itaHitLDitZlf4rSw4rWZ4rWJ4rWO4rWh4rSw4rWZX+K0sOK1meK1ieK0ueK1ouK0sOK1mScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ+K0sOK1meK0sOK1juK0sOK1mV\/itLDitaLitY\/itLDitZlf4rSw4rWZ4rWJ4rWP4rSw4rWZX+K0sOK0veK1lOK0sOK1mV\/itLDitL3itaHitLDitZlf4rSw4rWZ4rWJ4rWO4rWh4rSw4rWZX+K0sOK1meK1ieK0ueK1ouK0sOK1mScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICfitLDitZnitLDitY7itLDitZlf4rSw4rWi4rWP4rSw4rWZX+K0sOK1meK1ieK1j+K0sOK1mV\/itLDitL3itZTitLDitZlf4rSw4rS94rWh4rSw4rWZX+K0sOK1meK1ieK1juK1oeK0sOK1mV\/itLDitZnitYnitLnitaLitLDitZknLnNwbGl0KCdfJyksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogJ0hIOm1tJywKICAgICAgICAgICAgTFRTOiAnTFQ6c3MnLAogICAgICAgICAgICBMIDogJ0REL01NL1lZWVknLAogICAgICAgICAgICBMTCA6ICdEIE1NTU0gWVlZWScsCiAgICAgICAgICAgIExMTCA6ICdEIE1NTU0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCBEIE1NTU0gWVlZWSBMVCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5OiAnW+K0sOK1meK0t+K1hSDitLRdIExUJywKICAgICAgICAgICAgbmV4dERheTogJ1vitLDitZnitL3itLAg4rS0XSBMVCcsCiAgICAgICAgICAgIG5leHRXZWVrOiAnZGRkZCBb4rS0XSBMVCcsCiAgICAgICAgICAgIGxhc3REYXk6ICdb4rSw4rWa4rSw4rWP4rWcIOK0tF0gTFQnLAogICAgICAgICAgICBsYXN0V2VlazogJ2RkZGQgW+K0tF0gTFQnLAogICAgICAgICAgICBzYW1lRWxzZTogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICfitLfitLDitLfitYUg4rWZIOK1ouK0sOK1jyAlcycsCiAgICAgICAgICAgIHBhc3QgOiAn4rWi4rSw4rWPICVzJywKICAgICAgICAgICAgcyA6ICfitYnitY7itYnitL0nLAogICAgICAgICAgICBtIDogJ+K1juK1ieK1j+K1k+K0uicsCiAgICAgICAgICAgIG1tIDogJyVkIOK1juK1ieK1j+K1k+K0uicsCiAgICAgICAgICAgIGggOiAn4rWZ4rSw4rWE4rSwJywKICAgICAgICAgICAgaGggOiAnJWQg4rWc4rSw4rWZ4rWZ4rSw4rWE4rWJ4rWPJywKICAgICAgICAgICAgZCA6ICfitLDitZnitZknLAogICAgICAgICAgICBkZCA6ICclZCBv4rWZ4rWZ4rSw4rWPJywKICAgICAgICAgICAgTSA6ICfitLDitaJv4rWT4rWUJywKICAgICAgICAgICAgTU0gOiAnJWQg4rWJ4rWi4rWi4rWJ4rWU4rWPJywKICAgICAgICAgICAgeSA6ICfitLDitZnitLPitLDitZknLAogICAgICAgICAgICB5eSA6ICclZCDitYnitZnitLPitLDitZnitY8nCiAgICAgICAgfSwKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiA2LCAvLyBTYXR1cmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiAxMiAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gMXN0IGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiB1a3JhaW5pYW4gKHVrKQovLyBhdXRob3IgOiB6ZW1sYW5pbiA6IGh0dHBzOi8vZ2l0aHViLmNvbS96ZW1sYW5pbgovLyBBdXRob3IgOiBNZW5lbGlvbiBFbGVuc8O6bGUgOiBodHRwczovL2dpdGh1Yi5jb20vT2lyZQoKKGZ1bmN0aW9uIChmYWN0b3J5KSB7CiAgICBmYWN0b3J5KG1vbWVudCk7Cn0oZnVuY3Rpb24gKG1vbWVudCkgewogICAgZnVuY3Rpb24gcGx1cmFsKHdvcmQsIG51bSkgewogICAgICAgIHZhciBmb3JtcyA9IHdvcmQuc3BsaXQoJ18nKTsKICAgICAgICByZXR1cm4gbnVtICUgMTAgPT09IDEgJiYgbnVtICUgMTAwICE9PSAxMSA\/IGZvcm1zWzBdIDogKG51bSAlIDEwID49IDIgJiYgbnVtICUgMTAgPD0gNCAmJiAobnVtICUgMTAwIDwgMTAgfHwgbnVtICUgMTAwID49IDIwKSA\/IGZvcm1zWzFdIDogZm9ybXNbMl0pOwogICAgfQoKICAgIGZ1bmN0aW9uIHJlbGF0aXZlVGltZVdpdGhQbHVyYWwobnVtYmVyLCB3aXRob3V0U3VmZml4LCBrZXkpIHsKICAgICAgICB2YXIgZm9ybWF0ID0gewogICAgICAgICAgICAnbW0nOiAn0YXQstC40LvQuNC90LBf0YXQstC40LvQuNC90Lhf0YXQstC40LvQuNC9JywKICAgICAgICAgICAgJ2hoJzogJ9Cz0L7QtNC40L3QsF\/Qs9C+0LTQuNC90Lhf0LPQvtC00LjQvScsCiAgICAgICAgICAgICdkZCc6ICfQtNC10L3RjF\/QtNC90ZZf0LTQvdGW0LInLAogICAgICAgICAgICAnTU0nOiAn0LzRltGB0Y\/RhtGMX9C80ZbRgdGP0YbRll\/QvNGW0YHRj9GG0ZbQsicsCiAgICAgICAgICAgICd5eSc6ICfRgNGW0Lpf0YDQvtC60Lhf0YDQvtC60ZbQsicKICAgICAgICB9OwogICAgICAgIGlmIChrZXkgPT09ICdtJykgewogICAgICAgICAgICByZXR1cm4gd2l0aG91dFN1ZmZpeCA\/ICfRhdCy0LjQu9C40L3QsCcgOiAn0YXQstC40LvQuNC90YMnOwogICAgICAgIH0KICAgICAgICBlbHNlIGlmIChrZXkgPT09ICdoJykgewogICAgICAgICAgICByZXR1cm4gd2l0aG91dFN1ZmZpeCA\/ICfQs9C+0LTQuNC90LAnIDogJ9Cz0L7QtNC40L3Rgyc7CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJyAnICsgcGx1cmFsKGZvcm1hdFtrZXldLCArbnVtYmVyKTsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gbW9udGhzQ2FzZVJlcGxhY2UobSwgZm9ybWF0KSB7CiAgICAgICAgdmFyIG1vbnRocyA9IHsKICAgICAgICAgICAgJ25vbWluYXRpdmUnOiAn0YHRltGH0LXQvdGMX9C70Y7RgtC40Llf0LHQtdGA0LXQt9C10L3RjF\/QutCy0ZbRgtC10L3RjF\/RgtGA0LDQstC10L3RjF\/Rh9C10YDQstC10L3RjF\/Qu9C40L\/QtdC90Yxf0YHQtdGA0L\/QtdC90Yxf0LLQtdGA0LXRgdC10L3RjF\/QttC+0LLRgtC10L3RjF\/Qu9C40YHRgtC+0L\/QsNC0X9Cz0YDRg9C00LXQvdGMJy5zcGxpdCgnXycpLAogICAgICAgICAgICAnYWNjdXNhdGl2ZSc6ICfRgdGW0YfQvdGPX9C70Y7RgtC+0LPQvl\/QsdC10YDQtdC30L3Rj1\/QutCy0ZbRgtC90Y9f0YLRgNCw0LLQvdGPX9GH0LXRgNCy0L3Rj1\/Qu9C40L\/QvdGPX9GB0LXRgNC\/0L3Rj1\/QstC10YDQtdGB0L3Rj1\/QttC+0LLRgtC90Y9f0LvQuNGB0YLQvtC\/0LDQtNCwX9Cz0YDRg9C00L3Rjycuc3BsaXQoJ18nKQogICAgICAgIH0sCgogICAgICAgIG5vdW5DYXNlID0gKC9EW29EXT8gKk1NTU0\/LykudGVzdChmb3JtYXQpID8KICAgICAgICAgICAgJ2FjY3VzYXRpdmUnIDoKICAgICAgICAgICAgJ25vbWluYXRpdmUnOwoKICAgICAgICByZXR1cm4gbW9udGhzW25vdW5DYXNlXVttLm1vbnRoKCldOwogICAgfQoKICAgIGZ1bmN0aW9uIHdlZWtkYXlzQ2FzZVJlcGxhY2UobSwgZm9ybWF0KSB7CiAgICAgICAgdmFyIHdlZWtkYXlzID0gewogICAgICAgICAgICAnbm9taW5hdGl2ZSc6ICfQvdC10LTRltC70Y9f0L\/QvtC90LXQtNGW0LvQvtC6X9Cy0ZbQstGC0L7RgNC+0Lpf0YHQtdGA0LXQtNCwX9GH0LXRgtCy0LXRgF\/Qv+KAmdGP0YLQvdC40YbRj1\/RgdGD0LHQvtGC0LAnLnNwbGl0KCdfJyksCiAgICAgICAgICAgICdhY2N1c2F0aXZlJzogJ9C90LXQtNGW0LvRjl\/Qv9C+0L3QtdC00ZbQu9C+0Lpf0LLRltCy0YLQvtGA0L7Qul\/RgdC10YDQtdC00YNf0YfQtdGC0LLQtdGAX9C\/4oCZ0Y\/RgtC90LjRhtGOX9GB0YPQsdC+0YLRgycuc3BsaXQoJ18nKSwKICAgICAgICAgICAgJ2dlbml0aXZlJzogJ9C90LXQtNGW0LvRll\/Qv9C+0L3QtdC00ZbQu9C60LBf0LLRltCy0YLQvtGA0LrQsF\/RgdC10YDQtdC00Lhf0YfQtdGC0LLQtdGA0LPQsF\/Qv+KAmdGP0YLQvdC40YbRll\/RgdGD0LHQvtGC0LgnLnNwbGl0KCdfJykKICAgICAgICB9LAoKICAgICAgICBub3VuQ2FzZSA9ICgvKFxbW9CS0LLQo9GDXVxdKSA\/ZGRkZC8pLnRlc3QoZm9ybWF0KSA\/CiAgICAgICAgICAgICdhY2N1c2F0aXZlJyA6CiAgICAgICAgICAgICgoL1xbPyg\/OtC80LjQvdGD0LvQvtGXfNC90LDRgdGC0YPQv9C90L7Rlyk\/ID9cXSA\/ZGRkZC8pLnRlc3QoZm9ybWF0KSA\/CiAgICAgICAgICAgICAgICAnZ2VuaXRpdmUnIDoKICAgICAgICAgICAgICAgICdub21pbmF0aXZlJyk7CgogICAgICAgIHJldHVybiB3ZWVrZGF5c1tub3VuQ2FzZV1bbS5kYXkoKV07CiAgICB9CgogICAgZnVuY3Rpb24gcHJvY2Vzc0hvdXJzRnVuY3Rpb24oc3RyKSB7CiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmV0dXJuIHN0ciArICfQvicgKyAodGhpcy5ob3VycygpID09PSAxMSA\/ICfQsScgOiAnJykgKyAnXSBMVCc7CiAgICAgICAgfTsKICAgIH0KCiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgndWsnLCB7CiAgICAgICAgbW9udGhzIDogbW9udGhzQ2FzZVJlcGxhY2UsCiAgICAgICAgbW9udGhzU2hvcnQgOiAn0YHRltGHX9C70Y7Rgl\/QsdC10YBf0LrQstGW0YJf0YLRgNCw0LJf0YfQtdGA0LJf0LvQuNC\/X9GB0LXRgNC\/X9Cy0LXRgF\/QttC+0LLRgl\/Qu9C40YHRgl\/Qs9GA0YPQtCcuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6IHdlZWtkYXlzQ2FzZVJlcGxhY2UsCiAgICAgICAgd2Vla2RheXNTaG9ydCA6ICfQvdC0X9C\/0L1f0LLRgl\/RgdGAX9GH0YJf0L\/Rgl\/RgdCxJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ9C90LRf0L\/QvV\/QstGCX9GB0YBf0YfRgl\/Qv9GCX9GB0LEnLnNwbGl0KCdfJyksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogJ0hIOm1tJywKICAgICAgICAgICAgTFRTIDogJ0xUOnNzJywKICAgICAgICAgICAgTCA6ICdERC5NTS5ZWVlZJywKICAgICAgICAgICAgTEwgOiAnRCBNTU1NIFlZWVkg0YAuJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZINGALiwgTFQnLAogICAgICAgICAgICBMTExMIDogJ2RkZGQsIEQgTU1NTSBZWVlZINGALiwgTFQnCiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheTogcHJvY2Vzc0hvdXJzRnVuY3Rpb24oJ1vQodGM0L7Qs9C+0LTQvdGWICcpLAogICAgICAgICAgICBuZXh0RGF5OiBwcm9jZXNzSG91cnNGdW5jdGlvbignW9CX0LDQstGC0YDQsCAnKSwKICAgICAgICAgICAgbGFzdERheTogcHJvY2Vzc0hvdXJzRnVuY3Rpb24oJ1vQktGH0L7RgNCwICcpLAogICAgICAgICAgICBuZXh0V2VlazogcHJvY2Vzc0hvdXJzRnVuY3Rpb24oJ1vQo10gZGRkZCBbJyksCiAgICAgICAgICAgIGxhc3RXZWVrOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKHRoaXMuZGF5KCkpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvY2Vzc0hvdXJzRnVuY3Rpb24oJ1vQnNC40L3Rg9C70L7Rl10gZGRkZCBbJykuY2FsbCh0aGlzKTsKICAgICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvY2Vzc0hvdXJzRnVuY3Rpb24oJ1vQnNC40L3Rg9C70L7Qs9C+XSBkZGRkIFsnKS5jYWxsKHRoaXMpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBzYW1lRWxzZTogJ0wnCiAgICAgICAgfSwKICAgICAgICByZWxhdGl2ZVRpbWUgOiB7CiAgICAgICAgICAgIGZ1dHVyZSA6ICfQt9CwICVzJywKICAgICAgICAgICAgcGFzdCA6ICclcyDRgtC+0LzRgycsCiAgICAgICAgICAgIHMgOiAn0LTQtdC60ZbQu9GM0LrQsCDRgdC10LrRg9C90LQnLAogICAgICAgICAgICBtIDogcmVsYXRpdmVUaW1lV2l0aFBsdXJhbCwKICAgICAgICAgICAgbW0gOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsLAogICAgICAgICAgICBoIDogJ9Cz0L7QtNC40L3RgycsCiAgICAgICAgICAgIGhoIDogcmVsYXRpdmVUaW1lV2l0aFBsdXJhbCwKICAgICAgICAgICAgZCA6ICfQtNC10L3RjCcsCiAgICAgICAgICAgIGRkIDogcmVsYXRpdmVUaW1lV2l0aFBsdXJhbCwKICAgICAgICAgICAgTSA6ICfQvNGW0YHRj9GG0YwnLAogICAgICAgICAgICBNTSA6IHJlbGF0aXZlVGltZVdpdGhQbHVyYWwsCiAgICAgICAgICAgIHkgOiAn0YDRltC6JywKICAgICAgICAgICAgeXkgOiByZWxhdGl2ZVRpbWVXaXRoUGx1cmFsCiAgICAgICAgfSwKCiAgICAgICAgLy8gTS4gRS46IHRob3NlIHR3byBhcmUgdmlydHVhbGx5IHVudXNlZCBidXQgYSB1c2VyIG1pZ2h0IHdhbnQgdG8gaW1wbGVtZW50IHRoZW0gZm9yIGhpcy9oZXIgd2Vic2l0ZSBmb3Igc29tZSByZWFzb24KCiAgICAgICAgbWVyaWRpZW1QYXJzZTogL9C90L7Rh9GWfNGA0LDQvdC60YN80LTQvdGPfNCy0LXRh9C+0YDQsC8sCiAgICAgICAgaXNQTTogZnVuY3Rpb24gKGlucHV0KSB7CiAgICAgICAgICAgIHJldHVybiAvXijQtNC90Y980LLQtdGH0L7RgNCwKSQvLnRlc3QoaW5wdXQpOwogICAgICAgIH0sCiAgICAgICAgbWVyaWRpZW0gOiBmdW5jdGlvbiAoaG91ciwgbWludXRlLCBpc0xvd2VyKSB7CiAgICAgICAgICAgIGlmIChob3VyIDwgNCkgewogICAgICAgICAgICAgICAgcmV0dXJuICfQvdC+0YfRlic7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaG91ciA8IDEyKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ9GA0LDQvdC60YMnOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhvdXIgPCAxNykgewogICAgICAgICAgICAgICAgcmV0dXJuICfQtNC90Y8nOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuICfQstC10YfQvtGA0LAnOwogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgb3JkaW5hbFBhcnNlOiAvXGR7MSwyfS0o0Ll80LPQvikvLAogICAgICAgIG9yZGluYWw6IGZ1bmN0aW9uIChudW1iZXIsIHBlcmlvZCkgewogICAgICAgICAgICBzd2l0Y2ggKHBlcmlvZCkgewogICAgICAgICAgICBjYXNlICdNJzoKICAgICAgICAgICAgY2FzZSAnZCc6CiAgICAgICAgICAgIGNhc2UgJ0RERCc6CiAgICAgICAgICAgIGNhc2UgJ3cnOgogICAgICAgICAgICBjYXNlICdXJzoKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAnLdC5JzsKICAgICAgICAgICAgY2FzZSAnRCc6CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJy3Qs9C+JzsKICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXI7CiAgICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNyAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gMXN0IGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiB1emJlayAodXopCi8vIGF1dGhvciA6IFNhcmRvciBNdW1pbm92IDogaHR0cHM6Ly9naXRodWIuY29tL211bWlub2ZmCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgndXonLCB7CiAgICAgICAgbW9udGhzIDogJ9GP0L3QstCw0YDRjF\/RhNC10LLRgNCw0LvRjF\/QvNCw0YDRgl\/QsNC\/0YDQtdC70Yxf0LzQsNC5X9C40Y7QvdGMX9C40Y7Qu9GMX9Cw0LLQs9GD0YHRgl\/RgdC10L3RgtGP0LHRgNGMX9C+0LrRgtGP0LHRgNGMX9C90L7Rj9Cx0YDRjF\/QtNC10LrQsNCx0YDRjCcuc3BsaXQoJ18nKSwKICAgICAgICBtb250aHNTaG9ydCA6ICfRj9C90LJf0YTQtdCyX9C80LDRgF\/QsNC\/0YBf0LzQsNC5X9C40Y7QvV\/QuNGO0Ltf0LDQstCzX9GB0LXQvV\/QvtC60YJf0L3QvtGPX9C00LXQuicuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5cyA6ICfQr9C60YjQsNC90LHQsF\/QlNGD0YjQsNC90LHQsF\/QodC10YjQsNC90LHQsF\/Qp9C+0YDRiNCw0L3QsdCwX9Cf0LDQudGI0LDQvdCx0LBf0JbRg9C80LBf0KjQsNC90LHQsCcuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ9Cv0LrRiF\/QlNGD0Yhf0KHQtdGIX9Cn0L7RgF\/Qn9Cw0Llf0JbRg9C8X9Co0LDQvScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICfQr9C6X9CU0YNf0KHQtV\/Qp9C+X9Cf0LBf0JbRg1\/QqNCwJy5zcGxpdCgnXycpLAogICAgICAgIGxvbmdEYXRlRm9ybWF0IDogewogICAgICAgICAgICBMVCA6ICdISDptbScsCiAgICAgICAgICAgIExUUyA6ICdMVDpzcycsCiAgICAgICAgICAgIEwgOiAnREQvTU0vWVlZWScsCiAgICAgICAgICAgIExMIDogJ0QgTU1NTSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBZWVlZIExUJywKICAgICAgICAgICAgTExMTCA6ICdEIE1NTU0gWVlZWSwgZGRkZCBMVCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5IDogJ1vQkdGD0LPRg9C9INGB0L7QsNGCXSBMVCBb0LTQsF0nLAogICAgICAgICAgICBuZXh0RGF5IDogJ1vQrdGA0YLQsNCz0LBdIExUIFvQtNCwXScsCiAgICAgICAgICAgIG5leHRXZWVrIDogJ2RkZGQgW9C60YPQvdC4INGB0L7QsNGCXSBMVCBb0LTQsF0nLAogICAgICAgICAgICBsYXN0RGF5IDogJ1vQmtC10YfQsCDRgdC+0LDRgl0gTFQgW9C00LBdJywKICAgICAgICAgICAgbGFzdFdlZWsgOiAnW9Cj0YLQs9Cw0L1dIGRkZGQgW9C60YPQvdC4INGB0L7QsNGCXSBMVCBb0LTQsF0nLAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMJwogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAn0K\/QutC40L0gJXMg0LjRh9C40LTQsCcsCiAgICAgICAgICAgIHBhc3QgOiAn0JHQuNGAINC90LXRh9CwICVzINC+0LvQtNC40L0nLAogICAgICAgICAgICBzIDogJ9GE0YPRgNGB0LDRgicsCiAgICAgICAgICAgIG0gOiAn0LHQuNGAINC00LDQutC40LrQsCcsCiAgICAgICAgICAgIG1tIDogJyVkINC00LDQutC40LrQsCcsCiAgICAgICAgICAgIGggOiAn0LHQuNGAINGB0L7QsNGCJywKICAgICAgICAgICAgaGggOiAnJWQg0YHQvtCw0YInLAogICAgICAgICAgICBkIDogJ9Cx0LjRgCDQutGD0L0nLAogICAgICAgICAgICBkZCA6ICclZCDQutGD0L0nLAogICAgICAgICAgICBNIDogJ9Cx0LjRgCDQvtC5JywKICAgICAgICAgICAgTU0gOiAnJWQg0L7QuScsCiAgICAgICAgICAgIHkgOiAn0LHQuNGAINC50LjQuycsCiAgICAgICAgICAgIHl5IDogJyVkINC50LjQuycKICAgICAgICB9LAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIGRvdyA6IDEsIC8vIE1vbmRheSBpcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLgogICAgICAgICAgICBkb3kgOiA3ICAvLyBUaGUgd2VlayB0aGF0IGNvbnRhaW5zIEphbiA0dGggaXMgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHllYXIuCiAgICAgICAgfQogICAgfSk7Cn0pKTsKLy8gbW9tZW50LmpzIGxvY2FsZSBjb25maWd1cmF0aW9uCi8vIGxvY2FsZSA6IHZpZXRuYW1lc2UgKHZpKQovLyBhdXRob3IgOiBCYW5nIE5ndXllbiA6IGh0dHBzOi8vZ2l0aHViLmNvbS9iYW5nbmsKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCd2aScsIHsKICAgICAgICBtb250aHMgOiAndGjDoW5nIDFfdGjDoW5nIDJfdGjDoW5nIDNfdGjDoW5nIDRfdGjDoW5nIDVfdGjDoW5nIDZfdGjDoW5nIDdfdGjDoW5nIDhfdGjDoW5nIDlfdGjDoW5nIDEwX3Row6FuZyAxMV90aMOhbmcgMTInLnNwbGl0KCdfJyksCiAgICAgICAgbW9udGhzU2hvcnQgOiAnVGgwMV9UaDAyX1RoMDNfVGgwNF9UaDA1X1RoMDZfVGgwN19UaDA4X1RoMDlfVGgxMF9UaDExX1RoMTInLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXMgOiAnY2jhu6cgbmjhuq10X3Ro4bupIGhhaV90aOG7qSBiYV90aOG7qSB0xrBfdGjhu6kgbsSDbV90aOG7qSBzw6F1X3Ro4bupIGLhuqN5Jy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAnQ05fVDJfVDNfVDRfVDVfVDZfVDcnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXNNaW4gOiAnQ05fVDJfVDNfVDRfVDVfVDZfVDcnLnNwbGl0KCdfJyksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogJ0hIOm1tJywKICAgICAgICAgICAgTFRTIDogJ0xUOnNzJywKICAgICAgICAgICAgTCA6ICdERC9NTS9ZWVlZJywKICAgICAgICAgICAgTEwgOiAnRCBNTU1NIFtuxINtXSBZWVlZJywKICAgICAgICAgICAgTExMIDogJ0QgTU1NTSBbbsSDbV0gWVlZWSBMVCcsCiAgICAgICAgICAgIExMTEwgOiAnZGRkZCwgRCBNTU1NIFtuxINtXSBZWVlZIExUJywKICAgICAgICAgICAgbCA6ICdERC9NL1lZWVknLAogICAgICAgICAgICBsbCA6ICdEIE1NTSBZWVlZJywKICAgICAgICAgICAgbGxsIDogJ0QgTU1NIFlZWVkgTFQnLAogICAgICAgICAgICBsbGxsIDogJ2RkZCwgRCBNTU0gWVlZWSBMVCcKICAgICAgICB9LAogICAgICAgIGNhbGVuZGFyIDogewogICAgICAgICAgICBzYW1lRGF5OiAnW0jDtG0gbmF5IGzDumNdIExUJywKICAgICAgICAgICAgbmV4dERheTogJ1tOZ8OgeSBtYWkgbMO6Y10gTFQnLAogICAgICAgICAgICBuZXh0V2VlazogJ2RkZGQgW3R14bqnbiB04bubaSBsw7pjXSBMVCcsCiAgICAgICAgICAgIGxhc3REYXk6ICdbSMO0bSBxdWEgbMO6Y10gTFQnLAogICAgICAgICAgICBsYXN0V2VlazogJ2RkZGQgW3R14bqnbiBy4buTaSBsw7pjXSBMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlOiAnTCcKICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJyVzIHThu5tpJywKICAgICAgICAgICAgcGFzdCA6ICclcyB0csaw4bubYycsCiAgICAgICAgICAgIHMgOiAndsOgaSBnacOieScsCiAgICAgICAgICAgIG0gOiAnbeG7mXQgcGjDunQnLAogICAgICAgICAgICBtbSA6ICclZCBwaMO6dCcsCiAgICAgICAgICAgIGggOiAnbeG7mXQgZ2nhu50nLAogICAgICAgICAgICBoaCA6ICclZCBnaeG7nScsCiAgICAgICAgICAgIGQgOiAnbeG7mXQgbmfDoHknLAogICAgICAgICAgICBkZCA6ICclZCBuZ8OgeScsCiAgICAgICAgICAgIE0gOiAnbeG7mXQgdGjDoW5nJywKICAgICAgICAgICAgTU0gOiAnJWQgdGjDoW5nJywKICAgICAgICAgICAgeSA6ICdt4buZdCBuxINtJywKICAgICAgICAgICAgeXkgOiAnJWQgbsSDbScKICAgICAgICB9LAogICAgICAgIG9yZGluYWxQYXJzZTogL1xkezEsMn0vLAogICAgICAgIG9yZGluYWwgOiBmdW5jdGlvbiAobnVtYmVyKSB7CiAgICAgICAgICAgIHJldHVybiBudW1iZXI7CiAgICAgICAgfSwKICAgICAgICB3ZWVrIDogewogICAgICAgICAgICBkb3cgOiAxLCAvLyBNb25kYXkgaXMgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2Vlay4KICAgICAgICAgICAgZG95IDogNCAgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gNHRoIGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLgogICAgICAgIH0KICAgIH0pOwp9KSk7Ci8vIG1vbWVudC5qcyBsb2NhbGUgY29uZmlndXJhdGlvbgovLyBsb2NhbGUgOiBjaGluZXNlICh6aC1jbikKLy8gYXV0aG9yIDogc3V1cGljIDogaHR0cHM6Ly9naXRodWIuY29tL3N1dXBpYwovLyBhdXRob3IgOiBaZW5vIFplbmcgOiBodHRwczovL2dpdGh1Yi5jb20vemVub3plbmcKCihmdW5jdGlvbiAoZmFjdG9yeSkgewogICAgZmFjdG9yeShtb21lbnQpOwp9KGZ1bmN0aW9uIChtb21lbnQpIHsKICAgIHJldHVybiBtb21lbnQuZGVmaW5lTG9jYWxlKCd6aC1jbicsIHsKICAgICAgICBtb250aHMgOiAn5LiA5pyIX+S6jOaciF\/kuInmnIhf5Zub5pyIX+S6lOaciF\/lha3mnIhf5LiD5pyIX+WFq+aciF\/kuZ3mnIhf5Y2B5pyIX+WNgeS4gOaciF\/ljYHkuozmnIgnLnNwbGl0KCdfJyksCiAgICAgICAgbW9udGhzU2hvcnQgOiAnMeaciF8y5pyIXzPmnIhfNOaciF815pyIXzbmnIhfN+aciF845pyIXznmnIhfMTDmnIhfMTHmnIhfMTLmnIgnLnNwbGl0KCdfJyksCiAgICAgICAgd2Vla2RheXMgOiAn5pif5pyf5pelX+aYn+acn+S4gF\/mmJ\/mnJ\/kuoxf5pif5pyf5LiJX+aYn+acn+Wbm1\/mmJ\/mnJ\/kupRf5pif5pyf5YWtJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzU2hvcnQgOiAn5ZGo5pelX+WRqOS4gF\/lkajkuoxf5ZGo5LiJX+WRqOWbm1\/lkajkupRf5ZGo5YWtJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzTWluIDogJ+aXpV\/kuIBf5LqMX+S4iV\/lm5tf5LqUX+WFrScuc3BsaXQoJ18nKSwKICAgICAgICBsb25nRGF0ZUZvcm1hdCA6IHsKICAgICAgICAgICAgTFQgOiAnQWjngrltbScsCiAgICAgICAgICAgIExUUyA6ICdBaOeCuW3liIZz56eSJywKICAgICAgICAgICAgTCA6ICdZWVlZLU1NLUREJywKICAgICAgICAgICAgTEwgOiAnWVlZWeW5tE1NTUTml6UnLAogICAgICAgICAgICBMTEwgOiAnWVlZWeW5tE1NTUTml6VMVCcsCiAgICAgICAgICAgIExMTEwgOiAnWVlZWeW5tE1NTUTml6VkZGRkTFQnLAogICAgICAgICAgICBsIDogJ1lZWVktTU0tREQnLAogICAgICAgICAgICBsbCA6ICdZWVlZ5bm0TU1NROaXpScsCiAgICAgICAgICAgIGxsbCA6ICdZWVlZ5bm0TU1NROaXpUxUJywKICAgICAgICAgICAgbGxsbCA6ICdZWVlZ5bm0TU1NROaXpWRkZGRMVCcKICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtUGFyc2U6IC\/lh4zmmah85pep5LiKfOS4iuWNiHzkuK3ljYh85LiL5Y2IfOaZmuS4ii8sCiAgICAgICAgbWVyaWRpZW1Ib3VyOiBmdW5jdGlvbiAoaG91ciwgbWVyaWRpZW0pIHsKICAgICAgICAgICAgaWYgKGhvdXIgPT09IDEyKSB7CiAgICAgICAgICAgICAgICBob3VyID0gMDsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAobWVyaWRpZW0gPT09ICflh4zmmagnIHx8IG1lcmlkaWVtID09PSAn5pep5LiKJyB8fAogICAgICAgICAgICAgICAgICAgIG1lcmlkaWVtID09PSAn5LiK5Y2IJykgewogICAgICAgICAgICAgICAgcmV0dXJuIGhvdXI7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobWVyaWRpZW0gPT09ICfkuIvljYgnIHx8IG1lcmlkaWVtID09PSAn5pma5LiKJykgewogICAgICAgICAgICAgICAgcmV0dXJuIGhvdXIgKyAxMjsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIC8vICfkuK3ljYgnCiAgICAgICAgICAgICAgICByZXR1cm4gaG91ciA+PSAxMSA\/IGhvdXIgOiBob3VyICsgMTI7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtIDogZnVuY3Rpb24gKGhvdXIsIG1pbnV0ZSwgaXNMb3dlcikgewogICAgICAgICAgICB2YXIgaG0gPSBob3VyICogMTAwICsgbWludXRlOwogICAgICAgICAgICBpZiAoaG0gPCA2MDApIHsKICAgICAgICAgICAgICAgIHJldHVybiAn5YeM5pmoJzsKICAgICAgICAgICAgfSBlbHNlIGlmIChobSA8IDkwMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICfml6nkuIonOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhtIDwgMTEzMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICfkuIrljYgnOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhtIDwgMTIzMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICfkuK3ljYgnOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhtIDwgMTgwMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICfkuIvljYgnOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuICfmmZrkuIonOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm1pbnV0ZXMoKSA9PT0gMCA\/ICdb5LuK5aSpXUFoW+eCueaVtF0nIDogJ1vku4rlpKldTFQnOwogICAgICAgICAgICB9LAogICAgICAgICAgICBuZXh0RGF5IDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubWludXRlcygpID09PSAwID8gJ1vmmI7lpKldQWhb54K55pW0XScgOiAnW+aYjuWkqV1MVCc7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhc3REYXkgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5taW51dGVzKCkgPT09IDAgPyAnW+aYqOWkqV1BaFvngrnmlbRdJyA6ICdb5pio5aSpXUxUJzsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbmV4dFdlZWsgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICB2YXIgc3RhcnRPZldlZWssIHByZWZpeDsKICAgICAgICAgICAgICAgIHN0YXJ0T2ZXZWVrID0gbW9tZW50KCkuc3RhcnRPZignd2VlaycpOwogICAgICAgICAgICAgICAgcHJlZml4ID0gdGhpcy51bml4KCkgLSBzdGFydE9mV2Vlay51bml4KCkgPj0gNyAqIDI0ICogMzYwMCA\/ICdb5LiLXScgOiAnW+acrF0nOwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubWludXRlcygpID09PSAwID8gcHJlZml4ICsgJ2RkZEFo54K55pW0JyA6IHByZWZpeCArICdkZGRBaOeCuW1tJzsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbGFzdFdlZWsgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICB2YXIgc3RhcnRPZldlZWssIHByZWZpeDsKICAgICAgICAgICAgICAgIHN0YXJ0T2ZXZWVrID0gbW9tZW50KCkuc3RhcnRPZignd2VlaycpOwogICAgICAgICAgICAgICAgcHJlZml4ID0gdGhpcy51bml4KCkgPCBzdGFydE9mV2Vlay51bml4KCkgID8gJ1vkuIpdJyA6ICdb5pysXSc7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5taW51dGVzKCkgPT09IDAgPyBwcmVmaXggKyAnZGRkQWjngrnmlbQnIDogcHJlZml4ICsgJ2RkZEFo54K5bW0nOwogICAgICAgICAgICB9LAogICAgICAgICAgICBzYW1lRWxzZSA6ICdMTCcKICAgICAgICB9LAogICAgICAgIG9yZGluYWxQYXJzZTogL1xkezEsMn0o5pelfOaciHzlkagpLywKICAgICAgICBvcmRpbmFsIDogZnVuY3Rpb24gKG51bWJlciwgcGVyaW9kKSB7CiAgICAgICAgICAgIHN3aXRjaCAocGVyaW9kKSB7CiAgICAgICAgICAgIGNhc2UgJ2QnOgogICAgICAgICAgICBjYXNlICdEJzoKICAgICAgICAgICAgY2FzZSAnREREJzoKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAn5pelJzsKICAgICAgICAgICAgY2FzZSAnTSc6CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJ+aciCc7CiAgICAgICAgICAgIGNhc2UgJ3cnOgogICAgICAgICAgICBjYXNlICdXJzoKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAn5ZGoJzsKICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXI7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHJlbGF0aXZlVGltZSA6IHsKICAgICAgICAgICAgZnV0dXJlIDogJyVz5YaFJywKICAgICAgICAgICAgcGFzdCA6ICclc+WJjScsCiAgICAgICAgICAgIHMgOiAn5Yeg56eSJywKICAgICAgICAgICAgbSA6ICcx5YiG6ZKfJywKICAgICAgICAgICAgbW0gOiAnJWTliIbpkp8nLAogICAgICAgICAgICBoIDogJzHlsI\/ml7YnLAogICAgICAgICAgICBoaCA6ICclZOWwj+aXticsCiAgICAgICAgICAgIGQgOiAnMeWkqScsCiAgICAgICAgICAgIGRkIDogJyVk5aSpJywKICAgICAgICAgICAgTSA6ICcx5Liq5pyIJywKICAgICAgICAgICAgTU0gOiAnJWTkuKrmnIgnLAogICAgICAgICAgICB5IDogJzHlubQnLAogICAgICAgICAgICB5eSA6ICclZOW5tCcKICAgICAgICB9LAogICAgICAgIHdlZWsgOiB7CiAgICAgICAgICAgIC8vIEdCL1QgNzQwOC0xOTk044CK5pWw5o2u5YWD5ZKM5Lqk5o2i5qC85byPwrfkv6Hmga\/kuqTmjaLCt+aXpeacn+WSjOaXtumXtOihqOekuuazleOAi+S4jklTTyA4NjAxOjE5ODjnrYnmlYgKICAgICAgICAgICAgZG93IDogMSwgLy8gTW9uZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuCiAgICAgICAgICAgIGRveSA6IDQgIC8vIFRoZSB3ZWVrIHRoYXQgY29udGFpbnMgSmFuIDR0aCBpcyB0aGUgZmlyc3Qgd2VlayBvZiB0aGUgeWVhci4KICAgICAgICB9CiAgICB9KTsKfSkpOwovLyBtb21lbnQuanMgbG9jYWxlIGNvbmZpZ3VyYXRpb24KLy8gbG9jYWxlIDogdHJhZGl0aW9uYWwgY2hpbmVzZSAoemgtdHcpCi8vIGF1dGhvciA6IEJlbiA6IGh0dHBzOi8vZ2l0aHViLmNvbS9iZW4tbGluCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICAgIGZhY3RvcnkobW9tZW50KTsKfShmdW5jdGlvbiAobW9tZW50KSB7CiAgICByZXR1cm4gbW9tZW50LmRlZmluZUxvY2FsZSgnemgtdHcnLCB7CiAgICAgICAgbW9udGhzIDogJ+S4gOaciF\/kuozmnIhf5LiJ5pyIX+Wbm+aciF\/kupTmnIhf5YWt5pyIX+S4g+aciF\/lhavmnIhf5Lmd5pyIX+WNgeaciF\/ljYHkuIDmnIhf5Y2B5LqM5pyIJy5zcGxpdCgnXycpLAogICAgICAgIG1vbnRoc1Nob3J0IDogJzHmnIhfMuaciF8z5pyIXzTmnIhfNeaciF825pyIXzfmnIhfOOaciF855pyIXzEw5pyIXzEx5pyIXzEy5pyIJy5zcGxpdCgnXycpLAogICAgICAgIHdlZWtkYXlzIDogJ+aYn+acn+aXpV\/mmJ\/mnJ\/kuIBf5pif5pyf5LqMX+aYn+acn+S4iV\/mmJ\/mnJ\/lm5tf5pif5pyf5LqUX+aYn+acn+WFrScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c1Nob3J0IDogJ+mAseaXpV\/pgLHkuIBf6YCx5LqMX+mAseS4iV\/pgLHlm5tf6YCx5LqUX+mAseWFrScuc3BsaXQoJ18nKSwKICAgICAgICB3ZWVrZGF5c01pbiA6ICfml6Vf5LiAX+S6jF\/kuIlf5ZubX+S6lF\/lha0nLnNwbGl0KCdfJyksCiAgICAgICAgbG9uZ0RhdGVGb3JtYXQgOiB7CiAgICAgICAgICAgIExUIDogJ0Fo6buebW0nLAogICAgICAgICAgICBMVFMgOiAnQWjpu55t5YiGc+enkicsCiAgICAgICAgICAgIEwgOiAnWVlZWeW5tE1NTUTml6UnLAogICAgICAgICAgICBMTCA6ICdZWVlZ5bm0TU1NROaXpScsCiAgICAgICAgICAgIExMTCA6ICdZWVlZ5bm0TU1NROaXpUxUJywKICAgICAgICAgICAgTExMTCA6ICdZWVlZ5bm0TU1NROaXpWRkZGRMVCcsCiAgICAgICAgICAgIGwgOiAnWVlZWeW5tE1NTUTml6UnLAogICAgICAgICAgICBsbCA6ICdZWVlZ5bm0TU1NROaXpScsCiAgICAgICAgICAgIGxsbCA6ICdZWVlZ5bm0TU1NROaXpUxUJywKICAgICAgICAgICAgbGxsbCA6ICdZWVlZ5bm0TU1NROaXpWRkZGRMVCcKICAgICAgICB9LAogICAgICAgIG1lcmlkaWVtUGFyc2U6IC\/ml6nkuIp85LiK5Y2IfOS4reWNiHzkuIvljYh85pma5LiKLywKICAgICAgICBtZXJpZGllbUhvdXIgOiBmdW5jdGlvbiAoaG91ciwgbWVyaWRpZW0pIHsKICAgICAgICAgICAgaWYgKGhvdXIgPT09IDEyKSB7CiAgICAgICAgICAgICAgICBob3VyID0gMDsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAobWVyaWRpZW0gPT09ICfml6nkuIonIHx8IG1lcmlkaWVtID09PSAn5LiK5Y2IJykgewogICAgICAgICAgICAgICAgcmV0dXJuIGhvdXI7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobWVyaWRpZW0gPT09ICfkuK3ljYgnKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gaG91ciA+PSAxMSA\/IGhvdXIgOiBob3VyICsgMTI7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobWVyaWRpZW0gPT09ICfkuIvljYgnIHx8IG1lcmlkaWVtID09PSAn5pma5LiKJykgewogICAgICAgICAgICAgICAgcmV0dXJuIGhvdXIgKyAxMjsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgbWVyaWRpZW0gOiBmdW5jdGlvbiAoaG91ciwgbWludXRlLCBpc0xvd2VyKSB7CiAgICAgICAgICAgIHZhciBobSA9IGhvdXIgKiAxMDAgKyBtaW51dGU7CiAgICAgICAgICAgIGlmIChobSA8IDkwMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICfml6nkuIonOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhtIDwgMTEzMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICfkuIrljYgnOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhtIDwgMTIzMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICfkuK3ljYgnOwogICAgICAgICAgICB9IGVsc2UgaWYgKGhtIDwgMTgwMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICfkuIvljYgnOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuICfmmZrkuIonOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBjYWxlbmRhciA6IHsKICAgICAgICAgICAgc2FtZURheSA6ICdb5LuK5aSpXUxUJywKICAgICAgICAgICAgbmV4dERheSA6ICdb5piO5aSpXUxUJywKICAgICAgICAgICAgbmV4dFdlZWsgOiAnW+S4i11kZGRkTFQnLAogICAgICAgICAgICBsYXN0RGF5IDogJ1vmmKjlpKldTFQnLAogICAgICAgICAgICBsYXN0V2VlayA6ICdb5LiKXWRkZGRMVCcsCiAgICAgICAgICAgIHNhbWVFbHNlIDogJ0wnCiAgICAgICAgfSwKICAgICAgICBvcmRpbmFsUGFyc2U6IC9cZHsxLDJ9KOaXpXzmnIh86YCxKS8sCiAgICAgICAgb3JkaW5hbCA6IGZ1bmN0aW9uIChudW1iZXIsIHBlcmlvZCkgewogICAgICAgICAgICBzd2l0Y2ggKHBlcmlvZCkgewogICAgICAgICAgICBjYXNlICdkJyA6CiAgICAgICAgICAgIGNhc2UgJ0QnIDoKICAgICAgICAgICAgY2FzZSAnREREJyA6CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJ+aXpSc7CiAgICAgICAgICAgIGNhc2UgJ00nIDoKICAgICAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyAn5pyIJzsKICAgICAgICAgICAgY2FzZSAndycgOgogICAgICAgICAgICBjYXNlICdXJyA6CiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgJ+mAsSc7CiAgICAgICAgICAgIGRlZmF1bHQgOgogICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlcjsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgcmVsYXRpdmVUaW1lIDogewogICAgICAgICAgICBmdXR1cmUgOiAnJXPlhacnLAogICAgICAgICAgICBwYXN0IDogJyVz5YmNJywKICAgICAgICAgICAgcyA6ICflub7np5InLAogICAgICAgICAgICBtIDogJ+S4gOWIhumQmCcsCiAgICAgICAgICAgIG1tIDogJyVk5YiG6ZCYJywKICAgICAgICAgICAgaCA6ICfkuIDlsI\/mmYInLAogICAgICAgICAgICBoaCA6ICclZOWwj+aZgicsCiAgICAgICAgICAgIGQgOiAn5LiA5aSpJywKICAgICAgICAgICAgZGQgOiAnJWTlpKknLAogICAgICAgICAgICBNIDogJ+S4gOWAi+aciCcsCiAgICAgICAgICAgIE1NIDogJyVk5YCL5pyIJywKICAgICAgICAgICAgeSA6ICfkuIDlubQnLAogICAgICAgICAgICB5eSA6ICclZOW5tCcKICAgICAgICB9CiAgICB9KTsKfSkpOwoKICAgIG1vbWVudC5sb2NhbGUoJ2VuJyk7CgoKICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKICAgICAgICBFeHBvc2luZyBNb21lbnQKICAgICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KCiAgICBmdW5jdGlvbiBtYWtlR2xvYmFsKHNob3VsZERlcHJlY2F0ZSkgewogICAgICAgIC8qZ2xvYmFsIGVuZGVyOmZhbHNlICovCiAgICAgICAgaWYgKHR5cGVvZiBlbmRlciAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBvbGRHbG9iYWxNb21lbnQgPSBnbG9iYWxTY29wZS5tb21lbnQ7CiAgICAgICAgaWYgKHNob3VsZERlcHJlY2F0ZSkgewogICAgICAgICAgICBnbG9iYWxTY29wZS5tb21lbnQgPSBkZXByZWNhdGUoCiAgICAgICAgICAgICAgICAgICAgJ0FjY2Vzc2luZyBNb21lbnQgdGhyb3VnaCB0aGUgZ2xvYmFsIHNjb3BlIGlzICcgKwogICAgICAgICAgICAgICAgICAgICdkZXByZWNhdGVkLCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIGFuIHVwY29taW5nICcgKwogICAgICAgICAgICAgICAgICAgICdyZWxlYXNlLicsCiAgICAgICAgICAgICAgICAgICAgbW9tZW50KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBnbG9iYWxTY29wZS5tb21lbnQgPSBtb21lbnQ7CiAgICAgICAgfQogICAgfQoKICAgIC8vIENvbW1vbkpTIG1vZHVsZSBpcyBkZWZpbmVkCiAgICBpZiAoaGFzTW9kdWxlKSB7CiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBtb21lbnQ7CiAgICB9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewogICAgICAgIGRlZmluZShmdW5jdGlvbiAocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7CiAgICAgICAgICAgIGlmIChtb2R1bGUuY29uZmlnICYmIG1vZHVsZS5jb25maWcoKSAmJiBtb2R1bGUuY29uZmlnKCkubm9HbG9iYWwgPT09IHRydWUpIHsKICAgICAgICAgICAgICAgIC8vIHJlbGVhc2UgdGhlIGdsb2JhbCB2YXJpYWJsZQogICAgICAgICAgICAgICAgZ2xvYmFsU2NvcGUubW9tZW50ID0gb2xkR2xvYmFsTW9tZW50OwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gbW9tZW50OwogICAgICAgIH0pOwogICAgICAgIG1ha2VHbG9iYWwodHJ1ZSk7CiAgICB9IGVsc2UgewogICAgICAgIG1ha2VHbG9iYWwoKTsKICAgIH0KfSkuY2FsbCh0aGlzKTs=",
    "size": "348977"
}