{
    "namaFile": "js\/saldo_awal_keuangan\/saldo_awal_keuangan_lra_lak_ins.js",
    "lastUpdate": "2018-01-16+14:16:28.09",
    "contentFile": "\/Iik7DQoJCXZhciBtZT10aGlzOw0KCQl2YXIgZWRpdD0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2lkdWJhaCcpLnZhbHVlOw0KCQlpZihrb25mcmltID09IHRydWUpew0KCQkJJC5hamF4KHsNCgkJCQl0eXBlOidQT1NUJywgDQoJCQkJZGF0YTokKCcjJyt0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwNCgkJCQl1cmw6IHRoaXMudXJsKycmdGlwZT1IYXB1c0p1cm5hbCZpZHJla2VpPScraXNpLA0KCQkJCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJDQoJCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsJCQkNCgkJCQkJaWYocmVzcC5lcnI9PScnKXsNCgkJCQkJaWYgKGVkaXQ9PScnKXsNCgkJCQkJCW1lLlRhbXBpbERhdGFSaW5jaWFuKCk7DQoJCQkJCQltZS5idWthcmVrZW5pbmcoKTsNCgkJCQkJfWVsc2V7DQoJCQkJCQlzZXRUaW1lb3V0KGZ1bmN0aW9uIG15RnVuY3Rpb24oKSB7bWUuRWRpdEp1cm5hbCgpfSwxMDAwKTsNCgkJCQkJfQ0KCQkJCQkNCgkJCQkJDQoJCQkJCX1lbHNlew0KCQkJCQkJYWxlcnQocmVzcC5lcnIpOw0KCQkJCQl9DQoJCQkJfQ0KCQkJfSk7CQ0KCQl9DQoJCQ0KCX0sDQoJDQoJLyppbnB1dGp1cm5hbDogZnVuY3Rpb24oKXsNCgkJDQoJCSQuYWpheCh7DQoJCQl0eXBlOidQT1NUJywgDQoJCQlkYXRhOiQoJyMnK3RoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLA0KCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9SW5wdXRKdXJuYWwnLA0KCQkJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkNCgkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CQkJDQoJCQkJaWYocmVzcC5lcnI9PScnKXsNCgkJCQkvLwlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGJsX2p1cm5hbCcpLmlubmVySFRNTCA9IHJlc3AuY29udGVudC50YWJlbDsNCgkJCQl9ZWxzZXsNCgkJCQkJYWxlcnQocmVzcC5lcnIpOw0KCQkJCX0NCgkJCX0NCgkJfSk7CQ0KCQkNCgl9LCovDQoJCQ0KCWlucHV0X0p1cm5hbDogZnVuY3Rpb24oKXsNCgkJDQoJCSQuYWpheCh7DQoJCQl0eXBlOidQT1NUJywgDQoJCQlkYXRhOiQoJyMnK3RoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLA0KCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9aW5wdXRfSnVybmFsJywNCgkJCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJDQoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkJCQ0KCQkJCWlmKHJlc3AuZXJyPT0nJyl7DQoJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YmxfanVybmFsJykuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50LnRhYmVsOw0KCQkJCQlpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnSWRfanVybmFsJykpew0KCQkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ0lkX2p1cm5hbCcpLmZvY3VzKCk7DQoJCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXRhc2J1dHRvbicpLmlubmVySFRNTCA9IHJlc3AuY29udGVudC5hdGFzYnV0dG9uOw0KCQkJCQkJfQ0KCQkJCX1lbHNlew0KCQkJCQlhbGVydChyZXNwLmVycik7DQoJCQkJfQ0KCQkJfQ0KCQl9KTsJDQoJCQ0KCX0sDQoJDQoJaW5wdXRqdXJuYWxfZGV0OiBmdW5jdGlvbigpew0KCQkJCQ0KCQkkLmFqYXgoew0KCQkJdHlwZTonUE9TVCcsIA0KCQkJZGF0YTokKCcjJyt0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwNCgkJCXVybDogdGhpcy51cmwrJyZ0aXBlPWlucHV0SnVybmFsS2V1YW5nYW5ERVQnLA0KCQkJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkNCgkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CQkJDQoJCQkJaWYocmVzcC5lcnI9PScnKXsNCgkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RhdGFiYXJhbmdueWEnKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQ7DQoJCQkJfWVsc2V7DQoJCQkJCWFsZXJ0KHJlc3AuZXJyKTsNCgkJCQl9DQoJCQl9DQoJCX0pOwkNCgkJDQoJfSwNCgkNCgkvKmNhcmlKdXJuYWw6IGZ1bmN0aW9uKCl7DQoJCXZhciBtZSA9IHRoaXM7DQoJCWNhcmlfanVybmFsLmZpbHRlckFrdW49JzEnOwkNCgkJY2FyaV9qdXJuYWwud2luZG93U2hvdygpOwkNCgl9LCovDQoJDQoJDQoJZm9ybWF0Q3VycmVuY3k6ZnVuY3Rpb24obnVtKSB7DQoJCW51bSA9IG51bS50b1N0cmluZygpLnJlcGxhY2UoL1wkfFwsL2csJycpOw0KCQlpZihpc05hTihudW0pKQ0KCQludW0gPSAiMCI7DQoJCXNpZ24gPSAobnVtID09IChudW0gPSBNYXRoLmFicyhudW0pKSk7DQoJCW51bSA9IE1hdGguZmxvb3IobnVtKjEwMCswLjUwMDAwMDAwMDAxKTsNCgkJY2VudHMgPSBudW0lMTAwOw0KCQludW0gPSBNYXRoLmZsb29yKG51bS8xMDApLnRvU3RyaW5nKCk7DQoJCWlmKGNlbnRzPDEwKQ0KCQljZW50cyA9ICIwIiArIGNlbnRzOw0KCQlmb3IgKHZhciBpID0gMDsgaSA8IE1hdGguZmxvb3IoKG51bS5sZW5ndGgtKDEraSkpLzMpOyBpKyspDQoJCW51bSA9IG51bS5zdWJzdHJpbmcoMCxudW0ubGVuZ3RoLSg0KmkrMykpKycuJysNCgkJbnVtLnN1YnN0cmluZyhudW0ubGVuZ3RoLSg0KmkrMykpOw0KCQlyZXR1cm4gKCgoc2lnbik\/Jyc6Jy0nKSArICcnICsgbnVtICsgJywnICsgY2VudHMpOw0KCX0sDQoJDQoJdXBkS29kZUp1cm5hbDogZnVuY3Rpb24oKXsNCgkJdmFyIG1lPXRoaXM7DQoJCXZhciBlZGl0PSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaWR1YmFoJykudmFsdWU7DQoJCSQuYWpheCh7DQoJCQl0eXBlOidQT1NUJywgDQoJCQlkYXRhOiQoJyMnK3RoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLA0KCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9dXBkS29kZUp1cm5hbCcsDQoJCQlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CQ0KCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsJCQkNCgkJCQlpZihyZXNwLmVycj09Jycpew0KCQkJCWlmIChlZGl0PT0nJyl7DQoJCQkJCXNldFRpbWVvdXQoZnVuY3Rpb24gbXlGdW5jdGlvbigpIHttZS5UYW1waWxEYXRhUmluY2lhbigpfSwxMDApOw0KCQkJCX1lbHNlew0KCQkJCQlzZXRUaW1lb3V0KGZ1bmN0aW9uIG15RnVuY3Rpb24oKSB7bWUuRWRpdEp1cm5hbCgpfSwxMDApOw0KCQkJCX0NCgkJCQkNCgkJCS8vCXNldFRpbWVvdXQoZnVuY3Rpb24gbXlGdW5jdGlvbigpIHttZS5UYW1waWxEYXRhUmluY2lhbigpfSwxMDAwKTsJDQoJCQkJfWVsc2V7DQoJCQkJCWFsZXJ0KHJlc3AuZXJyKTsNCgkJCQl9DQoJCQl9DQoJCX0pOwkNCgl9LA0KCQ0KCQ0KCS8qQmFydUpuc0p1cm5hbDogZnVuY3Rpb24oKXsJDQoJCXZhciBtZSA9IHRoaXM7DQoJCXZhciBlcnI9Jyc7DQoJDQoJCWlmIChlcnIgPT0nJyApewkJDQoJCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1jb3ZlcktBJzsNCgkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7DQoJCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CQ0KCQkJJC5hamF4KHsNCgkJCQl0eXBlOidQT1NUJywgDQoJCQkJZGF0YTokKCcjanVybmFsX2tldWFuZ2FuX2luc0Zvcm0nKS5zZXJpYWxpemUoKSwNCgkJCSAgCXVybDogdGhpcy51cmwrJyZ0aXBlPUJhcnVKbnNKdXJuYWwnLA0KCQkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJDQoJCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsJCQkNCgkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsJCQkNCgkJCQkJLy9tZS5BZnRlckZvcm1CYXJ1KCk7DQoJCQkgIAl9DQoJCQl9KTsNCgkJfWVsc2V7DQoJCSAJYWxlcnQoZXJyKTsNCgkJfQkNCgkJDQoJfSwqLwkNCgkNCgkvKkVkaXRKbnNKdXJuYWw6IGZ1bmN0aW9uKCl7CQ0KCQl2YXIgbWUgPSB0aGlzOw0KCQl2YXIgZXJyPScnOw0KCQl2YXIgam5zSnVybmFsID1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1KbnNKdXJuYWwnKS52YWx1ZTsNCgkJaWYoZXJyPT0nJyAmJiAoam5zSnVybmFsPT0nJykgKSBlcnI9J0plbmlzIEp1cm5hbCBCZWx1bSBEaSBQaWxpaCAhISc7DQoJCWlmIChlcnIgPT0nJyApewkJDQoJCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1jb3ZlcktBJzsNCgkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7DQoJCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CQ0KCQkJJC5hamF4KHsNCgkJCQl0eXBlOidQT1NUJywgDQoJCQkJZGF0YTokKCcjanVybmFsX2tldWFuZ2FuX2luc0Zvcm0nKS5zZXJpYWxpemUoKSwNCgkJCSAgCXVybDogdGhpcy51cmwrJyZ0aXBlPUVkaXRKbnNKdXJuYWwnLA0KCQkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJDQoJCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsJCQkNCgkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsJCQkNCgkJCQkJLy9tZS5BZnRlckZvcm1CYXJ1KCk7DQoJCQkgIAl9DQoJCQl9KTsNCgkJfWVsc2V7DQoJCSAJYWxlcnQoZXJyKTsNCgkJfQkNCgkJDQoJfSwqLwkNCgkNCglTaW1wYW5KbnNKdXJuYWw6IGZ1bmN0aW9uKCl7DQoJCXZhciBtZT0gdGhpczsNCgkJdmFyIGVycj0nJzsNCgkJDQoJCXRoaXMuT25FcnJvckNsb3NlID0gZmFsc2UJDQoJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7DQoJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybXNpbXBhbktBJzsNCgkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOwkNCgkJDQoJCSQuYWpheCh7DQoJCQl0eXBlOidQT1NUJywgDQoJCQlkYXRhOiQoJyMnK3RoaXMucHJlZml4KydfS0Fmb3JtJykuc2VyaWFsaXplKCksDQoJCQl1cmw6IHRoaXMudXJsKycmdGlwZT1zaW1wYW5KbnNKdXJuYWwnLA0KCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CQkNCgkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CQ0KCQkJCWRlbEVsZW0oY292ZXIpOwkJDQoJCQkJDQoJCQkJaWYocmVzcC5lcnI9PScnKXsNCgkJCQkJbWUucmVmcmVzaEpuc0p1cm5hbChyZXNwLmNvbnRlbnQpOw0KCQkJCQltZS5DbG9zZTEoKTsNCgkJCQl9ZWxzZXsNCgkJCQkJYWxlcnQocmVzcC5lcnIpOw0KCQkJCX0NCgkJICAJfQ0KCQl9KTsNCgl9LA0KCQ0KCS8qcmVmcmVzaEpuc0p1cm5hbCA6IGZ1bmN0aW9uKGlkX0puc0p1cm5hbEJhcnUpew0KCXZhciBtZSA9IHRoaXM7IC8vYWxlcnQoJ3RlcycpOwkvL2FsZXJ0KHRoaXMucHJlZml4KTsNCgkJJC5hamF4KHsNCgkJICB1cmw6ICdwYWdlcy5waHA\",
    "size": "22712"
}