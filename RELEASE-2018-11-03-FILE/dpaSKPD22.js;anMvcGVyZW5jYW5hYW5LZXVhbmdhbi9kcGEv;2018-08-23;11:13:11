{
    "namaFile": "js\/perencanaanKeuangan\/dpa\/dpaSKPD22.js",
    "lastUpdate": "2018-08-23+11:13:11.51",
    "contentFile": "dmFyIGRwYVNLUEQyMkZpbHRlclNLUEQgPSBuZXcgU2twZENscyh7CiAgcHJlZml4OiAiZHBhU0tQRDIyIiwKICBmb3JtTmFtZTogImRwYVNLUEQyMkZvcm0iLAoKICBwaWxpaFVydXNhbmZ0ZXI6IGZ1bmN0aW9uKCkgewogICAgLy8gZHBhU0tQRDIyLnJlZnJlc2hMaXN0KHRydWUpOwogICAgZHBhU0tQRDIyLmZpbHRlclJlbmRlcigpOwogIH0sCiAgcGlsaWhCaWRhbmdBZnRlcjogZnVuY3Rpb24oKSB7CiAgICAvLyBkcGFTS1BEMjIucmVmcmVzaExpc3QodHJ1ZSk7CiAgICBkcGFTS1BEMjIuZmlsdGVyUmVuZGVyKCk7CiAgfSwKICBwaWxpaFVuaXRBZnRlcjogZnVuY3Rpb24oKSB7CiAgICAvLyBkcGFTS1BEMjIucmVmcmVzaExpc3QodHJ1ZSk7CiAgICBkcGFTS1BEMjIuZmlsdGVyUmVuZGVyKCk7CiAgfSwKICBwaWxpaFN1YlVuaXRBZnRlcjogZnVuY3Rpb24oKSB7CiAgICAvLyBkcGFTS1BEMjIucmVmcmVzaExpc3QodHJ1ZSk7CiAgICBkcGFTS1BEMjIuZmlsdGVyUmVuZGVyKCk7CiAgfSwKICBwaWxpaFNla3NpQWZ0ZXI6IGZ1bmN0aW9uKCkgewogICAgLy8gZHBhU0tQRDIyLnJlZnJlc2hMaXN0KHRydWUpOwogICAgZHBhU0tQRDIyLmZpbHRlclJlbmRlcigpOwogIH0KfSk7CnZhciBkcGFTS1BEMjIgPSBuZXcgRGFmdGFyT2JqMih7CiAgcHJlZml4OiAiZHBhU0tQRDIyIiwKICB1cmw6ICJwZ0tldS5waHA\/UGc9ZHBhU0tQRDIyIiwKICBmb3JtTmFtZTogImRwYVNLUEQyMkZvcm0iLAogIGRwYVNLUEQyMl9mb3JtOiAiMCIsIC8vZGVmYXVsdCBqcyBkcGFTS1BEMjIKICBsb2FkaW5nOiBmdW5jdGlvbigpIHsKICAgIC8vYWxlcnQoJ2xvYWRpbmcnKTsKICAgIHRoaXMudG9wQmFyUmVuZGVyKCk7CiAgICB0aGlzLmZpbHRlclJlbmRlcigpOwogICAgdGhpcy5kYWZ0YXJSZW5kZXIoKTsKICAgIHRoaXMuc3VtSGFsUmVuZGVyKCk7CiAgfSwKICB0b3BCYXJSZW5kZXI6IGZ1bmN0aW9uKCl7CiAgICB2YXIgbWU9dGhpczsKICAgIC8vcmVuZGVyIHN1YnRpdGxlCiAgICAkLmFqYXgoewogICAgICB1cmw6IHRoaXMudXJsKycmdGlwZT1zdWJ0aXRsZScsCiAgICAgIHR5cGU6J1BPU1QnLAogICAgICBkYXRhOiQoJyMnK3RoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLAogICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CiAgICAgIHZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobWUucHJlZml4KydfY29udF90aXRsZScpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsKICAgICAgbWUudG9wQmFyUmVuZGVyQWZ0ZXIoKQogICAgICB9CiAgICB9KTsKICB9LAogIC8vIGZpbHRlclJlbmRlckFmdGVyOiBmdW5jdGlvbigpIHsKICAvLyAgIHRoaXMuZGFmdGFyUmVuZGVyKCk7CiAgLy8gfSwKICBkZXRhaWw6IGZ1bmN0aW9uKCkgewogICAgdmFyIG1lID0gdGhpczsKICAgIGVycm1zZyA9IHRoaXMuQ2VrQ2hlY2tib3goKTsKICAgIGlmIChlcnJtc2cgPT0gIiIpIHsKICAgICAgdmFyIGJveCA9IHRoaXMuR2V0Q2J4Q2hlY2tlZCgpOwogICAgfSBlbHNlIHsKICAgICAgYWxlcnQoZXJybXNnKTsKICAgIH0KICB9LAogIGRhZnRhclJlbmRlcjogZnVuY3Rpb24oKSB7CiAgICB2YXIgbWUgPSB0aGlzOyAvL3JlbmRlciBkYWZ0YXIKICAgIGFkZENvdmVyUGFnZTIoImRhZnRhcl9jb3ZlciIsIDEsIHRydWUsIHRydWUsIHsKICAgICAgcmVuZGVyVG86IHRoaXMucHJlZml4ICsgIl9jb250X2RhZnRhciIsCiAgICAgIGltZ3NyYzogImltYWdlcy93YWl0LmdpZiIsCiAgICAgIHN0eWxlOiB7IHBvc2l0aW9uOiAiYWJzb2x1dGUiLCB0b3A6ICI1IiwgbGVmdDogIjUiIH0KICAgIH0pOwogICAgJC5hamF4KHsKICAgICAgdXJsOiB0aGlzLnVybCArICImdGlwZT1kYWZ0YXIiLAogICAgICB0eXBlOiAiUE9TVCIsCiAgICAgIGRhdGE6ICQoIiMiICsgdGhpcy5mb3JtTmFtZSkuc2VyaWFsaXplKCksCiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKICAgICAgICB2YXIgcmVzcCA9IGV2YWwoIigiICsgZGF0YSArICIpIik7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobWUucHJlZml4ICsgIl9jb250X2RhZnRhciIpLmlubmVySFRNTCA9CiAgICAgICAgICByZXNwLmNvbnRlbnQ7CiAgICAgICAgbWUuc3VtSGFsUmVuZGVyKCk7CiAgICAgIH0KICAgIH0pOwogIH0sCiAgQmFydTogZnVuY3Rpb24oKXsKICAgIHZhciBtZSA9IHRoaXM7CgogIAkJZXJybXNnID0gJyc7CgogIAkJaWYoJCgiI2ZpbHRlclVydXNhbiIpLnZhbCgpID09ICcwMCcpewogIAkJCWVycm1zZyA9ICJQaWxpaCBVcnVzYW4iOwogIAkJfWVsc2UgaWYoJCgiI2ZpbHRlclNLUEQiKS52YWwoKSA9PSAnMDAnKXsKICAJCQllcnJtc2cgPSAiUGlsaWggQmlkYW5nIjsKICAJCX1lbHNlIGlmKCQoIiNmaWx0ZXJTS1BEIikudmFsKCkgPT0gJzAwJyl7CiAgCQkJZXJybXNnID0gIlBpbGloIFNLUEQiOwogIAkJfWVsc2UgaWYoJCgiI2ZpbHRlckNvbmNhdFByb2dyYW0iKS52YWwoKSA9PSAnJyl7CiAgCQkJZXJybXNnID0gIlBpbGloIFByb2dyYW0iOwogIAkJfWVsc2UgaWYoJCgiI2ZpbHRlclEiKS52YWwoKSA9PSAnJyl7CiAgCQkJZXJybXNnID0gIlBpbGloIEtlZ2lhdGFuIjsKICAJCX0KICAJCWlmKGVycm1zZyA9PScnKXsKICAJCQl2YXIgbWUgPSB0aGlzOwogIAkJCXZhciBhRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuZm9ybU5hbWUpOwogIAkJCSQuYWpheCh7CiAgCQkJICB1cmw6IHRoaXMudXJsKycmdGlwZT1CYXJ1JywKICAJCQkgIHR5cGUgOiAnUE9TVCcsCiAgCQkJICBkYXRhOiQoJyMnK3RoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLAogIAkJCSAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewogIAkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwogIAkJCQkJaWYocmVzcC5lcnIgPT0gIiIpIHsKICAJCQkJCQlhRm9ybS5hY3Rpb249ICdwZ0tldS5waHA\/UGc9ZHBhU0tQRDIySW5zJzsKICAJCQkJCQlhRm9ybS50YXJnZXQ9J19ibGFuayc7CiAgCQkJCQkJYUZvcm0uc3VibWl0KCk7CiAgCQkJCQkJYUZvcm0udGFyZ2V0PScnOwogIAkJCQkJfWVsc2V7CiAgCQkJCQkJYWxlcnQocmVzcC5lcnIpOwogIAkJCQkJfQogIAkJCSAgfQogIAkJCX0pOwogIAkJfWVsc2V7CiAgCQkJCWFsZXJ0KGVycm1zZyk7CiAgCQl9Cgl9LAogIEluZm86IGZ1bmN0aW9uKCkgewogICAgdmFyIG1lID0gdGhpczsKICAgIHZhciBjb3ZlciA9IHRoaXMucHJlZml4ICsgIl9mb3JtY292ZXIiOwogICAgJC5hamF4KHsKICAgICAgdHlwZTogIlBPU1QiLAogICAgICB1cmw6IHRoaXMudXJsICsgIiZ0aXBlPUluZm8iLAogICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgdmFyIHJlc3AgPSBldmFsKCIoIiArIGRhdGEgKyAiKSIpOwogICAgICAgIGlmIChyZXNwLmVyciA9PSAiIikgewogICAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9ICJoaWRkZW4iOwogICAgICAgICAgYWRkQ292ZXJQYWdlMihjb3ZlciwgOTk5LCB0cnVlLCBmYWxzZSk7CiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcikuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50OwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBhbGVydChyZXNwLmVycik7CiAgICAgICAgfQogICAgICB9CiAgICB9KTsKICB9LAoKICBDYXJpOiBmdW5jdGlvbigpIHsKICAgIHBvcHVwQmFyYW5nLmtvZGVCYXJhbmcgPSAia29kZUJhcmFuZyI7CiAgICBwb3B1cEJhcmFuZy5uYW1hQmFyYW5nID0gIm5hbWFCYXJhbmciOwogICAgcG9wdXBCYXJhbmcuc2F0dWFuQmFyYW5nID0gInNhdHVhbiI7CiAgICBwb3B1cEJhcmFuZy53aW5kb3dTaG93KCk7CiAgfSwKICBFZGl0OiBmdW5jdGlvbigpIHsKICAgIHZhciBtZSA9IHRoaXM7CiAgICBlcnJtc2cgPSB0aGlzLkNla0NoZWNrYm94KCk7CiAgICBpZiAoZXJybXNnID09ICIiKSB7CiAgICAgIHZhciBib3ggPSB0aGlzLkdldENieENoZWNrZWQoKTsKICAgICAgdmFyIGFGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5mb3JtTmFtZSk7CiAgICAgICQuYWpheCh7CiAgICAgICAgdXJsOiB0aGlzLnVybCArICImdGlwZT1lZGl0VGFiIiwKICAgICAgICB0eXBlOiAiUE9TVCIsCiAgICAgICAgZGF0YTogJCgiIyIgKyB0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwKICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICB2YXIgcmVzcCA9IGV2YWwoIigiICsgZGF0YSArICIpIik7CiAgICAgICAgICBpZiAocmVzcC5lcnIgPT0gIiIpIHsKICAgICAgICAgICAgdmFyIElEcmVuamEgPSBOdW1iZXIocmVzcC5jb250ZW50LmlkcmVuamEpOwogICAgICAgICAgICBhRm9ybS5hY3Rpb24gPQogICAgICAgICAgICAgICJwZ0tldS5waHA\/UGc9cmtibWRfIiArCiAgICAgICAgICAgICAgcmVzcC5jb250ZW50LmtlbWFuYSArCiAgICAgICAgICAgICAgIiZZTj0xJmlkPSIgKwogICAgICAgICAgICAgIElEcmVuamE7CiAgICAgICAgICAgIGFGb3JtLnRhcmdldCA9ICJfYmxhbmsiOwogICAgICAgICAgICBhRm9ybS5zdWJtaXQoKTsKICAgICAgICAgICAgYUZvcm0udGFyZ2V0ID0gIiI7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBhbGVydChyZXNwLmVycik7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0gZWxzZSB7CiAgICAgIGFsZXJ0KGVycm1zZyk7CiAgICB9CiAgfSwKICByZW1vdmU6IGZ1bmN0aW9uKCkgewogICAgdmFyIG1lID0gdGhpczsKICAgIGVycm1zZyA9IHRoaXMuQ2VrQ2hlY2tib3goKTsKICAgIGlmIChlcnJtc2cgPT0gIiIpIHsKICAgICAgdmFyIGJveCA9IHRoaXMuR2V0Q2J4Q2hlY2tlZCgpOwoKICAgICAgJC5hamF4KHsKICAgICAgICB1cmw6IHRoaXMudXJsICsgIiZ0aXBlPXJlbW92ZSIsCiAgICAgICAgdHlwZTogIlBPU1QiLAogICAgICAgIGRhdGE6ICQoIiMiICsgdGhpcy5mb3JtTmFtZSkuc2VyaWFsaXplKCksCiAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewogICAgICAgICAgdmFyIHJlc3AgPSBldmFsKCIoIiArIGRhdGEgKyAiKSIpOwogICAgICAgICAgZHBhU0tQRDIyLnJlZnJlc2hMaXN0KHRydWUpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICBhbGVydChlcnJtc2cpOwogICAgfQogIH0sCiAgVmFsaWRhc2k6IGZ1bmN0aW9uKGlkX2FuZ2dhcmFuKSB7CiAgICB2YXIgbWUgPSB0aGlzOwogICAgdmFyIGNvdmVyID0gdGhpcy5wcmVmaXggKyAiX2Zvcm1jb3ZlciI7CiAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gImhpZGRlbiI7CiAgICBpZiAobWUuc2F0dWFuX2Zvcm0gPT0gMCkgewogICAgICAvL2JhcnUgZGFyaSBzYXR1YW4KICAgICAgYWRkQ292ZXJQYWdlMihjb3ZlciwgMSwgdHJ1ZSwgZmFsc2UpOwogICAgfSBlbHNlIHsKICAgICAgLy9iYXJ1IGRhcmkgYmFyYW5nCiAgICAgIGFkZENvdmVyUGFnZTIoY292ZXIsIDk5OSwgdHJ1ZSwgZmFsc2UpOwogICAgfQogICAgJC5hamF4KHsKICAgICAgdHlwZTogIlBPU1QiLAogICAgICBkYXRhOiAkKCIjIiArIHRoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLAogICAgICB1cmw6IHRoaXMudXJsICsgIiZ0aXBlPVZhbGlkYXNpJmlkX2FuZ2dhcmFuPSIgKyBpZF9hbmdnYXJhbiwKICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewogICAgICAgIHZhciByZXNwID0gZXZhbCgiKCIgKyBkYXRhICsgIikiKTsKICAgICAgICBpZiAocmVzcC5lcnIgPT0gIiIpIHsKICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQ7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGRlbEVsZW0oY292ZXIpOwogICAgICAgICAgYWxlcnQocmVzcC5lcnIpOwogICAgICAgICAgaWYgKHJlc3AuZXJyID09ICJUYWhhcCBQZW55dXN1bmFuIFRlbGFoIEhhYmlzIikgewogICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9KTsKICB9LAoKICBuZXdOb21vclBlbmV0YXBhbjogZnVuY3Rpb24oKSB7CiAgICB2YXIgbWUgPSB0aGlzOwogICAgdmFyIGNvdmVyID0gdGhpcy5wcmVmaXggKyAiX2Zvcm1jb3ZlcktCIjsKICAgICQuYWpheCh7CiAgICAgIHR5cGU6ICJQT1NUIiwKICAgICAgdXJsOiB0aGlzLnVybCArICImdGlwZT1uZXdOb21vclBlbmV0YXBhbiIsCiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKICAgICAgICB2YXIgcmVzcCA9IGV2YWwoIigiICsgZGF0YSArICIpIik7CiAgICAgICAgaWYgKHJlc3AuZXJyID09ICIiKSB7CiAgICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gImhpZGRlbiI7CiAgICAgICAgICBhZGRDb3ZlclBhZ2UyKGNvdmVyLCA1LCB0cnVlLCBmYWxzZSk7CiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcikuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50OwogICAgICAgICAgJCgiI25ld1RhbmdnYWxQZW5ldGFwYW4iKS5kYXRlcGlja2VyKHsKICAgICAgICAgICAgZGF0ZUZvcm1hdDogImRkLW1tLXl5IiwKICAgICAgICAgICAgc2hvd0FuaW06ICJzbGlkZURvd24iLAogICAgICAgICAgICBpbmxpbmU6IHRydWUsCiAgICAgICAgICAgIHNob3dPbjogImJ1dHRvbiIsCiAgICAgICAgICAgIGJ1dHRvbkltYWdlOiAiaW1hZ2VzL2NhbGVuZGFyLmdpZiIsCiAgICAgICAgICAgIGJ1dHRvbkltYWdlT25seTogdHJ1ZSwKICAgICAgICAgICAgY2hhbmdlTW9udGg6IHRydWUsCiAgICAgICAgICAgIGNoYW5nZVllYXI6IHRydWUKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBhbGVydChyZXNwLmVycik7CiAgICAgICAgfQogICAgICB9CiAgICB9KTsKICB9LAogIENsb3NlMjogZnVuY3Rpb24oKSB7CiAgICB2YXIgY292ZXIgPSB0aGlzLnByZWZpeCArICJfZm9ybWNvdmVyS0IiOwogICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKSkgZGVsRWxlbShjb3Zlcik7CiAgICBpZiAodGlwZSA9PSBudWxsKSB7CiAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSAiYXV0byI7CiAgICB9CiAgfSwKCiAgc2F2ZVRldGFwa2FuUktCTUQ6IGZ1bmN0aW9uKCkgewogICAgdmFyIG1lID0gdGhpczsKICAgIHRoaXMuT25FcnJvckNsb3NlID0gZmFsc2U7CiAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gImhpZGRlbiI7CiAgICB2YXIgY292ZXIgPSB0aGlzLnByZWZpeCArICJfZm9ybXNpbXBhbiI7CiAgICBhZGRDb3ZlclBhZ2UyKGNvdmVyLCAxLCB0cnVlLCBmYWxzZSk7CgogICAgJC5hamF4KHsKICAgICAgdHlwZTogIlBPU1QiLAogICAgICB1cmw6IHRoaXMudXJsICsgIiZ0aXBlPXNhdmVUZXRhcGthblJLQk1EIiwKICAgICAgZGF0YTogewogICAgICAgIG5vbW9yOiAkKCIjbm9tb3JQZW5ldGFwYW4iKS52YWwoKSwKICAgICAgICBjMTogJCgiI2MxIikudmFsKCksCiAgICAgICAgYzogJCgiI2MiKS52YWwoKSwKICAgICAgICBkOiAkKCIjZCIpLnZhbCgpLAogICAgICAgIG5vbW9yUGVuZXRhcGFuOiAkKCIjbm9tb3JQZW5ldGFwYW4iKS52YWwoKSwKICAgICAgICB0YW5nZ2FsUGVuZXRhcGFuOiAkKCIjdGFuZ2dhbFBlbmV0YXBhbiIpLnZhbCgpLAogICAgICAgIG5hbWFQZWphYmF0OiAkKCIjbmFtYVBlamFiYXQiKS52YWwoKSwKICAgICAgICBuaXA6ICQoIiNuaXAiKS52YWwoKSwKICAgICAgICBqYWJhdGFuOiAkKCIjamFiYXRhbiIpLnZhbCgpLAogICAgICAgIHN0YXR1c1BlbmdhZGFhbjogJCgiI2NoZWNrQm94UGVuZ2FkYWFuIikuaXMoIjpjaGVja2VkIiksCiAgICAgICAgc3RhdHVzUGVtZWxpaGFyYWFuOiAkKCIjY2hlY2tib3hQZW1lbGloYXJhYW4iKS5pcygiOmNoZWNrZWQiKSwKICAgICAgICBzdGF0dXNQZXJzZWRpYWFuOiAkKCIjY2hlY2tib3hQZXJzZWRpYWFuIikuaXMoIjpjaGVja2VkIikKICAgICAgfSwKICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewogICAgICAgIHZhciByZXNwID0gZXZhbCgiKCIgKyBkYXRhICsgIikiKTsKICAgICAgICBkZWxFbGVtKGNvdmVyKTsKICAgICAgICBpZiAocmVzcC5lcnIgIT0gIiIpIHsKICAgICAgICAgIGFsZXJ0KHJlc3AuZXJyKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgYWxlcnQoIlBlbmV0YXBhbiBCZXJoYXNpbCIpOwogICAgICAgICAgbWUuQ2xvc2UoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogIH0sCiAgc2F2ZU5vbW9yUGVuZXRhcGFuOiBmdW5jdGlvbigpIHsKICAgIHZhciBtZSA9IHRoaXM7CiAgICB0aGlzLk9uRXJyb3JDbG9zZSA9IGZhbHNlOwogICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9ICJoaWRkZW4iOwogICAgdmFyIGNvdmVyID0gdGhpcy5wcmVmaXggKyAiX2Zvcm1jb3ZlcktCIjsKICAgIGFkZENvdmVyUGFnZTIoY292ZXIsIDEsIHRydWUsIGZhbHNlKTsKCiAgICAkLmFqYXgoewogICAgICB0eXBlOiAiUE9TVCIsCiAgICAgIHVybDogdGhpcy51cmwgKyAiJnRpcGU9c2F2ZU5vbW9yUGVuZXRhcGFuIiwKICAgICAgZGF0YTogewogICAgICAgIG5vbW9yOiAkKCIjbmV3Tm9tb3JQZW5ldGFwYW4iKS52YWwoKSwKICAgICAgICB0YW5nZ2FsUGVuZXRhcGFuOiAkKCIjbmV3VGFuZ2dhbFBlbmV0YXBhbiIpLnZhbCgpLAogICAgICAgIG5hbWFQZWphYmF0OiAkKCIjbmV3TmFtYVBlamFiYXQiKS52YWwoKSwKICAgICAgICBuaXA6ICQoIiNuZXdOSVAiKS52YWwoKSwKICAgICAgICBqYWJhdGFuOiAkKCIjbmV3SmFiYXRhbiIpLnZhbCgpCiAgICAgIH0sCiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKICAgICAgICB2YXIgcmVzcCA9IGV2YWwoIigiICsgZGF0YSArICIpIik7CiAgICAgICAgZGVsRWxlbShjb3Zlcik7CiAgICAgICAgaWYgKHJlc3AuZXJyICE9ICIiKSB7CiAgICAgICAgICBhbGVydChyZXNwLmVycik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGFsZXJ0KCJEYXRhIFRlcnNpbXBhbiIpOwogICAgICAgICAgJCgiI25vbW9yUGVuZXRhcGFuIikuaHRtbChyZXNwLmNvbnRlbnQuY29tYm9Ob21vclBlbmV0YXBhbik7CiAgICAgICAgICBtZS5DbG9zZTIoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogIH0sCgogIGZvcm1hdEN1cnJlbmN5OiBmdW5jdGlvbihudW0pIHsKICAgIG51bSA9IG51bS50b1N0cmluZygpLnJlcGxhY2UoL1wkfFwsL2csICIiKTsKICAgIGlmIChpc05hTihudW0pKSBudW0gPSAiMCI7CiAgICBzaWduID0gbnVtID09IChudW0gPSBNYXRoLmFicyhudW0pKTsKICAgIG51bSA9IE1hdGguZmxvb3IobnVtICogMTAwICsgMC41MDAwMDAwMDAwMSk7CiAgICBjZW50cyA9IG51bSAlIDEwMDsKICAgIG51bSA9IE1hdGguZmxvb3IobnVtIC8gMTAwKS50b1N0cmluZygpOwogICAgaWYgKGNlbnRzIDwgMTApIGNlbnRzID0gIjAiICsgY2VudHM7CiAgICBmb3IgKHZhciBpID0gMDsgaSA8IE1hdGguZmxvb3IoKG51bS5sZW5ndGggLSAoMSArIGkpKSAvIDMpOyBpKyspCiAgICAgIG51bSA9CiAgICAgICAgbnVtLnN1YnN0cmluZygwLCBudW0ubGVuZ3RoIC0gKDQgKiBpICsgMykpICsKICAgICAgICAiLiIgKwogICAgICAgIG51bS5zdWJzdHJpbmcobnVtLmxlbmd0aCAtICg0ICogaSArIDMpKTsKICAgIHJldHVybiAoc2lnbiA\",
    "size": "24953"
}