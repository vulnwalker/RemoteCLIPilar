{
    "namaFile": "js\/perencanaan\/rkb.js",
    "lastUpdate": "2017-09-15+13:08:47.15",
    "contentFile": "dmFyIHJrYlNrcGQgPSBuZXcgU2twZENscyh7DQoJcHJlZml4IDogJ3JrYlNrcGQnLCBmb3JtTmFtZTonYWRtaW5Gb3JtJw0KfSk7DQoNCnZhciBya2IgPSBuZXcgRGFmdGFyT2JqMih7DQoJcHJlZml4IDogJ3JrYicsCQ0KCXVybCA6ICdwYWdlcy5waHA\",
    "size": "10197"
}