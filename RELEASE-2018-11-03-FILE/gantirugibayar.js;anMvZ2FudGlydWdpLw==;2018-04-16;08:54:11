{
    "namaFile": "js\/gantirugi\/gantirugibayar.js",
    "lastUpdate": "2018-04-16+08:54:11.81",
    "contentFile": "",
    "size": "8806"
}