{
    "namaFile": "js\/pengadaanpenerimaan\/pemasukan_atribusi.js",
    "lastUpdate": "2018-10-30+15:09:11.97",
    "contentFile": "dmFyIHBlbWFzdWthbl9hdHJpYnVzaSA9IG5ldyBEYWZ0YXJPYmoyKHsNCglwcmVmaXggOiAncGVtYXN1a2FuX2F0cmlidXNpJywNCgl1cmwgOiAncGFnZXMucGhwP1BnPXBlbWFzdWthbl9hdHJpYnVzaScsIA0KCWZvcm1OYW1lIDogJ3BlbWFzdWthbl9hdHJpYnVzaUZvcm0nLA0KCXNhdHVhbl9mb3JtIDogJzAnLC8vZGVmYXVsdCBqcyBzYXR1YW4NCglsb2FkaW5nOiBmdW5jdGlvbigpew0KCQkvL2FsZXJ0KCdsb2FkaW5nJyk7DQoJCXRoaXMudG9wQmFyUmVuZGVyKCk7DQoJCXRoaXMuZmlsdGVyUmVuZGVyKCk7LyoNCgkJdGhpcy5kYWZ0YXJSZW5kZXIoKTsNCgkJdGhpcy5zdW1IYWxSZW5kZXIoKTsqLw0KCQ0KCX0sDQoJDQoJbnlhbGFrYW5kYXRlcGlja2VyOiBmdW5jdGlvbigpew0KCQkNCgkJJCggIi5kYXRlcGlja2VyIiApLmRhdGVwaWNrZXIoeyANCgkJCWRhdGVGb3JtYXQ6ICJkZC1tbS15eSIsIA0KCQkJc2hvd0FuaW06ICJzbGlkZURvd24iLA0KCQkJaW5saW5lOiB0cnVlLA0KCQkJc2hvd09uOiAiYnV0dG9uIiwNCgkJCWJ1dHRvbkltYWdlOiAiZGF0ZXBpY2tlci9jYWxlbmRlcjEucG5nIiwNCgkJCWJ1dHRvbkltYWdlT25seTogdHJ1ZSwNCgkJCWNoYW5nZU1vbnRoOiB0cnVlLA0KCQkJY2hhbmdlWWVhcjogdHJ1ZSwNCgkJCXllYXJSYW5nZTogIi0xMDA6KzAiLA0KCQkJYnV0dG9uVGV4dCA6ICIiLA0KCQl9KTsJDQoJfSwNCgkNCglmaWx0ZXJSZW5kZXJBZnRlciA6IGZ1bmN0aW9uKCl7DQoJCXZhciBtZSA9IHRoaXM7CQkNCgkJc2V0VGltZW91dChmdW5jdGlvbiBteUZ1bmN0aW9uKCkgew0KCQkJbWUubnlhbGFrYW5kYXRlcGlja2VyKCk7DQoJCQltZS50YWJlbFJla2VuaW5nKCk7DQoJCQltZS5HZXREb2t1bWVuQXRyaWJ1c2koKTsNCgkJCW1lLlBpbFBlbGFrYXNhbmEoKTsNCgkJfSwxMDAwKTsNCgl9LA0KCQ0KCWZvcm1hdEN1cnJlbmN5OmZ1bmN0aW9uKG51bSkgew0KCQludW0gPSBudW0udG9TdHJpbmcoKS5yZXBsYWNlKC9cJHxcLC9nLCcnKTsNCgkJaWYoaXNOYU4obnVtKSkNCgkJbnVtID0gIjAiOw0KCQlzaWduID0gKG51bSA9PSAobnVtID0gTWF0aC5hYnMobnVtKSkpOw0KCQludW0gPSBNYXRoLmZsb29yKG51bSoxMDArMC41MDAwMDAwMDAwMSk7DQoJCWNlbnRzID0gbnVtJTEwMDsNCgkJbnVtID0gTWF0aC5mbG9vcihudW0vMTAwKS50b1N0cmluZygpOw0KCQlpZihjZW50czwxMCkNCgkJY2VudHMgPSAiMCIgKyBjZW50czsNCgkJZm9yICh2YXIgaSA9IDA7IGkgPCBNYXRoLmZsb29yKChudW0ubGVuZ3RoLSgxK2kpKS8zKTsgaSsrKQ0KCQludW0gPSBudW0uc3Vic3RyaW5nKDAsbnVtLmxlbmd0aC0oNCppKzMpKSsnLicrDQoJCW51bS5zdWJzdHJpbmcobnVtLmxlbmd0aC0oNCppKzMpKTsNCgkJcmV0dXJuICgoKHNpZ24pPycnOictJykgKyAnJyArIG51bSArICcsJyArIGNlbnRzKTsNCgl9LA0KCQ0KCWlzTnVtYmVyS2V5OiBmdW5jdGlvbihldnQpew0KCQl2YXIgY2hhckNvZGUgPSAoZXZ0LndoaWNoKSA\",
    "size": "22699"
}