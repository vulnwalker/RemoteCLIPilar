{
    "namaFile": "js\/dkb.js",
    "lastUpdate": "2015-11-09+15:30:39.38",
    "contentFile": "dmFyIGRrYlNrcGQgPSBuZXcgU2twZENscyh7DQoJcHJlZml4IDogJ2RrYlNrcGQnLCBmb3JtTmFtZTonYWRtaW5Gb3JtJw0KfSk7DQoNCnZhciBka2IgPSBuZXcgRGFmdGFyT2JqMih7DQoJcHJlZml4IDogJ2RrYicsCQ0KCXVybCA6ICdwYWdlcy5waHA\",
    "size": "9518"
}