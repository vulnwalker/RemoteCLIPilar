{
    "namaFile": "js\/sotkbaru\/MigrasiData.js",
    "lastUpdate": "2018-10-31+14:31:00.01",
    "contentFile": "dmFyIE1pZ3Jhc2lEYXRhID0gbmV3IERhZnRhck9iajIoew0KCXByZWZpeCA6ICdNaWdyYXNpRGF0YScsDQoJdXJsIDogJ3BhZ2VzLnBocD9QZz1NaWdyYXNpRGF0YScsDQoJZm9ybU5hbWUgOiAnTWlncmFzaURhdGFGb3JtJywNCglNaWdyYXNpRGF0YV9mb3JtIDogJzAnLC8vZGVmYXVsdCBqcyBNaWdyYXNpRGF0YQ0KCWxvYWRpbmc6IGZ1bmN0aW9uKCl7DQoJCS8vYWxlcnQoJ2xvYWRpbmcnKTsNCgkJdGhpcy50b3BCYXJSZW5kZXIoKTsNCgkJdGhpcy5maWx0ZXJSZW5kZXIoKTsNCgkJdGhpcy5kYWZ0YXJSZW5kZXIoKTsNCgkJdGhpcy5zdW1IYWxSZW5kZXIoKTsNCg0KDQoNCgl9LA0KCUhhcHVzIDogZnVuY3Rpb24oKXsNCgkJdmFyIG1lID10aGlzOw0KCQlpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLnByZWZpeCsnX2ptbGNlaycpKXsNCgkJCXZhciBqbWxjZWsgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLnByZWZpeCsnX2ptbGNlaycpLnZhbHVlIDsNCgkJfWVsc2V7DQoJCQl2YXIgam1sY2VrID0gJyc7DQoJCX0NCg0KCQlpZihqbWxjZWsgPT0wKXsNCgkJCWFsZXJ0KCdEYXRhIEJlbHVtIERpcGlsaWghJyk7DQoJCX1lbHNlew0KCQkJaWYoY29uZmlybSgnRGVuZ2FuIE1lbmdoYXB1cyBTT1RLIGJhcnUgbWFrYSBzZW11YSBtaWdyYXNpIGFrYW4gdGVyaGFwdXMsIFRlcnVza2FuIEhhcHVzICcram1sY2VrKycgRGF0YSA\/Jykpew0KCQkJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfaGFwdXNjb3Zlcic7DQoJCQkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOw0KCQkJCSQuYWpheCh7DQoJCQkJCXR5cGU6J1BPU1QnLA0KCQkJCQlkYXRhOiQoJyMnK3RoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLA0KCQkJCQl1cmw6IHRoaXMudXJsKycmdGlwZT1oYXB1cycsDQoJCQkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgew0KCQkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOw0KCQkJCQkJZGVsRWxlbShjb3Zlcik7DQoJCQkJCQlpZihyZXNwLmVycj09Jycpew0KCQkJCQkJCW1lLnJlZnJlc2hMaXN0KHRydWUpOw0KCQkJCQkJfWVsc2V7DQoJCQkJCQkJYWxlcnQocmVzcC5lcnIpOw0KCQkJCQkJfQ0KDQoJCQkJICAJfSwNCgkJCQkJZXJyb3I6IGFqYXhFcnJvcg0KCQkJCX0pOw0KDQoJCQl9DQoJCX0NCgl9LA0KCWZpbHRlclJlbmRlckFmdGVyIDogZnVuY3Rpb24oKXsNCgkJdGhpcy5kYWZ0YXJSZW5kZXIoKTsNCgl9LA0KDQoJZGV0YWlsOiBmdW5jdGlvbigpew0KCQkvL2FsZXJ0KCdkZXRhaWwnKTsNCgkJdmFyIG1lID0gdGhpczsNCgkJZXJybXNnID0gdGhpcy5DZWtDaGVja2JveCgpOw0KCQlpZihlcnJtc2cgPT0nJyl7DQoJCQl2YXIgYm94ID0gdGhpcy5HZXRDYnhDaGVja2VkKCk7DQoJCQkvL1VzZXJBa3Rpdml0YXNEZXQuZ2VuRGV0YWlsKCk7DQoNCgkJfWVsc2V7DQoNCgkJCWFsZXJ0KGVycm1zZyk7DQoJCX0NCg0KCX0scGlsaWhCaWRhbmc6IGZ1bmN0aW9uKCl7DQoJCU1pZ3Jhc2lEYXRhLnJlZnJlc2hMaXN0KHRydWUpOw0KDQoJfSxCaWRhbmdBZnRlcjI6IGZ1bmN0aW9uKCl7DQoJCU1pZ3Jhc2lEYXRhLnJlZnJlc2hMaXN0KHRydWUpOw0KDQoJfSxjb21ib1NLUERDaGFuZ2VkOiBmdW5jdGlvbigpew0KCQlNaWdyYXNpRGF0YS5yZWZyZXNoTGlzdCh0cnVlKTsNCg0KCX0sQ2FyaU1vZHVsOiBmdW5jdGlvbigpew0KCQl2YXIgbWUgPSB0aGlzOw0KDQoJCXBvcHVwTW9kdWwuZWxfbmFtYU1vZHVsPSAnbmFtYU1vZHVsJzsNCgkJcG9wdXBNb2R1bC5lbF9pZE1vZHVsPSAnaWRNb2R1bCc7DQovKgkJUmVmQmFyYW5nQnV0dWguZWxfbmFtYV9iYXJhbmc9ICduYW1hX2JhcmFuZyc7CQkqLw0KCQlwb3B1cE1vZHVsLndpbmRvd1NhdmVBZnRlcj0gZnVuY3Rpb24oKXt9Ow0KCQlwb3B1cE1vZHVsLndpbmRvd1Nob3coKTsNCgl9LA0KDQoJaGlzdG9yaTogZnVuY3Rpb24oaWQpew0KCQl2YXIgbWUgPSB0aGlzOw0KDQoJCXBvcHVwSGlzdG9yaS5lbF9uYW1hSGlzdG9yaT0gJ25hbWFIaXN0b3JpJzsNCgkJcG9wdXBIaXN0b3JpLmVsX2lkSGlzdG9yaT0gJ2lkSGlzdG9yaSc7DQoJCXBvcHVwSGlzdG9yaS53aW5kb3dTYXZlQWZ0ZXI9IGZ1bmN0aW9uKCl7fTsNCgkJcG9wdXBIaXN0b3JpLndpbmRvd1Nob3coaWQpOw0KCX0sDQoJZGFmdGFyUmVuZGVyOmZ1bmN0aW9uKCl7DQoJCXZhciBtZSA9dGhpczsgLy9yZW5kZXIgZGFmdGFyDQoJCWFkZENvdmVyUGFnZTIoDQoJCQknZGFmdGFyX2NvdmVyJywJMSwgCXRydWUsIHRydWUsCXtyZW5kZXJUbzogdGhpcy5wcmVmaXgrJ19jb250X2RhZnRhcicsDQoJCQlpbWdzcmM6ICdpbWFnZXMvd2FpdC5naWYnLA0KCQkJc3R5bGU6IHtwb3NpdGlvbjonYWJzb2x1dGUnLCB0b3A6JzUnLCBsZWZ0Oic1J30NCgkJCX0NCgkJKTsNCg0KCQkkLmFqYXgoew0KCQkgIAl1cmw6IHRoaXMudXJsKycmdGlwZT1kYWZ0YXInLA0KCQkgCXR5cGU6J1BPU1QnLA0KCQkJZGF0YTokKCcjJyt0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwNCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgew0KCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsNCgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZChtZS5wcmVmaXgrJ19jb250X2RhZnRhcicpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsNCg0KCQkJCW1lLnN1bUhhbFJlbmRlcigpOw0KCQkgIAl9DQoJCX0pOw0KCX0sDQoJQmFydTogZnVuY3Rpb24oKXsNCgkJdmFyIG1lID0gdGhpczsNCgkJaWYoJCgiI2NtYlVydXNhbiIpLnZhbCgpICA9PSAnJyl7DQoJCSAJYWxlcnQoIlBpbGloIFVydXNhbiIpOw0KCQl9ZWxzZSBpZigkKCIjY21iQmlkYW5nIikudmFsKCkgID09ICcnKXsNCgkJCWFsZXJ0KCJQaWxpaCBCaWRhbmciKTsNCgkJfWVsc2UgaWYoJCgiI2NtYlNLUEQiKS52YWwoKSAgPT0gJycpew0KCQkJYWxlcnQoIlBpbGloIFNLUEQiKTsNCgkJfWVsc2V7DQoNCgkJCQl2YXIgc2twZCA9ICQoIiNjbWJVcnVzYW4iKS52YWwoKSsnLicrJCgiI2NtYkJpZGFuZyIpLnZhbCgpKycuJyskKCIjY21iU0tQRCIpLnZhbCgpOw0KDQoJCQkJdmFyIGFGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5mb3JtTmFtZSk7DQoJCQkJJC5hamF4KHsNCgkJCQl0eXBlOidQT1NUJywNCgkJCQlkYXRhIDoge2NtYlVydXNhbiA6ICQoIiNjbWJVcnVzYW4iKS52YWwoKSwNCgkJCQkJCWNtYkJpZGFuZyA6ICQoIiNjbWJCaWRhbmciKS52YWwoKSwNCgkJCQkJCWNtYlNLUEQgIDogJCgiI2NtYlNLUEQiKS52YWwoKSwNCgkJCQkJCX0sDQoJCQkgIAl1cmw6IHRoaXMudXJsKycmdGlwZT1jbGVhclRlbXAnLA0KCQkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgew0KDQoJCQkJCQlhRm9ybS5hY3Rpb249ICdwYWdlcy5waHA\",
    "size": "24661"
}