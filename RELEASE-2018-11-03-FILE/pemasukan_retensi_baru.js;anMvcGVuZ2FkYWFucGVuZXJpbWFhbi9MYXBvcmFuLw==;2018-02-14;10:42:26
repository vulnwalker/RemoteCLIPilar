{
    "namaFile": "js\/pengadaanpenerimaan\/Laporan\/pemasukan_retensi_baru.js",
    "lastUpdate": "2018-02-14+10:42:26.56",
    "contentFile": "dmFyIHBlbWFzdWthbl9yZXRlbnNpX2JhcnVTS1BEMiA9IG5ldyBTa3BkQ2xzKHsKCXByZWZpeCA6ICdwZW1hc3VrYW5fcmV0ZW5zaV9iYXJ1U0tQRDInLCAKCWZvcm1OYW1lOiAncGVtYXN1a2FuX3JldGVuc2lfYmFydUZvcm0nLAoJCglwaWxpaFVydXNhbmZ0ZXIgOiBmdW5jdGlvbigpe3BlbWFzdWthbl9yZXRlbnNpX2JhcnUucmVmcmVzaExpc3QodHJ1ZSk7fSwKCXBpbGloQmlkYW5nQWZ0ZXIgOiBmdW5jdGlvbigpe3BlbWFzdWthbl9yZXRlbnNpX2JhcnUucmVmcmVzaExpc3QodHJ1ZSk7fSwKCXBpbGloVW5pdEFmdGVyIDogZnVuY3Rpb24oKXtwZW1hc3VrYW5fcmV0ZW5zaV9iYXJ1LnJlZnJlc2hMaXN0KHRydWUpO30sCglwaWxpaFN1YlVuaXRBZnRlciA6IGZ1bmN0aW9uKCl7cGVtYXN1a2FuX3JldGVuc2lfYmFydS5yZWZyZXNoTGlzdCh0cnVlKTt9LAoJcGlsaWhTZWtzaUFmdGVyIDogZnVuY3Rpb24oKXtwZW1hc3VrYW5fcmV0ZW5zaV9iYXJ1LnJlZnJlc2hMaXN0KHRydWUpO30KfSk7Cgp2YXIgcGVtYXN1a2FuX3JldGVuc2lfYmFydSA9IG5ldyBEYWZ0YXJPYmoyKHsKCXByZWZpeCA6ICdwZW1hc3VrYW5fcmV0ZW5zaV9iYXJ1JywKCXVybCA6ICdwYWdlcy5waHA\\/JykpewoJCQkJLy9kb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOyAKCQkJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfaGFwdXNjb3Zlcic7CgkJCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CgkJCQkkLmFqYXgoewoJCQkJCXR5cGU6J1BPU1QnLCAKCQkJCQkvL2RhdGE6JCgnIycrdGhpcy5mb3JtTmFtZSkuc2VyaWFsaXplKCksCgkJCQkJZGF0YTokKCcjJyt0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwKCQkJCQl1cmw6IHRoaXMudXJsKycmdGlwZT1oYXB1cycsCgkJCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CQkKCQkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkJCgkJCQkJCWRlbEVsZW0oY292ZXIpOwkJCgkJCQkJCWlmKHJlc3AuZXJyPT0nJyl7CQkJCQkJCQoJCQkJCQkJbWUuQ2xvc2UoKTsKCQkJCQkJCW1lLnJlZnJlc2hMaXN0KHRydWUpCgkJCQkJCX1lbHNlewoJCQkJCQkJYWxlcnQocmVzcC5lcnIpOwoJCQkJCQl9CQkJCQkJCQoJCQkJCQkKCQkJCSAgCX0KCQkJCX0pOwoJCQkJCgkJCX0JCgkJfQoJfSwKCQoJCgkKCUNsb3NlMTpmdW5jdGlvbigpey8vYWxlcnQodGhpcy5lbENvdmVyKTsKCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1jb3ZlcktBJzsKCQlpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcikpIGRlbEVsZW0oY292ZXIpOwkJCQoJCWlmKHRpcGU9PW51bGwpewoJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdhdXRvJzsJCQkJCQkKCQl9Cgl9LAoJCglDbG9zZTI6ZnVuY3Rpb24oKXsvL2FsZXJ0KHRoaXMuZWxDb3Zlcik7CgkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3JtY292ZXJLQic7CgkJaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpKSBkZWxFbGVtKGNvdmVyKTsJCQkKCQlpZih0aXBlPT1udWxsKXsKCQkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0nYXV0byc7CQkJCQkJCgkJfQoJfSwKCQoJR2FuZGFrYW5QZW5lcmltYWFuOiBmdW5jdGlvbihkYXRhbnlhKXsKCQl2YXIgbWUgPSB0aGlzOwoJCXZhciB0YW55YSA9IGNvbmZpcm0oIkdhbmRha2FuIERhdGEgUmluY2lhbiBQZW5lcmltYWFuID8iKTsKCQlpZih0YW55YSA9PSB0cnVlKXsKCQkJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyMic7CgkJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOwkJCQoJCQkJYWRkQ292ZXJQYWdlMihjb3Zlciw5OTksdHJ1ZSxmYWxzZSk7CQkJCgkJCQkKCQkJCSQuYWpheCh7CgkJCQkJdHlwZTonUE9TVCcsIAoJCQkJCWRhdGE6JCgnIycrdGhpcy5mb3JtTmFtZSkuc2VyaWFsaXplKCksCgkJCQkgIAl1cmw6IHRoaXMudXJsKycmdGlwZT1EYXRhQ29weSZkYXRha29waT0nK2RhdGFueWEsCgkJCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CQkKCQkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwoJCQkJCQlkZWxFbGVtKGNvdmVyKTsJCQkJCgkJCQkJCWlmKHJlc3AuZXJyID09ICAiIil7CQkJCQkJCQoJCQkJCQkJbWUubG9hZGluZygpOwkKCQkJCQkJfWVsc2V7CQkJCQkJCQkJCQkJCQoJCQkJCQkJYWxlcnQocmVzcC5lcnIpOwoJCQkJCQl9CgkJCQkJfQoJCQkJfSk7CQkJCgkJfQoJfSwKCQoJVmFsaWRhc2k6ZnVuY3Rpb24oKXsKCQl2YXIgbWUgPSB0aGlzOwoJCWVycm1zZyA9IHRoaXMuQ2VrQ2hlY2tib3goKTsKCQlpZihlcnJtc2cgPT0nJyl7IAoJCQl2YXIgYm94ID0gdGhpcy5HZXRDYnhDaGVja2VkKCk7CgkJCQoJCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1jb3Zlcic7CgkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7CgkJCWlmKG1lLnNhdHVhbl9mb3JtPT0wKXsvL2JhcnUgZGFyaSBzYXR1YW4KCQkJCWFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsJCgkJCX1lbHNley8vYmFydSBkYXJpIGJhcmFuZwoJCQkJYWRkQ292ZXJQYWdlMihjb3Zlciw5OTksdHJ1ZSxmYWxzZSk7CQoJCQl9CgkJCSQuYWpheCh7CgkJCQl0eXBlOidQT1NUJywgCgkJCQlkYXRhOiQoJyMnK3RoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLAoJCQkgIAl1cmw6IHRoaXMudXJsKycmdGlwZT1WYWxpZGFzaScsCgkJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJCQoJCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsKCQkJCQlpZihyZXNwLmVyciA9PSAnJyl7CgkJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQ7CgkJCQkJfWVsc2V7CgkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsKCQkJCQkJbWUuQ2xvc2UoKTsKCQkJCQl9CQkJCgkJCQkJCgkJCQkJLy9zZXRUaW1lb3V0KGZ1bmN0aW9uIG15RnVuY3Rpb24oKSB7cGVtYXN1a2FuLmphbSgpfSwxMDApOwkKCQkJCQkvL21lLkFmdGVyRm9ybUJhcnUoKTsKCQkJICAJfQoJCQl9KTsKCQl9ZWxzZXsKCQkJYWxlcnQoZXJybXNnKTsKCQl9CgkJCgl9LAoJCglQb3N0aW5nRm9ybTpmdW5jdGlvbigpewoJCXZhciBtZSA9IHRoaXM7CgkJZXJybXNnID0gdGhpcy5DZWtDaGVja2JveCgpOwoJCWlmKGVycm1zZyA9PScnKXsgCgkJCXZhciBib3ggPSB0aGlzLkdldENieENoZWNrZWQoKTsKCQkJCgkJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyJzsKCQkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsKCQkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOwkKCQkJCgkJCSQuYWpheCh7CgkJCQl0eXBlOidQT1NUJywgCgkJCQlkYXRhOiQoJyMnK3RoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLAoJCQkgIAl1cmw6IHRoaXMudXJsKycmdGlwZT1Qb3N0aW5nRm9ybScsCgkJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJCQoJCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsKCQkJCQlpZihyZXNwLmVyciA9PSAnJyl7CgkJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQ7CgkJCQkJfWVsc2V7CgkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsKCQkJCQkJbWUuQ2xvc2UoKTsKCQkJCQl9CQkJCgkJCQkJCgkJCQkJLy9zZXRUaW1lb3V0KGZ1bmN0aW9uIG15RnVuY3Rpb24oKSB7cGVtYXN1a2FuLmphbSgpfSwxMDApOwkKCQkJCQkvL21lLkFmdGVyRm9ybUJhcnUoKTsKCQkJICAJfQoJCQl9KTsKCQl9ZWxzZXsKCQkJYWxlcnQoZXJybXNnKTsKCQl9CgkJCgl9LAoJCglTaW1wYW5Qb3N0aW5nOiBmdW5jdGlvbigpeyAvL1NpbXBhbiBWYWxpZGFzaQoJCXZhciBtZT0gdGhpczsJCgkJdGhpcy5PbkVycm9yQ2xvc2UgPSBmYWxzZQkKCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOwoJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybXNpbXBhbic7CgkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOwkKCQkkLmFqYXgoewoJCQl0eXBlOidQT1NUJywgCgkJCWRhdGE6JCgnIycrdGhpcy5wcmVmaXgrJ19mb3JtJykuc2VyaWFsaXplKCksCgkJCXVybDogdGhpcy51cmwrJyZ0aXBlPUNla19TaW1wYW5Qb3N0aW5nJywKCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CQkKCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsJCgkJCQlkZWxFbGVtKGNvdmVyKTsJCQoJCQkJaWYocmVzcC5lcnI9PScnKXsKCQkJCQl2YXIgdGFueWEgPSBjb25maXJtKHJlc3AuY29udGVudC5wZXNhbik7CgkJCQkJaWYodGFueWEgPT0gdHJ1ZSl7CgkJCQkJCXZhciB0b3Rfam1sYmFyYW5nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInRvdF9qbWxiYXJhbmciKS52YWx1ZTsKCQkJCQkJaWYocmVzcC5jb250ZW50LnRhbnlhICE9ICczJyl7CgkJCQkJCQlmb3IoaT0wO2k8dG90X2ptbGJhcmFuZztpKyspewoJCQkJCQkJCXZhciBJZFJldGVuc2lEZXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiaWRfYmFyYW5nbnlhXyIraSkudmFsdWU7CgkJCQkJCQkJbWUuU2F2ZVBvc3RpbmcoSWRSZXRlbnNpRGV0KTsKCQkJCQkJCX0JCQkJCQkJCgkJCQkJCX1lbHNlewoJCQkJCQkJbWUuQmF0YWxrYW5Qb3N0aW5nKCk7CgkJCQkJCX0KCQkJCQl9CgkJCQl9ZWxzZXsKCQkJCQlhbGVydChyZXNwLmVycik7CgkJCQl9CgkJICAJfQoJCX0pOwoJfSwKCQoJQmF0YWxrYW5Qb3N0aW5nOiBmdW5jdGlvbigpeyAvL1NpbXBhbiBWYWxpZGFzaQoJCXZhciBtZT0gdGhpczsJCgkJdGhpcy5PbkVycm9yQ2xvc2UgPSBmYWxzZQkKCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOwoJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybXNpbXBhbic7CgkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOwkKCQkkLmFqYXgoewoJCQl0eXBlOidQT1NUJywgCgkJCWRhdGE6JCgnIycrdGhpcy5wcmVmaXgrJ19mb3JtJykuc2VyaWFsaXplKCksCgkJCXVybDogdGhpcy51cmwrJyZ0aXBlPUJhdGFsa2FuUG9zdGluZycsCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJCgkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CQoJCQkJZGVsRWxlbShjb3Zlcik7CQkKCQkJCWlmKHJlc3AuZXJyPT0nJyl7CgkJCQkJc2V0VGltZW91dChmdW5jdGlvbiBteUZ1bmN0aW9uKCkge21lLkdldFBlcnNlbihyZXNwLmNvbnRlbnQubWF4cGVyc2VuLDEpO30sMTApOwkgCgkJCQkJaWYocmVzcC5jb250ZW50Lm5leHQgPT0gMSltZS5CYXRhbGthblBvc3RpbmcoKTsJCQkJCgkJCQl9ZWxzZXsKCQkJCQlhbGVydChyZXNwLmVycik7CgkJCQl9CgkJICAJfQoJCX0pOwoJfSwKCQoJU2F2ZVBvc3Rpbmc6IGZ1bmN0aW9uKElkUmV0ZW5zaURldCl7IC8vU2ltcGFuIFZhbGlkYXNpCgkJdmFyIG1lPSB0aGlzOwkKCQl0aGlzLk9uRXJyb3JDbG9zZSA9IGZhbHNlCQoJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7CgkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3Jtc2ltcGFuJzsKCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CQoJCSQuYWpheCh7CgkJCXR5cGU6J1BPU1QnLCAKCQkJZGF0YTokKCcjJyt0aGlzLnByZWZpeCsnX2Zvcm0nKS5zZXJpYWxpemUoKSwKCQkJdXJsOiB0aGlzLnVybCsnJnRpcGU9U2ltcGFuUG9zdGluZyZJZFJldGVuc2lEZXQ9JytJZFJldGVuc2lEZXQsCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJCgkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CQoJCQkJZGVsRWxlbShjb3Zlcik7CQkKCQkJCWlmKHJlc3AuZXJyPT0nJyl7CgkJCQkJc2V0VGltZW91dChmdW5jdGlvbiBteUZ1bmN0aW9uKCkge21lLkdldFBlcnNlbihyZXNwLmNvbnRlbnQubWF4cGVyc2VuKTt9LDEwKTsJIAkJCQkKCQkJCX1lbHNlewoJCQkJCWFsZXJ0KHJlc3AuZXJyKTsKCQkJCX0KCQkgIAl9CgkJfSk7Cgl9LAoJCglVcGRhdGVQb3N0aW5nOiBmdW5jdGlvbihrb25kaXNpKXsgLy9TaW1wYW4gVmFsaWRhc2kKCQl2YXIgbWU9IHRoaXM7CQoJCXRoaXMuT25FcnJvckNsb3NlID0gZmFsc2UJCgkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsKCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1zaW1wYW4nOwoJCWFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsJCgkJJC5hamF4KHsKCQkJdHlwZTonUE9TVCcsIAoJCQlkYXRhOiQoJyMnK3RoaXMucHJlZml4KydfZm9ybScpLnNlcmlhbGl6ZSgpLAoJCQl1cmw6IHRoaXMudXJsKycmdGlwZT1VcGRhdGVQb3N0aW5nJmtvbmRpc2k9Jytrb25kaXNpLAoJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJCQoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkKCQkJCWRlbEVsZW0oY292ZXIpOwkJCgkJCQlpZihyZXNwLmVycj09JycpewoJCQkJCWlmKGtvbmRpc2k9PScxJyl7CgkJCQkJCWFsZXJ0KCJCZXJoYXNpbCBNZW1wb3N0aW5nIERhdGEgISIpOwoJCQkJCX1lbHNlewoJCQkJCQlhbGVydCgiQmVyaGFzaWwgTWVtYmF0YWxrYW4gUG9zdGluZyBEYXRhICEiKTsKCQkJCQl9CgkJCQkJbWUuQ2xvc2UoKTsKCQkJCQltZS5yZWZyZXNoTGlzdCh0cnVlKTsgCQkJCQoJCQkJfWVsc2V7CgkJCQkJYWxlcnQocmVzcC5lcnIpOwoJCQkJfQoJCSAgCX0KCQl9KTsKCX0sCgkKCUdldFBlcnNlbjogZnVuY3Rpb24obWF4cGVyc2VuLCBtdW5kdXI9MCl7CgkJdmFyIG1lPXRoaXM7CgkJaWYobWF4cGVyc2VuID49IDEwMCl7CgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzdGF0dXN0eHQxIikuc3R5bGUud2lkdGggPSAxMDArIiUiOyAKCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInN0YXR1c3R4dDEiKS5pbm5lckhUTUwgPSAxMDArIiUiOwoJCQlzZXRUaW1lb3V0KGZ1bmN0aW9uIG15RnVuY3Rpb24oKSB7bWUuQWZ0ZXJHZXRQZXJzZW4oMSk7fSw1MCk7CgkJfWVsc2V7CgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzdGF0dXN0eHQxIikuc3R5bGUud2lkdGggPSBNYXRoLnJvdW5kKG1heHBlcnNlbikrIiUiOyAKCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInN0YXR1c3R4dDEiKS5pbm5lckhUTUwgPSBNYXRoLnJvdW5kKG1heHBlcnNlbikrIiUiOwoJCQlpZihtdW5kdXIgPT0gMSAmJiBtYXhwZXJzZW49PTApc2V0VGltZW91dChmdW5jdGlvbiBteUZ1bmN0aW9uKCkge21lLkFmdGVyR2V0UGVyc2VuKDApO30sNTApOwoJCX0JCgl9LAoJCglBZnRlckdldFBlcnNlbjogZnVuY3Rpb24oa29uZGlzaSl7CgkJdmFyIG1lPXRoaXM7CgkJCgkJbWUuVXBkYXRlUG9zdGluZyhrb25kaXNpKTsKCX0sCgkKCQoJCn0pOwo=",
    "size": "18266"
}