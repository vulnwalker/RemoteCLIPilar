{
    "namaFile": "js\/perencanaanKeuangan\/dpa\/dpaSKPD221Ins.js",
    "lastUpdate": "2018-08-23+11:13:10.21",
    "contentFile": "dmFyIGRwYVNLUEQyMjFJbnMgPSBuZXcgRGFmdGFyT2JqMih7DQogIHByZWZpeDogImRwYVNLUEQyMjFJbnMiLA0KICB1cmw6ICJwZ0tldS5waHA\/UGc9ZHBhU0tQRDIyMUlucyIsDQogIGZvcm1OYW1lOiAiZHBhU0tQRDIyMUluc0Zvcm0iLA0KICBzYXR1YW5fZm9ybTogIjAiLA0KICBsb2FkaW5nOiBmdW5jdGlvbigpIHsNCiAgICB0aGlzLnRvcEJhclJlbmRlcigpOw0KICAgIHRoaXMuZmlsdGVyUmVuZGVyKCk7DQogIH0sDQogIGZpbHRlclJlbmRlckFmdGVyOiBmdW5jdGlvbigpIHsNCiAgICBpZiAoJCgiI25ld0JsYW5rUGFnZSIpLnZhbCgpID09ICIxIikgew0KICAgICAgdGhpcy5maW5kUmVrZW5pbmdSa2EoKTsNCiAgICB9DQogIH0sDQogIGNsb3NlVGFiOiBmdW5jdGlvbigpIHsNCiAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInEiKS5kaXNhYmxlZCA9PSB0cnVlKSB7DQogICAgICAkLmFqYXgoew0KICAgICAgICB0eXBlOiAiUE9TVCIsDQogICAgICAgIHVybDogdGhpcy51cmwgKyAiJnRpcGU9Y2xlYXIiLA0KICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7DQogICAgICAgICAgJCgiI2JrIikudmFsKCIiKTsNCiAgICAgICAgICAkKCIjY2siKS52YWwoIiIpOw0KICAgICAgICAgICQoIiNkayIpLnZhbCgiIik7DQogICAgICAgICAgJCgiI3AiKS52YWwoIiIpOw0KICAgICAgICAgICQoIiNxIikudmFsKCIiKTsNCiAgICAgICAgICAkKCIjY29uY2F0UHJvZ3JhbUtlZ2lhdGFuIikudmFsKCIiKTsNCiAgICAgICAgICAkKCIjcHJvZ3JhbSIpLnZhbCgiIik7DQogICAgICAgICAgZHBhU0tQRDIyMUlucy5yZWZyZXNoTGlzdCh0cnVlKTsNCiAgICAgICAgfQ0KICAgICAgfSk7DQogICAgfSBlbHNlIHsNCiAgICAgIHdpbmRvdy5vcGVuZXIubG9jYXRpb24ucmVsb2FkKCk7DQogICAgICB2YXIgd3cgPSB3aW5kb3cub3Blbih3aW5kb3cubG9jYXRpb24sICJfc2VsZiIpOw0KICAgICAgd3cuY2xvc2UoKTsNCiAgICB9DQogIH0sDQoNCiAgZm9ybWF0Q3VycmVuY3k6IGZ1bmN0aW9uKG51bSkgew0KICAgIG51bSA9IG51bS50b1N0cmluZygpLnJlcGxhY2UoL1wkfFwsL2csICIiKTsNCiAgICBpZiAoaXNOYU4obnVtKSkgbnVtID0gIjAiOw0KICAgIHNpZ24gPSBudW0gPT0gKG51bSA9IE1hdGguYWJzKG51bSkpOw0KICAgIG51bSA9IE1hdGguZmxvb3IobnVtICogMTAwICsgMC41MDAwMDAwMDAwMSk7DQogICAgY2VudHMgPSBudW0gJSAxMDA7DQogICAgbnVtID0gTWF0aC5mbG9vcihudW0gLyAxMDApLnRvU3RyaW5nKCk7DQogICAgaWYgKGNlbnRzIDwgMTApIGNlbnRzID0gIjAiICsgY2VudHM7DQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBNYXRoLmZsb29yKChudW0ubGVuZ3RoIC0gKDEgKyBpKSkgLyAzKTsgaSsrKQ0KICAgICAgbnVtID0NCiAgICAgICAgbnVtLnN1YnN0cmluZygwLCBudW0ubGVuZ3RoIC0gKDQgKiBpICsgMykpICsNCiAgICAgICAgIi4iICsNCiAgICAgICAgbnVtLnN1YnN0cmluZyhudW0ubGVuZ3RoIC0gKDQgKiBpICsgMykpOw0KICAgIHJldHVybiAoc2lnbiA\/ICIiIDogIi0iKSArICIiICsgbnVtICsgIiwiICsgY2VudHM7DQogIH0sDQoNCiAgaXNOdW1iZXJLZXk6IGZ1bmN0aW9uKGV2dCkgew0KICAgIHZhciBjaGFyQ29kZSA9IGV2dC53aGljaCA\\/IikpIHsNCiAgICAgIHZhciBjb3ZlciA9IHRoaXMucHJlZml4ICsgIl9jb3ZlckxvYWRpbmciOw0KICAgICAgYWRkQ292ZXJQYWdlMihjb3ZlciwgOTksIHRydWUsIGZhbHNlKTsNCiAgICAgICQuYWpheCh7DQogICAgICAgIHR5cGU6ICJQT1NUIiwNCiAgICAgICAgZGF0YTogew0KICAgICAgICAgIGlkOiBpZCwNCiAgICAgICAgICBpZFJpbmNpYW5CZWxhbmphOiAkKCIjY3VycmVudFJpbmNpYW5CZWxhbmphIikudmFsKCkNCiAgICAgICAgfSwNCiAgICAgICAgdXJsOiB0aGlzLnVybCArICImdGlwZT1kZWxldGVTdWJSaW5jaWFuQmVsYW5qYSIsDQogICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsNCiAgICAgICAgICBkZWxFbGVtKGNvdmVyKTsNCiAgICAgICAgICB2YXIgcmVzcCA9IGV2YWwoIigiICsgZGF0YSArICIpIik7DQogICAgICAgICAgaWYgKHJlc3AuZXJyID09ICIiKSB7DQogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidGFiZWxTdWJSaW5jaWFuQmVsYW5qYSIpLmlubmVySFRNTCA9DQogICAgICAgICAgICAgIHJlc3AuY29udGVudDsNCiAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgYWxlcnQocmVzcC5lcnIpOw0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfSk7DQogICAgfQ0KICB9LA0KICBjYW5jZWxTdWJSaW5jaWFuQmVsYW5qYTogZnVuY3Rpb24oaWQpIHsNCiAgICB2YXIgbWUgPSB0aGlzOw0KICAgICQuYWpheCh7DQogICAgICB0eXBlOiAiUE9TVCIsDQogICAgICBkYXRhOiB7IGlkOiBpZCB9LA0KICAgICAgdXJsOiB0aGlzLnVybCArICImdGlwZT1jYW5jZWxTdWJSaW5jaWFuQmVsYW5qYSIsDQogICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7DQogICAgICAgIHZhciByZXNwID0gZXZhbCgiKCIgKyBkYXRhICsgIikiKTsNCiAgICAgICAgaWYgKHJlc3AuZXJyID09ICIiKSB7DQogICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInRhYmVsU3ViUmluY2lhbkJlbGFuamEiKS5pbm5lckhUTUwgPQ0KICAgICAgICAgICAgcmVzcC5jb250ZW50Ow0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIGFsZXJ0KHJlc3AuZXJyKTsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0pOw0KICB9LA0KICBjYW5jZWxSaW5jaWFuQmVsYW5qYTogZnVuY3Rpb24oaWQpIHsNCiAgICB2YXIgbWUgPSB0aGlzOw0KICAgICQuYWpheCh7DQogICAgICB0eXBlOiAiUE9TVCIsDQogICAgICBkYXRhOiB7IGlkOiBpZCB9LA0KICAgICAgdXJsOiB0aGlzLnVybCArICImdGlwZT1jYW5jZWxSaW5jaWFuQmVsYW5qYSIsDQogICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7DQogICAgICAgIHZhciByZXNwID0gZXZhbCgiKCIgKyBkYXRhICsgIikiKTsNCiAgICAgICAgaWYgKHJlc3AuZXJyID09ICIiKSB7DQogICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInRhYmVsUmluY2lhbkJlbGFuamEiKS5pbm5lckhUTUwgPQ0KICAgICAgICAgICAgcmVzcC5jb250ZW50Ow0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIGFsZXJ0KHJlc3AuZXJyKTsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0pOw0KICB9LA0KICBzYXZlTmV3U2F0dWFuOiBmdW5jdGlvbihuYW1hS29sb20pIHsNCiAgICB2YXIgbWUgPSB0aGlzOw0KICAgICQuYWpheCh7DQogICAgICB0eXBlOiAiUE9TVCIsDQogICAgICBkYXRhOiB7DQogICAgICAgIHNhdHVhbjogJCgiIyIrbmFtYUtvbG9tKS52YWwoKSAsDQogICAgICAgIGtvZGVTS1BEOiAkKCIja29kZVNLUEQiKS52YWwoKSwNCiAgICAgICB9LA0KICAgICAgdXJsOiB0aGlzLnVybCArICImdGlwZT1zYXZlTmV3U2F0dWFuIiwNCiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsNCiAgICAgICAgdmFyIHJlc3AgPSBldmFsKCIoIiArIGRhdGEgKyAiKSIpOw0KICAgICAgICBpZiAocmVzcC5lcnIgPT0gIiIpIHsNCiAgICAgICAgICBhbGVydCgiU2F0dWFuIERpdGFtYmFoa2FuIik7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgYWxlcnQocmVzcC5lcnIpOw0KICAgICAgICB9DQogICAgICB9DQogICAgfSk7DQogIH0sDQogIGNhcmlTYXR1YW46IGZ1bmN0aW9uKG5hbWFLb2xvbSkgew0KICAgIHBvcHVwU2F0dWFuLm5hbWFLb2xvbSA9IG5hbWFLb2xvbTsNCiAgICBwb3B1cFNhdHVhbi5rb2RlU0tQRCA9ICIma29kZVNLUEQ9IiskKCIja29kZVNLUEQiKS52YWwoKTsNCiAgICBwb3B1cFNhdHVhbi53aW5kb3dTaG93KCk7DQogIH0NCn0pOw0K",
    "size": "28422"
}