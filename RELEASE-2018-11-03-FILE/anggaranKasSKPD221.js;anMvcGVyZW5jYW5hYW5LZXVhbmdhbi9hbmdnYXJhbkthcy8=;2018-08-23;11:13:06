{
    "namaFile": "js\/perencanaanKeuangan\/anggaranKas\/anggaranKasSKPD221.js",
    "lastUpdate": "2018-08-23+11:13:06.56",
    "contentFile": "dmFyIGFuZ2dhcmFuS2FzU0tQRDIyMUZpbHRlclNLUEQgPSBuZXcgU2twZENscyh7CiAgcHJlZml4OiAiYW5nZ2FyYW5LYXNTS1BEMjIxIiwKICBmb3JtTmFtZTogImFuZ2dhcmFuS2FzU0tQRDIyMUZvcm0iLAoKICBwaWxpaFVydXNhbmZ0ZXI6IGZ1bmN0aW9uKCkgewogICAgLy8gcmthU0tQRDIyMS5yZWZyZXNoTGlzdCh0cnVlKTsKICAgIGFuZ2dhcmFuS2FzU0tQRDIyMS5maWx0ZXJSZW5kZXIoKTsKICB9LAogIHBpbGloQmlkYW5nQWZ0ZXI6IGZ1bmN0aW9uKCkgewogICAgYW5nZ2FyYW5LYXNTS1BEMjIxLmZpbHRlclJlbmRlcigpOwogIH0sCiAgcGlsaWhVbml0QWZ0ZXI6IGZ1bmN0aW9uKCkgewogICAgYW5nZ2FyYW5LYXNTS1BEMjIxLmZpbHRlclJlbmRlcigpOwogIH0sCiAgcGlsaWhTdWJVbml0QWZ0ZXI6IGZ1bmN0aW9uKCkgewogICAgYW5nZ2FyYW5LYXNTS1BEMjIxLmZpbHRlclJlbmRlcigpOwogIH0sCiAgcGlsaWhTZWtzaUFmdGVyOiBmdW5jdGlvbigpIHsKICAgIGFuZ2dhcmFuS2FzU0tQRDIyMS5maWx0ZXJSZW5kZXIoKTsKICB9LAogIHByb2dyYW1DaGFuZ2VkOiBmdW5jdGlvbigpIHsKICAgIC8vIHJrYVNLUEQyMjEucmVmcmVzaExpc3QodHJ1ZSk7CiAgICBhbmdnYXJhbkthc1NLUEQyMjEuZmlsdGVyUmVuZGVyKCk7CiAgfQp9KTsKdmFyIGFuZ2dhcmFuS2FzU0tQRDIyMSA9IG5ldyBEYWZ0YXJPYmoyKHsKICBwcmVmaXg6ICJhbmdnYXJhbkthc1NLUEQyMjEiLAogIHVybDogInBnS2V1LnBocD9QZz1hbmdnYXJhbkthc1NLUEQyMjEiLAogIGZvcm1OYW1lOiAiYW5nZ2FyYW5LYXNTS1BEMjIxRm9ybSIsCiAgYW5nZ2FyYW5LYXNTS1BEMjIxX2Zvcm06ICIwIiwgLy9kZWZhdWx0IGpzIGFuZ2dhcmFuS2FzU0tQRDIyMQogIGxvYWRpbmc6IGZ1bmN0aW9uKCkgewogICAgLy9hbGVydCgnbG9hZGluZycpOwogICAgdGhpcy50b3BCYXJSZW5kZXIoKTsKICAgIHRoaXMuZmlsdGVyUmVuZGVyKCk7CiAgICB0aGlzLmRhZnRhclJlbmRlcigpOwogICAgdGhpcy5zdW1IYWxSZW5kZXIoKTsKICB9LAogIHRvcEJhclJlbmRlcjogZnVuY3Rpb24oKSB7CiAgICB2YXIgbWUgPSB0aGlzOwogICAgLy9yZW5kZXIgc3VidGl0bGUKICAgICQuYWpheCh7CiAgICAgIHVybDogdGhpcy51cmwgKyAiJnRpcGU9c3VidGl0bGUiLAogICAgICB0eXBlOiAiUE9TVCIsCiAgICAgIGRhdGE6ICQoIiMiICsgdGhpcy5mb3JtTmFtZSkuc2VyaWFsaXplKCksCiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKICAgICAgICB2YXIgcmVzcCA9IGV2YWwoIigiICsgZGF0YSArICIpIik7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobWUucHJlZml4ICsgIl9jb250X3RpdGxlIikuaW5uZXJIVE1MID0KICAgICAgICAgIHJlc3AuY29udGVudDsKICAgICAgICBtZS50b3BCYXJSZW5kZXJBZnRlcigpOwogICAgICB9CiAgICB9KTsKICB9LAogIGZpbHRlckNoZWNrQWxsOiBmdW5jdGlvbigpIHsKICAgIC8vIHZhciBpc0NoZWNrZWQgPSAkKCIjZmlsdGVyU2VtdWEiKS5hdHRyKCJjaGVja2VkIik7CiAgICAvLyBpZiAoaXNDaGVja2VkID09ICJjaGVja2VkIikgewogICAgLy8gICAkKCIjZmlsdGVySmFudWFyaSIpLnJlbW92ZUF0dHIoImNoZWNrZWQiKTsKICAgIC8vICAgJCgiI2ZpbHRlckZlYnJ1YXJpIikucmVtb3ZlQXR0cigiY2hlY2tlZCIpOwogICAgLy8gICAkKCIjZmlsdGVyTWFyZXQiKS5yZW1vdmVBdHRyKCJjaGVja2VkIik7CiAgICAvLyAgICQoIiNmaWx0ZXJBcHJpbCIpLnJlbW92ZUF0dHIoImNoZWNrZWQiKTsKICAgIC8vICAgJCgiI2ZpbHRlck1laSIpLnJlbW92ZUF0dHIoImNoZWNrZWQiKTsKICAgIC8vICAgJCgiI2ZpbHRlckp1bmkiKS5yZW1vdmVBdHRyKCJjaGVja2VkIik7CiAgICAvLyAgICQoIiNmaWx0ZXJKdWxpIikucmVtb3ZlQXR0cigiY2hlY2tlZCIpOwogICAgLy8gICAkKCIjZmlsdGVyQWd1c3R1cyIpLnJlbW92ZUF0dHIoImNoZWNrZWQiKTsKICAgIC8vICAgJCgiI2ZpbHRlclNlcHRlbWJlciIpLnJlbW92ZUF0dHIoImNoZWNrZWQiKTsKICAgIC8vICAgJCgiI2ZpbHRlck9rdG9iZXIiKS5yZW1vdmVBdHRyKCJjaGVja2VkIik7CiAgICAvLyAgICQoIiNmaWx0ZXJOb3BlbWJlciIpLnJlbW92ZUF0dHIoImNoZWNrZWQiKTsKICAgIC8vICAgJCgiI2ZpbHRlckRlc2VtYmVyIikucmVtb3ZlQXR0cigiY2hlY2tlZCIpOwogICAgLy8gfSBlbHNlIHsKICAgIC8vICAgJCgiI2ZpbHRlckphbnVhcmkiKS5hdHRyKCJjaGVja2VkIiwgdHJ1ZSk7CiAgICAvLyAgICQoIiNmaWx0ZXJGZWJydWFyaSIpLmF0dHIoImNoZWNrZWQiLCB0cnVlKTsKICAgIC8vICAgJCgiI2ZpbHRlck1hcmV0IikuYXR0cigiY2hlY2tlZCIsIHRydWUpOwogICAgLy8gICAkKCIjZmlsdGVyQXByaWwiKS5hdHRyKCJjaGVja2VkIiwgdHJ1ZSk7CiAgICAvLyAgICQoIiNmaWx0ZXJNZWkiKS5hdHRyKCJjaGVja2VkIiwgdHJ1ZSk7CiAgICAvLyAgICQoIiNmaWx0ZXJKdW5pIikuYXR0cigiY2hlY2tlZCIsIHRydWUpOwogICAgLy8gICAkKCIjZmlsdGVySnVsaSIpLmF0dHIoImNoZWNrZWQiLCB0cnVlKTsKICAgIC8vICAgJCgiI2ZpbHRlckFndXN0dXMiKS5hdHRyKCJjaGVja2VkIiwgdHJ1ZSk7CiAgICAvLyAgICQoIiNmaWx0ZXJTZXB0ZW1iZXIiKS5hdHRyKCJjaGVja2VkIiwgdHJ1ZSk7CiAgICAvLyAgICQoIiNmaWx0ZXJPa3RvYmVyIikuYXR0cigiY2hlY2tlZCIsIHRydWUpOwogICAgLy8gICAkKCIjZmlsdGVyTm9wZW1iZXIiKS5hdHRyKCJjaGVja2VkIiwgdHJ1ZSk7CiAgICAvLyAgICQoIiNmaWx0ZXJEZXNlbWJlciIpLmF0dHIoImNoZWNrZWQiLCB0cnVlKTsKICAgIC8vIH0KICAgIC8vIHRoaXMucmVmcmVzaExpc3QodHJ1ZSk7CiAgfSwKICAvLyBmaWx0ZXJSZW5kZXJBZnRlcjogZnVuY3Rpb24oKSB7CiAgLy8gfSwKICBkZXRhaWw6IGZ1bmN0aW9uKCkgewogICAgdmFyIG1lID0gdGhpczsKICAgIGVycm1zZyA9IHRoaXMuQ2VrQ2hlY2tib3goKTsKICAgIGlmIChlcnJtc2cgPT0gIiIpIHsKICAgICAgdmFyIGJveCA9IHRoaXMuR2V0Q2J4Q2hlY2tlZCgpOwogICAgfSBlbHNlIHsKICAgICAgYWxlcnQoZXJybXNnKTsKICAgIH0KICB9LAogIGRhZnRhclJlbmRlcjogZnVuY3Rpb24oKSB7CiAgICB2YXIgbWUgPSB0aGlzOyAvL3JlbmRlciBkYWZ0YXIKICAgIGFkZENvdmVyUGFnZTIoImRhZnRhcl9jb3ZlciIsIDEsIHRydWUsIHRydWUsIHsKICAgICAgcmVuZGVyVG86IHRoaXMucHJlZml4ICsgIl9jb250X2RhZnRhciIsCiAgICAgIGltZ3NyYzogImltYWdlcy93YWl0LmdpZiIsCiAgICAgIHN0eWxlOiB7IHBvc2l0aW9uOiAiYWJzb2x1dGUiLCB0b3A6ICI1IiwgbGVmdDogIjUiIH0KICAgIH0pOwogICAgJC5hamF4KHsKICAgICAgdXJsOiB0aGlzLnVybCArICImdGlwZT1kYWZ0YXIiLAogICAgICB0eXBlOiAiUE9TVCIsCiAgICAgIGRhdGE6ICQoIiMiICsgdGhpcy5mb3JtTmFtZSkuc2VyaWFsaXplKCksCiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKICAgICAgICB2YXIgcmVzcCA9IGV2YWwoIigiICsgZGF0YSArICIpIik7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobWUucHJlZml4ICsgIl9jb250X2RhZnRhciIpLmlubmVySFRNTCA9CiAgICAgICAgICByZXNwLmNvbnRlbnQ7CiAgICAgICAgbWUuc3VtSGFsUmVuZGVyKCk7CiAgICAgIH0KICAgIH0pOwogIH0sCiAgQmFydTogZnVuY3Rpb24oKSB7CiAgICB2YXIgbWUgPSB0aGlzOwoKICAgIGVycm1zZyA9ICIiOwoKICAgIGlmICgkKCIjZmlsdGVyVXJ1c2FuIikudmFsKCkgPT0gIjAwIikgewogICAgICBlcnJtc2cgPSAiUGlsaWggVXJ1c2FuIjsKICAgIH0gZWxzZSBpZiAoJCgiI2ZpbHRlclNLUEQiKS52YWwoKSA9PSAiMDAiKSB7CiAgICAgIGVycm1zZyA9ICJQaWxpaCBCaWRhbmciOwogICAgfSBlbHNlIGlmICgkKCIjZmlsdGVyU0tQRCIpLnZhbCgpID09ICIwMCIpIHsKICAgICAgZXJybXNnID0gIlBpbGloIFNLUEQiOwogICAgfSBlbHNlIGlmICgkKCIjZmlsdGVyQ29uY2F0UHJvZ3JhbSIpLnZhbCgpID09ICIiKSB7CiAgICAgIGVycm1zZyA9ICJQaWxpaCBQcm9ncmFtIjsKICAgIH0gZWxzZSBpZiAoJCgiI2ZpbHRlclEiKS52YWwoKSA9PSAiIikgewogICAgICBlcnJtc2cgPSAiUGlsaWggS2VnaWF0YW4iOwogICAgfQogICAgaWYgKGVycm1zZyA9PSAiIikgewogICAgICB2YXIgbWUgPSB0aGlzOwogICAgICB2YXIgYUZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmZvcm1OYW1lKTsKICAgICAgJC5hamF4KHsKICAgICAgICB1cmw6IHRoaXMudXJsICsgIiZ0aXBlPUJhcnUiLAogICAgICAgIHR5cGU6ICJQT1NUIiwKICAgICAgICBkYXRhOiAkKCIjIiArIHRoaXMuZm9ybU5hbWUpLnNlcmlhbGl6ZSgpLAogICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKICAgICAgICAgIHZhciByZXNwID0gZXZhbCgiKCIgKyBkYXRhICsgIikiKTsKICAgICAgICAgIGlmIChyZXNwLmVyciA9PSAiIikgewogICAgICAgICAgICBhRm9ybS5hY3Rpb24gPSAicGdLZXUucGhwP1BnPWFuZ2dhcmFuS2FzU0tQRDIyMUlucyI7CiAgICAgICAgICAgIGFGb3JtLnRhcmdldCA9ICJfYmxhbmsiOwogICAgICAgICAgICBhRm9ybS5zdWJtaXQoKTsKICAgICAgICAgICAgYUZvcm0udGFyZ2V0ID0gIiI7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBhbGVydChyZXNwLmVycik7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0gZWxzZSB7CiAgICAgIGFsZXJ0KGVycm1zZyk7CiAgICB9CiAgfSwKICBJbmZvOiBmdW5jdGlvbigpIHsKICAgIHZhciBtZSA9IHRoaXM7CiAgICB2YXIgY292ZXIgPSB0aGlzLnByZWZpeCArICJfZm9ybWNvdmVyIjsKICAgICQuYWpheCh7CiAgICAgIHR5cGU6ICJQT1NUIiwKICAgICAgdXJsOiB0aGlzLnVybCArICImdGlwZT1JbmZvIiwKICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewogICAgICAgIHZhciByZXNwID0gZXZhbCgiKCIgKyBkYXRhICsgIikiKTsKICAgICAgICBpZiAocmVzcC5lcnIgPT0gIiIpIHsKICAgICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSAiaGlkZGVuIjsKICAgICAgICAgIGFkZENvdmVyUGFnZTIoY292ZXIsIDk5OSwgdHJ1ZSwgZmFsc2UpOwogICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgYWxlcnQocmVzcC5lcnIpOwogICAgICAgIH0KICAgICAgfQogICAgfSk7CiAgfSwKICBFZGl0OiBmdW5jdGlvbigpIHsKICAgIHZhciBtZSA9IHRoaXM7CiAgICBlcnJtc2cgPSB0aGlzLkNla0NoZWNrYm94KCk7CiAgICBpZiAoZXJybXNnID09ICIiKSB7CiAgICAgIHZhciBib3ggPSB0aGlzLkdldENieENoZWNrZWQoKTsKICAgICAgdmFyIGFGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5mb3JtTmFtZSk7CiAgICAgICQuYWpheCh7CiAgICAgICAgdXJsOiB0aGlzLnVybCArICImdGlwZT1lZGl0VGFiIiwKICAgICAgICB0eXBlOiAiUE9TVCIsCiAgICAgICAgZGF0YTogJCgiIyIgKyB0aGlzLmZvcm1OYW1lKS5zZXJpYWxpemUoKSwKICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICB2YXIgcmVzcCA9IGV2YWwoIigiICsgZGF0YSArICIpIik7CiAgICAgICAgICBpZiAocmVzcC5lcnIgPT0gIiIpIHsKICAgICAgICAgICAgdmFyIElEcmVuamEgPSBOdW1iZXIocmVzcC5jb250ZW50LmlkcmVuamEpOwogICAgICAgICAgICBhRm9ybS5hY3Rpb24gPQogICAgICAgICAgICAgICJwZ0tldS5waHA\",
    "size": "19888"
}