{
    "namaFile": "js\/penyusutan.js",
    "lastUpdate": "2018-05-18+14:19:46.43",
    "contentFile": "dmFyIFBlbnl1c3V0YW5Ta3BkID0gbmV3IFNrcGRDbHMoew0KCXByZWZpeCA6ICdQZW55dXN1dGFuU2twZCcsIGZvcm1OYW1lOidhZG1pbkZvcm0nDQp9KTsNCg0KDQp2YXIgUGVueXVzdXRhbiA9IG5ldyBEYWZ0YXJPYmoyKHsNCglwcmVmaXggOiAnUGVueXVzdXRhbicsDQoJdXJsIDogJ3BhZ2VzLnBocD9QZz1QZW55dXN1dGFuJywgDQoJZm9ybU5hbWUgOiAnUGVueXVzdXRhbl9mb3JtJywvLyAncnVhbmdfZm9ybScsDQoJDQoJZm9ybVN1c3V0OiBmdW5jdGlvbigpew0KCQl2YXIgbWUgPSB0aGlzOw0KCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1jb3Zlcic7DQoJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7DQoJCWFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsJDQoJCSQuYWpheCh7DQoJCQl0eXBlOidQT1NUJywgDQoJCQlkYXRhOiQoJyNhZG1pbkZvcm0nKS5zZXJpYWxpemUoKSwNCgkJICAJdXJsOiB0aGlzLnVybCsnJnRpcGU9Zm9ybVN1c3V0JywNCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJDQoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOw0KCQkJCQ0KCQkJCQkgDQoJCQkJaWYgKHJlc3AuZXJyID09JycpewkJCQkJCQ0KCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcikuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50Ow0KCQkJCX1lbHNlew0KCQkJCQlkZWxFbGVtKGNvdmVyKTsNCgkJCQkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0nYXV0byc7DQoJCQkJCWFsZXJ0KHJlc3AuZXJyKTsNCgkJCQkJDQoJCQkJfQkJCQ0KCQkJCQ0KCQkgIAl9DQoJCX0pOw0KCX0sDQoJDQoJZm9ybUluZm9ybWFzaTogZnVuY3Rpb24oKXsNCgkJdmFyIG1lID0gdGhpczsNCgkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3JtY292ZXInOw0KCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOw0KCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CQ0KCQkkLmFqYXgoew0KCQkJdHlwZTonUE9TVCcsIA0KCQkJZGF0YTokKCcjYWRtaW5Gb3JtJykuc2VyaWFsaXplKCksDQoJCSAgCXVybDogdGhpcy51cmwrJyZ0aXBlPWZvcm1JbmZvcm1hc2knLA0KCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CQkNCgkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7DQoJCQkJDQoJCQkJCSANCgkJCQlpZiAocmVzcC5lcnIgPT0nJyl7CQkJCQkJDQoJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQ7DQoJCQkJCW1lLlRtcGxJbmZvKCk7DQoJCQkJfWVsc2V7DQoJCQkJCWRlbEVsZW0oY292ZXIpOw0KCQkJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdhdXRvJzsNCgkJCQkJYWxlcnQocmVzcC5lcnIpOw0KCQkJCQkNCgkJCQl9CQkJDQoJCQkJDQoJCSAgCX0NCgkJfSk7DQoJfSwJDQoJDQoJZm9ybVN1c3V0U2F0dTogZnVuY3Rpb24oKXsgLy8xIGJhcmFuZw0KCQl2YXIgbWUgPSB0aGlzOw0KCQllcnJtc2cgPSB0aGlzLkNla0NoZWNrYm94QmkoKTsNCgkJaWYoZXJybXNnID09JycpeyANCgkJCS8vdmFyIGJveCA9IHRoaXMuR2V0Q2J4Q2hlY2tlZCgpOw0KCQkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3JtY292ZXInOw0KCQkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsNCgkJCWFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsJDQoJCQkkLmFqYXgoew0KCQkJCXR5cGU6J1BPU1QnLCANCgkJCQlkYXRhOiQoJyNhZG1pbkZvcm0nKS5zZXJpYWxpemUoKSwNCgkJCSAgCXVybDogdGhpcy51cmwrJyZ0aXBlPWZvcm1TdXN1dFNhdHUnLA0KCQkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJDQoJCQkJCXZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsNCgkJCQkJCQkJCQkNCgkJCQkJaWYgKHJlc3AuZXJyID09JycpewkJCQkJCQ0KCQkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsNCgkJCQkJCQkJCQ0KCQkJCQl9ZWxzZXsNCgkJCQkJCWRlbEVsZW0oY292ZXIpOw0KCQkJCQkJZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0nYXV0byc7DQoJCQkJCQlhbGVydChyZXNwLmVycik7DQoJCQkJCQkNCgkJCQkJfQkJCQ0KCQkJCQkNCgkJCSAgCX0NCgkJCX0pOw0KCQl9ZWxzZXsNCgkJCWFsZXJ0KGVycm1zZyk7DQoJCX0NCgl9LA0KCQ0KCWZvcm1TdXN1dEtvcmVrc2k6IGZ1bmN0aW9uKCl7IC8vMSBiYXJhbmcNCgkJdmFyIG1lID0gdGhpczsNCgkJZXJybXNnID0gdGhpcy5DZWtDaGVja2JveEJpKCk7DQoJCWlmKGVycm1zZyA9PScnKXsgDQoJCQkvL3ZhciBib3ggPSB0aGlzLkdldENieENoZWNrZWQoKTsNCgkJCXZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyJzsNCgkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7DQoJCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CQ0KCQkJJC5hamF4KHsNCgkJCQl0eXBlOidQT1NUJywgDQoJCQkJZGF0YTokKCcjYWRtaW5Gb3JtJykuc2VyaWFsaXplKCksDQoJCQkgIAl1cmw6IHRoaXMudXJsKycmdGlwZT1mb3JtS29yZWtzaScsDQoJCQkgIAlzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CQkNCgkJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOw0KCQkJCQkJCQkJCQ0KCQkJCQlpZiAocmVzcC5lcnIgPT0nJyl7CQkJCQkJDQoJCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcikuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50Ow0KCQkJCQkJCQkJDQoJCQkJCX1lbHNlew0KCQkJCQkJZGVsRWxlbShjb3Zlcik7DQoJCQkJCQlkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdhdXRvJzsNCgkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsNCgkJCQkJCQ0KCQkJCQl9CQkJDQoJCQkJCQ0KCQkJICAJfQ0KCQkJfSk7DQoJCX1lbHNlew0KCQkJYWxlcnQoZXJybXNnKTsNCgkJfQ0KCX0sDQoJDQoJZm9ybUJhdGFsOiBmdW5jdGlvbigpeyAvLzEgYmFyYW5nDQoJCXZhciBtZSA9IHRoaXM7DQoJCXZhciBlcnIgPSAnJzsNCgkJdmFyIGVycm1zZyA9ICcnOw0KCQkvL2NlayBza3BkDQoJCXZhciBza3BkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZtU0tQRCcpLnZhbHVlOyANCgkJdmFyIHVuaXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1VTklUJykudmFsdWU7DQoJCXZhciBzdWJ1bml0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZtU1VCVU5JVCcpLnZhbHVlOw0KCQl2YXIgc2Vrc2kgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm1TRUtTSScpLnZhbHVlOw0KCQkNCgkJLy9pZihlcnI9PScnICYmIChza3BkPT0nJyB8fCBza3BkPT0nMDAnKSApIGVycj0nQklEQU5HIGJlbHVtIGRpcGlsaWghJzsNCgkJLy9pZihlcnI9PScnICYmICh1bml0PT0nJyB8fCB1bml0PT0nMDAnKSApIGVycj0nU0tQRCBiZWx1bSBkaXBpbGloISc7DQoJCS8vaWYoZXJyPT0nJyAmJiAoc3VidW5pdD09JycgfHwgc3VidW5pdD09JzAwJykgKSBlcnI9J1VOSVQgYmVsdW0gZGlwaWxpaCEnOw0KCQkvL2lmKGVycj09JycgJiYgKHNla3NpPT0nJyB8fCBzZWtzaT09JzAwJyB8fCBzZWtzaT09JzAwMCcpICkgZXJyPSdTVUIgVU5JVCBiZWx1bSBkaXBpbGloISc7DQoJCS8vZXJybXNnID0gdGhpcy5DZWtDaGVja2JveEJpKCk7DQoJCWlmKGVyciA9PScnKXsNCgkJCWlmKGVycm1zZyA9PScnKXsgDQoJCQkJLy92YXIgYm94ID0gdGhpcy5HZXRDYnhDaGVja2VkKCk7DQoJCQkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3JtY292ZXInOw0KCQkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7DQoJCQkJYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOwkNCgkJCQkkLmFqYXgoew0KCQkJCQl0eXBlOidQT1NUJywgDQoJCQkJCWRhdGE6JCgnI2FkbWluRm9ybScpLnNlcmlhbGl6ZSgpLA0KCQkJCSAgCXVybDogdGhpcy51cmwrJyZ0aXBlPWZvcm1CYXRhbCcsDQoJCQkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJDQoJCQkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7DQoJCQkJCQkJCQkJCQ0KCQkJCQkJaWYgKHJlc3AuZXJyID09JycpewkJCQkJCQ0KCQkJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQ7CQkJCQkNCgkJCQkJCX1lbHNlew0KCQkJCQkJCWRlbEVsZW0oY292ZXIpOw0KCQkJCQkJCWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2F1dG8nOw0KCQkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsNCgkJCQkJCQkNCgkJCQkJCX0JCQkNCgkJCQkJCQ0KCQkJCSAgCX0NCgkJCQl9KTsNCgkJCX1lbHNlew0KCQkJCWFsZXJ0KGVycm1zZyk7DQoJCQl9DQoJCX1lbHNlew0KCQkJYWxlcnQoZXJyKTsNCgkJfQ0KCX0sCQ0KCQ0KCWJhdGFsTmV4dDogZnVuY3Rpb24oKXsgLy8xIGJhcmFuZw0KCQl2YXIgbWUgPSB0aGlzOw0KCQkvL2NlayBza3BkDQoJCS8vdmFyIGJveCA9IHRoaXMuR2V0Q2J4Q2hlY2tlZCgpOw0KCQkvL3ZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyJzsNCgkJLy9kb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nOw0KCQkvL2FkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsJDQoJCSQuYWpheCh7DQoJCQl0eXBlOidQT1NUJywgDQoJCQlkYXRhOiQoJyNQZW55dXN1dGFuX2Zvcm0nKS5zZXJpYWxpemUoKSwNCgkJICAJdXJsOiB0aGlzLnVybCsnJnRpcGU9YmF0YWxOZXh0JywNCgkJICAJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewkJDQoJCQkJdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOwkJCQkJCQkJCQkJCQ0KCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnSW5wdXRJZEJhcmFuZycpLmlubmVySFRNTCA9IHJlc3AuY29udGVudC5JbnB1dElkQmFyYW5nOwkJCQkJCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnSW5wdXRLZEJhcmFuZycpLmlubmVySFRNTCA9IHJlc3AuY29udGVudC5JbnB1dEtkQmFyYW5nOwkJCQkJCQ0KCQkJCQkvL2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCduZXh0SW5wdXQnKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQubmV4dElucHV0OwkNCgkJCQkJLy9kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaWRiaScpLnZhbHVlID0JcmVzcC5jb250ZW50LmlkYmk7CQ0KCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndmptbGRhdGEnKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQuam1sRGF0YTsNCgkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ptbGRhdGEnKS52YWx1ZSA9CXJlc3AuY29udGVudC5qbWxEYXRhOwkJCQkJCQ0KCQkJCQkvL2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdiYXRhbE1ldG9kZWhpZGRlbicpLnZhbHVlID0gcmVzcC5jb250ZW50LmJhdGFsTWV0b2RlaGlkZGVuOwkJCQkJCQ0KDQoJCQkJCS8vYWxlcnQocmVzcC5jb250ZW50LmptbERhdGEpOwkJDQoJCSAgCX0NCgkJfSk7DQoJfSwNCgkNCglzdXN1dE5leHQ6IGZ1bmN0aW9uKCl7IC8vMSBiYXJhbmcNCgkJdmFyIG1lID0gdGhpczsNCgkJCWlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdXN1dEtkQmFyYW5nJykuY2hlY2tlZCl7DQoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnSW5wdXRLZEJhcmFuZycpLmlubmVySFRNTCA9ICI8aW5wdXQgdHlwZT0ndGV4dCcgaWQ9J0tkQmFyYW5nJyBuYW1lPSdLZEJhcmFuZycgb25jaGFuZ2U9J1Blbnl1c3V0YW4uY2hhbmdlVGFodW4oKSc+PHNwYW4gc3R5bGU9J2NvbG9yOnJlZCc+IChtaXMgOiAwMC4wMC4wMC4wMC4wMDApPC9zcGFuPiI7CQkJDQoJCX1lbHNlew0KCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ0tkQmFyYW5nJykudmFsdWU9IiI7DQoJCQltZS5jaGFuZ2VUYWh1bigpOwkNCgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdJbnB1dEtkQmFyYW5nJykuaW5uZXJIVE1MID0gIiI7DQoJCQkJCQ0KCQl9DQoJfSwJCQkJCQ0KDQoJZGFmdGFyb3BzaWVycm9yX2NsaWNrIDogZnVuY3Rpb24oaGVpZ2h0bWF4KXsJLy9hbGVydCgndGVzcycpOw0KCQkvL3ZhciBoZWlnaHRtYXggPSAyMDA7Ly8kb3BzaV9oZWlnaHQ7DQoJCXZhciBoZWlnaHRtaW4gPSAwOw0KCQl2YXIgaWNvbl91cD0naW1hZ2VzL3R1bWJzL3VwXzIucG5nJzsNCgkJdmFyIGljb25fZG93biA9ICdpbWFnZXMvdHVtYnMvZG93bl8yLnBuZyc7DQoJCXZhciBkaXZfaWQgPSAnZGFmdGFyb3BzaXN1c3V0ZXJyb3JfZGl2JzsNCgkJdmFyIGRpdl9zbGlkZSA9ICdkYWZ0YXJvcHNpZXJyb3Jfc2xpZGVfaW1nJzsNCgkJDQoJCXZhciBkaXY9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGRpdl9pZCk7DQoJCXZhciBpbWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkaXZfc2xpZGUpOw0KCQl2YXIgaW1nX3NyYz1pbWcuZ2V0QXR0cmlidXRlKCdzcmMnKTsNCgkJLy9pZiggaW1nX3NyYyA9PSdpbWFnZXMvdHVtYnMvZG93bi5wbmcnICl7DQoJCWlmKCBpbWdfc3JjID09IGljb25fZG93biApeyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KCQkJaW1nLnNldEF0dHJpYnV0ZSgnc3JjJywgaWNvbl91cCk7DQoJCQlkaXYuc3R5bGUuaGVpZ2h0PWhlaWdodG1heDsNCgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkaXZfYm9yZGVyJykuc3R5bGUud2lkdGggPSAnNzE1cHgnOw0KCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Rpdl9ib3JkZXInKS5zdHlsZS5oZWlnaHQgPSAnNjI1cHgnOw0KCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ1Blbnl1c3V0YW5fZm9ybV9kaXYnKS5zdHlsZS53aWR0aCA9ICc3MDBweCc7DQoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnUGVueXVzdXRhbl9mb3JtX2RpdicpLnN0eWxlLmhlaWdodCA9ICc1NTBweCc7DQoJCX1lbHNleyANCgkJCWltZy5zZXRBdHRyaWJ1dGUoJ3NyYycsIGljb25fZG93bik7DQoJCQlkaXYuc3R5bGUuaGVpZ2h0PWhlaWdodG1pbjsNCgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkaXZfYm9yZGVyJykuc3R5bGUud2lkdGggPSAnNTE4cHgnOw0KCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Rpdl9ib3JkZXInKS5zdHlsZS5oZWlnaHQgPSAnMzI4cHgnOw0KCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ1Blbnl1c3V0YW5fZm9ybV9kaXYnKS5zdHlsZS53aWR0aCA9ICc1MDBweCc7DQoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnUGVueXVzdXRhbl9mb3JtX2RpdicpLnN0eWxlLmhlaWdodCA9ICcyNTBweCc7CQkJDQoJCX0NCgl9LA0KCQ0KCWRhZnRhcm9wc2llcnJvcmJhdGFsX2NsaWNrIDogZnVuY3Rpb24oaGVpZ2h0bWF4KXsJLy9hbGVydCgndGVzcycpOw0KCQkvL3ZhciBoZWlnaHRtYXggPSAyMDA7Ly8kb3BzaV9oZWlnaHQ7DQoJCXZhciBoZWlnaHRtaW4gPSAwOw0KCQl2YXIgaWNvbl91cD0naW1hZ2VzL3R1bWJzL3VwXzIucG5nJzsNCgkJdmFyIGljb25fZG93biA9ICdpbWFnZXMvdHVtYnMvZG93bl8yLnBuZyc7DQoJCXZhciBkaXZfaWQgPSAnZGFmdGFyb3BzaXN1c3V0ZXJyb3JfZGl2JzsNCgkJdmFyIGRpdl9zbGlkZSA9ICdkYWZ0YXJvcHNpZXJyb3Jfc2xpZGVfaW1nJzsNCgkJDQoJCXZhciBkaXY9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGRpdl9pZCk7DQoJCXZhciBpbWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkaXZfc2xpZGUpOw0KCQl2YXIgaW1nX3NyYz1pbWcuZ2V0QXR0cmlidXRlKCdzcmMnKTsNCgkJLy9pZiggaW1nX3NyYyA9PSdpbWFnZXMvdHVtYnMvZG93bi5wbmcnICl7DQoJCWlmKCBpbWdfc3JjID09IGljb25fZG93biApeyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KCQkJaW1nLnNldEF0dHJpYnV0ZSgnc3JjJywgaWNvbl91cCk7DQoJCQlkaXYuc3R5bGUuaGVpZ2h0PWhlaWdodG1heDsNCgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkaXZfYm9yZGVyJykuc3R5bGUud2lkdGggPSAnNzE1cHgnOw0KCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Rpdl9ib3JkZXInKS5zdHlsZS5oZWlnaHQgPSAnNjI1cHgnOw0KCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ1Blbnl1c3V0YW5fZm9ybV9kaXYnKS5zdHlsZS53aWR0aCA9ICc3MDBweCc7DQoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnUGVueXVzdXRhbl9mb3JtX2RpdicpLnN0eWxlLmhlaWdodCA9ICc1NTBweCc7DQoJCX1lbHNleyANCgkJCWltZy5zZXRBdHRyaWJ1dGUoJ3NyYycsIGljb25fZG93bik7DQoJCQlkaXYuc3R5bGUuaGVpZ2h0PWhlaWdodG1pbjsNCgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkaXZfYm9yZGVyJykuc3R5bGUud2lkdGggPSAnNTE4cHgnOw0KCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Rpdl9ib3JkZXInKS5zdHlsZS5oZWlnaHQgPSAnMzc4cHgnOw0KCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ1Blbnl1c3V0YW5fZm9ybV9kaXYnKS5zdHlsZS53aWR0aCA9ICc1MDBweCc7DQoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnUGVueXVzdXRhbl9mb3JtX2RpdicpLnN0eWxlLmhlaWdodCA9ICczMDBweCc7CQkJDQoJCX0NCgl9LAkNCgkNCgliYXRhbFN1c3V0IDogZnVuY3Rpb24oKXsNCgkJdmFyIG1lID0gdGhpczsNCgkJdmFyIGVycm1zZyA9ICcnOw0KCQkNCgkJLy9lcnJtc2cgPSB0aGlzLkNla0NoZWNrYm94QmkoKTsNCgkJaWYoKGVycm1zZz09JycpICYmICggKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdib3hjaGVja2VkJykudmFsdWUgPT0gMCl8fChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYm94Y2hlY2tlZCcpLnZhbHVlID09ICcnKSAgKSl7DQoJCQllcnJtc2c9ICdEYXRhIGJlbHVtIGRpcGlsaWghJzsNCgkJfQ0KDQoJCWlmKGVycm1zZyA9PScnICYmIGNvbmZpcm0oJ0JhdGFsa2FuIHNlbXVhIHBlbnl1c3V0YW4gdW50dWsgJythZG1pbkZvcm0uYm94Y2hlY2tlZC52YWx1ZSsnIGJhcmFuZz8nKSApeyAJCQkNCgkJCXZhciBtZSA9IHRoaXM7DQoJCQl2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1jb3Zlcic7DQoJCQkvL2RvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7DQoJCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7CQ0KCQkJJC5hamF4KHsNCgkJCQl0eXBlOidQT1NUJywgDQoJCQkJZGF0YTokKCcjYWRtaW5Gb3JtJykuc2VyaWFsaXplKCksDQoJCQkgIAl1cmw6IHRoaXMudXJsKycmdGlwZT1iYXRhbFN1c3V0JywNCgkJCSAgCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsJCQ0KCQkJCQl2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7CQkJCQkJCQkJDQoJCQkJCWRlbEVsZW0oY292ZXIpOw0KCQkJCQlpZiAocmVzcC5lcnIgPT0nJyl7CQkJCQkJDQoJCQkJCQkvL2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQ7DQoJCQkJCQkvL21lLmZpbHRlclJlbmRlcigpOw0KCQkJCQkJLy9tZS5kYWZ0YXJSZW5kZXIoKTsNCgkJCQkJCWFsZXJ0KHJlc3AuY29udGVudC5hbGVydCk7DQoJCQkJCQlQZW5hdGF1c2FoYS5yZWZyZXNoTGlzdCh0cnVlKTsJCQkJCQkJDQoJCQkJCX1lbHNlew0KCQkJCQkJDQoJCQkJCQkvL2RvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2F1dG8nOw0KCQkJCQkJYWxlcnQocmVzcC5lcnIpOwkJCQkJDQoJCQkJCX0NCgkJCSAgCX0NCgkJCX0pOw0KCQkNCgkJfWVsc2Ugew0KCQkJYWxlcnQoIGVycm1zZyk7DQoJCX0NCgl9LA0KDQoJYmF0YWxTdXN1dE1ldG9kZTEgOiBmdW5jdGlvbigpew0KCQl2YXIgbWUgPSB0aGlzOw0KCQl2YXIgZXJybXNnID0gJyc7DQoJCQ0KCQkvL2Vycm1zZyA9IHRoaXMuQ2VrQ2hlY2tib3hCaSgpOw0KCQkvL2lmKChlcnJtc2c9PScnKSAmJiAoIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYm94Y2hlY2tlZCcpLnZhbHVlID09IDApfHwoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2JveGNoZWNrZWQnKS52YWx1ZSA9PSAnJykgICkpew0KCQkvLwllcnJtc2c9ICdEYXRhIGJlbHVtIGRpcGlsaWghJzsNCgkJLy99DQoNCgkJaWYoY29uZmlybSgnQmF0YWxrYW4gc2VtdWEgcGVueXVzdXRhbiB1bnR1ayAnK2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqbWxkYXRhJykudmFsdWUrJyBiYXJhbmc\",
    "size": "26165"
}