{
    "namaFile": "pages\/ref\/ref_images\/ref_images.php",
    "lastUpdate": "2017-10-25+17:10:52.37",
    "contentFile": "PD9waHANCg0KY2xhc3MgcmVmX2ltYWdlc09iaiAgZXh0ZW5kcyBEYWZ0YXJPYmoyeyANCiAgdmFyICRQcmVmaXggPSAncmVmX2ltYWdlcyc7DQogIHZhciAkZWxDdXJyUGFnZT0iSGFsRGVmYXVsdCI7DQogIHZhciAkU0hPV19DRUsgPSBUUlVFOw0KICB2YXIgJFRibE5hbWUgPSAnaW1hZ2VzJzsgLy9ib251cw0KICB2YXIgJFRibE5hbWVfSGFwdXMgPSAnaW1hZ2VzJzsNCiAgdmFyICRNYXhGbHVzaCA9IDEwOw0KICB2YXIgJFRibFN0eWxlID0gYXJyYXkoICdrb3B0YWJsZScsICdjZXRhaycsJ2NldGFrJyk7IC8vYmVyZGFzYXIgbW9kZQ0KICB2YXIgJENvbFN0eWxlID0gYXJyYXkoICdHYXJpc0RhZnRhcicsICdHYXJpc0NldGFrJywnR2FyaXNDZXRhaycpOw0KICB2YXIgJEtleUZpZWxkcyA9IGFycmF5KCdpZCcpOyAvL3ByaW1hcnkga2V5IGRhcmkgc2VidWFoIHRhYmxlDQogIHZhciAkRmllbGRTdW0gPSBhcnJheSgpOy8vYXJyYXkoJ2ptbF9oYXJnYScpOw0KICB2YXIgJFN1bVZhbHVlID0gYXJyYXkoKTsNCiAgdmFyICRGaWVsZFN1bV9DcDEgPSBhcnJheSggMTQsIDEzLCAxMyk7Ly9iZXJkYXNhciBtb2RlDQogIHZhciAkRmllbGRTdW1fQ3AyID0gYXJyYXkoIDEsIDEsIDEpOyAgDQogIHZhciAkY2hlY2tib3hfcm93c3BhbiA9IDI7DQogIHZhciAkUGFnZVRpdGxlID0gJ0lNQUdFUyBNQU5BR0VNRU5UJzsNCiAgdmFyICRQYWdlSWNvbiA9ICdpbWFnZXMvbWFzdGVyZGF0YV9pY28uZ2lmJzsNCiAgdmFyICRwYWdlUGVySGFsID0nJzsNCiAgLy92YXIgJGNldGFrX3hscz1UUlVFIDsNCiAgdmFyICRmaWxlTmFtZUV4Y2VsPSdyZWZfaW1hZ2VzLnhscyc7DQogIHZhciAkbmFtYU1vZHVsQ2V0YWs9J01BU1RFUiBEQVRBJzsNCiAgdmFyICRDZXRha19KdWR1bCA9ICdyZWZfaW1hZ2VzJzsgDQogIHZhciAkQ2V0YWtfTW9kZT0yOw0KICB2YXIgJENldGFrX1dJRFRIID0gJzMwY20nOw0KICB2YXIgJENldGFrX090aGVySFRNTEhlYWQ7DQogIHZhciAkRm9ybU5hbWUgPSAncmVmX2ltYWdlc0Zvcm0nOw0KICB2YXIgJG5vTW9kdWw9OTsgDQogIHZhciAkVGFtcGlsRmlsdGVyQ29sYXBzZSA9IDA7IC8vMA0KICB2YXIgJHVzZXJuYW1lID0gIiI7DQogIA0KICBmdW5jdGlvbiBzZXRUaXRsZSgpew0KICAgIHJldHVybiAnSU1BR0VTIE1BTkFHRU1FTlQnOw0KICB9DQogIGZ1bmN0aW9uIHNldFBhZ2VfSGVhZGVyT3RoZXIoKXsNCiAgIAkJDQoJCXJldHVybiANCgkJIjx0YWJsZSB3aWR0aD1cIjEwMCVcIiBjbGFzcz1cIm1lbnViYXJcIiBjZWxscGFkZGluZz1cIjBcIiBjZWxsc3BhY2luZz1cIjBcIiBib3JkZXI9XCIwXCIgc3R5bGU9J21hcmdpbjowIDAgMCAwJz4NCgkJPHRyPg0KCQk8dGQgY2xhc3M9XCJtZW51ZG90dGVkbGluZVwiIHdpZHRoPVwiNDAlXCIgaGVpZ2h0PVwiMjBcIiBzdHlsZT0ndGV4dC1hbGlnbjpyaWdodCc+PEI+DQoJCTxBIGhyZWY9XCJwYWdlcy5waHA\/UGc9Z2VuZXJhbFNldHRpbmdcIiAgID4gU0VUVElORyA8L2E+IHwNCgkJPEEgaHJlZj1cInBhZ2VzLnBocD9QZz1vbmVwYWdlXCIgICA+IFNZU1RFTSA8L2E+IHwNCgkJPEEgaHJlZj1cInBhZ2VzLnBocD9QZz1tZW51QmFyXCIgICA+IE1FTlUgQkFSIDwvYT4gfA0KCQk8QSBocmVmPVwicGFnZXMucGhwP1BnPXNob3J0Y3V0XCIgICA+IFNIT1JUQ1VUIDwvYT4gfA0KCQkNCgkJPEEgaHJlZj1cInBhZ2VzLnBocD9QZz1mb290ZXJcIiAgID4gRk9PVEVSIDwvYT4gfA0KICAgIDxBIGhyZWY9XCJwYWdlcy5waHA\\/UGc9cHJvY2Vzc3VwbG9hZGZpbGVhcnNpcCcgbWV0aG9kPSdwb3N0JyBlbmN0eXBlPSdtdWx0aXBhcnQvZm9ybS1kYXRhJyBpZD0nVXBsb2FkRm9ybSc+Ii4NCiAgICAgICAgICAgICAgICAiPGlucHV0IHR5cGU9J2hpZGRlbicgaWQ9J2lkJyBuYW1lPSdpZCcgdmFsdWU9JyIuJGlkLiInID4iLg0KICAgICAgICAgICAgICAgICAiPGlucHV0IHR5cGU9J2hpZGRlbicgaWQ9J2ZvbGRlcicgbmFtZT0nZm9sZGVyJyB2YWx1ZT0nIi4kZ2V0ZGF0YWthdGVnb3JpWyduYW1hX2thdGVnb3JpJ10uIicgPiIuDQogICAgICAgICAgICAgICAgIjxpbnB1dCBpZD0nSW1hZ2VGaWxlJyBuYW1lPSdJbWFnZUZpbGUnIHR5cGU9J2ZpbGUnICBvbmNoYW5nZT1cIiIuJHRoaXMtPlByZWZpeC4iLmJ0ZmlsZV9vbmNoYW5nZSgpO1wiIC8+Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAuIjwvZm9ybT4iLCANCiAgICAgICAgICAgICAgICApLA0KICAgICAgKTsNCiAgICANCiAgICAgICAgICAgICAgDQogICAgJGZvcm0gPSAkdGhpcy0+Z2VuRm9ybSgpOyAgIA0KICAgICRjb250ZW50ID0gJGZvcm07Ly8kY29udGVudCA9ICdjb250ZW50JzsNCiAgICByZXR1cm4gIGFycmF5ICgnY2VrJz0+JGNlaywgJ2Vycic9PiRlcnIsICdjb250ZW50Jz0+JGNvbnRlbnQpOw0KICB9DQogICAgDQogIGZ1bmN0aW9uIHNldEZvcm0oJGR0KXsgIA0KICAgZ2xvYmFsICRTZW5zdXNUbXAgLCRNYWluOw0KICAgJGNlayA9ICcnOyAkZXJyPScnOyAkY29udGVudD0nJzsgICAgIA0KICAgJGpzb24gPSBUUlVFOyAgLy8kRXJyTXNnID0gJ3Rlcyc7ICAgIA0KICAgJGZvcm1fbmFtZSA9ICR0aGlzLT5QcmVmaXguJ19mb3JtJzsNCiAgICAgICAgDQogICR0aGlzLT5mb3JtX3dpZHRoID0gNTAwOw0KICAgJHRoaXMtPmZvcm1faGVpZ2h0ID0gMjAwOw0KICAgIGlmICgkdGhpcy0+Zm9ybV9mbVNUPT0wKSB7DQogICAgJHRoaXMtPmZvcm1fY2FwdGlvbiA9ICdCYXJ1JzsNCiAgICAJJGthdGVnb3JpID0gJF9SRVFVRVNUWydmaWx0ZXJLYXRlZ29yaSddOw0KICAvLyAgJG5pcCAgID0gJyc7DQogICAgfWVsc2V7DQogICAgJHRoaXMtPmZvcm1fY2FwdGlvbiA9ICdFZGl0JzsgICAgIA0KICAgICRyZWFkb25seT0ncmVhZG9ubHknOw0KICAgICRnZXQgPSBteXNxbF9mZXRjaF9hcnJheShteXNxbF9xdWVyeSgic2VsZWN0ICogZnJvbSAkdGhpcy0+VGJsTmFtZSB3aGVyZSBpZCA9JyRkdCciKSk7DQogICAgZm9yZWFjaCAoJGdldCBhcyAka2V5ID0+ICR2YWx1ZSkgeyANCiAgICAgICAgJCRrZXkgPSAkdmFsdWU7IA0KICAgICAgfSANCiAgICAkdGFuZ2dhbF91cGRhdGUgPSBleHBsb2RlKCItIiwkdGFuZ2dhbF91cGRhdGUpOw0KICAgICR0YW5nZ2FsX3VwZGF0ZSA9ICR0YW5nZ2FsX3VwZGF0ZVsyXS4iLSIuJHRhbmdnYWxfdXBkYXRlWzFdLiItIi4kdGFuZ2dhbF91cGRhdGVbMF07ICAgICANCiAgICB9DQogICAgDQogICAgICAgICAgICAgICAkY21iS2F0ZWdvcmkgPSBjbWJRdWVyeSgnY21iS2F0ZWdvcmknLCRrYXRlZ29yaSwiU0VMRUNUIGlkLG5hbWEgZnJvbSBpbWFnZXNfa2F0ZWdvcmkgIiwnLS0gU2VsZWN0IE9wdGlvbiAtLScpOw0KICAgLy9pdGVtcyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQogICAgJHRoaXMtPmZvcm1fZmllbGRzID0gYXJyYXkoDQogICAgICANCiAgICAgICAgDQogICAgICAnbmFtYScgPT4gYXJyYXkoIA0KICAgICAgICAgICAgJ2xhYmVsJz0+J05BTUEnLA0KICAgICAgICAgICAgJ2xhYmVsV2lkdGgnPT4xMDAsIA0KICAgICAgICAgICAgJ3ZhbHVlJz0+IjxkaXYgc3R5bGU9J2Zsb2F0OmxlZnQ7Jz4NCiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSduYW1hJyBpZD0nbmFtYScgdmFsdWU9JyIuJG5hbWEuIicgcGxhY2Vob2xkZXI9J05BTUEnIHN0eWxlPSd3aWR0aDoyNTBweDsnPg0KICAgICAgICAgICAgPC9kaXY+IiwgDQogICAgICAgICAgICAgKSwNCg0KICAgICAgJ2thdGVnb3JpJyA9PiBhcnJheSggDQogICAgICAgICAgJ2xhYmVsJz0+J0tBVEVHT1JJJywNCiAgICAgICAgICAnbGFiZWxXaWR0aCc9PjEwMCwgDQogICAgICAgICAgJ3ZhbHVlJz0+IjxkaXYgc3R5bGU9J2Zsb2F0OmxlZnQ7Jz4NCiAgICAgICAgICAgICRjbWJLYXRlZ29yaQ0KICAgICAgICAgIDxpbnB1dCB0eXBlPSdidXR0b24nIG5hbWU9J3dhcm5hQmFydScgaWQ9J3dhcm5hQmFydScgdmFsdWU9J0JhcnUnIG9uY2xpY2sgPSciLiR0aGlzLT5QcmVmaXguIi5uZXdLYXRlZ29yaSgpJz4NCiAgICAgICAgICA8aW5wdXQgdHlwZT0nYnV0dG9uJyBuYW1lPSdlZGl0JyBpZD0nZWRpdCcgdmFsdWU9J0VkaXQnIG9uY2xpY2sgPSciLiR0aGlzLT5QcmVmaXguIi5lZGl0S2F0ZWdvcmkoKSc+DQogICAgICAgICAgPC9kaXY+IiwgDQogICAgICAgICAgKSwNCg0KICAgICAgJ2ltYWdlJyA9PiBhcnJheSgNCiAgICAgICAgICAgICdsYWJlbCcgPT4gJ0lNQUdFJywNCiAgICAgICAgICAgICdsYWJlbFdpZHRoJyA9PiAxMDAsDQogICAgICAgICAgICAndmFsdWUnID0+ICINCiAgICAgICAgICAgICA8aW5wdXQgdHlwZT0naGlkZGVuJyBuYW1lPSd0YW5nZ2FsJyBpZD0ndGFuZ2dhbCcgdmFsdWU9JyIuZGF0ZSgnWS1tLWQnKS4iJw0KICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0ndGFuZ2dhbCcgc3R5bGU9J3dpZHRoOjI1MHB4Oyc+DQoJCQkgIDxpbnB1dCB0eXBlPSdoaWRkZW4nIG5hbWU9J25hbWVPZkZpbGUnIGlkPSduYW1lT2ZGaWxlJyA+DQoJCQkgIDxpbnB1dCB0eXBlPSdoaWRkZW4nIG5hbWU9J2Jhc2VPZkZpbGUnIGlkPSdiYXNlT2ZGaWxlJyA+DQogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9J2ZpbGUnIG5hbWU9J2ltYWdlRmlsZScgaWQ9J2ltYWdlRmlsZScgYWNjZXB0PSdpbWFnZS94LXBuZyxpbWFnZS9naWYsaW1hZ2UvanBlZycgb25jaGFuZ2U9JHRoaXMtPlByZWZpeC5maWxlQ2hvb3NlckNoYW5nZWQoKSBwbGFjZWhvbGRlcj0naW1hZ2UnPg0KICAgICAgICAgICAgIiwNCiAgICAgICAgICApLCAgICAgICAgICAgICAgICAgICAgIA0KDQogICAgICApOw0KICAgIC8vdG9tYm9sDQogICAgJHRoaXMtPmZvcm1fbWVudWJhd2FoID0NCiAgICAgIA0KICAgICAgIjxpbnB1dCB0eXBlPSdidXR0b24nIHZhbHVlPSdTaW1wYW4nIG9uY2xpY2sgPSciLiR0aGlzLT5QcmVmaXguIi5TaW1wYW4oJGR0KScgdGl0bGU9J1NpbXBhbicgPiAmbmJzcCIuDQogICAgICAiPGlucHV0IHR5cGU9J2J1dHRvbicgdmFsdWU9J0JhdGFsJyBvbmNsaWNrID0nIi4kdGhpcy0+UHJlZml4LiIuQ2xvc2UoKScgPiI7DQogICAgICAgICAgICAgIA0KICAgICRmb3JtID0gJHRoaXMtPmdlbkZvcm0oKTsgICANCiAgICAkY29udGVudCA9ICRmb3JtOy8vJGNvbnRlbnQgPSAnY29udGVudCc7DQogICAgcmV0dXJuICBhcnJheSAoJ2Nlayc9PiRjZWssICdlcnInPT4kZXJyLCAnY29udGVudCc9PiRjb250ZW50KTsNCiAgfQ0KICANCg0KICAgIA0KICAvL2RhZnRhciA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgZnVuY3Rpb24gc2V0S29sb21IZWFkZXIoJE1vZGU9MSwgJENoZWNrYm94PScnKXsNCiAgICAkTm9tb3JDb2xTcGFuID0gJE1vZGU9PTE\/IDI6IDE7DQogICAgJGhlYWRlclRhYmxlID0NCiAgICAgICI8dGhlYWQ+DQogICAgICAgIDx0cj4NCiAgICAgICAgDQogICAgICAgIDx0aCBjbGFzcz0ndGgwMScgd2lkdGg9JzQwJz5Oby48L3RoPg0KICAgICAgICAkQ2hlY2tib3ggIA0KCQkgPHRoIGNsYXNzPSd0aDAxJyB3aWR0aD0nNDAwJyA+S0FURUdPUkkgPC90aD4gDQogICAgICAgIDx0aCBjbGFzcz0ndGgwMScgd2lkdGg9JzUwMCcgPk5BTUEgPC90aD4NCiAgICAgICANCiAgICAgICAgPHRoIGNsYXNzPSd0aDAxJyB3aWR0aD0nNTAnID5VU0VSTkFNRSA8L3RoPg0KICAgICAgICA8dGggY2xhc3M9J3RoMDEnIHdpZHRoPScxNTAnID5UQU5HR0FMIFVQTE9BRCA8L3RoPg0KICAgICAgICA8dGggY2xhc3M9J3RoMDEnIHdpZHRoPSc1MCcgPklNQUdFIEZJTEUgPC90aD4NCiAgICAgICAgPC90cj4NCiAgICAgICAgDQogICAgICA8L3RoZWFkPiI7DQogICAgcmV0dXJuICRoZWFkZXJUYWJsZTsNCiAgfQ0KICANCiAgZnVuY3Rpb24gc2V0S29sb21EYXRhKCRubywgJGlzaSwgJE1vZGUsICRUYW1waWxDaGVja0JveCl7DQoJDQogICAgZ2xvYmFsICRSZWY7DQoJZm9yZWFjaCAoJGlzaSBhcyAka2V5ID0+ICR2YWx1ZSkgeyANCgkJCQkgICQka2V5ID0gJHZhbHVlOyANCgkJCQl9DQogICAgJEtvbG9tcyA9IGFycmF5KCk7DQogICAgJEtvbG9tc1tdID0gYXJyYXkoJ2FsaWduPXJpZ2h0JywgJG5vLicuJyApOw0KICAgIGlmICgkTW9kZSA9PSAxKSAkS29sb21zW10gPSBhcnJheSgiIGFsaWduPSdjZW50ZXInICAiLCAkVGFtcGlsQ2hlY2tCb3gpOw0KCSRnZXROYW1hS2F0ZWdvcmkgPSBteXNxbF9mZXRjaF9hcnJheShteXNxbF9xdWVyeSgic2VsZWN0ICogZnJvbSBpbWFnZXNfa2F0ZWdvcmkgd2hlcmUgaWQgPScka2F0ZWdvcmknIikpOw0KCSRuYW1hS2F0ZWdvcmkgPSAkZ2V0TmFtYUthdGVnb3JpWyduYW1hJ107DQogICAgJEtvbG9tc1tdID0gYXJyYXkoJ2FsaWduID0ibGVmdCInLCAkbmFtYUthdGVnb3JpICk7DQogICAgJEtvbG9tc1tdID0gYXJyYXkoJ2FsaWduID0ibGVmdCInLCAkbmFtYSk7DQogICAgDQogICAgJEtvbG9tc1tdID0gYXJyYXkoJ2FsaWduID0ibGVmdCInLCAkaXNpWyd1c2VybmFtZSddKTsNCiAgICAkS29sb21zW10gPSBhcnJheSgnYWxpZ24gPSJjZW50ZXIiJywgJGlzaVsndGFuZ2dhbF91cGxvYWQnXSk7DQogICAgJEtvbG9tc1tdID0gYXJyYXkoJ2FsaWduID0iY2VudGVyIicsIjxzcGFuIHN0eWxlPSdjb2xvcjpyZWQ7Y3Vyc29yOnBvaW50ZXI7JyBvbmNsaWNrPSR0aGlzLT5QcmVmaXguc2hvd0ltYWdlKCRpZCk+U0hPVzwvc3Bhbj4iKTsgIA0KICAgIHJldHVybiAkS29sb21zOw0KICB9DQogIA0KIGZ1bmN0aW9uIGdlbkRhZnRhck9wc2koKXsNCgkgZ2xvYmFsICRSZWYsICRNYWluOw0KCSBmb3JlYWNoICgkX1JFUVVFU1QgYXMgJGtleSA9PiAkdmFsdWUpIHsgDQoJCQkJICAkJGtleSA9ICR2YWx1ZTsgDQoJCQkJfQ0KCSANCgkgIA0KCSAgJHF1ZXJ5Q21iS2F0ZWdvcmkgPSAic2VsZWN0IGlkLCBuYW1hIGZyb20gaW1hZ2VzX2thdGVnb3JpICI7DQoJICAkY29tYm9LYXRlZ29yaSA9IGNtYlF1ZXJ5KCdmaWx0ZXJLYXRlZ29yaScsJGZpbHRlckthdGVnb3JpLCRxdWVyeUNtYkthdGVnb3JpLCInIG9uY2hhbmdlID0kdGhpcy0+UHJlZml4LnJlZnJlc2hMaXN0KHRydWUpOyAiLCctLSBTZW11YSBLYXRlZ29yaSAtLScpOw0KDQoJIGlmKGVtcHR5KCRqdW1sYWhQZXJIYWwpKSRqdW1sYWhQZXJIYWwgPSAiMjUiOw0KCSRUYW1waWxPcHQgPSANCgkJCSI8ZGl2IGNsYXNzPSdGaWx0ZXJCYXInIHN0eWxlPSdtYXJnaW4tdG9wOjVweDsnPiIuDQoJCQkiPHRhYmxlIHN0eWxlPSd3aWR0aDoxMDAlJz4NCgkJCTx0cj4NCgkJCTx0ZD5LQVRFR09SSSA8L3RkPg0KCQkJPHRkPjogPC90ZD4NCgkJCTx0ZCBzdHlsZT0nd2lkdGg6OTAlOyc+JGNvbWJvS2F0ZWdvcmkgPC90ZD4NCgkJCTwvdHI+DQoJCQkNCgkJCTx0cj4NCgkJCTx0ZD5OQU1BIDwvdGQ+DQoJCQk8dGQ+OiA8L3RkPg0KCQkJPHRkIHN0eWxlPSd3aWR0aDo5MCU7Jz48aW5wdXQgdHlwZT0ndGV4dCcgbmFtZT0nZmlsdGVyTmFtYScgaWQ9J2ZpbHRlck5hbWEnIHZhbHVlPSckZmlsdGVyTmFtYSc+IDxpbnB1dCB0eXBlPSdidXR0b24nIHZhbHVlPSd0YW1waWxrYW4nIG9uY2xpY2s9ICR0aGlzLT5QcmVmaXgucmVmcmVzaExpc3QodHJ1ZSk7PiA8L3RkPg0KCQkJPC90cj4NCgkJDQoNCgkJCQ0KCQkJDQoJCQkNCgkJCQ0KCQkJDQoJCQk8L3RhYmxlPiIuDQoJCQkiPC9kaXY+Ii4NCgkJCSI8ZGl2IGNsYXNzPSdGaWx0ZXJCYXInIHN0eWxlPSdtYXJnaW4tdG9wOjVweDsnPiIuDQoJCQkiPHRhYmxlIHN0eWxlPSd3aWR0aDoxMDAlJz4NCgkJCTx0ZD5KVU1MQUgvSEFMIDwvdGQ+DQoJCQk8dGQ+OiA8L3RkPg0KCQkJPHRkIHN0eWxlPSd3aWR0aDo5MCU7Jz48aW5wdXQgdHlwZT0gJ3RleHQnIGlkPSdqdW1sYWhQZXJIYWwnIG5hbWU9J2p1bWxhaFBlckhhbCcgdmFsdWU9JyRqdW1sYWhQZXJIYWwnIHN0eWxlPSd3aWR0aDo0MHB4Oyc+IDxpbnB1dCB0eXBlPSdidXR0b24nIHZhbHVlPSdUYW1waWxrYW4nIG9uY2xpY2s9JHRoaXMtPlByZWZpeC5yZWZyZXNoTGlzdCh0cnVlKSA8L3RkPg0KCQkJPC90cj4NCgkJDQoJCQkNCgkJCQ0KCQkJDQoJCQkNCgkJCQ0KCQkJPC90YWJsZT4iLg0KCQkJIjwvZGl2PiINCgkJCQ0KCQkJOw0KCQlyZXR1cm4gYXJyYXkoJ1RhbXBpbE9wdCc9PiRUYW1waWxPcHQpOw0KCX0JCQkNCiAgDQogIGZ1bmN0aW9uIGdldERhZnRhck9wc2koJE1vZGU9MSl7DQoJCWdsb2JhbCAkTWFpbiwgJEhUVFBfQ09PS0lFX1ZBUlM7DQoJCSRVSUQgPSAkX0NPT0tJRVsnY29JRCddOyANCgkJIGZvcmVhY2ggKCRfUkVRVUVTVCBhcyAka2V5ID0+ICR2YWx1ZSkgeyANCgkJCQkgICQka2V5ID0gJHZhbHVlOyANCgkJCQl9DQoJCSR0aGlzLT5wYWdlUGVySGFsID0gJGp1bWxhaFBlckhhbDsNCgkJJGFycktvbmRpc2kgPSBhcnJheSgpOwkJDQoJCWlmKCFlbXB0eSgkZmlsdGVyS2F0ZWdvcmkpKSRhcnJLb25kaXNpW109ImthdGVnb3JpID0nJGZpbHRlckthdGVnb3JpJyI7DQoJCWlmKCFlbXB0eSgkZmlsdGVyTmFtYSkpJGFycktvbmRpc2lbXT0ibmFtYSBsaWtlICclJGZpbHRlck5hbWElJyI7DQoNCgkJDQoJCQ0KDQoJCSRLb25kaXNpPSBqb2luKCcgYW5kICcsJGFycktvbmRpc2kpOwkJDQoJCSRLb25kaXNpID0gJEtvbmRpc2kgPT0nJyA\/ICcnOicgV2hlcmUgJy4kS29uZGlzaTsNCgkJDQoJCS8vT3JkZXIgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KCQkkZm1PUkRFUjEgPSBjZWtQT1NUKCdmbU9SREVSMScpOw0KCQkkZm1ERVNDMSA9IGNla1BPU1QoJ2ZtREVTQzEnKTsJCQkNCgkJJEFzYzEgPSAkZm1ERVNDMSA9PScnPyAnJzogJ2Rlc2MnOwkJDQoJCSRhcnJPcmRlcnMgPSBhcnJheSgpOw0KCQkvLyRhcnJPcmRlcnNbXSA9ICJjb25jYXQocmlnaHQoKDEwMCAraWRfc3lzdGVtKSwyKSwnLicscmlnaHQoKDEwMCAraWRfbW9kdWwpLDIpLCcuJyxyaWdodCgoMTAwMCAraWRfc3ViX21vZHVsKSwzKSkiOw0KCQkkT3JkZXI9IGpvaW4oJywnLCRhcnJPcmRlcnMpOwkNCgkJJE9yZGVyRGVmYXVsdCA9ICIgIjsvLyBPcmRlciBCeSBub190ZXJpbWEgZGVzYyAnOw0KCQkkT3JkZXIgPSAgJE9yZGVyID09Jyc\/ICRPcmRlckRlZmF1bHQgOiAnIE9yZGVyIEJ5ICcuJE9yZGVyOw0KCQkkcGFnZVBlckhhbCA9ICR0aGlzLT5wYWdlUGVySGFsID09JycgPyAkTWFpbi0+UGFnZVBlckhhbDogJHRoaXMtPnBhZ2VQZXJIYWw7IA0KCQkkSGFsRGVmYXVsdD1jZWtQT1NUKCR0aGlzLT5QcmVmaXguJ19oYWwnLDEpOwkJCQkJDQoJCSRMaW1pdCA9ICIgbGltaXQgIi4oKCRIYWxEZWZhdWx0CSoxKSAtIDEpICogJHBhZ2VQZXJIYWwuIiwiLiRwYWdlUGVySGFsOyAvLyRMaW1pdEhhbCA9ICcnOw0KCQkkTGltaXQgPSAkTW9kZSA9PSAzID8gJyc6ICRMaW1pdDsNCgkJJE5vQXdhbD0gJHBhZ2VQZXJIYWwgKiAoKCRIYWxEZWZhdWx0KjEpIC0gMSk7CQkJCQkJCQ0KCQkkTm9Bd2FsID0gJE1vZGUgPT0gMyA\/IDA6ICROb0F3YWw7CQ0KCQkNCgkJcmV0dXJuIGFycmF5KCdLb25kaXNpJz0+JEtvbmRpc2ksICdPcmRlcic9PiRPcmRlciAsJ0xpbWl0Jz0+JExpbWl0LCAnTm9Bd2FsJz0+JE5vQXdhbCk7DQoJCQ0KCX0NCn0NCiRyZWZfaW1hZ2VzID0gbmV3IHJlZl9pbWFnZXNPYmooKTsNCiRyZWZfaW1hZ2VzLT51c2VybmFtZSA9ICRfQ09PS0lFWydjb0lEJ107DQo\/Pg==",
    "size": "46675"
}