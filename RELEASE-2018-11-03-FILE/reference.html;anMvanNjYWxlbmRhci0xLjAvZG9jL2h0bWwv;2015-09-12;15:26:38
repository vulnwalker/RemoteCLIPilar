{
    "namaFile": "js\/jscalendar-1.0\/doc\/html\/reference.html",
    "lastUpdate": "2015-09-12+15:26:38.30",
    "contentFile": "PCFkb2N0eXBlIGh0bWwgcHVibGljICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL2h0bWw0L2xvb3NlLmR0ZCI+DQo8aHRtbD4NCjwhLS0NCg0KR2VuZXJhdGVkIGZyb20gLi4vcmVmZXJlbmNlLnRleCBieSB0ZXgycGFnZSwgdiAyMDA0LTA5LTExDQoocnVubmluZyBvbiBNelNjaGVtZSAyMDksIHVuaXgpLCANCihjKSBEb3JhaSBTaXRhcmFtLCANCmh0dHA6Ly93d3cuY2NzLm5ldS5lZHUvfmRvcmFpL3RleDJwYWdlL3RleDJwYWdlLWRvYy5odG1sDQoNCi0tPg0KPGhlYWQ+DQo8dGl0bGU+DQpESFRNTCBDYWxlbmRhciBXaWRnZXQNCjwvdGl0bGU+DQo8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJyZWZlcmVuY2UuY3NzIiB0aXRsZT1kZWZhdWx0Pg0KPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0icmVmZXJlbmNlLVotUy5jc3MiIHRpdGxlPWRlZmF1bHQ+DQo8bWV0YSBuYW1lPXJvYm90cyBjb250ZW50PSJpbmRleCxmb2xsb3ciPg0KPC9oZWFkPg0KPGJvZHk+DQo8cD4NCjwvcD4NCjxwPg0KPC9wPg0KPHA+DQo8L3A+DQo8cD4NCjwvcD4NCjxwPg0KPC9wPg0KPHA+DQo8L3A+DQo8cD4NCg0KDQoNCg0KPC9wPg0KPHA+DQoNCg0KPC9wPg0KPHA+DQo8L3A+DQo8cD4NCjwvcD4NCjxoMSBjbGFzcz10aXRsZSBhbGlnbj1jZW50ZXI+PGJyPjxicj5ESFRNTCBDYWxlbmRhciBXaWRnZXQ8L2gxPg0KPHA+PC9wPg0KPGRpdiBhbGlnbj1jZW50ZXI+DQpNaWhhaSBCYXpvbiwgPHR0PiZsdDttaWhhaV9iYXpvbkB5YWhvby5jb20mZ3Q7PC90dD48YnI+DQomY29weTsgRHluYXJjaC5jb20gMjAwMi0yMDA1LCA8YSBocmVmPSJodHRwOi8vd3d3LmR5bmFyY2guY29tLyI+PHR0Pnd3dy5keW5hcmNoLmNvbTwvdHQ+PC9hPjxwPk1hcmNoIDcsIDIwMDU8YnI+PC9wPg0KPHA+PC9wPg0KPHA+DQo8c3BhbiBjbGFzcz1zbWFsbD5jYWxlbmRhciB2ZXJzaW9uOiAxLjAgYGBJdCBpcyBoYXBwZW5pbmcgYWdhaW4nJzwvc3Bhbj4NCjwvcD4NCjwvZGl2Pg0KPHA+PC9wPg0KPHA+DQo8c3BhbiBjbGFzcz1zbWFsbD48Y29kZSBjbGFzcz12ZXJiYXRpbT4kSWQ6IHJlZmVyZW5jZS50ZXgsdiAxLjIzIDIwMDUvMDMvMDUgMTE6Mzc6MTQgbWlzaG9vIEV4cCAkPC9jb2RlPjwvc3Bhbj4NCjwvcD4NCjxzcGFuIGNsYXNzPXNtYWxsPjxibG9ja3F1b3RlPg0KPGRpdiBhbGlnbj1yaWdodD48dGFibGU+PHRyPjx0ZD4NCg0KPC90ZD48L3RyPjwvdGFibGU+PC9kaXY+DQoNCjwvYmxvY2txdW90ZT48L3NwYW4+DQo8YSBuYW1lPSJub2RlX3NlY19UZW1wXzEiPjwvYT4NCjxoMT48YSBocmVmPSIjbm9kZV90b2Nfbm9kZV9zZWNfVGVtcF8xIj5Db250ZW50czwvYT48L2gxPg0KPHA+PGEgbmFtZT0ibm9kZV90b2Nfc3RhcnQiPjwvYT48L3A+DQo8cD48Yj4NCiZuYnNwOyAmbmJzcDsgPGEgbmFtZT0ibm9kZV90b2Nfbm9kZV9zZWNfMSI+PC9hPjxhIGhyZWY9IiNub2RlX3NlY18xIj4xJm5ic3A7Jm5ic3A7T3ZlcnZpZXc8L2E+PC9iPjxicj4NCiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyA8YSBuYW1lPSJub2RlX3RvY19ub2RlX3NlY18xLjEiPjwvYT48YSBocmVmPSIjbm9kZV9zZWNfMS4xIj4xLjEmbmJzcDsmbmJzcDtIb3cgZG9lcyB0aGlzIHRoaW5nIHdvcms\/PC9hPjxicj4NCiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyA8YSBuYW1lPSJub2RlX3RvY19ub2RlX3NlY18xLjIiPjwvYT48YSBocmVmPSIjbm9kZV9zZWNfMS4yIj4xLjImbmJzcDsmbmJzcDtQcm9qZWN0IGZpbGVzPC9hPjxicj4NCiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyA8YSBuYW1lPSJub2RlX3RvY19ub2RlX3NlY18xLjMiPjwvYT48YSBocmVmPSIjbm9kZV9zZWNfMS4zIj4xLjMmbmJzcDsmbmJzcDtMaWNlbnNlPC9hPjxicj4NCjwvcD4NCjxwPjxiPg0KJm5ic3A7ICZuYnNwOyA8YSBuYW1lPSJub2RlX3RvY19ub2RlX3NlY18yIj48L2E+PGEgaHJlZj0iI25vZGVfc2VjXzIiPjImbmJzcDsmbmJzcDtRdWljayBzdGFydHVwPC9hPjwvYj48YnI+DQombmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgPGEgbmFtZT0ibm9kZV90b2Nfbm9kZV9zZWNfMi4xIj48L2E+PGEgaHJlZj0iI25vZGVfc2VjXzIuMSI+Mi4xJm5ic3A7Jm5ic3A7SW5zdGFsbGluZyBhIHBvcHVwIGNhbGVuZGFyPC9hPjxicj4NCiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyA8YSBuYW1lPSJub2RlX3RvY19ub2RlX3NlY18yLjIiPjwvYT48YSBocmVmPSIjbm9kZV9zZWNfMi4yIj4yLjImbmJzcDsmbmJzcDtJbnN0YWxsaW5nIGEgZmxhdCBjYWxlbmRhcjwvYT48YnI+DQombmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgPGEgbmFtZT0ibm9kZV90b2Nfbm9kZV9zZWNfMi4zIj48L2E+PGEgaHJlZj0iI25vZGVfc2VjXzIuMyI+Mi4zJm5ic3A7Jm5ic3A7PHR0PkNhbGVuZGFyLnNldHVwPC90dD4gaW4gZGV0YWlsPC9hPjxicj4NCjwvcD4NCjxwPjxiPg0KJm5ic3A7ICZuYnNwOyA8YSBuYW1lPSJub2RlX3RvY19ub2RlX3NlY18zIj48L2E+PGEgaHJlZj0iI25vZGVfc2VjXzMiPjMmbmJzcDsmbmJzcDtSZWNpcGVzPC9hPjwvYj48YnI+DQombmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgPGEgbmFtZT0ibm9kZV90b2Nfbm9kZV9zZWNfMy4xIj48L2E+PGEgaHJlZj0iI25vZGVfc2VjXzMuMSI+My4xJm5ic3A7Jm5ic3A7UG9wdXAgY2FsZW5kYXJzPC9hPjxicj4NCiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7IDxhIG5hbWU9Im5vZGVfdG9jX25vZGVfc2VjXzMuMS4xIj48L2E+PGEgaHJlZj0iI25vZGVfc2VjXzMuMS4xIj4zLjEuMSZuYnNwOyZuYnNwO1NpbXBsZSB0ZXh0IGZpZWxkIHdpdGggY2FsZW5kYXIgYXR0YWNoZWQgdG8gYSBidXR0b248L2E+PGJyPg0KJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgPGEgbmFtZT0ibm9kZV90b2Nfbm9kZV9zZWNfMy4xLjIiPjwvYT48YSBocmVmPSIjbm9kZV9zZWNfMy4xLjIiPjMuMS4yJm5ic3A7Jm5ic3A7U2ltcGxlIGZpZWxkIHdpdGggY2FsZW5kYXIgYXR0YWNoZWQgdG8gYW4gaW1hZ2U8L2E+PGJyPg0KJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgPGEgbmFtZT0ibm9kZV90b2Nfbm9kZV9zZWNfMy4xLjMiPjwvYT48YSBocmVmPSIjbm9kZV9zZWNfMy4xLjMiPjMuMS4zJm5ic3A7Jm5ic3A7SGlkZGVuIGZpZWxkLCBwbGFpbiB0ZXh0IHRyaWdnZXJzPC9hPjxicj4NCiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7IDxhIG5hbWU9Im5vZGVfdG9jX25vZGVfc2VjXzMuMS40Ij48L2E+PGEgaHJlZj0iI25vZGVfc2VjXzMuMS40Ij4zLjEuNCZuYnNwOyZuYnNwOzIgTGlua2VkIGZpZWxkcywgbm8gdHJpZ2dlciBidXR0b25zPC9hPjxicj4NCiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyA8YSBuYW1lPSJub2RlX3RvY19ub2RlX3NlY18zLjIiPjwvYT48YSBocmVmPSIjbm9kZV9zZWNfMy4yIj4zLjImbmJzcDsmbmJzcDtGbGF0IGNhbGVuZGFyczwvYT48YnI+DQombmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgPGEgbmFtZT0ibm9kZV90b2Nfbm9kZV9zZWNfMy4zIj48L2E+PGEgaHJlZj0iI25vZGVfc2VjXzMuMyI+My4zJm5ic3A7Jm5ic3A7SGlnaGxpZ2h0IHNwZWNpYWwgZGF0ZXM8L2E+PGJyPg0KJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7IDxhIG5hbWU9Im5vZGVfdG9jX25vZGVfc2VjXzMuNCI+PC9hPjxhIGhyZWY9IiNub2RlX3NlY18zLjQiPjMuNCZuYnNwOyZuYnNwO1NlbGVjdCBtdWx0aXBsZSBkYXRlczwvYT48YnI+DQo8L3A+DQo8cD48Yj4NCiZuYnNwOyAmbmJzcDsgPGEgbmFtZT0ibm9kZV90b2Nfbm9kZV9zZWNfNCI+PC9hPjxhIGhyZWY9IiNub2RlX3NlY180Ij40Jm5ic3A7Jm5ic3A7VGhlIENhbGVuZGFyIG9iamVjdCBvdmVydmlldzwvYT48L2I+PGJyPg0KJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7IDxhIG5hbWU9Im5vZGVfdG9jX25vZGVfc2VjXzQuMSI+PC9hPjxhIGhyZWY9IiNub2RlX3NlY180LjEiPjQuMSZuYnNwOyZuYnNwO0NyZWF0aW5nIGEgY2FsZW5kYXI8L2E+PGJyPg0KJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7IDxhIG5hbWU9Im5vZGVfdG9jX25vZGVfc2VjXzQuMiI+PC9hPjxhIGhyZWY9IiNub2RlX3NlY180LjIiPjQuMiZuYnNwOyZuYnNwO09yZGVyIGRvZXMgbWF0dGVyIDstKTwvYT48YnI+DQombmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgPGEgbmFtZT0ibm9kZV90b2Nfbm9kZV9zZWNfNC4zIj48L2E+PGEgaHJlZj0iI25vZGVfc2VjXzQuMyI+NC4zJm5ic3A7Jm5ic3A7Q2FjaGluZyB0aGUgb2JqZWN0PC9hPjxicj4NCiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyA8YSBuYW1lPSJub2RlX3RvY19ub2RlX3NlY180LjQiPjwvYT48YSBocmVmPSIjbm9kZV9zZWNfNC40Ij40LjQmbmJzcDsmbmJzcDtDYWxsYmFjayBmdW5jdGlvbnM8L2E+PGJyPg0KPC9wPg0KPHA+PGI+DQombmJzcDsgJm5ic3A7IDxhIG5hbWU9Im5vZGVfdG9jX25vZGVfc2VjXzUiPjwvYT48YSBocmVmPSIjbm9kZV9zZWNfNSI+NSZuYnNwOyZuYnNwO1RoZSBDYWxlbmRhciBvYmplY3QgQVBJIHJlZmVyZW5jZTwvYT48L2I+PGJyPg0KJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7IDxhIG5hbWU9Im5vZGVfdG9jX25vZGVfc2VjXzUuMSI+PC9hPjxhIGhyZWY9IiNub2RlX3NlY181LjEiPjUuMSZuYnNwOyZuYnNwOzx0dD5DYWxlbmRhcjwvdHQ+IGNvbnN0cnVjdG9yPC9hPjxicj4NCiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyA8YSBuYW1lPSJub2RlX3RvY19ub2RlX3NlY181LjIiPjwvYT48YSBocmVmPSIjbm9kZV9zZWNfNS4yIj41LjImbmJzcDsmbmJzcDtVc2VmdWwgbWVtYmVyIHZhcmlhYmxlcyAocHJvcGVydGllcyk8L2E+PGJyPg0KJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7IDxhIG5hbWU9Im5vZGVfdG9jX25vZGVfc2VjXzUuMyI+PC9hPjxhIGhyZWY9IiNub2RlX3NlY181LjMiPjUuMyZuYnNwOyZuYnNwO1B1YmxpYyBtZXRob2RzPC9hPjxicj4NCiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7IDxhIG5hbWU9Im5vZGVfdG9jX25vZGVfc2VjXzUuMy4xIj48L2E+PGEgaHJlZj0iI25vZGVfc2VjXzUuMy4xIj41LjMuMSZuYnNwOyZuYnNwOzx0dD5DYWxlbmRhci5jcmVhdGU8L3R0PjwvYT48YnI+DQombmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyA8YSBuYW1lPSJub2RlX3RvY19ub2RlX3NlY181LjMuMiI+PC9hPjxhIGhyZWY9IiNub2RlX3NlY181LjMuMiI+NS4zLjImbmJzcDsmbmJzcDs8dHQ+Q2FsZW5kYXIuY2FsbEhhbmRsZXI8L3R0PjwvYT48YnI+DQombmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyA8YSBuYW1lPSJub2RlX3RvY19ub2RlX3NlY181LjMuMyI+PC9hPjxhIGhyZWY9IiNub2RlX3NlY181LjMuMyI+NS4zLjMmbmJzcDsmbmJzcDs8dHQ+Q2FsZW5kYXIuY2FsbENsb3NlSGFuZGxlcjwvdHQ+PC9hPjxicj4NCiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7IDxhIG5hbWU9Im5vZGVfdG9jX25vZGVfc2VjXzUuMy40Ij48L2E+PGEgaHJlZj0iI25vZGVfc2VjXzUuMy40Ij41LjMuNCZuYnNwOyZuYnNwOzx0dD5DYWxlbmRhci5oaWRlPC90dD48L2E+PGJyPg0KJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgPGEgbmFtZT0ibm9kZV90b2Nfbm9kZV9zZWNfNS4zLjUiPjwvYT48YSBocmVmPSIjbm9kZV9zZWNfNS4zLjUiPjUuMy41Jm5ic3A7Jm5ic3A7PHR0PkNhbGVuZGFyLnNldERhdGVGb3JtYXQ8L3R0PjwvYT48YnI+DQombmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyA8YSBuYW1lPSJub2RlX3RvY19ub2RlX3NlY181LjMuNiI+PC9hPjxhIGhyZWY9IiNub2RlX3NlY181LjMuNiI+NS4zLjYmbmJzcDsmbmJzcDs8dHQ+Q2FsZW5kYXIuc2V0VHREYXRlRm9ybWF0PC90dD48L2E+PGJyPg0KJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgPGEgbmFtZT0ibm9kZV90b2Nfbm9kZV9zZWNfNS4zLjciPjwvYT48YSBocmVmPSIjbm9kZV9zZWNfNS4zLjciPjUuMy43Jm5ic3A7Jm5ic3A7PHR0PkNhbGVuZGFyLnNldERpc2FibGVkSGFuZGxlcjwvdHQ+PC9hPjxicj4NCiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7IDxhIG5hbWU9Im5vZGVfdG9jX25vZGVfc2VjXzUuMy44Ij48L2E+PGEgaHJlZj0iI25vZGVfc2VjXzUuMy44Ij41LjMuOCZuYnNwOyZuYnNwOzx0dD5DYWxlbmRhci5zZXREYXRlU3RhdHVzSGFuZGxlcjwvdHQ+PC9hPjxicj4NCiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7IDxhIG5hbWU9Im5vZGVfdG9jX25vZGVfc2VjXzUuMy45Ij48L2E+PGEgaHJlZj0iI25vZGVfc2VjXzUuMy45Ij41LjMuOSZuYnNwOyZuYnNwOzx0dD5DYWxlbmRhci5zaG93PC90dD48L2E+PGJyPg0KJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgPGEgbmFtZT0ibm9kZV90b2Nfbm9kZV9zZWNfNS4zLjEwIj48L2E+PGEgaHJlZj0iI25vZGVfc2VjXzUuMy4xMCI+NS4zLjEwJm5ic3A7Jm5ic3A7PHR0PkNhbGVuZGFyLnNob3dBdDwvdHQ+PC9hPjxicj4NCiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7IDxhIG5hbWU9Im5vZGVfdG9jX25vZGVfc2VjXzUuMy4xMSI+PC9hPjxhIGhyZWY9IiNub2RlX3NlY181LjMuMTEiPjUuMy4xMSZuYnNwOyZuYnNwOzx0dD5DYWxlbmRhci5zaG93QXRFbGVtZW50PC90dD48L2E+PGJyPg0KJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgPGEgbmFtZT0ibm9kZV90b2Nfbm9kZV9zZWNfNS4zLjEyIj48L2E+PGEgaHJlZj0iI25vZGVfc2VjXzUuMy4xMiI+NS4zLjEyJm5ic3A7Jm5ic3A7PHR0PkNhbGVuZGFyLnNldERhdGU8L3R0PjwvYT48YnI+DQombmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyA8YSBuYW1lPSJub2RlX3RvY19ub2RlX3NlY181LjMuMTMiPjwvYT48YSBocmVmPSIjbm9kZV9zZWNfNS4zLjEzIj41LjMuMTMmbmJzcDsmbmJzcDs8dHQ+Q2FsZW5kYXIuc2V0Rmlyc3REYXlPZldlZWs8L3R0PjwvYT48YnI+DQombmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyA8YSBuYW1lPSJub2RlX3RvY19ub2RlX3NlY181LjMuMTQiPjwvYT48YSBocmVmPSIjbm9kZV9zZWNfNS4zLjE0Ij41LjMuMTQmbmJzcDsmbmJzcDs8dHQ+Q2FsZW5kYXIucGFyc2VEYXRlPC90dD48L2E+PGJyPg0KJm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyAmbmJzcDsgPGEgbmFtZT0ibm9kZV90b2Nfbm9kZV9zZWNfNS4zLjE1Ij48L2E+PGEgaHJlZj0iI25vZGVfc2VjXzUuMy4xNSI+NS4zLjE1Jm5ic3A7Jm5ic3A7PHR0PkNhbGVuZGFyLnNldFJhbmdlPC90dD48L2E+PGJyPg0KPC9wPg0KPHA+PGI+DQombmJzcDsgJm5ic3A7IDxhIG5hbWU9Im5vZGVfdG9jX25vZGVfc2VjXzYiPjwvYT48YSBocmVmPSIjbm9kZV9zZWNfNiI+NiZuYnNwOyZuYnNwO1NpZGUgZWZmZWN0czwvYT48L2I+PGJyPg0KPC9wPg0KPHA+PGI+DQombmJzcDsgJm5ic3A7IDxhIG5hbWU9Im5vZGVfdG9jX25vZGVfc2VjXzciPjwvYT48YSBocmVmPSIjbm9kZV9zZWNfNyI+NyZuYnNwOyZuYnNwO0NyZWRpdHM8L2E+PC9iPjxicj4NCjwvcD4NCjxwPg0KPC9wPg0KPHA+DQo8L3A+DQo8YSBuYW1lPSJub2RlX3NlY18xIj48L2E+DQo8aDE+PGEgaHJlZj0iI25vZGVfdG9jX25vZGVfc2VjXzEiPjEmbmJzcDsmbmJzcDtPdmVydmlldzwvYT48L2gxPg0KPHA+VGhlIERIVE1MIENhbGVuZGFyIHdpZGdldDxhIG5hbWU9ImNhbGxfZm9vdG5vdGVfVGVtcF8yIj48L2E+PGEgaHJlZj0iI2Zvb3Rub3RlX1RlbXBfMiI+PHN1cD48c21hbGw+MTwvc21hbGw+PC9zdXA+PC9hPg0KaXMgYW4gKEhUTUwpIHVzZXIgaW50ZXJmYWNlIGVsZW1lbnQgdGhhdCBnaXZlcyBlbmQtdXNlcnMgYSBmcmllbmRseSB3YXkgdG8NCnNlbGVjdCBkYXRlIGFuZCB0aW1lLiAgSXQgd29ya3MgaW4gYSB3ZWIgYnJvd3Nlci4gIFRoZSBmaXJzdCB2ZXJzaW9ucyBvbmx5IHByb3ZpZGVkDQpzdXBwb3J0IGZvciBwb3B1cCBjYWxlbmRhcnMsIHdoaWxlIHN0YXJ0aW5nIHdpdGggdmVyc2lvbiAwLjkgaXQgYWxzbyBzdXBwb3J0cw0KYGBmbGF0JycgZGlzcGxheS4gIEEgYGBmbGF0JycgY2FsZW5kYXIgaXMgYSBjYWxlbmRhciB0aGF0IHN0YXlzIHZpc2libGUgaW4gdGhlDQpwYWdlIGFsbCB0aGUgdGltZS4gIEluIHRoaXMgbW9kZSBpdCBjb3VsZCBiZSB2ZXJ5IHVzZWZ1bCBmb3IgYGBibG9nJycgcGFnZXMgYW5kDQpvdGhlciBwYWdlcyB0aGF0IHJlcXVpcmUgdGhlIGNhbGVuZGFyIHRvIGJlIGFsd2F5cyBwcmVzZW50LjwvcD4NCjxwPg0KVGhlIGNhbGVuZGFyIGlzIGNvbXBhdGlibGUgd2l0aCBtb3N0IHBvcHVsYXIgYnJvd3NlcnMgbm93YWRheXMuICBXaGlsZSBpdCdzDQpjcmVhdGVkIHVzaW5nIHdlYiBzdGFuZGFyZHMgYW5kIGl0IHNob3VsZCBnZW5lcmFsbHkgd29yayB3aXRoIGFueSBjb21wbGlhbnQNCmJyb3dzZXIsIHRoZSBmb2xsb3dpbmcgYnJvd3NlcnMgd2VyZSBmb3VuZCB0byB3b3JrOiBNb3ppbGxhL0ZpcmVmb3ggKHRoZQ0KZGV2ZWxvcG1lbnQgcGxhdGZvcm0pLCBOZXRzY2FwZSZuYnNwOzYuMCBvciBiZXR0ZXIsIGFsbCBvdGhlciBHZWNrby1iYXNlZCBicm93c2VycywNCkludGVybmV0IEV4cGxvcmVyJm5ic3A7NS4wIG9yIGJldHRlciA8ZW0+Zm9yIFdpbmRvd3M8L2VtPjxhIG5hbWU9ImNhbGxfZm9vdG5vdGVfVGVtcF8zIj48L2E+PGEgaHJlZj0iI2Zvb3Rub3RlX1RlbXBfMyI+PHN1cD48c21hbGw+Mjwvc21hbGw+PC9zdXA+PC9hPiwgT3BlcmEmbmJzcDs3PGEgbmFtZT0iY2FsbF9mb290bm90ZV9UZW1wXzQiPjwvYT48YSBocmVmPSIjZm9vdG5vdGVfVGVtcF80Ij48c3VwPjxzbWFsbD4zPC9zbWFsbD48L3N1cD48L2E+LCBLb25xdWVyb3IgMy4xLjIgYW5kIEFwcGxlIFNhZmFyaSBmb3INCk1hY09TWC48L3A+DQo8cD4NCllvdSBjYW4gZmluZCB0aGUgbGF0ZXN0IGluZm8gYW5kIHZlcnNpb24gYXQgdGhlIGNhbGVuZGFyIGhvbWVwYWdlOjwvcD4NCjxwPg0KPC9wPg0KPGRpdiBhbGlnbj1jZW50ZXI+PHRhYmxlPjx0cj48dGQ+DQoNCjxhIGhyZWY9Imh0dHA6Ly93d3cuZHluYXJjaC5jb20vcHJvamVjdHMvY2FsZW5kYXIvIj48dHQ+d3d3LmR5bmFyY2guY29tL3Byb2plY3RzL2NhbGVuZGFyPC90dD48L2E+DQo8L3RkPjwvdHI+PC90YWJsZT48L2Rpdj4NCjxwPg0KPC9wPg0KPGEgbmFtZT0ibm9kZV9zZWNfMS4xIj48L2E+DQo8aDI+PGEgaHJlZj0iI25vZGVfdG9jX25vZGVfc2VjXzEuMSI+MS4xJm5ic3A7Jm5ic3A7SG93IGRvZXMgdGhpcyB0aGluZyB3b3JrPzwvYT48L2gyPg0KPHA+REhUTUwgaXMgbm90IGBgYW5vdGhlciBraW5kIG9mIEhUTUwnJy4gIEl0J3MgbWVyZWx5IGEgbmFtaW5nIGNvbnZlbnRpb24uICBESFRNTA0KcmVmZXJzIHRvIHRoZSBjb21iaW5hdGlvbiBvZiBIVE1MLCBDU1MsIEphdmFTY3JpcHQgYW5kIERPTS4gIERPTSAoRG9jdW1lbnQNCk9iamVjdCBNb2RlbCkgaXMgYSBzZXQgb2YgaW50ZXJmYWNlcyB0aGF0IGdsdWVzIHRoZSBvdGhlciB0aHJlZSB0b2dldGhlci4gIEluDQpvdGhlciB3b3JkcywgRE9NIGFsbG93cyBkeW5hbWljIG1vZGlmaWNhdGlvbiBvZiBhbiBIVE1MIHBhZ2UgdGhyb3VnaCBhIHByb2dyYW0uDQpKYXZhU2NyaXB0IGlzIG91ciBwcm9ncmFtbWluZyBsYW5ndWFnZSwgc2luY2UgdGhhdCdzIHdoYXQgYnJvd3NlcnMgbGlrZS4gIENTUw0KaXMgYSB3YXkgdG8gbWFrZSBpdCBsb29rIGdvb2QgOy0pLiAgU28gYWxsIHRoaXMgc291cCBpcyBnZW5lcmljYWxseSBrbm93biBhcw0KREhUTUwuPC9wPg0KPHA+DQpVc2luZyBET00gY2FsbHMsIHRoZSBwcm9ncmFtIGR5bmFtaWNhbGx5IGNyZWF0ZXMgYSA8dHQ+Jmx0O3RhYmxlJmd0OzwvdHQ+IGVsZW1lbnQNCnRoYXQgY29udGFpbnMgYSBjYWxlbmRhciBmb3IgdGhlIGdpdmVuIGRhdGUgYW5kIHRoZW4gaW5zZXJ0cyBpdCBpbiB0aGUgZG9jdW1lbnQNCmJvZHkuICBUaGVuIGl0IHNob3dzIHRoaXMgdGFibGUgYXQgYSBzcGVjaWZpZWQgcG9zaXRpb24uICBVc3VhbGx5IHRoZSBwb3NpdGlvbg0KaXMgcmVsYXRlZCB0byBzb21lIGVsZW1lbnQgaW4gd2hpY2ggdGhlIGRhdGUgbmVlZHMgdG8gYmUgZGlzcGxheWVkL2VudGVyZWQsDQpzdWNoIGFzIGFuIGlucHV0IGZpZWxkLjwvcD4NCjxwPg0KQnkgYXNzaWduaW5nIGEgY2VydGFpbiBDU1MgY2xhc3MgdG8gdGhlIHRhYmxlIHdlIGNhbiBjb250cm9sIHRoZSBsb29rIG9mIHRoZQ0KY2FsZW5kYXIgdGhyb3VnaCBhbiBleHRlcm5hbCBDU1MgZmlsZTsgdGhlcmVmb3JlLCBpbiBvcmRlciB0byBjaGFuZ2UgdGhlDQpjb2xvcnMsIGJhY2tncm91bmRzLCByb2xsb3ZlciBlZmZlY3RzIGFuZCBvdGhlciBzdHVmZiwgeW91IGNhbiBvbmx5IGNoYW5nZSBhDQpDU1MgZmlsZSAtLSBtb2RpZmljYXRpb24gb2YgdGhlIHByb2dyYW0gaXRzZWxmIGlzIG5vdCBuZWNlc3NhcnkuPC9wPg0KPHA+DQo8L3A+DQo8YSBuYW1lPSJub2RlX3NlY18xLjIiPjwvYT4NCjxoMj48YSBocmVmPSIjbm9kZV90b2Nfbm9kZV9zZWNfMS4yIj4xLjImbmJzcDsmbmJzcDtQcm9qZWN0IGZpbGVzPC9hPjwvaDI+DQo8cD5IZXJlJ3MgYSBkZXNjcmlwdGlvbiBvZiB0aGUgcHJvamVjdCBmaWxlcywgZXhjbHVkaW5nIGRvY3VtZW50YXRpb24gYW5kIGV4YW1wbGUNCmZpbGVzLjwvcD4NCjxwPg0KPC9wPg0KPHVsPjxwPg0KPC9wPg0KPGxpPjxwPnRoZSBtYWluIHByb2dyYW0gZmlsZSAoPHR0PmNhbGVuZGFyLmpzPC90dD4pLiAgVGhpcyBkZWZpbmVzIGFsbCB0aGUgbG9naWMNCmJlaGluZCB0aGUgY2FsZW5kYXIgd2lkZ2V0LjwvcD4NCjxwPg0KPC9wPg0KPGxpPjxwPnRoZSBDU1MgZmlsZXMgKDx0dD5jYWxlbmRhci0qLmNzczwvdHQ+KS4gIExvYWRpbmcgb25lIG9mIHRoZW0gaXMNCm5lY2Vzc2FyeSBpbiBvcmRlciB0byBzZWUgdGhlIGNhbGVuZGFyIGFzIGludGVuZGVkLjwvcD4NCjxwPg0KPC9wPg0KPGxpPjxwPnRoZSBsYW5ndWFnZSBkZWZpbml0aW9uIGZpbGVzICg8dHQ+bGFuZy9jYWxlbmRhci0qLmpzPC90dD4pLiAgVGhleSBhcmUNCnBsYWluIEphdmFTY3JpcHQgZmlsZXMgdGhhdCBjb250YWluIGFsbCB0ZXh0cyB0aGF0IGFyZSBkaXNwbGF5ZWQgYnkgdGhlDQpjYWxlbmRhci4gIExvYWRpbmcgb25lIG9mIHRoZW0gaXMgbmVjZXNzYXJ5LjwvcD4NCjxwPg0KPC9wPg0KPGxpPjxwPmhlbHBlciBmdW5jdGlvbnMgZm9yIHF1aWNrIHNldHVwIG9mIHRoZSBjYWxlbmRhcg0KKDx0dD5jYWxlbmRhci1zZXR1cC5qczwvdHQ+KS4gIFlvdSBjYW4gZG8gZmluZSB3aXRob3V0IGl0LCBidXQgc3RhcnRpbmcgd2l0aA0KdmVyc2lvbiAwLjkuMyB0aGlzIGlzIHRoZSByZWNvbW1lbmRlZCB3YXkgdG8gc2V0dXAgYSBjYWxlbmRhci48L3A+DQo8cD4NCjwvcD4NCjwvdWw+PHA+PC9wPg0KPHA+DQo8L3A+DQo8YSBuYW1lPSJub2RlX3NlY18xLjMiPjwvYT4NCjxoMj48YSBocmVmPSIjbm9kZV90b2Nfbm9kZV9zZWNfMS4zIj4xLjMmbmJzcDsmbmJzcDtMaWNlbnNlPC9hPjwvaDI+DQo8cD48L3A+DQo8ZGl2IGFsaWduPWNlbnRlcj48dGFibGU+PHRyPjx0ZD4NCg0KJmNvcHk7IER5bmFyY2guY29tIDIwMDItMjAwNSwNCjxhIGhyZWY9Imh0dHA6Ly93d3cuZHluYXJjaC5jb20vIj48dHQ+d3d3LmR5bmFyY2guY29tPC90dD48L2E+DQpBdXRob3I6IE1paGFpIEJhem9uDQo8L3RkPjwvdHI+PC90YWJsZT48L2Rpdj4NCjxwPg0KVGhlIGNhbGVuZGFyIGlzIHJlbGVhc2VkIHVuZGVyIHRoZQ0KPGEgaHJlZj0iaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2xncGwuaHRtbCI+R05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlPC9hPi48L3A+DQo8cD4NCjwvcD4NCjxhIG5hbWU9Im5vZGVfc2VjXzIiPjwvYT4NCjxoMT48YSBocmVmPSIjbm9kZV90b2Nfbm9kZV9zZWNfMiI+MiZuYnNwOyZuYnNwO1F1aWNrIHN0YXJ0dXA8L2E+PC9oMT4NCjxwPjwvcD4NCjxwPg0KSW5zdGFsbGluZyB0aGUgY2FsZW5kYXIgdXNlZCB0byBiZSBxdWl0ZSBhIHRhc2sgdW50aWwgdmVyc2lvbiAwLjkuMy4gIFN0YXJ0aW5nDQp3aXRoIDAuOS4zIEkgaGF2ZSBpbmNsdWRlZCB0aGUgZmlsZSA8dHQ+Y2FsZW5kYXItc2V0dXAuanM8L3R0PiB3aG9zZSBnb2FsIGlzIHRvDQphc3Npc3QgeW91IHRvIHNldHVwIGEgcG9wdXAgb3IgZmxhdCBjYWxlbmRhciBpbiBtaW51dGVzLiAgWW91IGFyZQ0KZW5jb3VyYWdlZCB0byBtb2RpZnkgdGhpcyBmaWxlIGFuZCA8ZW0+bm90PC9lbT4gY2FsZW5kYXIuanMgaWYgeW91IG5lZWQNCmV4dHJhIGN1c3RvbWl6YXRpb24sIGJ1dCB5b3UncmUgb24geW91ciBvd24uPC9wPg0KPHA+DQpGaXJzdCB5b3UgaGF2ZSB0byBpbmNsdWRlIHRoZSBuZWVkZWQgc2NyaXB0cyBhbmQgc3R5bGUtc2hlZXQuICBNYWtlIHN1cmUgeW91IGRvDQp0aGlzIGluIHlvdXIgZG9jdW1lbnQncyA8dHQ+Jmx0O2hlYWQmZ3Q7PC90dD4gc2VjdGlvbiwgYWxzbyBtYWtlIHN1cmUgeW91IHB1dCB0aGUNCmNvcnJlY3QgcGF0aHMgdG8gdGhlIHNjcmlwdHMuPC9wPg0KPHA+DQo8L3A+DQo8cHJlIGNsYXNzPXZlcmJhdGltPiZsdDtzdHlsZSB0eXBlPSZxdW90O3RleHQvY3NzJnF1b3Q7Jmd0O0BpbXBvcnQgdXJsKGNhbGVuZGFyLXdpbjJrLTEuY3NzKTsmbHQ7L3N0eWxlJmd0Ow0KJmx0O3NjcmlwdCB0eXBlPSZxdW90O3RleHQvamF2YXNjcmlwdCZxdW90OyBzcmM9JnF1b3Q7Y2FsZW5kYXIuanMmcXVvdDsmZ3Q7Jmx0Oy9zY3JpcHQmZ3Q7DQombHQ7c2NyaXB0IHR5cGU9JnF1b3Q7dGV4dC9qYXZhc2NyaXB0JnF1b3Q7IHNyYz0mcXVvdDtsYW5nL2NhbGVuZGFyLWVuLmpzJnF1b3Q7Jmd0OyZsdDsvc2NyaXB0Jmd0Ow0KJmx0O3NjcmlwdCB0eXBlPSZxdW90O3RleHQvamF2YXNjcmlwdCZxdW90OyBzcmM9JnF1b3Q7Y2FsZW5kYXItc2V0dXAuanMmcXVvdDsmZ3Q7Jmx0Oy9zY3JpcHQmZ3Q7DQo8L3ByZT48cD48L3A+DQo8cD4NCjwvcD4NCjxhIG5hbWU9Im5vZGVfc2VjXzIuMSI+PC9hPg0KPGgyPjxhIGhyZWY9IiNub2RlX3RvY19ub2RlX3NlY18yLjEiPjIuMSZuYnNwOyZuYnNwO0luc3RhbGxpbmcgYSBwb3B1cCBjYWxlbmRhcjwvYT48L2gyPg0KPHA+PC9wPg0KPHA+DQpOb3cgc3VwcG9zZSB5b3UgaGF2ZSB0aGUgZm9sbG93aW5nIEhUTUw6PC9wPg0KPHA+DQo8L3A+DQo8cHJlIGNsYXNzPXZlcmJhdGltPiZsdDtmb3JtIC4uLiZndDsNCiAgJmx0O2lucHV0IHR5cGU9JnF1b3Q7dGV4dCZxdW90OyBpZD0mcXVvdDtkYXRhJnF1b3Q7IG5hbWU9JnF1b3Q7ZGF0YSZxdW90OyAvJmd0Ow0KICAmbHQ7YnV0dG9uIGlkPSZxdW90O3RyaWdnZXImcXVvdDsmZ3Q7Li4uJmx0Oy9idXR0b24mZ3Q7DQombHQ7L2Zvcm0mZ3Q7DQo8L3ByZT48cD48L3A+DQo8cD4NCllvdSB3YW50IHRoZSBidXR0b24gdG8gcG9wdXAgYSBjYWxlbmRhciB3aWRnZXQgd2hlbiBjbGlja2VkPyAgSnVzdA0KaW5zZXJ0IHRoZSBmb2xsb3dpbmcgY29kZSBpbW1lZGlhdGVseSA8ZW0+YWZ0ZXI8L2VtPiB0aGUgSFRNTCBmb3JtOjwvcD4NCjxwPg0KPC9wPg0KPHByZSBjbGFzcz12ZXJiYXRpbT4mbHQ7c2NyaXB0IHR5cGU9JnF1b3Q7dGV4dC9qYXZhc2NyaXB0JnF1b3Q7Jmd0Ow0KICBDYWxlbmRhci5zZXR1cCgNCiAgICB7DQogICAgICBpbnB1dEZpZWxkICA6ICZxdW90O2RhdGEmcXVvdDssICAgICAgICAgLy8gSUQgb2YgdGhlIGlucHV0IGZpZWxkDQogICAgICBpZkZvcm1hdCAgICA6ICZxdW90OyVtICVkLCAlWSZxdW90OywgICAgLy8gdGhlIGRhdGUgZm9ybWF0DQogICAgICBidXR0b24gICAgICA6ICZxdW90O3RyaWdnZXImcXVvdDsgICAgICAgLy8gSUQgb2YgdGhlIGJ1dHRvbg0KICAgIH0NCiAgKTsNCiZsdDsvc2NyaXB0Jmd0Ow0KPC9wcmU+PHA+PC9wPg0KPHA+DQpUaGUgPHR0PkNhbGVuZGFyLnNldHVwPC90dD4gZnVuY3Rpb24sIGRlZmluZWQgaW4gPHR0PmNhbGVuZGFyLXNldHVwLmpzPC90dD4NCnRha2VzIGNhcmUgb2YgYGBwYXRjaGluZycnIHRoZSBidXR0b24gdG8gZGlzcGxheSBhIGNhbGVuZGFyIHdoZW4gY2xpY2tlZC4gIFRoZQ0KY2FsZW5kYXIgaXMgYnkgZGVmYXVsdCBpbiBzaW5nbGUtY2xpY2sgbW9kZSBhbmQgbGlua2VkIHdpdGggdGhlIGdpdmVuIGlucHV0DQpmaWVsZCwgc28gdGhhdCB3aGVuIHRoZSBlbmQtdXNlciBzZWxlY3RzIGEgZGF0ZSBpdCB3aWxsIHVwZGF0ZSB0aGUgaW5wdXQgZmllbGQNCndpdGggdGhlIGRhdGUgaW4gdGhlIGdpdmVuIGZvcm1hdCBhbmQgY2xvc2UgdGhlIGNhbGVuZGFyLiAgSWYgeW91IGFyZSBhDQpsb25nLXRlcm0gdXNlciBvZiB0aGUgY2FsZW5kYXIgeW91IHByb2JhYmx5IHJlbWVtYmVyIHRoYXQgZm9yIGRvaW5nIHRoaXMgeW91DQpuZWVkZWQgdG8gd3JpdGUgYSBjb3VwbGUgZnVuY3Rpb25zIGFuZCBhZGQgYW4gYGBvbmNsaWNrJycgaGFuZGxlciBmb3IgdGhlDQpidXR0b24gYnkgaGFuZC48L3A+DQo8cD4NCkJ5IGxvb2tpbmcgYXQgdGhlIGV4YW1wbGUgYWJvdmUgd2UgY2FuIHNlZSB0aGF0IHRoZSBmdW5jdGlvbg0KPHR0PkNhbGVuZGFyLnNldHVwPC90dD4gcmVjZWl2ZXMgb25seSBvbmUgcGFyYW1ldGVyOiBhIEphdmFTY3JpcHQgb2JqZWN0Lg0KRnVydGhlciwgdGhhdCBvYmplY3QgY2FuIGhhdmUgbG90cyBvZiBwcm9wZXJ0aWVzIHRoYXQgdGVsbCB0byB0aGUgc2V0dXANCmZ1bmN0aW9uIGhvdyB3b3VsZCB3ZSBsaWtlIHRvIGhhdmUgdGhlIGNhbGVuZGFyLiAgRm9yIGluc3RhbmNlLCBpZiB3ZSB3b3VsZA0KbGlrZSBhIGNhbGVuZGFyIHRoYXQgY2xvc2VzIGF0IGRvdWJsZS1jbGljayBpbnN0ZWFkIG9mIHNpbmdsZS1jbGljayB3ZSB3b3VsZA0KYWxzbyBpbmNsdWRlIHRoZSBmb2xsb3dpbmc6IDx0dD5zaW5nbGVDbGljazpmYWxzZTwvdHQ+LjwvcD4NCjxwPg0KRm9yIGEgbGlzdCBvZiBhbGwgc3VwcG9ydGVkIHBhcmFtZXRlcnMgcGxlYXNlIHNlZSB0aGUgc2VjdGlvbg0KPGEgaHJlZj0iI25vZGVfc2VjXzIuMyI+Mi4zPC9hPi48L3A+DQo8cD4NCjwvcD4NCjxhIG5hbWU9Im5vZGVfc2VjXzIuMiI+PC9hPg0KPGgyPjxhIGhyZWY9IiNub2RlX3RvY19ub2RlX3NlY18yLjIiPjIuMiZuYnNwOyZuYnNwO0luc3RhbGxpbmcgYSBmbGF0IGNhbGVuZGFyPC9hPjwvaDI+DQo8cD48L3A+DQo8cD4NCkhlcmUncyBob3cgdG8gY29uZmlndXJlIGEgZmxhdCBjYWxlbmRhciwgdXNpbmcgdGhlIHNhbWUgPHR0PkNhbGVuZGFyLnNldHVwPC90dD4NCmZ1bmN0aW9uLiAgRmlyc3QsIHlvdSBzaG91bGQgaGF2ZSBhbiBlbXB0eSBlbGVtZW50IHdpdGggYW4gSUQuICBUaGlzIGVsZW1lbnQNCndpbGwgYWN0IGFzIGEgY29udGFpbmVyIGZvciB0aGUgY2FsZW5kYXIuICBJdCBjYW4gYmUgYW55IGJsb2NrLWxldmVsIGVsZW1lbnQsDQpzdWNoIGFzIERJViwgVEFCTEUsIGV0Yy4gIFdlIHdpbGwgdXNlIGEgRElWIGluIHRoaXMgZXhhbXBsZS48L3A+DQo8cD4NCjwvcD4NCjxwcmUgY2xhc3M9dmVyYmF0aW0+Jmx0O2RpdiBpZD0mcXVvdDtjYWxlbmRhci1jb250YWluZXImcXVvdDsmZ3Q7Jmx0Oy9kaXYmZ3Q7DQo8L3ByZT48cD48L3A+DQo8cD4NClRoZW4gdGhlcmUgaXMgdGhlIEphdmFTY3JpcHQgY29kZSB0aGF0IHNldHMgdXAgdGhlIGNhbGVuZGFyIGludG8gdGhlDQpgYGNhbGVuZGFyLWNvbnRhaW5lcicnIERJVi4gIFRoZSBjb2RlIGNhbiBvY2N1ciBhbnl3aGVyZSBpbiBIVE1MDQo8ZW0+YWZ0ZXI8L2VtPiB0aGUgRElWIGVsZW1lbnQuPC9wPg0KPHA+DQo8L3A+DQo8cHJlIGNsYXNzPXZlcmJhdGltPiZsdDtzY3JpcHQgdHlwZT0mcXVvdDt0ZXh0L2phdmFzY3JpcHQmcXVvdDsmZ3Q7DQogIGZ1bmN0aW9uIGRhdGVDaGFuZ2VkKGNhbGVuZGFyKSB7DQogICAgLy8gQmV3YXJlIHRoYXQgdGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgZXZlbiBpZiB0aGUgZW5kLXVzZXIgb25seQ0KICAgIC8vIGNoYW5nZWQgdGhlIG1vbnRoL3llYXIuICBJbiBvcmRlciB0byBkZXRlcm1pbmUgaWYgYSBkYXRlIHdhcw0KICAgIC8vIGNsaWNrZWQgeW91IGNhbiB1c2UgdGhlIGRhdGVDbGlja2VkIHByb3BlcnR5IG9mIHRoZSBjYWxlbmRhcjoNCiAgICBpZiAoY2FsZW5kYXIuZGF0ZUNsaWNrZWQpIHsNCiAgICAgIC8vIE9LLCBhIGRhdGUgd2FzIGNsaWNrZWQsIHJlZGlyZWN0IHRvIC95eXl5L21tL2RkL2luZGV4LnBocA0KICAgICAgdmFyIHkgPSBjYWxlbmRhci5kYXRlLmdldEZ1bGxZZWFyKCk7DQogICAgICB2YXIgbSA9IGNhbGVuZGFyLmRhdGUuZ2V0TW9udGgoKTsgICAgIC8vIGludGVnZXIsIDAuLjExDQogICAgICB2YXIgZCA9IGNhbGVuZGFyLmRhdGUuZ2V0RGF0ZSgpOyAgICAgIC8vIGludGVnZXIsIDEuLjMxDQogICAgICAvLyByZWRpcmVjdC4uLg0KICAgICAgd2luZG93LmxvY2F0aW9uID0gJnF1b3Q7LyZxdW90OyArIHkgKyAmcXVvdDsvJnF1b3Q7ICsgbSArICZxdW90Oy8mcXVvdDsgKyBkICsgJnF1b3Q7L2luZGV4LnBocCZxdW90OzsNCiAgICB9DQogIH07DQoNCiAgQ2FsZW5kYXIuc2V0dXAoDQogICAgew0KICAgICAgZmxhdCAgICAgICAgIDogJnF1b3Q7Y2FsZW5kYXItY29udGFpbmVyJnF1b3Q7LCAvLyBJRCBvZiB0aGUgcGFyZW50IGVsZW1lbnQNCiAgICAgIGZsYXRDYWxsYmFjayA6IGRhdGVDaGFuZ2VkICAgICAgICAgICAvLyBvdXIgY2FsbGJhY2sgZnVuY3Rpb24NCiAgICB9DQogICk7DQombHQ7L3NjcmlwdCZndDsNCjwvcHJlPjxwPjwvcD4NCjxwPg0KPC9wPg0KPGEgbmFtZT0ibm9kZV9zZWNfMi4zIj48L2E+DQo8aDI+PGEgaHJlZj0iI25vZGVfdG9jX25vZGVfc2VjXzIuMyI+Mi4zJm5ic3A7Jm5ic3A7PHR0PkNhbGVuZGFyLnNldHVwPC90dD4gaW4gZGV0YWlsPC9hPjwvaDI+DQo8cD48L3A+DQo8cD4NCkZvbGxvd2luZyB0aGVyZSBpcyB0aGUgY29tcGxldGUgbGlzdCBvZiBwcm9wZXJ0aWVzIGludGVycHJldGVkIGJ5DQpDYWxlbmRhci5zZXR1cC4gIEFsbCBvZiB0aGVtIGhhdmUgZGVmYXVsdCB2YWx1ZXMsIHNvIHlvdSBjYW4gcGFzcyBvbmx5IHRob3NlDQp3aGljaCB5b3Ugd291bGQgbGlrZSB0byBjdXN0b21pemUuICBBbnl3YXksIHlvdSA8ZW0+bXVzdDwvZW0+IHBhc3MgYXQgbGVhc3Qgb25lDQpvZiA8dHQ+aW5wdXRGaWVsZDwvdHQ+LCA8dHQ+ZGlzcGxheUFyZWE8L3R0PiBvciA8dHQ+YnV0dG9uPC90dD4sIGZvciBhIHBvcHVwDQpjYWxlbmRhciwgb3IgPHR0PmZsYXQ8L3R0PiBmb3IgYSBmbGF0IGNhbGVuZGFyLiAgT3RoZXJ3aXNlIHlvdSB3aWxsIGdldCBhDQp3YXJuaW5nIG1lc3NhZ2Ugc2F5aW5nIHRoYXQgdGhlcmUncyBub3RoaW5nIHRvIHNldHVwLjwvcD4NCjxwPg0KPC9wPg0KPHNwYW4gY2xhc3M9c21hbGw+PHRhYmxlIGJvcmRlcj0wPjx0cj48dGQgdmFsaWduPXRvcCA+PGI+cHJvcGVydHk8L2I+IDwvdGQ+PHRkIHZhbGlnbj10b3AgPjxiPnR5cGU8L2I+IDwvdGQ+PHRkIHZhbGlnbj10b3AgPjxiPmRlc2NyaXB0aW9uPC9iPiA8L3RkPjx0ZCB2YWxpZ249dG9wID48Yj5kZWZhdWx0PC9iPg0KPC90ZD48L3RyPg0KPHRyPjx0ZCB2YWxpZ249dG9wID48dHQ+aW5wdXRGaWVsZDwvdHQ+DQo8L3RkPjx0ZCB2YWxpZ249dG9wID5zdHJpbmcgPC90ZD48dGQgdmFsaWduPXRvcCA+VGhlIElEIG9mIHlvdXIgaW5wdXQgZmllbGQuDQo8L3RkPjx0ZCB2YWxpZ249dG9wID5udWxsDQo8L3RkPjwvdHI+DQo8dHI+PHRkIHZhbGlnbj10b3AgPjx0dD5kaXNwbGF5QXJlYTwvdHQ+DQo8L3RkPjx0ZCB2YWxpZ249dG9wID5zdHJpbmcgPC90ZD48dGQgdmFsaWduPXRvcCA+VGhpcyBpcyB0aGUgSUQgb2YgYSAmbHQ7c3BhbiZndDssICZsdDtkaXYmZ3Q7LCBvciBhbnkgb3RoZXIgZWxlbWVudCB0aGF0IHlvdSB3b3VsZCBsaWtlIHRvIHVzZSB0byBkaXNwbGF5IHRoZSBjdXJyZW50IGRhdGUuIFRoaXMgaXMgZ2VuZXJhbGx5IHVzZWZ1bCBvbmx5IGlmIHRoZSBpbnB1dCBmaWVsZCBpcyBoaWRkZW4sIGFzIGFuIGFyZWEgdG8gZGlzcGxheSB0aGUgZGF0ZS4NCjwvdGQ+PHRkIHZhbGlnbj10b3AgPm51bGwNCjwvdGQ+PC90cj4NCjx0cj48dGQgdmFsaWduPXRvcCA+PHR0PmJ1dHRvbjwvdHQ+DQo8L3RkPjx0ZCB2YWxpZ249dG9wID5zdHJpbmcgPC90ZD48dGQgdmFsaWduPXRvcCA+VGhlIElEIG9mIHRoZSBjYWxlbmRhciBgYHRyaWdnZXInJy4gVGhpcyBpcyBhbiBlbGVtZW50IChvcmRpbmFyaWx5IGEgYnV0dG9uIG9yIGFuIGltYWdlKSB0aGF0IHdpbGwgZGlzcGF0Y2ggYSBjZXJ0YWluIGV2ZW50ICh1c3VhbGx5IGBgY2xpY2snJykgdG8gdGhlIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyBhbmQgZGlzcGxheXMgdGhlIGNhbGVuZGFyLg0KPC90ZD48dGQgdmFsaWduPXRvcCA+bnVsbA0KPC90ZD48L3RyPg0KPHRyPjx0ZCB2YWxpZ249dG9wID48dHQ+ZXZlbnROYW1lPC90dD4NCjwvdGQ+PHRkIHZhbGlnbj10b3AgPnN0cmluZyA8L3RkPjx0ZCB2YWxpZ249dG9wID5UaGUgbmFtZSBvZiB0aGUgZXZlbnQgdGhhdCB3aWxsIHRyaWdnZXIgdGhlIGNhbGVuZGFyLiBUaGUgbmFtZSBzaG91bGQgYmUgd2l0aG91dCB0aGUgYGBvbicnIHByZWZpeCwgc3VjaCBhcyBgYGNsaWNrJycgaW5zdGVhZCBvZiBgYG9uY2xpY2snJy4gVmlydHVhbGx5IGFsbCB1c2VycyB3aWxsIHdhbnQgdG8gbGV0IHRoaXMgaGF2ZSB0aGUgZGVmYXVsdCB2YWx1ZSAoYGBjbGljaycnKS4gQW55d2F5LCBpdCBjb3VsZCBiZSB1c2VmdWwgaWYsIHNheSwgeW91IHdhbnQgdGhlIGNhbGVuZGFyIHRvIGFwcGVhciB3aGVuIHRoZSBpbnB1dCBmaWVsZCBpcyBmb2N1c2VkIGFuZCBoYXZlIG5vIHRyaWdnZXIgYnV0dG9uIChpbiB0aGlzIGNhc2UgdXNlIGBgZm9jdXMnJyBhcyB0aGUgZXZlbnQgbmFtZSkuDQo8L3RkPjx0ZCB2YWxpZ249dG9wID5gYGNsaWNrJycNCjwvdGQ+PC90cj4NCjx0cj48dGQgdmFsaWduPXRvcCA+PHR0PmlmRm9ybWF0PC90dD4NCjwvdGQ+PHRkIHZhbGlnbj10b3AgPnN0cmluZyA8L3RkPjx0ZCB2YWxpZ249dG9wID5UaGUgZm9ybWF0IHN0cmluZyB0aGF0IHdpbGwgYmUgdXNlZCB0byBlbnRlciB0aGUgZGF0ZSBpbiB0aGUgaW5wdXQgZmllbGQuIFRoaXMgZm9ybWF0IHdpbGwgYmUgaG9ub3JlZCBldmVuIGlmIHRoZSBpbnB1dCBmaWVsZCBpcyBoaWRkZW4uDQo8L3RkPjx0ZCB2YWxpZ249dG9wID5gYCVZLyVtLyVkJycNCjwvdGQ+PC90cj4NCjx0cj48dGQgdmFsaWduPXRvcCA+PHR0PmRhRm9ybWF0PC90dD4NCjwvdGQ+PHRkIHZhbGlnbj10b3AgPnN0cmluZyA8L3RkPjx0ZCB2YWxpZ249dG9wID5Gb3JtYXQgb2YgdGhlIGRhdGUgZGlzcGxheWVkIGluIHRoZSBkaXNwbGF5QXJlYSAoaWYgc3BlY2lmaWVkKS4NCjwvdGQ+PHRkIHZhbGlnbj10b3AgPmBgJVkvJW0vJWQnJw0KPC90ZD48L3RyPg0KPHRyPjx0ZCB2YWxpZ249dG9wID48dHQ+c2luZ2xlQ2xpY2s8L3R0Pg0KPC90ZD48dGQgdmFsaWduPXRvcCA+Ym9vbGVhbiA8L3RkPjx0ZCB2YWxpZ249dG9wID5XZXRoZXIgdGhlIGNhbGVuZGFyIGlzIGluIGBgc2luZ2xlLWNsaWNrIG1vZGUnJyBvciBgYGRvdWJsZS1jbGljayBtb2RlJycuIElmIHRydWUgKHRoZSBkZWZhdWx0KSB0aGUgY2FsZW5kYXIgd2lsbCBiZSBjcmVhdGVkIGluIHNpbmdsZS1jbGljayBtb2RlLg0KPC90ZD48dGQgdmFsaWduPXRvcCA+dHJ1ZQ0KPC90ZD48L3RyPg0KPHRyPjx0ZCB2YWxpZ249dG9wID48dHQ+ZGlzYWJsZUZ1bmM8L3R0Pg0KPC90ZD48dGQgdmFsaWduPXRvcCA+ZnVuY3Rpb24gPC90ZD48dGQgdmFsaWduPXRvcCA+QSBmdW5jdGlvbiB0aGF0IHJlY2VpdmVzIGEgSlMgRGF0ZSBvYmplY3QuICBJdCBzaG91bGQgcmV0dXJuDQo8dHQ+dHJ1ZTwvdHQ+IGlmIHRoYXQgZGF0ZSBoYXMgdG8gYmUgZGlzYWJsZWQsIDx0dD5mYWxzZTwvdHQ+IG90aGVyd2lzZS4NCjxmb250IGNvbG9yPSJyZWQiPkRFUFJFQ0FURUQgKHNlZSBiZWxvdykuPC9mb250Pg0KPC90ZD48dGQgdmFsaWduPXRvcCA+bnVsbA0KPC90ZD48L3RyPg0KPHRyPjx0ZCB2YWxpZ249dG9wID48dHQ+ZGF0ZVN0YXR1c0Z1bmM8L3R0Pg0KPC90ZD48dGQgdmFsaWduPXRvcCA+ZnVuY3Rpb24gPC90ZD48dGQgdmFsaWduPXRvcCA+QSBmdW5jdGlvbiB0aGF0IHJlY2VpdmVzIGEgSlMgRGF0ZSBvYmplY3QgYW5kIHJldHVybnMgYSBib29sZWFuDQpvciBhIHN0cmluZy4gIFRoaXMgZnVuY3Rpb24gYWxsb3dzIG9uZSB0byBzZXQgYSBjZXJ0YWluIENTUyBjbGFzcyB0byBzb21lDQpkYXRlLCB0aGVyZWZvcmUgbWFraW5nIGl0IGxvb2sgZGlmZmVyZW50LiAgSWYgaXQgcmV0dXJucyA8dHQ+dHJ1ZTwvdHQ+IHRoZW4NCnRoZSBkYXRlIHdpbGwgYmUgZGlzYWJsZWQuICBJZiBpdCByZXR1cm5zIDx0dD5mYWxzZTwvdHQ+IG5vdGhpbmcgc3BlY2lhbA0KaGFwcGVucyB3aXRoIHRoZSBnaXZlbiBkYXRlLiAgSWYgaXQgcmV0dXJucyBhIHN0cmluZyB0aGVuIHRoYXQgd2lsbCBiZSB0YWtlbg0KYXMgYSBDU1MgY2xhc3MgYW5kIGFwcGVuZGVkIHRvIHRoZSBkYXRlIGVsZW1lbnQuICBJZiB0aGlzIHN0cmluZyBpcw0KYGBkaXNhYmxlZCcnIHRoZW4gdGhlIGRhdGUgaXMgYWxzbyBkaXNhYmxlZCAodGhlcmVmb3JlIGlzIGxpa2UgcmV0dXJuaW5nDQo8dHQ+dHJ1ZTwvdHQ+KS4gIEZvciBtb3JlIGluZm9ybWF0aW9uIHBsZWFzZSBhbHNvIHJlZmVyIHRvIHNlY3Rpb24NCjxhIGhyZWY9IiNub2RlX3NlY181LjMuOCI+NS4zLjg8L2E+Lg0KPC90ZD48dGQgdmFsaWduPXRvcCA+bnVsbA0KPC90ZD48L3RyPg0KPHRyPjx0ZCB2YWxpZ249dG9wID48dHQ+Zmlyc3REYXk8L3R0Pg0KPC90ZD48dGQgdmFsaWduPXRvcCA+aW50ZWdlciA8L3RkPjx0ZCB2YWxpZ249dG9wID5TcGVjaWZpZXMgd2hpY2ggZGF5IGlzIHRvIGJlIGRpc3BsYXllZCBhcyB0aGUgZmlyc3QgZGF5IG9mDQp3ZWVrLiAgUG9zc2libGUgdmFsdWVzIGFyZSAwIHRvIDY7IDAgbWVhbnMgU3VuZGF5LCAxIG1lYW5zIE1vbmRheSwgLi4uLCA2DQptZWFucyBTYXR1cmRheS4gIFRoZSBlbmQgdXNlciBjYW4gZWFzaWx5IGNoYW5nZSB0aGlzIHRvbywgYnkgY2xpY2tpbmcgb24gdGhlDQpkYXkgbmFtZSBpbiB0aGUgY2FsZW5kYXIgaGVhZGVyLg0KPC90ZD48dGQgdmFsaWduPXRvcCA+MA0KPC90ZD48L3RyPg0KPHRyPjx0ZCB2YWxpZ249dG9wID48dHQ+d2Vla051bWJlcnM8L3R0Pg0KPC90ZD48dGQgdmFsaWduPXRvcCA+Ym9vbGVhbiA8L3RkPjx0ZCB2YWxpZ249dG9wID5JZiBgYHRydWUnJyB0aGVuIHRoZSBjYWxlbmRhciB3aWxsIGRpc3BsYXkgd2VlayBudW1iZXJzLg0KPC90ZD48dGQgdmFsaWduPXRvcCA+dHJ1ZQ0KPC90ZD48L3RyPg0KPHRyPjx0ZCB2YWxpZ249dG9wID48dHQ+YWxpZ248L3R0Pg0KPC90ZD48dGQgdmFsaWduPXRvcCA+c3RyaW5nIDwvdGQ+PHRkIHZhbGlnbj10b3AgPkFsaWdubWVudCBvZiB0aGUgY2FsZW5kYXIsIHJlbGF0aXZlIHRvIHRoZSByZWZlcmVuY2UgZWxlbWVudC4gVGhlDQpyZWZlcmVuY2UgZWxlbWVudCBpcyBkeW5hbWljYWxseSBjaG9zZW4gbGlrZSB0aGlzOiBpZiBhIGRpc3BsYXlBcmVhIGlzDQpzcGVjaWZpZWQgdGhlbiBpdCB3aWxsIGJlIHRoZSByZWZlcmVuY2UgZWxlbWVudC4gT3RoZXJ3aXNlLCB0aGUgaW5wdXQgZmllbGQNCmlzIHRoZSByZWZlcmVuY2UgZWxlbWVudC4gIEZvciB0aGUgbWVhbmluZyBvZiB0aGUgYWxpZ25tZW50IGNoYXJhY3RlcnMNCnBsZWFzZSBzZWN0aW9uIDxhIGhyZWY9IiNub2RlX3NlY181LjMuMTEiPjUuMy4xMTwvYT4uDQo8L3RkPjx0ZCB2YWxpZ249dG9wID5gYEJsJycNCjwvdGQ+PC90cj4NCjx0cj48dGQgdmFsaWduPXRvcCA+PHR0PnJhbmdlPC90dD4NCjwvdGQ+PHRkIHZhbGlnbj10b3AgPmFycmF5IDwvdGQ+PHRkIHZhbGlnbj10b3AgPkFuIGFycmF5IGhhdmluZyBleGFjdGx5IDIgZWxlbWVudHMsIGludGVnZXJzLiAoISkgVGhlIGZpcnN0IFswXSBlbGVtZW50IGlzIHRoZSBtaW5pbXVtIHllYXIgdGhhdCBpcyBhdmFpbGFibGUsIGFuZCB0aGUgc2Vjb25kIFsxXSBlbGVtZW50IGlzIHRoZSBtYXhpbXVtIHllYXIgdGhhdCB0aGUgY2FsZW5kYXIgd2lsbCBhbGxvdy4NCjwvdGQ+PHRkIHZhbGlnbj10b3AgPlsxOTAwLCAyOTk5XQ0KPC90ZD48L3RyPg0KPHRyPjx0ZCB2YWxpZ249dG9wID48dHQ+ZmxhdDwvdHQ+DQo8L3RkPjx0ZCB2YWxpZ249dG9wID5zdHJpbmcgPC90ZD48dGQgdmFsaWduPXRvcCA+SWYgeW91IHdhbnQgYSBmbGF0IGNhbGVuZGFyLCBwYXNzIHRoZSBJRCBvZiB0aGUgcGFyZW50IG9iamVjdCBpbg0KdGhpcyBwcm9wZXJ0eS4gIElmIG5vdCwgcGFzcyA8dHQ+bnVsbDwvdHQ+IGhlcmUgKG9yIG5vdGhpbmcgYXQgYWxsIGFzDQo8dHQ+bnVsbDwvdHQ+IGlzIHRoZSBkZWZhdWx0IHZhbHVlKS4NCjwvdGQ+PHRkIHZhbGlnbj10b3AgPm51bGwNCjwvdGQ+PC90cj4NCjx0cj48dGQgdmFsaWduPXRvcCA+PHR0PmZsYXRDYWxsYmFjazwvdHQ+DQo8L3RkPjx0ZCB2YWxpZ249dG9wID5mdW5jdGlvbiA8L3RkPjx0ZCB2YWxpZ249dG9wID5Zb3Ugc2hvdWxkIHByb3ZpZGUgdGhpcyBmdW5jdGlvbiBpZiB0aGUgY2FsZW5kYXIgaXMgZmxhdC4gIEl0DQp3aWxsIGJlIGNhbGxlZCB3aGVuIHRoZSBkYXRlIGluIHRoZSBjYWxlbmRhciBpcyBjaGFuZ2VkIHdpdGggYSByZWZlcmVuY2UgdG8NCnRoZSBjYWxlbmRhciBvYmplY3QuICBTZWUgc2VjdGlvbiA8YSBocmVmPSIjbm9kZV9zZWNfMi4yIj4yLjI8L2E+IGZvciBhbiBleGFtcGxlDQpvZiBob3cgdG8gc2V0dXAgYSBmbGF0IGNhbGVuZGFyLg0KPC90ZD48dGQgdmFsaWduPXRvcCA+bnVsbA0KPC90ZD48L3RyPg0KPHRyPjx0ZCB2YWxpZ249dG9wID48dHQ+b25TZWxlY3Q8L3R0Pg0KPC90ZD48dGQgdmFsaWduPXRvcCA+ZnVuY3Rpb24gPC90ZD48dGQgdmFsaWduPXRvcCA+SWYgeW91IHByb3ZpZGUgYSBmdW5jdGlvbiBoYW5kbGVyIGhlcmUgdGhlbiB5b3UgaGF2ZSB0byBtYW5hZ2UNCnRoZSBgYGNsaWNrLW9uLWRhdGUnJyBldmVudCBieSB5b3Vyc2VsZi4gIExvb2sgaW4gdGhlIGNhbGVuZGFyLXNldHVwLmpzIGFuZA0KdGFrZSBhcyBhbiBleGFtcGxlIHRoZSBvblNlbGVjdCBoYW5kbGVyIHRoYXQgeW91IGNhbiBzZWUgdGhlcmUuDQo8L3RkPjx0ZCB2YWxpZ249dG9wID5udWxsDQo8L3RkPjwvdHI+DQo8dHI+PHRkIHZhbGlnbj10b3AgPjx0dD5vbkNsb3NlPC90dD4NCjwvdGQ+PHRkIHZhbGlnbj10b3AgPmZ1bmN0aW9uIDwvdGQ+PHRkIHZhbGlnbj10b3AgPlRoaXMgaGFuZGxlciB3aWxsIGJlIGNhbGxlZCB3aGVuIHRoZSBjYWxlbmRhciBuZWVkcyB0byBjbG9zZS4NCllvdSBkb24ndCBuZWVkIHRvIHByb3ZpZGUgb25lLCBidXQgaWYgeW91IGRvIGl0J3MgeW91ciByZXNwb25zaWJpbGl0eSB0bw0KaGlkZS9kZXN0cm95IHRoZSBjYWxlbmRhci4gIFlvdSdyZSBvbiB5b3VyIG93bi4gIENoZWNrIHRoZSBjYWxlbmRhci1zZXR1cC5qcw0KZmlsZSBmb3IgYW4gZXhhbXBsZS4NCjwvdGQ+PHRkIHZhbGlnbj10b3AgPm51bGwNCjwvdGQ+PC90cj4NCjx0cj48dGQgdmFsaWduPXRvcCA+PHR0Pm9uVXBkYXRlPC90dD4NCjwvdGQ+PHRkIHZhbGlnbj10b3AgPmZ1bmN0aW9uIDwvdGQ+PHRkIHZhbGlnbj10b3AgPklmIHlvdSBzdXBwbHkgYSBmdW5jdGlvbiBoYW5kbGVyIGhlcmUsIGl0IHdpbGwgYmUgY2FsbGVkIHJpZ2h0DQphZnRlciB0aGUgdGFyZ2V0IGZpZWxkIGlzIHVwZGF0ZWQgd2l0aCBhIG5ldyBkYXRlLiAgWW91IGNhbiB1c2UgdGhpcyB0bw0KY2hhaW4gMiBjYWxlbmRhcnMsIGZvciBpbnN0YW5jZSB0byBzZXR1cCBhIGRlZmF1bHQgZGF0ZSBpbiB0aGUgc2Vjb25kIGp1c3QNCmFmdGVyIGEgZGF0ZSB3YXMgc2VsZWN0ZWQgaW4gdGhlIGZpcnN0Lg0KPC90ZD48dGQgdmFsaWduPXRvcCA+bnVsbA0KPC90ZD48L3RyPg0KPHRyPjx0ZCB2YWxpZ249dG9wID48dHQ+ZGF0ZTwvdHQ+DQo8L3RkPjx0ZCB2YWxpZ249dG9wID5kYXRlIDwvdGQ+PHRkIHZhbGlnbj10b3AgPlRoaXMgYWxsb3dzIHlvdSB0byBzZXR1cCBhbiBpbml0aWFsIGRhdGUgd2hlcmUgdGhlIGNhbGVuZGFyIHdpbGwgYmUNCnBvc2l0aW9uZWQgdG8uICBJZiBhYnNlbnQgdGhlbiB0aGUgY2FsZW5kYXIgd2lsbCBvcGVuIHRvIHRoZSB0b2RheSBkYXRlLg0KPC90ZD48dGQgdmFsaWduPXRvcCA+bnVsbA0KPC90ZD48L3RyPg0KPHRyPjx0ZCB2YWxpZ249dG9wID48dHQ+c2hvd3NUaW1lPC90dD4NCjwvdGQ+PHRkIHZhbGlnbj10b3AgPmJvb2xlYW4gPC90ZD48dGQgdmFsaWduPXRvcCA+SWYgdGhpcyBpcyBzZXQgdG8gPHR0PnRydWU8L3R0PiB0aGVuIHRoZSBjYWxlbmRhciB3aWxsIGFsc28NCmFsbG93IHRpbWUgc2VsZWN0aW9uLg0KPC90ZD48dGQgdmFsaWduPXRvcCA+ZmFsc2UNCjwvdGQ+PC90cj4NCjx0cj48dGQgdmFsaWduPXRvcCA+PHR0PnRpbWVGb3JtYXQ8L3R0Pg0KPC90ZD48dGQgdmFsaWduPXRvcCA+c3RyaW5nIDwvdGQ+PHRkIHZhbGlnbj10b3AgPlNldCB0aGlzIHRvIGBgMTInJyBvciBgYDI0JycgdG8gY29uZmlndXJlIHRoZSB3YXkgdGhhdCB0aGUNCmNhbGVuZGFyIHdpbGwgZGlzcGxheSB0aW1lLg0KPC90ZD48dGQgdmFsaWduPXRvcCA+YGAyNCcnDQo8L3RkPjwvdHI+DQo8dHI+PHRkIHZhbGlnbj10b3AgPjx0dD5lbGVjdHJpYzwvdHQ+DQo8L3RkPjx0ZCB2YWxpZ249dG9wID5ib29sZWFuIDwvdGQ+PHRkIHZhbGlnbj10b3AgPlNldCB0aGlzIHRvIGBgZmFsc2UnJyBpZiB5b3Ugd2FudCB0aGUgY2FsZW5kYXIgdG8gdXBkYXRlIHRoZQ0KZmllbGQgb25seSB3aGVuIGNsb3NlZCAoYnkgZGVmYXVsdCBpdCB1cGRhdGVzIHRoZSBmaWVsZCBhdCBlYWNoIGRhdGUgY2hhbmdlLA0KZXZlbiBpZiB0aGUgY2FsZW5kYXIgaXMgbm90IGNsb3NlZCkgPC90ZD48dGQgdmFsaWduPXRvcCA+dHJ1ZQ0KPC90ZD48L3RyPg0KPHRyPjx0ZCB2YWxpZ249dG9wID48dHQ+cG9zaXRpb248L3R0Pg0KPC90ZD48dGQgdmFsaWduPXRvcCA+YXJyYXkgPC90ZD48dGQgdmFsaWduPXRvcCA+U3BlY2lmaWVzIHRoZSBbeCwgeV0gcG9zaXRpb24sIHJlbGF0aXZlIHRvIHBhZ2UncyB0b3AtbGVmdCBjb3JuZXIsDQp3aGVyZSB0aGUgY2FsZW5kYXIgd2lsbCBiZSBkaXNwbGF5ZWQuICBJZiBub3QgcGFzc2VkIHRoZW4gdGhlIHBvc2l0aW9uIHdpbGwNCmJlIGNvbXB1dGVkIGJhc2VkIG9uIHRoZSBgYGFsaWduJycgcGFyYW1ldGVyLiAgRGVmYXVsdHMgdG8gYGBudWxsJycgKG5vdA0KdXNlZCkuIDwvdGQ+PHRkIHZhbGlnbj10b3AgPm51bGwNCjwvdGQ+PC90cj4NCjx0cj48dGQgdmFsaWduPXRvcCA+PHR0PmNhY2hlPC90dD4NCjwvdGQ+PHRkIHZhbGlnbj10b3AgPmJvb2xlYW4gPC90ZD48dGQgdmFsaWduPXRvcCA+U2V0IHRoaXMgdG8gYGB0cnVlJycgaWYgeW91IHdhbnQgdG8gY2FjaGUgdGhlIGNhbGVuZGFyIG9iamVjdC4NClRoaXMgbWVhbnMgdGhhdCBhIHNpbmdsZSBjYWxlbmRhciBvYmplY3Qgd2lsbCBiZSB1c2VkIGZvciBhbGwgZmllbGRzIHRoYXQNCnJlcXVpcmUgYSBwb3B1cCBjYWxlbmRhciA8L3RkPjx0ZCB2YWxpZ249dG9wID5mYWxzZQ0KPC90ZD48L3RyPg0KPHRyPjx0ZCB2YWxpZ249dG9wID48dHQ+c2hvd090aGVyczwvdHQ+DQo8L3RkPjx0ZCB2YWxpZ249dG9wID5ib29sZWFuIDwvdGQ+PHRkIHZhbGlnbj10b3AgPklmIHNldCB0byBgYHRydWUnJyB0aGVuIGRheXMgYmVsb25naW5nIHRvIG1vbnRocyBvdmVybGFwcGluZw0Kd2l0aCB0aGUgY3VycmVudGx5IGRpc3BsYXllZCBtb250aCB3aWxsIGFsc28gYmUgZGlzcGxheWVkIGluIHRoZSBjYWxlbmRhcg0KKGJ1dCBpbiBhIGBgZmFkZWQtb3V0JycgY29sb3IpIDwvdGQ+PHRkIHZhbGlnbj10b3AgPmZhbHNlDQoNCjwvdGQ+PC90cj48L3RhYmxlPg0KDQo8L3NwYW4+PHA+DQo8L3A+DQo8YSBuYW1lPSJub2RlX3NlY18zIj48L2E+DQo8aDE+PGEgaHJlZj0iI25vZGVfdG9jX25vZGVfc2VjXzMiPjMmbmJzcDsmbmJzcDtSZWNpcGVzPC9hPjwvaDE+DQo8cD5UaGlzIHNlY3Rpb24gcHJlc2VudHMgc29tZSBjb21tb24gd2F5cyB0byBzZXR1cCBhIGNhbGVuZGFyIHVzaW5nIHRoZQ0KPHR0PkNhbGVuZGFyLnNldHVwPC90dD4gZnVuY3Rpb24gZGV0YWlsZWQgaW4gdGhlIHByZXZpb3VzIHNlY3Rpb24uPC9wPg0KPHA+DQpXZSBkb24ndCBkaXNjdXNzIGhlcmUgYWJvdXQgbG9hZGluZyB0aGUgSlMgb3IgQ1NTIGNvZGUgLS0gc28gbWFrZSBzdXJlIHlvdQ0KYWRkIHRoZSBwcm9wZXIgJmx0O3NjcmlwdCZndDsgYW5kICZsdDtzdHlsZSZndDsgb3IgJmx0O2xpbmsmZ3Q7IGVsZW1lbnRzIGluIHlvdXINCkhUTUwgY29kZS4gIEFsc28sIHdoZW4gd2UgcHJlc2VudCBpbnB1dCBmaWVsZHMsIHBsZWFzZSBub3RlIHRoYXQgdGhleSBzaG91bGQNCmJlIGVtYmVkZGVkIGluIHNvbWUgZm9ybSBpbiBvcmRlciBmb3IgZGF0YSB0byBiZSBhY3R1YWxseSBzZW50IHRvIHNlcnZlcjsgd2UNCmRvbid0IGRpc2N1c3MgdGhlc2UgdGhpbmdzIGhlcmUgYmVjYXVzZSB0aGV5IGFyZSBub3QgcmVsYXRlZCB0byBvdXINCmNhbGVuZGFyLjwvcD4NCjxwPg0KPC9wPg0KPGEgbmFtZT0ibm9kZV9zZWNfMy4xIj48L2E+DQo8aDI+PGEgaHJlZj0iI25vZGVfdG9jX25vZGVfc2VjXzMuMSI+My4xJm5ic3A7Jm5ic3A7UG9wdXAgY2FsZW5kYXJzPC9hPjwvaDI+DQo8cD5UaGVzZSBzYW1wbGVzIGNhbiBiZSBmb3VuZCBpbiB0aGUgZmlsZSDigJw8dHQ+c2ltcGxlLTEuaHRtbDwvdHQ+4oCdIGZyb20gdGhlDQpjYWxlbmRhciBwYWNrYWdlLjwvcD4NCjxwPg0KPC9wPg0KPGEgbmFtZT0ibm9kZV9zZWNfMy4xLjEiPjwvYT4NCjxoMz48YSBocmVmPSIjbm9kZV90b2Nfbm9kZV9zZWNfMy4xLjEiPjMuMS4xJm5ic3A7Jm5ic3A7U2ltcGxlIHRleHQgZmllbGQgd2l0aCBjYWxlbmRhciBhdHRhY2hlZCB0byBhIGJ1dHRvbjwvYT48L2gzPg0KPHA+PC9wPg0KPHA+DQpUaGlzIHBpZWNlIG9mIGNvZGUgd2lsbCBjcmVhdGUgYSBjYWxlbmRhciBmb3IgYSBzaW1wbGUgaW5wdXQgZmllbGQgd2l0aCBhDQpidXR0b24gdGhhdCB3aWxsIG9wZW4gdGhlIGNhbGVuZGFyIHdoZW4gY2xpY2tlZC48L3A+DQo8cD4NCjwvcD4NCjxwcmUgY2xhc3M9dmVyYmF0aW0+Jmx0O2lucHV0IHR5cGU9JnF1b3Q7dGV4dCZxdW90OyBuYW1lPSZxdW90O2RhdGUmcXVvdDsgaWQ9JnF1b3Q7Zl9kYXRlX2ImcXVvdDsNCiAgICAgICAvJmd0OyZsdDtidXR0b24gdHlwZT0mcXVvdDtyZXNldCZxdW90OyBpZD0mcXVvdDtmX3RyaWdnZXJfYiZxdW90Ow0KICAgICAgICZndDsuLi4mbHQ7L2J1dHRvbiZndDsNCiZsdDtzY3JpcHQgdHlwZT0mcXVvdDt0ZXh0L2phdmFzY3JpcHQmcXVvdDsmZ3Q7DQogICAgQ2FsZW5kYXIuc2V0dXAoew0KICAgICAgICBpbnB1dEZpZWxkICAgICA6ICAgICZxdW90O2ZfZGF0ZV9iJnF1b3Q7LCAgICAgICAgICAgLy8qDQogICAgICAgIGlmRm9ybWF0ICAgICAgIDogICAgJnF1b3Q7JW0vJWQvJVkgJUk6JU0gJXAmcXVvdDssDQogICAgICAgIHNob3dzVGltZSAgICAgIDogICAgdHJ1ZSwNCiAgICAgICAgYnV0dG9uICAgICAgICAgOiAgICAmcXVvdDtmX3RyaWdnZXJfYiZxdW90OywgICAgICAgIC8vKg0KICAgICAgICBzdGVwICAgICAgICAgICA6ICAgIDENCiAgICB9KTsNCiZsdDsvc2NyaXB0Jmd0Ow0KPC9wcmU+PHA+PC9wPg0KPHA+DQpOb3RlIHRoYXQgdGhpcyBjb2RlIGRvZXMgbW9yZSBhY3R1YWxseTsgdGhlIG9ubHkgPGVtPnJlcXVpcmVkPC9lbT4gZmllbGRzIGFyZQ0KdGhvc2UgbWFya2VkIHdpdGgg4oCcLy8q4oCdIC0tIHRoYXQgaXMsIHRoZSBJRCBvZiB0aGUgaW5wdXQgZmllbGQgYW5kIHRoZSBJRCBvZg0KdGhlIGJ1dHRvbiBuZWVkIHRvIGJlIHBhc3NlZCB0byA8dHQ+Q2FsZW5kYXIuc2V0dXA8L3R0PiBpbiBvcmRlciBmb3IgdGhlDQpjYWxlbmRhciB0byBiZSBwcm9wZXJseSBhc3NpZ25lZCB0byB0aGlzIGlucHV0IGZpZWxkLiAgQXMgb25lIGNhbiBlYXNpbHkNCmd1ZXNzIGZyb20gdGhlIGFyZ3VtZW50IG5hbWVzLCB0aGUgb3RoZXIgYXJndW1lbnRzIGNvbmZpZ3VyZSBhIGNlcnRhaW4gZGF0ZQ0KZm9ybWF0LCBpbnN0cnVjdCB0aGUgY2FsZW5kYXIgdG8gYWxzbyBpbmNsdWRlIGEgdGltZSBzZWxlY3RvciBhbmQgZGlzcGxheQ0KZXZlcnkgeWVhciBpbiB0aGUgZHJvcC1kb3duIGJveGVzICh0aGUg4oCcc3RlcOKAnSBwYXJhbWV0ZXIpIC0tIGluc3RlYWQgb2Ygc2hvd2luZw0KZXZlcnkgb3RoZXIgeWVhciBhcyB0aGUgZGVmYXVsdCBjYWxlbmRhciBkb2VzLjwvcD4NCjxwPg0KPC9wPg0KPGEgbmFtZT0ibm9kZV9zZWNfMy4xLjIiPjwvYT4NCjxoMz48YSBocmVmPSIjbm9kZV90b2Nfbm9kZV9zZWNfMy4xLjIiPjMuMS4yJm5ic3A7Jm5ic3A7U2ltcGxlIGZpZWxkIHdpdGggY2FsZW5kYXIgYXR0YWNoZWQgdG8gYW4gaW1hZ2U8L2E+PC9oMz4NCjxwPlNhbWUgYXMgdGhlIGFib3ZlLCBidXQgdGhlIGVsZW1lbnQgdGhhdCB0cmlnZ2VycyB0aGUgY2FsZW5kYXIgaXMgdGhpcyB0aW1lDQphbiBpbWFnZSwgbm90IGEgYnV0dG9uLjwvcD4NCjxwPg0KPC9wPg0KPHByZSBjbGFzcz12ZXJiYXRpbT4mbHQ7aW5wdXQgdHlwZT0mcXVvdDt0ZXh0JnF1b3Q7IG5hbWU9JnF1b3Q7ZGF0ZSZxdW90OyBpZD0mcXVvdDtmX2RhdGVfYyZxdW90OyByZWFkb25seT0mcXVvdDsxJnF1b3Q7IC8mZ3Q7DQombHQ7aW1nIHNyYz0mcXVvdDtpbWcuZ2lmJnF1b3Q7IGlkPSZxdW90O2ZfdHJpZ2dlcl9jJnF1b3Q7DQogICAgIHN0eWxlPSZxdW90O2N1cnNvcjogcG9pbnRlcjsgYm9yZGVyOiAxcHggc29saWQgcmVkOyZxdW90Ow0KICAgICB0aXRsZT0mcXVvdDtEYXRlIHNlbGVjdG9yJnF1b3Q7DQogICAgIG9ubW91c2VvdmVyPSZxdW90O3RoaXMuc3R5bGUuYmFja2dyb3VuZD0ncmVkJzsmcXVvdDsNCiAgICAgb25tb3VzZW91dD0mcXVvdDt0aGlzLnN0eWxlLmJhY2tncm91bmQ9JycmcXVvdDsgLyZndDsNCiZsdDtzY3JpcHQgdHlwZT0mcXVvdDt0ZXh0L2phdmFzY3JpcHQmcXVvdDsmZ3Q7DQogICAgQ2FsZW5kYXIuc2V0dXAoew0KICAgICAgICBpbnB1dEZpZWxkICAgICA6ICAgICZxdW90O2ZfZGF0ZV9jJnF1b3Q7LA0KICAgICAgICBpZkZvcm1hdCAgICAgICA6ICAgICZxdW90OyVCICVlLCAlWSZxdW90OywNCiAgICAgICAgYnV0dG9uICAgICAgICAgOiAgICAmcXVvdDtmX3RyaWdnZXJfYyZxdW90OywNCiAgICAgICAgYWxpZ24gICAgICAgICAgOiAgICAmcXVvdDtUbCZxdW90OywNCiAgICAgICAgc2luZ2xlQ2xpY2sgICAgOiAgICBmYWxzZQ0KICAgIH0pOw0KJmx0Oy9zY3JpcHQmZ3Q7DQo8L3ByZT48cD48L3A+DQo8cD4NCk5vdGUgdGhhdCB0aGUgc2FtZSAyIHBhcmFtZXRlcnMgYXJlIHJlcXVpcmVkIGFzIGluIHRoZSBwcmV2aW91cyBjYXNlOyB0aGUNCmRpZmZlcmVuY2UgaXMgdGhhdCB0aGUgJ2J1dHRvbicgcGFyYW1ldGVyIG5vdyBnZXRzIHRoZSBJRCBvZiB0aGUgaW1hZ2UNCmluc3RlYWQgb2YgdGhlIElEIG9mIHRoZSBidXR0b24uICBCdXQgdGhlIGV2ZW50IGlzIHRoZSBzYW1lOiBhdCAnb25jbGljaycgb24NCnRoZSBlbGVtZW50IHRoYXQgaXMgcGFzc2VkIGFzICdidXR0b24nLCB0aGUgY2FsZW5kYXIgd2lsbCBiZSBzaG93bi48L3A+DQo8cD4NClRoZSBhYm92ZSBjb2RlIGFkZGl0aW9uYWxseSBzZXRzIGFuIGFsaWdubWVudCBtb2RlIC0tIHRoZSBwYXJhbWV0ZXJzIGFyZQ0KZGVzY3JpYmVkIGluIDxhIGhyZWY9IiNub2RlX3NlY181LjMuMTEiPjUuMy4xMTwvYT4uPC9wPg0KPHA+DQo8L3A+DQo8YSBuYW1lPSJub2RlX3NlY18zLjEuMyI+PC9hPg0KPGgzPjxhIGhyZWY9IiNub2RlX3RvY19ub2RlX3NlY18zLjEuMyI+My4xLjMmbmJzcDsmbmJzcDtIaWRkZW4gZmllbGQsIHBsYWluIHRleHQgdHJpZ2dlcnM8L2E+PC9oMz4NCjxwPlNvbWV0aW1lcywgdG8gYXNzdXJlIHRoYXQgdGhlIGRhdGUgaXMgd2VsbCBmb3JtYXR0ZWQsIHlvdSBtaWdodCB3YW50IG5vdCB0bw0KYWxsb3cgdGhlIGVuZCB1c2VyIHRvIHdyaXRlIGEgZGF0ZSBtYW51YWxseS4gIFRoaXMgY2FuIGVhc2lseSBiZSBhY2hpZXZlZA0Kd2l0aCBhbiBpbnB1dCBmaWVsZCBieSBzZXR0aW5nIGl0cyA8dHQ+cmVhZG9ubHk8L3R0PiBhdHRyaWJ1dGUsIHdoaWNoIGlzDQpkZWZpbmVkIGJ5IHRoZSBIVE1MNCBzdGFuZGFyZDsgaG93ZXZlciwgaGVyZSdzIGFuIGV2ZW4gbmljZXIgYXBwcm9hY2g6IG91cg0KY2FsZW5kYXIgd2lkZ2V0IGFsbG93cyB5b3UgdG8gdXNlIGEgaGlkZGVuIGZpZWxkIGFzIHRoZSB3YXkgdG8gcGFzcyBkYXRhIHRvDQpzZXJ2ZXIsIGFuZCBhIOKAnGRpc3BsYXkgYXJlYeKAnSB0byBzaG93IHRoZSBlbmQgdXNlciB0aGUgc2VsZWN0ZWQgZGF0ZS4gIFRoZQ0K4oCcZGlzcGxheSBhcmVh4oCdIGNhbiBiZSBhbnkgSFRNTCBlbGVtZW50LCBzdWNoIGFzIGEgRElWIG9yIGEgU1BBTiBvcg0Kd2hhdGV2ZXIgLS0gd2Ugd2lsbCB1c2UgYSBTUEFOIGluIG91ciBzYW1wbGUuPC9wPg0KPHA+DQo8L3A+DQo8cHJlIGNsYXNzPXZlcmJhdGltPiZsdDtpbnB1dCB0eXBlPSZxdW90O2hpZGRlbiZxdW90OyBuYW1lPSZxdW90O2RhdGUmcXVvdDsgaWQ9JnF1b3Q7Zl9kYXRlX2QmcXVvdDsgLyZndDsNCg0KJmx0O3AmZ3Q7WW91ciBiaXJ0aGRheToNCiAgICZsdDtzcGFuIHN0eWxlPSZxdW90O2JhY2tncm91bmQtY29sb3I6ICNmZjg7IGN1cnNvcjogZGVmYXVsdDsmcXVvdDsNCiAgICAgICAgIG9ubW91c2VvdmVyPSZxdW90O3RoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yPScjZmYwJzsmcXVvdDsNCiAgICAgICAgIG9ubW91c2VvdXQ9JnF1b3Q7dGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3I9JyNmZjgnOyZxdW90Ow0KICAgICAgICAgaWQ9JnF1b3Q7c2hvd19kJnF1b3Q7DQogICAmZ3Q7Q2xpY2sgdG8gb3BlbiBkYXRlIHNlbGVjdG9yJmx0Oy9zcGFuJmd0Oy4mbHQ7L3AmZ3Q7DQoNCiZsdDtzY3JpcHQgdHlwZT0mcXVvdDt0ZXh0L2phdmFzY3JpcHQmcXVvdDsmZ3Q7DQogICAgQ2FsZW5kYXIuc2V0dXAoew0KICAgICAgICBpbnB1dEZpZWxkICAgICA6ICAgICZxdW90O2ZfZGF0ZV9kJnF1b3Q7LA0KICAgICAgICBpZkZvcm1hdCAgICAgICA6ICAgICZxdW90OyVZLyVkLyVtJnF1b3Q7LA0KICAgICAgICBkaXNwbGF5QXJlYSAgICA6ICAgICZxdW90O3Nob3dfZCZxdW90OywNCiAgICAgICAgZGFGb3JtYXQgICAgICAgOiAgICAmcXVvdDslQSwgJUIgJWQsICVZJnF1b3Q7LA0KICAgIH0pOw0KJmx0Oy9zY3JpcHQmZ3Q7DQo8L3ByZT48cD48L3A+DQo8cD4NClRoZSBhYm92ZSBjb2RlIHdpbGwgY29uZmlndXJlIGEgY2FsZW5kYXIgYXR0YWNoZWQgdG8gdGhlIGhpZGRlbiBmaWVsZCBhbmQgdG8NCnRoZSBTUEFOIGhhdmluZyB0aGUgaWQ94oCcc2hvd19k4oCdLiAgV2hlbiB0aGUgU1BBTiBlbGVtZW50IGlzIGNsaWNrZWQsIHRoZQ0KY2FsZW5kYXIgb3BlbnMgYW5kIGFsbG93cyB0aGUgZW5kIHVzZXIgdG8gY2hvc2UgYSBkYXRlLiAgV2hlbiB0aGUgZGF0ZSBpcw0KY2hvc2VuLCB0aGUgaW5wdXQgZmllbGQgd2lsbCBiZSB1cGRhdGVkIHdpdGggdGhlIHZhbHVlIGluIHRoZSBmb3JtYXQNCuKAnDx0dD4lWS8lZC8lbTwvdHQ+4oCdLCBhbmQgdGhlIFNQQU4gZWxlbWVudCB3aWxsIGRpc3BsYXkgdGhlIGRhdGUgaW4gYQ0KZnJpZW5kbGllciBmb3JtYXQgKGRlZmluZWQgYnkg4oCcPHR0PmRhRm9ybWF0PC90dD7igJ0pLjwvcD4NCjxwPg0KQmV3YXJlIHRoYXQgdXNpbmcgdGhpcyBhcHByb2FjaCB3aWxsIG1ha2UgeW91ciBwYWdlIHVuZnVuY3Rpb25hbCBpbiBicm93c2Vycw0KdGhhdCBkbyBub3Qgc3VwcG9ydCBKYXZhU2NyaXB0IG9yIG91ciBjYWxlbmRhci48L3A+DQo8cD4NCjwvcD4NCjxhIG5hbWU9Im5vZGVfc2VjXzMuMS40Ij48L2E+DQo8aDM+PGEgaHJlZj0iI25vZGVfdG9jX25vZGVfc2VjXzMuMS40Ij4zLjEuNCZuYnNwOyZuYnNwOzIgTGlua2VkIGZpZWxkcywgbm8gdHJpZ2dlciBidXR0b25zPC9hPjwvaDM+DQo8cD5TdXBwb3NpbmcgeW91IHdhbnQgdG8gY3JlYXRlIDIgZmllbGRzIHRoYXQgaG9sZCBhbiBpbnRlcnZhbCBvZiBleGFjdGx5IG9uZQ0Kd2Vlay4gIFRoZSBmaXJzdCBpcyB0aGUgc3RhcnRpbmcgZGF0ZSwgYW5kIHRoZSBzZWNvbmQgaXMgdGhlIGVuZGluZyBkYXRlLg0KWW91IHdhbnQgdGhlIGZpZWxkcyB0byBiZSBhdXRvbWF0aWNhbGx5IHVwZGF0ZWQgd2hlbiBzb21lIGRhdGUgaXMgY2xpY2tlZCBpbg0Kb25lIG9yIHRoZSBvdGhlciwgaW4gb3JkZXIgdG8ga2VlcCBleGFjdGx5IG9uZSB3ZWVrIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGVtLjwvcD4NCjxwPg0KPC9wPg0KPHByZSBjbGFzcz12ZXJiYXRpbT4mbHQ7aW5wdXQgdHlwZT0mcXVvdDt0ZXh0JnF1b3Q7IG5hbWU9JnF1b3Q7ZGF0ZSZxdW90OyBpZD0mcXVvdDtmX2RhdGVfYSZxdW90OyAvJmd0Ow0KJmx0O2lucHV0IHR5cGU9JnF1b3Q7dGV4dCZxdW90OyBuYW1lPSZxdW90O2RhdGUmcXVvdDsgaWQ9JnF1b3Q7Zl9jYWxjZGF0ZSZxdW90OyAvJmd0Ow0KDQombHQ7c2NyaXB0IHR5cGU9JnF1b3Q7dGV4dC9qYXZhc2NyaXB0JnF1b3Q7Jmd0Ow0KICAgIGZ1bmN0aW9uIGNhdGNhbGMoY2FsKSB7DQogICAgICAgIHZhciBkYXRlID0gY2FsLmRhdGU7DQogICAgICAgIHZhciB0aW1lID0gZGF0ZS5nZXRUaW1lKCkNCiAgICAgICAgLy8gdXNlIHRoZSBfb3RoZXJfIGZpZWxkDQogICAgICAgIHZhciBmaWVsZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCZxdW90O2ZfY2FsY2RhdGUmcXVvdDspOw0KICAgICAgICBpZiAoZmllbGQgPT0gY2FsLnBhcmFtcy5pbnB1dEZpZWxkKSB7DQogICAgICAgICAgICBmaWVsZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCZxdW90O2ZfZGF0ZV9hJnF1b3Q7KTsNCiAgICAgICAgICAgIHRpbWUgLT0gRGF0ZS5XRUVLOyAvLyBzdWJzdHJhY3Qgb25lIHdlZWsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHRpbWUgKz0gRGF0ZS5XRUVLOyAvLyBhZGQgb25lIHdlZWsNCiAgICAgICAgfQ0KICAgICAgICB2YXIgZGF0ZTIgPSBuZXcgRGF0ZSh0aW1lKTsNCiAgICAgICAgZmllbGQudmFsdWUgPSBkYXRlMi5wcmludCgmcXVvdDslWS0lbS0lZCAlSDolTSZxdW90Oyk7DQogICAgfQ0KICAgIENhbGVuZGFyLnNldHVwKHsNCiAgICAgICAgaW5wdXRGaWVsZCAgICAgOiAgICAmcXVvdDtmX2RhdGVfYSZxdW90OywNCiAgICAgICAgaWZGb3JtYXQgICAgICAgOiAgICAmcXVvdDslWS0lbS0lZCAlSDolTSZxdW90OywNCiAgICAgICAgc2hvd3NUaW1lICAgICAgOiAgICB0cnVlLA0KICAgICAgICB0aW1lRm9ybWF0ICAgICA6ICAgICZxdW90OzI0JnF1b3Q7LA0KICAgICAgICBvblVwZGF0ZSAgICAgICA6ICAgIGNhdGNhbGMNCiAgICB9KTsNCiAgICBDYWxlbmRhci5zZXR1cCh7DQogICAgICAgIGlucHV0RmllbGQgICAgIDogICAgJnF1b3Q7Zl9jYWxjZGF0ZSZxdW90OywNCiAgICAgICAgaWZGb3JtYXQgICAgICAgOiAgICAmcXVvdDslWS0lbS0lZCAlSDolTSZxdW90OywNCiAgICAgICAgc2hvd3NUaW1lICAgICAgOiAgICB0cnVlLA0KICAgICAgICB0aW1lRm9ybWF0ICAgICA6ICAgICZxdW90OzI0JnF1b3Q7LA0KICAgICAgICBvblVwZGF0ZSAgICAgICA6ICAgIGNhdGNhbGMNCiAgICB9KTsNCiZsdDsvc2NyaXB0Jmd0Ow0KPC9wcmU+PHA+PC9wPg0KPHA+DQpUaGUgYWJvdmUgY29kZSB3aWxsIGNvbmZpZ3VyZSAyIGlucHV0IGZpZWxkcyB3aXRoIGNhbGVuZGFycyBhdHRhY2hlZCwgYXMNCnVzdWFsLiAgVGhlIGZpcnN0IHRoaW5nIHRvIG5vdGUgaXMgdGhhdCB0aGVyZSdzIG5vIHRyaWdnZXIgYnV0dG9uIC0tIGluIHN1Y2gNCmNhc2UsIHRoZSBjYWxlbmRhciB3aWxsIHBvcHVwIHdoZW4gb25lIGNsaWNrcyBpbnRvIHRoZSBpbnB1dCBmaWVsZC4gIFVzaW5nDQp0aGUgPHR0Pm9uVXBkYXRlPC90dD4gcGFyYW1ldGVyLCB3ZSBwYXNzIGEgcmVmZXJlbmNlIHRvIGEgZnVuY3Rpb24gb2Ygb3Vycw0KdGhhdCB3aWxsIGdldCBjYWxsZWQgYWZ0ZXIgYSBkYXRlIHdhcyBzZWxlY3RlZC4gIEluIHRoYXQgZnVuY3Rpb24gd2UNCmRldGVybWluZSB3aGF0IGZpZWxkIHdhcyB1cGRhdGVkIGFuZCB3ZSBjb21wdXRlIHRoZSBkYXRlIGluIHRoZSBvdGhlciBpbnB1dA0KZmllbGQgc3VjaCB0aGF0IGl0IGtlZXBzIGEgb25lIHdlZWsgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSB0d28uICBFbmpveSEgOi0pPC9wPg0KPHA+DQo8L3A+DQo8YSBuYW1lPSJub2RlX3NlY18zLjIiPjwvYT4NCjxoMj48YSBocmVmPSIjbm9kZV90b2Nfbm9kZV9zZWNfMy4yIj4zLjImbmJzcDsmbmJzcDtGbGF0IGNhbGVuZGFyczwvYT48L2gyPg0KPHA+VGhpcyBzYW1wbGUgY2FuIGJlIGZvdW5kIGluIOKAnDx0dD5zaW1wbGUtMi5odG1sPC90dD7igJ0uICBJdCB3aWxsIGNvbmZpZ3VyZSBhDQpmbGF0IGNhbGVuZGFyIHRoYXQgaXMgYWx3YXlzIGRpc3BsYXllZCBpbiB0aGUgcGFnZSwgaW4gdGhlIERJViBoYXZpbmcgdGhlDQppZD3igJxjYWxlbmRhci1jb250YWluZXLigJ0uICBXaGVuIGEgZGF0ZSBpcyBjbGlja2VkIG91ciBmdW5jdGlvbiBoYW5kZXIgZ2V0cw0KY2FsbGVkICg8dHQ+ZGF0ZUNoYW5nZWQ8L3R0PikgYW5kIGl0IHdpbGwgY29tcHV0ZSBhbiBVUkwgdG8ganVtcCB0byBiYXNlZCBvbg0KdGhlIHNlbGVjdGVkIGRhdGUsIHRoZW4gdXNlIDx0dD53aW5kb3cubG9jYXRpb248L3R0PiB0byB2aXNpdCB0aGUgbmV3IGxpbmsuPC9wPg0KPHA+DQo8L3A+DQo8cHJlIGNsYXNzPXZlcmJhdGltPiZsdDtkaXYgc3R5bGU9JnF1b3Q7ZmxvYXQ6IHJpZ2h0OyBtYXJnaW4tbGVmdDogMWVtOyBtYXJnaW4tYm90dG9tOiAxZW07JnF1b3Q7DQppZD0mcXVvdDtjYWxlbmRhci1jb250YWluZXImcXVvdDsmZ3Q7Jmx0Oy9kaXYmZ3Q7DQoNCiZsdDtzY3JpcHQgdHlwZT0mcXVvdDt0ZXh0L2phdmFzY3JpcHQmcXVvdDsmZ3Q7DQogIGZ1bmN0aW9uIGRhdGVDaGFuZ2VkKGNhbGVuZGFyKSB7DQogICAgLy8gQmV3YXJlIHRoYXQgdGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgZXZlbiBpZiB0aGUgZW5kLXVzZXIgb25seQ0KICAgIC8vIGNoYW5nZWQgdGhlIG1vbnRoL3llYXIuICBJbiBvcmRlciB0byBkZXRlcm1pbmUgaWYgYSBkYXRlIHdhcw0KICAgIC8vIGNsaWNrZWQgeW91IGNhbiB1c2UgdGhlIGRhdGVDbGlja2VkIHByb3BlcnR5IG9mIHRoZSBjYWxlbmRhcjoNCiAgICBpZiAoY2FsZW5kYXIuZGF0ZUNsaWNrZWQpIHsNCiAgICAgIC8vIE9LLCBhIGRhdGUgd2FzIGNsaWNrZWQsIHJlZGlyZWN0IHRvIC95eXl5L21tL2RkL2luZGV4LnBocA0KICAgICAgdmFyIHkgPSBjYWxlbmRhci5kYXRlLmdldEZ1bGxZZWFyKCk7DQogICAgICB2YXIgbSA9IGNhbGVuZGFyLmRhdGUuZ2V0TW9udGgoKTsgICAgIC8vIGludGVnZXIsIDAuLjExDQogICAgICB2YXIgZCA9IGNhbGVuZGFyLmRhdGUuZ2V0RGF0ZSgpOyAgICAgIC8vIGludGVnZXIsIDEuLjMxDQogICAgICAvLyByZWRpcmVjdC4uLg0KICAgICAgd2luZG93LmxvY2F0aW9uID0gJnF1b3Q7LyZxdW90OyArIHkgKyAmcXVvdDsvJnF1b3Q7ICsgbSArICZxdW90Oy8mcXVvdDsgKyBkICsgJnF1b3Q7L2luZGV4LnBocCZxdW90OzsNCiAgICB9DQogIH07DQoNCiAgQ2FsZW5kYXIuc2V0dXAoDQogICAgew0KICAgICAgZmxhdCAgICAgICAgIDogJnF1b3Q7Y2FsZW5kYXItY29udGFpbmVyJnF1b3Q7LCAvLyBJRCBvZiB0aGUgcGFyZW50IGVsZW1lbnQNCiAgICAgIGZsYXRDYWxsYmFjayA6IGRhdGVDaGFuZ2VkICAgICAgICAgICAvLyBvdXIgY2FsbGJhY2sgZnVuY3Rpb24NCiAgICB9DQogICk7DQombHQ7L3NjcmlwdCZndDsNCjwvcHJlPjxwPjwvcD4NCjxwPg0KPC9wPg0KPGEgbmFtZT0ibm9kZV9zZWNfMy4zIj48L2E+DQo8aDI+PGEgaHJlZj0iI25vZGVfdG9jX25vZGVfc2VjXzMuMyI+My4zJm5ic3A7Jm5ic3A7SGlnaGxpZ2h0IHNwZWNpYWwgZGF0ZXM8L2E+PC9oMj4NCjxwPlNvIHlvdSB3YW50IHRvIGRpc3BsYXkgY2VydGFpbiBkYXRlcyBpbiBhIGRpZmZlcmVudCBjb2xvciwgb3Igd2l0aCBib2xkDQpmb250LCBvciB3aGF0ZXZlciwgcmlnaHQ\",
    "size": "79065"
}