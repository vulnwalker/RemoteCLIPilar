{
    "namaFile": "js\/perencanaanAset\/rkbmdPengelola\/rkbmdPersediaanPengelola.js",
    "lastUpdate": "2018-10-22+10:04:19.45",
    "contentFile": "\/IikpIHsKCQkJdmFyIGNvdmVyID0gdGhpcy5wcmVmaXggKyAiX2hhcHVzY292ZXIiOwoJCQlhZGRDb3ZlclBhZ2UyKGNvdmVyLCAxLCB0cnVlLCBmYWxzZSk7CgkJCSQuYWpheCh7CgkJCQl0eXBlOiAiUE9TVCIsCgkJCQlkYXRhOiB7CgkJCQkJaWRBbmdnYXJhbiA6IGlkQW5nZ2FyYW4KCQkJCX0sCgkJCQl1cmw6IHRoaXMudXJsICsgIiZ0aXBlPXJlbW92ZUtvcmVrc2kiLAoJCQkJc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewoJCQkJCXZhciByZXNwID0gZXZhbCgiKCIgKyBkYXRhICsgIikiKTsKCQkJCQlkZWxFbGVtKGNvdmVyKTsKCQkJCQlpZiAocmVzcC5lcnIgPT0gIiIpIHsKCQkJCQkJbWUuZGFmdGFyUmVuZGVyKHRydWUpOwoJCQkJCX0gZWxzZSB7CgkJCQkJCWFsZXJ0KHJlc3AuZXJyKTsKCQkJCQl9CgkJCQl9CgkJCX0pOwoJCX0KCX0KfSk7Cg==",
    "size": "13792"
}