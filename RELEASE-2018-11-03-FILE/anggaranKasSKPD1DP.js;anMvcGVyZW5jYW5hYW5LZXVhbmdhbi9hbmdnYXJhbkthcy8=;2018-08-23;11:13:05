{
    "namaFile": "js\/perencanaanKeuangan\/anggaranKas\/anggaranKasSKPD1DP.js",
    "lastUpdate": "2018-08-23+11:13:05.82",
    "contentFile": "dmFyIGFuZ2dhcmFuS2FzU0tQRDFEUEZpbHRlclNLUEQgPSBuZXcgU2twZENscyh7CiAgcHJlZml4OiAiYW5nZ2FyYW5LYXNTS1BEMURQIiwKICBmb3JtTmFtZTogImFuZ2dhcmFuS2FzU0tQRDFEUEZvcm0iLAoKICBwaWxpaFVydXNhbmZ0ZXI6IGZ1bmN0aW9uKCkgewogICAgLy8gcmthU0tQRDIxLnJlZnJlc2hMaXN0KHRydWUpOwogICAgYW5nZ2FyYW5LYXNTS1BEMURQLmZpbHRlclJlbmRlcigpOwogIH0sCiAgcGlsaWhCaWRhbmdBZnRlcjogZnVuY3Rpb24oKSB7CiAgICBhbmdnYXJhbkthc1NLUEQxRFAuZmlsdGVyUmVuZGVyKCk7CiAgfSwKICBwaWxpaFVuaXRBZnRlcjogZnVuY3Rpb24oKSB7CiAgICBhbmdnYXJhbkthc1NLUEQxRFAuZmlsdGVyUmVuZGVyKCk7CiAgfSwKICBwaWxpaFN1YlVuaXRBZnRlcjogZnVuY3Rpb24oKSB7CiAgICBhbmdnYXJhbkthc1NLUEQxRFAuZmlsdGVyUmVuZGVyKCk7CiAgfSwKICBwaWxpaFNla3NpQWZ0ZXI6IGZ1bmN0aW9uKCkgewogICAgYW5nZ2FyYW5LYXNTS1BEMURQLmZpbHRlclJlbmRlcigpOwogIH0sCiAgcHJvZ3JhbUNoYW5nZWQ6IGZ1bmN0aW9uKCkgewogICAgLy8gcmthU0tQRDIxLnJlZnJlc2hMaXN0KHRydWUpOwogICAgYW5nZ2FyYW5LYXNTS1BEMURQLmZpbHRlclJlbmRlcigpOwogIH0KfSk7CnZhciBhbmdnYXJhbkthc1NLUEQxRFAgPSBuZXcgRGFmdGFyT2JqMih7CiAgcHJlZml4OiAiYW5nZ2FyYW5LYXNTS1BEMURQIiwKICB1cmw6ICJwZ0tldS5waHA\\",
    "size": "19886"
}