{
    "namaFile": "js\/cekbi.js",
    "lastUpdate": "2018-04-19+12:07:13.54",
    "contentFile": "dmFyIENla2JpU2twZCA9IG5ldyBTa3BkQ2xzKHsKCXByZWZpeCA6ICdDZWtiaVNrcGQnLCBmb3JtTmFtZTonYWRtaW5Gb3JtJwp9KTsKCgoKdmFyIENla2JpID0gbmV3IERhZnRhck9iajIoewoJcHJlZml4IDogJ0Nla2JpJywKCXVybCA6ICdwYWdlcy5waHA\",
    "size": "16172"
}