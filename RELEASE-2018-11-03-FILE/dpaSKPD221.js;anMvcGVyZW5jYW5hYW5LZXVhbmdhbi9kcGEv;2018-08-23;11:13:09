{
    "namaFile": "js\/perencanaanKeuangan\/dpa\/dpaSKPD221.js",
    "lastUpdate": "2018-08-23+11:13:09.37",
    "contentFile": "var dpaSKPD221FilterSKPD = new SkpdCls({
  prefix: "dpaSKPD221",
  formName: "dpaSKPD221Form",

  pilihUrusanfter: function() {
    // dpaSKPD221.refreshList(true);
    dpaSKPD221.filterRender();
  },
  pilihBidangAfter: function() {
    // dpaSKPD221.refreshList(true);
    dpaSKPD221.filterRender();
  },
  pilihUnitAfter: function() {
    // dpaSKPD221.refreshList(true);
    dpaSKPD221.filterRender();
  },
  pilihSubUnitAfter: function() {
    // dpaSKPD221.refreshList(true);
    dpaSKPD221.filterRender();
  },
  pilihSeksiAfter: function() {
    // dpaSKPD221.refreshList(true);
    dpaSKPD221.filterRender();
  },
  programChanged: function() {
    // rkaSKPD221.refreshList(true);
    dpaSKPD221.filterRender();
  }
});
var dpaSKPD221 = new DaftarObj2({
  prefix: "dpaSKPD221",
  url: "pgKeu.php?Pg=dpaSKPD221",
  formName: "dpaSKPD221Form",
  dpaSKPD221_form: "0", //default js dpaSKPD221
  loading: function() {
    //alert('loading');
    this.topBarRender();
    this.filterRender();
    this.daftarRender();
    this.sumHalRender();
  },
  topBarRender: function(){
    var me=this;
    //render subtitle
    $.ajax({
      url: this.url+'&tipe=subtitle',
      type:'POST',
      data:$('#'+this.formName).serialize(),
      success: function(data) {
        var resp = eval('(' + data + ')');
        document.getElementById(me.prefix+'_cont_title').innerHTML = resp.content;
        me.topBarRenderAfter()
      }
    });
  },
  filterRenderAfter: function() {
    if($("#filterBelanja").val() != ''){
      this.filterTotalBelanja();
    }else{
      $("#spanTotalBelanja").text("");
    }
  },
  filterTotalBelanja: function(){
    $.ajax({
      url: this.url + "&tipe=filterTotalBelanja",
      type: "POST",
      data: $("#" + this.formName).serialize(),
      success: function(data) {
        var resp = eval("(" + data + ")");
        $("#spanTotalBelanja").text(resp.content.totalBelanja);
      }
    });
  },
  detail: function() {
    var me = this;
    errmsg = this.CekCheckbox();
    if (errmsg == "") {
      var box = this.GetCbxChecked();
    } else {
      alert(errmsg);
    }
  },
  daftarRender: function() {
    var me = this; //render daftar
    addCoverPage2("daftar_cover", 1, true, true, {
      renderTo: this.prefix + "_cont_daftar",
      imgsrc: "images/wait.gif",
      style: { position: "absolute", top: "5", left: "5" }
    });
    $.ajax({
      url: this.url + "&tipe=daftar",
      type: "POST",
      data: $("#" + this.formName).serialize(),
      success: function(data) {
        var resp = eval("(" + data + ")");
        document.getElementById(me.prefix + "_cont_daftar").innerHTML =
          resp.content;
        me.sumHalRender();
      }
    });
  },
  checkPaguIndikatif: function() {
    var me = this;
    var err = "";
    if($("#filterUrusan").val() == '00'){
      err = "Pilih Urusan";
    }else if($("#filterBidang").val() == '00'){
      err = "Pilih Bidang";
    }else if($("#filterSKPD").val() == '00'){
      err = "Pilih SKPD";
    }else if($("#filterConcatProgram").val() == ''){
      err = "Pilih Program";
    }else if($("#filterQ").val() == ''){
      err = "Pilih Kegiatan";
    }
    if(err == ""){
      var cover = this.prefix + "_formcover";
      addCoverPage2(cover, 999, true, false);
      $.ajax({
        type: "POST",
        data:$('#'+this.formName).serialize(),
        url: this.url + "&tipe=checkPaguIndikatif",
        success: function(data) {
          delElem(cover);
          var resp = eval("(" + data + ")");
          if (resp.err == "") {
            $("#filterPaguIndikatif").val(resp.content.filterPaguIndikatif);
            $("#filterSisaPaguIndikatif").val(resp.content.filterSisaPaguIndikatif);
            $("#filterTotalBelanja").val(resp.content.filterTotalBelanja);
          } else {
            alert(resp.err);
          }
        }
      });
    }else{
      alert(err);
    }
  },
  Baru: function(){
    var me = this;

  		errmsg = '';

  		if($("#filterUrusan").val() == '00'){
  			errmsg = "Pilih Urusan";
  		}else if($("#filterSKPD").val() == '00'){
  			errmsg = "Pilih Bidang";
  		}else if($("#filterSKPD").val() == '00'){
  			errmsg = "Pilih SKPD";
  		}else if($("#filterConcatProgram").val() == ''){
  			errmsg = "Pilih Program";
  		}else if($("#filterQ").val() == ''){
  			errmsg = "Pilih Kegiatan";
  		}
  		if(errmsg ==''){
  			var me = this;
  			var aForm = document.getElementById(this.formName);
  			$.ajax({
  			  url: this.url+'&tipe=Baru',
  			  type : 'POST',
  			  data:$('#'+this.formName).serialize(),
  			  success: function(data) {
  					var resp = eval('(' + data + ')');
  					if(resp.err == "") {
              $("#newBlankPage").val();
  						aForm.action= 'pgKeu.php?Pg=dpaSKPD221Ins';
  						aForm.target='_blank';
  						aForm.submit();
  						aForm.target='';
  					}else{
  						alert(resp.err);
  					}
  			  }
  			});
  		}else{
  				alert(errmsg);
  		}
	},
  newBlankPage: function(){
    var me = this;

  		errmsg = '';

  		if($("#filterUrusan").val() == '00'){
  			errmsg = "Pilih Urusan";
  		}else if($("#filterSKPD").val() == '00'){
  			errmsg = "Pilih Bidang";
  		}else if($("#filterSKPD").val() == '00'){
  			errmsg = "Pilih SKPD";
  		}else if($("#filterConcatProgram").val() == ''){
  			errmsg = "Pilih Program";
  		}else if($("#filterQ").val() == ''){
  			errmsg = "Pilih Kegiatan";
  		}
  		if(errmsg ==''){
  			var me = this;
  			var aForm = document.getElementById(this.formName);
  			$.ajax({
  			  url: this.url+'&tipe=newBlankPage',
  			  type : 'POST',
  			  data:$('#'+this.formName).serialize(),
  			  success: function(data) {
  					var resp = eval('(' + data + ')');
  					if(resp.err == "") {
              $("#newBlankPage").val('1');
  						aForm.action= 'pgKeu.php?Pg=dpaSKPD221Ins';
  						aForm.target='_blank';
  						aForm.submit();
  						aForm.target='';
  					}else{
  						alert(resp.err);
  					}
  			  }
  			});
  		}else{
  				alert(errmsg);
  		}
	},
  Info: function() {
    var me = this;
    var cover = this.prefix + "_formcover";
    $.ajax({
      type: "POST",
      url: this.url + "&tipe=Info",
      success: function(data) {
        var resp = eval("(" + data + ")");
        if (resp.err == "") {
          document.body.style.overflow = "hidden";
          addCoverPage2(cover, 999, true, false);
          document.getElementById(cover).innerHTML = resp.content;
        } else {
          alert(resp.err);
        }
      }
    });
  },

  Cari: function() {
    popupBarang.kodeBarang = "kodeBarang";
    popupBarang.namaBarang = "namaBarang";
    popupBarang.satuanBarang = "satuan";
    popupBarang.windowShow();
  },
  Edit: function() {
    var me = this;
    errmsg = this.CekCheckbox();
    if (errmsg == "") {
      var box = this.GetCbxChecked();
      var aForm = document.getElementById(this.formName);
      $.ajax({
        url: this.url + "&tipe=editTab",
        type: "POST",
        data: $("#" + this.formName).serialize(),
        success: function(data) {
          var resp = eval("(" + data + ")");
          if (resp.err == "") {
            var IDrenja = Number(resp.content.idrenja);
            aForm.action =
              "pgKeu.php\",
    "size": "27810"
}