{
    "namaFile": "lib\/PHPExcel\/Classes\/PHPExcel\/Cell\/AdvancedValueBinder.php",
    "lastUpdate": "2017-12-25+01:39:38.00",
    "contentFile": "PD9waHAKCi8qKiBQSFBFeGNlbCByb290IGRpcmVjdG9yeSAqLwppZiAoIWRlZmluZWQoJ1BIUEVYQ0VMX1JPT1QnKSkgewogICAgLyoqCiAgICAgKiBAaWdub3JlCiAgICAgKi8KICAgIGRlZmluZSgnUEhQRVhDRUxfUk9PVCcsIGRpcm5hbWUoX19GSUxFX18pIC4gJy8uLi8uLi8nKTsKICAgIHJlcXVpcmUoUEhQRVhDRUxfUk9PVCAuICdQSFBFeGNlbC9BdXRvbG9hZGVyLnBocCcpOwp9CgovKioKICogUEhQRXhjZWxfQ2VsbF9BZHZhbmNlZFZhbHVlQmluZGVyCiAqCiAqIENvcHlyaWdodCAoYykgMjAwNiAtIDIwMTUgUEhQRXhjZWwKICoKICogVGhpcyBsaWJyYXJ5IGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vcgogKiBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCiAqIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlcgogKiB2ZXJzaW9uIDIuMSBvZiB0aGUgTGljZW5zZSwgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KICoKICogVGhpcyBsaWJyYXJ5IGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUgR05VCiAqIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuCiAqCiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMKICogTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgbGlicmFyeTsgaWYgbm90LCB3cml0ZSB0byB0aGUgRnJlZSBTb2Z0d2FyZQogKiBGb3VuZGF0aW9uLCBJbmMuLCA1MSBGcmFua2xpbiBTdHJlZXQsIEZpZnRoIEZsb29yLCBCb3N0b24sIE1BICAwMjExMC0xMzAxICBVU0EKICoKICogQGNhdGVnb3J5ICAgUEhQRXhjZWwKICogQHBhY2thZ2UgICAgUEhQRXhjZWxfQ2VsbAogKiBAY29weXJpZ2h0ICBDb3B5cmlnaHQgKGMpIDIwMDYgLSAyMDE1IFBIUEV4Y2VsIChodHRwOi8vd3d3LmNvZGVwbGV4LmNvbS9QSFBFeGNlbCkKICogQGxpY2Vuc2UgICAgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL29sZC1saWNlbnNlcy9sZ3BsLTIuMS50eHQgICAgTEdQTAogKiBAdmVyc2lvbiAgICAjI1ZFUlNJT04jIywgIyNEQVRFIyMKICovCmNsYXNzIFBIUEV4Y2VsX0NlbGxfQWR2YW5jZWRWYWx1ZUJpbmRlciBleHRlbmRzIFBIUEV4Y2VsX0NlbGxfRGVmYXVsdFZhbHVlQmluZGVyIGltcGxlbWVudHMgUEhQRXhjZWxfQ2VsbF9JVmFsdWVCaW5kZXIKewogICAgLyoqCiAgICAgKiBCaW5kIHZhbHVlIHRvIGEgY2VsbAogICAgICoKICAgICAqIEBwYXJhbSAgUEhQRXhjZWxfQ2VsbCAgJGNlbGwgIENlbGwgdG8gYmluZCB2YWx1ZSB0bwogICAgICogQHBhcmFtICBtaXhlZCAkdmFsdWUgICAgICAgICAgVmFsdWUgdG8gYmluZCBpbiBjZWxsCiAgICAgKiBAcmV0dXJuIGJvb2xlYW4KICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGJpbmRWYWx1ZShQSFBFeGNlbF9DZWxsICRjZWxsLCAkdmFsdWUgPSBudWxsKQogICAgewogICAgICAgIC8vIHNhbml0aXplIFVURi04IHN0cmluZ3MKICAgICAgICBpZiAoaXNfc3RyaW5nKCR2YWx1ZSkpIHsKICAgICAgICAgICAgJHZhbHVlID0gUEhQRXhjZWxfU2hhcmVkX1N0cmluZzo6U2FuaXRpemVVVEY4KCR2YWx1ZSk7CiAgICAgICAgfQoKICAgICAgICAvLyBGaW5kIG91dCBkYXRhIHR5cGUKICAgICAgICAkZGF0YVR5cGUgPSBwYXJlbnQ6OmRhdGFUeXBlRm9yVmFsdWUoJHZhbHVlKTsKCiAgICAgICAgLy8gU3R5bGUgbG9naWMgLSBzdHJpbmdzCiAgICAgICAgaWYgKCRkYXRhVHlwZSA9PT0gUEhQRXhjZWxfQ2VsbF9EYXRhVHlwZTo6VFlQRV9TVFJJTkcgJiYgISR2YWx1ZSBpbnN0YW5jZW9mIFBIUEV4Y2VsX1JpY2hUZXh0KSB7CiAgICAgICAgICAgIC8vICAgIFRlc3QgZm9yIGJvb2xlYW5zIHVzaW5nIGxvY2FsZS1zZXR0aW5nCiAgICAgICAgICAgIGlmICgkdmFsdWUgPT0gUEhQRXhjZWxfQ2FsY3VsYXRpb246OmdldFRSVUUoKSkgewogICAgICAgICAgICAgICAgJGNlbGwtPnNldFZhbHVlRXhwbGljaXQodHJ1ZSwgUEhQRXhjZWxfQ2VsbF9EYXRhVHlwZTo6VFlQRV9CT09MKTsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICB9IGVsc2VpZiAoJHZhbHVlID09IFBIUEV4Y2VsX0NhbGN1bGF0aW9uOjpnZXRGQUxTRSgpKSB7CiAgICAgICAgICAgICAgICAkY2VsbC0+c2V0VmFsdWVFeHBsaWNpdChmYWxzZSwgUEhQRXhjZWxfQ2VsbF9EYXRhVHlwZTo6VFlQRV9CT09MKTsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBDaGVjayBmb3IgbnVtYmVyIGluIHNjaWVudGlmaWMgZm9ybWF0CiAgICAgICAgICAgIGlmIChwcmVnX21hdGNoKCcvXicuUEhQRXhjZWxfQ2FsY3VsYXRpb246OkNBTENVTEFUSU9OX1JFR0VYUF9OVU1CRVIuJyQvJywgJHZhbHVlKSkgewogICAgICAgICAgICAgICAgJGNlbGwtPnNldFZhbHVlRXhwbGljaXQoKGZsb2F0KSAkdmFsdWUsIFBIUEV4Y2VsX0NlbGxfRGF0YVR5cGU6OlRZUEVfTlVNRVJJQyk7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gQ2hlY2sgZm9yIGZyYWN0aW9uCiAgICAgICAgICAgIGlmIChwcmVnX21hdGNoKCcvXihbKy1dPylccyooWzAtOV0rKVxzP1wvXHMqKFswLTldKykkLycsICR2YWx1ZSwgJG1hdGNoZXMpKSB7CiAgICAgICAgICAgICAgICAvLyBDb252ZXJ0IHZhbHVlIHRvIG51bWJlcgogICAgICAgICAgICAgICAgJHZhbHVlID0gJG1hdGNoZXNbMl0gLyAkbWF0Y2hlc1szXTsKICAgICAgICAgICAgICAgIGlmICgkbWF0Y2hlc1sxXSA9PSAnLScpIHsKICAgICAgICAgICAgICAgICAgICAkdmFsdWUgPSAwIC0gJHZhbHVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgJGNlbGwtPnNldFZhbHVlRXhwbGljaXQoKGZsb2F0KSAkdmFsdWUsIFBIUEV4Y2VsX0NlbGxfRGF0YVR5cGU6OlRZUEVfTlVNRVJJQyk7CiAgICAgICAgICAgICAgICAvLyBTZXQgc3R5bGUKICAgICAgICAgICAgICAgICRjZWxsLT5nZXRXb3Jrc2hlZXQoKS0+Z2V0U3R5bGUoJGNlbGwtPmdldENvb3JkaW5hdGUoKSkKICAgICAgICAgICAgICAgICAgICAtPmdldE51bWJlckZvcm1hdCgpLT5zZXRGb3JtYXRDb2RlKCc\/Py8\/PycpOwogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0gZWxzZWlmIChwcmVnX21hdGNoKCcvXihbKy1dPykoWzAtOV0qKSArKFswLTldKilccz9cL1xzKihbMC05XSopJC8nLCAkdmFsdWUsICRtYXRjaGVzKSkgewogICAgICAgICAgICAgICAgLy8gQ29udmVydCB2YWx1ZSB0byBudW1iZXIKICAgICAgICAgICAgICAgICR2YWx1ZSA9ICRtYXRjaGVzWzJdICsgKCRtYXRjaGVzWzNdIC8gJG1hdGNoZXNbNF0pOwogICAgICAgICAgICAgICAgaWYgKCRtYXRjaGVzWzFdID09ICctJykgewogICAgICAgICAgICAgICAgICAgICR2YWx1ZSA9IDAgLSAkdmFsdWU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAkY2VsbC0+c2V0VmFsdWVFeHBsaWNpdCgoZmxvYXQpICR2YWx1ZSwgUEhQRXhjZWxfQ2VsbF9EYXRhVHlwZTo6VFlQRV9OVU1FUklDKTsKICAgICAgICAgICAgICAgIC8vIFNldCBzdHlsZQogICAgICAgICAgICAgICAgJGNlbGwtPmdldFdvcmtzaGVldCgpLT5nZXRTdHlsZSgkY2VsbC0+Z2V0Q29vcmRpbmF0ZSgpKQogICAgICAgICAgICAgICAgICAgIC0+Z2V0TnVtYmVyRm9ybWF0KCktPnNldEZvcm1hdENvZGUoJyMgPz8vPz8nKTsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBDaGVjayBmb3IgcGVyY2VudGFnZQogICAgICAgICAgICBpZiAocHJlZ19tYXRjaCgnL15cLT9bMC05XSpcLj9bMC05XSpccz9cJSQvJywgJHZhbHVlKSkgewogICAgICAgICAgICAgICAgLy8gQ29udmVydCB2YWx1ZSB0byBudW1iZXIKICAgICAgICAgICAgICAgICR2YWx1ZSA9IChmbG9hdCkgc3RyX3JlcGxhY2UoJyUnLCAnJywgJHZhbHVlKSAvIDEwMDsKICAgICAgICAgICAgICAgICRjZWxsLT5zZXRWYWx1ZUV4cGxpY2l0KCR2YWx1ZSwgUEhQRXhjZWxfQ2VsbF9EYXRhVHlwZTo6VFlQRV9OVU1FUklDKTsKICAgICAgICAgICAgICAgIC8vIFNldCBzdHlsZQogICAgICAgICAgICAgICAgJGNlbGwtPmdldFdvcmtzaGVldCgpLT5nZXRTdHlsZSgkY2VsbC0+Z2V0Q29vcmRpbmF0ZSgpKQogICAgICAgICAgICAgICAgICAgIC0+Z2V0TnVtYmVyRm9ybWF0KCktPnNldEZvcm1hdENvZGUoUEhQRXhjZWxfU3R5bGVfTnVtYmVyRm9ybWF0OjpGT1JNQVRfUEVSQ0VOVEFHRV8wMCk7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gQ2hlY2sgZm9yIGN1cnJlbmN5CiAgICAgICAgICAgICRjdXJyZW5jeUNvZGUgPSBQSFBFeGNlbF9TaGFyZWRfU3RyaW5nOjpnZXRDdXJyZW5jeUNvZGUoKTsKICAgICAgICAgICAgJGRlY2ltYWxTZXBhcmF0b3IgPSBQSFBFeGNlbF9TaGFyZWRfU3RyaW5nOjpnZXREZWNpbWFsU2VwYXJhdG9yKCk7CiAgICAgICAgICAgICR0aG91c2FuZHNTZXBhcmF0b3IgPSBQSFBFeGNlbF9TaGFyZWRfU3RyaW5nOjpnZXRUaG91c2FuZHNTZXBhcmF0b3IoKTsKICAgICAgICAgICAgaWYgKHByZWdfbWF0Y2goJy9eJy5wcmVnX3F1b3RlKCRjdXJyZW5jeUNvZGUpLicgKihcZHsxLDN9KCcucHJlZ19xdW90ZSgkdGhvdXNhbmRzU2VwYXJhdG9yKS4nXGR7M30pKnwoXGQrKSkoJy5wcmVnX3F1b3RlKCRkZWNpbWFsU2VwYXJhdG9yKS4nXGR7Mn0pPyQvJywgJHZhbHVlKSkgewogICAgICAgICAgICAgICAgLy8gQ29udmVydCB2YWx1ZSB0byBudW1iZXIKICAgICAgICAgICAgICAgICR2YWx1ZSA9IChmbG9hdCkgdHJpbShzdHJfcmVwbGFjZShhcnJheSgkY3VycmVuY3lDb2RlLCAkdGhvdXNhbmRzU2VwYXJhdG9yLCAkZGVjaW1hbFNlcGFyYXRvciksIGFycmF5KCcnLCAnJywgJy4nKSwgJHZhbHVlKSk7CiAgICAgICAgICAgICAgICAkY2VsbC0+c2V0VmFsdWVFeHBsaWNpdCgkdmFsdWUsIFBIUEV4Y2VsX0NlbGxfRGF0YVR5cGU6OlRZUEVfTlVNRVJJQyk7CiAgICAgICAgICAgICAgICAvLyBTZXQgc3R5bGUKICAgICAgICAgICAgICAgICRjZWxsLT5nZXRXb3Jrc2hlZXQoKS0+Z2V0U3R5bGUoJGNlbGwtPmdldENvb3JkaW5hdGUoKSkKICAgICAgICAgICAgICAgICAgICAtPmdldE51bWJlckZvcm1hdCgpLT5zZXRGb3JtYXRDb2RlKAogICAgICAgICAgICAgICAgICAgICAgICBzdHJfcmVwbGFjZSgnJCcsICRjdXJyZW5jeUNvZGUsIFBIUEV4Y2VsX1N0eWxlX051bWJlckZvcm1hdDo6Rk9STUFUX0NVUlJFTkNZX1VTRF9TSU1QTEUpCiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICB9IGVsc2VpZiAocHJlZ19tYXRjaCgnL15cJCAqKFxkezEsM30oXCxcZHszfSkqfChcZCspKShcLlxkezJ9KT8kLycsICR2YWx1ZSkpIHsKICAgICAgICAgICAgICAgIC8vIENvbnZlcnQgdmFsdWUgdG8gbnVtYmVyCiAgICAgICAgICAgICAgICAkdmFsdWUgPSAoZmxvYXQpIHRyaW0oc3RyX3JlcGxhY2UoYXJyYXkoJyQnLCcsJyksICcnLCAkdmFsdWUpKTsKICAgICAgICAgICAgICAgICRjZWxsLT5zZXRWYWx1ZUV4cGxpY2l0KCR2YWx1ZSwgUEhQRXhjZWxfQ2VsbF9EYXRhVHlwZTo6VFlQRV9OVU1FUklDKTsKICAgICAgICAgICAgICAgIC8vIFNldCBzdHlsZQogICAgICAgICAgICAgICAgJGNlbGwtPmdldFdvcmtzaGVldCgpLT5nZXRTdHlsZSgkY2VsbC0+Z2V0Q29vcmRpbmF0ZSgpKQogICAgICAgICAgICAgICAgICAgIC0+Z2V0TnVtYmVyRm9ybWF0KCktPnNldEZvcm1hdENvZGUoUEhQRXhjZWxfU3R5bGVfTnVtYmVyRm9ybWF0OjpGT1JNQVRfQ1VSUkVOQ1lfVVNEX1NJTVBMRSk7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gQ2hlY2sgZm9yIHRpbWUgd2l0aG91dCBzZWNvbmRzIGUuZy4gJzk6NDUnLCAnMDk6NDUnCiAgICAgICAgICAgIGlmIChwcmVnX21hdGNoKCcvXihcZHxbMC0xXVxkfDJbMC0zXSk6WzAtNV1cZCQvJywgJHZhbHVlKSkgewogICAgICAgICAgICAgICAgLy8gQ29udmVydCB2YWx1ZSB0byBudW1iZXIKICAgICAgICAgICAgICAgIGxpc3QoJGgsICRtKSA9IGV4cGxvZGUoJzonLCAkdmFsdWUpOwogICAgICAgICAgICAgICAgJGRheXMgPSAkaCAvIDI0ICsgJG0gLyAxNDQwOwogICAgICAgICAgICAgICAgJGNlbGwtPnNldFZhbHVlRXhwbGljaXQoJGRheXMsIFBIUEV4Y2VsX0NlbGxfRGF0YVR5cGU6OlRZUEVfTlVNRVJJQyk7CiAgICAgICAgICAgICAgICAvLyBTZXQgc3R5bGUKICAgICAgICAgICAgICAgICRjZWxsLT5nZXRXb3Jrc2hlZXQoKS0+Z2V0U3R5bGUoJGNlbGwtPmdldENvb3JkaW5hdGUoKSkKICAgICAgICAgICAgICAgICAgICAtPmdldE51bWJlckZvcm1hdCgpLT5zZXRGb3JtYXRDb2RlKFBIUEV4Y2VsX1N0eWxlX051bWJlckZvcm1hdDo6Rk9STUFUX0RBVEVfVElNRTMpOwogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIENoZWNrIGZvciB0aW1lIHdpdGggc2Vjb25kcyAnOTo0NTo1OScsICcwOTo0NTo1OScKICAgICAgICAgICAgaWYgKHByZWdfbWF0Y2goJy9eKFxkfFswLTFdXGR8MlswLTNdKTpbMC01XVxkOlswLTVdXGQkLycsICR2YWx1ZSkpIHsKICAgICAgICAgICAgICAgIC8vIENvbnZlcnQgdmFsdWUgdG8gbnVtYmVyCiAgICAgICAgICAgICAgICBsaXN0KCRoLCAkbSwgJHMpID0gZXhwbG9kZSgnOicsICR2YWx1ZSk7CiAgICAgICAgICAgICAgICAkZGF5cyA9ICRoIC8gMjQgKyAkbSAvIDE0NDAgKyAkcyAvIDg2NDAwOwogICAgICAgICAgICAgICAgLy8gQ29udmVydCB2YWx1ZSB0byBudW1iZXIKICAgICAgICAgICAgICAgICRjZWxsLT5zZXRWYWx1ZUV4cGxpY2l0KCRkYXlzLCBQSFBFeGNlbF9DZWxsX0RhdGFUeXBlOjpUWVBFX05VTUVSSUMpOwogICAgICAgICAgICAgICAgLy8gU2V0IHN0eWxlCiAgICAgICAgICAgICAgICAkY2VsbC0+Z2V0V29ya3NoZWV0KCktPmdldFN0eWxlKCRjZWxsLT5nZXRDb29yZGluYXRlKCkpCiAgICAgICAgICAgICAgICAgICAgLT5nZXROdW1iZXJGb3JtYXQoKS0+c2V0Rm9ybWF0Q29kZShQSFBFeGNlbF9TdHlsZV9OdW1iZXJGb3JtYXQ6OkZPUk1BVF9EQVRFX1RJTUU0KTsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBDaGVjayBmb3IgZGF0ZXRpbWUsIGUuZy4gJzIwMDgtMTItMzEnLCAnMjAwOC0xMi0zMSAxNTo1OScsICcyMDA4LTEyLTMxIDE1OjU5OjEwJwogICAgICAgICAgICBpZiAoKCRkID0gUEhQRXhjZWxfU2hhcmVkX0RhdGU6OnN0cmluZ1RvRXhjZWwoJHZhbHVlKSkgIT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgICAvLyBDb252ZXJ0IHZhbHVlIHRvIG51bWJlcgogICAgICAgICAgICAgICAgJGNlbGwtPnNldFZhbHVlRXhwbGljaXQoJGQsIFBIUEV4Y2VsX0NlbGxfRGF0YVR5cGU6OlRZUEVfTlVNRVJJQyk7CiAgICAgICAgICAgICAgICAvLyBEZXRlcm1pbmUgc3R5bGUuIEVpdGhlciB0aGVyZSBpcyBhIHRpbWUgcGFydCBvciBub3QuIExvb2sgZm9yICc6JwogICAgICAgICAgICAgICAgaWYgKHN0cnBvcygkdmFsdWUsICc6JykgIT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgICAgICAgJGZvcm1hdENvZGUgPSAneXl5eS1tbS1kZCBoOm1tJzsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgJGZvcm1hdENvZGUgPSAneXl5eS1tbS1kZCc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAkY2VsbC0+Z2V0V29ya3NoZWV0KCktPmdldFN0eWxlKCRjZWxsLT5nZXRDb29yZGluYXRlKCkpCiAgICAgICAgICAgICAgICAgICAgLT5nZXROdW1iZXJGb3JtYXQoKS0+c2V0Rm9ybWF0Q29kZSgkZm9ybWF0Q29kZSk7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gQ2hlY2sgZm9yIG5ld2xpbmUgY2hhcmFjdGVyICJcbiIKICAgICAgICAgICAgaWYgKHN0cnBvcygkdmFsdWUsICJcbiIpICE9PSBmYWxzZSkgewogICAgICAgICAgICAgICAgJHZhbHVlID0gUEhQRXhjZWxfU2hhcmVkX1N0cmluZzo6U2FuaXRpemVVVEY4KCR2YWx1ZSk7CiAgICAgICAgICAgICAgICAkY2VsbC0+c2V0VmFsdWVFeHBsaWNpdCgkdmFsdWUsIFBIUEV4Y2VsX0NlbGxfRGF0YVR5cGU6OlRZUEVfU1RSSU5HKTsKICAgICAgICAgICAgICAgIC8vIFNldCBzdHlsZQogICAgICAgICAgICAgICAgJGNlbGwtPmdldFdvcmtzaGVldCgpLT5nZXRTdHlsZSgkY2VsbC0+Z2V0Q29vcmRpbmF0ZSgpKQogICAgICAgICAgICAgICAgICAgIC0+Z2V0QWxpZ25tZW50KCktPnNldFdyYXBUZXh0KHRydWUpOwogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIC8vIE5vdCBib3VuZCB5ZXQ\/IFVzZSBwYXJlbnQuLi4KICAgICAgICByZXR1cm4gcGFyZW50OjpiaW5kVmFsdWUoJGNlbGwsICR2YWx1ZSk7CiAgICB9Cn0K",
    "size": "8787"
}