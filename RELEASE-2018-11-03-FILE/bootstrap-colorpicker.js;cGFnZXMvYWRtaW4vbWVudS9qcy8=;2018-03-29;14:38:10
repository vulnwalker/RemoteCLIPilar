{
    "namaFile": "pages\/admin\/menu\/js\/bootstrap-colorpicker.js",
    "lastUpdate": "2018-03-29+14:38:10.27",
    "contentFile": "\/MDAwMDAwMDAvKSkgfHwgKHN0clZhbC5tYXRjaCgvKHJnYmF8aHNsYSlcKDAsMCwwLDA\/XC4\/MFwpLykpOwogICAgfSwKICAgIHJnYmFJc1RyYW5zcGFyZW50OiBmdW5jdGlvbihyZ2JhKSB7CiAgICAgIHJldHVybiAoKHJnYmEuciA9PT0gMCkgJiYgKHJnYmEuZyA9PT0gMCkgJiYgKHJnYmEuYiA9PT0gMCkgJiYgKHJnYmEuYSA9PT0gMCkpOwogICAgfSwKICAgIC8vIHBhcnNlIGEgc3RyaW5nIHRvIEhTQgogICAgLyoqCiAgICAgKiBAcHJvdGVjdGVkCiAgICAgKiBAcGFyYW0ge1N0cmluZ30gc3RyVmFsCiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyB0cnVlIGlmIGl0IGNvdWxkIGJlIHBhcnNlZCwgZmFsc2Ugb3RoZXJ3aXNlCiAgICAgKi8KICAgIHNldENvbG9yOiBmdW5jdGlvbihzdHJWYWwpIHsKICAgICAgc3RyVmFsID0gc3RyVmFsLnRvTG93ZXJDYXNlKCkudHJpbSgpOwogICAgICBpZiAoc3RyVmFsKSB7CiAgICAgICAgaWYgKHRoaXMuaXNUcmFuc3BhcmVudChzdHJWYWwpKSB7CiAgICAgICAgICB0aGlzLnZhbHVlID0gewogICAgICAgICAgICBoOiAwLAogICAgICAgICAgICBzOiAwLAogICAgICAgICAgICBiOiAwLAogICAgICAgICAgICBhOiAwCiAgICAgICAgICB9OwogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHZhciBwYXJzZWRDb2xvciA9IHRoaXMucGFyc2Uoc3RyVmFsKTsKICAgICAgICAgIGlmIChwYXJzZWRDb2xvcikgewogICAgICAgICAgICB0aGlzLnZhbHVlID0gdGhpcy52YWx1ZSA9IHsKICAgICAgICAgICAgICBoOiBwYXJzZWRDb2xvci5oLAogICAgICAgICAgICAgIHM6IHBhcnNlZENvbG9yLnMsCiAgICAgICAgICAgICAgYjogcGFyc2VkQ29sb3IuYiwKICAgICAgICAgICAgICBhOiBwYXJzZWRDb2xvci5hCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIGlmICghdGhpcy5vcmlnRm9ybWF0KSB7CiAgICAgICAgICAgICAgdGhpcy5vcmlnRm9ybWF0ID0gcGFyc2VkQ29sb3IuZm9ybWF0OwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZmFsbGJhY2tWYWx1ZSkgewogICAgICAgICAgICAvLyBpZiBwYXJzZXIgZmFpbHMsIGRlZmF1bHRzIHRvIGZhbGxiYWNrVmFsdWUgaWYgZGVmaW5lZCwgb3RoZXJ3aXNlIHRoZSB2YWx1ZSB3b24ndCBiZSBjaGFuZ2VkCiAgICAgICAgICAgIHRoaXMudmFsdWUgPSB0aGlzLmZhbGxiYWNrVmFsdWU7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0sCiAgICBzZXRIdWU6IGZ1bmN0aW9uKGgpIHsKICAgICAgdGhpcy52YWx1ZS5oID0gMSAtIGg7CiAgICB9LAogICAgc2V0U2F0dXJhdGlvbjogZnVuY3Rpb24ocykgewogICAgICB0aGlzLnZhbHVlLnMgPSBzOwogICAgfSwKICAgIHNldEJyaWdodG5lc3M6IGZ1bmN0aW9uKGIpIHsKICAgICAgdGhpcy52YWx1ZS5iID0gMSAtIGI7CiAgICB9LAogICAgc2V0QWxwaGE6IGZ1bmN0aW9uKGEpIHsKICAgICAgdGhpcy52YWx1ZS5hID0gTWF0aC5yb3VuZCgocGFyc2VJbnQoKDEgLSBhKSAqIDEwMCwgMTApIC8gMTAwKSAqIDEwMCkgLyAxMDA7CiAgICB9LAogICAgdG9SR0I6IGZ1bmN0aW9uKGgsIHMsIGIsIGEpIHsKICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApIHsKICAgICAgICBoID0gdGhpcy52YWx1ZS5oOwogICAgICAgIHMgPSB0aGlzLnZhbHVlLnM7CiAgICAgICAgYiA9IHRoaXMudmFsdWUuYjsKICAgICAgICBhID0gdGhpcy52YWx1ZS5hOwogICAgICB9CgogICAgICBoICo9IDM2MDsKICAgICAgdmFyIFIsIEcsIEIsIFgsIEM7CiAgICAgIGggPSAoaCAlIDM2MCkgLyA2MDsKICAgICAgQyA9IGIgKiBzOwogICAgICBYID0gQyAqICgxIC0gTWF0aC5hYnMoaCAlIDIgLSAxKSk7CiAgICAgIFIgPSBHID0gQiA9IGIgLSBDOwoKICAgICAgaCA9IH5+aDsKICAgICAgUiArPSBbQywgWCwgMCwgMCwgWCwgQ11baF07CiAgICAgIEcgKz0gW1gsIEMsIEMsIFgsIDAsIDBdW2hdOwogICAgICBCICs9IFswLCAwLCBYLCBDLCBDLCBYXVtoXTsKCiAgICAgIHJldHVybiB7CiAgICAgICAgcjogTWF0aC5yb3VuZChSICogMjU1KSwKICAgICAgICBnOiBNYXRoLnJvdW5kKEcgKiAyNTUpLAogICAgICAgIGI6IE1hdGgucm91bmQoQiAqIDI1NSksCiAgICAgICAgYTogYQogICAgICB9OwogICAgfSwKICAgIHRvSGV4OiBmdW5jdGlvbihpZ25vcmVGb3JtYXQsIGgsIHMsIGIsIGEpIHsKICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPD0gMSkgewogICAgICAgIGggPSB0aGlzLnZhbHVlLmg7CiAgICAgICAgcyA9IHRoaXMudmFsdWUuczsKICAgICAgICBiID0gdGhpcy52YWx1ZS5iOwogICAgICAgIGEgPSB0aGlzLnZhbHVlLmE7CiAgICAgIH0KCiAgICAgIHZhciBwcmVmaXggPSAnIyc7CiAgICAgIHZhciByZ2IgPSB0aGlzLnRvUkdCKGgsIHMsIGIsIGEpOwoKICAgICAgaWYgKHRoaXMucmdiYUlzVHJhbnNwYXJlbnQocmdiKSkgewogICAgICAgIHJldHVybiAndHJhbnNwYXJlbnQnOwogICAgICB9CgogICAgICBpZiAoIWlnbm9yZUZvcm1hdCkgewogICAgICAgIHByZWZpeCA9ICh0aGlzLmhleE51bWJlclNpZ25QcmVmaXggPyAnIycgOiAnJyk7CiAgICAgIH0KCiAgICAgIHZhciBoZXhTdHIgPSBwcmVmaXggKyAoCiAgICAgICAgICAoMSA8PCAyNCkgKwogICAgICAgICAgKHBhcnNlSW50KHJnYi5yKSA8PCAxNikgKwogICAgICAgICAgKHBhcnNlSW50KHJnYi5nKSA8PCA4KSArCiAgICAgICAgICBwYXJzZUludChyZ2IuYikpCiAgICAgICAgLnRvU3RyaW5nKDE2KQogICAgICAgIC5zbGljZSgxKTsKCiAgICAgIHJldHVybiBoZXhTdHI7CiAgICB9LAogICAgdG9IU0w6IGZ1bmN0aW9uKGgsIHMsIGIsIGEpIHsKICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApIHsKICAgICAgICBoID0gdGhpcy52YWx1ZS5oOwogICAgICAgIHMgPSB0aGlzLnZhbHVlLnM7CiAgICAgICAgYiA9IHRoaXMudmFsdWUuYjsKICAgICAgICBhID0gdGhpcy52YWx1ZS5hOwogICAgICB9CgogICAgICB2YXIgSCA9IGgsCiAgICAgICAgTCA9ICgyIC0gcykgKiBiLAogICAgICAgIFMgPSBzICogYjsKICAgICAgaWYgKEwgPiAwICYmIEwgPD0gMSkgewogICAgICAgIFMgLz0gTDsKICAgICAgfSBlbHNlIHsKICAgICAgICBTIC89IDIgLSBMOwogICAgICB9CiAgICAgIEwgLz0gMjsKICAgICAgaWYgKFMgPiAxKSB7CiAgICAgICAgUyA9IDE7CiAgICAgIH0KICAgICAgcmV0dXJuIHsKICAgICAgICBoOiBpc05hTihIKSA\/IDAgOiBILAogICAgICAgIHM6IGlzTmFOKFMpID8gMCA6IFMsCiAgICAgICAgbDogaXNOYU4oTCkgPyAwIDogTCwKICAgICAgICBhOiBpc05hTihhKSA\/IDAgOiBhCiAgICAgIH07CiAgICB9LAogICAgdG9BbGlhczogZnVuY3Rpb24ociwgZywgYiwgYSkgewogICAgICB2YXIgYywgcmdiID0gKGFyZ3VtZW50cy5sZW5ndGggPT09IDApID8gdGhpcy50b0hleCh0cnVlKSA6IHRoaXMudG9IZXgodHJ1ZSwgciwgZywgYiwgYSk7CgogICAgICAvLyBzdXBwb3J0IHByZWRlZi4gY29sb3JzIGluIG5vbi1oZXggZm9ybWF0IHRvbywgYXMgZGVmaW5lZCBpbiB0aGUgYWxpYXMgaXRzZWxmCiAgICAgIHZhciBvcmlnaW5hbCA9IHRoaXMub3JpZ0Zvcm1hdCA9PT0gJ2FsaWFzJyA\/IHJnYiA6IHRoaXMudG9TdHJpbmcoZmFsc2UsIHRoaXMub3JpZ0Zvcm1hdCk7CgogICAgICBmb3IgKHZhciBhbGlhcyBpbiB0aGlzLmNvbG9ycykgewogICAgICAgIGMgPSB0aGlzLmNvbG9yc1thbGlhc10udG9Mb3dlckNhc2UoKS50cmltKCk7CiAgICAgICAgaWYgKChjID09PSByZ2IpIHx8IChjID09PSBvcmlnaW5hbCkpIHsKICAgICAgICAgIHJldHVybiBhbGlhczsKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIGZhbHNlOwogICAgfSwKICAgIFJHQnRvSFNCOiBmdW5jdGlvbihyLCBnLCBiLCBhKSB7CiAgICAgIHIgLz0gMjU1OwogICAgICBnIC89IDI1NTsKICAgICAgYiAvPSAyNTU7CgogICAgICB2YXIgSCwgUywgViwgQzsKICAgICAgViA9IE1hdGgubWF4KHIsIGcsIGIpOwogICAgICBDID0gViAtIE1hdGgubWluKHIsIGcsIGIpOwogICAgICBIID0gKEMgPT09IDAgPyBudWxsIDoKICAgICAgICBWID09PSByID8gKGcgLSBiKSAvIEMgOgogICAgICAgIFYgPT09IGcgPyAoYiAtIHIpIC8gQyArIDIgOgogICAgICAgIChyIC0gZykgLyBDICsgNAogICAgICApOwogICAgICBIID0gKChIICsgMzYwKSAlIDYpICogNjAgLyAzNjA7CiAgICAgIFMgPSBDID09PSAwID8gMCA6IEMgLyBWOwogICAgICByZXR1cm4gewogICAgICAgIGg6IHRoaXMuX3Nhbml0aXplTnVtYmVyKEgpLAogICAgICAgIHM6IFMsCiAgICAgICAgYjogViwKICAgICAgICBhOiB0aGlzLl9zYW5pdGl6ZU51bWJlcihhKQogICAgICB9OwogICAgfSwKICAgIEh1ZVRvUkdCOiBmdW5jdGlvbihwLCBxLCBoKSB7CiAgICAgIGlmIChoIDwgMCkgewogICAgICAgIGggKz0gMTsKICAgICAgfSBlbHNlIGlmIChoID4gMSkgewogICAgICAgIGggLT0gMTsKICAgICAgfQogICAgICBpZiAoKGggKiA2KSA8IDEpIHsKICAgICAgICByZXR1cm4gcCArIChxIC0gcCkgKiBoICogNjsKICAgICAgfSBlbHNlIGlmICgoaCAqIDIpIDwgMSkgewogICAgICAgIHJldHVybiBxOwogICAgICB9IGVsc2UgaWYgKChoICogMykgPCAyKSB7CiAgICAgICAgcmV0dXJuIHAgKyAocSAtIHApICogKCgyIC8gMykgLSBoKSAqIDY7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHA7CiAgICAgIH0KICAgIH0sCiAgICBIU0x0b1JHQjogZnVuY3Rpb24oaCwgcywgbCwgYSkgewogICAgICBpZiAocyA8IDApIHsKICAgICAgICBzID0gMDsKICAgICAgfQogICAgICB2YXIgcTsKICAgICAgaWYgKGwgPD0gMC41KSB7CiAgICAgICAgcSA9IGwgKiAoMSArIHMpOwogICAgICB9IGVsc2UgewogICAgICAgIHEgPSBsICsgcyAtIChsICogcyk7CiAgICAgIH0KCiAgICAgIHZhciBwID0gMiAqIGwgLSBxOwoKICAgICAgdmFyIHRyID0gaCArICgxIC8gMyk7CiAgICAgIHZhciB0ZyA9IGg7CiAgICAgIHZhciB0YiA9IGggLSAoMSAvIDMpOwoKICAgICAgdmFyIHIgPSBNYXRoLnJvdW5kKHRoaXMuSHVlVG9SR0IocCwgcSwgdHIpICogMjU1KTsKICAgICAgdmFyIGcgPSBNYXRoLnJvdW5kKHRoaXMuSHVlVG9SR0IocCwgcSwgdGcpICogMjU1KTsKICAgICAgdmFyIGIgPSBNYXRoLnJvdW5kKHRoaXMuSHVlVG9SR0IocCwgcSwgdGIpICogMjU1KTsKICAgICAgcmV0dXJuIFtyLCBnLCBiLCB0aGlzLl9zYW5pdGl6ZU51bWJlcihhKV07CiAgICB9LAogICAgLyoqCiAgICAgKiBAcGFyYW0ge1N0cmluZ30gc3RyVmFsCiAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSBPYmplY3QgY29udGFpbmluZyBoLHMsYixhLGZvcm1hdCBwcm9wZXJ0aWVzIG9yIEZBTFNFIGlmIGZhaWxlZCB0byBwYXJzZQogICAgICovCiAgICBwYXJzZTogZnVuY3Rpb24oc3RyVmFsKSB7CiAgICAgIGlmICh0eXBlb2Ygc3RyVmFsICE9PSAnc3RyaW5nJykgewogICAgICAgIHJldHVybiB0aGlzLmZhbGxiYWNrVmFsdWU7CiAgICAgIH0KICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIHZhciB0aGF0ID0gdGhpcywKICAgICAgICByZXN1bHQgPSBmYWxzZSwKICAgICAgICBpc0FsaWFzID0gKHR5cGVvZiB0aGlzLmNvbG9yc1tzdHJWYWxdICE9PSAndW5kZWZpbmVkJyksCiAgICAgICAgdmFsdWVzLCBmb3JtYXQ7CgogICAgICBpZiAoaXNBbGlhcykgewogICAgICAgIHN0clZhbCA9IHRoaXMuY29sb3JzW3N0clZhbF0udG9Mb3dlckNhc2UoKS50cmltKCk7CiAgICAgIH0KCiAgICAgICQuZWFjaCh0aGlzLnN0cmluZ1BhcnNlcnMsIGZ1bmN0aW9uKGksIHBhcnNlcikgewogICAgICAgIHZhciBtYXRjaCA9IHBhcnNlci5yZS5leGVjKHN0clZhbCk7CiAgICAgICAgdmFsdWVzID0gbWF0Y2ggJiYgcGFyc2VyLnBhcnNlLmFwcGx5KHRoYXQsIFttYXRjaF0pOwogICAgICAgIGlmICh2YWx1ZXMpIHsKICAgICAgICAgIHJlc3VsdCA9IHt9OwogICAgICAgICAgZm9ybWF0ID0gKGlzQWxpYXMgPyAnYWxpYXMnIDogKHBhcnNlci5mb3JtYXQgPyBwYXJzZXIuZm9ybWF0IDogdGhhdC5nZXRWYWxpZEZhbGxiYWNrRm9ybWF0KCkpKTsKICAgICAgICAgIGlmIChmb3JtYXQubWF0Y2goL2hzbGE\/LykpIHsKICAgICAgICAgICAgcmVzdWx0ID0gdGhhdC5SR0J0b0hTQi5hcHBseSh0aGF0LCB0aGF0LkhTTHRvUkdCLmFwcGx5KHRoYXQsIHZhbHVlcykpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmVzdWx0ID0gdGhhdC5SR0J0b0hTQi5hcHBseSh0aGF0LCB2YWx1ZXMpOwogICAgICAgICAgfQogICAgICAgICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIE9iamVjdCkgewogICAgICAgICAgICByZXN1bHQuZm9ybWF0ID0gZm9ybWF0OwogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyBzdG9wIGl0ZXJhdGluZwogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfSk7CiAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9LAogICAgZ2V0VmFsaWRGYWxsYmFja0Zvcm1hdDogZnVuY3Rpb24oKSB7CiAgICAgIHZhciBmb3JtYXRzID0gWwogICAgICAgICdyZ2JhJywgJ3JnYicsICdoZXgnLCAnaHNsYScsICdoc2wnCiAgICAgIF07CiAgICAgIGlmICh0aGlzLm9yaWdGb3JtYXQgJiYgKGZvcm1hdHMuaW5kZXhPZih0aGlzLm9yaWdGb3JtYXQpICE9PSAtMSkpIHsKICAgICAgICByZXR1cm4gdGhpcy5vcmlnRm9ybWF0OwogICAgICB9CiAgICAgIGlmICh0aGlzLmZhbGxiYWNrRm9ybWF0ICYmIChmb3JtYXRzLmluZGV4T2YodGhpcy5mYWxsYmFja0Zvcm1hdCkgIT09IC0xKSkgewogICAgICAgIHJldHVybiB0aGlzLmZhbGxiYWNrRm9ybWF0OwogICAgICB9CgogICAgICByZXR1cm4gJ3JnYmEnOyAvLyBCeSBkZWZhdWx0LCByZXR1cm4gYSBmb3JtYXQgdGhhdCB3aWxsIG5vdCBsb3NlIHRoZSBhbHBoYSBpbmZvCiAgICB9LAogICAgLyoqCiAgICAgKgogICAgICogQHBhcmFtIHtzdHJpbmd9IFtmb3JtYXRdIChkZWZhdWx0OiByZ2JhKQogICAgICogQHBhcmFtIHtib29sZWFufSBbdHJhbnNsYXRlQWxpYXNdIFJldHVybiByZWFsIGNvbG9yIGZvciBwcmUtZGVmaW5lZCAobm9uLXN0YW5kYXJkKSBhbGlhc2VzIChkZWZhdWx0OiBmYWxzZSkKICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gW2ZvcmNlUmF3VmFsdWVdIEZvcmNlcyBoYXNodGFnIHByZWZpeCB3aGVuIGdldHRpbmcgaGV4IGNvbG9yIChkZWZhdWx0OiBmYWxzZSkKICAgICAqIEByZXR1cm5zIHtTdHJpbmd9CiAgICAgKi8KICAgIHRvU3RyaW5nOiBmdW5jdGlvbihmb3JjZVJhd1ZhbHVlLCBmb3JtYXQsIHRyYW5zbGF0ZUFsaWFzKSB7CiAgICAgIGZvcm1hdCA9IGZvcm1hdCB8fCB0aGlzLm9yaWdGb3JtYXQgfHwgdGhpcy5mYWxsYmFja0Zvcm1hdDsKICAgICAgdHJhbnNsYXRlQWxpYXMgPSB0cmFuc2xhdGVBbGlhcyB8fCBmYWxzZTsKCiAgICAgIHZhciBjID0gZmFsc2U7CgogICAgICBzd2l0Y2ggKGZvcm1hdCkgewogICAgICAgIGNhc2UgJ3JnYic6CiAgICAgICAgICB7CiAgICAgICAgICAgIGMgPSB0aGlzLnRvUkdCKCk7CiAgICAgICAgICAgIGlmICh0aGlzLnJnYmFJc1RyYW5zcGFyZW50KGMpKSB7CiAgICAgICAgICAgICAgcmV0dXJuICd0cmFuc3BhcmVudCc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuICdyZ2IoJyArIGMuciArICcsJyArIGMuZyArICcsJyArIGMuYiArICcpJzsKICAgICAgICAgIH0KICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ3JnYmEnOgogICAgICAgICAgewogICAgICAgICAgICBjID0gdGhpcy50b1JHQigpOwogICAgICAgICAgICByZXR1cm4gJ3JnYmEoJyArIGMuciArICcsJyArIGMuZyArICcsJyArIGMuYiArICcsJyArIGMuYSArICcpJzsKICAgICAgICAgIH0KICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ2hzbCc6CiAgICAgICAgICB7CiAgICAgICAgICAgIGMgPSB0aGlzLnRvSFNMKCk7CiAgICAgICAgICAgIHJldHVybiAnaHNsKCcgKyBNYXRoLnJvdW5kKGMuaCAqIDM2MCkgKyAnLCcgKyBNYXRoLnJvdW5kKGMucyAqIDEwMCkgKyAnJSwnICsgTWF0aC5yb3VuZChjLmwgKiAxMDApICsgJyUpJzsKICAgICAgICAgIH0KICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ2hzbGEnOgogICAgICAgICAgewogICAgICAgICAgICBjID0gdGhpcy50b0hTTCgpOwogICAgICAgICAgICByZXR1cm4gJ2hzbGEoJyArIE1hdGgucm91bmQoYy5oICogMzYwKSArICcsJyArIE1hdGgucm91bmQoYy5zICogMTAwKSArICclLCcgKyBNYXRoLnJvdW5kKGMubCAqIDEwMCkgKyAnJSwnICsgYy5hICsgJyknOwogICAgICAgICAgfQogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnaGV4JzoKICAgICAgICAgIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMudG9IZXgoZm9yY2VSYXdWYWx1ZSk7CiAgICAgICAgICB9CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdhbGlhcyc6CiAgICAgICAgICB7CiAgICAgICAgICAgIGMgPSB0aGlzLnRvQWxpYXMoKTsKCiAgICAgICAgICAgIGlmIChjID09PSBmYWxzZSkgewogICAgICAgICAgICAgIHJldHVybiB0aGlzLnRvU3RyaW5nKGZvcmNlUmF3VmFsdWUsIHRoaXMuZ2V0VmFsaWRGYWxsYmFja0Zvcm1hdCgpKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHRyYW5zbGF0ZUFsaWFzICYmICEoYyBpbiBDb2xvci53ZWJDb2xvcnMpICYmIChjIGluIHRoaXMucHJlZGVmaW5lZENvbG9ycykpIHsKICAgICAgICAgICAgICByZXR1cm4gdGhpcy5wcmVkZWZpbmVkQ29sb3JzW2NdOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gYzsKICAgICAgICAgIH0KICAgICAgICBkZWZhdWx0OgogICAgICAgICAgewogICAgICAgICAgICByZXR1cm4gYzsKICAgICAgICAgIH0KICAgICAgICAgIGJyZWFrOwogICAgICB9CiAgICB9LAogICAgLy8gYSBzZXQgb2YgUkUncyB0aGF0IGNhbiBtYXRjaCBzdHJpbmdzIGFuZCBnZW5lcmF0ZSBjb2xvciB0dXBsZXMuCiAgICAvLyBmcm9tIEpvaG4gUmVzaWcgY29sb3IgcGx1Z2luCiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L2pxdWVyeS1jb2xvci8KICAgIHN0cmluZ1BhcnNlcnM6IFt7CiAgICAgIHJlOiAvcmdiXChccyooXGR7MSwzfSlccyosXHMqKFxkezEsM30pXHMqLFxzKihcZHsxLDN9KVxzKj9cKS8sCiAgICAgIGZvcm1hdDogJ3JnYicsCiAgICAgIHBhcnNlOiBmdW5jdGlvbihleGVjUmVzdWx0KSB7CiAgICAgICAgcmV0dXJuIFsKICAgICAgICAgIGV4ZWNSZXN1bHRbMV0sCiAgICAgICAgICBleGVjUmVzdWx0WzJdLAogICAgICAgICAgZXhlY1Jlc3VsdFszXSwKICAgICAgICAgIDEKICAgICAgICBdOwogICAgICB9CiAgICB9LCB7CiAgICAgIHJlOiAvcmdiXChccyooXGQqKD86XC5cZCspPylcJVxzKixccyooXGQqKD86XC5cZCspPylcJVxzKixccyooXGQqKD86XC5cZCspPylcJVxzKj9cKS8sCiAgICAgIGZvcm1hdDogJ3JnYicsCiAgICAgIHBhcnNlOiBmdW5jdGlvbihleGVjUmVzdWx0KSB7CiAgICAgICAgcmV0dXJuIFsKICAgICAgICAgIDIuNTUgKiBleGVjUmVzdWx0WzFdLAogICAgICAgICAgMi41NSAqIGV4ZWNSZXN1bHRbMl0sCiAgICAgICAgICAyLjU1ICogZXhlY1Jlc3VsdFszXSwKICAgICAgICAgIDEKICAgICAgICBdOwogICAgICB9CiAgICB9LCB7CiAgICAgIHJlOiAvcmdiYVwoXHMqKFxkezEsM30pXHMqLFxzKihcZHsxLDN9KVxzKixccyooXGR7MSwzfSlccyooPzosXHMqKFxkKig\/OlwuXGQrKT8pXHMqKT9cKS8sCiAgICAgIGZvcm1hdDogJ3JnYmEnLAogICAgICBwYXJzZTogZnVuY3Rpb24oZXhlY1Jlc3VsdCkgewogICAgICAgIHJldHVybiBbCiAgICAgICAgICBleGVjUmVzdWx0WzFdLAogICAgICAgICAgZXhlY1Jlc3VsdFsyXSwKICAgICAgICAgIGV4ZWNSZXN1bHRbM10sCiAgICAgICAgICBleGVjUmVzdWx0WzRdCiAgICAgICAgXTsKICAgICAgfQogICAgfSwgewogICAgICByZTogL3JnYmFcKFxzKihcZCooPzpcLlxkKyk\/KVwlXHMqLFxzKihcZCooPzpcLlxkKyk\/KVwlXHMqLFxzKihcZCooPzpcLlxkKyk\/KVwlXHMqKD86LFxzKihcZCooPzpcLlxkKyk\/KVxzKik\/XCkvLAogICAgICBmb3JtYXQ6ICdyZ2JhJywKICAgICAgcGFyc2U6IGZ1bmN0aW9uKGV4ZWNSZXN1bHQpIHsKICAgICAgICByZXR1cm4gWwogICAgICAgICAgMi41NSAqIGV4ZWNSZXN1bHRbMV0sCiAgICAgICAgICAyLjU1ICogZXhlY1Jlc3VsdFsyXSwKICAgICAgICAgIDIuNTUgKiBleGVjUmVzdWx0WzNdLAogICAgICAgICAgZXhlY1Jlc3VsdFs0XQogICAgICAgIF07CiAgICAgIH0KICAgIH0sIHsKICAgICAgcmU6IC9oc2xcKFxzKihcZCooPzpcLlxkKyk\/KVxzKixccyooXGQqKD86XC5cZCspPylcJVxzKixccyooXGQqKD86XC5cZCspPylcJVxzKj9cKS8sCiAgICAgIGZvcm1hdDogJ2hzbCcsCiAgICAgIHBhcnNlOiBmdW5jdGlvbihleGVjUmVzdWx0KSB7CiAgICAgICAgcmV0dXJuIFsKICAgICAgICAgIGV4ZWNSZXN1bHRbMV0gLyAzNjAsCiAgICAgICAgICBleGVjUmVzdWx0WzJdIC8gMTAwLAogICAgICAgICAgZXhlY1Jlc3VsdFszXSAvIDEwMCwKICAgICAgICAgIGV4ZWNSZXN1bHRbNF0KICAgICAgICBdOwogICAgICB9CiAgICB9LCB7CiAgICAgIHJlOiAvaHNsYVwoXHMqKFxkKig\/OlwuXGQrKT8pXHMqLFxzKihcZCooPzpcLlxkKyk\/KVwlXHMqLFxzKihcZCooPzpcLlxkKyk\/KVwlXHMqKD86LFxzKihcZCooPzpcLlxkKyk\/KVxzKik\/XCkvLAogICAgICBmb3JtYXQ6ICdoc2xhJywKICAgICAgcGFyc2U6IGZ1bmN0aW9uKGV4ZWNSZXN1bHQpIHsKICAgICAgICByZXR1cm4gWwogICAgICAgICAgZXhlY1Jlc3VsdFsxXSAvIDM2MCwKICAgICAgICAgIGV4ZWNSZXN1bHRbMl0gLyAxMDAsCiAgICAgICAgICBleGVjUmVzdWx0WzNdIC8gMTAwLAogICAgICAgICAgZXhlY1Jlc3VsdFs0XQogICAgICAgIF07CiAgICAgIH0KICAgIH0sIHsKICAgICAgcmU6IC8jPyhbYS1mQS1GMC05XXsyfSkoW2EtZkEtRjAtOV17Mn0pKFthLWZBLUYwLTldezJ9KS8sCiAgICAgIGZvcm1hdDogJ2hleCcsCiAgICAgIHBhcnNlOiBmdW5jdGlvbihleGVjUmVzdWx0KSB7CiAgICAgICAgcmV0dXJuIFsKICAgICAgICAgIHBhcnNlSW50KGV4ZWNSZXN1bHRbMV0sIDE2KSwKICAgICAgICAgIHBhcnNlSW50KGV4ZWNSZXN1bHRbMl0sIDE2KSwKICAgICAgICAgIHBhcnNlSW50KGV4ZWNSZXN1bHRbM10sIDE2KSwKICAgICAgICAgIDEKICAgICAgICBdOwogICAgICB9CiAgICB9LCB7CiAgICAgIHJlOiAvIz8oW2EtZkEtRjAtOV0pKFthLWZBLUYwLTldKShbYS1mQS1GMC05XSkvLAogICAgICBmb3JtYXQ6ICdoZXgnLAogICAgICBwYXJzZTogZnVuY3Rpb24oZXhlY1Jlc3VsdCkgewogICAgICAgIHJldHVybiBbCiAgICAgICAgICBwYXJzZUludChleGVjUmVzdWx0WzFdICsgZXhlY1Jlc3VsdFsxXSwgMTYpLAogICAgICAgICAgcGFyc2VJbnQoZXhlY1Jlc3VsdFsyXSArIGV4ZWNSZXN1bHRbMl0sIDE2KSwKICAgICAgICAgIHBhcnNlSW50KGV4ZWNSZXN1bHRbM10gKyBleGVjUmVzdWx0WzNdLCAxNiksCiAgICAgICAgICAxCiAgICAgICAgXTsKICAgICAgfQogICAgfV0sCiAgICBjb2xvck5hbWVUb0hleDogZnVuY3Rpb24obmFtZSkgewogICAgICBpZiAodHlwZW9mIHRoaXMuY29sb3JzW25hbWUudG9Mb3dlckNhc2UoKV0gIT09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuY29sb3JzW25hbWUudG9Mb3dlckNhc2UoKV07CiAgICAgIH0KICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogIH07CgogIC8qCiAgICogRGVmYXVsdCBwbHVnaW4gb3B0aW9ucwogICAqLwogIHZhciBkZWZhdWx0cyA9IHsKICAgIGhvcml6b250YWw6IGZhbHNlLCAvLyBob3Jpem9udGFsIG1vZGUgbGF5b3V0ID8KICAgIGlubGluZTogZmFsc2UsIC8vZm9yY2VzIHRvIHNob3cgdGhlIGNvbG9ycGlja2VyIGFzIGFuIGlubGluZSBlbGVtZW50CiAgICBjb2xvcjogZmFsc2UsIC8vZm9yY2VzIGEgY29sb3IKICAgIGZvcm1hdDogZmFsc2UsIC8vZm9yY2VzIGEgZm9ybWF0CiAgICBpbnB1dDogJ2lucHV0JywgLy8gY2hpbGRyZW4gaW5wdXQgc2VsZWN0b3IKICAgIGNvbnRhaW5lcjogZmFsc2UsIC8vIGNvbnRhaW5lciBzZWxlY3RvcgogICAgY29tcG9uZW50OiAnLmFkZC1vbiwgLmlucHV0LWdyb3VwLWFkZG9uJywgLy8gY2hpbGRyZW4gY29tcG9uZW50IHNlbGVjdG9yCiAgICBmYWxsYmFja0NvbG9yOiBmYWxzZSwgLy8gZmFsbGJhY2sgY29sb3IgdmFsdWUuIG51bGwgPSBrZWVwcyBjdXJyZW50IGNvbG9yLgogICAgZmFsbGJhY2tGb3JtYXQ6ICdoZXgnLCAvLyBmYWxsYmFjayBjb2xvciBmb3JtYXQKICAgIGhleE51bWJlclNpZ25QcmVmaXg6IHRydWUsIC8vIHB1dCBhICcjJyAobnVtYmVyIHNpZ24pIGJlZm9yZSBoZXggc3RyaW5ncwogICAgc2xpZGVyczogewogICAgICBzYXR1cmF0aW9uOiB7CiAgICAgICAgbWF4TGVmdDogMTAwLAogICAgICAgIG1heFRvcDogMTAwLAogICAgICAgIGNhbGxMZWZ0OiAnc2V0U2F0dXJhdGlvbicsCiAgICAgICAgY2FsbFRvcDogJ3NldEJyaWdodG5lc3MnCiAgICAgIH0sCiAgICAgIGh1ZTogewogICAgICAgIG1heExlZnQ6IDAsCiAgICAgICAgbWF4VG9wOiAxMDAsCiAgICAgICAgY2FsbExlZnQ6IGZhbHNlLAogICAgICAgIGNhbGxUb3A6ICdzZXRIdWUnCiAgICAgIH0sCiAgICAgIGFscGhhOiB7CiAgICAgICAgbWF4TGVmdDogMCwKICAgICAgICBtYXhUb3A6IDEwMCwKICAgICAgICBjYWxsTGVmdDogZmFsc2UsCiAgICAgICAgY2FsbFRvcDogJ3NldEFscGhhJwogICAgICB9CiAgICB9LAogICAgc2xpZGVyc0hvcno6IHsKICAgICAgc2F0dXJhdGlvbjogewogICAgICAgIG1heExlZnQ6IDEwMCwKICAgICAgICBtYXhUb3A6IDEwMCwKICAgICAgICBjYWxsTGVmdDogJ3NldFNhdHVyYXRpb24nLAogICAgICAgIGNhbGxUb3A6ICdzZXRCcmlnaHRuZXNzJwogICAgICB9LAogICAgICBodWU6IHsKICAgICAgICBtYXhMZWZ0OiAxMDAsCiAgICAgICAgbWF4VG9wOiAwLAogICAgICAgIGNhbGxMZWZ0OiAnc2V0SHVlJywKICAgICAgICBjYWxsVG9wOiBmYWxzZQogICAgICB9LAogICAgICBhbHBoYTogewogICAgICAgIG1heExlZnQ6IDEwMCwKICAgICAgICBtYXhUb3A6IDAsCiAgICAgICAgY2FsbExlZnQ6ICdzZXRBbHBoYScsCiAgICAgICAgY2FsbFRvcDogZmFsc2UKICAgICAgfQogICAgfSwKICAgIHRlbXBsYXRlOiAnPGRpdiBjbGFzcz0iY29sb3JwaWNrZXIgZHJvcGRvd24tbWVudSI+JyArCiAgICAgICc8ZGl2IGNsYXNzPSJjb2xvcnBpY2tlci1zYXR1cmF0aW9uIj48aT48Yj48L2I+PC9pPjwvZGl2PicgKwogICAgICAnPGRpdiBjbGFzcz0iY29sb3JwaWNrZXItaHVlIj48aT48L2k+PC9kaXY+JyArCiAgICAgICc8ZGl2IGNsYXNzPSJjb2xvcnBpY2tlci1hbHBoYSI+PGk+PC9pPjwvZGl2PicgKwogICAgICAnPGRpdiBjbGFzcz0iY29sb3JwaWNrZXItY29sb3IiPjxkaXYgLz48L2Rpdj4nICsKICAgICAgJzxkaXYgY2xhc3M9ImNvbG9ycGlja2VyLXNlbGVjdG9ycyI+PC9kaXY+JyArCiAgICAgICc8L2Rpdj4nLAogICAgYWxpZ246ICdyaWdodCcsCiAgICBjdXN0b21DbGFzczogbnVsbCwgLy8gY3VzdG9tIGNsYXNzIGFkZGVkIHRvIHRoZSBjb2xvcnBpY2tlciBlbGVtZW50CiAgICBjb2xvclNlbGVjdG9yczogbnVsbCAvLyBjdXN0b20gY29sb3IgYWxpYXNlcwogIH07CgogIC8qKgogICAqIENvbG9ycGlja2VyIGNvbXBvbmVudCBjbGFzcwogICAqCiAgICogQHBhcmFtIHtPYmplY3R8U3RyaW5nfSBlbGVtZW50CiAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMKICAgKiBAY29uc3RydWN0b3IKICAgKi8KICB2YXIgQ29sb3JwaWNrZXIgPSBmdW5jdGlvbihlbGVtZW50LCBvcHRpb25zKSB7CiAgICB0aGlzLmVsZW1lbnQgPSAkKGVsZW1lbnQpLmFkZENsYXNzKCdjb2xvcnBpY2tlci1lbGVtZW50Jyk7CiAgICB0aGlzLm9wdGlvbnMgPSAkLmV4dGVuZCh0cnVlLCB7fSwgZGVmYXVsdHMsIHRoaXMuZWxlbWVudC5kYXRhKCksIG9wdGlvbnMpOwogICAgdGhpcy5jb21wb25lbnQgPSB0aGlzLm9wdGlvbnMuY29tcG9uZW50OwogICAgdGhpcy5jb21wb25lbnQgPSAodGhpcy5jb21wb25lbnQgIT09IGZhbHNlKSA\/IHRoaXMuZWxlbWVudC5maW5kKHRoaXMuY29tcG9uZW50KSA6IGZhbHNlOwogICAgaWYgKHRoaXMuY29tcG9uZW50ICYmICh0aGlzLmNvbXBvbmVudC5sZW5ndGggPT09IDApKSB7CiAgICAgIHRoaXMuY29tcG9uZW50ID0gZmFsc2U7CiAgICB9CiAgICB0aGlzLmNvbnRhaW5lciA9ICh0aGlzLm9wdGlvbnMuY29udGFpbmVyID09PSB0cnVlKSA\/IHRoaXMuZWxlbWVudCA6IHRoaXMub3B0aW9ucy5jb250YWluZXI7CiAgICB0aGlzLmNvbnRhaW5lciA9ICh0aGlzLmNvbnRhaW5lciAhPT0gZmFsc2UpID8gJCh0aGlzLmNvbnRhaW5lcikgOiBmYWxzZTsKCiAgICAvLyBJcyB0aGUgZWxlbWVudCBhbiBpbnB1dD8gU2hvdWxkIHdlIHNlYXJjaCBpbnNpZGUgZm9yIGFueSBpbnB1dD8KICAgIHRoaXMuaW5wdXQgPSB0aGlzLmVsZW1lbnQuaXMoJ2lucHV0JykgPyB0aGlzLmVsZW1lbnQgOiAodGhpcy5vcHRpb25zLmlucHV0ID8KICAgICAgdGhpcy5lbGVtZW50LmZpbmQodGhpcy5vcHRpb25zLmlucHV0KSA6IGZhbHNlKTsKICAgIGlmICh0aGlzLmlucHV0ICYmICh0aGlzLmlucHV0Lmxlbmd0aCA9PT0gMCkpIHsKICAgICAgdGhpcy5pbnB1dCA9IGZhbHNlOwogICAgfQogICAgLy8gU2V0IEhTQiBjb2xvcgogICAgdGhpcy5jb2xvciA9IHRoaXMuY3JlYXRlQ29sb3IodGhpcy5vcHRpb25zLmNvbG9yICE9PSBmYWxzZSA\/IHRoaXMub3B0aW9ucy5jb2xvciA6IHRoaXMuZ2V0VmFsdWUoKSk7CgogICAgdGhpcy5mb3JtYXQgPSB0aGlzLm9wdGlvbnMuZm9ybWF0ICE9PSBmYWxzZSA\/IHRoaXMub3B0aW9ucy5mb3JtYXQgOiB0aGlzLmNvbG9yLm9yaWdGb3JtYXQ7CgogICAgaWYgKHRoaXMub3B0aW9ucy5jb2xvciAhPT0gZmFsc2UpIHsKICAgICAgdGhpcy51cGRhdGVJbnB1dCh0aGlzLmNvbG9yKTsKICAgICAgdGhpcy51cGRhdGVEYXRhKHRoaXMuY29sb3IpOwogICAgfQoKICAgIHRoaXMuZGlzYWJsZWQgPSBmYWxzZTsKCiAgICAvLyBTZXR1cCBwaWNrZXIKICAgIHZhciAkcGlja2VyID0gdGhpcy5waWNrZXIgPSAkKHRoaXMub3B0aW9ucy50ZW1wbGF0ZSk7CiAgICBpZiAodGhpcy5vcHRpb25zLmN1c3RvbUNsYXNzKSB7CiAgICAgICRwaWNrZXIuYWRkQ2xhc3ModGhpcy5vcHRpb25zLmN1c3RvbUNsYXNzKTsKICAgIH0KICAgIGlmICh0aGlzLm9wdGlvbnMuaW5saW5lKSB7CiAgICAgICRwaWNrZXIuYWRkQ2xhc3MoJ2NvbG9ycGlja2VyLWlubGluZSBjb2xvcnBpY2tlci12aXNpYmxlJyk7CiAgICB9IGVsc2UgewogICAgICAkcGlja2VyLmFkZENsYXNzKCdjb2xvcnBpY2tlci1oaWRkZW4nKTsKICAgIH0KICAgIGlmICh0aGlzLm9wdGlvbnMuaG9yaXpvbnRhbCkgewogICAgICAkcGlja2VyLmFkZENsYXNzKCdjb2xvcnBpY2tlci1ob3Jpem9udGFsJyk7CiAgICB9CiAgICBpZiAoCiAgICAgIChbJ3JnYmEnLCAnaHNsYScsICdhbGlhcyddLmluZGV4T2YodGhpcy5mb3JtYXQpICE9PSAtMSkgfHwKICAgICAgdGhpcy5vcHRpb25zLmZvcm1hdCA9PT0gZmFsc2UgfHwKICAgICAgdGhpcy5nZXRWYWx1ZSgpID09PSAndHJhbnNwYXJlbnQnCiAgICApIHsKICAgICAgJHBpY2tlci5hZGRDbGFzcygnY29sb3JwaWNrZXItd2l0aC1hbHBoYScpOwogICAgfQogICAgaWYgKHRoaXMub3B0aW9ucy5hbGlnbiA9PT0gJ3JpZ2h0JykgewogICAgICAkcGlja2VyLmFkZENsYXNzKCdjb2xvcnBpY2tlci1yaWdodCcpOwogICAgfQogICAgaWYgKHRoaXMub3B0aW9ucy5pbmxpbmUgPT09IHRydWUpIHsKICAgICAgJHBpY2tlci5hZGRDbGFzcygnY29sb3JwaWNrZXItbm8tYXJyb3cnKTsKICAgIH0KICAgIGlmICh0aGlzLm9wdGlvbnMuY29sb3JTZWxlY3RvcnMpIHsKICAgICAgdmFyIGNvbG9ycGlja2VyID0gdGhpcywKICAgICAgICBzZWxlY3RvcnNDb250YWluZXIgPSBjb2xvcnBpY2tlci5waWNrZXIuZmluZCgnLmNvbG9ycGlja2VyLXNlbGVjdG9ycycpOwoKICAgICAgaWYgKHNlbGVjdG9yc0NvbnRhaW5lci5sZW5ndGggPiAwKSB7CiAgICAgICAgJC5lYWNoKHRoaXMub3B0aW9ucy5jb2xvclNlbGVjdG9ycywgZnVuY3Rpb24obmFtZSwgY29sb3IpIHsKICAgICAgICAgIHZhciAkYnRuID0gJCgnPGkgLz4nKQogICAgICAgICAgICAuYWRkQ2xhc3MoJ2NvbG9ycGlja2VyLXNlbGVjdG9ycy1jb2xvcicpCiAgICAgICAgICAgIC5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBjb2xvcikKICAgICAgICAgICAgLmRhdGEoJ2NsYXNzJywgbmFtZSkuZGF0YSgnYWxpYXMnLCBuYW1lKTsKCiAgICAgICAgICAkYnRuLm9uKCdtb3VzZWRvd24uY29sb3JwaWNrZXIgdG91Y2hzdGFydC5jb2xvcnBpY2tlcicsIGZ1bmN0aW9uKGV2ZW50KSB7CiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgIGNvbG9ycGlja2VyLnNldFZhbHVlKAogICAgICAgICAgICAgIGNvbG9ycGlja2VyLmZvcm1hdCA9PT0gJ2FsaWFzJyA\\\/IG9wdGlvbiA6IHt9KTsKCiAgICAgIGlmICghaW5zdCkgewogICAgICAgIGluc3QgPSBuZXcgQ29sb3JwaWNrZXIodGhpcywgb3B0aW9ucyk7CiAgICAgICAgJHRoaXMuZGF0YSgnY29sb3JwaWNrZXInLCBpbnN0KTsKICAgICAgfQoKICAgICAgaWYgKHR5cGVvZiBvcHRpb24gPT09ICdzdHJpbmcnKSB7CiAgICAgICAgaWYgKCQuaXNGdW5jdGlvbihpbnN0W29wdGlvbl0pKSB7CiAgICAgICAgICByZXR1cm5WYWx1ZSA9IGluc3Rbb3B0aW9uXS5hcHBseShpbnN0LCBhcGlBcmdzKTsKICAgICAgICB9IGVsc2UgeyAvLyBpdHMgYSBwcm9wZXJ0eSA\/CiAgICAgICAgICBpZiAoYXBpQXJncy5sZW5ndGgpIHsKICAgICAgICAgICAgLy8gc2V0IHByb3BlcnR5CiAgICAgICAgICAgIGluc3Rbb3B0aW9uXSA9IGFwaUFyZ3NbMF07CiAgICAgICAgICB9CiAgICAgICAgICByZXR1cm5WYWx1ZSA9IGluc3Rbb3B0aW9uXTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuVmFsdWUgPSAkdGhpczsKICAgICAgfQogICAgfSk7CiAgICByZXR1cm4gaXNTaW5nbGVFbGVtZW50ID8gcmV0dXJuVmFsdWUgOiAkanE7CiAgfTsKCiAgJC5mbi5jb2xvcnBpY2tlci5jb25zdHJ1Y3RvciA9IENvbG9ycGlja2VyOwoKfSkpOwo=",
    "size": "38858"
}