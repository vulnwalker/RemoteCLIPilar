{
    "namaFile": "pages\/base_main_v5.php",
    "lastUpdate": "2018-01-10+13:25:27.50",
    "contentFile": "\/UGc9TG9nT3V0JzsNCiAgfQ0KPC9zY3JpcHQ+DQo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdqcy9wb3N0aW5nLmpzJyBsYW5ndWFnZT0nSmF2YVNjcmlwdCcgPjwvc2NyaXB0Pg0KDQoiOw0KDQokTWVudXY1LT5OYXYxID0gIg0KPG5hdiBjbGFzcz0nbmF2YmFyIG5hdmJhci1pbnZlcnNlJyBpZD0naGVhZGVyJyBzdHlsZT0nYm9yZGVyOiBub25lOyBib3JkZXItcmFkaXVzOiAwOyBtYXJnaW4tYm90dG9tOiAwOyBtaW4taGVpZ2h0OiA4cHg7IGhlaWdodDogJGhlYWRlckhlaWdodFtvcHRpb25fdmFsdWVdcHg7Jz4gPCEtLSBuYXZiYXItZGVmYXVsdCAtLT4NCg0KICAgIDxkaXYgY2xhc3M9J2NvbnRhaW5lci1mbHVpZCc+DQoNCiAgICAgIDx0YWJsZSBzdHlsZT0nd2lkdGg6MTAwJTsnPg0KICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgIDx0aCBzdHlsZT0naGVpZ2h0OiAkaGVhZGVySGVpZ2h0W29wdGlvbl92YWx1ZV1weDsgd2lkdGg6NTBweDsnPg0KICAgICAgICAgICAgICA8aW1nIHNyYz0nTWVkaWEvaW1hZ2VzLyRpbWFnZTNbbmFtYV0vJGltYWdlMltkaXJlY3RvcnldJyBzdHlsZT0nd2lkdGg6JHdpZHRoTG9nb1tvcHRpb25fdmFsdWVdcHg7IGhlaWdodDokaGVpZ2h0TG9nb1tvcHRpb25fdmFsdWVdcHg7Jz4NCiAgICAgICAgICAgIDwvdGg+DQogICAgICAgICAgICA8dGggc3R5bGU9J2hlaWdodDogJGhlYWRlckhlaWdodFtvcHRpb25fdmFsdWVdcHg7Jz4NCiAgICAgICAgICAgICAgPGEgaHJlZj0nJHNpdGVfdXJsW29wdGlvbl92YWx1ZV0nIGlkPSdhZm9udE5hdicgc3R5bGU9J2NvbG9yOiAkaGVhZGVyVGV4dENvbG9yW29wdGlvbl92YWx1ZV07IGZvbnQtd2VpZ2h0OiBib2xkOyBmb250LXNpemU6JGhlYWRlckZvbnRTaXplW29wdGlvbl92YWx1ZV1weDsnPiRoZWFkZXJfdGl0bGVbb3B0aW9uX3ZhbHVlXTwvYT4NCiAgICAgICAgICAgIDwvdGg+DQogICAgICAgICAgICA8dGggc3R5bGU9J2hlaWdodDogJGhlYWRlckhlaWdodFtvcHRpb25fdmFsdWVdcHg7Jz4NCiAgICAgICAgICAgICAgPGEgY2xhc3M9J2Nsb2NrJyBzdHlsZT0nZGlzcGxheTokZGlzcGxheURhdGVUaW1lOyAgIGNvbG9yOiRoZWFkZXJUZXh0Q29sb3Jbb3B0aW9uX3ZhbHVlXTsgZmxvYXQ6cmlnaHQ7Jz48L2E+DQogICAgICAgICAgICA8L3RoPg0KICAgICAgICAgICAgPHRoIHN0eWxlPSdoZWlnaHQ6ICRoZWFkZXJIZWlnaHRbb3B0aW9uX3ZhbHVlXXB4OyB3aWR0aDogMjAwcHg7Jz4NCiAgICAgICAgICAgIDx1bCBjbGFzcz0nbmF2IG5hdmJhci1uYXYnIHN0eWxlPSdmbG9hdDpyaWdodDsnPg0KICAgICAgICAgICAgICA8bGkgY2xhc3M9J2Ryb3Bkb3duJz4NCiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J3B1bGwtcmlnaHQnPg0KICAgICAgICAgICAgICAgIDxpbWcgc3JjPSdhc3NldHMvaW1hZ2VzL3VzZXJuYW1lLnBuZyc+DQogICAgICAgICAgICAgICAgPGEgaHJlZj0nIycgY2xhc3M9J2Ryb3Bkb3duLXRvZ2dsZScgZGF0YS10b2dnbGU9J2Ryb3Bkb3duJyBpZD0nYWZvbnROYXYnIHN0eWxlPSdjb2xvcjogJGhlYWRlclRleHRDb2xvcltvcHRpb25fdmFsdWVdOyBmb250LXdlaWdodDogYm9sZDsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyc+Ii4kX0NPT0tJRVsnY29JRCddLiI8YiBjbGFzcz0nY2FyZXQnPjwvYj48L2E+DQogICAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICAgICAgPHVsIGNsYXNzPSdkcm9wZG93bi1tZW51IGRyb3Bkb3duLW1lbnUtcmlnaHQnIGlkPSdyZW1peCc+DQogICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9JyMnIGlkPSdhZm9udE5hdic+R2FudGkgUGFzc3dvcmQ8L2E+PC9saT4NCiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0nIycgaWQ9J2Fmb250TmF2Jz5UYW1iYWggUGhvdG88L2E+PC9saT4NCiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0ncGFnZXMucGhwP1BnPWdlbmVyYWxTZXR0aW5nJyB0YXJnZXQ9J19ibGFuaycgaWQ9J2Fmb250TmF2Jz5EZXZlbG9wbWVudDwvbGk+DQogICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9JyMnIG9uY2xpY2s9J2xvZ291dCgpJyBpZD0nYWZvbnROYXYnPktlbHVhcjwvYT48L2xpPg0KICAgICAgICAgICAgICA8L3VsPg0KICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgPC91bD4NCg0KICAgICAgICAgICAgPC90aD4NCiAgICAgICAgICA8L3RyPg0KICAgICAgPC90YWJsZT4NCg0KICAgIDwvZGl2Pg0KICA8L25hdj4NCiI7DQoNCiRNZW51djUtPk5hdjIgPSAiDQo8bmF2IGNsYXNzPSduYXZiYXIgbmF2YmFyLWludmVyc2UnIHN0eWxlPSdiYWNrZ3JvdW5kLWNvbG9yOiAkbWVudV9iYXJfY29sb3Jbb3B0aW9uX3ZhbHVlXTsgYm9yZGVyOiBub25lOyBib3JkZXItcmFkaXVzOiAwOyBtaW4taGVpZ2h0OiA4cHg7IGhlaWdodDogJGhlaWdodE1lbnViYXJbb3B0aW9uX3ZhbHVlXXB4OyBib3JkZXItYm90dG9tOiAzcHggc29saWQgJHdhcm5hR2FyaXNCYXdhaFtvcHRpb25fdmFsdWVdOyBkaXNwbGF5OiAkZGlzcGxheU1lbnViYXInPiA8IS0tIG5hdmJhci1kZWZhdWx0IC0tPg0KDQogICAgPGRpdiBjbGFzcz0nY29udGFpbmVyLWZsdWlkJz4NCg0KICAgICAgPHRhYmxlIHN0eWxlPSd3aWR0aDoxMDAlOyc+DQogICAgICAgICAgPHRyPg0KICAgICAgICAgICAgPHRoIHN0eWxlPSdoZWlnaHQ6ICRoZWlnaHRNZW51YmFyW29wdGlvbl92YWx1ZV1weDsnPg0KICAgICAgICAgICAgICA8dWwgY2xhc3M9J25hdiBuYXZiYXItbmF2JyBzdHlsZT0nd2lkdGg6MTAwJTsnPg0KICAgICAgICAgICAgICAgICIuJHN5c3RlbS4iDQogICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICA8L3RoPg0KICAgICAgICAgIDwvdHI+DQogICAgICA8L3RhYmxlPg0KDQogICAgPC9kaXY+DQogIDwvbmF2Pg0KIjsNCg0KJE1lbnV2NS0+Zm9vdGVyMSA9ICINCjxmb290ZXIgY2xhc3M9J25hdmJhci1kZWZhdWx0IG5hdmJhci1maXhlZC1ib3R0b20nIHN0eWxlPSdiYWNrZ3JvdW5kLWNvbG9yOiAkY29weXJpZ2h0X2NvbG9yW29wdGlvbl92YWx1ZV07IG1hcmdpbi1ib3R0b206IDIuNSU7IGRpc3BsYXk6ICRkaXNwbGF5Rm9vdGVyJz4NCiAgICA8ZGl2IGNsYXNzPSdjb250YWluZXItZmx1aWQnPg0KICAgICAgPHNwYW4gY2xhc3M9J3RleHQtbXV0ZWQnPg0KICAgICAgICA8aDUgc3R5bGU9J2NvbG9yOiB3aGl0ZTsgZm9udC1zaXplOiAkZm9vdGVyRm9udFNpemVbb3B0aW9uX3ZhbHVlXXB4Oyc+DQogICAgICAgICAgPG1hcnF1ZWU+JGNvcHlyaWdodF90aXRsZVtvcHRpb25fdmFsdWVdPC9tYXJxdWVlPg0KICAgICAgICA8L2g1Pg0KICAgICAgPC9zcGFuPg0KICAgIDwvZGl2Pg0KICA8L2Zvb3Rlcj4NCiI7DQoNCg0KDQokTWVudXY1LT5mb290ZXIyID0gIg0KPGZvb3RlciBjbGFzcz0nbmF2YmFyLWRlZmF1bHQgbmF2YmFyLWZpeGVkLWJvdHRvbScgaWQ9J2Zvb3Rlcicgc3R5bGU9J2Rpc3BsYXk6JGRpc3BsYXlGb290ZXIyOyc+DQogICAgPGRpdiBjbGFzcz0nY29udGFpbmVyLWZsdWlkJz4NCiAgICAgIDx0YWJsZSBzdHlsZT0nd2lkdGg6MTAwJTsnPg0KICAgICAgICA8dHI+DQogICAgICAgICAgPHRoIHN0eWxlPSd3aWR0aDo1MCU7Jz4NCiAgICAgICAgICAgIDxoNSBzdHlsZT0nY29sb3I6IHdoaXRlOyBmb250LXNpemU6ICRmb290ZXJGb250U2l6ZVtvcHRpb25fdmFsdWVdcHg7Jz4NCiAgICAgICAgICAgICAgJGZvb3Rlcl90ZXh0W29wdGlvbl92YWx1ZV0NCiAgICAgICAgICAgIDwvaDU+DQogICAgICAgICAgPC90aD4NCg0KICAgICAgICAgIDx0aCBzdHlsZT0nd2lkdGg6NTA7IHRleHQtYWxpZ246cmlnaHQ7Jz4NCiAgICAgICAgICAgICIuJGZvb3RlcjIuIg0KICAgICAgICAgIDwvdGg+DQogICAgICAgIDwvdHI+DQogICAgICA8L3RhYmxlPg0KICAgIDwvZGl2Pg0KICA8L2Zvb3Rlcj4NCiI7DQoNCg0KJE1haW4tPkJhc2UgPSAiDQoNCjwhRE9DVFlQRSBodG1sPg0KPGh0bWwgbGFuZz0naWQnPg0KPGhlYWQ+DQogIDxtZXRhIGNoYXJzZXQ9J3V0Zi04Jz4NCiAgPG1ldGEgbmFtZT0ndmlld3BvcnQnIGNvbnRlbnQ9J3dpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xJz4NCiAgPHRpdGxlPiRzaXRlX3RpdGxlW29wdGlvbl92YWx1ZV08L3RpdGxlPg0KICAiLiRNZW51djUtPnN0eWxlLiINCiAgIi4kTWVudXY1LT5zY3JpcHQuIg0KDQo8L2hlYWQ+DQo8Ym9keT4NCg0KDQoNCiAgIi4kTWVudXY1LT5OYXYxLiINCg0KICAiLiRNZW51djUtPk5hdjIuIg0KDQogIDxkaXYgY2xhc3M9J2NvbnRhaW5lci1mbHVpZCcgaWQ9J2lzaWtvbnRlbicgc3R5bGU9J2JhY2tncm91bmQtY29sb3I6ICRjb250ZW50QmFja2dyb3VuZFtvcHRpb25fdmFsdWVdOyBmb250LWZhbWlseTogJENvbnRlbnRGb250U3R5bGVbb3B0aW9uX3ZhbHVlXTsnPg0KICAgICIuJGNvbnRhaW5lci4iDQogIDwvZGl2Pg0KDQogICIuJE1lbnV2NS0+Zm9vdGVyMS4iDQoNCiAgIi4kTWVudXY1LT5mb290ZXIyLiINCg0KIi4kTWVudXY1LT5zY3JpcHQyLiINCg0KDQo8YSBocmVmPScjeCcgY2xhc3M9J292ZXJsYXknIGlkPSdwb3N0aW5nQW5nZ2FyYW5LYXMnPjwvYT4NCg0KDQo8ZGl2IGNsYXNzPSdwb3B1cCcgc3R5bGU9J3BhZGRpbmc6IDAlOyc+DQo8Zm9ybSBhY3Rpb249J3Byb3Nlcy5waHA\/YWN0PWxvZ2luJyBtZXRob2Q9J1BPU1QnPg0KICAgIDxkaXYgY2xhc3M9J2Zvcm0nIHN0eWxlPScNCmJhY2tncm91bmQ6IGJsYWNrOw0KY29sb3I6ICNmZmY7DQp0ZXh0LWFsaWduOiBsZWZ0Ow0KUEFERElORzogMiU7DQonPlBPU1RJTkcgQU5HR0FSQU4gS0FTPC9kaXY+DQo8YnI+DQo8ZGl2IHN0eWxlPSd0ZXh0LWFsaWduOmxlZnQ7Ym9yZGVyOiAxcHggc29saWQgYmxhY2s7bWFyZ2luOiAyJTtwYWRkaW5nOiAyJTttYXJnaW4tdG9wOiAtMThweDsnPg0KDQogICAgICAgPGRpdj4NCiAgICAgICAgIDxzcGFuIHN0eWxlPSdtYXJnaW46IDE2cHg7IGNvbG9yOmJsYWNrOyc+UE9TVElORyBLRSA6IDwvc3Bhbj4gPHNlbGVjdCBvbmNoYW5nZT0ncmthU0tQRDIyMS50dWp1YW5Qb3N0aW5nQ2hhbmdlZCgpOycgbmFtZT0nY21iUG9zdGluZ0FuZ2dhcmFuS2FzJyBpZD0nY21iUG9zdGluZ0FuZ2dhcmFuS2FzJz48b3B0aW9uIHZhbHVlPScxMCc+U1BEPC9vcHRpb24+PC9zZWxlY3Q+DQogICAgICAgPC9kaXY+DQogICA8L2Zvcm0+DQoNCjwvZGl2Pg0KPGRpdiBzdHlsZT0nDQp0ZXh0LWFsaWduOiByaWdodDsNCm1hcmdpbi1yaWdodDogMiU7DQpjb2xvcjogYmxhY2s7Jz4NCjxpbnB1dCB0eXBlPSdidXR0b24nIHZhbHVlPSdQT1NUJyBvbmNsaWNrPXBvc3RBbmdnYXJhbkthcygpOyA+ICZuYnNwIDxpbnB1dCB0eXBlPSdidXR0b24nIHZhbHVlPSdCQVRBTCcgb25jbGljaz1jbG9zZVBvcHVwKCk7ID4NCjwvZGl2Pg0KICAgICAgICAgICAgPC9mb3JtPg0KICAgICAgICA8L2Rpdj4NCg0KPGEgaHJlZj0nI3gnIGNsYXNzPSdvdmVybGF5JyBpZD0ncG9zdGluZ1JLQSc+PC9hPg0KICAgICAgICA8ZGl2IGNsYXNzPSdwb3B1cCcgc3R5bGU9J3BhZGRpbmc6IDAlOyc+DQogICAgICAgIDxmb3JtIGFjdGlvbj0ncHJvc2VzLnBocD9hY3Q9bG9naW4nIG1ldGhvZD0nUE9TVCc+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSdmb3JtJyBzdHlsZT0nDQogICAgYmFja2dyb3VuZDogYmxhY2s7DQogICAgY29sb3I6ICNmZmY7DQogICAgdGV4dC1hbGlnbjogbGVmdDsNCiAgICBQQURESU5HOiAyJTsNCic+UE9TVElORyBSS0E8L2Rpdj48YnI+DQoNCiAgICAgPGRpdiBzdHlsZT0ndGV4dC1hbGlnbjpsZWZ0O2JvcmRlcjogMXB4IHNvbGlkIGJsYWNrO21hcmdpbjogMiU7cGFkZGluZzogMiU7bWFyZ2luLXRvcDogLTE4cHg7Jz4NCg0KICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9J21hcmdpbjogMTZweDsgY29sb3I6YmxhY2s7Jz5QT1NUSU5HIEtFIDogPC9zcGFuPiA8c2VsZWN0IG9uY2hhbmdlPSdya2FTS1BEMjIxLnR1anVhblBvc3RpbmdDaGFuZ2VkKCk7JyBuYW1lPSdjbWJQb3N0aW5nJyBpZD0nY21iUG9zdGluZyc+PG9wdGlvbiB2YWx1ZT0nJz4tLSBQT1NUSU5HIC0tPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0nOSc+RFBBPC9vcHRpb24+PC9zZWxlY3Q+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9mb3JtPg0KDQo8L2Rpdj4NCjxkaXYgc3R5bGU9Jw0KICAgIHRleHQtYWxpZ246IHJpZ2h0Ow0KICAgIG1hcmdpbi1yaWdodDogMiU7DQogICAgY29sb3I6IGJsYWNrOyc+DQogIDxpbnB1dCB0eXBlPSdidXR0b24nIHZhbHVlPSdQT1NUJyBvbmNsaWNrPXBvc3RSS0EoKTsgPiAmbmJzcCA8aW5wdXQgdHlwZT0nYnV0dG9uJyB2YWx1ZT0nQkFUQUwnIG9uY2xpY2s9Y2xvc2VQb3B1cCgpOyA+DQo8L2Rpdj4NCjwvYm9keT4NCjwvaHRtbD4NCg0KIjsNCg0KPz4NCg==",
    "size": "35674"
}