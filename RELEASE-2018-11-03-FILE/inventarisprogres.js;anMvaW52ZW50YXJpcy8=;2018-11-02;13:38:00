{
    "namaFile": "js\/inventaris\/inventarisprogres.js",
    "lastUpdate": "2018-11-02+13:38:00.45",
    "contentFile": "dmFyIEludmVudGFyaXNQcm9ncmVzU2twZCA9IG5ldyBTa3BkQ2xzKHsNCglwcmVmaXggOiAnSW52ZW50YXJpc1Byb2dyZXNTa3BkJywgZm9ybU5hbWU6J2FkbWluRm9ybScNCn0pOw0KDQoNCnZhciBJbnZlbnRhcmlzUHJvZ3JlcyA9IG5ldyBEYWZ0YXJPYmoyKHsNCglwcmVmaXggOiAnSW52ZW50YXJpc1Byb2dyZXMnLA0KCS8vdXJsIDogJ3BhZ2VzLnBocD9QZz1SZWthcDJBangnLA0KCXVybCA6ICdwYWdlcy5waHA\/UGc9SW52ZW50YXJpc1Byb2dyZXMnLA0KCWZvcm1OYW1lIDogJ2FkbWluRm9ybScsLy8gJ3J1YW5nX2Zvcm0nLA0KDQoJbm9kZUxpc3QgOiBudWxsLA0KCWl0ZXJhdG9yOiAwLA0KCWFqeDpudWxsLA0KCWptbGdhZ2FsIDogMCwNCglqbWxrb2w6IDMsDQoNCglsb2FkaW5nIDogZnVuY3Rpb24oKXsNCgkJLy9hbGVydCgnbG9hZGluZycpOw0KCQl0aGlzLnRvcEJhclJlbmRlcigpOw0KCQl0aGlzLmZpbHRlclJlbmRlcigpOw0KCQkvL3RoaXMuZGFmdGFyUmVuZGVyKCk7DQoJCS8vdGhpcy5zdW1IYWxSZW5kZXIoKTsNCgl9LA0KDQoJcmVmcmVzaExpc3Q6IGZ1bmN0aW9uKHJlc2V0UGFnZU5vKXsNCgkJaWYgKHJlc2V0UGFnZU5vICYmIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMucHJlZml4KydfaGFsJykgKSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLnByZWZpeCsnX2hhbCcpLnZhbHVlPTE7DQoJCXRoaXMuZGFmdGFyUmVuZGVyKCk7DQoJCXRoaXMuZmlsdGVyUmVuZGVyKCk7DQoJfSwNCg0KCWNldGFrQWxsOiBmdW5jdGlvbigpew0KCQl2YXIgYUZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmZvcm1OYW1lKTsNCg0KCQl2YXIgdG1wID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Rpdl9jZWsnKS5pbm5lckhUTUw7DQoJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkaXZfY2VrJykuaW5uZXJIVE1MID0gJyc7DQoJCXZhciBzdHIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLnByZWZpeCsnX2NvbnRfZGFmdGFyJykuaW5uZXJIVE1MOw0KCQkvL3ZhciByZSA9IG5ldyBSZWdFeHAoJyInLCAnZycpOw0KCQlzdHIgPSByZXBsYWNlQWxsKHN0ciwgJyInLCAnJyk7DQoJCXN0ciA9IHJlcGxhY2VBbGwoc3RyLCAnY2xhc3M9a29wdGFibGUnLCAnY2xhc3M9Y2V0YWsnKTsNCgkJc3RyID0gcmVwbGFjZUFsbChzdHIsICc8YSAnLCAnPHNwYW4gJyk7DQoJCXN0ciA9IHJlcGxhY2VBbGwoc3RyLCAnR2FyaXNEYWZ0YXInLCAnR2FyaXNDZXRhaycpOw0KCQlzdHIgPSBzdHIucmVwbGFjZSgvW1xuXHJdL2csICcnKTsNCg0KCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGFmdGFyY2V0YWsnKS52YWx1ZSA9IHN0cjsNCg0KCQkvL3N0ciA9IHN0ci5yZXBsYWNlKCAnIicsICcnICk7DQoJCSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGFmdGFyY2V0YWsnKS52YWx1ZSA9IHN0cjsNCgkJYUZvcm0uYWN0aW9uPXRoaXMudXJsKycmdGlwZT1jZXRha19hbGwnOw0KCQlhRm9ybS50YXJnZXQ9J19ibGFuayc7DQoJCWFGb3JtLnN1Ym1pdCgpOw0KCQlhRm9ybS50YXJnZXQ9Jyc7DQoJfSwNCg0KCWV4cG9ydFhsczIgOiBmdW5jdGlvbigpew0KCQkvL2dldHRpbmcgZGF0YSBmcm9tIG91ciB0YWJsZQ0KCSAgICAvL3ZhciBkYXRhX3R5cGUgPSAnZGF0YTphcHBsaWNhdGlvbi92bmQubXMtZXhjZWwnOw0KCSAgICAvL3ZhciB0YWJsZV9kaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmNla0JpUHJlZml4Kydfd3JhcCcpOw0KCSAgICAvL3ZhciB0YWJsZV9odG1sID0gdGFibGVfZGl2Lm91dGVySFRNTC5yZXBsYWNlKC8gL2csICclMjAnKTsNCg0KCQkvL3ZhciB0YWJsZV9odG1sID0gdGFibGVUb0V4Y2VsKHRoaXMuY2VrQmlQcmVmaXgrJ193cmFwJywnY2VrX2JhcmFuZycpOw0KCQl2YXIgdG1wID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Rpdl9jZWsnKS5pbm5lckhUTUw7DQoJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkaXZfY2VrJykuaW5uZXJIVE1MID0gJyc7DQoJCXZhciBzdHIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggdGhpcy5wcmVmaXgrJ19jb250X2RhZnRhcicpLmlubmVySFRNTDsNCgkJLy92YXIgcmUgPSBuZXcgUmVnRXhwKCciJywgJ2cnKTsNCgkJc3RyID0gcmVwbGFjZUFsbChzdHIsICciJywgJycpOw0KCQlzdHIgPSByZXBsYWNlQWxsKHN0ciwgJ2NsYXNzPWtvcHRhYmxlJywgJ2NsYXNzPWNldGFrJyk7DQoJCXN0ciA9IHJlcGxhY2VBbGwoc3RyLCAnPGEgJywgJzxzcGFuICcpOw0KCQlzdHIgPSByZXBsYWNlQWxsKHN0ciwgJ0dhcmlzRGFmdGFyJywgJ0dhcmlzQ2V0YWsnKTsNCgkJc3RyID0gc3RyLnJlcGxhY2UoL1tcblxyXS9nLCAnJyk7DQoNCgkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RpdmNldGFrJykuaW5uZXJIVE1MID1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGl2Q2V0YWtIZWFkZXInKS5pbm5lckhUTUwgKyBzdHIrIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkaXZDZXRha0Zvb3RlcicpLmlubmVySFRNTDsNCgkJLy9hbGVydChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGl2Y2V0YWsnKS5pbm5lckhUTUwpOw0KCQl2YXIgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsNCgkgICAgYS5ocmVmID0gdGFibGVUb0V4Y2VsKCdkaXZjZXRhaycsJ3Jla2FwcGVueXVzdXRhbicpOw0KCSAgICBhLmRvd25sb2FkID0gJ3Jla2FwcGVueXVzdXRhbi54bHMnOw0KCQlkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOw0KCSAgICBhLmNsaWNrKCk7DQoJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkaXZfY2VrJykuaW5uZXJIVE1MID0gdG1wOw0KDQoJfSwNCg0KCWV4cG9ydFhscyA6IGZ1bmN0aW9uKCl7DQoJCXZhciBhRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuZm9ybU5hbWUpOw0KDQoJCXZhciB0bXAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGl2X2NlaycpLmlubmVySFRNTDsNCgkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Rpdl9jZWsnKS5pbm5lckhUTUwgPSAnJzsNCgkJdmFyIHN0ciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMucHJlZml4ICsgJ19jb250X2RhZnRhcicpLmlubmVySFRNTDsNCgkJLy92YXIgcmUgPSBuZXcgUmVnRXhwKCciJywgJ2cnKTsNCgkJc3RyID0gcmVwbGFjZUFsbChzdHIsICciJywgJycpOw0KCQlzdHIgPSByZXBsYWNlQWxsKHN0ciwgJ2NsYXNzPWtvcHRhYmxlJywgJ2NsYXNzPWNldGFrJyk7DQoJCXN0ciA9IHJlcGxhY2VBbGwoc3RyLCAnPGEgJywgJzxzcGFuICcpOw0KCQlzdHIgPSByZXBsYWNlQWxsKHN0ciwgJ0dhcmlzRGFmdGFyJywgJ0dhcmlzQ2V0YWsnKTsNCgkJc3RyID0gc3RyLnJlcGxhY2UoL1tcblxyXS9nLCAnJyk7DQoNCgkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RhZnRhcmNldGFrJykudmFsdWUgPSBzdHI7DQoNCgkJYUZvcm0uYWN0aW9uPXRoaXMudXJsKycmdGlwZT1leHBvcnRYbHMnOw0KCQkvL2FGb3JtLnRhcmdldD0nX2JsYW5rJzsNCgkJYUZvcm0uc3VibWl0KCk7DQoJCWFGb3JtLnRhcmdldD0nJzsNCgkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Rpdl9jZWsnKS5pbm5lckhUTUwgPSB0bXA7DQoNCgl9LA0KDQoJcmVxVG90YWxieUl0ZXI6ZnVuY3Rpb24oaXRlcmF0b3JfKXsNCgkJdmFyIG1lPXRoaXM7DQoJCS8vbWUuaXRlcmF0b3IrKzsNCgkJaWYobWUuaXRlcmF0b3IgPCBtZS5ub2RlTGlzdC5sZW5ndGggKXsNCgkJCXZhciBub2RlID0gbWUubm9kZUxpc3RbbWUuaXRlcmF0b3JdOw0KCQkJdmFyIGhyZWZfID0nJzsNCgkJCWlmIChub2RlLmlubmVySFRNTD09Jycpew0KCQkJCXZhciBub2RlID0gbWUubm9kZUxpc3RbbWUuaXRlcmF0b3JdOw0KCQkJCXZhciBocmVmXyA9IG5vZGUuZ2V0QXR0cmlidXRlKCdocmVmJyk7DQoJCQkJdmFyIGlkZWwgPSBub2RlLmdldEF0dHJpYnV0ZSgnaWQnKTsNCgkJCX0NCgkJCW1lLnJlcVRvdGFsKGhyZWZfLGlkZWwsbWUuaXRlcmF0b3IpOw0KCQl9ZWxzZXsgLy9zZWxlc2FpDQoJCQl2YXIgYnRUYW1waWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnRUYW1waWwnKTsNCgkJCWlmKGJ0VGFtcGlsKSBidFRhbXBpbC5kaXNhYmxlZD1mYWxzZTsNCg0KCQkJaWYobWUuam1sZ2FnYWw9PTApew0KCQkJCWFsZXJ0KCdSZWthcCBzZWxlc2FpJyk7DQoJCQl9ZWxzZXsNCgkJCQl2YXIgam1sZ2FnYWw9IG1lLmptbGdhZ2FsOw0KCQkJCW1lLmptbGdhZ2FsPTA7DQoJCQkJaWYoY29uZmlybSgnQWRhICcram1sZ2FnYWwrJyBkYXRhIGdhZ2FsIGRpaGl0dW5nISBDb2JhIGxhZ2k\",
    "size": "16671"
}