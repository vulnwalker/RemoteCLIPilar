{
    "namaFile": "pages\/ref\/ref_images\/ref_images.js",
    "lastUpdate": "2017-10-25+17:10:51.18",
    "contentFile": "DQoNCnZhciByZWZfaW1hZ2VzID0gbmV3IERhZnRhck9iajIoew0KICBwcmVmaXggOiAncmVmX2ltYWdlcycsDQogIHVybCA6ICdwYWdlcy5waHA\\/Jykpew0KICAgICAgICAvL2RvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7IA0KICAgICAgICB2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2hhcHVzY292ZXInOw0KICAgICAgICBhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7DQogICAgICAgICQuYWpheCh7DQogICAgICAgICAgdHlwZTonUE9TVCcsIA0KICAgICAgICAgIGRhdGE6JCgnIycrdGhpcy5mb3JtTmFtZSkuc2VyaWFsaXplKCksDQogICAgICAgICAgdXJsOiB0aGlzLnVybCsnJnRpcGU9aGFwdXMnLA0KICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgeyAgIA0KICAgICAgICAgICAgdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOyAgICANCiAgICAgICAgICAgIGRlbEVsZW0oY292ZXIpOyAgIA0KICAgICAgICAgICAgaWYocmVzcC5lcnI9PScnKXsgICAgICAgICAgICAgDQogICAgICAgICAgICAgIG1lLkNsb3NlKCk7DQogICAgICAgICAgICAgIG1lLnJlZnJlc2hMaXN0KHRydWUpDQogICAgICAgICAgICB9ZWxzZXsNCiAgICAgICAgICAgICAgYWxlcnQocmVzcC5lcnIpOw0KICAgICAgICAgICAgfSAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgfQ0KICAgICAgICB9KTsNCiAgICAgICAgDQogICAgICB9IA0KICAgIH0NCiAgfSwNCiAgDQogIA0KICANCiAgQ2xvc2UyOmZ1bmN0aW9uKCl7Ly9hbGVydCh0aGlzLmVsQ292ZXIpOw0KICAgIHZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyS0InOw0KICAgIGlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKSkgZGVsRWxlbShjb3Zlcik7ICAgICAgDQogICAgaWYodGlwZT09bnVsbCl7DQogICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdhdXRvJzsgICAgICAgICAgICANCiAgICB9DQogIH0sDQogIA0KICBDbG9zZTM6ZnVuY3Rpb24oKXsvL2FsZXJ0KHRoaXMuZWxDb3Zlcik7DQogICAgdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3JtY292ZXJLQyc7DQogICAgaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpKSBkZWxFbGVtKGNvdmVyKTsgICAgICANCiAgICBpZih0aXBlPT1udWxsKXsNCiAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2F1dG8nOyAgICAgICAgICAgIA0KICAgIH0NCiAgfSwNCiAgDQogIENsb3NlNDpmdW5jdGlvbigpey8vYWxlcnQodGhpcy5lbENvdmVyKTsNCiAgICB2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1jb3ZlcktEJzsNCiAgICBpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcikpIGRlbEVsZW0oY292ZXIpOyAgICAgIA0KICAgIGlmKHRpcGU9PW51bGwpew0KICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0nYXV0byc7ICAgICAgICAgICAgDQogICAgfQ0KICB9LA0KICANCiAgQ2xvc2U1OmZ1bmN0aW9uKCl7Ly9hbGVydCh0aGlzLmVsQ292ZXIpOw0KICAgIHZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyS0UnOw0KICAgIGlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKSkgZGVsRWxlbShjb3Zlcik7ICAgICAgDQogICAgaWYodGlwZT09bnVsbCl7DQogICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PSdhdXRvJzsgICAgICAgICAgICANCiAgICB9DQogIH0sDQogIA0KICBzaW1wYW5NZXJlazogZnVuY3Rpb24oZHQpew0KICAgIHZhciBtZT0gdGhpczsNCiAgICB2YXIgZXJyPScnOw0KICAgIA0KICAgIHRoaXMuT25FcnJvckNsb3NlID0gZmFsc2UgDQogICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsNCiAgICB2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1zaW1wYW5LQic7DQogICAgYWRkQ292ZXJQYWdlMihjb3ZlciwxLHRydWUsZmFsc2UpOw0KICAgIA0KICAgICQuYWpheCh7DQogICAgICB0eXBlOidQT1NUJywgDQogICAgICBkYXRhOiQoJyMnK3RoaXMucHJlZml4KydfS0Jmb3JtJykuc2VyaWFsaXplKCksDQogICAgICB1cmw6IHRoaXMudXJsKycmdGlwZT1TaW1wYW5LYXRlZ29yaScsDQogICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsNCiAgICAgICAgdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOyAgDQogICAgICAgIGRlbEVsZW0oY292ZXIpOyAgIA0KICAgICAgICBpZihyZXNwLmVycj09Jycpew0KICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjbWJLYXRlZ29yaScpLmlubmVySFRNTCA9IHJlc3AuY29udGVudC5yZXBsYWNlcjsNCiAgICAgICAgICBtZS5DbG9zZTIoKTsNCiAgICAgICAgfWVsc2V7DQogICAgICAgICAgYWxlcnQocmVzcC5lcnIpOw0KICAgICAgICB9DQogICAgICAgIH0NCiAgICB9KTsgDQogIH0sDQogIA0KICANCiAgDQogIFNpbXBhbkVkaXQ6IGZ1bmN0aW9uKCl7DQogICAgdmFyIG1lPSB0aGlzOyANCiAgICB0aGlzLk9uRXJyb3JDbG9zZSA9IGZhbHNlIA0KICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7DQogICAgdmFyIGNvdmVyID0gdGhpcy5wcmVmaXgrJ19mb3Jtc2ltcGFuJzsNCiAgICBhZGRDb3ZlclBhZ2UyKGNvdmVyLDEsdHJ1ZSxmYWxzZSk7ICANCiAgICAvKnRoaXMuc2VuZFJlcSgNCiAgICAgIHRoaXMudXJsLA0KICAgICAgeyBpZHByczogMCwgZGFmdGFyUHJvc2VzOiBuZXcgQXJyYXkoJ3NpbXBhbicpfSwNCiAgICAgIHRoaXMuZm9ybURpYWxvZyk7Ki8NCiAgICAkLmFqYXgoew0KICAgICAgdHlwZTonUE9TVCcsIA0KICAgICAgZGF0YTokKCcjcmVmX2ltYWdlc19mb3JtJykuc2VyaWFsaXplKCksDQogICAgICB1cmw6IHRoaXMudXJsKycmdGlwZT1zaW1wYW5FZGl0JywNCiAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgeyAgIA0KICAgICAgICB2YXIgcmVzcCA9IGV2YWwoJygnICsgZGF0YSArICcpJyk7ICANCiAgICAgICAgZGVsRWxlbShjb3Zlcik7ICAgDQogICAgICAgIC8vZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY292ZXIpLmlubmVySFRNTCA9IHJlc3AuY29udGVudDsNCiAgICAgICAgaWYocmVzcC5lcnI9PScnKXsNCiAgICAgICAgICBhbGVydCgnRGF0YSBiZXJoYXNpbCBkaXNpbXBhbicpOw0KICAgICAgICAgIG1lLkNsb3NlKCk7DQogICAgICAgICAgbWUucmVmcmVzaExpc3QodHJ1ZSk7DQogICAgICAgICAgbWUuQWZ0ZXJTaW1wYW4oKTsgDQogICAgICAgIH0NCiAgICAgICAgZWxzZXsNCiAgICAgICAgICBhbGVydChyZXNwLmVycik7DQogICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0pOw0KICB9LA0KDQogICAgYnRmaWxlX29uY2hhbmdlOiBmdW5jdGlvbigpew0KICAgICQoJyNVcGxvYWRGb3JtJykuc3VibWl0KCk7ICANCiAgfSwNCg0KICBTdWJNb2R1bEVkaXQ6IGZ1bmN0aW9uKCl7DQogICAgdmFyIG1lID0gdGhpczsNCiAgICB2YXIgZXJyPScnOw0KICAgIGlmKCQoIiNjbWJTdWJNb2R1bCIpLnZhbCgpID09ICcnKXsNCiAgICAgIGVyciA9ICJQaWxpaCBTdWIgTW9kdWwiOw0KICAgIH0NCiAgICBpZiAoZXJyID09JycgKXsgICANCiAgICAgIHZhciBjb3ZlciA9IHRoaXMucHJlZml4KydfZm9ybWNvdmVyS0InOw0KICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsNCiAgICAgIGFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsgIA0KICAgICAgJC5hamF4KHsNCiAgICAgICAgdHlwZTonUE9TVCcsIA0KICAgICAgICBkYXRhOntpZF9rYXRlZ29yaTokKCcjY21iS2F0ZWdvcmknKS52YWwoKX0sDQogICAgICAgICAgdXJsOiB0aGlzLnVybCsnJnRpcGU9Zm9ybUJhcnVTdWJNb2R1bCcsDQogICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgeyAgIA0KICAgICAgICAgIHZhciByZXNwID0gZXZhbCgnKCcgKyBkYXRhICsgJyknKTsgICAgICANCiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb3ZlcikuaW5uZXJIVE1MID0gcmVzcC5jb250ZW50OyAgICAgIA0KICAgICAgICAgIC8vbWUuQWZ0ZXJGb3JtQmFydSgpOw0KICAgICAgICAgIH0NCiAgICAgIH0pOw0KICAgIH1lbHNlew0KICAgICAgYWxlcnQoZXJyKTsNCiAgICB9IA0KICAgIA0KICB9LA0KDQogIGJ0ZmlsZV9vbmNoYW5nZTogZnVuY3Rpb24oKXsNCiAgICAkKCcjVXBsb2FkRm9ybScpLnN1Ym1pdCgpOyAgDQogIH0sDQogIA0KICBTaW1wYW46IGZ1bmN0aW9uKGlkKXsNCiAgICB2YXIgbWU9IHRoaXM7IA0KICAgIHRoaXMuT25FcnJvckNsb3NlID0gZmFsc2UgDQogICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzsNCiAgICB2YXIgY292ZXIgPSB0aGlzLnByZWZpeCsnX2Zvcm1zaW1wYW4nOw0KICAgIGFkZENvdmVyUGFnZTIoY292ZXIsMSx0cnVlLGZhbHNlKTsgIA0KICAgICQuYWpheCh7DQogICAgICB0eXBlOidQT1NUJywgDQogICAgICBkYXRhOiQoJyMnK3RoaXMucHJlZml4KydfZm9ybScpLnNlcmlhbGl6ZSgpKycmaHVibGE9JytpZCwNCiAgICAgIHVybDogdGhpcy51cmwrJyZ0aXBlPXNpbXBhbicsDQogICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsgICANCiAgICAgICAgdmFyIHJlc3AgPSBldmFsKCcoJyArIGRhdGEgKyAnKScpOyAgDQogICAgICAgIGRlbEVsZW0oY292ZXIpOyAgIA0KICAgICAgICAvL2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvdmVyKS5pbm5lckhUTUwgPSByZXNwLmNvbnRlbnQ7DQogICAgICAgIGlmKHJlc3AuZXJyPT0nJyl7DQogICAgICAgICAgbWUuQ2xvc2UoKTsNCiAgICAgICAgICBtZS5BZnRlclNpbXBhbigpOw0KICAgICAgICB9ZWxzZXsNCiAgICAgICAgICBhbGVydChyZXNwLmVycik7DQogICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0pOw0KICB9DQogIA0KICANCiAgICANCn0pOw0K",
    "size": "13245"
}