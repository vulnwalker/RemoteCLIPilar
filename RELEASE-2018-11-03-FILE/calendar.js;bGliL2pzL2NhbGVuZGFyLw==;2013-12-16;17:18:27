{
    "namaFile": "lib\/js\/calendar\/calendar.js",
    "lastUpdate": "2013-12-16+17:18:27.00",
    "contentFile": "\/ICJDYWxlbmRhci5zaG93WWVhcnNDb21ibyh0cnVlKSIgOiAiQ2FsZW5kYXIuc2hvd1llYXJzQ29tYm8oZmFsc2UpIiwgMjUwKTsNCgl9IGVsc2Ugew0KCQljYWwudGltZW91dCA9IG51bGw7DQoJfQ0KfTsNCg0KQ2FsZW5kYXIuZGF5TW91c2VEYmxDbGljayA9IGZ1bmN0aW9uKGV2KSB7DQoJQ2FsZW5kYXIuY2VsbENsaWNrKENhbGVuZGFyLmdldEVsZW1lbnQoZXYpKTsNCglpZiAoQ2FsZW5kYXIuaXNfaWUpIHsNCgkJZG9jdW1lbnQuc2VsZWN0aW9uLmVtcHR5KCk7DQoJfQ0KfTsNCg0KQ2FsZW5kYXIuZGF5TW91c2VPdmVyID0gZnVuY3Rpb24oZXYpIHsNCgl2YXIgZWwgPSBDYWxlbmRhci5nZXRFbGVtZW50KGV2KTsNCglpZiAoQ2FsZW5kYXIuaXNSZWxhdGVkKGVsLCBldikgfHwgQ2FsZW5kYXIuX0MgfHwgZWwuZGlzYWJsZWQpIHsNCgkJcmV0dXJuIGZhbHNlOw0KCX0NCglpZiAoZWwudHRpcCkgew0KCQlpZiAoZWwudHRpcC5zdWJzdHIoMCwgMSkgPT0gIl8iKSB7DQoJCQl2YXIgZGF0ZSA9IG51bGw7DQoJCQl3aXRoIChlbC5jYWxlbmRhci5kYXRlKSB7DQoJCQkJZGF0ZSA9IG5ldyBEYXRlKGdldEZ1bGxZZWFyKCksIGdldE1vbnRoKCksIGVsLmNhbGRhdGUpOw0KCQkJfQ0KCQkJZWwudHRpcCA9IGRhdGUucHJpbnQoZWwuY2FsZW5kYXIudHREYXRlRm9ybWF0KSArIGVsLnR0aXAuc3Vic3RyKDEpOw0KCQl9DQoJCWVsLmNhbGVuZGFyLnRvb2x0aXBzLmZpcnN0Q2hpbGQuZGF0YSA9IGVsLnR0aXA7DQoJfQ0KCWlmIChlbC5uYXZ0eXBlICE9IDMwMCkgew0KCQlDYWxlbmRhci5hZGRDbGFzcyhlbCwgImhpbGl0ZSIpOw0KCQlpZiAoZWwuY2FsZGF0ZSkgew0KCQkJQ2FsZW5kYXIuYWRkQ2xhc3MoZWwucGFyZW50Tm9kZSwgInJvd2hpbGl0ZSIpOw0KCQl9DQoJfQ0KCUNhbGVuZGFyLnN0b3BFdmVudChldik7DQp9Ow0KDQpDYWxlbmRhci5kYXlNb3VzZU91dCA9IGZ1bmN0aW9uKGV2KSB7DQoJd2l0aCAoQ2FsZW5kYXIpIHsNCgkJdmFyIGVsID0gZ2V0RWxlbWVudChldik7DQoJCWlmIChpc1JlbGF0ZWQoZWwsIGV2KSB8fCBfQyB8fCBlbC5kaXNhYmxlZCkgew0KCQkJcmV0dXJuIGZhbHNlOw0KCQl9DQoJCXJlbW92ZUNsYXNzKGVsLCAiaGlsaXRlIik7DQoJCWlmIChlbC5jYWxkYXRlKSB7DQoJCQlyZW1vdmVDbGFzcyhlbC5wYXJlbnROb2RlLCAicm93aGlsaXRlIik7DQoJCX0NCgkJZWwuY2FsZW5kYXIudG9vbHRpcHMuZmlyc3RDaGlsZC5kYXRhID0gX1RUWyJTRUxfREFURSJdOw0KCQlzdG9wRXZlbnQoZXYpOw0KCX0NCn07DQoNCi8qKg0KICogIEEgZ2VuZXJpYyAiY2xpY2siIGhhbmRsZXIgOikgaGFuZGxlcyBhbGwgdHlwZXMgb2YgYnV0dG9ucyBkZWZpbmVkIGluIHRoaXMNCiAqICBjYWxlbmRhci4NCiAqLw0KQ2FsZW5kYXIuY2VsbENsaWNrID0gZnVuY3Rpb24oZWwpIHsNCgl2YXIgY2FsID0gZWwuY2FsZW5kYXI7DQoJdmFyIGNsb3NpbmcgPSBmYWxzZTsNCgl2YXIgbmV3ZGF0ZSA9IGZhbHNlOw0KCXZhciBkYXRlID0gbnVsbDsNCglpZiAodHlwZW9mIGVsLm5hdnR5cGUgPT0gInVuZGVmaW5lZCIpIHsNCgkJQ2FsZW5kYXIucmVtb3ZlQ2xhc3MoY2FsLmN1cnJlbnREYXRlRWwsICJzZWxlY3RlZCIpOw0KCQlDYWxlbmRhci5hZGRDbGFzcyhlbCwgInNlbGVjdGVkIik7DQoJCWNsb3NpbmcgPSAoY2FsLmN1cnJlbnREYXRlRWwgPT0gZWwpOw0KCQlpZiAoIWNsb3NpbmcpIHsNCgkJCWNhbC5jdXJyZW50RGF0ZUVsID0gZWw7DQoJCX0NCgkJY2FsLmRhdGUuc2V0RGF0ZShlbC5jYWxkYXRlKTsNCgkJZGF0ZSA9IGNhbC5kYXRlOw0KCQluZXdkYXRlID0gdHJ1ZTsNCgl9IGVsc2Ugew0KCQlpZiAoZWwubmF2dHlwZSA9PSAyMDApIHsNCgkJCUNhbGVuZGFyLnJlbW92ZUNsYXNzKGVsLCAiaGlsaXRlIik7DQoJCQljYWwuY2FsbENsb3NlSGFuZGxlcigpOw0KCQkJcmV0dXJuOw0KCQl9DQoJCWRhdGUgPSAoZWwubmF2dHlwZSA9PSAwKSA\/IG5ldyBEYXRlKCkgOiBuZXcgRGF0ZShjYWwuZGF0ZSk7DQoJCXZhciB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpOw0KCQl2YXIgbW9uID0gZGF0ZS5nZXRNb250aCgpOw0KCQlmdW5jdGlvbiBzZXRNb250aChtKSB7DQoJCQl2YXIgZGF5ID0gZGF0ZS5nZXREYXRlKCk7DQoJCQl2YXIgbWF4ID0gZGF0ZS5nZXRNb250aERheXMobSk7DQoJCQlpZiAoZGF5ID4gbWF4KSB7DQoJCQkJZGF0ZS5zZXREYXRlKG1heCk7DQoJCQl9DQoJCQlkYXRlLnNldE1vbnRoKG0pOw0KCQl9Ow0KCQlzd2l0Y2ggKGVsLm5hdnR5cGUpIHsNCgkJICAgIGNhc2UgLTI6DQoJCQlpZiAoeWVhciA+IGNhbC5taW5ZZWFyKSB7DQoJCQkJZGF0ZS5zZXRGdWxsWWVhcih5ZWFyIC0gMSk7DQoJCQl9DQoJCQlicmVhazsNCgkJICAgIGNhc2UgLTE6DQoJCQlpZiAobW9uID4gMCkgew0KCQkJCXNldE1vbnRoKG1vbiAtIDEpOw0KCQkJfSBlbHNlIGlmICh5ZWFyLS0gPiBjYWwubWluWWVhcikgew0KCQkJCWRhdGUuc2V0RnVsbFllYXIoeWVhcik7DQoJCQkJc2V0TW9udGgoMTEpOw0KCQkJfQ0KCQkJYnJlYWs7DQoJCSAgICBjYXNlIDE6DQoJCQlpZiAobW9uIDwgMTEpIHsNCgkJCQlzZXRNb250aChtb24gKyAxKTsNCgkJCX0gZWxzZSBpZiAoeWVhciA8IGNhbC5tYXhZZWFyKSB7DQoJCQkJZGF0ZS5zZXRGdWxsWWVhcih5ZWFyICsgMSk7DQoJCQkJc2V0TW9udGgoMCk7DQoJCQl9DQoJCQlicmVhazsNCgkJICAgIGNhc2UgMjoNCgkJCWlmICh5ZWFyIDwgY2FsLm1heFllYXIpIHsNCgkJCQlkYXRlLnNldEZ1bGxZZWFyKHllYXIgKyAxKTsNCgkJCX0NCgkJCWJyZWFrOw0KCQkgICAgY2FzZSAxMDA6DQoJCQljYWwuc2V0TW9uZGF5Rmlyc3QoIWNhbC5tb25kYXlGaXJzdCk7DQoJCQlyZXR1cm47DQoJCX0NCgkJaWYgKCFkYXRlLmVxdWFsc1RvKGNhbC5kYXRlKSkgew0KCQkJY2FsLnNldERhdGUoZGF0ZSk7DQoJCQluZXdkYXRlID0gZWwubmF2dHlwZSA9PSAwOw0KCQl9DQoJfQ0KCWlmIChuZXdkYXRlKSB7DQoJCWNhbC5jYWxsSGFuZGxlcigpOw0KCX0NCglpZiAoY2xvc2luZykgew0KCQlDYWxlbmRhci5yZW1vdmVDbGFzcyhlbCwgImhpbGl0ZSIpOw0KCQljYWwuY2FsbENsb3NlSGFuZGxlcigpOw0KCX0NCn07DQoNCi8vIEVORDogQ0FMRU5EQVIgU1RBVElDIEZVTkNUSU9OUw0KDQovLyBCRUdJTjogQ0FMRU5EQVIgT0JKRUNUIEZVTkNUSU9OUw0KDQovKioNCiAqICBUaGlzIGZ1bmN0aW9uIGNyZWF0ZXMgdGhlIGNhbGVuZGFyIGluc2lkZSB0aGUgZ2l2ZW4gcGFyZW50LiAgSWYgX3BhciBpcw0KICogIG51bGwgdGhhbiBpdCBjcmVhdGVzIGEgcG9wdXAgY2FsZW5kYXIgaW5zaWRlIHRoZSBCT0RZIGVsZW1lbnQuICBJZiBfcGFyIGlzDQogKiAgYW4gZWxlbWVudCwgYmUgaXQgQk9EWSwgdGhlbiBpdCBjcmVhdGVzIGEgbm9uLXBvcHVwIGNhbGVuZGFyIChzdGlsbA0KICogIGhpZGRlbikuICBTb21lIHByb3BlcnRpZXMgbmVlZCB0byBiZSBzZXQgYmVmb3JlIGNhbGxpbmcgdGhpcyBmdW5jdGlvbi4NCiAqLw0KQ2FsZW5kYXIucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uIChfcGFyKSB7DQoJdmFyIHBhcmVudCA9IG51bGw7DQoJaWYgKCEgX3Bhcikgew0KCQkvLyBkZWZhdWx0IHBhcmVudCBpcyB0aGUgZG9jdW1lbnQgYm9keSwgaW4gd2hpY2ggY2FzZSB3ZSBjcmVhdGUNCgkJLy8gYSBwb3B1cCBjYWxlbmRhci4NCgkJcGFyZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImJvZHkiKVswXTsNCgkJdGhpcy5pc1BvcHVwID0gdHJ1ZTsNCgl9IGVsc2Ugew0KCQlwYXJlbnQgPSBfcGFyOw0KCQl0aGlzLmlzUG9wdXAgPSBmYWxzZTsNCgl9DQoJdGhpcy5kYXRlID0gdGhpcy5kYXRlU3RyID8gbmV3IERhdGUodGhpcy5kYXRlU3RyKSA6IG5ldyBEYXRlKCk7DQoNCgl2YXIgdGFibGUgPSBDYWxlbmRhci5jcmVhdGVFbGVtZW50KCJ0YWJsZSIpOw0KCXRoaXMudGFibGUgPSB0YWJsZTsNCgl0YWJsZS5jZWxsU3BhY2luZyA9IDA7DQoJdGFibGUuY2VsbFBhZGRpbmcgPSAwOw0KCXRhYmxlLmNhbGVuZGFyID0gdGhpczsNCglDYWxlbmRhci5hZGRFdmVudCh0YWJsZSwgIm1vdXNlZG93biIsIENhbGVuZGFyLnRhYmxlTW91c2VEb3duKTsNCg0KCXZhciBkaXYgPSBDYWxlbmRhci5jcmVhdGVFbGVtZW50KCJkaXYiKTsNCgl0aGlzLmVsZW1lbnQgPSBkaXY7DQoJZGl2LmNsYXNzTmFtZSA9ICJjYWxlbmRhciI7DQoJaWYgKHRoaXMuaXNQb3B1cCkgew0KCQlkaXYuc3R5bGUucG9zaXRpb24gPSAiYWJzb2x1dGUiOw0KCQlkaXYuc3R5bGUuZGlzcGxheSA9ICJub25lIjsNCgl9DQoJZGl2LmFwcGVuZENoaWxkKHRhYmxlKTsNCg0KCXZhciB0aGVhZCA9IENhbGVuZGFyLmNyZWF0ZUVsZW1lbnQoInRoZWFkIiwgdGFibGUpOw0KCXZhciBjZWxsID0gbnVsbDsNCgl2YXIgcm93ID0gbnVsbDsNCg0KCXZhciBjYWwgPSB0aGlzOw0KCXZhciBoaCA9IGZ1bmN0aW9uICh0ZXh0LCBjcywgbmF2dHlwZSkgew0KCQljZWxsID0gQ2FsZW5kYXIuY3JlYXRlRWxlbWVudCgidGQiLCByb3cpOw0KCQljZWxsLmNvbFNwYW4gPSBjczsNCgkJY2VsbC5jbGFzc05hbWUgPSAiYnV0dG9uIjsNCgkJQ2FsZW5kYXIuX2FkZF9ldnMoY2VsbCk7DQoJCWNlbGwuY2FsZW5kYXIgPSBjYWw7DQoJCWNlbGwubmF2dHlwZSA9IG5hdnR5cGU7DQoJCWlmICh0ZXh0LnN1YnN0cigwLCAxKSAhPSAiJiIpIHsNCgkJCWNlbGwuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodGV4dCkpOw0KCQl9DQoJCWVsc2Ugew0KCQkJLy8gRklYTUU6IGRpcnR5IGhhY2sgZm9yIGVudGl0aWVzDQoJCQljZWxsLmlubmVySFRNTCA9IHRleHQ7DQoJCX0NCgkJcmV0dXJuIGNlbGw7DQoJfTsNCg0KCXJvdyA9IENhbGVuZGFyLmNyZWF0ZUVsZW1lbnQoInRyIiwgdGhlYWQpOw0KCXZhciB0aXRsZV9sZW5ndGggPSA2Ow0KCSh0aGlzLmlzUG9wdXApICYmIC0tdGl0bGVfbGVuZ3RoOw0KCSh0aGlzLndlZWtOdW1iZXJzKSAmJiArK3RpdGxlX2xlbmd0aDsNCg0KCWhoKCItIiwgMSwgMTAwKS50dGlwID0gQ2FsZW5kYXIuX1RUWyJUT0dHTEUiXTsNCgl0aGlzLnRpdGxlID0gaGgoIiIsIHRpdGxlX2xlbmd0aCwgMzAwKTsNCgl0aGlzLnRpdGxlLmNsYXNzTmFtZSA9ICJ0aXRsZSI7DQoJaWYgKHRoaXMuaXNQb3B1cCkgew0KCQl0aGlzLnRpdGxlLnR0aXAgPSBDYWxlbmRhci5fVFRbIkRSQUdfVE9fTU9WRSJdOw0KCQl0aGlzLnRpdGxlLnN0eWxlLmN1cnNvciA9ICJtb3ZlIjsNCgkJaGgoIiYjeDAwZDc7IiwgMSwgMjAwKS50dGlwID0gQ2FsZW5kYXIuX1RUWyJDTE9TRSJdOw0KCX0NCg0KCXJvdyA9IENhbGVuZGFyLmNyZWF0ZUVsZW1lbnQoInRyIiwgdGhlYWQpOw0KCXJvdy5jbGFzc05hbWUgPSAiaGVhZHJvdyI7DQoNCgl0aGlzLl9uYXZfcHkgPSBoaCgiJiN4MDBhYjsiLCAxLCAtMik7DQoJdGhpcy5fbmF2X3B5LnR0aXAgPSBDYWxlbmRhci5fVFRbIlBSRVZfWUVBUiJdOw0KDQoJdGhpcy5fbmF2X3BtID0gaGgoIiYjeDIwMzk7IiwgMSwgLTEpOw0KCXRoaXMuX25hdl9wbS50dGlwID0gQ2FsZW5kYXIuX1RUWyJQUkVWX01PTlRIIl07DQoNCgl0aGlzLl9uYXZfbm93ID0gaGgoQ2FsZW5kYXIuX1RUWyJUT0RBWSJdLCB0aGlzLndlZWtOdW1iZXJzID8gNCA6IDMsIDApOw0KCXRoaXMuX25hdl9ub3cudHRpcCA9IENhbGVuZGFyLl9UVFsiR09fVE9EQVkiXTsNCg0KCXRoaXMuX25hdl9ubSA9IGhoKCImI3gyMDNhOyIsIDEsIDEpOw0KCXRoaXMuX25hdl9ubS50dGlwID0gQ2FsZW5kYXIuX1RUWyJORVhUX01PTlRIIl07DQoNCgl0aGlzLl9uYXZfbnkgPSBoaCgiJiN4MDBiYjsiLCAxLCAyKTsNCgl0aGlzLl9uYXZfbnkudHRpcCA9IENhbGVuZGFyLl9UVFsiTkVYVF9ZRUFSIl0NCg0KCS8vIGRheSBuYW1lcw0KCXJvdyA9IENhbGVuZGFyLmNyZWF0ZUVsZW1lbnQoInRyIiwgdGhlYWQpOw0KCXJvdy5jbGFzc05hbWUgPSAiZGF5bmFtZXMiOw0KCWlmICh0aGlzLndlZWtOdW1iZXJzKSB7DQoJCWNlbGwgPSBDYWxlbmRhci5jcmVhdGVFbGVtZW50KCJ0ZCIsIHJvdyk7DQoJCWNlbGwuY2xhc3NOYW1lID0gIm5hbWUgd24iOw0KCQljZWxsLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKENhbGVuZGFyLl9UVFsiV0siXSkpOw0KCX0NCglmb3IgKHZhciBpID0gNzsgaSA+IDA7IC0taSkgew0KCQljZWxsID0gQ2FsZW5kYXIuY3JlYXRlRWxlbWVudCgidGQiLCByb3cpOw0KCQljZWxsLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCIiKSk7DQoJCWlmICghaSkgew0KCQkJY2VsbC5uYXZ0eXBlID0gMTAwOw0KCQkJY2VsbC5jYWxlbmRhciA9IHRoaXM7DQoJCQlDYWxlbmRhci5fYWRkX2V2cyhjZWxsKTsNCgkJfQ0KCX0NCgl0aGlzLmZpcnN0ZGF5bmFtZSA9ICh0aGlzLndlZWtOdW1iZXJzKSA\\/IENhbGVuZGFyLmdldEVsZW1lbnQoZXYpIDogQ2FsZW5kYXIuZ2V0VGFyZ2V0RWxlbWVudChldik7DQoJZm9yICg7IGVsICE9IG51bGwgJiYgZWwgIT0gY2FsZW5kYXIuZWxlbWVudDsgZWwgPSBlbC5wYXJlbnROb2RlKTsNCglpZiAoZWwgPT0gbnVsbCkgew0KCQkvLyBjYWxscyBjbG9zZUhhbmRsZXIgd2hpY2ggc2hvdWxkIGhpZGUgdGhlIGNhbGVuZGFyLg0KCQl3aW5kb3cuY2FsZW5kYXIuY2FsbENsb3NlSGFuZGxlcigpOw0KCQlDYWxlbmRhci5zdG9wRXZlbnQoZXYpOw0KCX0NCn07DQoNCi8qKiBTaG93cyB0aGUgY2FsZW5kYXIuICovDQpDYWxlbmRhci5wcm90b3R5cGUuc2hvdyA9IGZ1bmN0aW9uICgpIHsNCgl2YXIgcm93cyA9IHRoaXMudGFibGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInRyIik7DQoJZm9yICh2YXIgaSA9IHJvd3MubGVuZ3RoOyBpID4gMDspIHsNCgkJdmFyIHJvdyA9IHJvd3NbLS1pXTsNCgkJQ2FsZW5kYXIucmVtb3ZlQ2xhc3Mocm93LCAicm93aGlsaXRlIik7DQoJCXZhciBjZWxscyA9IHJvdy5nZXRFbGVtZW50c0J5VGFnTmFtZSgidGQiKTsNCgkJZm9yICh2YXIgaiA9IGNlbGxzLmxlbmd0aDsgaiA+IDA7KSB7DQoJCQl2YXIgY2VsbCA9IGNlbGxzWy0tal07DQoJCQlDYWxlbmRhci5yZW1vdmVDbGFzcyhjZWxsLCAiaGlsaXRlIik7DQoJCQlDYWxlbmRhci5yZW1vdmVDbGFzcyhjZWxsLCAiYWN0aXZlIik7DQoJCX0NCgl9DQoJdGhpcy5lbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAiYmxvY2siOw0KCXRoaXMuaGlkZGVuID0gZmFsc2U7DQoJaWYgKHRoaXMuaXNQb3B1cCkgew0KCQl3aW5kb3cuY2FsZW5kYXIgPSB0aGlzOw0KCQlDYWxlbmRhci5hZGRFdmVudChkb2N1bWVudCwgImtleWRvd24iLCBDYWxlbmRhci5fa2V5RXZlbnQpOw0KCQlDYWxlbmRhci5hZGRFdmVudChkb2N1bWVudCwgImtleXByZXNzIiwgQ2FsZW5kYXIuX2tleUV2ZW50KTsNCgkJQ2FsZW5kYXIuYWRkRXZlbnQoZG9jdW1lbnQsICJtb3VzZWRvd24iLCBDYWxlbmRhci5fY2hlY2tDYWxlbmRhcik7DQoJfQ0KCXRoaXMuaGlkZVNob3dDb3ZlcmVkKCk7DQp9Ow0KDQovKioNCiAqICBIaWRlcyB0aGUgY2FsZW5kYXIuICBBbHNvIHJlbW92ZXMgYW55ICJoaWxpdGUiIGZyb20gdGhlIGNsYXNzIG9mIGFueSBURA0KICogIGVsZW1lbnQuDQogKi8NCkNhbGVuZGFyLnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24gKCkgew0KCWlmICh0aGlzLmlzUG9wdXApIHsNCgkJQ2FsZW5kYXIucmVtb3ZlRXZlbnQoZG9jdW1lbnQsICJrZXlkb3duIiwgQ2FsZW5kYXIuX2tleUV2ZW50KTsNCgkJQ2FsZW5kYXIucmVtb3ZlRXZlbnQoZG9jdW1lbnQsICJrZXlwcmVzcyIsIENhbGVuZGFyLl9rZXlFdmVudCk7DQoJCUNhbGVuZGFyLnJlbW92ZUV2ZW50KGRvY3VtZW50LCAibW91c2Vkb3duIiwgQ2FsZW5kYXIuX2NoZWNrQ2FsZW5kYXIpOw0KCX0NCgl0aGlzLmVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICJub25lIjsNCgl0aGlzLmhpZGRlbiA9IHRydWU7DQoJdGhpcy5oaWRlU2hvd0NvdmVyZWQoKTsNCn07DQoNCi8qKg0KICogIFNob3dzIHRoZSBjYWxlbmRhciBhdCBhIGdpdmVuIGFic29sdXRlIHBvc2l0aW9uIChiZXdhcmUgdGhhdCwgZGVwZW5kaW5nIG9uDQogKiAgdGhlIGNhbGVuZGFyIGVsZW1lbnQgc3R5bGUgLS0gcG9zaXRpb24gcHJvcGVydHkgLS0gdGhpcyBtaWdodCBiZSByZWxhdGl2ZQ0KICogIHRvIHRoZSBwYXJlbnQncyBjb250YWluaW5nIHJlY3RhbmdsZSkuDQogKi8NCkNhbGVuZGFyLnByb3RvdHlwZS5zaG93QXQgPSBmdW5jdGlvbiAoeCwgeSkgew0KCXZhciBzID0gdGhpcy5lbGVtZW50LnN0eWxlOw0KCXMubGVmdCA9IHggKyAicHgiOw0KCXMudG9wID0geSArICJweCI7DQoJdGhpcy5zaG93KCk7DQp9Ow0KDQovKiogU2hvd3MgdGhlIGNhbGVuZGFyIG5lYXIgYSBnaXZlbiBlbGVtZW50LiAqLw0KQ2FsZW5kYXIucHJvdG90eXBlLnNob3dBdEVsZW1lbnQgPSBmdW5jdGlvbiAoZWwpIHsNCgl2YXIgcCA9IENhbGVuZGFyLmdldEFic29sdXRlUG9zKGVsKTsNCgl0aGlzLnNob3dBdChwLngsIHAueSArIGVsLm9mZnNldEhlaWdodCk7DQp9Ow0KDQovKiogQ3VzdG9taXplcyB0aGUgZGF0ZSBmb3JtYXQuICovDQpDYWxlbmRhci5wcm90b3R5cGUuc2V0RGF0ZUZvcm1hdCA9IGZ1bmN0aW9uIChzdHIpIHsNCgl0aGlzLmRhdGVGb3JtYXQgPSBzdHI7DQp9Ow0KDQovKiogQ3VzdG9taXplcyB0aGUgdG9vbHRpcCBkYXRlIGZvcm1hdC4gKi8NCkNhbGVuZGFyLnByb3RvdHlwZS5zZXRUdERhdGVGb3JtYXQgPSBmdW5jdGlvbiAoc3RyKSB7DQoJdGhpcy50dERhdGVGb3JtYXQgPSBzdHI7DQp9Ow0KDQovKioNCiAqICBUcmllcyB0byBpZGVudGlmeSB0aGUgZGF0ZSByZXByZXNlbnRlZCBpbiBhIHN0cmluZy4gIElmIHN1Y2Nlc3NmdWwgaXQgYWxzbw0KICogIGNhbGxzIHRoaXMuc2V0RGF0ZSB3aGljaCBtb3ZlcyB0aGUgY2FsZW5kYXIgdG8gdGhlIGdpdmVuIGRhdGUuDQogKi8NCkNhbGVuZGFyLnByb3RvdHlwZS5wYXJzZURhdGUgPSBmdW5jdGlvbiAoc3RyLCBmbXQpIHsNCgl2YXIgeSA9IDA7DQoJdmFyIG0gPSAtMTsNCgl2YXIgZCA9IDA7DQoJdmFyIGEgPSBzdHIuc3BsaXQoL1xXKy8pOw0KCWlmICghZm10KSB7DQoJCWZtdCA9IHRoaXMuZGF0ZUZvcm1hdDsNCgl9DQoJdmFyIGIgPSBmbXQuc3BsaXQoL1xXKy8pOw0KCXZhciBpID0gMCwgaiA9IDA7DQoJZm9yIChpID0gMDsgaSA8IGEubGVuZ3RoOyArK2kpIHsNCgkJaWYgKGJbaV0gPT0gIkQiIHx8IGJbaV0gPT0gIkREIikgew0KCQkJY29udGludWU7DQoJCX0NCgkJaWYgKGJbaV0gPT0gImQiIHx8IGJbaV0gPT0gImRkIikgew0KCQkJZCA9IHBhcnNlSW50KGFbaV0sIDEwKTsNCgkJfQ0KCQlpZiAoYltpXSA9PSAibSIgfHwgYltpXSA9PSAibW0iKSB7DQoJCQltID0gcGFyc2VJbnQoYVtpXSwgMTApIC0gMTsNCgkJfQ0KCQlpZiAoYltpXSA9PSAieSIpIHsNCgkJCXkgPSBwYXJzZUludChhW2ldLCAxMCk7DQoJCX0NCgkJaWYgKGJbaV0gPT0gInl5Iikgew0KCQkJeSA9IHBhcnNlSW50KGFbaV0sIDEwKSArIDE5MDA7DQoJCX0NCgkJaWYgKGJbaV0gPT0gIk0iIHx8IGJbaV0gPT0gIk1NIikgew0KCQkJZm9yIChqID0gMDsgaiA8IDEyOyArK2opIHsNCgkJCQlpZiAoQ2FsZW5kYXIuX01OW2pdLnN1YnN0cigwLCBhW2ldLmxlbmd0aCkudG9Mb3dlckNhc2UoKSA9PSBhW2ldLnRvTG93ZXJDYXNlKCkpIHsgbSA9IGo7IGJyZWFrOyB9DQoJCQl9DQoJCX0NCgl9DQoJaWYgKHkgIT0gMCAmJiBtICE9IC0xICYmIGQgIT0gMCkgew0KCQl0aGlzLnNldERhdGUobmV3IERhdGUoeSwgbSwgZCkpOw0KCQlyZXR1cm47DQoJfQ0KCXkgPSAwOyBtID0gLTE7IGQgPSAwOw0KCWZvciAoaSA9IDA7IGkgPCBhLmxlbmd0aDsgKytpKSB7DQoJCWlmIChhW2ldLnNlYXJjaCgvW2EtekEtWl0rLykgIT0gLTEpIHsNCgkJCXZhciB0ID0gLTE7DQoJCQlmb3IgKGogPSAwOyBqIDwgMTI7ICsraikgew0KCQkJCWlmIChDYWxlbmRhci5fTU5bal0uc3Vic3RyKDAsIGFbaV0ubGVuZ3RoKS50b0xvd2VyQ2FzZSgpID09IGFbaV0udG9Mb3dlckNhc2UoKSkgeyB0ID0gajsgYnJlYWs7IH0NCgkJCX0NCgkJCWlmICh0ICE9IC0xKSB7DQoJCQkJaWYgKG0gIT0gLTEpIHsNCgkJCQkJZCA9IG0rMTsNCgkJCQl9DQoJCQkJbSA9IHQ7DQoJCQl9DQoJCX0gZWxzZSBpZiAocGFyc2VJbnQoYVtpXSwgMTApIDw9IDEyICYmIG0gPT0gLTEpIHsNCgkJCW0gPSBhW2ldLTE7DQoJCX0gZWxzZSBpZiAocGFyc2VJbnQoYVtpXSwgMTApID4gMzEgJiYgeSA9PSAwKSB7DQoJCQl5ID0gYVtpXTsNCgkJfSBlbHNlIGlmIChkID09IDApIHsNCgkJCWQgPSBhW2ldOw0KCQl9DQoJfQ0KCWlmICh5ID09IDApIHsNCgkJdmFyIHRvZGF5ID0gbmV3IERhdGUoKTsNCgkJeSA9IHRvZGF5LmdldEZ1bGxZZWFyKCk7DQoJfQ0KCWlmIChtICE9IC0xICYmIGQgIT0gMCkgew0KCQl0aGlzLnNldERhdGUobmV3IERhdGUoeSwgbSwgZCkpOw0KCX0NCn07DQoNCkNhbGVuZGFyLnByb3RvdHlwZS5oaWRlU2hvd0NvdmVyZWQgPSBmdW5jdGlvbiAoKSB7DQoJdmFyIHRhZ3MgPSBuZXcgQXJyYXkoImFwcGxldCIsICJpZnJhbWUiLCAic2VsZWN0Iik7DQoJdmFyIGVsID0gdGhpcy5lbGVtZW50Ow0KDQoJdmFyIHAgPSBDYWxlbmRhci5nZXRBYnNvbHV0ZVBvcyhlbCk7DQoJdmFyIEVYMSA9IHAueDsNCgl2YXIgRVgyID0gZWwub2Zmc2V0V2lkdGggKyBFWDE7DQoJdmFyIEVZMSA9IHAueTsNCgl2YXIgRVkyID0gZWwub2Zmc2V0SGVpZ2h0ICsgRVkxOw0KDQoJZm9yICh2YXIgayA9IHRhZ3MubGVuZ3RoOyBrID4gMDsgKSB7DQoJCXZhciBhciA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKHRhZ3NbLS1rXSk7DQoJCXZhciBjYyA9IG51bGw7DQoNCgkJZm9yICh2YXIgaSA9IGFyLmxlbmd0aDsgaSA+IDA7KSB7DQoJCQljYyA9IGFyWy0taV07DQoNCgkJCXAgPSBDYWxlbmRhci5nZXRBYnNvbHV0ZVBvcyhjYyk7DQoJCQl2YXIgQ1gxID0gcC54Ow0KCQkJdmFyIENYMiA9IGNjLm9mZnNldFdpZHRoICsgQ1gxOw0KCQkJdmFyIENZMSA9IHAueTsNCgkJCXZhciBDWTIgPSBjYy5vZmZzZXRIZWlnaHQgKyBDWTE7DQoNCgkJCWlmICh0aGlzLmhpZGRlbiB8fCAoQ1gxID4gRVgyKSB8fCAoQ1gyIDwgRVgxKSB8fCAoQ1kxID4gRVkyKSB8fCAoQ1kyIDwgRVkxKSkgew0KCQkJCWNjLnN0eWxlLnZpc2liaWxpdHkgPSAidmlzaWJsZSI7DQoJCQl9IGVsc2Ugew0KCQkJCWNjLnN0eWxlLnZpc2liaWxpdHkgPSAiaGlkZGVuIjsNCgkJCX0NCgkJfQ0KCX0NCn07DQoNCi8qKiBJbnRlcm5hbCBmdW5jdGlvbjsgaXQgZGlzcGxheXMgdGhlIGJhciB3aXRoIHRoZSBuYW1lcyBvZiB0aGUgd2Vla2RheS4gKi8NCkNhbGVuZGFyLnByb3RvdHlwZS5fZGlzcGxheVdlZWtkYXlzID0gZnVuY3Rpb24gKCkgew0KCXZhciBNT04gPSB0aGlzLm1vbmRheUZpcnN0ID8gMCA6IDE7DQoJdmFyIFNVTiA9IHRoaXMubW9uZGF5Rmlyc3QgPyA2IDogMDsNCgl2YXIgU0FUID0gdGhpcy5tb25kYXlGaXJzdCA\/IDUgOiA2Ow0KCXZhciBjZWxsID0gdGhpcy5maXJzdGRheW5hbWU7DQoJZm9yICh2YXIgaSA9IDA7IGkgPCA3OyArK2kpIHsNCgkJY2VsbC5jbGFzc05hbWUgPSAiZGF5IG5hbWUiOw0KCQlpZiAoIWkpIHsNCgkJCWNlbGwudHRpcCA9IHRoaXMubW9uZGF5Rmlyc3QgPyBDYWxlbmRhci5fVFRbIlNVTl9GSVJTVCJdIDogQ2FsZW5kYXIuX1RUWyJNT05fRklSU1QiXTsNCgkJCWNlbGwubmF2dHlwZSA9IDEwMDsNCgkJCWNlbGwuY2FsZW5kYXIgPSB0aGlzOw0KCQkJQ2FsZW5kYXIuX2FkZF9ldnMoY2VsbCk7DQoJCX0NCgkJaWYgKGkgPT0gU1VOIHx8IGkgPT0gU0FUKSB7DQoJCQlDYWxlbmRhci5hZGRDbGFzcyhjZWxsLCAid2Vla2VuZCIpOw0KCQl9DQoJCWNlbGwuZmlyc3RDaGlsZC5kYXRhID0gQ2FsZW5kYXIuX0ROM1tpICsgMSAtIE1PTl07DQoJCWNlbGwgPSBjZWxsLm5leHRTaWJsaW5nOw0KCX0NCn07DQoNCi8qKiBJbnRlcm5hbCBmdW5jdGlvbi4gIEhpZGVzIGFsbCBjb21ibyBib3hlcyB0aGF0IG1pZ2h0IGJlIGRpc3BsYXllZC4gKi8NCkNhbGVuZGFyLnByb3RvdHlwZS5faGlkZUNvbWJvcyA9IGZ1bmN0aW9uICgpIHsNCgl0aGlzLm1vbnRoc0NvbWJvLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7DQoJdGhpcy55ZWFyc0NvbWJvLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7DQp9Ow0KDQovKiogSW50ZXJuYWwgZnVuY3Rpb24uICBTdGFydHMgZHJhZ2dpbmcgdGhlIGVsZW1lbnQuICovDQpDYWxlbmRhci5wcm90b3R5cGUuX2RyYWdTdGFydCA9IGZ1bmN0aW9uIChldikgew0KCWlmICh0aGlzLmRyYWdnaW5nKSB7DQoJCXJldHVybjsNCgl9DQoJdGhpcy5kcmFnZ2luZyA9IHRydWU7DQoJdmFyIHBvc1g7DQoJdmFyIHBvc1k7DQoJaWYgKENhbGVuZGFyLmlzX2llKSB7DQoJCXBvc1kgPSB3aW5kb3cuZXZlbnQuY2xpZW50WSArIGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wOw0KCQlwb3NYID0gd2luZG93LmV2ZW50LmNsaWVudFggKyBkb2N1bWVudC5ib2R5LnNjcm9sbExlZnQ7DQoJfSBlbHNlIHsNCgkJcG9zWSA9IGV2LmNsaWVudFkgKyB3aW5kb3cuc2Nyb2xsWTsNCgkJcG9zWCA9IGV2LmNsaWVudFggKyB3aW5kb3cuc2Nyb2xsWDsNCgl9DQoJdmFyIHN0ID0gdGhpcy5lbGVtZW50LnN0eWxlOw0KCXRoaXMueE9mZnMgPSBwb3NYIC0gcGFyc2VJbnQoc3QubGVmdCk7DQoJdGhpcy55T2ZmcyA9IHBvc1kgLSBwYXJzZUludChzdC50b3ApOw0KCXdpdGggKENhbGVuZGFyKSB7DQoJCWFkZEV2ZW50KGRvY3VtZW50LCAibW91c2Vtb3ZlIiwgY2FsRHJhZ0l0KTsNCgkJYWRkRXZlbnQoZG9jdW1lbnQsICJtb3VzZW92ZXIiLCBzdG9wRXZlbnQpOw0KCQlhZGRFdmVudChkb2N1bWVudCwgIm1vdXNldXAiLCBjYWxEcmFnRW5kKTsNCgl9DQp9Ow0KDQovLyBCRUdJTjogREFURSBPQkpFQ1QgUEFUQ0hFUw0KDQovKiogQWRkcyB0aGUgbnVtYmVyIG9mIGRheXMgYXJyYXkgdG8gdGhlIERhdGUgb2JqZWN0LiAqLw0KRGF0ZS5fTUQgPSBuZXcgQXJyYXkoMzEsMjgsMzEsMzAsMzEsMzAsMzEsMzEsMzAsMzEsMzAsMzEpOw0KDQovKiogQ29uc3RhbnRzIHVzZWQgZm9yIHRpbWUgY29tcHV0YXRpb25zICovDQpEYXRlLlNFQ09ORCA9IDEwMDAgLyogbWlsbGlzZWNvbmRzICovOw0KRGF0ZS5NSU5VVEUgPSA2MCAqIERhdGUuU0VDT05EOw0KRGF0ZS5IT1VSICAgPSA2MCAqIERhdGUuTUlOVVRFOw0KRGF0ZS5EQVkgICAgPSAyNCAqIERhdGUuSE9VUjsNCkRhdGUuV0VFSyAgID0gIDcgKiBEYXRlLkRBWTsNCg0KLyoqIFJldHVybnMgdGhlIG51bWJlciBvZiBkYXlzIGluIHRoZSBjdXJyZW50IG1vbnRoICovDQpEYXRlLnByb3RvdHlwZS5nZXRNb250aERheXMgPSBmdW5jdGlvbihtb250aCkgew0KCXZhciB5ZWFyID0gdGhpcy5nZXRGdWxsWWVhcigpOw0KCWlmICh0eXBlb2YgbW9udGggPT0gInVuZGVmaW5lZCIpIHsNCgkJbW9udGggPSB0aGlzLmdldE1vbnRoKCk7DQoJfQ0KCWlmICgoKDAgPT0gKHllYXIlNCkpICYmICggKDAgIT0gKHllYXIlMTAwKSkgfHwgKDAgPT0gKHllYXIlNDAwKSkpKSAmJiBtb250aCA9PSAxKSB7DQoJCXJldHVybiAyOTsNCgl9IGVsc2Ugew0KCQlyZXR1cm4gRGF0ZS5fTURbbW9udGhdOw0KCX0NCn07DQoNCi8qKiBSZXR1cm5zIHRoZSBudW1iZXIgb2YgdGhlIHdlZWsuICBUaGUgYWxnb3JpdGhtIHdhcyAic3RvbGVuIiBmcm9tIFBQSydzDQogKiB3ZWJzaXRlLCBob3BlIGl0J3MgY29ycmVjdCA6KSBodHRwOi8vd3d3LnhzNGFsbC5ubC9+cHBrL2pzL3dlZWsuaHRtbCAqLw0KRGF0ZS5wcm90b3R5cGUuZ2V0V2Vla051bWJlciA9IGZ1bmN0aW9uKCkgew0KCXZhciBub3cgPSBuZXcgRGF0ZSh0aGlzLmdldEZ1bGxZZWFyKCksIHRoaXMuZ2V0TW9udGgoKSwgdGhpcy5nZXREYXRlKCksIDAsIDAsIDApOw0KCXZhciB0aGVuID0gbmV3IERhdGUodGhpcy5nZXRGdWxsWWVhcigpLCAwLCAxLCAwLCAwLCAwKTsNCgl2YXIgdGltZSA9IG5vdyAtIHRoZW47DQoJdmFyIGRheSA9IHRoZW4uZ2V0RGF5KCk7DQoJKGRheSA+IDMpICYmIChkYXkgLT0gNCkgfHwgKGRheSArPSAzKTsNCglyZXR1cm4gTWF0aC5yb3VuZCgoKHRpbWUgLyBEYXRlLkRBWSkgKyBkYXkpIC8gNyk7DQp9Ow0KDQovKiogQ2hlY2tzIGRhdGVzIGVxdWFsaXR5IChpZ25vcmVzIHRpbWUpICovDQpEYXRlLnByb3RvdHlwZS5lcXVhbHNUbyA9IGZ1bmN0aW9uKGRhdGUpIHsNCglyZXR1cm4gKCh0aGlzLmdldEZ1bGxZZWFyKCkgPT0gZGF0ZS5nZXRGdWxsWWVhcigpKSAmJg0KCQkodGhpcy5nZXRNb250aCgpID09IGRhdGUuZ2V0TW9udGgoKSkgJiYNCgkJKHRoaXMuZ2V0RGF0ZSgpID09IGRhdGUuZ2V0RGF0ZSgpKSk7DQp9Ow0KDQovKiogUHJpbnRzIHRoZSBkYXRlIGluIGEgc3RyaW5nIGFjY29yZGluZyB0byB0aGUgZ2l2ZW4gZm9ybWF0LiAqLw0KRGF0ZS5wcm90b3R5cGUucHJpbnQgPSBmdW5jdGlvbiAoZnJtKSB7DQoJdmFyIHN0ciA9IG5ldyBTdHJpbmcoZnJtKTsNCgl2YXIgbSA9IHRoaXMuZ2V0TW9udGgoKTsNCgl2YXIgZCA9IHRoaXMuZ2V0RGF0ZSgpOw0KCXZhciB5ID0gdGhpcy5nZXRGdWxsWWVhcigpOw0KCXZhciB3biA9IHRoaXMuZ2V0V2Vla051bWJlcigpOw0KCXZhciB3ID0gdGhpcy5nZXREYXkoKTsNCgl2YXIgcyA9IG5ldyBBcnJheSgpOw0KCXNbImQiXSA9IGQ7DQoJc1siZGQiXSA9IChkIDwgMTApID8gKCIwIiArIGQpIDogZDsNCglzWyJtIl0gPSAxK207DQoJc1sibW0iXSA9IChtIDwgOSkgPyAoIjAiICsgKDErbSkpIDogKDErbSk7DQoJc1sieSJdID0geTsNCglzWyJ5eSJdID0gbmV3IFN0cmluZyh5KS5zdWJzdHIoMiwgMik7DQoJc1sidyJdID0gd247DQoJc1sid3ciXSA9ICh3biA8IDEwKSA\/ICgiMCIgKyB3bikgOiB3bjsNCgl3aXRoIChDYWxlbmRhcikgew0KCQlzWyJEIl0gPSBfRE4zW3ddOw0KCQlzWyJERCJdID0gX0ROW3ddOw0KCQlzWyJNIl0gPSBfTU4zW21dOw0KCQlzWyJNTSJdID0gX01OW21dOw0KCX0NCgl2YXIgcmUgPSAvKC4qKShcV3xeKShkfGRkfG18bW18eXx5eXxNTXxNfEREfER8d3x3dykoXFd8JCkoLiopLzsNCgl3aGlsZSAocmUuZXhlYyhzdHIpICE9IG51bGwpIHsNCgkJc3RyID0gUmVnRXhwLiQxICsgUmVnRXhwLiQyICsgc1tSZWdFeHAuJDNdICsgUmVnRXhwLiQ0ICsgUmVnRXhwLiQ1Ow0KCX0NCglyZXR1cm4gc3RyOw0KfTsNCg0KLy8gRU5EOiBEQVRFIE9CSkVDVCBQQVRDSEVTDQoNCi8vIGdsb2JhbCBvYmplY3QgdGhhdCByZW1lbWJlcnMgdGhlIGNhbGVuZGFyDQp3aW5kb3cuY2FsZW5kYXIgPSBudWxsOw0K",
    "size": "34794"
}