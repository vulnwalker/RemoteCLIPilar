{
    "namaFile": "lib\/PHPExcel\/Classes\/PHPExcel\/locale\/de\/functions",
    "lastUpdate": "2017-12-25+01:39:38.00",
    "contentFile": "\/Dny0vS2xlaW5zY2hyZWlidW5nIHdpcmQgdW50ZXJzY2hpZWRlbikNCkZJWEVECQkJPSBGRVNUCQkJCSMjCUZvcm1hdGllcnQgZWluZSBaYWhsIGFscyBUZXh0IG1pdCBlaW5lciBmZXN0ZW4gQW56YWhsIHZvbiBEZXppbWFsc3RlbGxlbg0KSklTCQkJPSBKSVMJCQkJIyMJS29udmVydGllcnQgU0ItVGV4dCBpbiBlaW5lciBaZWljaGVuZm9sZ2UgKGxhdGVpbmlzY2hlIEJ1Y2hzdGFiZW4gb2RlciBLYXRha2FuYSkgaW4gREItVGV4dA0KTEVGVAkJCT0gTElOS1MJCQkJIyMJR2lidCBkaWUgWmVpY2hlbiBnYW56IGxpbmtzIGluIGVpbmVtIFRleHR3ZXJ0IHp1csO8Y2sNCkxFRlRCCQkJPSBMSU5LU0IJCQkjIwlHaWJ0IGRpZSBaZWljaGVuIGdhbnogbGlua3MgaW4gZWluZW0gVGV4dHdlcnQgenVyw7xjaw0KTEVOCQkJPSBMw4ROR0UJCQkJIyMJR2lidCBkaWUgQW56YWhsIGRlciBaZWljaGVuIGluIGVpbmVyIFplaWNoZW5mb2xnZSB6dXLDvGNrDQpMRU5CCQkJPSBMw4ROR0VCCQkJIyMJR2lidCBkaWUgQW56YWhsIGRlciBaZWljaGVuIGluIGVpbmVyIFplaWNoZW5mb2xnZSB6dXLDvGNrDQpMT1dFUgkJCT0gS0xFSU4JCQkJIyMJV2FuZGVsdCBUZXh0IGluIEtsZWluYnVjaHN0YWJlbiB1bQ0KTUlECQkJPSBURUlMCQkJCSMjCUdpYnQgZWluZSBiZXN0aW1tdGUgQW56YWhsIFplaWNoZW4gYXVzIGVpbmVyIFplaWNoZW5mb2xnZSBhYiBkZXIgdm9uIElobmVuIGFuZ2VnZWJlbmVuIFN0ZWxsZSB6dXLDvGNrDQpNSURCCQkJPSBURUlMQgkJCQkjIwlHaWJ0IGVpbmUgYmVzdGltbXRlIEFuemFobCBaZWljaGVuIGF1cyBlaW5lciBaZWljaGVuZm9sZ2UgYWIgZGVyIHZvbiBJaG5lbiBhbmdlZ2ViZW5lbiBTdGVsbGUgenVyw7xjaw0KUEhPTkVUSUMJCT0gUEhPTkVUSUMJCQkjIwlFeHRyYWhpZXJ0IGRpZSBwaG9uZXRpc2NoZW4gKEZ1cmlnYW5hLSlaZWljaGVuIGF1cyBlaW5lciBUZXh0emVpY2hlbmZvbGdlDQpQUk9QRVIJCQk9IEdST1NTMgkJCSMjCVdhbmRlbHQgZGVuIGVyc3RlbiBCdWNoc3RhYmVuIGFsbGVyIFfDtnJ0ZXIgZWluZXMgVGV4dHdlcnRzIGluIEdyb8OfYnVjaHN0YWJlbiB1bQ0KUkVQTEFDRQkJCT0gRVJTRVRaRU4JCQkjIwlFcnNldHp0IFplaWNoZW4gaW4gVGV4dA0KUkVQTEFDRUIJCT0gRVJTRVRaRU5CCQkJIyMJRXJzZXR6dCBaZWljaGVuIGluIFRleHQNClJFUFQJCQk9IFdJRURFUkhPTEVOCQkJIyMJV2llZGVyaG9sdCBlaW5lbiBUZXh0IHNvIG9mdCB3aWUgYW5nZWdlYmVuDQpSSUdIVAkJCT0gUkVDSFRTCQkJIyMJR2lidCBkaWUgWmVpY2hlbiBnYW56IHJlY2h0cyBpbiBlaW5lbSBUZXh0d2VydCB6dXLDvGNrDQpSSUdIVEIJCQk9IFJFQ0hUU0IJCQkjIwlHaWJ0IGRpZSBaZWljaGVuIGdhbnogcmVjaHRzIGluIGVpbmVtIFRleHR3ZXJ0IHp1csO8Y2sNClNFQVJDSAkJCT0gU1VDSEVOCQkJIyMJU3VjaHQgbmFjaCBlaW5lbSBUZXh0d2VydCwgZGVyIGluIGVpbmVtIGFuZGVyZW4gVGV4dHdlcnQgZW50aGFsdGVuIGlzdCAoR3Jvw58tL0tsZWluc2NocmVpYnVuZyB3aXJkIG5pY2h0IHVudGVyc2NoaWVkZW4pDQpTRUFSQ0hCCQkJPSBTVUNIRU5CCQkJIyMJU3VjaHQgbmFjaCBlaW5lbSBUZXh0d2VydCwgZGVyIGluIGVpbmVtIGFuZGVyZW4gVGV4dHdlcnQgZW50aGFsdGVuIGlzdCAoR3Jvw58tL0tsZWluc2NocmVpYnVuZyB3aXJkIG5pY2h0IHVudGVyc2NoaWVkZW4pDQpTVUJTVElUVVRFCQk9IFdFQ0hTRUxOCQkJIyMJRXJzZXR6dCBpbiBlaW5lciBaZWljaGVuZm9sZ2UgbmV1ZW4gVGV4dCBnZWdlbiBhbHRlbg0KVAkJCT0gVAkJCQkjIwlXYW5kZWx0IGRpZSB6dWdlaMO2cmlnZW4gQXJndW1lbnRlIGluIFRleHQgdW0NClRFWFQJCQk9IFRFWFQJCQkJIyMJRm9ybWF0aWVydCBlaW5lIFphaGwgdW5kIHdhbmRlbHQgc2llIGluIFRleHQgdW0NClRSSU0JCQk9IEdMw4RUVEVOCQkJIyMJRW50ZmVybnQgTGVlcnplaWNoZW4gYXVzIFRleHQNClVQUEVSCQkJPSBHUk9TUwkJCQkjIwlXYW5kZWx0IFRleHQgaW4gR3Jvw59idWNoc3RhYmVuIHVtDQpWQUxVRQkJCT0gV0VSVAkJCQkjIwlXYW5kZWx0IGVpbiBUZXh0YXJndW1lbnQgaW4gZWluZSBaYWhsIHVtDQo=",
    "size": "35921"
}