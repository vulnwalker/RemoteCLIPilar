{
    "namaFile": "lib\/PHPExcel\/Classes\/PHPExcel\/Style\/Border.php",
    "lastUpdate": "2017-12-25+01:39:38.00",
    "contentFile": "",
    "size": "9018"
}